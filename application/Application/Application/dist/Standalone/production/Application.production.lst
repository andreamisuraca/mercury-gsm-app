

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 13 15:23:31 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    30                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    31                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	text0,global,reloc=2,class=CODE,delta=1
    35                           	psect	text1,global,reloc=2,class=CODE,delta=1
    36                           	psect	text2,global,reloc=2,class=CODE,delta=1
    37                           	psect	text3,global,reloc=2,class=CODE,delta=1
    38                           	psect	text4,global,reloc=2,class=CODE,delta=1
    39                           	psect	text5,global,reloc=2,class=CODE,delta=1
    40                           	psect	text6,global,reloc=2,class=CODE,delta=1
    41                           	psect	text7,global,reloc=2,class=CODE,delta=1
    42                           	psect	text8,global,reloc=2,class=CODE,delta=1
    43                           	psect	text9,global,reloc=2,class=CODE,delta=1
    44                           	psect	text10,global,reloc=2,class=CODE,delta=1
    45                           	psect	text11,global,reloc=2,class=CODE,delta=1
    46                           	psect	text12,global,reloc=2,class=CODE,delta=1
    47                           	psect	text13,global,reloc=2,class=CODE,delta=1
    48                           	psect	text14,global,reloc=2,class=CODE,delta=1
    49                           	psect	text15,global,reloc=2,class=CODE,delta=1
    50                           	psect	text16,global,reloc=2,class=CODE,delta=1
    51                           	psect	text17,global,reloc=2,class=CODE,delta=1
    52                           	psect	text18,global,reloc=2,class=CODE,delta=1
    53                           	psect	text19,global,reloc=2,class=CODE,delta=1
    54                           	psect	text20,global,reloc=2,class=CODE,delta=1
    55                           	psect	text21,global,reloc=2,class=CODE,delta=1
    56                           	psect	text22,global,reloc=2,class=CODE,delta=1
    57                           	psect	text23,global,reloc=2,class=CODE,delta=1
    58                           	psect	text24,global,reloc=2,class=CODE,delta=1
    59                           	psect	text25,global,reloc=2,class=CODE,delta=1
    60                           	psect	text26,global,reloc=2,class=CODE,delta=1
    61                           	psect	text27,global,reloc=2,class=CODE,delta=1
    62                           	psect	text28,global,reloc=2,class=CODE,delta=1
    63                           	psect	text29,global,reloc=2,class=CODE,delta=1
    64                           	psect	text30,global,reloc=2,class=CODE,delta=1
    65                           	psect	text31,global,reloc=2,class=CODE,delta=1
    66                           	psect	text32,global,reloc=2,class=CODE,delta=1
    67                           	psect	text33,global,reloc=2,class=CODE,delta=1
    68                           	psect	text34,global,reloc=2,class=CODE,delta=1
    69                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text36,global,reloc=2,class=CODE,delta=1
    71                           	psect	text37,global,reloc=2,class=CODE,delta=1
    72                           	psect	text38,global,reloc=2,class=CODE,delta=1
    73                           	psect	text39,global,reloc=2,class=CODE,delta=1
    74                           	psect	text40,global,reloc=2,class=CODE,delta=1
    75                           	psect	text41,global,reloc=2,class=CODE,delta=1
    76                           	psect	text42,global,reloc=2,class=CODE,delta=1
    77                           	psect	text43,global,reloc=2,class=CODE,delta=1
    78                           	psect	text44,global,reloc=2,class=CODE,delta=1
    79                           	psect	text45,global,reloc=2,class=CODE,delta=1
    80                           	psect	text46,global,reloc=2,class=CODE,delta=1
    81                           	psect	text47,global,reloc=2,class=CODE,delta=1
    82                           	psect	text48,global,reloc=2,class=CODE,delta=1
    83                           	psect	text49,global,reloc=2,class=CODE,delta=1
    84                           	psect	text50,global,reloc=2,class=CODE,delta=1
    85                           	psect	text51,global,reloc=2,class=CODE,delta=1
    86                           	psect	text52,global,reloc=2,class=CODE,delta=1
    87                           	psect	text53,global,reloc=2,class=CODE,delta=1
    88                           	psect	text54,global,reloc=2,class=CODE,delta=1
    89                           	psect	text55,global,reloc=2,class=CODE,delta=1
    90                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text58,global,reloc=2,class=CODE,delta=1
    93                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text60,global,reloc=2,class=CODE,delta=1
    95                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text70,global,reloc=2,class=CODE,delta=1
   105                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text74,global,reloc=2,class=CODE,delta=1
   109                           	psect	text75,global,reloc=2,class=CODE,delta=1
   110                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text78,global,reloc=2,class=CODE,delta=1
   113                           	psect	text79,global,reloc=2,class=CODE,delta=1
   114                           	psect	text80,global,reloc=2,class=CODE,delta=1
   115                           	psect	text81,global,reloc=2,class=CODE,delta=1
   116                           	psect	text82,global,reloc=2,class=CODE,delta=1
   117                           	psect	text83,global,reloc=2,class=CODE,delta=1
   118                           	psect	text84,global,reloc=2,class=CODE,delta=1
   119                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text87,global,reloc=2,class=CODE,delta=1
   122                           	psect	text88,global,reloc=2,class=CODE,delta=1
   123                           	psect	text89,global,reloc=2,class=CODE,delta=1
   124                           	psect	text90,global,reloc=2,class=CODE,delta=1
   125                           	psect	text91,global,reloc=2,class=CODE,delta=1
   126                           	psect	text92,global,reloc=2,class=CODE,delta=1
   127                           	psect	text93,global,reloc=2,class=CODE,delta=1
   128                           	psect	text94,global,reloc=2,class=CODE,delta=1
   129                           	psect	text95,global,reloc=2,class=CODE,delta=1
   130                           	psect	text96,global,reloc=2,class=CODE,delta=1
   131                           	psect	text97,global,reloc=2,class=CODE,delta=1
   132                           	psect	text98,global,reloc=2,class=CODE,delta=1
   133                           	psect	text99,global,reloc=2,class=CODE,delta=1
   134                           	psect	text100,global,reloc=2,class=CODE,delta=1
   135                           	psect	text101,global,reloc=2,class=CODE,delta=1
   136                           	psect	text102,global,reloc=2,class=CODE,delta=1
   137                           	psect	text103,global,reloc=2,class=CODE,delta=1
   138                           	psect	text104,global,reloc=2,class=CODE,delta=1
   139                           	psect	text105,global,reloc=2,class=CODE,delta=1
   140                           	psect	text106,global,reloc=2,class=CODE,delta=1
   141                           	psect	text107,global,reloc=2,class=CODE,delta=1
   142                           	psect	text108,global,reloc=2,class=CODE,delta=1
   143                           	psect	text109,global,reloc=2,class=CODE,delta=1
   144                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text111,global,reloc=2,class=CODE,delta=1
   146                           	psect	text112,global,reloc=2,class=CODE,delta=1
   147                           	psect	text113,global,reloc=2,class=CODE,delta=1
   148                           	psect	text114,global,reloc=2,class=CODE,delta=1
   149                           	psect	text115,global,reloc=2,class=CODE,delta=1
   150                           	psect	text116,global,reloc=2,class=CODE,delta=1
   151                           	psect	text117,global,reloc=2,class=CODE,delta=1
   152                           	psect	text118,global,reloc=2,class=CODE,delta=1
   153                           	psect	text119,global,reloc=2,class=CODE,delta=1
   154                           	psect	text120,global,reloc=2,class=CODE,delta=1
   155                           	psect	text121,global,reloc=2,class=CODE,delta=1
   156                           	psect	text122,global,reloc=2,class=CODE,delta=1
   157                           	psect	text123,global,reloc=2,class=CODE,delta=1
   158                           	psect	text124,global,reloc=2,class=CODE,delta=1
   159                           	psect	text125,global,reloc=2,class=CODE,delta=1
   160                           	psect	text126,global,reloc=2,class=CODE,delta=1
   161                           	psect	text127,global,reloc=2,class=CODE,delta=1
   162                           	psect	text128,global,reloc=2,class=CODE,delta=1
   163                           	psect	text129,global,reloc=2,class=CODE,delta=1
   164                           	psect	text130,global,reloc=2,class=CODE,delta=1
   165                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=1
   166                           	psect	text132,global,reloc=2,class=CODE,delta=1
   167                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=1
   168                           	psect	text134,global,reloc=2,class=CODE,delta=1
   169                           	psect	text135,global,reloc=2,class=CODE,delta=1
   170                           	psect	text136,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text137,global,reloc=2,class=CODE,delta=1
   172                           	psect	text138,global,reloc=2,class=CODE,delta=1
   173                           	psect	text139,global,reloc=2,class=CODE,delta=1
   174                           	psect	text140,global,reloc=2,class=CODE,delta=1
   175                           	psect	text141,global,reloc=2,class=CODE,delta=1
   176                           	psect	text142,global,reloc=2,class=CODE,delta=1
   177                           	psect	text143,global,reloc=2,class=CODE,delta=1
   178                           	psect	text144,global,reloc=2,class=CODE,delta=1
   179                           	psect	text145,global,reloc=2,class=CODE,delta=1
   180                           	psect	text146,global,reloc=2,class=CODE,delta=1
   181                           	psect	text147,global,reloc=2,class=CODE,delta=1
   182                           	psect	text148,global,reloc=2,class=CODE,delta=1
   183                           	psect	text149,global,reloc=2,class=CODE,delta=1
   184                           	psect	text150,global,reloc=2,class=CODE,delta=1
   185                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   186                           	psect	text152,global,reloc=2,class=CODE,delta=1
   187                           	psect	text153,global,reloc=2,class=CODE,delta=1
   188                           	psect	text154,global,reloc=2,class=CODE,delta=1
   189                           	psect	text155,global,reloc=2,class=CODE,delta=1
   190                           	psect	text156,global,reloc=2,class=CODE,delta=1
   191                           	psect	text157,global,reloc=2,class=CODE,delta=1
   192                           	psect	text158,global,reloc=2,class=CODE,delta=1
   193                           	psect	text159,global,reloc=2,class=CODE,delta=1
   194                           	psect	text160,global,reloc=2,class=CODE,delta=1
   195                           	psect	text161,global,reloc=2,class=CODE,delta=1
   196                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   197                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   198                           	psect	text163,global,reloc=2,class=CODE,delta=1
   199                           	psect	text164,global,reloc=2,class=CODE,delta=1
   200                           	psect	text165,global,reloc=2,class=CODE,delta=1
   201                           	psect	text166,global,reloc=2,class=CODE,delta=1
   202                           	psect	text167,global,reloc=2,class=CODE,delta=1
   203                           	psect	text168,global,reloc=2,class=CODE,delta=1
   204                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   205                           	psect	text169,global,reloc=2,class=CODE,delta=1
   206                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   207                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   208                           	dabs	1,0x400,48,_BDT
   209                           	dabs	1,0x438,8,_CtrlTrfData
   210                           	dabs	1,0x430,8,_SetupPkt
   211  0000                     
   212                           ; Version 1.45
   213                           ; Generated 16/11/2017 GMT
   214                           ; 
   215                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   216                           ; All rights reserved.
   217                           ; 
   218                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   219                           ; 
   220                           ; Redistribution and use in source and binary forms, with or without modification, are
   221                           ; permitted provided that the following conditions are met:
   222                           ; 
   223                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   224                           ;        conditions and the following disclaimer.
   225                           ; 
   226                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   227                           ;        of conditions and the following disclaimer in the documentation and/or other
   228                           ;        materials provided with the distribution.
   229                           ; 
   230                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   231                           ;        software without specific prior written permission.
   232                           ; 
   233                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   234                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   235                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   236                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   237                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   238                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   239                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   240                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   241                           ; 
   242                           ; 
   243                           ; Code-generator required, PIC18F46J50 Definitions
   244                           ; 
   245                           ; SFR Addresses
   246  0000                     
   247                           	psect	idataBANK1
   248  005F3A                     __pidataBANK1:
   249                           	opt stack 0
   250                           
   251                           ;initializer for MyApp_Task@countRelay1
   252  005F3A  01                 	db	1
   253                           
   254                           ;initializer for InitGprsNetwork@GprsInitSts
   255  005F3B  01                 	db	1
   256                           
   257                           	psect	idataBANK2
   258  005EBE                     __pidataBANK2:
   259                           	opt stack 0
   260                           
   261                           ;initializer for Terminal@EchoOption
   262  005EBE  01                 	db	1
   263                           
   264                           ;initializer for _MainSystemTimebaseFlag
   265  005EBF  01                 	db	1
   266                           
   267                           ;initializer for _ConnTimeout
   268  005EC0  00                 	db	0
   269  005EC1  01                 	db	1
   270  005EC2  0000               	dw	0
   271  005EC4  0000               	dw	0
   272  005EC6  0000               	dw	0
   273  005EC8  0000               	dw	0
   274  005ECA  00                 	db	0
   275                           
   276                           	psect	idataBANK3
   277  0056C8                     __pidataBANK3:
   278                           	opt stack 0
   279                           
   280                           ;initializer for ModemEvtParser@F9088
   281  0056C8  2B                 	db	43
   282  0056C9  43                 	db	67
   283  0056CA  4D                 	db	77
   284  0056CB  54                 	db	84
   285  0056CC  49                 	db	73
   286                           
   287                           ;initializer for ModemEvtParser@F9086
   288  0056CD  52                 	db	82
   289  0056CE  49                 	db	73
   290  0056CF  4E                 	db	78
   291  0056D0  47                 	db	71
   292                           
   293                           ;initializer for MyApp_Task@F8993
   294  0056D1  50                 	db	80
   295  0056D2  01                 	db	1
   296                           
   297                           ;initializer for MyApp_Task@F8990
   298  0056D3  50                 	db	80
   299  0056D4  00                 	db	0
   300                           
   301                           ;initializer for MyApp_Task@countRelay2
   302  0056D5  0001               	dw	1
   303                           
   304                           ;initializer for triggerRelay@F8966
   305  0056D7  50                 	db	80
   306  0056D8  00                 	db	0
   307                           
   308                           ;initializer for Term_MainSm@TermDelay
   309  0056D9  01                 	db	1
   310  0056DA  01                 	db	1
   311  0056DB  0000               	dw	0
   312  0056DD  0000               	dw	0
   313  0056DF  0000               	dw	0
   314  0056E1  0000               	dw	0
   315  0056E3  00                 	db	0
   316                           
   317                           ;initializer for _ConnWait
   318  0056E4  00                 	db	0
   319  0056E5  01                 	db	1
   320  0056E6  0000               	dw	0
   321  0056E8  0000               	dw	0
   322  0056EA  0000               	dw	0
   323  0056EC  0000               	dw	0
   324  0056EE  00                 	db	0
   325                           
   326                           ;initializer for SendSmsSm@SwTimer
   327  0056EF  01                 	db	1
   328  0056F0  01                 	db	1
   329  0056F1  0000               	dw	0
   330  0056F3  0000               	dw	0
   331  0056F5  0000               	dw	0
   332  0056F7  0000               	dw	0
   333  0056F9  00                 	db	0
   334                           
   335                           ;initializer for CheckModem@Timeout
   336  0056FA  00                 	db	0
   337  0056FB  01                 	db	1
   338  0056FC  0000               	dw	0
   339  0056FE  0000               	dw	0
   340  005700  0000               	dw	0
   341  005702  0000               	dw	0
   342  005704  00                 	db	0
   343                           
   344                           ;initializer for MyApp_Task@blickTicks
   345  005705  FFFF               	dw	65535
   346                           
   347                           	psect	idataBANK4
   348  005E24                     __pidataBANK4:
   349                           	opt stack 0
   350                           
   351                           ;initializer for MyApp_Task@F8999
   352  005E24  33                 	db	51
   353  005E25  32                 	db	50
   354  005E26  30                 	db	48
   355  005E27  30                 	db	48
   356  005E28  32                 	db	50
   357  005E29  37                 	db	55
   358  005E2A  36                 	db	54
   359  005E2B  33                 	db	51
   360  005E2C  31                 	db	49
   361  005E2D  38                 	db	56
   362                           
   363                           ;initializer for ModemEvtParser@F9090
   364  005E2E  43                 	db	67
   365  005E2F  61                 	db	97
   366  005E30  6C                 	db	108
   367  005E31  6C                 	db	108
   368  005E32  20                 	db	32
   369  005E33  52                 	db	82
   370  005E34  65                 	db	101
   371  005E35  61                 	db	97
   372  005E36  64                 	db	100
   373  005E37  79                 	db	121
   374                           
   375                           	psect	idataBANK5
   376  005248                     __pidataBANK5:
   377                           	opt stack 0
   378                           
   379                           ;initializer for _TaskTable
   380  005248  18                 	db	low _Mdm_DrvMainFn
   381  005249  5F                 	db	high _Mdm_DrvMainFn
   382  00524A  00                 	db	0
   383  00524B  0000               	dw	0
   384  00524D  000A               	dw	10
   385  00524F  00                 	db	0
   386  005250  A6                 	db	low _I2cSlv_MainTask
   387  005251  50                 	db	high _I2cSlv_MainTask
   388  005252  00                 	db	0
   389  005253  0000               	dw	0
   390  005255  0001               	dw	1
   391  005257  00                 	db	0
   392  005258  98                 	db	low _Mdm_MainTask
   393  005259  52                 	db	high _Mdm_MainTask
   394  00525A  00                 	db	0
   395  00525B  0000               	dw	0
   396  00525D  0001               	dw	1
   397  00525F  00                 	db	0
   398  005260  68                 	db	low _MdmHttp_MainTask
   399  005261  54                 	db	high _MdmHttp_MainTask
   400  005262  00                 	db	0
   401  005263  0000               	dw	0
   402  005265  0001               	dw	1
   403  005267  00                 	db	0
   404  005268  64                 	db	low _UsbDevice_MainTask
   405  005269  5B                 	db	high _UsbDevice_MainTask
   406  00526A  00                 	db	0
   407  00526B  0000               	dw	0
   408  00526D  0001               	dw	1
   409  00526F  00                 	db	0
   410  005270  D0                 	db	low _Wdg_MainTask
   411  005271  5B                 	db	high _Wdg_MainTask
   412  005272  00                 	db	0
   413  005273  0000               	dw	0
   414  005275  0064               	dw	100
   415  005277  00                 	db	0
   416  005278  7A                 	db	low _Led_MainTask
   417  005279  36                 	db	high _Led_MainTask
   418  00527A  00                 	db	0
   419  00527B  0000               	dw	0
   420  00527D  0032               	dw	50
   421  00527F  00                 	db	0
   422  005280  A6                 	db	low _Rtcm_MainTask
   423  005281  47                 	db	high _Rtcm_MainTask
   424  005282  00                 	db	0
   425  005283  0000               	dw	0
   426  005285  0064               	dw	100
   427  005287  00                 	db	0
   428  005288  6A                 	db	low _Term_MainTask
   429  005289  5D                 	db	high _Term_MainTask
   430  00528A  00                 	db	0
   431  00528B  0000               	dw	0
   432  00528D  0001               	dw	1
   433  00528F  00                 	db	0
   434  005290  C0                 	db	low _MyApp_Task
   435  005291  48                 	db	high _MyApp_Task
   436  005292  00                 	db	0
   437  005293  0000               	dw	0
   438  005295  0064               	dw	100
   439  005297  00                 	db	0
   440                           
   441                           	psect	mediumconst
   442  00FC54                     __pmediumconst:
   443                           	opt stack 0
   444  00FC54  00                 	db	0
   445  00FC55                     _USB_SD_Ptr:
   446                           	opt stack 0
   447  00FC55  88                 	db	low _sd000
   448  00FC56  FE                 	db	high _sd000
   449  00FC57  41                 	db	low _sd001
   450  00FC58  FE                 	db	high _sd001
   451  00FC59  1B                 	db	low _sd002
   452  00FC5A  FE                 	db	high _sd002
   453  00FC5B                     __end_of_USB_SD_Ptr:
   454                           	opt stack 0
   455  00FC5B                     _USB_CD_Ptr:
   456                           	opt stack 0
   457  00FC5B  D8                 	db	low _configDescriptor1
   458  00FC5C  FD                 	db	high _configDescriptor1
   459  00FC5D                     __end_of_USB_CD_Ptr:
   460                           	opt stack 0
   461  00FC5D                     _TaskNumber:
   462                           	opt stack 0
   463  00FC5D  000A               	dw	10
   464  00FC5F                     __end_of_TaskNumber:
   465                           	opt stack 0
   466  00FC5F                     _MsgFormat:
   467                           	opt stack 0
   468  00FC5F  48                 	db	72
   469  00FC60  6F                 	db	111
   470  00FC61  73                 	db	115
   471  00FC62  74                 	db	116
   472  00FC63  20                 	db	32
   473  00FC64  6D                 	db	109
   474  00FC65  65                 	db	101
   475  00FC66  73                 	db	115
   476  00FC67  73                 	db	115
   477  00FC68  61                 	db	97
   478  00FC69  67                 	db	103
   479  00FC6A  65                 	db	101
   480  00FC6B  20                 	db	32
   481  00FC6C  66                 	db	102
   482  00FC6D  6F                 	db	111
   483  00FC6E  72                 	db	114
   484  00FC6F  6D                 	db	109
   485  00FC70  61                 	db	97
   486  00FC71  74                 	db	116
   487  00FC72  3A                 	db	58
   488  00FC73  20                 	db	32
   489  00FC74  0D                 	db	13
   490  00FC75  0A                 	db	10
   491  00FC76  5B                 	db	91
   492  00FC77  6F                 	db	111
   493  00FC78  70                 	db	112
   494  00FC79  5F                 	db	95
   495  00FC7A  74                 	db	116
   496  00FC7B  79                 	db	121
   497  00FC7C  70                 	db	112
   498  00FC7D  65                 	db	101
   499  00FC7E  5D                 	db	93
   500  00FC7F  3A                 	db	58
   501  00FC80  5B                 	db	91
   502  00FC81  6F                 	db	111
   503  00FC82  70                 	db	112
   504  00FC83  5D                 	db	93
   505  00FC84  3A                 	db	58
   506  00FC85  5B                 	db	91
   507  00FC86  6C                 	db	108
   508  00FC87  65                 	db	101
   509  00FC88  6E                 	db	110
   510  00FC89  5D                 	db	93
   511  00FC8A  3A                 	db	58
   512  00FC8B  5B                 	db	91
   513  00FC8C  61                 	db	97
   514  00FC8D  64                 	db	100
   515  00FC8E  64                 	db	100
   516  00FC8F  72                 	db	114
   517  00FC90  5D                 	db	93
   518  00FC91  3A                 	db	58
   519  00FC92  5B                 	db	91
   520  00FC93  70                 	db	112
   521  00FC94  61                 	db	97
   522  00FC95  79                 	db	121
   523  00FC96  6C                 	db	108
   524  00FC97  6F                 	db	111
   525  00FC98  61                 	db	97
   526  00FC99  64                 	db	100
   527  00FC9A  5D                 	db	93
   528  00FC9B  0D                 	db	13
   529  00FC9C  0A                 	db	10
   530  00FC9D  0D                 	db	13
   531  00FC9E  0A                 	db	10
   532  00FC9F  5B                 	db	91
   533  00FCA0  6F                 	db	111
   534  00FCA1  70                 	db	112
   535  00FCA2  5F                 	db	95
   536  00FCA3  74                 	db	116
   537  00FCA4  79                 	db	121
   538  00FCA5  70                 	db	112
   539  00FCA6  65                 	db	101
   540  00FCA7  5D                 	db	93
   541  00FCA8  20                 	db	32
   542  00FCA9  3D                 	db	61
   543  00FCAA  20                 	db	32
   544  00FCAB  53                 	db	83
   545  00FCAC  4F                 	db	79
   546  00FCAD  2C                 	db	44
   547  00FCAE  53                 	db	83
   548  00FCAF  42                 	db	66
   549  00FCB0  0D                 	db	13
   550  00FCB1  0A                 	db	10
   551  00FCB2  5B                 	db	91
   552  00FCB3  6F                 	db	111
   553  00FCB4  70                 	db	112
   554  00FCB5  5D                 	db	93
   555  00FCB6  20                 	db	32
   556  00FCB7  3D                 	db	61
   557  00FCB8  20                 	db	32
   558  00FCB9  52                 	db	82
   559  00FCBA  3A                 	db	58
   560  00FCBB  20                 	db	32
   561  00FCBC  72                 	db	114
   562  00FCBD  65                 	db	101
   563  00FCBE  61                 	db	97
   564  00FCBF  64                 	db	100
   565  00FCC0  2C                 	db	44
   566  00FCC1  57                 	db	87
   567  00FCC2  3A                 	db	58
   568  00FCC3  20                 	db	32
   569  00FCC4  77                 	db	119
   570  00FCC5  72                 	db	114
   571  00FCC6  69                 	db	105
   572  00FCC7  74                 	db	116
   573  00FCC8  65                 	db	101
   574  00FCC9  0D                 	db	13
   575  00FCCA  0A                 	db	10
   576  00FCCB  5B                 	db	91
   577  00FCCC  6C                 	db	108
   578  00FCCD  65                 	db	101
   579  00FCCE  6E                 	db	110
   580  00FCCF  5D                 	db	93
   581  00FCD0  20                 	db	32
   582  00FCD1  3D                 	db	61
   583  00FCD2  20                 	db	32
   584  00FCD3  32                 	db	50
   585  00FCD4  20                 	db	32
   586  00FCD5  62                 	db	98
   587  00FCD6  79                 	db	121
   588  00FCD7  74                 	db	116
   589  00FCD8  65                 	db	101
   590  00FCD9  20                 	db	32
   591  00FCDA  41                 	db	65
   592  00FCDB  53                 	db	83
   593  00FCDC  43                 	db	67
   594  00FCDD  49                 	db	73
   595  00FCDE  49                 	db	73
   596  00FCDF  0D                 	db	13
   597  00FCE0  0A                 	db	10
   598  00FCE1  5B                 	db	91
   599  00FCE2  61                 	db	97
   600  00FCE3  64                 	db	100
   601  00FCE4  64                 	db	100
   602  00FCE5  72                 	db	114
   603  00FCE6  5D                 	db	93
   604  00FCE7  20                 	db	32
   605  00FCE8  3D                 	db	61
   606  00FCE9  20                 	db	32
   607  00FCEA  32                 	db	50
   608  00FCEB  20                 	db	32
   609  00FCEC  62                 	db	98
   610  00FCED  79                 	db	121
   611  00FCEE  74                 	db	116
   612  00FCEF  65                 	db	101
   613  00FCF0  20                 	db	32
   614  00FCF1  41                 	db	65
   615  00FCF2  53                 	db	83
   616  00FCF3  43                 	db	67
   617  00FCF4  49                 	db	73
   618  00FCF5  49                 	db	73
   619  00FCF6  0D                 	db	13
   620  00FCF7  0A                 	db	10
   621  00FCF8  5B                 	db	91
   622  00FCF9  70                 	db	112
   623  00FCFA  61                 	db	97
   624  00FCFB  79                 	db	121
   625  00FCFC  6C                 	db	108
   626  00FCFD  6F                 	db	111
   627  00FCFE  61                 	db	97
   628  00FCFF  64                 	db	100
   629  00FD00  5D                 	db	93
   630  00FD01  20                 	db	32
   631  00FD02  3D                 	db	61
   632  00FD03  20                 	db	32
   633  00FD04  6D                 	db	109
   634  00FD05  61                 	db	97
   635  00FD06  78                 	db	120
   636  00FD07  20                 	db	32
   637  00FD08  32                 	db	50
   638  00FD09  30                 	db	48
   639  00FD0A  20                 	db	32
   640  00FD0B  62                 	db	98
   641  00FD0C  79                 	db	121
   642  00FD0D  74                 	db	116
   643  00FD0E  65                 	db	101
   644  00FD0F  20                 	db	32
   645  00FD10  41                 	db	65
   646  00FD11  53                 	db	83
   647  00FD12  43                 	db	67
   648  00FD13  49                 	db	73
   649  00FD14  49                 	db	73
   650  00FD15  0D                 	db	13
   651  00FD16  0A                 	db	10
   652  00FD17  0D                 	db	13
   653  00FD18  0A                 	db	10
   654  00FD19  54                 	db	84
   655  00FD1A  65                 	db	101
   656  00FD1B  72                 	db	114
   657  00FD1C  6D                 	db	109
   658  00FD1D  69                 	db	105
   659  00FD1E  6E                 	db	110
   660  00FD1F  61                 	db	97
   661  00FD20  6C                 	db	108
   662  00FD21  20                 	db	32
   663  00FD22  4D                 	db	77
   664  00FD23  6F                 	db	111
   665  00FD24  64                 	db	100
   666  00FD25  65                 	db	101
   667  00FD26  3A                 	db	58
   668  00FD27  20                 	db	32
   669  00FD28  43                 	db	67
   670  00FD29  4F                 	db	79
   671  00FD2A  4D                 	db	77
   672  00FD2B  4D                 	db	77
   673  00FD2C  41                 	db	65
   674  00FD2D  4E                 	db	78
   675  00FD2E  44                 	db	68
   676  00FD2F  20                 	db	32
   677  00FD30  4D                 	db	77
   678  00FD31  4F                 	db	79
   679  00FD32  44                 	db	68
   680  00FD33  45                 	db	69
   681  00FD34  0D                 	db	13
   682  00FD35  0A                 	db	10
   683  00FD36  4D                 	db	77
   684  00FD37  6F                 	db	111
   685  00FD38  64                 	db	100
   686  00FD39  65                 	db	101
   687  00FD3A  6D                 	db	109
   688  00FD3B  20                 	db	32
   689  00FD3C  54                 	db	84
   690  00FD3D  79                 	db	121
   691  00FD3E  70                 	db	112
   692  00FD3F  65                 	db	101
   693  00FD40  3A                 	db	58
   694  00FD41  20                 	db	32
   695  00FD42  47                 	db	71
   696  00FD43  53                 	db	83
   697  00FD44  4D                 	db	77
   698  00FD45  2F                 	db	47
   699  00FD46  47                 	db	71
   700  00FD47  50                 	db	80
   701  00FD48  52                 	db	82
   702  00FD49  53                 	db	83
   703  00FD4A  0D                 	db	13
   704  00FD4B  0A                 	db	10
   705  00FD4C  0D                 	db	13
   706  00FD4D  0A                 	db	10
   707  00FD4E  00                 	db	0
   708  00FD4F                     __end_of_MsgFormat:
   709                           	opt stack 0
   710  00FD4F                     _Welcome:
   711                           	opt stack 0
   712  00FD4F  2A                 	db	42
   713  00FD50  2A                 	db	42
   714  00FD51  2A                 	db	42
   715  00FD52  2A                 	db	42
   716  00FD53  2A                 	db	42
   717  00FD54  2A                 	db	42
   718  00FD55  2A                 	db	42
   719  00FD56  2A                 	db	42
   720  00FD57  2A                 	db	42
   721  00FD58  2A                 	db	42
   722  00FD59  2A                 	db	42
   723  00FD5A  2A                 	db	42
   724  00FD5B  2A                 	db	42
   725  00FD5C  2A                 	db	42
   726  00FD5D  2A                 	db	42
   727  00FD5E  2A                 	db	42
   728  00FD5F  2A                 	db	42
   729  00FD60  2A                 	db	42
   730  00FD61  2A                 	db	42
   731  00FD62  2A                 	db	42
   732  00FD63  2A                 	db	42
   733  00FD64  2A                 	db	42
   734  00FD65  2A                 	db	42
   735  00FD66  2A                 	db	42
   736  00FD67  2A                 	db	42
   737  00FD68  2A                 	db	42
   738  00FD69  2A                 	db	42
   739  00FD6A  2A                 	db	42
   740  00FD6B  2A                 	db	42
   741  00FD6C  2A                 	db	42
   742  00FD6D  2A                 	db	42
   743  00FD6E  2A                 	db	42
   744  00FD6F  2A                 	db	42
   745  00FD70  2A                 	db	42
   746  00FD71  2A                 	db	42
   747  00FD72  2A                 	db	42
   748  00FD73  2A                 	db	42
   749  00FD74  2A                 	db	42
   750  00FD75  2A                 	db	42
   751  00FD76  2A                 	db	42
   752  00FD77  2A                 	db	42
   753  00FD78  2A                 	db	42
   754  00FD79  2A                 	db	42
   755  00FD7A  2A                 	db	42
   756  00FD7B  2A                 	db	42
   757  00FD7C  2A                 	db	42
   758  00FD7D  2A                 	db	42
   759  00FD7E  2A                 	db	42
   760  00FD7F  2A                 	db	42
   761  00FD80  0D                 	db	13
   762  00FD81  0A                 	db	10
   763  00FD82  20                 	db	32
   764  00FD83  20                 	db	32
   765  00FD84  20                 	db	32
   766  00FD85  20                 	db	32
   767  00FD86  20                 	db	32
   768  00FD87  20                 	db	32
   769  00FD88  20                 	db	32
   770  00FD89  20                 	db	32
   771  00FD8A  20                 	db	32
   772  00FD8B  20                 	db	32
   773  00FD8C  20                 	db	32
   774  00FD8D  20                 	db	32
   775  00FD8E  20                 	db	32
   776  00FD8F  20                 	db	32
   777  00FD90  20                 	db	32
   778  00FD91  20                 	db	32
   779  00FD92  20                 	db	32
   780  00FD93  20                 	db	32
   781  00FD94  4D                 	db	77
   782  00FD95  45                 	db	69
   783  00FD96  52                 	db	82
   784  00FD97  43                 	db	67
   785  00FD98  55                 	db	85
   786  00FD99  52                 	db	82
   787  00FD9A  59                 	db	89
   788  00FD9B  20                 	db	32
   789  00FD9C  53                 	db	83
   790  00FD9D  59                 	db	89
   791  00FD9E  53                 	db	83
   792  00FD9F  54                 	db	84
   793  00FDA0  45                 	db	69
   794  00FDA1  4D                 	db	77
   795  00FDA2  0D                 	db	13
   796  00FDA3  0A                 	db	10
   797  00FDA4  2A                 	db	42
   798  00FDA5  2A                 	db	42
   799  00FDA6  2A                 	db	42
   800  00FDA7  2A                 	db	42
   801  00FDA8  2A                 	db	42
   802  00FDA9  2A                 	db	42
   803  00FDAA  2A                 	db	42
   804  00FDAB  2A                 	db	42
   805  00FDAC  2A                 	db	42
   806  00FDAD  2A                 	db	42
   807  00FDAE  2A                 	db	42
   808  00FDAF  2A                 	db	42
   809  00FDB0  2A                 	db	42
   810  00FDB1  2A                 	db	42
   811  00FDB2  2A                 	db	42
   812  00FDB3  2A                 	db	42
   813  00FDB4  2A                 	db	42
   814  00FDB5  2A                 	db	42
   815  00FDB6  2A                 	db	42
   816  00FDB7  2A                 	db	42
   817  00FDB8  2A                 	db	42
   818  00FDB9  2A                 	db	42
   819  00FDBA  2A                 	db	42
   820  00FDBB  2A                 	db	42
   821  00FDBC  2A                 	db	42
   822  00FDBD  2A                 	db	42
   823  00FDBE  2A                 	db	42
   824  00FDBF  2A                 	db	42
   825  00FDC0  2A                 	db	42
   826  00FDC1  2A                 	db	42
   827  00FDC2  2A                 	db	42
   828  00FDC3  2A                 	db	42
   829  00FDC4  2A                 	db	42
   830  00FDC5  2A                 	db	42
   831  00FDC6  2A                 	db	42
   832  00FDC7  2A                 	db	42
   833  00FDC8  2A                 	db	42
   834  00FDC9  2A                 	db	42
   835  00FDCA  2A                 	db	42
   836  00FDCB  2A                 	db	42
   837  00FDCC  2A                 	db	42
   838  00FDCD  2A                 	db	42
   839  00FDCE  2A                 	db	42
   840  00FDCF  2A                 	db	42
   841  00FDD0  2A                 	db	42
   842  00FDD1  2A                 	db	42
   843  00FDD2  2A                 	db	42
   844  00FDD3  2A                 	db	42
   845  00FDD4  2A                 	db	42
   846  00FDD5  0D                 	db	13
   847  00FDD6  0A                 	db	10
   848  00FDD7  00                 	db	0
   849  00FDD8                     __end_of_Welcome:
   850                           	opt stack 0
   851  00FDD8                     _configDescriptor1:
   852                           	opt stack 0
   853  00FDD8  09                 	db	9
   854  00FDD9  02                 	db	2
   855  00FDDA  43                 	db	67
   856  00FDDB  00                 	db	0
   857  00FDDC  02                 	db	2
   858  00FDDD  01                 	db	1
   859  00FDDE  00                 	db	0
   860  00FDDF  C0                 	db	192
   861  00FDE0  32                 	db	50
   862  00FDE1  09                 	db	9
   863  00FDE2  04                 	db	4
   864  00FDE3  00                 	db	0
   865  00FDE4  00                 	db	0
   866  00FDE5  01                 	db	1
   867  00FDE6  02                 	db	2
   868  00FDE7  02                 	db	2
   869  00FDE8  01                 	db	1
   870  00FDE9  00                 	db	0
   871  00FDEA  05                 	db	5
   872  00FDEB  24                 	db	36
   873  00FDEC  00                 	db	0
   874  00FDED  10                 	db	16
   875  00FDEE  01                 	db	1
   876  00FDEF  04                 	db	4
   877  00FDF0  24                 	db	36
   878  00FDF1  02                 	db	2
   879  00FDF2  02                 	db	2
   880  00FDF3  05                 	db	5
   881  00FDF4  24                 	db	36
   882  00FDF5  06                 	db	6
   883  00FDF6  00                 	db	0
   884  00FDF7  01                 	db	1
   885  00FDF8  05                 	db	5
   886  00FDF9  24                 	db	36
   887  00FDFA  01                 	db	1
   888  00FDFB  00                 	db	0
   889  00FDFC  01                 	db	1
   890  00FDFD  07                 	db	7
   891  00FDFE  05                 	db	5
   892  00FDFF  81                 	db	129
   893  00FE00  03                 	db	3
   894  00FE01  08                 	db	8
   895  00FE02  00                 	db	0
   896  00FE03  02                 	db	2
   897  00FE04  09                 	db	9
   898  00FE05  04                 	db	4
   899  00FE06  01                 	db	1
   900  00FE07  00                 	db	0
   901  00FE08  02                 	db	2
   902  00FE09  0A                 	db	10
   903  00FE0A  00                 	db	0
   904  00FE0B  00                 	db	0
   905  00FE0C  00                 	db	0
   906  00FE0D  07                 	db	7
   907  00FE0E  05                 	db	5
   908  00FE0F  02                 	db	2
   909  00FE10  02                 	db	2
   910  00FE11  40                 	db	64
   911  00FE12  00                 	db	0
   912  00FE13  00                 	db	0
   913  00FE14  07                 	db	7
   914  00FE15  05                 	db	5
   915  00FE16  82                 	db	130
   916  00FE17  02                 	db	2
   917  00FE18  40                 	db	64
   918  00FE19  00                 	db	0
   919  00FE1A  00                 	db	0
   920  00FE1B                     __end_of_configDescriptor1:
   921                           	opt stack 0
   922  00FE1B                     _sd002:
   923                           	opt stack 0
   924  00FE1B  26                 	db	38
   925  00FE1C  03                 	db	3
   926  00FE1D  0054               	dw	84
   927  00FE1F  0065               	dw	101
   928  00FE21  0072               	dw	114
   929  00FE23  006D               	dw	109
   930  00FE25  0069               	dw	105
   931  00FE27  006E               	dw	110
   932  00FE29  0061               	dw	97
   933  00FE2B  006C               	dw	108
   934  00FE2D  0020               	dw	32
   935  00FE2F  0049               	dw	73
   936  00FE31  006E               	dw	110
   937  00FE33  0074               	dw	116
   938  00FE35  0065               	dw	101
   939  00FE37  0072               	dw	114
   940  00FE39  0066               	dw	102
   941  00FE3B  0061               	dw	97
   942  00FE3D  0063               	dw	99
   943  00FE3F  0065               	dw	101
   944  00FE41                     __end_of_sd002:
   945                           	opt stack 0
   946  00FE41                     _sd001:
   947                           	opt stack 0
   948  00FE41  1E                 	db	30
   949  00FE42  03                 	db	3
   950  00FE43  004D               	dw	77
   951  00FE45  0065               	dw	101
   952  00FE47  0072               	dw	114
   953  00FE49  0063               	dw	99
   954  00FE4B  0075               	dw	117
   955  00FE4D  0072               	dw	114
   956  00FE4F  0079               	dw	121
   957  00FE51  0020               	dw	32
   958  00FE53  0053               	dw	83
   959  00FE55  0079               	dw	121
   960  00FE57  0073               	dw	115
   961  00FE59  0074               	dw	116
   962  00FE5B  0065               	dw	101
   963  00FE5D  006D               	dw	109
   964  00FE5F                     __end_of_sd001:
   965                           	opt stack 0
   966  00FE5F                     _MsgReady:
   967                           	opt stack 0
   968  00FE5F  0D                 	db	13
   969  00FE60  0A                 	db	10
   970  00FE61  53                 	db	83
   971  00FE62  79                 	db	121
   972  00FE63  73                 	db	115
   973  00FE64  74                 	db	116
   974  00FE65  65                 	db	101
   975  00FE66  6D                 	db	109
   976  00FE67  20                 	db	32
   977  00FE68  52                 	db	82
   978  00FE69  65                 	db	101
   979  00FE6A  61                 	db	97
   980  00FE6B  64                 	db	100
   981  00FE6C  79                 	db	121
   982  00FE6D  2E                 	db	46
   983  00FE6E  2E                 	db	46
   984  00FE6F  2E                 	db	46
   985  00FE70  20                 	db	32
   986  00FE71  0D                 	db	13
   987  00FE72  0A                 	db	10
   988  00FE73  0D                 	db	13
   989  00FE74  0A                 	db	10
   990  00FE75  00                 	db	0
   991  00FE76                     __end_of_MsgReady:
   992                           	opt stack 0
   993  00FE76                     _device_dsc:
   994                           	opt stack 0
   995  00FE76  12                 	db	18
   996  00FE77  01                 	db	1
   997  00FE78  0200               	dw	512
   998  00FE7A  02                 	db	2
   999  00FE7B  00                 	db	0
  1000  00FE7C  00                 	db	0
  1001  00FE7D  08                 	db	8
  1002  00FE7E  04D8               	dw	1240
  1003  00FE80  000A               	dw	10
  1004  00FE82  0100               	dw	256
  1005  00FE84  01                 	db	1
  1006  00FE85  02                 	db	2
  1007  00FE86  00                 	db	0
  1008  00FE87  01                 	db	1
  1009  00FE88                     __end_of_device_dsc:
  1010                           	opt stack 0
  1011  00FE88                     _sd000:
  1012                           	opt stack 0
  1013  00FE88  04                 	db	4
  1014  00FE89  03                 	db	3
  1015  00FE8A  0409               	dw	1033
  1016  00FE8C                     __end_of_sd000:
  1017                           	opt stack 0
  1018  0000                     _RPINR1	set	3815
  1019  0000                     _UEP0bits	set	3878
  1020  0000                     _UIEbits	set	3894
  1021  0000                     _UADDR	set	3896
  1022  0000                     _UIE	set	3894
  1023  0000                     _UEIE	set	3895
  1024  0000                     _UCFG	set	3897
  1025  0000                     _RTCCAL	set	3902
  1026  0000                     _PADCFG1bits	set	3900
  1027  0000                     _RTCCFGbits	set	3903
  1028  0000                     _DSCONLbits	set	3916
  1029  0000                     _DSGPR1	set	3919
  1030  0000                     _DSGPR0	set	3918
  1031  0000                     _DSCONHbits	set	3917
  1032  0000                     _ANCON1bits	set	3913
  1033  0000                     _UEP1	set	3879
  1034  0000                     _UEP0	set	3878
  1035  0000                     _T1CONbits	set	4045
  1036  0000                     _PORTDbits	set	3971
  1037  0000                     _USTAT	set	3940
  1038  0000                     _PIR2bits	set	4001
  1039  0000                     _UCON	set	3941
  1040  0000                     _UIRbits	set	3938
  1041  0000                     _UCONbits	set	3941
  1042  0000                     _UIR	set	3938
  1043  0000                     _UEIR	set	3939
  1044  0000                     _PIE2bits	set	4000
  1045  0000                     _BAUDCON2	set	3964
  1046  0000                     _RCSTA2	set	3996
  1047  0000                     _BAUDCON1	set	3966
  1048  0000                     _RCSTA1	set	4012
  1049  0000                     _TRISCbits	set	3988
  1050  0000                     _TXSTA2	set	4008
  1051  0000                     _TXSTA1	set	4013
  1052  0000                     _RCREG2	set	4010
  1053  0000                     _RCREG1	set	4015
  1054  0000                     _TXREG2	set	4009
  1055  0000                     _TXREG1	set	4014
  1056  0000                     _SPBRG2	set	4011
  1057  0000                     _SPBRGH2	set	3965
  1058  0000                     _SPBRG1	set	4016
  1059  0000                     _SPBRGH1	set	3967
  1060  0000                     _PR4	set	3959
  1061  0000                     _PR2	set	4043
  1062  0000                     _PIE1bits	set	3997
  1063  0000                     _IPR1bits	set	3999
  1064  0000                     _T4CONbits	set	3958
  1065  0000                     _T2CONbits	set	4042
  1066  0000                     _ALRMVALL	set	3982
  1067  0000                     _ALRMVALH	set	3983
  1068  0000                     _RTCVALH	set	3993
  1069  0000                     _RTCVALL	set	3992
  1070  0000                     _ALRMRPTbits	set	3984
  1071  0000                     _ALRMCFGbits	set	3985
  1072  0000                     _PIE3bits	set	4003
  1073  0000                     _IPR3bits	set	4005
  1074  0000                     _OSCCONbits	set	4051
  1075  0000                     _PORTEbits	set	3972
  1076  0000                     _TRISEbits	set	3990
  1077  0000                     _WDTCONbits	set	4032
  1078  0000                     _INTCON2bits	set	4081
  1079  0000                     _TRISBbits	set	3987
  1080  0000                     _OSCTUNEbits	set	3995
  1081  0000                     _SSP2CON1	set	3954
  1082  0000                     _TRISDbits	set	3989
  1083  0000                     _SSP2BUF	set	3957
  1084  0000                     _SSP2CON2bits	set	3953
  1085  0000                     _SSP2STAT	set	3955
  1086  0000                     _SSP2CON2	set	3953
  1087  0000                     _SSP2ADD	set	3956
  1088  0000                     _PIR1bits	set	3998
  1089  0000                     _PIR3bits	set	4004
  1090  0000                     _INTCON3bits	set	4080
  1091  0000                     _INTCONbits	set	4082
  1092  0000                     _RCONbits	set	4048
  1093  00FE8C                     STR_21:
  1094  00FE8C  20                 	db	32
  1095  00FE8D  4C                 	db	76	;'L'
  1096  00FE8E  61                 	db	97	;'a'
  1097  00FE8F  7A                 	db	122	;'z'
  1098  00FE90  79                 	db	121	;'y'
  1099  00FE91  20                 	db	32
  1100  00FE92  64                 	db	100	;'d'
  1101  00FE93  65                 	db	101	;'e'
  1102  00FE94  76                 	db	118	;'v'
  1103  00FE95  69                 	db	105	;'i'
  1104  00FE96  63                 	db	99	;'c'
  1105  00FE97  65                 	db	101	;'e'
  1106  00FE98  2E                 	db	46
  1107  00FE99  2E                 	db	46
  1108  00FE9A  2E                 	db	46
  1109  00FE9B  79                 	db	121	;'y'
  1110  00FE9C  6F                 	db	111	;'o'
  1111  00FE9D  75                 	db	117	;'u'
  1112  00FE9E  27                 	db	39
  1113  00FE9F  76                 	db	118	;'v'
  1114  00FEA0  65                 	db	101	;'e'
  1115  00FEA1  20                 	db	32
  1116  00FEA2  62                 	db	98	;'b'
  1117  00FEA3  65                 	db	101	;'e'
  1118  00FEA4  65                 	db	101	;'e'
  1119  00FEA5  6E                 	db	110	;'n'
  1120  00FEA6  20                 	db	32
  1121  00FEA7  74                 	db	116	;'t'
  1122  00FEA8  69                 	db	105	;'i'
  1123  00FEA9  6D                 	db	109	;'m'
  1124  00FEAA  65                 	db	101	;'e'
  1125  00FEAB  64                 	db	100	;'d'
  1126  00FEAC  2D                 	db	45
  1127  00FEAD  6F                 	db	111	;'o'
  1128  00FEAE  75                 	db	117	;'u'
  1129  00FEAF  74                 	db	116	;'t'
  1130  00FEB0  21                 	db	33
  1131  00FEB1  21                 	db	33
  1132  00FEB2  21                 	db	33
  1133  00FEB3  0D                 	db	13
  1134  00FEB4  0A                 	db	10
  1135  00FEB5  00                 	db	0
  1136  00FEB6                     STR_8:
  1137  00FEB6  41                 	db	65	;'A'
  1138  00FEB7  54                 	db	84	;'T'
  1139  00FEB8  2B                 	db	43
  1140  00FEB9  53                 	db	83	;'S'
  1141  00FEBA  41                 	db	65	;'A'
  1142  00FEBB  50                 	db	80	;'P'
  1143  00FEBC  42                 	db	66	;'B'
  1144  00FEBD  52                 	db	82	;'R'
  1145  00FEBE  3D                 	db	61	;'='
  1146  00FEBF  33                 	db	51	;'3'
  1147  00FEC0  2C                 	db	44
  1148  00FEC1  31                 	db	49	;'1'
  1149  00FEC2  2C                 	db	44
  1150  00FEC3  22                 	db	34
  1151  00FEC4  43                 	db	67	;'C'
  1152  00FEC5  6F                 	db	111	;'o'
  1153  00FEC6  6E                 	db	110	;'n'
  1154  00FEC7  74                 	db	116	;'t'
  1155  00FEC8  79                 	db	121	;'y'
  1156  00FEC9  70                 	db	112	;'p'
  1157  00FECA  65                 	db	101	;'e'
  1158  00FECB  22                 	db	34
  1159  00FECC  2C                 	db	44
  1160  00FECD  22                 	db	34
  1161  00FECE  47                 	db	71	;'G'
  1162  00FECF  50                 	db	80	;'P'
  1163  00FED0  52                 	db	82	;'R'
  1164  00FED1  53                 	db	83	;'S'
  1165  00FED2  22                 	db	34
  1166  00FED3  0D                 	db	13
  1167  00FED4  00                 	db	0
  1168  00FED5                     STR_14:
  1169  00FED5  41                 	db	65	;'A'
  1170  00FED6  54                 	db	84	;'T'
  1171  00FED7  2B                 	db	43
  1172  00FED8  48                 	db	72	;'H'
  1173  00FED9  54                 	db	84	;'T'
  1174  00FEDA  54                 	db	84	;'T'
  1175  00FEDB  50                 	db	80	;'P'
  1176  00FEDC  50                 	db	80	;'P'
  1177  00FEDD  41                 	db	65	;'A'
  1178  00FEDE  52                 	db	82	;'R'
  1179  00FEDF  41                 	db	65	;'A'
  1180  00FEE0  3D                 	db	61	;'='
  1181  00FEE1  22                 	db	34
  1182  00FEE2  43                 	db	67	;'C'
  1183  00FEE3  49                 	db	73	;'I'
  1184  00FEE4  44                 	db	68	;'D'
  1185  00FEE5  22                 	db	34
  1186  00FEE6  2C                 	db	44
  1187  00FEE7  31                 	db	49	;'1'
  1188  00FEE8  0D                 	db	13
  1189  00FEE9  00                 	db	0
  1190  00FEEA                     STR_9:
  1191  00FEEA  41                 	db	65	;'A'
  1192  00FEEB  54                 	db	84	;'T'
  1193  00FEEC  2B                 	db	43
  1194  00FEED  53                 	db	83	;'S'
  1195  00FEEE  41                 	db	65	;'A'
  1196  00FEEF  50                 	db	80	;'P'
  1197  00FEF0  42                 	db	66	;'B'
  1198  00FEF1  52                 	db	82	;'R'
  1199  00FEF2  3D                 	db	61	;'='
  1200  00FEF3  33                 	db	51	;'3'
  1201  00FEF4  2C                 	db	44
  1202  00FEF5  31                 	db	49	;'1'
  1203  00FEF6  2C                 	db	44
  1204  00FEF7  22                 	db	34
  1205  00FEF8  41                 	db	65	;'A'
  1206  00FEF9  50                 	db	80	;'P'
  1207  00FEFA  4E                 	db	78	;'N'
  1208  00FEFB  22                 	db	34
  1209  00FEFC  2C                 	db	44
  1210  00FEFD  22                 	db	34
  1211  00FEFE  00                 	db	0
  1212  00FEFF                     STR_23:
  1213  00FEFF  46                 	db	70	;'F'
  1214  00FF00  72                 	db	114	;'r'
  1215  00FF01  61                 	db	97	;'a'
  1216  00FF02  6D                 	db	109	;'m'
  1217  00FF03  65                 	db	101	;'e'
  1218  00FF04  77                 	db	119	;'w'
  1219  00FF05  6F                 	db	111	;'o'
  1220  00FF06  72                 	db	114	;'r'
  1221  00FF07  6B                 	db	107	;'k'
  1222  00FF08  20                 	db	32
  1223  00FF09  56                 	db	86	;'V'
  1224  00FF0A  65                 	db	101	;'e'
  1225  00FF0B  72                 	db	114	;'r'
  1226  00FF0C  73                 	db	115	;'s'
  1227  00FF0D  69                 	db	105	;'i'
  1228  00FF0E  6F                 	db	111	;'o'
  1229  00FF0F  6E                 	db	110	;'n'
  1230  00FF10  3A                 	db	58	;':'
  1231  00FF11  20                 	db	32
  1232  00FF12  00                 	db	0
  1233  00FF13                     STR_15:
  1234  00FF13  41                 	db	65	;'A'
  1235  00FF14  54                 	db	84	;'T'
  1236  00FF15  2B                 	db	43
  1237  00FF16  48                 	db	72	;'H'
  1238  00FF17  54                 	db	84	;'T'
  1239  00FF18  54                 	db	84	;'T'
  1240  00FF19  50                 	db	80	;'P'
  1241  00FF1A  50                 	db	80	;'P'
  1242  00FF1B  41                 	db	65	;'A'
  1243  00FF1C  52                 	db	82	;'R'
  1244  00FF1D  41                 	db	65	;'A'
  1245  00FF1E  3D                 	db	61	;'='
  1246  00FF1F  22                 	db	34
  1247  00FF20  55                 	db	85	;'U'
  1248  00FF21  52                 	db	82	;'R'
  1249  00FF22  4C                 	db	76	;'L'
  1250  00FF23  22                 	db	34
  1251  00FF24  2C                 	db	44
  1252  00FF25  22                 	db	34
  1253  00FF26  00                 	db	0
  1254  00FF27                     STR_27:
  1255  00FF27  42                 	db	66	;'B'
  1256  00FF28  75                 	db	117	;'u'
  1257  00FF29  69                 	db	105	;'i'
  1258  00FF2A  6C                 	db	108	;'l'
  1259  00FF2B  64                 	db	100	;'d'
  1260  00FF2C  20                 	db	32
  1261  00FF2D  44                 	db	68	;'D'
  1262  00FF2E  61                 	db	97	;'a'
  1263  00FF2F  74                 	db	116	;'t'
  1264  00FF30  65                 	db	101	;'e'
  1265  00FF31  3A                 	db	58	;':'
  1266  00FF32  20                 	db	32
  1267  00FF33  25                 	db	37
  1268  00FF34  73                 	db	115	;'s'
  1269  00FF35  0D                 	db	13
  1270  00FF36  0A                 	db	10
  1271  00FF37  00                 	db	0
  1272  00FF38                     STR_16:
  1273  00FF38  41                 	db	65	;'A'
  1274  00FF39  54                 	db	84	;'T'
  1275  00FF3A  2B                 	db	43
  1276  00FF3B  48                 	db	72	;'H'
  1277  00FF3C  54                 	db	84	;'T'
  1278  00FF3D  54                 	db	84	;'T'
  1279  00FF3E  50                 	db	80	;'P'
  1280  00FF3F  41                 	db	65	;'A'
  1281  00FF40  43                 	db	67	;'C'
  1282  00FF41  54                 	db	84	;'T'
  1283  00FF42  49                 	db	73	;'I'
  1284  00FF43  4F                 	db	79	;'O'
  1285  00FF44  4E                 	db	78	;'N'
  1286  00FF45  3D                 	db	61	;'='
  1287  00FF46  30                 	db	48	;'0'
  1288  00FF47  0D                 	db	13
  1289  00FF48  00                 	db	0
  1290  00FF49  41                 	db	65	;'A'
  1291  00FF4A  54                 	db	84	;'T'
  1292  00FF4B  2B                 	db	43
  1293  00FF4C  48                 	db	72	;'H'
  1294  00FF4D  54                 	db	84	;'T'
  1295  00FF4E  54                 	db	84	;'T'
  1296  00FF4F  50                 	db	80	;'P'
  1297  00FF50  53                 	db	83	;'S'
  1298  00FF51  53                 	db	83	;'S'
  1299  00FF52  4C                 	db	76	;'L'
  1300  00FF53  3D                 	db	61	;'='
  1301  00FF54  30                 	db	48	;'0'
  1302  00FF55  0D                 	db	13
  1303  00FF56  00                 	db	0
  1304  00FF57                     STR_10:
  1305  00FF57  41                 	db	65	;'A'
  1306  00FF58  54                 	db	84	;'T'
  1307  00FF59  2B                 	db	43
  1308  00FF5A  53                 	db	83	;'S'
  1309  00FF5B  41                 	db	65	;'A'
  1310  00FF5C  50                 	db	80	;'P'
  1311  00FF5D  42                 	db	66	;'B'
  1312  00FF5E  52                 	db	82	;'R'
  1313  00FF5F  3D                 	db	61	;'='
  1314  00FF60  31                 	db	49	;'1'
  1315  00FF61  2C                 	db	44
  1316  00FF62  31                 	db	49	;'1'
  1317  00FF63  0D                 	db	13
  1318  00FF64  00                 	db	0
  1319  00FF65                     STR_11:
  1320  00FF65  41                 	db	65	;'A'
  1321  00FF66  54                 	db	84	;'T'
  1322  00FF67  2B                 	db	43
  1323  00FF68  53                 	db	83	;'S'
  1324  00FF69  41                 	db	65	;'A'
  1325  00FF6A  50                 	db	80	;'P'
  1326  00FF6B  42                 	db	66	;'B'
  1327  00FF6C  52                 	db	82	;'R'
  1328  00FF6D  3D                 	db	61	;'='
  1329  00FF6E  32                 	db	50	;'2'
  1330  00FF6F  2C                 	db	44
  1331  00FF70  31                 	db	49	;'1'
  1332  00FF71  0D                 	db	13
  1333  00FF72  00                 	db	0
  1334  00FF73                     STR_13:
  1335  00FF73  41                 	db	65	;'A'
  1336  00FF74  54                 	db	84	;'T'
  1337  00FF75  2B                 	db	43
  1338  00FF76  48                 	db	72	;'H'
  1339  00FF77  54                 	db	84	;'T'
  1340  00FF78  54                 	db	84	;'T'
  1341  00FF79  50                 	db	80	;'P'
  1342  00FF7A  53                 	db	83	;'S'
  1343  00FF7B  53                 	db	83	;'S'
  1344  00FF7C  4C                 	db	76	;'L'
  1345  00FF7D  3D                 	db	61	;'='
  1346  00FF7E  31                 	db	49	;'1'
  1347  00FF7F  0D                 	db	13
  1348  00FF80  00                 	db	0
  1349  00FF81                     STR_2:
  1350  00FF81  41                 	db	65	;'A'
  1351  00FF82  54                 	db	84	;'T'
  1352  00FF83  2B                 	db	43
  1353  00FF84  49                 	db	73	;'I'
  1354  00FF85  50                 	db	80	;'P'
  1355  00FF86  52                 	db	82	;'R'
  1356  00FF87  3D                 	db	61	;'='
  1357  00FF88  39                 	db	57	;'9'
  1358  00FF89  36                 	db	54	;'6'
  1359  00FF8A  30                 	db	48	;'0'
  1360  00FF8B  30                 	db	48	;'0'
  1361  00FF8C  0D                 	db	13
  1362  00FF8D  0A                 	db	10
  1363  00FF8E  00                 	db	0
  1364  00FF8F                     STR_17:
  1365  00FF8F  41                 	db	65	;'A'
  1366  00FF90  54                 	db	84	;'T'
  1367  00FF91  2B                 	db	43
  1368  00FF92  48                 	db	72	;'H'
  1369  00FF93  54                 	db	84	;'T'
  1370  00FF94  54                 	db	84	;'T'
  1371  00FF95  50                 	db	80	;'P'
  1372  00FF96  52                 	db	82	;'R'
  1373  00FF97  45                 	db	69	;'E'
  1374  00FF98  41                 	db	65	;'A'
  1375  00FF99  44                 	db	68	;'D'
  1376  00FF9A  0D                 	db	13
  1377  00FF9B  00                 	db	0
  1378  00FF9C                     STR_18:
  1379  00FF9C  41                 	db	65	;'A'
  1380  00FF9D  54                 	db	84	;'T'
  1381  00FF9E  2B                 	db	43
  1382  00FF9F  48                 	db	72	;'H'
  1383  00FFA0  54                 	db	84	;'T'
  1384  00FFA1  54                 	db	84	;'T'
  1385  00FFA2  50                 	db	80	;'P'
  1386  00FFA3  54                 	db	84	;'T'
  1387  00FFA4  45                 	db	69	;'E'
  1388  00FFA5  52                 	db	82	;'R'
  1389  00FFA6  4D                 	db	77	;'M'
  1390  00FFA7  0D                 	db	13
  1391  00FFA8  00                 	db	0
  1392  00FFA9                     STR_12:
  1393  00FFA9  41                 	db	65	;'A'
  1394  00FFAA  54                 	db	84	;'T'
  1395  00FFAB  2B                 	db	43
  1396  00FFAC  48                 	db	72	;'H'
  1397  00FFAD  54                 	db	84	;'T'
  1398  00FFAE  54                 	db	84	;'T'
  1399  00FFAF  50                 	db	80	;'P'
  1400  00FFB0  49                 	db	73	;'I'
  1401  00FFB1  4E                 	db	78	;'N'
  1402  00FFB2  49                 	db	73	;'I'
  1403  00FFB3  54                 	db	84	;'T'
  1404  00FFB4  0D                 	db	13
  1405  00FFB5  00                 	db	0
  1406  00FFB6                     STR_28:
  1407  00FFB6  4D                 	db	77	;'M'
  1408  00FFB7  61                 	db	97	;'a'
  1409  00FFB8  72                 	db	114	;'r'
  1410  00FFB9  20                 	db	32
  1411  00FFBA  31                 	db	49	;'1'
  1412  00FFBB  32                 	db	50	;'2'
  1413  00FFBC  20                 	db	32
  1414  00FFBD  32                 	db	50	;'2'
  1415  00FFBE  30                 	db	48	;'0'
  1416  00FFBF  32                 	db	50	;'2'
  1417  00FFC0  32                 	db	50	;'2'
  1418  00FFC1  00                 	db	0
  1419  00FFC2                     STR_4:
  1420  00FFC2  41                 	db	65	;'A'
  1421  00FFC3  54                 	db	84	;'T'
  1422  00FFC4  2B                 	db	43
  1423  00FFC5  43                 	db	67	;'C'
  1424  00FFC6  4D                 	db	77	;'M'
  1425  00FFC7  47                 	db	71	;'G'
  1426  00FFC8  52                 	db	82	;'R'
  1427  00FFC9  3D                 	db	61	;'='
  1428  00FFCA  31                 	db	49	;'1'
  1429  00FFCB  0D                 	db	13
  1430  00FFCC  00                 	db	0
  1431  00FFCD                     STR_5:
  1432  00FFCD  41                 	db	65	;'A'
  1433  00FFCE  54                 	db	84	;'T'
  1434  00FFCF  2B                 	db	43
  1435  00FFD0  43                 	db	67	;'C'
  1436  00FFD1  4D                 	db	77	;'M'
  1437  00FFD2  47                 	db	71	;'G'
  1438  00FFD3  53                 	db	83	;'S'
  1439  00FFD4  3D                 	db	61	;'='
  1440  00FFD5  22                 	db	34
  1441  00FFD6  00                 	db	0
  1442  00FFD7                     STR_30:
  1443  00FFD7  28                 	db	40
  1444  00FFD8  6E                 	db	110	;'n'
  1445  00FFD9  75                 	db	117	;'u'
  1446  00FFDA  6C                 	db	108	;'l'
  1447  00FFDB  6C                 	db	108	;'l'
  1448  00FFDC  29                 	db	41
  1449  00FFDD  00                 	db	0
  1450  00FFDE                     STR_3:
  1451  00FFDE  41                 	db	65	;'A'
  1452  00FFDF  54                 	db	84	;'T'
  1453  00FFE0  45                 	db	69	;'E'
  1454  00FFE1  30                 	db	48	;'0'
  1455  00FFE2  0D                 	db	13
  1456  00FFE3  0A                 	db	10
  1457  00FFE4  00                 	db	0
  1458  00FFE5                     STR_1:
  1459  00FFE5  41                 	db	65	;'A'
  1460  00FFE6  54                 	db	84	;'T'
  1461  00FFE7  0D                 	db	13
  1462  00FFE8  0A                 	db	10
  1463  00FFE9  00                 	db	0
  1464  00FFEA  41                 	db	65	;'A'
  1465  00FFEB  54                 	db	84	;'T'
  1466  00FFEC  41                 	db	65	;'A'
  1467  00FFED  0D                 	db	13
  1468  00FFEE  00                 	db	0
  1469  00FFEF  41                 	db	65	;'A'
  1470  00FFF0  54                 	db	84	;'T'
  1471  00FFF1  48                 	db	72	;'H'
  1472  00FFF2  0D                 	db	13
  1473  00FFF3  00                 	db	0
  1474  00FFF4                     STR_24:
  1475  00FFF4  2E                 	db	46
  1476  00FFF5  00                 	db	0
  1477  0000                     
  1478                           ; #config settings
  1479  00FFF6  00                 	db	0	; dummy byte at the end
  1480  0000                     
  1481                           	psect	cinit
  1482  00268A                     __pcinit:
  1483                           	opt stack 0
  1484  00268A                     start_initialization:
  1485                           	opt stack 0
  1486  00268A                     __initialization:
  1487                           	opt stack 0
  1488                           
  1489                           ; Initialize objects allocated to BANK5 (80 bytes)
  1490                           ; load TBLPTR registers with __pidataBANK5
  1491  00268A  0E48               	movlw	low __pidataBANK5
  1492  00268C  6EF6               	movwf	tblptrl,c
  1493  00268E  0E52               	movlw	high __pidataBANK5
  1494  002690  6EF7               	movwf	tblptrh,c
  1495  002692  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1496  002694  6EF8               	movwf	tblptru,c
  1497  002696  EE05  F082         	lfsr	0,__pdataBANK5
  1498  00269A  EE10 F050          	lfsr	1,80
  1499  00269E                     copy_data0:
  1500  00269E  0009               	tblrd		*+
  1501  0026A0  CFF5 FFEE          	movff	tablat,postinc0
  1502  0026A4  50E5               	movf	postdec1,w,c
  1503  0026A6  50E1               	movf	fsr1l,w,c
  1504  0026A8  E1FA               	bnz	copy_data0
  1505                           
  1506                           ; Initialize objects allocated to BANK3 (63 bytes)
  1507                           ; load TBLPTR registers with __pidataBANK3
  1508  0026AA  0EC8               	movlw	low __pidataBANK3
  1509  0026AC  6EF6               	movwf	tblptrl,c
  1510  0026AE  0E56               	movlw	high __pidataBANK3
  1511  0026B0  6EF7               	movwf	tblptrh,c
  1512  0026B2  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1513  0026B4  6EF8               	movwf	tblptru,c
  1514  0026B6  EE03  F0B9         	lfsr	0,__pdataBANK3
  1515  0026BA  EE10 F03F          	lfsr	1,63
  1516  0026BE                     copy_data1:
  1517  0026BE  0009               	tblrd		*+
  1518  0026C0  CFF5 FFEE          	movff	tablat,postinc0
  1519  0026C4  50E5               	movf	postdec1,w,c
  1520  0026C6  50E1               	movf	fsr1l,w,c
  1521  0026C8  E1FA               	bnz	copy_data1
  1522                           
  1523                           ; Initialize objects allocated to BANK2 (13 bytes)
  1524                           ; load TBLPTR registers with __pidataBANK2
  1525  0026CA  0EBE               	movlw	low __pidataBANK2
  1526  0026CC  6EF6               	movwf	tblptrl,c
  1527  0026CE  0E5E               	movlw	high __pidataBANK2
  1528  0026D0  6EF7               	movwf	tblptrh,c
  1529  0026D2  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1530  0026D4  6EF8               	movwf	tblptru,c
  1531  0026D6  EE02  F0F3         	lfsr	0,__pdataBANK2
  1532  0026DA  EE10 F00D          	lfsr	1,13
  1533  0026DE                     copy_data2:
  1534  0026DE  0009               	tblrd		*+
  1535  0026E0  CFF5 FFEE          	movff	tablat,postinc0
  1536  0026E4  50E5               	movf	postdec1,w,c
  1537  0026E6  50E1               	movf	fsr1l,w,c
  1538  0026E8  E1FA               	bnz	copy_data2
  1539                           
  1540                           ; Initialize objects allocated to BANK1 (2 bytes)
  1541                           ; load TBLPTR registers with __pidataBANK1
  1542  0026EA  0E3A               	movlw	low __pidataBANK1
  1543  0026EC  6EF6               	movwf	tblptrl,c
  1544  0026EE  0E5F               	movlw	high __pidataBANK1
  1545  0026F0  6EF7               	movwf	tblptrh,c
  1546  0026F2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1547  0026F4  6EF8               	movwf	tblptru,c
  1548  0026F6  0009               	tblrd		*+	;fetch initializer
  1549  0026F8  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1550  0026FC  0009               	tblrd		*+	;fetch initializer
  1551  0026FE  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1552                           
  1553                           ; Initialize objects allocated to BANK4 (20 bytes)
  1554                           ; load TBLPTR registers with __pidataBANK4
  1555  002702  0E24               	movlw	low __pidataBANK4
  1556  002704  6EF6               	movwf	tblptrl,c
  1557  002706  0E5E               	movlw	high __pidataBANK4
  1558  002708  6EF7               	movwf	tblptrh,c
  1559  00270A  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1560  00270C  6EF8               	movwf	tblptru,c
  1561  00270E  EE04  F0E5         	lfsr	0,__pdataBANK4
  1562  002712  EE10 F014          	lfsr	1,20
  1563  002716                     copy_data3:
  1564  002716  0009               	tblrd		*+
  1565  002718  CFF5 FFEE          	movff	tablat,postinc0
  1566  00271C  50E5               	movf	postdec1,w,c
  1567  00271E  50E1               	movf	fsr1l,w,c
  1568  002720  E1FA               	bnz	copy_data3
  1569                           
  1570                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1571  002722  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1572  002726  EE13 F020          	lfsr	1,800
  1573  00272A                     clear_0:
  1574  00272A  6AEE               	clrf	postinc0,c
  1575  00272C  50E5               	movf	postdec1,w,c
  1576  00272E  50E1               	movf	fsr1l,w,c
  1577  002730  E1FC               	bnz	clear_0
  1578  002732  50E2               	movf	fsr1h,w,c
  1579  002734  E1FA               	bnz	clear_0
  1580                           
  1581                           ; Clear objects allocated to BANK9 (200 bytes)
  1582  002736  EE09  F000         	lfsr	0,__pbssBANK9
  1583  00273A  0EC8               	movlw	200
  1584  00273C                     clear_1:
  1585  00273C  6AEE               	clrf	postinc0,c
  1586  00273E  06E8               	decf	wreg,f,c
  1587  002740  E1FD               	bnz	clear_1
  1588                           
  1589                           ; Clear objects allocated to BANK8 (200 bytes)
  1590  002742  EE08  F000         	lfsr	0,__pbssBANK8
  1591  002746  0EC8               	movlw	200
  1592  002748                     clear_2:
  1593  002748  6AEE               	clrf	postinc0,c
  1594  00274A  06E8               	decf	wreg,f,c
  1595  00274C  E1FD               	bnz	clear_2
  1596                           
  1597                           ; Clear objects allocated to BANK7 (246 bytes)
  1598  00274E  EE07  F000         	lfsr	0,__pbssBANK7
  1599  002752  0EF6               	movlw	246
  1600  002754                     clear_3:
  1601  002754  6AEE               	clrf	postinc0,c
  1602  002756  06E8               	decf	wreg,f,c
  1603  002758  E1FD               	bnz	clear_3
  1604                           
  1605                           ; Clear objects allocated to BANK6 (220 bytes)
  1606  00275A  EE06  F000         	lfsr	0,__pbssBANK6
  1607  00275E  0EDC               	movlw	220
  1608  002760                     clear_4:
  1609  002760  6AEE               	clrf	postinc0,c
  1610  002762  06E8               	decf	wreg,f,c
  1611  002764  E1FD               	bnz	clear_4
  1612                           
  1613                           ; Clear objects allocated to BANK5 (130 bytes)
  1614  002766  EE05  F000         	lfsr	0,__pbssBANK5
  1615  00276A  0E82               	movlw	130
  1616  00276C                     clear_5:
  1617  00276C  6AEE               	clrf	postinc0,c
  1618  00276E  06E8               	decf	wreg,f,c
  1619  002770  E1FD               	bnz	clear_5
  1620                           
  1621                           ; Clear objects allocated to BANK3 (185 bytes)
  1622  002772  EE03  F000         	lfsr	0,__pbssBANK3
  1623  002776  0EB9               	movlw	185
  1624  002778                     clear_6:
  1625  002778  6AEE               	clrf	postinc0,c
  1626  00277A  06E8               	decf	wreg,f,c
  1627  00277C  E1FD               	bnz	clear_6
  1628                           
  1629                           ; Clear objects allocated to BANK2 (43 bytes)
  1630  00277E  EE02  F0C8         	lfsr	0,__pbssBANK2
  1631  002782  0E2B               	movlw	43
  1632  002784                     clear_7:
  1633  002784  6AEE               	clrf	postinc0,c
  1634  002786  06E8               	decf	wreg,f,c
  1635  002788  E1FD               	bnz	clear_7
  1636                           
  1637                           ; Clear objects allocated to BANK1 (53 bytes)
  1638  00278A  EE01  F0C9         	lfsr	0,__pbssBANK1
  1639  00278E  0E35               	movlw	53
  1640  002790                     clear_8:
  1641  002790  6AEE               	clrf	postinc0,c
  1642  002792  06E8               	decf	wreg,f,c
  1643  002794  E1FD               	bnz	clear_8
  1644                           
  1645                           ; Clear objects allocated to BANK4 (165 bytes)
  1646  002796  EE04  F040         	lfsr	0,__pbssBANK4
  1647  00279A  0EA5               	movlw	165
  1648  00279C                     clear_9:
  1649  00279C  6AEE               	clrf	postinc0,c
  1650  00279E  06E8               	decf	wreg,f,c
  1651  0027A0  E1FD               	bnz	clear_9
  1652                           
  1653                           ; Clear objects allocated to BANK0 (51 bytes)
  1654  0027A2  EE00  F0AC         	lfsr	0,__pbssBANK0
  1655  0027A6  0E33               	movlw	51
  1656  0027A8                     clear_10:
  1657  0027A8  6AEE               	clrf	postinc0,c
  1658  0027AA  06E8               	decf	wreg,f,c
  1659  0027AC  E1FD               	bnz	clear_10
  1660                           
  1661                           ; Clear objects allocated to COMRAM (31 bytes)
  1662  0027AE  EE00  F023         	lfsr	0,__pbssCOMRAM
  1663  0027B2  0E1F               	movlw	31
  1664  0027B4                     clear_11:
  1665  0027B4  6AEE               	clrf	postinc0,c
  1666  0027B6  06E8               	decf	wreg,f,c
  1667  0027B8  E1FD               	bnz	clear_11
  1668  0027BA                     end_of_initialization:
  1669                           	opt stack 0
  1670  0027BA                     __end_of__initialization:
  1671                           	opt stack 0
  1672  0027BA  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1673  0027BC  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1674  0027BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1675  0027C0  6EF8               	movwf	tblptru,c
  1676  0027C2  0100               	movlb	0
  1677  0027C4  EF66  F02F         	goto	_main	;jump to C main() function
  1678                           tblptru	equ	0xFF8
  1679                           tblptrh	equ	0xFF7
  1680                           tblptrl	equ	0xFF6
  1681                           tablat	equ	0xFF5
  1682                           postinc0	equ	0xFEE
  1683                           wreg	equ	0xFE8
  1684                           postdec1	equ	0xFE5
  1685                           fsr1h	equ	0xFE2
  1686                           fsr1l	equ	0xFE1
  1687                           
  1688                           	psect	bssCOMRAM
  1689  000023                     __pbssCOMRAM:
  1690                           	opt stack 0
  1691  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1692                           	opt stack 0
  1693  000023                     	ds	2
  1694  000025                     _USBDeferOUTDataStagePackets:
  1695                           	opt stack 0
  1696  000025                     	ds	1
  1697  000026                     GetSmsSm@GetSmsState:
  1698                           	opt stack 0
  1699  000026                     	ds	1
  1700  000027                     ConfigureModem@NextState:
  1701                           	opt stack 0
  1702  000027                     	ds	1
  1703  000028                     ConfigureModem@MdmConfigState:
  1704                           	opt stack 0
  1705  000028                     	ds	1
  1706  000029                     TurnOnModem@TurnOnMdmState:
  1707                           	opt stack 0
  1708  000029                     	ds	1
  1709  00002A                     CheckModem@CheckMdmSts:
  1710                           	opt stack 0
  1711  00002A                     	ds	1
  1712  00002B                     _ComChecCompleted:
  1713                           	opt stack 0
  1714  00002B                     	ds	1
  1715  00002C                     Uart_Uart1RxIsr@UartRxData:
  1716                           	opt stack 0
  1717  00002C                     	ds	1
  1718  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1719                           	opt stack 0
  1720  00002D                     	ds	1
  1721  00002E                     MdmCntSm@MdmCntState:
  1722                           	opt stack 0
  1723  00002E                     	ds	1
  1724  00002F                     RiSm@MdmDrvState:
  1725                           	opt stack 0
  1726  00002F                     	ds	1
  1727  000030                     _Mmd_RingIndicator:
  1728                           	opt stack 0
  1729  000030                     	ds	1
  1730  000031                     I2c_ReadData@ReadStatus:
  1731                           	opt stack 0
  1732  000031                     	ds	1
  1733  000032                     I2c_ReadData@TentativeCounter:
  1734                           	opt stack 0
  1735  000032                     	ds	1
  1736  000033                     I2c_ReadData@DataCounter:
  1737                           	opt stack 0
  1738  000033                     	ds	1
  1739  000034                     I2c_ReadData@I2cReadState:
  1740                           	opt stack 0
  1741  000034                     	ds	1
  1742  000035                     I2c_WriteData@WriteStatus:
  1743                           	opt stack 0
  1744  000035                     	ds	1
  1745  000036                     I2c_WriteData@TentativeCounter:
  1746                           	opt stack 0
  1747  000036                     	ds	1
  1748  000037                     I2c_WriteData@I2cNextState:
  1749                           	opt stack 0
  1750  000037                     	ds	1
  1751  000038                     I2c_WriteData@I2cWriteState:
  1752                           	opt stack 0
  1753  000038                     	ds	1
  1754  000039                     _MdmStsReady:
  1755                           	opt stack 0
  1756  000039                     	ds	1
  1757  00003A                     _NewStringMdmTerminal:
  1758                           	opt stack 0
  1759  00003A                     	ds	1
  1760  00003B                     _NewMdmEvtParserRequest:
  1761                           	opt stack 0
  1762  00003B                     	ds	1
  1763  00003C                     _NewStringReceived:
  1764                           	opt stack 0
  1765  00003C                     	ds	1
  1766  00003D                     _MdmResetRequest:
  1767                           	opt stack 0
  1768  00003D                     	ds	1
  1769  00003E                     _CallClosedEvent:
  1770                           	opt stack 0
  1771  00003E                     	ds	1
  1772  00003F                     _IncomingCallEvent:
  1773                           	opt stack 0
  1774  00003F                     	ds	1
  1775  000040                     _NewSmsEvent:
  1776                           	opt stack 0
  1777  000040                     	ds	1
  1778  000041                     _ActivateRiDetection:
  1779                           	opt stack 0
  1780  000041                     	ds	1
  1781                           tblptru	equ	0xFF8
  1782                           tblptrh	equ	0xFF7
  1783                           tblptrl	equ	0xFF6
  1784                           tablat	equ	0xFF5
  1785                           postinc0	equ	0xFEE
  1786                           wreg	equ	0xFE8
  1787                           postdec1	equ	0xFE5
  1788                           fsr1h	equ	0xFE2
  1789                           fsr1l	equ	0xFE1
  1790                           
  1791                           	psect	bssBANK0
  1792  0000AC                     __pbssBANK0:
  1793                           	opt stack 0
  1794  0000AC                     _inPipes:
  1795                           	opt stack 0
  1796  0000AC                     	ds	6
  1797  0000B2                     _pBDTEntryIn:
  1798                           	opt stack 0
  1799  0000B2                     	ds	6
  1800  0000B8                     _CDCDataOutHandle:
  1801                           	opt stack 0
  1802  0000B8                     	ds	2
  1803  0000BA                     _pBDTEntryEP0OutNext:
  1804                           	opt stack 0
  1805  0000BA                     	ds	2
  1806  0000BC                     _pBDTEntryEP0OutCurrent:
  1807                           	opt stack 0
  1808  0000BC                     	ds	2
  1809  0000BE                     _RxLen:
  1810                           	opt stack 0
  1811  0000BE                     	ds	2
  1812  0000C0                     _cdc_tx_len:
  1813                           	opt stack 0
  1814  0000C0                     	ds	1
  1815  0000C1                     _cdc_trf_state:
  1816                           	opt stack 0
  1817  0000C1                     	ds	1
  1818  0000C2                     _cdc_rx_len:
  1819                           	opt stack 0
  1820  0000C2                     	ds	1
  1821  0000C3                     _USBDeferINDataStagePackets:
  1822                           	opt stack 0
  1823  0000C3                     	ds	1
  1824  0000C4                     _USBStatusStageEnabledFlag2:
  1825                           	opt stack 0
  1826  0000C4                     	ds	1
  1827  0000C5                     _USBStatusStageEnabledFlag1:
  1828                           	opt stack 0
  1829  0000C5                     	ds	1
  1830  0000C6                     _USBDeferStatusStagePacket:
  1831                           	opt stack 0
  1832  0000C6                     	ds	1
  1833  0000C7                     _USBStatusStageTimeoutCounter:
  1834                           	opt stack 0
  1835  0000C7                     	ds	1
  1836  0000C8                     _endpoint_number:
  1837                           	opt stack 0
  1838  0000C8                     	ds	1
  1839  0000C9                     _controlTransferState:
  1840                           	opt stack 0
  1841  0000C9                     	ds	1
  1842  0000CA                     _shortPacketStatus:
  1843                           	opt stack 0
  1844  0000CA                     	ds	1
  1845  0000CB                     _USBDeviceState:
  1846                           	opt stack 0
  1847  0000CB                     	ds	1
  1848  0000CC                     _I2cComSts:
  1849                           	opt stack 0
  1850  0000CC                     	ds	1
  1851  0000CD                     HttpGetMethod@GetMethodNextState:
  1852                           	opt stack 0
  1853  0000CD                     	ds	1
  1854  0000CE                     InitGprsNetwork@GprsNetInitNextState:
  1855                           	opt stack 0
  1856  0000CE                     	ds	1
  1857  0000CF                     _MdmStatus:
  1858                           	opt stack 0
  1859  0000CF                     	ds	1
  1860  0000D0                     _PhoneNumbLen:
  1861                           	opt stack 0
  1862  0000D0                     	ds	1
  1863  0000D1                     _SmsLen:
  1864                           	opt stack 0
  1865  0000D1                     	ds	1
  1866  0000D2                     _SystemState:
  1867                           	opt stack 0
  1868  0000D2                     	ds	1
  1869  0000D3                     _USTATcopy:
  1870                           	opt stack 0
  1871  0000D3                     	ds	1
  1872  0000D4                     _USBActiveConfiguration:
  1873                           	opt stack 0
  1874  0000D4                     	ds	1
  1875  0000D5                     _I2cReadDataEvt:
  1876                           	opt stack 0
  1877  0000D5                     	ds	1
  1878  0000D6                     _I2cWriteDataEvt:
  1879                           	opt stack 0
  1880  0000D6                     	ds	1
  1881  0000D7                     _GetMethod:
  1882                           	opt stack 0
  1883  0000D7                     	ds	1
  1884  0000D8                     _InitNetwork:
  1885                           	opt stack 0
  1886  0000D8                     	ds	1
  1887  0000D9                     _SmsTxtReady:
  1888                           	opt stack 0
  1889  0000D9                     	ds	1
  1890  0000DA                     _GetSmsText:
  1891                           	opt stack 0
  1892  0000DA                     	ds	1
  1893  0000DB                     _SmsEvent:
  1894                           	opt stack 0
  1895  0000DB                     	ds	1
  1896  0000DC                     _RingEvent:
  1897                           	opt stack 0
  1898  0000DC                     	ds	1
  1899  0000DD                     _SendSmsEvent:
  1900                           	opt stack 0
  1901  0000DD                     	ds	1
  1902  0000DE                     _MdmOnOffPulseRequest:
  1903                           	opt stack 0
  1904  0000DE                     	ds	1
  1905                           tblptru	equ	0xFF8
  1906                           tblptrh	equ	0xFF7
  1907                           tblptrl	equ	0xFF6
  1908                           tablat	equ	0xFF5
  1909                           postinc0	equ	0xFEE
  1910                           wreg	equ	0xFE8
  1911                           postdec1	equ	0xFE5
  1912                           fsr1h	equ	0xFE2
  1913                           fsr1l	equ	0xFE1
  1914                           
  1915                           	psect	bssBANK1
  1916  0001C9                     __pbssBANK1:
  1917                           	opt stack 0
  1918  0001C9                     _outPipes:
  1919                           	opt stack 0
  1920  0001C9                     	ds	8
  1921  0001D1                     _CDCDataInHandle:
  1922                           	opt stack 0
  1923  0001D1                     	ds	2
  1924  0001D3                     _Tmr2IsrCallback:
  1925                           	opt stack 0
  1926  0001D3                     	ds	2
  1927  0001D5                     	ds	1
  1928  0001D6                     	ds	1
  1929  0001D7                     	ds	1
  1930  0001D8                     	ds	1
  1931  0001D9                     initGprsModem@isInitialized:
  1932                           	opt stack 0
  1933  0001D9                     	ds	1
  1934  0001DA                     	ds	1
  1935  0001DB                     	ds	1
  1936  0001DC                     	ds	1
  1937  0001DD                     	ds	1
  1938  0001DE                     	ds	1
  1939  0001DF                     	ds	1
  1940  0001E0                     	ds	1
  1941  0001E1                     GsmGprsTerminal@SMS:
  1942                           	opt stack 0
  1943  0001E1                     	ds	1
  1944  0001E2                     	ds	1
  1945  0001E3                     _control_signal_bitmap:
  1946                           	opt stack 0
  1947  0001E3                     	ds	1
  1948  0001E4                     _cdc_mem_type:
  1949                           	opt stack 0
  1950  0001E4                     	ds	1
  1951  0001E5                     _USBTicksSinceSuspendEnd:
  1952                           	opt stack 0
  1953  0001E5                     	ds	1
  1954  0001E6                     _BothEP0OutUOWNsSet:
  1955                           	opt stack 0
  1956  0001E6                     	ds	1
  1957  0001E7                     _USBBusIsSuspended:
  1958                           	opt stack 0
  1959  0001E7                     	ds	1
  1960  0001E8                     _RemoteWakeup:
  1961                           	opt stack 0
  1962  0001E8                     	ds	1
  1963  0001E9                     I2cSlv_QueryI2cData@Ret:
  1964                           	opt stack 0
  1965  0001E9                     	ds	1
  1966  0001EA                     I2cSlv_QueryI2cData@I2cOpState:
  1967                           	opt stack 0
  1968  0001EA                     	ds	1
  1969  0001EB                     I2cSendMsgSm@I2cComState:
  1970                           	opt stack 0
  1971  0001EB                     	ds	1
  1972  0001EC                     _I2cBusStatus:
  1973                           	opt stack 0
  1974  0001EC                     	ds	1
  1975  0001ED                     HttpGetMethod@GetMOutSts:
  1976                           	opt stack 0
  1977  0001ED                     	ds	1
  1978  0001EE                     HttpGetMethod@GetMethodState:
  1979                           	opt stack 0
  1980  0001EE                     	ds	1
  1981  0001EF                     InitGprsNetwork@GprsNetInitState:
  1982                           	opt stack 0
  1983  0001EF                     	ds	1
  1984  0001F0                     _PostMethod:
  1985                           	opt stack 0
  1986  0001F0                     	ds	1
  1987  0001F1                     _HttpGetMethodSts:
  1988                           	opt stack 0
  1989  0001F1                     	ds	1
  1990  0001F2                     _GprsNetworkSts:
  1991                           	opt stack 0
  1992  0001F2                     	ds	1
  1993  0001F3                     _ApnLenLocal:
  1994                           	opt stack 0
  1995  0001F3                     	ds	1
  1996  0001F4                     SendSmsSm@SendSms_NextState:
  1997                           	opt stack 0
  1998  0001F4                     	ds	1
  1999  0001F5                     SendSmsSm@SendSms_State:
  2000                           	opt stack 0
  2001  0001F5                     	ds	1
  2002  0001F6                     _AlarmEvent:
  2003                           	opt stack 0
  2004  0001F6                     	ds	1
  2005  0001F7                     _Led3OutSts:
  2006                           	opt stack 0
  2007  0001F7                     	ds	1
  2008  0001F8                     _Led3Sts:
  2009                           	opt stack 0
  2010  0001F8                     	ds	1
  2011  0001F9                     _Led2OutSts:
  2012                           	opt stack 0
  2013  0001F9                     	ds	1
  2014  0001FA                     _Led2Sts:
  2015                           	opt stack 0
  2016  0001FA                     	ds	1
  2017  0001FB                     _Led1OutSts:
  2018                           	opt stack 0
  2019  0001FB                     	ds	1
  2020  0001FC                     _Led1Sts:
  2021                           	opt stack 0
  2022  0001FC                     	ds	1
  2023  0001FD                     I2cDummyTx@DummyBuffer:
  2024                           	opt stack 0
  2025  0001FD                     	ds	1
  2026                           tblptru	equ	0xFF8
  2027                           tblptrh	equ	0xFF7
  2028                           tblptrl	equ	0xFF6
  2029                           tablat	equ	0xFF5
  2030                           postinc0	equ	0xFEE
  2031                           wreg	equ	0xFE8
  2032                           postdec1	equ	0xFE5
  2033                           fsr1h	equ	0xFE2
  2034                           fsr1l	equ	0xFE1
  2035                           
  2036                           	psect	dataBANK1
  2037  0001FE                     __pdataBANK1:
  2038                           	opt stack 0
  2039  0001FE                     	ds	1
  2040  0001FF                     InitGprsNetwork@GprsInitSts:
  2041                           	opt stack 0
  2042  0001FF                     	ds	1
  2043                           tblptru	equ	0xFF8
  2044                           tblptrh	equ	0xFF7
  2045                           tblptrl	equ	0xFF6
  2046                           tablat	equ	0xFF5
  2047                           postinc0	equ	0xFEE
  2048                           wreg	equ	0xFE8
  2049                           postdec1	equ	0xFE5
  2050                           fsr1h	equ	0xFE2
  2051                           fsr1l	equ	0xFE1
  2052                           
  2053                           	psect	bssBANK2
  2054  0002C8                     __pbssBANK2:
  2055                           	opt stack 0
  2056  0002C8                     _pCDCDst:
  2057                           	opt stack 0
  2058  0002C8                     	ds	3
  2059  0002CB                     _pCDCSrc:
  2060                           	opt stack 0
  2061  0002CB                     	ds	3
  2062  0002CE                     _ep_data_out:
  2063                           	opt stack 0
  2064  0002CE                     	ds	3
  2065  0002D1                     _ep_data_in:
  2066                           	opt stack 0
  2067  0002D1                     	ds	3
  2068  0002D4                     _pDst:
  2069                           	opt stack 0
  2070  0002D4                     	ds	2
  2071  0002D6                     _ApnLocal:
  2072                           	opt stack 0
  2073  0002D6                     	ds	2
  2074  0002D8                     ConfigureModem@DelayCounter:
  2075                           	opt stack 0
  2076  0002D8                     	ds	2
  2077  0002DA                     ConfigureModem@DelayValueMs:
  2078                           	opt stack 0
  2079  0002DA                     	ds	2
  2080  0002DC                     TurnOnModem@Counter:
  2081                           	opt stack 0
  2082  0002DC                     	ds	2
  2083  0002DE                     UpdateSchFlag@InterruptCounter:
  2084                           	opt stack 0
  2085  0002DE                     	ds	2
  2086  0002E0                     MdmCntSm@Counter:
  2087                           	opt stack 0
  2088  0002E0                     	ds	2
  2089  0002E2                     RiSm@Counter:
  2090                           	opt stack 0
  2091  0002E2                     	ds	2
  2092  0002E4                     _ExtInt1IsrCallback:
  2093                           	opt stack 0
  2094  0002E4                     	ds	2
  2095  0002E6                     _ExtInt0IsrCallback:
  2096                           	opt stack 0
  2097  0002E6                     	ds	2
  2098  0002E8                     _RtccIsrCallback:
  2099                           	opt stack 0
  2100  0002E8                     	ds	2
  2101  0002EA                     _Tmr4IsrCallback:
  2102                           	opt stack 0
  2103  0002EA                     	ds	2
  2104  0002EC                     Term_MainSm@TermMainSmState:
  2105                           	opt stack 0
  2106  0002EC                     	ds	1
  2107  0002ED                     Terminal@FormatOption:
  2108                           	opt stack 0
  2109  0002ED                     	ds	1
  2110  0002EE                     Terminal@SlaveAddr:
  2111                           	opt stack 0
  2112  0002EE                     	ds	1
  2113  0002EF                     Terminal@PackageLen:
  2114                           	opt stack 0
  2115  0002EF                     	ds	1
  2116  0002F0                     Terminal@TermState:
  2117                           	opt stack 0
  2118  0002F0                     	ds	1
  2119  0002F1                     _USBAlternateInterface:
  2120                           	opt stack 0
  2121  0002F1                     	ds	2
  2122                           tblptru	equ	0xFF8
  2123                           tblptrh	equ	0xFF7
  2124                           tblptrl	equ	0xFF6
  2125                           tablat	equ	0xFF5
  2126                           postinc0	equ	0xFEE
  2127                           wreg	equ	0xFE8
  2128                           postdec1	equ	0xFE5
  2129                           fsr1h	equ	0xFE2
  2130                           fsr1l	equ	0xFE1
  2131                           
  2132                           	psect	dataBANK2
  2133  0002F3                     __pdataBANK2:
  2134                           	opt stack 0
  2135  0002F3                     Terminal@EchoOption:
  2136                           	opt stack 0
  2137  0002F3                     	ds	1
  2138  0002F4                     _MainSystemTimebaseFlag:
  2139                           	opt stack 0
  2140  0002F4                     	ds	1
  2141  0002F5                     _ConnTimeout:
  2142                           	opt stack 0
  2143  0002F5                     	ds	11
  2144                           tblptru	equ	0xFF8
  2145                           tblptrh	equ	0xFF7
  2146                           tblptrl	equ	0xFF6
  2147                           tablat	equ	0xFF5
  2148                           postinc0	equ	0xFEE
  2149                           wreg	equ	0xFE8
  2150                           postdec1	equ	0xFE5
  2151                           fsr1h	equ	0xFE2
  2152                           fsr1l	equ	0xFE1
  2153                           
  2154                           	psect	bssBANK3
  2155  000300                     __pbssBANK3:
  2156                           	opt stack 0
  2157  000300                     _Rtcm_SystemDate:
  2158                           	opt stack 0
  2159  000300                     	ds	8
  2160  000308                     _Rtcm_RtccAlarm:
  2161                           	opt stack 0
  2162  000308                     	ds	6
  2163  00030E                     _pBDTEntryOut:
  2164                           	opt stack 0
  2165  00030E                     	ds	6
  2166  000314                     _BaudRateGen:
  2167                           	opt stack 0
  2168  000314                     	ds	4
  2169  000318                     _USB1msTickCount:
  2170                           	opt stack 0
  2171  000318                     	ds	4
  2172  00031C                     _OsTmr_OsTickCounter:
  2173                           	opt stack 0
  2174  00031C                     	ds	4
  2175  000320                     MyApp_Task@F8996:
  2176                           	opt stack 0
  2177  000320                     	ds	2
  2178  000322                     	ds	2
  2179  000324                     _PhoneNumberLen:
  2180                           	opt stack 0
  2181  000324                     	ds	2
  2182  000326                     _UartConfig:
  2183                           	opt stack 0
  2184  000326                     	ds	21
  2185  00033B                     I2cSlv_QueryI2cData@TimeoutTimer:
  2186                           	opt stack 0
  2187  00033B                     	ds	11
  2188  000346                     I2cSlv_QueryI2cData@QueryTimer:
  2189                           	opt stack 0
  2190  000346                     	ds	11
  2191  000351                     _I2cConfig:
  2192                           	opt stack 0
  2193  000351                     	ds	10
  2194  00035B                     _Led3Blink:
  2195                           	opt stack 0
  2196  00035B                     	ds	9
  2197  000364                     _Led2Blink:
  2198                           	opt stack 0
  2199  000364                     	ds	9
  2200  00036D                     _Led1Blink:
  2201                           	opt stack 0
  2202  00036D                     	ds	9
  2203  000376                     _dummy_encapsulated_cmd_response:
  2204                           	opt stack 0
  2205  000376                     	ds	8
  2206  00037E                     _line_coding:
  2207                           	opt stack 0
  2208  00037E                     	ds	7
  2209  000385                     _Led3Pulse:
  2210                           	opt stack 0
  2211  000385                     	ds	6
  2212  00038B                     _Led2Pulse:
  2213                           	opt stack 0
  2214  00038B                     	ds	6
  2215  000391                     _Led1Pulse:
  2216                           	opt stack 0
  2217  000391                     	ds	6
  2218  000397                     _I2cRxPacket:
  2219                           	opt stack 0
  2220  000397                     	ds	6
  2221  00039D                     _I2cTxPacket:
  2222                           	opt stack 0
  2223  00039D                     	ds	5
  2224  0003A2                     _HttpGetDataLocal:
  2225                           	opt stack 0
  2226  0003A2                     	ds	5
  2227  0003A7                     Terminal@Addr:
  2228                           	opt stack 0
  2229  0003A7                     	ds	4
  2230  0003AB                     Terminal@Len:
  2231                           	opt stack 0
  2232  0003AB                     	ds	4
  2233  0003AF                     _AlCfg:
  2234                           	opt stack 0
  2235  0003AF                     	ds	4
  2236  0003B3                     _RtcConfig:
  2237                           	opt stack 0
  2238  0003B3                     	ds	4
  2239  0003B7                     initGprsModem@modemCounter:
  2240                           	opt stack 0
  2241  0003B7                     	ds	2
  2242                           tblptru	equ	0xFF8
  2243                           tblptrh	equ	0xFF7
  2244                           tblptrl	equ	0xFF6
  2245                           tablat	equ	0xFF5
  2246                           postinc0	equ	0xFEE
  2247                           wreg	equ	0xFE8
  2248                           postdec1	equ	0xFE5
  2249                           fsr1h	equ	0xFE2
  2250                           fsr1l	equ	0xFE1
  2251                           
  2252                           	psect	dataBANK3
  2253  0003B9                     __pdataBANK3:
  2254                           	opt stack 0
  2255  0003B9                     ModemEvtParser@F9088:
  2256                           	opt stack 0
  2257  0003B9                     	ds	5
  2258  0003BE                     ModemEvtParser@F9086:
  2259                           	opt stack 0
  2260  0003BE                     	ds	4
  2261  0003C2                     MyApp_Task@F8993:
  2262                           	opt stack 0
  2263  0003C2                     	ds	2
  2264  0003C4                     MyApp_Task@F8990:
  2265                           	opt stack 0
  2266  0003C4                     	ds	2
  2267  0003C6                     	ds	2
  2268  0003C8                     triggerRelay@F8966:
  2269                           	opt stack 0
  2270  0003C8                     	ds	2
  2271  0003CA                     Term_MainSm@TermDelay:
  2272                           	opt stack 0
  2273  0003CA                     	ds	11
  2274  0003D5                     _ConnWait:
  2275                           	opt stack 0
  2276  0003D5                     	ds	11
  2277  0003E0                     SendSmsSm@SwTimer:
  2278                           	opt stack 0
  2279  0003E0                     	ds	11
  2280  0003EB                     CheckModem@Timeout:
  2281                           	opt stack 0
  2282  0003EB                     	ds	11
  2283  0003F6                     MyApp_Task@blickTicks:
  2284                           	opt stack 0
  2285  0003F6                     	ds	2
  2286                           tblptru	equ	0xFF8
  2287                           tblptrh	equ	0xFF7
  2288                           tblptrl	equ	0xFF6
  2289                           tablat	equ	0xFF5
  2290                           postinc0	equ	0xFEE
  2291                           wreg	equ	0xFE8
  2292                           postdec1	equ	0xFE5
  2293                           fsr1h	equ	0xFE2
  2294                           fsr1l	equ	0xFE1
  2295                           
  2296                           	psect	bssBANK4
  2297  000440                     __pbssBANK4:
  2298                           	opt stack 0
  2299  000440                     	ds	10
  2300  00044A                     _cdc_notice:
  2301                           	opt stack 0
  2302  00044A                     	ds	10
  2303  000454                     _cdc_data_rx:
  2304                           	opt stack 0
  2305  000454                     	ds	64
  2306  000494                     Term_MainSm@Data:
  2307                           	opt stack 0
  2308  000494                     	ds	50
  2309  0004C6                     _PhoneNumber:
  2310                           	opt stack 0
  2311  0004C6                     	ds	20
  2312  0004DA                     Terminal@SwTimer:
  2313                           	opt stack 0
  2314  0004DA                     	ds	11
  2315                           tblptru	equ	0xFF8
  2316                           tblptrh	equ	0xFF7
  2317                           tblptrl	equ	0xFF6
  2318                           tablat	equ	0xFF5
  2319                           postinc0	equ	0xFEE
  2320                           wreg	equ	0xFE8
  2321                           postdec1	equ	0xFE5
  2322                           fsr1h	equ	0xFE2
  2323                           fsr1l	equ	0xFE1
  2324                           
  2325                           	psect	dataBANK4
  2326  0004E5                     __pdataBANK4:
  2327                           	opt stack 0
  2328  0004E5                     MyApp_Task@F8999:
  2329                           	opt stack 0
  2330  0004E5                     	ds	10
  2331  0004EF                     ModemEvtParser@F9090:
  2332                           	opt stack 0
  2333  0004EF                     	ds	10
  2334                           tblptru	equ	0xFF8
  2335                           tblptrh	equ	0xFF7
  2336                           tblptrl	equ	0xFF6
  2337                           tablat	equ	0xFF5
  2338                           postinc0	equ	0xFEE
  2339                           wreg	equ	0xFE8
  2340                           postdec1	equ	0xFE5
  2341                           fsr1h	equ	0xFE2
  2342                           fsr1l	equ	0xFE1
  2343                           
  2344                           	psect	bssBANK5
  2345  000500                     __pbssBANK5:
  2346                           	opt stack 0
  2347  000500                     Terminal@Payload:
  2348                           	opt stack 0
  2349  000500                     	ds	80
  2350  000550                     Terminal@TermRxBuffer:
  2351                           	opt stack 0
  2352  000550                     	ds	50
  2353                           tblptru	equ	0xFF8
  2354                           tblptrh	equ	0xFF7
  2355                           tblptrl	equ	0xFF6
  2356                           tablat	equ	0xFF5
  2357                           postinc0	equ	0xFEE
  2358                           wreg	equ	0xFE8
  2359                           postdec1	equ	0xFE5
  2360                           fsr1h	equ	0xFE2
  2361                           fsr1l	equ	0xFE1
  2362                           
  2363                           	psect	dataBANK5
  2364  000582                     __pdataBANK5:
  2365                           	opt stack 0
  2366  000582                     _TaskTable:
  2367                           	opt stack 0
  2368  000582                     	ds	80
  2369                           tblptru	equ	0xFF8
  2370                           tblptrh	equ	0xFF7
  2371                           tblptrl	equ	0xFF6
  2372                           tablat	equ	0xFF5
  2373                           postinc0	equ	0xFEE
  2374                           wreg	equ	0xFE8
  2375                           postdec1	equ	0xFE5
  2376                           fsr1h	equ	0xFE2
  2377                           fsr1l	equ	0xFE1
  2378                           
  2379                           	psect	bssBANK6
  2380  000600                     __pbssBANK6:
  2381                           	opt stack 0
  2382  000600                     _OsAlarms:
  2383                           	opt stack 0
  2384  000600                     	ds	220
  2385                           tblptru	equ	0xFF8
  2386                           tblptrh	equ	0xFF7
  2387                           tblptrl	equ	0xFF6
  2388                           tablat	equ	0xFF5
  2389                           postinc0	equ	0xFEE
  2390                           wreg	equ	0xFE8
  2391                           postdec1	equ	0xFE5
  2392                           fsr1h	equ	0xFE2
  2393                           fsr1l	equ	0xFE1
  2394                           
  2395                           	psect	bssBANK7
  2396  000700                     __pbssBANK7:
  2397                           	opt stack 0
  2398  000700                     _Mdm_SmsRx:
  2399                           	opt stack 0
  2400  000700                     	ds	132
  2401  000784                     _cdc_data_tx:
  2402                           	opt stack 0
  2403  000784                     	ds	64
  2404  0007C4                     _MessageText:
  2405                           	opt stack 0
  2406  0007C4                     	ds	50
  2407                           tblptru	equ	0xFF8
  2408                           tblptrh	equ	0xFF7
  2409                           tblptrl	equ	0xFF6
  2410                           tablat	equ	0xFF5
  2411                           postinc0	equ	0xFEE
  2412                           wreg	equ	0xFE8
  2413                           postdec1	equ	0xFE5
  2414                           fsr1h	equ	0xFE2
  2415                           fsr1l	equ	0xFE1
  2416                           
  2417                           	psect	bssBANK8
  2418  000800                     __pbssBANK8:
  2419                           	opt stack 0
  2420  000800                     GsmGprsTerminal@UsbBuffer:
  2421                           	opt stack 0
  2422  000800                     	ds	200
  2423                           tblptru	equ	0xFF8
  2424                           tblptrh	equ	0xFF7
  2425                           tblptrl	equ	0xFF6
  2426                           tablat	equ	0xFF5
  2427                           postinc0	equ	0xFEE
  2428                           wreg	equ	0xFE8
  2429                           postdec1	equ	0xFE5
  2430                           fsr1h	equ	0xFE2
  2431                           fsr1l	equ	0xFE1
  2432                           
  2433                           	psect	bssBANK9
  2434  000900                     __pbssBANK9:
  2435                           	opt stack 0
  2436  000900                     GsmGprsTerminal@UartBuffer:
  2437                           	opt stack 0
  2438  000900                     	ds	200
  2439                           tblptru	equ	0xFF8
  2440                           tblptrh	equ	0xFF7
  2441                           tblptrl	equ	0xFF6
  2442                           tablat	equ	0xFF5
  2443                           postinc0	equ	0xFEE
  2444                           wreg	equ	0xFE8
  2445                           postdec1	equ	0xFE5
  2446                           fsr1h	equ	0xFE2
  2447                           fsr1l	equ	0xFE1
  2448                           
  2449                           	psect	bssBIGRAMl
  2450  000AC8                     __pbssBIGRAMl:
  2451                           	opt stack 0
  2452  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2453                           	opt stack 0
  2454  000AC8                     	ds	400
  2455  000C58                     _RxBuffer:
  2456                           	opt stack 0
  2457  000C58                     	ds	400
  2458                           tblptru	equ	0xFF8
  2459                           tblptrh	equ	0xFF7
  2460                           tblptrl	equ	0xFF6
  2461                           tablat	equ	0xFF5
  2462                           postinc0	equ	0xFEE
  2463                           wreg	equ	0xFE8
  2464                           postdec1	equ	0xFE5
  2465                           fsr1h	equ	0xFE2
  2466                           fsr1l	equ	0xFE1
  2467                           
  2468                           	psect	cstackBANK10
  2469  000A00                     __pcstackBANK10:
  2470                           	opt stack 0
  2471  000A00                     Terminal@UsbRxBuffer:
  2472                           	opt stack 0
  2473                           
  2474                           ; 200 bytes @ 0x0
  2475  000A00                     	ds	200
  2476                           tblptru	equ	0xFF8
  2477                           tblptrh	equ	0xFF7
  2478                           tblptrl	equ	0xFF6
  2479                           tablat	equ	0xFF5
  2480                           postinc0	equ	0xFEE
  2481                           wreg	equ	0xFE8
  2482                           postdec1	equ	0xFE5
  2483                           fsr1h	equ	0xFE2
  2484                           fsr1l	equ	0xFE1
  2485                           
  2486                           	psect	cstackBANK2
  2487  000200                     __pcstackBANK2:
  2488                           	opt stack 0
  2489  000200                     Terminal@UsbTxBuffer:
  2490                           	opt stack 0
  2491                           
  2492                           ; 200 bytes @ 0x0
  2493  000200                     	ds	200
  2494                           tblptru	equ	0xFF8
  2495                           tblptrh	equ	0xFF7
  2496                           tblptrl	equ	0xFF6
  2497                           tablat	equ	0xFF5
  2498                           postinc0	equ	0xFEE
  2499                           wreg	equ	0xFE8
  2500                           postdec1	equ	0xFE5
  2501                           fsr1h	equ	0xFE2
  2502                           fsr1l	equ	0xFE1
  2503                           
  2504                           	psect	cstackBANK1
  2505  000100                     __pcstackBANK1:
  2506                           	opt stack 0
  2507  000100                     SendSmsSm@UartMessage:
  2508                           	opt stack 0
  2509  000100                     InitGprsNetwork@UartMessage:
  2510                           	opt stack 0
  2511  000100                     Terminal@TermTxBuffer:
  2512                           	opt stack 0
  2513  000100                     HttpGetMethod@UartMessage:
  2514                           	opt stack 0
  2515                           
  2516                           ; 200 bytes @ 0x0
  2517  000100                     	ds	50
  2518  000132                     InitGprsNetwork@Index:
  2519                           	opt stack 0
  2520  000132                     Term_MainSm@FwkMajorStr:
  2521                           	opt stack 0
  2522                           
  2523                           ; 4 bytes @ 0x32
  2524  000132                     	ds	4
  2525  000136                     Term_MainSm@FwkMinorStr:
  2526                           	opt stack 0
  2527                           
  2528                           ; 4 bytes @ 0x36
  2529  000136                     	ds	4
  2530  00013A                     Term_MainSm@FwkBuildStr:
  2531                           	opt stack 0
  2532                           
  2533                           ; 4 bytes @ 0x3A
  2534  00013A                     	ds	142
  2535  0001C8                     HttpGetMethod@Index:
  2536                           	opt stack 0
  2537                           
  2538                           ; 1 bytes @ 0xC8
  2539  0001C8                     	ds	1
  2540                           tblptru	equ	0xFF8
  2541                           tblptrh	equ	0xFF7
  2542                           tblptrl	equ	0xFF6
  2543                           tablat	equ	0xFF5
  2544                           postinc0	equ	0xFEE
  2545                           wreg	equ	0xFE8
  2546                           postdec1	equ	0xFE5
  2547                           fsr1h	equ	0xFE2
  2548                           fsr1l	equ	0xFE1
  2549                           
  2550                           	psect	cstackBANK0
  2551  000060                     __pcstackBANK0:
  2552                           	opt stack 0
  2553  000060                     
  2554                           ; 1 bytes @ 0x0
  2555  000060                     	ds	8
  2556  000068                     ??_LowPriorityIsr:
  2557                           
  2558                           ; 1 bytes @ 0x8
  2559  000068                     	ds	21
  2560  00007D                     ??_isdigit:
  2561  00007D                     ??_isspace:
  2562  00007D                     ??_isupper:
  2563  00007D                     ??_Rtcc_GetRtccValue:
  2564  00007D                     ??_UartTxBufferStatus:
  2565  00007D                     ??_USBStdGetDscHandler:
  2566  00007D                     ??_USBStdGetStatusHandler:
  2567  00007D                     ?_USBTransferOnePacket:
  2568                           	opt stack 0
  2569  00007D                     ?_strlen:
  2570                           	opt stack 0
  2571  00007D                     ?_sprintf:
  2572                           	opt stack 0
  2573  00007D                     ?___wmul:
  2574                           	opt stack 0
  2575  00007D                     ?___awdiv:
  2576                           	opt stack 0
  2577  00007D                     ?___awmod:
  2578                           	opt stack 0
  2579  00007D                     ?___lwmod:
  2580                           	opt stack 0
  2581  00007D                     ?_GetOsTickCounter:
  2582                           	opt stack 0
  2583  00007D                     ?___lmul:
  2584                           	opt stack 0
  2585  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2586                           	opt stack 0
  2587  00007D                     SetAckStatus@AckSts:
  2588                           	opt stack 0
  2589  00007D                     WriteByte@Byte:
  2590                           	opt stack 0
  2591  00007D                     ReadByte@Byte:
  2592                           	opt stack 0
  2593  00007D                     Mcu_SetWdgSts@WdgSts:
  2594                           	opt stack 0
  2595  00007D                     RtccIrqInit@Priority:
  2596                           	opt stack 0
  2597  00007D                     Rtcc_SetRtcStatus@Status:
  2598                           	opt stack 0
  2599  00007D                     TmrBInit@Prescaler:
  2600                           	opt stack 0
  2601  00007D                     Tmr_TmrBIrqSet@Priority:
  2602                           	opt stack 0
  2603  00007D                     Tmr_StartTmr@TmrNumb:
  2604                           	opt stack 0
  2605  00007D                     UartWriteByte@ByteToWrite:
  2606                           	opt stack 0
  2607  00007D                     USBTransferOnePacket@dir:
  2608                           	opt stack 0
  2609  00007D                     USBConfigureEndpoint@direction:
  2610                           	opt stack 0
  2611  00007D                     USBCtrlTrfTxService@byteToSend:
  2612                           	opt stack 0
  2613  00007D                     USBCtrlTrfRxService@i:
  2614                           	opt stack 0
  2615  00007D                     Led_SetLedStatus@LedSts:
  2616                           	opt stack 0
  2617  00007D                     toupper@c:
  2618                           	opt stack 0
  2619  00007D                     tolower@c:
  2620                           	opt stack 0
  2621  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2622                           	opt stack 0
  2623  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2624                           	opt stack 0
  2625  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2626                           	opt stack 0
  2627  00007D                     Uart_ClearRxBuffer@Index:
  2628                           	opt stack 0
  2629  00007D                     GenerateEvt@Event:
  2630                           	opt stack 0
  2631  00007D                     ReceiveEvt@Event:
  2632                           	opt stack 0
  2633  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2634                           	opt stack 0
  2635  00007D                     StringCompare@String1:
  2636                           	opt stack 0
  2637  00007D                     StringCopy@SourceStr:
  2638                           	opt stack 0
  2639  00007D                     ClearBuffer@Buffer:
  2640                           	opt stack 0
  2641  00007D                     sprintf@sp:
  2642                           	opt stack 0
  2643  00007D                     ___wmul@multiplier:
  2644                           	opt stack 0
  2645  00007D                     ___awdiv@dividend:
  2646                           	opt stack 0
  2647  00007D                     ___awmod@dividend:
  2648                           	opt stack 0
  2649  00007D                     ___lwmod@dividend:
  2650                           	opt stack 0
  2651  00007D                     memcpy@d1:
  2652                           	opt stack 0
  2653  00007D                     memset@p1:
  2654                           	opt stack 0
  2655  00007D                     strcat@to:
  2656                           	opt stack 0
  2657  00007D                     strcpy@to:
  2658                           	opt stack 0
  2659  00007D                     strlen@s:
  2660                           	opt stack 0
  2661  00007D                     ___lmul@multiplier:
  2662                           	opt stack 0
  2663                           
  2664                           ; 4 bytes @ 0x1D
  2665  00007D                     	ds	1
  2666  00007E                     ??_USBConfigureEndpoint:
  2667  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2668                           	opt stack 0
  2669  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2670                           	opt stack 0
  2671  00007E                     TmrBInit@Postscaler:
  2672                           	opt stack 0
  2673  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2674                           	opt stack 0
  2675  00007E                     UartWriteByte@Module:
  2676                           	opt stack 0
  2677  00007E                     UartTxBufferStatus@Module:
  2678                           	opt stack 0
  2679  00007E                     USBCtrlTrfRxService@byteToRead:
  2680                           	opt stack 0
  2681  00007E                     USBCtrlTrfInHandler@lastDTS:
  2682                           	opt stack 0
  2683  00007E                     Led_SetLedStatus@Led:
  2684                           	opt stack 0
  2685  00007E                     _isdigit$6125:
  2686                           	opt stack 0
  2687  00007E                     _isspace$6394:
  2688                           	opt stack 0
  2689  00007E                     _isupper$6397:
  2690                           	opt stack 0
  2691  00007E                     I2c_WriteData@WritePacket:
  2692                           	opt stack 0
  2693  00007E                     Rtcc_RtcConfig@RtcConfig:
  2694                           	opt stack 0
  2695  00007E                     USBTransferOnePacket@data:
  2696                           	opt stack 0
  2697  00007E                     USBStdGetStatusHandler@p:
  2698                           	opt stack 0
  2699                           
  2700                           ; 2 bytes @ 0x1E
  2701  00007E                     	ds	1
  2702  00007F                     ??_strlen:
  2703  00007F                     ??_Rtcc_AlarmConfig:
  2704  00007F                     ??_TmrBInit:
  2705  00007F                     Irq_InitIntController@IntPriorityEn:
  2706                           	opt stack 0
  2707  00007F                     Rtcc_GetRtccValue@RetValue:
  2708                           	opt stack 0
  2709  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2710                           	opt stack 0
  2711  00007F                     UartTxBufferStatus@TxBufferStatus:
  2712                           	opt stack 0
  2713  00007F                     GenerateEvt@EventStatus:
  2714                           	opt stack 0
  2715  00007F                     isdigit@c:
  2716                           	opt stack 0
  2717  00007F                     isspace@c:
  2718                           	opt stack 0
  2719  00007F                     isupper@c:
  2720                           	opt stack 0
  2721  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2722                           	opt stack 0
  2723  00007F                     StringCompare@String2:
  2724                           	opt stack 0
  2725  00007F                     StringCopy@DestStr:
  2726                           	opt stack 0
  2727  00007F                     ClearBuffer@Len:
  2728                           	opt stack 0
  2729  00007F                     sprintf@f:
  2730                           	opt stack 0
  2731  00007F                     ___wmul@multiplicand:
  2732                           	opt stack 0
  2733  00007F                     ___awdiv@divisor:
  2734                           	opt stack 0
  2735  00007F                     ___awmod@divisor:
  2736                           	opt stack 0
  2737  00007F                     ___lwmod@divisor:
  2738                           	opt stack 0
  2739  00007F                     memcpy@s1:
  2740                           	opt stack 0
  2741  00007F                     memset@c:
  2742                           	opt stack 0
  2743  00007F                     strcat@from:
  2744                           	opt stack 0
  2745  00007F                     strcpy@from:
  2746                           	opt stack 0
  2747                           
  2748                           ; 2 bytes @ 0x1F
  2749  00007F                     	ds	1
  2750  000080                     ??_isalpha:
  2751  000080                     ??_isxdigit:
  2752  000080                     ??_I2c_WriteData:
  2753  000080                     ??_Rtcc_RtcConfig:
  2754  000080                     Rtcc_GetRtccValue@RegValue:
  2755                           	opt stack 0
  2756  000080                     TmrBInit@TmrNumb:
  2757                           	opt stack 0
  2758  000080                     ReceiveEvt@EventStatus:
  2759                           	opt stack 0
  2760  000080                     USBTransferOnePacket@len:
  2761                           	opt stack 0
  2762  000080                     I2c_ReadData@ReadPacket:
  2763                           	opt stack 0
  2764  000080                     Uart_WriteConstString@ConstStringToWrite:
  2765                           	opt stack 0
  2766  000080                     Uart_WriteString@StringToWrite:
  2767                           	opt stack 0
  2768  000080                     Uart_WriteStringLen@StringToWrite:
  2769                           	opt stack 0
  2770  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  2771                           	opt stack 0
  2772  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2773                           	opt stack 0
  2774                           
  2775                           ; 2 bytes @ 0x20
  2776  000080                     	ds	1
  2777  000081                     ?_GetElapsedTime:
  2778                           	opt stack 0
  2779  000081                     ?_Rtcm_GetRtccDate:
  2780                           	opt stack 0
  2781  000081                     Mdm_IsRinging@Ret:
  2782                           	opt stack 0
  2783  000081                     I2cSlv_I2cReadMsgSts@Result:
  2784                           	opt stack 0
  2785  000081                     USBTransferOnePacket@ep:
  2786                           	opt stack 0
  2787  000081                     Led_SetLedBlinkTime@Led:
  2788                           	opt stack 0
  2789  000081                     ___awdiv@counter:
  2790                           	opt stack 0
  2791  000081                     ___awmod@counter:
  2792                           	opt stack 0
  2793  000081                     ___lwmod@counter:
  2794                           	opt stack 0
  2795  000081                     _isalpha$6391:
  2796                           	opt stack 0
  2797  000081                     _isxdigit$6401:
  2798                           	opt stack 0
  2799  000081                     OsTmr_StartTimer@Timer:
  2800                           	opt stack 0
  2801  000081                     StringCompare@Len:
  2802                           	opt stack 0
  2803  000081                     StringCopy@Len:
  2804                           	opt stack 0
  2805  000081                     ClearBuffer@Index:
  2806                           	opt stack 0
  2807  000081                     ___wmul@product:
  2808                           	opt stack 0
  2809  000081                     memcpy@n:
  2810                           	opt stack 0
  2811  000081                     memset@n:
  2812                           	opt stack 0
  2813  000081                     strcat@cp:
  2814                           	opt stack 0
  2815  000081                     strcpy@cp:
  2816                           	opt stack 0
  2817  000081                     strlen@cp:
  2818                           	opt stack 0
  2819  000081                     GetElapsedTime@StartTime:
  2820                           	opt stack 0
  2821  000081                     ___lmul@multiplicand:
  2822                           	opt stack 0
  2823                           
  2824                           ; 4 bytes @ 0x21
  2825  000081                     	ds	1
  2826  000082                     ??_I2c_ReadData:
  2827  000082                     Uart_WriteConstString@Module:
  2828                           	opt stack 0
  2829  000082                     Uart_WriteString@Module:
  2830                           	opt stack 0
  2831  000082                     Uart_WriteStringLen@Len:
  2832                           	opt stack 0
  2833  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  2834                           	opt stack 0
  2835  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2836                           	opt stack 0
  2837  000082                     USBConfigureEndpoint@EPNum:
  2838                           	opt stack 0
  2839  000082                     ___awdiv@sign:
  2840                           	opt stack 0
  2841  000082                     ___awmod@sign:
  2842                           	opt stack 0
  2843  000082                     isalpha@c:
  2844                           	opt stack 0
  2845  000082                     isxdigit@c:
  2846                           	opt stack 0
  2847  000082                     USBTransferOnePacket@handle:
  2848                           	opt stack 0
  2849                           
  2850                           ; 2 bytes @ 0x22
  2851  000082                     	ds	1
  2852  000083                     ??_StringCopy:
  2853  000083                     ?_atoi:
  2854                           	opt stack 0
  2855  000083                     ?_xtoi:
  2856                           	opt stack 0
  2857  000083                     ?___lwdiv:
  2858                           	opt stack 0
  2859  000083                     Uart_WriteStringLen@Index:
  2860                           	opt stack 0
  2861  000083                     I2cSlv_SendI2cMsg@DataLenght:
  2862                           	opt stack 0
  2863  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  2864                           	opt stack 0
  2865  000083                     sprintf@flag:
  2866                           	opt stack 0
  2867  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  2868                           	opt stack 0
  2869  000083                     USBConfigureEndpoint@handle:
  2870                           	opt stack 0
  2871  000083                     putUSBUSART@data:
  2872                           	opt stack 0
  2873  000083                     atoi@s:
  2874                           	opt stack 0
  2875  000083                     ___awdiv@quotient:
  2876                           	opt stack 0
  2877  000083                     ___lwdiv@dividend:
  2878                           	opt stack 0
  2879  000083                     memcpy@d:
  2880                           	opt stack 0
  2881  000083                     memset@p:
  2882                           	opt stack 0
  2883  000083                     xtoi@s:
  2884                           	opt stack 0
  2885  000083                     OsTmr_StartTimer@Timeout:
  2886                           	opt stack 0
  2887                           
  2888                           ; 4 bytes @ 0x23
  2889  000083                     	ds	1
  2890  000084                     Uart_WriteStringLen@Module:
  2891                           	opt stack 0
  2892  000084                     I2cSlv_SendI2cMsg@TxSts:
  2893                           	opt stack 0
  2894  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  2895                           	opt stack 0
  2896  000084                     CDCTxService@i:
  2897                           	opt stack 0
  2898  000084                     getsUSBUSART@buffer:
  2899                           	opt stack 0
  2900  000084                     sprintf@ap:
  2901                           	opt stack 0
  2902                           
  2903                           ; 2 bytes @ 0x24
  2904  000084                     	ds	1
  2905  000085                     ??_atoi:
  2906  000085                     ??_xtoi:
  2907  000085                     ??_GetElapsedTime:
  2908  000085                     Rtcc_SetRtccValue@Value:
  2909                           	opt stack 0
  2910  000085                     USBDeviceInit@i:
  2911                           	opt stack 0
  2912  000085                     USBEnableEndpoint@options:
  2913                           	opt stack 0
  2914  000085                     putUSBUSART@length:
  2915                           	opt stack 0
  2916  000085                     CDCTxService@byte_to_send:
  2917                           	opt stack 0
  2918  000085                     StringCompare@Result:
  2919                           	opt stack 0
  2920  000085                     StringCopy@Index:
  2921                           	opt stack 0
  2922  000085                     ___lwdiv@divisor:
  2923                           	opt stack 0
  2924  000085                     memcpy@s:
  2925                           	opt stack 0
  2926  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  2927                           	opt stack 0
  2928  000085                     ___lmul@product:
  2929                           	opt stack 0
  2930                           
  2931                           ; 4 bytes @ 0x25
  2932  000085                     	ds	1
  2933  000086                     ??_Rtcc_SetRtccValue:
  2934  000086                     getsUSBUSART@len:
  2935                           	opt stack 0
  2936  000086                     sprintf@c:
  2937                           	opt stack 0
  2938  000086                     USBEnableEndpoint@p:
  2939                           	opt stack 0
  2940  000086                     StringCompare@Index:
  2941                           	opt stack 0
  2942                           
  2943                           ; 2 bytes @ 0x26
  2944  000086                     	ds	1
  2945  000087                     atoi@sign:
  2946                           	opt stack 0
  2947  000087                     ___lwdiv@counter:
  2948                           	opt stack 0
  2949  000087                     memcpy@tmp:
  2950                           	opt stack 0
  2951  000087                     xtoi@sign:
  2952                           	opt stack 0
  2953  000087                     sprintf@cp:
  2954                           	opt stack 0
  2955                           
  2956                           ; 2 bytes @ 0x27
  2957  000087                     	ds	1
  2958  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  2959                           	opt stack 0
  2960  000088                     USBEnableEndpoint@ep:
  2961                           	opt stack 0
  2962  000088                     atoi@a:
  2963                           	opt stack 0
  2964  000088                     ___lwdiv@quotient:
  2965                           	opt stack 0
  2966  000088                     xtoi@val:
  2967                           	opt stack 0
  2968  000088                     ModemEvtParser@CallReadyString:
  2969                           	opt stack 0
  2970                           
  2971                           ; 10 bytes @ 0x28
  2972  000088                     	ds	1
  2973  000089                     ??_Rtcm_GetRtccDate:
  2974  000089                     ?_strtol:
  2975                           	opt stack 0
  2976  000089                     ?___lldiv:
  2977                           	opt stack 0
  2978  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  2979                           	opt stack 0
  2980  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2981                           	opt stack 0
  2982  000089                     strtol@s:
  2983                           	opt stack 0
  2984  000089                     ___lldiv@dividend:
  2985                           	opt stack 0
  2986  000089                     Rtcm_SetRtccDate@Date:
  2987                           	opt stack 0
  2988                           
  2989                           ; 8 bytes @ 0x29
  2990  000089                     	ds	1
  2991  00008A                     xtoi@c:
  2992                           	opt stack 0
  2993  00008A                     LedBlinkStateMachine@LedBlink:
  2994                           	opt stack 0
  2995  00008A                     LedPulseStateMachine@LedPulse:
  2996                           	opt stack 0
  2997  00008A                     secondsAppTimer@counter:
  2998                           	opt stack 0
  2999  00008A                     utoa@buf:
  3000                           	opt stack 0
  3001  00008A                     Rtcm_GetRtccDate@LocalDate:
  3002                           	opt stack 0
  3003                           
  3004                           ; 8 bytes @ 0x2A
  3005  00008A                     	ds	1
  3006  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3007                           	opt stack 0
  3008  00008B                     strtol@endptr:
  3009                           	opt stack 0
  3010                           
  3011                           ; 2 bytes @ 0x2B
  3012  00008B                     	ds	1
  3013  00008C                     LedPulseStateMachine@Led:
  3014                           	opt stack 0
  3015  00008C                     secondsAppTimer@isCyclic:
  3016                           	opt stack 0
  3017  00008C                     utoa@val:
  3018                           	opt stack 0
  3019                           
  3020                           ; 2 bytes @ 0x2C
  3021  00008C                     	ds	1
  3022  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3023                           	opt stack 0
  3024  00008D                     strtol@base:
  3025                           	opt stack 0
  3026  00008D                     GetElapsedTime@TimeValue:
  3027                           	opt stack 0
  3028  00008D                     ___lldiv@divisor:
  3029                           	opt stack 0
  3030                           
  3031                           ; 4 bytes @ 0x2D
  3032  00008D                     	ds	1
  3033  00008E                     utoa@base:
  3034                           	opt stack 0
  3035                           
  3036                           ; 2 bytes @ 0x2E
  3037  00008E                     	ds	1
  3038  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3039  00008F                     ??_strtol:
  3040  00008F                     secondsAppTimer@seconds:
  3041                           	opt stack 0
  3042  00008F                     LedStateMachine@LedSts:
  3043                           	opt stack 0
  3044                           
  3045                           ; 2 bytes @ 0x2F
  3046  00008F                     	ds	1
  3047  000090                     secondsAppTimer@isExpired:
  3048                           	opt stack 0
  3049  000090                     utoa@v:
  3050                           	opt stack 0
  3051                           
  3052                           ; 2 bytes @ 0x30
  3053  000090                     	ds	1
  3054  000091                     ??_USBStdFeatureReqHandler:
  3055  000091                     USBStdSetCfgHandler@i:
  3056                           	opt stack 0
  3057  000091                     LedStateMachine@LedOut:
  3058                           	opt stack 0
  3059  000091                     secondsAppTimer@destinationTicks:
  3060                           	opt stack 0
  3061  000091                     GetElapsedTime@CurrentTimestamp:
  3062                           	opt stack 0
  3063  000091                     ___lldiv@quotient:
  3064                           	opt stack 0
  3065                           
  3066                           ; 4 bytes @ 0x31
  3067  000091                     	ds	1
  3068  000092                     utoa@c:
  3069                           	opt stack 0
  3070  000092                     USBStdFeatureReqHandler@pUEP:
  3071                           	opt stack 0
  3072  000092                     ModemEvtParser@SmsString:
  3073                           	opt stack 0
  3074                           
  3075                           ; 5 bytes @ 0x32
  3076  000092                     	ds	1
  3077  000093                     strtol@sign:
  3078                           	opt stack 0
  3079  000093                     LedStateMachine@LedBlink:
  3080                           	opt stack 0
  3081  000093                     blinkForSeconds@blickTicks:
  3082                           	opt stack 0
  3083  000093                     itoa@buf:
  3084                           	opt stack 0
  3085                           
  3086                           ; 2 bytes @ 0x33
  3087  000093                     	ds	1
  3088  000094                     USBStdFeatureReqHandler@current_ep_data:
  3089                           	opt stack 0
  3090  000094                     strtol@a:
  3091                           	opt stack 0
  3092                           
  3093                           ; 4 bytes @ 0x34
  3094  000094                     	ds	1
  3095  000095                     blinkForSeconds@seconds:
  3096                           	opt stack 0
  3097  000095                     ___lldiv@counter:
  3098                           	opt stack 0
  3099  000095                     OsTmr_GetTimerStatus@Timer:
  3100                           	opt stack 0
  3101  000095                     USBStdFeatureReqHandler@p:
  3102                           	opt stack 0
  3103  000095                     LedStateMachine@LedPulse:
  3104                           	opt stack 0
  3105  000095                     itoa@val:
  3106                           	opt stack 0
  3107                           
  3108                           ; 2 bytes @ 0x35
  3109  000095                     	ds	1
  3110  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3111                           	opt stack 0
  3112  000096                     SetUartBaudRate@UartConfig:
  3113                           	opt stack 0
  3114  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3115                           	opt stack 0
  3116  000096                     MyApp_Task@phone:
  3117                           	opt stack 0
  3118                           
  3119                           ; 10 bytes @ 0x36
  3120  000096                     	ds	1
  3121  000097                     ??_USBCtrlEPService:
  3122  000097                     itoa@base:
  3123                           	opt stack 0
  3124  000097                     ModemEvtParser@RingString:
  3125                           	opt stack 0
  3126                           
  3127                           ; 4 bytes @ 0x37
  3128  000097                     	ds	1
  3129  000098                     Tmr_TmrBPrSet@Prescaler:
  3130                           	opt stack 0
  3131  000098                     USBDeviceTasks@i:
  3132                           	opt stack 0
  3133  000098                     LedStateMachine@LedOutSts:
  3134                           	opt stack 0
  3135  000098                     strtol@c:
  3136                           	opt stack 0
  3137                           
  3138                           ; 1 bytes @ 0x38
  3139  000098                     	ds	1
  3140  000099                     Tmr_TmrBPrSet@Postscaler:
  3141                           	opt stack 0
  3142  000099                     SetUartBaudRate@Module:
  3143                           	opt stack 0
  3144  000099                     LedStateMachine@Led:
  3145                           	opt stack 0
  3146  000099                     itoa@cp:
  3147                           	opt stack 0
  3148                           
  3149                           ; 2 bytes @ 0x39
  3150  000099                     	ds	1
  3151  00009A                     ??_Led_MainTask:
  3152  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3153                           	opt stack 0
  3154  00009A                     SetUartBaudRate@BaudRateRegister:
  3155                           	opt stack 0
  3156  00009A                     SetBaudRate@McuClockHz:
  3157                           	opt stack 0
  3158                           
  3159                           ; 4 bytes @ 0x3A
  3160  00009A                     	ds	1
  3161  00009B                     ??_SendSmsSm:
  3162  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3163                           	opt stack 0
  3164  00009B                     ModemEvtParser@Match:
  3165                           	opt stack 0
  3166  00009B                     OsTmr_Wait@WaitTimer:
  3167                           	opt stack 0
  3168  00009B                     InitGprsNetwork@Apn:
  3169                           	opt stack 0
  3170  00009B                     HttpGetMethod@GetData:
  3171                           	opt stack 0
  3172                           
  3173                           ; 2 bytes @ 0x3B
  3174  00009B                     	ds	1
  3175  00009C                     SetUartBaudRate@DivisionFactor:
  3176                           	opt stack 0
  3177  00009C                     ModemEvtParser@CompareIdx:
  3178                           	opt stack 0
  3179  00009C                     Tmr_TmrBPrSet@Divisor:
  3180                           	opt stack 0
  3181                           
  3182                           ; 4 bytes @ 0x3C
  3183  00009C                     	ds	1
  3184  00009D                     ??_HttpGetMethod:
  3185  00009D                     InitGprsNetwork@ApnLen:
  3186                           	opt stack 0
  3187  00009D                     Uart_InitUartModule@UartConfig:
  3188                           	opt stack 0
  3189  00009D                     OsTmr_Wait@DelayMs:
  3190                           	opt stack 0
  3191                           
  3192                           ; 4 bytes @ 0x3D
  3193  00009D                     	ds	1
  3194  00009E                     ??_SetBaudRate:
  3195  00009E                     ??_InitGprsNetwork:
  3196                           
  3197                           ; 1 bytes @ 0x3E
  3198  00009E                     	ds	1
  3199  00009F                     ??_Uart_InitUartModule:
  3200                           
  3201                           ; 1 bytes @ 0x3F
  3202  00009F                     	ds	1
  3203  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3204                           	opt stack 0
  3205  0000A0                     MyApp_Task@off:
  3206                           	opt stack 0
  3207                           
  3208                           ; 2 bytes @ 0x40
  3209  0000A0                     	ds	1
  3210  0000A1                     Uart_InitUartModule@Module:
  3211                           	opt stack 0
  3212  0000A1                     OsTmr_Wait@Ret:
  3213                           	opt stack 0
  3214                           
  3215                           ; 1 bytes @ 0x41
  3216  0000A1                     	ds	1
  3217  0000A2                     ??_Terminal:
  3218  0000A2                     I2c_InitI2cModule@I2cConfig:
  3219                           	opt stack 0
  3220  0000A2                     MyApp_Task@on:
  3221                           	opt stack 0
  3222                           
  3223                           ; 2 bytes @ 0x42
  3224  0000A2                     	ds	1
  3225  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3226                           	opt stack 0
  3227                           
  3228                           ; 1 bytes @ 0x43
  3229  0000A3                     	ds	1
  3230  0000A4                     ??_I2c_InitI2cModule:
  3231  0000A4                     Terminal@i:
  3232                           	opt stack 0
  3233  0000A4                     MyApp_Task@I2cTxBufferTest:
  3234                           	opt stack 0
  3235  0000A4                     InitSchedTimer@TmrBConfig:
  3236                           	opt stack 0
  3237                           
  3238                           ; 7 bytes @ 0x44
  3239  0000A4                     	ds	1
  3240  0000A5                     Terminal@ReceivedBytes:
  3241                           	opt stack 0
  3242                           
  3243                           ; 1 bytes @ 0x45
  3244  0000A5                     	ds	1
  3245  0000A6                     Terminal@Index:
  3246                           	opt stack 0
  3247                           
  3248                           ; 1 bytes @ 0x46
  3249  0000A6                     	ds	1
  3250  0000A7                     ??_InitializeTasks:
  3251  0000A7                     ??_ScheduleTasks:
  3252  0000A7                     
  3253                           ; 1 bytes @ 0x47
  3254  0000A7                     	ds	2
  3255  0000A9                     InitializeTasks@ActiveTaskIndex:
  3256                           	opt stack 0
  3257                           
  3258                           ; 1 bytes @ 0x49
  3259  0000A9                     	ds	2
  3260  0000AB                     ScheduleTasks@ActiveTaskIndex:
  3261                           	opt stack 0
  3262                           
  3263                           ; 1 bytes @ 0x4B
  3264  0000AB                     	ds	1
  3265  0000AC                     tblptru	equ	0xFF8
  3266                           tblptrh	equ	0xFF7
  3267                           tblptrl	equ	0xFF6
  3268                           tablat	equ	0xFF5
  3269                           postinc0	equ	0xFEE
  3270                           wreg	equ	0xFE8
  3271                           postdec1	equ	0xFE5
  3272                           fsr1h	equ	0xFE2
  3273                           fsr1l	equ	0xFE1
  3274                           
  3275                           ; 1 bytes @ 0x4C
  3276                           
  3277                           	psect	cstackCOMRAM
  3278  000001                     __pcstackCOMRAM:
  3279                           	opt stack 0
  3280  000001                     i2GenerateEvt@Event:
  3281                           	opt stack 0
  3282                           
  3283                           ; 2 bytes @ 0x0
  3284  000001                     	ds	2
  3285  000003                     i2GenerateEvt@EventStatus:
  3286                           	opt stack 0
  3287                           
  3288                           ; 1 bytes @ 0x2
  3289  000003                     	ds	1
  3290  000004                     Uart_MdmGsmGprsReadService@UartData:
  3291                           	opt stack 0
  3292                           
  3293                           ; 1 bytes @ 0x3
  3294  000004                     	ds	1
  3295  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3296                           	opt stack 0
  3297                           
  3298                           ; 2 bytes @ 0x4
  3299  000005                     	ds	2
  3300  000007                     ??_HighPriorityIsr:
  3301                           
  3302                           ; 1 bytes @ 0x6
  3303  000007                     	ds	18
  3304  000019                     ?i1___wmul:
  3305                           	opt stack 0
  3306  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3307                           	opt stack 0
  3308  000019                     i1GenerateEvt@Event:
  3309                           	opt stack 0
  3310  000019                     i1___wmul@multiplier:
  3311                           	opt stack 0
  3312                           
  3313                           ; 2 bytes @ 0x18
  3314  000019                     	ds	2
  3315  00001B                     i1GenerateEvt@EventStatus:
  3316                           	opt stack 0
  3317  00001B                     i1___wmul@multiplicand:
  3318                           	opt stack 0
  3319                           
  3320                           ; 2 bytes @ 0x1A
  3321  00001B                     	ds	1
  3322  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3323                           	opt stack 0
  3324                           
  3325                           ; 2 bytes @ 0x1B
  3326  00001C                     	ds	1
  3327  00001D                     i1___wmul@product:
  3328                           	opt stack 0
  3329                           
  3330                           ; 2 bytes @ 0x1C
  3331  00001D                     	ds	1
  3332  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3333                           	opt stack 0
  3334                           
  3335                           ; 1 bytes @ 0x1D
  3336  00001E                     	ds	1
  3337  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3338                           	opt stack 0
  3339                           
  3340                           ; 1 bytes @ 0x1E
  3341  00001F                     	ds	1
  3342  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3343                           	opt stack 0
  3344                           
  3345                           ; 1 bytes @ 0x1F
  3346  000020                     	ds	1
  3347  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3348                           	opt stack 0
  3349                           
  3350                           ; 2 bytes @ 0x20
  3351  000021                     	ds	2
  3352  000023                     tblptru	equ	0xFF8
  3353                           tblptrh	equ	0xFF7
  3354                           tblptrl	equ	0xFF6
  3355                           tablat	equ	0xFF5
  3356                           postinc0	equ	0xFEE
  3357                           wreg	equ	0xFE8
  3358                           postdec1	equ	0xFE5
  3359                           fsr1h	equ	0xFE2
  3360                           fsr1l	equ	0xFE1
  3361                           
  3362                           ; 1 bytes @ 0x22
  3363 ;;
  3364 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3365 ;;
  3366 ;; *************** function _main *****************
  3367 ;; Defined at:
  3368 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  2   14[None  ] short 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3386 ;;Total ram usage:        0 bytes
  3387 ;; Hardware stack levels required when called:   23
  3388 ;; This function calls:
  3389 ;;		_Sch_MainScheduler
  3390 ;;		_SystemInit
  3391 ;; This function is called by:
  3392 ;;		Startup code after reset
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text0
  3397  005ECC                     __ptext0:
  3398                           	opt stack 0
  3399  005ECC                     _main:
  3400                           	opt stack 8
  3401                           
  3402                           ;main.c: 61: SystemInit();
  3403                           
  3404                           ;incstack = 0
  3405  005ECC  ECBD  F02C         	call	_SystemInit	;wreg free
  3406                           
  3407                           ;main.c: 64: Sch_MainScheduler();
  3408  005ED0  EC7D  F02E         	call	_Sch_MainScheduler	;wreg free
  3409                           
  3410                           ;main.c: 67: return 0;
  3411                           ;	Return value of _main is never used
  3412  005ED4  EF66  F000         	goto	start
  3413  005ED8                     __end_of_main:
  3414                           	opt stack 0
  3415                           tblptru	equ	0xFF8
  3416                           tblptrh	equ	0xFF7
  3417                           tblptrl	equ	0xFF6
  3418                           tablat	equ	0xFF5
  3419                           postinc0	equ	0xFEE
  3420                           wreg	equ	0xFE8
  3421                           postdec1	equ	0xFE5
  3422                           fsr1h	equ	0xFE2
  3423                           fsr1l	equ	0xFE1
  3424                           
  3425 ;; *************** function _SystemInit *****************
  3426 ;; Defined at:
  3427 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3445 ;;Total ram usage:        0 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:   15
  3448 ;; This function calls:
  3449 ;;		_InitSchedTimer
  3450 ;;		_Irq_InitIntController
  3451 ;;		_Mcu_ConfigExtInt
  3452 ;;		_Mcu_StartSystemPll
  3453 ;;		_Pm_DsReleasePinControl
  3454 ;;		_Tmr_RegisterTmr2IsrCallback
  3455 ;; This function is called by:
  3456 ;;		_main
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           	psect	text1
  3461  00597A                     __ptext1:
  3462                           	opt stack 0
  3463  00597A                     _SystemInit:
  3464                           	opt stack 15
  3465                           
  3466                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3467                           
  3468                           ;incstack = 0
  3469  00597A  EC89  F02F         	call	_Pm_DsReleasePinControl	;wreg free
  3470                           
  3471                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3472  00597E  EC6E  F02E         	call	_Mcu_StartSystemPll	;wreg free
  3473                           
  3474                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3475  005982  0E01               	movlw	1
  3476  005984  0100               	movlb	0	; () banked
  3477  005986  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3478  005988  0E01               	movlw	1
  3479  00598A  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3480  00598C  0E01               	movlw	1
  3481  00598E  EC61  F02D         	call	_Irq_InitIntController
  3482                           
  3483                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3484  005992  0EB0               	movlw	low _Sch_SchmIntService
  3485  005994  0100               	movlb	0	; () banked
  3486  005996  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3487  005998  0E5E               	movlw	high _Sch_SchmIntService
  3488  00599A  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3489  00599C  EC6C  F02F         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3490                           
  3491                           ;sys_init.c: 132: InitSchedTimer();
  3492  0059A0  EC1D  F02D         	call	_InitSchedTimer	;wreg free
  3493                           
  3494                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3495  0059A4  ECA8  F02E         	call	_Mcu_ConfigExtInt	;wreg free
  3496  0059A8  0012               	return		;funcret
  3497  0059AA                     __end_of_SystemInit:
  3498                           	opt stack 0
  3499                           tblptru	equ	0xFF8
  3500                           tblptrh	equ	0xFF7
  3501                           tblptrl	equ	0xFF6
  3502                           tablat	equ	0xFF5
  3503                           postinc0	equ	0xFEE
  3504                           wreg	equ	0xFE8
  3505                           postdec1	equ	0xFE5
  3506                           fsr1h	equ	0xFE2
  3507                           fsr1l	equ	0xFE1
  3508                           
  3509 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3510 ;; Defined at:
  3511 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3514 ;;		 -> Sch_SchmIntService(1), 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;		None
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      void 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3526 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3529 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3530 ;;Total ram usage:        2 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:   11
  3533 ;; This function calls:
  3534 ;;		Nothing
  3535 ;; This function is called by:
  3536 ;;		_SystemInit
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text2
  3541  005ED8                     __ptext2:
  3542                           	opt stack 0
  3543  005ED8                     _Tmr_RegisterTmr2IsrCallback:
  3544                           	opt stack 18
  3545                           
  3546                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3547                           
  3548                           ;incstack = 0
  3549  005ED8  C07D  F1D3         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3550  005EDC  C07E  F1D4         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3551  005EE0  0012               	return		;funcret
  3552  005EE2                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3553                           	opt stack 0
  3554                           tblptru	equ	0xFF8
  3555                           tblptrh	equ	0xFF7
  3556                           tblptrl	equ	0xFF6
  3557                           tablat	equ	0xFF5
  3558                           postinc0	equ	0xFEE
  3559                           wreg	equ	0xFE8
  3560                           postdec1	equ	0xFE5
  3561                           fsr1h	equ	0xFE2
  3562                           fsr1l	equ	0xFE1
  3563                           
  3564 ;; *************** function _Pm_DsReleasePinControl *****************
  3565 ;; Defined at:
  3566 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;		None
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		None
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3584 ;;Total ram usage:        0 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:   11
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_SystemInit
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text3
  3595  005F12                     __ptext3:
  3596                           	opt stack 0
  3597  005F12                     _Pm_DsReleasePinControl:
  3598                           	opt stack 18
  3599                           
  3600                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3601                           
  3602                           ;incstack = 0
  3603  005F12  010F               	movlb	15	; () banked
  3604  005F14  914C               	bcf	76,0,b	;volatile
  3605                           
  3606                           ; BSR set to: 15
  3607  005F16  0012               	return		;funcret
  3608  005F18                     __end_of_Pm_DsReleasePinControl:
  3609                           	opt stack 0
  3610                           tblptru	equ	0xFF8
  3611                           tblptrh	equ	0xFF7
  3612                           tblptrl	equ	0xFF6
  3613                           tablat	equ	0xFF5
  3614                           postinc0	equ	0xFEE
  3615                           wreg	equ	0xFE8
  3616                           postdec1	equ	0xFE5
  3617                           fsr1h	equ	0xFE2
  3618                           fsr1l	equ	0xFE1
  3619                           
  3620 ;; *************** function _Mcu_StartSystemPll *****************
  3621 ;; Defined at:
  3622 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3637 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3639 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3640 ;;Total ram usage:        2 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:   11
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_SystemInit
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text4
  3651  005CDC                     __ptext4:
  3652                           	opt stack 0
  3653  005CDC                     _Mcu_StartSystemPll:
  3654                           	opt stack 18
  3655                           
  3656                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3657                           
  3658                           ; BSR set to: 15
  3659                           ;incstack = 0
  3660  005CDC  0E03               	movlw	3
  3661  005CDE  0100               	movlb	0	; () banked
  3662  005CE0  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3663  005CE2  0EE8               	movlw	232
  3664  005CE4  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3668  005CE6  8C9B               	bsf	3995,6,c	;volatile
  3669  005CE8                     l10816:
  3670                           
  3671                           ; BSR set to: 0
  3672  005CE8  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3673  005CEA  A0D8               	btfss	status,0,c
  3674  005CEC  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3675  005CEE  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3676  005CF0  E1FB               	bnz	l10816
  3677  005CF2  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3678  005CF4  B4D8               	btfsc	status,2,c
  3679  005CF6  0012               	return	
  3680  005CF8  D7F7               	goto	l237
  3681  005CFA                     __end_of_Mcu_StartSystemPll:
  3682                           	opt stack 0
  3683                           tblptru	equ	0xFF8
  3684                           tblptrh	equ	0xFF7
  3685                           tblptrl	equ	0xFF6
  3686                           tablat	equ	0xFF5
  3687                           postinc0	equ	0xFEE
  3688                           wreg	equ	0xFE8
  3689                           postdec1	equ	0xFE5
  3690                           fsr1h	equ	0xFE2
  3691                           fsr1l	equ	0xFE1
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function _Mcu_ConfigExtInt *****************
  3695 ;; Defined at:
  3696 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3714 ;;Total ram usage:        0 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:   11
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_SystemInit
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text5
  3725  005D50                     __ptext5:
  3726                           	opt stack 0
  3727  005D50                     _Mcu_ConfigExtInt:
  3728                           	opt stack 18
  3729                           
  3730                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;incstack = 0
  3734  005D50  8093               	bsf	3987,0,c	;volatile
  3735                           
  3736                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  3737  005D52  8695               	bsf	3989,3,c	;volatile
  3738                           
  3739                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  3740  005D54  010F               	movlb	15	; () banked
  3741  005D56  8949               	bsf	73,4,b	;volatile
  3742                           
  3743                           ; BSR set to: 15
  3744                           ;mcu_drv.c: 108: RPINR1 = 20;
  3745  005D58  0E14               	movlw	20
  3746  005D5A  010E               	movlb	14	; () banked
  3747  005D5C  6FE7               	movwf	231,b	;volatile
  3748                           
  3749                           ; BSR set to: 14
  3750                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  3751  005D5E  88F2               	bsf	intcon,4,c	;volatile
  3752                           
  3753                           ; BSR set to: 14
  3754                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  3755  005D60  86F0               	bsf	intcon3,3,c	;volatile
  3756                           
  3757                           ; BSR set to: 14
  3758                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  3759  005D62  8CF0               	bsf	intcon3,6,c	;volatile
  3760                           
  3761                           ; BSR set to: 14
  3762                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  3763  005D64  9CF1               	bcf	intcon2,6,c	;volatile
  3764                           
  3765                           ; BSR set to: 14
  3766                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  3767  005D66  9AF1               	bcf	intcon2,5,c	;volatile
  3768                           
  3769                           ; BSR set to: 14
  3770  005D68  0012               	return		;funcret
  3771  005D6A                     __end_of_Mcu_ConfigExtInt:
  3772                           	opt stack 0
  3773                           tblptru	equ	0xFF8
  3774                           tblptrh	equ	0xFF7
  3775                           tblptrl	equ	0xFF6
  3776                           tablat	equ	0xFF5
  3777                           intcon	equ	0xFF2
  3778                           intcon2	equ	0xFF1
  3779                           intcon3	equ	0xFF0
  3780                           postinc0	equ	0xFEE
  3781                           wreg	equ	0xFE8
  3782                           postdec1	equ	0xFE5
  3783                           fsr1h	equ	0xFE2
  3784                           fsr1l	equ	0xFE1
  3785                           status	equ	0xFD8
  3786                           
  3787 ;; *************** function _Irq_InitIntController *****************
  3788 ;; Defined at:
  3789 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  IntPriorityE    1    wreg     enum E7720
  3792 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  3793 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1    wreg      void 
  3798 ;; Registers used:
  3799 ;;		wreg
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3805 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3808 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3809 ;;Total ram usage:        3 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:   11
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_SystemInit
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text6
  3820  005AC2                     __ptext6:
  3821                           	opt stack 0
  3822  005AC2                     _Irq_InitIntController:
  3823                           	opt stack 18
  3824                           
  3825                           ; BSR set to: 14
  3826                           ;incstack = 0
  3827                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3828  005AC2  0100               	movlb	0	; () banked
  3829  005AC4  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3830                           
  3831                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3832  005AC6  0100               	movlb	0	; () banked
  3833  005AC8  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3834  005ACA  D002               	bra	u9365
  3835  005ACC  9ED0               	bcf	4048,7,c	;volatile
  3836  005ACE  D001               	bra	u9366
  3837  005AD0                     u9365:
  3838  005AD0  8ED0               	bsf	4048,7,c	;volatile
  3839  005AD2                     u9366:
  3840                           
  3841                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  3842  005AD2  0100               	movlb	0	; () banked
  3843  005AD4  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  3844  005AD6  D002               	bra	u9375
  3845  005AD8  9EF2               	bcf	intcon,7,c	;volatile
  3846  005ADA  D001               	bra	u9376
  3847  005ADC                     u9375:
  3848  005ADC  8EF2               	bsf	intcon,7,c	;volatile
  3849  005ADE                     u9376:
  3850                           
  3851                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  3852  005ADE  0100               	movlb	0	; () banked
  3853  005AE0  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  3854  005AE2  D002               	bra	u9385
  3855  005AE4  9CF2               	bcf	intcon,6,c	;volatile
  3856  005AE6  D001               	bra	u9386
  3857  005AE8                     u9385:
  3858  005AE8  8CF2               	bsf	intcon,6,c	;volatile
  3859  005AEA                     u9386:
  3860  005AEA  0012               	return		;funcret
  3861  005AEC                     __end_of_Irq_InitIntController:
  3862                           	opt stack 0
  3863                           tblptru	equ	0xFF8
  3864                           tblptrh	equ	0xFF7
  3865                           tblptrl	equ	0xFF6
  3866                           tablat	equ	0xFF5
  3867                           intcon	equ	0xFF2
  3868                           intcon2	equ	0xFF1
  3869                           intcon3	equ	0xFF0
  3870                           postinc0	equ	0xFEE
  3871                           wreg	equ	0xFE8
  3872                           postdec1	equ	0xFE5
  3873                           fsr1h	equ	0xFE2
  3874                           fsr1l	equ	0xFE1
  3875                           status	equ	0xFD8
  3876                           
  3877 ;; *************** function _InitSchedTimer *****************
  3878 ;; Defined at:
  3879 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;		None
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      void 
  3886 ;; Registers used:
  3887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3894 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3896 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3897 ;;Total ram usage:        7 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:   14
  3900 ;; This function calls:
  3901 ;;		_Tmr_TmrBConfig
  3902 ;; This function is called by:
  3903 ;;		_SystemInit
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text7
  3908  005A3A                     __ptext7:
  3909                           	opt stack 0
  3910  005A3A                     _InitSchedTimer:
  3911                           	opt stack 15
  3912                           
  3913                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  3914                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  3915                           
  3916                           ;incstack = 0
  3917  005A3A  0E04               	movlw	4
  3918  005A3C  0100               	movlb	0	; () banked
  3919  005A3E  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  3920                           
  3921                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  3922  005A40  0E0C               	movlw	12
  3923  005A42  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  3924                           
  3925                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  3926  005A44  0E00               	movlw	0
  3927  005A46  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  3928                           
  3929                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  3930  005A48  0E01               	movlw	1
  3931  005A4A  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  3932                           
  3933                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  3934  005A4C  0E03               	movlw	3
  3935  005A4E  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  3936  005A50  0EE8               	movlw	232
  3937  005A52  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  3938                           
  3939                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  3940  005A54  0E01               	movlw	1
  3941  005A56  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  3945  005A58  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  3946  005A5A  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  3947  005A5C  0E00               	movlw	high InitSchedTimer@TmrBConfig
  3948  005A5E  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  3949  005A60  0E02               	movlw	2
  3950  005A62  ECD3  F01C         	call	_Tmr_TmrBConfig
  3951  005A66  0012               	return		;funcret
  3952  005A68                     __end_of_InitSchedTimer:
  3953                           	opt stack 0
  3954                           tblptru	equ	0xFF8
  3955                           tblptrh	equ	0xFF7
  3956                           tblptrl	equ	0xFF6
  3957                           tablat	equ	0xFF5
  3958                           intcon	equ	0xFF2
  3959                           intcon2	equ	0xFF1
  3960                           intcon3	equ	0xFF0
  3961                           postinc0	equ	0xFEE
  3962                           wreg	equ	0xFE8
  3963                           postdec1	equ	0xFE5
  3964                           fsr1h	equ	0xFE2
  3965                           fsr1l	equ	0xFE1
  3966                           status	equ	0xFD8
  3967                           
  3968 ;; *************** function _Tmr_TmrBConfig *****************
  3969 ;; Defined at:
  3970 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  TmrNumb         1    wreg     unsigned char 
  3973 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  3974 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3987 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3988 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3989 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3990 ;;Total ram usage:        4 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:   13
  3993 ;; This function calls:
  3994 ;;		_TmrBInit
  3995 ;;		_Tmr_StartTmr
  3996 ;;		_Tmr_TmrBIrqSet
  3997 ;;		_Tmr_TmrBPrSet
  3998 ;; This function is called by:
  3999 ;;		_InitSchedTimer
  4000 ;;		_InitAuxTimer
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text8
  4005  0039A6                     __ptext8:
  4006                           	opt stack 0
  4007  0039A6                     _Tmr_TmrBConfig:
  4008                           	opt stack 15
  4009                           
  4010                           ;incstack = 0
  4011                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4012  0039A6  0100               	movlb	0	; () banked
  4013  0039A8  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4014                           
  4015                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4016  0039AA  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4017  0039AE  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4018  0039B2  50DF               	movf	indf2,w,c
  4019  0039B4  0100               	movlb	0	; () banked
  4020  0039B6  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4021  0039B8  EE20 F001          	lfsr	2,1
  4022  0039BC  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4023  0039BE  26D9               	addwf	fsr2l,f,c
  4024  0039C0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4025  0039C2  22DA               	addwfc	fsr2h,f,c
  4026  0039C4  50DF               	movf	indf2,w,c
  4027  0039C6  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4028  0039C8  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4029  0039CA  EC61  F022         	call	_TmrBInit
  4030                           
  4031                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4032  0039CE  0100               	movlb	0	; () banked
  4033  0039D0  EE20 F002          	lfsr	2,2
  4034  0039D4  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4035  0039D6  26D9               	addwf	fsr2l,f,c
  4036  0039D8  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4037  0039DA  22DA               	addwfc	fsr2h,f,c
  4038  0039DC  04DE               	decf	postinc2,w,c
  4039  0039DE  A4D8               	btfss	status,2,c
  4040  0039E0  D00E               	goto	l546
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;tmr_drv.c: 277: {
  4044                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4045  0039E2  EE20 F003          	lfsr	2,3
  4046  0039E6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4047  0039E8  26D9               	addwf	fsr2l,f,c
  4048  0039EA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4049  0039EC  22DA               	addwfc	fsr2h,f,c
  4050  0039EE  50DF               	movf	indf2,w,c
  4051  0039F0  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4052  0039F2  0E01               	movlw	1
  4053  0039F4  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4054  0039F6  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4055  0039F8  ECEA  F029         	call	_Tmr_TmrBIrqSet
  4056                           
  4057                           ;tmr_drv.c: 280: }
  4058  0039FC  D00E               	goto	l547
  4059  0039FE                     l546:
  4060                           
  4061                           ;tmr_drv.c: 281: else
  4062                           ;tmr_drv.c: 282: {
  4063                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4064  0039FE  0100               	movlb	0	; () banked
  4065  003A00  EE20 F003          	lfsr	2,3
  4066  003A04  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4067  003A06  26D9               	addwf	fsr2l,f,c
  4068  003A08  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4069  003A0A  22DA               	addwfc	fsr2h,f,c
  4070  003A0C  50DF               	movf	indf2,w,c
  4071  003A0E  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4072  003A10  0E00               	movlw	0
  4073  003A12  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4074  003A14  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4075  003A16  ECEA  F029         	call	_Tmr_TmrBIrqSet
  4076  003A1A                     l547:
  4077                           
  4078                           ;tmr_drv.c: 285: }
  4079                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4080  003A1A  0100               	movlb	0	; () banked
  4081  003A1C  EE20 F004          	lfsr	2,4
  4082  003A20  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4083  003A22  26D9               	addwf	fsr2l,f,c
  4084  003A24  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4085  003A26  22DA               	addwfc	fsr2h,f,c
  4086  003A28  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4087  003A2C  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4088  003A30  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4089  003A34  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4090  003A38  50DF               	movf	indf2,w,c
  4091  003A3A  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4092  003A3C  EE20 F001          	lfsr	2,1
  4093  003A40  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4094  003A42  26D9               	addwf	fsr2l,f,c
  4095  003A44  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4096  003A46  22DA               	addwfc	fsr2h,f,c
  4097  003A48  50DF               	movf	indf2,w,c
  4098  003A4A  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4099  003A4C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4100  003A4E  EC47  F017         	call	_Tmr_TmrBPrSet
  4101                           
  4102                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4103  003A52  0100               	movlb	0	; () banked
  4104  003A54  EE20 F006          	lfsr	2,6
  4105  003A58  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4106  003A5A  26D9               	addwf	fsr2l,f,c
  4107  003A5C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4108  003A5E  22DA               	addwfc	fsr2h,f,c
  4109  003A60  04DE               	decf	postinc2,w,c
  4110  003A62  A4D8               	btfss	status,2,c
  4111  003A64  0012               	return	
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;tmr_drv.c: 290: {
  4115                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4116  003A66  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4117  003A68  EC4E  F02E         	call	_Tmr_StartTmr
  4118                           
  4119                           ;tmr_drv.c: 293: }
  4120  003A6C  0012               	return	
  4121  003A6E                     __end_of_Tmr_TmrBConfig:
  4122                           	opt stack 0
  4123                           tblptru	equ	0xFF8
  4124                           tblptrh	equ	0xFF7
  4125                           tblptrl	equ	0xFF6
  4126                           tablat	equ	0xFF5
  4127                           intcon	equ	0xFF2
  4128                           intcon2	equ	0xFF1
  4129                           intcon3	equ	0xFF0
  4130                           postinc0	equ	0xFEE
  4131                           wreg	equ	0xFE8
  4132                           postdec1	equ	0xFE5
  4133                           fsr1h	equ	0xFE2
  4134                           fsr1l	equ	0xFE1
  4135                           indf2	equ	0xFDF
  4136                           postinc2	equ	0xFDE
  4137                           postdec2	equ	0xFDD
  4138                           fsr2h	equ	0xFDA
  4139                           fsr2l	equ	0xFD9
  4140                           status	equ	0xFD8
  4141                           
  4142 ;; *************** function _Tmr_TmrBPrSet *****************
  4143 ;; Defined at:
  4144 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  TmrNumb         1    wreg     unsigned char 
  4147 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4148 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4149 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4152 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4153 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      enum E7736
  4156 ;; Registers used:
  4157 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4163 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4164 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4166 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4167 ;;Total ram usage:       10 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:   12
  4170 ;; This function calls:
  4171 ;;		___lldiv
  4172 ;;		___lmul
  4173 ;; This function is called by:
  4174 ;;		_Tmr_TmrBConfig
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text9
  4179  002E8E                     __ptext9:
  4180                           	opt stack 0
  4181  002E8E                     _Tmr_TmrBPrSet:
  4182                           	opt stack 15
  4183                           
  4184                           ;incstack = 0
  4185                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4186  002E8E  0100               	movlb	0	; () banked
  4187  002E90  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4188                           
  4189                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4190                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4191  002E92  0E00               	movlw	0
  4192  002E94  0100               	movlb	0	; () banked
  4193  002E96  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4194  002E98  0E00               	movlw	0
  4195  002E9A  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4196  002E9C  0E00               	movlw	0
  4197  002E9E  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4198  002EA0  0E00               	movlw	0
  4199  002EA2  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4203  002EA4  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4204  002EA6  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4205  002EA8  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4206  002EAC  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4207  002EB0  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4208  002EB2  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4209  002EB4  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4210  002EB8  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4211  002EBC  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4212  002EBE  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4213  002EC0  ECCF  F027         	call	___lmul	;wreg free
  4214  002EC4  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4215  002EC8  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4216  002ECC  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4217  002ED0  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4218                           
  4219                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4220  002ED4  0E00               	movlw	0
  4221  002ED6  0100               	movlb	0	; () banked
  4222  002ED8  6F89               	movwf	___lldiv@dividend& (0+255),b
  4223  002EDA  0E1B               	movlw	27
  4224  002EDC  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4225  002EDE  0EB7               	movlw	183
  4226  002EE0  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4227  002EE2  0E00               	movlw	0
  4228  002EE4  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4229  002EE6  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4230  002EEA  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4231  002EEE  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4232  002EF2  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4233  002EF6  ECE7  F024         	call	___lldiv	;wreg free
  4234  002EFA  0100               	movlb	0	; () banked
  4235  002EFC  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4236  002EFE  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4237  002F00  E13A               	bnz	l12984
  4238  002F02  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4239  002F04  A0D8               	btfss	status,0,c
  4240  002F06  D02D               	goto	l529
  4241  002F08  D036               	goto	l528
  4242  002F0A                     
  4243                           ; BSR set to: 0
  4244                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4245                           
  4246                           ; BSR set to: 0
  4247  002F0A  0E00               	movlw	0
  4248  002F0C  6F89               	movwf	___lldiv@dividend& (0+255),b
  4249  002F0E  0E1B               	movlw	27
  4250  002F10  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4251  002F12  0EB7               	movlw	183
  4252  002F14  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4253  002F16  0E00               	movlw	0
  4254  002F18  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4255  002F1A  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4256  002F1E  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4257  002F22  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4258  002F26  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4259  002F2A  ECE7  F024         	call	___lldiv	;wreg free
  4260  002F2E  0100               	movlb	0	; () banked
  4261  002F30  5189               	movf	?___lldiv& (0+255),w,b
  4262  002F32  6ECB               	movwf	4043,c	;volatile
  4263                           
  4264                           ;tmr_drv.c: 210: break;
  4265  002F34  D01D               	goto	l531
  4266  002F36                     
  4267                           ; BSR set to: 0
  4268                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4269                           
  4270                           ; BSR set to: 0
  4271  002F36  0E00               	movlw	0
  4272  002F38  6F89               	movwf	___lldiv@dividend& (0+255),b
  4273  002F3A  0E1B               	movlw	27
  4274  002F3C  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4275  002F3E  0EB7               	movlw	183
  4276  002F40  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4277  002F42  0E00               	movlw	0
  4278  002F44  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4279  002F46  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4280  002F4A  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4281  002F4E  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4282  002F52  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4283  002F56  ECE7  F024         	call	___lldiv	;wreg free
  4284  002F5A  0100               	movlb	0	; () banked
  4285  002F5C  5189               	movf	?___lldiv& (0+255),w,b
  4286  002F5E  6E77               	movwf	3959,c	;volatile
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;tmr_drv.c: 219: }
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;tmr_drv.c: 218: break;
  4293                           
  4294                           ;tmr_drv.c: 217: default:
  4295                           
  4296                           ;tmr_drv.c: 215: break;
  4297  002F60  D007               	goto	l531
  4298  002F62                     l529:
  4299                           
  4300                           ; BSR set to: 0
  4301                           
  4302                           ; BSR set to: 0
  4303  002F62  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4304                           
  4305                           ; Switch size 1, requested type "space"
  4306                           ; Number of cases is 2, Range of values is 2 to 4
  4307                           ; switch strategies available:
  4308                           ; Name         Instructions Cycles
  4309                           ; simple_byte            7     4 (average)
  4310                           ;	Chosen strategy is simple_byte
  4311  002F64  0A02               	xorlw	2	; case 2
  4312  002F66  B4D8               	btfsc	status,2,c
  4313  002F68  D7D0               	goto	l530
  4314  002F6A  0A06               	xorlw	6	; case 4
  4315  002F6C  B4D8               	btfsc	status,2,c
  4316  002F6E  D7E3               	goto	l532
  4317  002F70                     l531:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4321                           
  4322                           ; BSR set to: 0
  4323  002F70  0E00               	movlw	0
  4324  002F72  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4325                           
  4326                           ;tmr_drv.c: 223: }
  4327  002F74  0012               	return	
  4328  002F76                     l528:
  4329  002F76                     l12984:
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;tmr_drv.c: 224: else
  4333                           ;tmr_drv.c: 225: {
  4334                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4335  002F76  0E01               	movlw	1
  4336  002F78  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4337                           
  4338                           ; BSR set to: 0
  4339  002F7A  0012               	return	
  4340  002F7C                     __end_of_Tmr_TmrBPrSet:
  4341                           	opt stack 0
  4342                           tblptru	equ	0xFF8
  4343                           tblptrh	equ	0xFF7
  4344                           tblptrl	equ	0xFF6
  4345                           tablat	equ	0xFF5
  4346                           prodh	equ	0xFF4
  4347                           prodl	equ	0xFF3
  4348                           intcon	equ	0xFF2
  4349                           intcon2	equ	0xFF1
  4350                           intcon3	equ	0xFF0
  4351                           postinc0	equ	0xFEE
  4352                           wreg	equ	0xFE8
  4353                           postdec1	equ	0xFE5
  4354                           fsr1h	equ	0xFE2
  4355                           fsr1l	equ	0xFE1
  4356                           indf2	equ	0xFDF
  4357                           postinc2	equ	0xFDE
  4358                           postdec2	equ	0xFDD
  4359                           fsr2h	equ	0xFDA
  4360                           fsr2l	equ	0xFD9
  4361                           status	equ	0xFD8
  4362                           
  4363 ;; *************** function _Tmr_TmrBIrqSet *****************
  4364 ;; Defined at:
  4365 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;  TmrNumb         1    wreg     unsigned char 
  4368 ;;  Priority        1   29[BANK0 ] enum E7716
  4369 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, status,0
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4381 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4382 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4384 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4385 ;;Total ram usage:        3 bytes
  4386 ;; Hardware stack levels used:    1
  4387 ;; Hardware stack levels required when called:   11
  4388 ;; This function calls:
  4389 ;;		Nothing
  4390 ;; This function is called by:
  4391 ;;		_Tmr_TmrBConfig
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           	psect	text10
  4396  0053D4                     __ptext10:
  4397                           	opt stack 0
  4398  0053D4                     _Tmr_TmrBIrqSet:
  4399                           	opt stack 16
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;incstack = 0
  4403                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4404  0053D4  0100               	movlb	0	; () banked
  4405  0053D6  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4406                           
  4407                           ;tmr_drv.c: 156: switch (TmrNumb)
  4408  0053D8  D01A               	goto	l520
  4409  0053DA                     l521:
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4413  0053DA  929E               	bcf	3998,1,c	;volatile
  4414                           
  4415                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4416  0053DC  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4417  0053DE  D002               	bra	u8005
  4418  0053E0  929F               	bcf	3999,1,c	;volatile
  4419  0053E2  D001               	bra	u8006
  4420  0053E4                     u8005:
  4421  0053E4  829F               	bsf	3999,1,c	;volatile
  4422  0053E6                     u8006:
  4423                           
  4424                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4425  0053E6  0100               	movlb	0	; () banked
  4426  0053E8  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4427  0053EA  D002               	bra	u8015
  4428  0053EC  929D               	bcf	3997,1,c	;volatile
  4429  0053EE  D001               	bra	u8016
  4430  0053F0                     u8015:
  4431  0053F0  829D               	bsf	3997,1,c	;volatile
  4432  0053F2                     u8016:
  4433                           
  4434                           ;tmr_drv.c: 165: break;
  4435  0053F2  0012               	return	
  4436  0053F4                     l523:
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4440  0053F4  96A4               	bcf	4004,3,c	;volatile
  4441                           
  4442                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4443  0053F6  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4444  0053F8  D002               	bra	u8025
  4445  0053FA  96A5               	bcf	4005,3,c	;volatile
  4446  0053FC  D001               	bra	u8026
  4447  0053FE                     u8025:
  4448  0053FE  86A5               	bsf	4005,3,c	;volatile
  4449  005400                     u8026:
  4450                           
  4451                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4452  005400  0100               	movlb	0	; () banked
  4453  005402  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4454  005404  D002               	bra	u8035
  4455  005406  96A3               	bcf	4003,3,c	;volatile
  4456  005408  D001               	bra	u8036
  4457  00540A                     u8035:
  4458  00540A  86A3               	bsf	4003,3,c	;volatile
  4459  00540C                     u8036:
  4460                           
  4461                           ;tmr_drv.c: 178: }
  4462                           
  4463                           ;tmr_drv.c: 177: break;
  4464                           
  4465                           ;tmr_drv.c: 176: default:
  4466                           
  4467                           ;tmr_drv.c: 174: break;
  4468  00540C  0012               	return	
  4469  00540E                     l520:
  4470  00540E  0100               	movlb	0	; () banked
  4471  005410  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4472                           
  4473                           ; Switch size 1, requested type "space"
  4474                           ; Number of cases is 2, Range of values is 2 to 4
  4475                           ; switch strategies available:
  4476                           ; Name         Instructions Cycles
  4477                           ; simple_byte            7     4 (average)
  4478                           ;	Chosen strategy is simple_byte
  4479  005412  0A02               	xorlw	2	; case 2
  4480  005414  B4D8               	btfsc	status,2,c
  4481  005416  D7E1               	goto	l521
  4482  005418  0A06               	xorlw	6	; case 4
  4483  00541A  A4D8               	btfss	status,2,c
  4484  00541C  0012               	return	
  4485  00541E  D7EA               	goto	l523
  4486  005420                     __end_of_Tmr_TmrBIrqSet:
  4487                           	opt stack 0
  4488                           tblptru	equ	0xFF8
  4489                           tblptrh	equ	0xFF7
  4490                           tblptrl	equ	0xFF6
  4491                           tablat	equ	0xFF5
  4492                           prodh	equ	0xFF4
  4493                           prodl	equ	0xFF3
  4494                           intcon	equ	0xFF2
  4495                           intcon2	equ	0xFF1
  4496                           intcon3	equ	0xFF0
  4497                           postinc0	equ	0xFEE
  4498                           wreg	equ	0xFE8
  4499                           postdec1	equ	0xFE5
  4500                           fsr1h	equ	0xFE2
  4501                           fsr1l	equ	0xFE1
  4502                           indf2	equ	0xFDF
  4503                           postinc2	equ	0xFDE
  4504                           postdec2	equ	0xFDD
  4505                           fsr2h	equ	0xFDA
  4506                           fsr2l	equ	0xFD9
  4507                           status	equ	0xFD8
  4508                           
  4509 ;; *************** function _Tmr_StartTmr *****************
  4510 ;; Defined at:
  4511 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  TmrNumb         1    wreg     unsigned char 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      void 
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, status,0
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4526 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4528 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4529 ;;Total ram usage:        1 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:   11
  4532 ;; This function calls:
  4533 ;;		Nothing
  4534 ;; This function is called by:
  4535 ;;		_Tmr_TmrBConfig
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           	psect	text11
  4540  005C9C                     __ptext11:
  4541                           	opt stack 0
  4542  005C9C                     _Tmr_StartTmr:
  4543                           	opt stack 16
  4544                           
  4545                           ;incstack = 0
  4546                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4547  005C9C  0100               	movlb	0	; () banked
  4548  005C9E  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4549                           
  4550                           ;tmr_drv.c: 245: switch (TmrNumb)
  4551  005CA0  D004               	goto	l538
  4552  005CA2                     l539:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4556  005CA2  84CA               	bsf	4042,2,c	;volatile
  4557                           
  4558                           ;tmr_drv.c: 250: break;
  4559  005CA4  0012               	return	
  4560  005CA6                     l541:
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4564  005CA6  8476               	bsf	3958,2,c	;volatile
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;tmr_drv.c: 259: }
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;tmr_drv.c: 258: break;
  4571                           
  4572                           ;tmr_drv.c: 257: default:
  4573                           
  4574                           ;tmr_drv.c: 255: break;
  4575  005CA8  0012               	return	
  4576  005CAA                     l538:
  4577                           
  4578                           ; BSR set to: 0
  4579  005CAA  0100               	movlb	0	; () banked
  4580  005CAC  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4581                           
  4582                           ; Switch size 1, requested type "space"
  4583                           ; Number of cases is 2, Range of values is 2 to 4
  4584                           ; switch strategies available:
  4585                           ; Name         Instructions Cycles
  4586                           ; simple_byte            7     4 (average)
  4587                           ;	Chosen strategy is simple_byte
  4588  005CAE  0A02               	xorlw	2	; case 2
  4589  005CB0  B4D8               	btfsc	status,2,c
  4590  005CB2  D7F7               	goto	l539
  4591  005CB4  0A06               	xorlw	6	; case 4
  4592  005CB6  A4D8               	btfss	status,2,c
  4593  005CB8  0012               	return	
  4594  005CBA  D7F5               	goto	l541
  4595  005CBC                     __end_of_Tmr_StartTmr:
  4596                           	opt stack 0
  4597                           tblptru	equ	0xFF8
  4598                           tblptrh	equ	0xFF7
  4599                           tblptrl	equ	0xFF6
  4600                           tablat	equ	0xFF5
  4601                           prodh	equ	0xFF4
  4602                           prodl	equ	0xFF3
  4603                           intcon	equ	0xFF2
  4604                           intcon2	equ	0xFF1
  4605                           intcon3	equ	0xFF0
  4606                           postinc0	equ	0xFEE
  4607                           wreg	equ	0xFE8
  4608                           postdec1	equ	0xFE5
  4609                           fsr1h	equ	0xFE2
  4610                           fsr1l	equ	0xFE1
  4611                           indf2	equ	0xFDF
  4612                           postinc2	equ	0xFDE
  4613                           postdec2	equ	0xFDD
  4614                           fsr2h	equ	0xFDA
  4615                           fsr2l	equ	0xFD9
  4616                           status	equ	0xFD8
  4617                           
  4618 ;; *************** function _TmrBInit *****************
  4619 ;; Defined at:
  4620 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;  TmrNumb         1    wreg     unsigned char 
  4623 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4624 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      void 
  4629 ;; Registers used:
  4630 ;;		wreg, status,2, status,0
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4636 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4638 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4639 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4640 ;;Total ram usage:        4 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:   11
  4643 ;; This function calls:
  4644 ;;		Nothing
  4645 ;; This function is called by:
  4646 ;;		_Tmr_TmrBConfig
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	text12
  4651  0044C2                     __ptext12:
  4652                           	opt stack 0
  4653  0044C2                     _TmrBInit:
  4654                           	opt stack 16
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;incstack = 0
  4658                           ;TmrBInit@TmrNumb stored from wreg
  4659  0044C2  0100               	movlb	0	; () banked
  4660  0044C4  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4661                           
  4662                           ;tmr_drv.c: 75: switch (TmrNumb)
  4663  0044C6  D03F               	goto	l500
  4664  0044C8                     l503:
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4668  0044C8  90CA               	bcf	4042,0,c	;volatile
  4669  0044CA  D001               	goto	L1
  4670  0044CC                     l505:
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4674  0044CC  80CA               	bsf	4042,0,c	;volatile
  4675  0044CE                     L1:
  4676                           
  4677                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4678  0044CE  92CA               	bcf	4042,1,c	;volatile
  4679                           
  4680                           ;tmr_drv.c: 91: break;
  4681  0044D0  D00E               	goto	l504
  4682  0044D2                     l506:
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4686  0044D2  80CA               	bsf	4042,0,c	;volatile
  4687                           
  4688                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4689  0044D4  82CA               	bsf	4042,1,c	;volatile
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;tmr_drv.c: 100: }
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;tmr_drv.c: 99: break;
  4696                           
  4697                           ;tmr_drv.c: 98: default:
  4698                           
  4699                           ;tmr_drv.c: 96: break;
  4700  0044D6  D00B               	goto	l504
  4701  0044D8                     
  4702                           ; BSR set to: 0
  4703  0044D8  0100               	movlb	0	; () banked
  4704  0044DA  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4705                           
  4706                           ; Switch size 1, requested type "space"
  4707                           ; Number of cases is 3, Range of values is 1 to 16
  4708                           ; switch strategies available:
  4709                           ; Name         Instructions Cycles
  4710                           ; simple_byte           10     6 (average)
  4711                           ;	Chosen strategy is simple_byte
  4712  0044DC  0A01               	xorlw	1	; case 1
  4713  0044DE  B4D8               	btfsc	status,2,c
  4714  0044E0  D7F3               	goto	l503
  4715  0044E2  0A05               	xorlw	5	; case 4
  4716  0044E4  B4D8               	btfsc	status,2,c
  4717  0044E6  D7F2               	goto	l505
  4718  0044E8  0A14               	xorlw	20	; case 16
  4719  0044EA  B4D8               	btfsc	status,2,c
  4720  0044EC  D7F2               	goto	l506
  4721  0044EE                     l504:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4725                           
  4726                           ; BSR set to: 0
  4727  0044EE  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4728  0044F2  0EFF               	movlw	255
  4729  0044F4  277F               	addwf	??_TmrBInit& (0+255),f,b
  4730  0044F6  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4731  0044F8  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4732  0044FA  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4733  0044FC  50CA               	movf	4042,w,c	;volatile
  4734  0044FE  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4735  004500  0B87               	andlw	-121
  4736  004502  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4737  004504  6ECA               	movwf	4042,c	;volatile
  4738                           
  4739                           ;tmr_drv.c: 104: break;
  4740  004506  0012               	return	
  4741  004508                     l511:
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4745  004508  9076               	bcf	3958,0,c	;volatile
  4746  00450A  D001               	goto	L2
  4747  00450C                     l513:
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4751  00450C  8076               	bsf	3958,0,c	;volatile
  4752  00450E                     L2:
  4753                           
  4754                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4755  00450E  9276               	bcf	3958,1,c	;volatile
  4756                           
  4757                           ;tmr_drv.c: 120: break;
  4758  004510  D00D               	goto	l512
  4759  004512                     l514:
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4763  004512  8076               	bsf	3958,0,c	;volatile
  4764                           
  4765                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4766  004514  8276               	bsf	3958,1,c	;volatile
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;tmr_drv.c: 129: }
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;tmr_drv.c: 128: break;
  4773                           
  4774                           ;tmr_drv.c: 127: default:
  4775                           
  4776                           ;tmr_drv.c: 125: break;
  4777  004516  D00A               	goto	l512
  4778  004518                     
  4779                           ; BSR set to: 0
  4780                           
  4781                           ; BSR set to: 0
  4782  004518  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4783                           
  4784                           ; Switch size 1, requested type "space"
  4785                           ; Number of cases is 3, Range of values is 1 to 16
  4786                           ; switch strategies available:
  4787                           ; Name         Instructions Cycles
  4788                           ; simple_byte           10     6 (average)
  4789                           ;	Chosen strategy is simple_byte
  4790  00451A  0A01               	xorlw	1	; case 1
  4791  00451C  B4D8               	btfsc	status,2,c
  4792  00451E  D7F4               	goto	l511
  4793  004520  0A05               	xorlw	5	; case 4
  4794  004522  B4D8               	btfsc	status,2,c
  4795  004524  D7F3               	goto	l513
  4796  004526  0A14               	xorlw	20	; case 16
  4797  004528  B4D8               	btfsc	status,2,c
  4798  00452A  D7F3               	goto	l514
  4799  00452C                     l512:
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4803                           
  4804                           ; BSR set to: 0
  4805  00452C  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4806  004530  0EFF               	movlw	255
  4807  004532  277F               	addwf	??_TmrBInit& (0+255),f,b
  4808  004534  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4809  004536  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4810  004538  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4811  00453A  5076               	movf	3958,w,c	;volatile
  4812  00453C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4813  00453E  0B87               	andlw	-121
  4814  004540  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4815  004542  6E76               	movwf	3958,c	;volatile
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;tmr_drv.c: 137: }
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;tmr_drv.c: 136: break;
  4822                           
  4823                           ;tmr_drv.c: 135: default:
  4824                           
  4825                           ;tmr_drv.c: 133: break;
  4826  004544  0012               	return	
  4827  004546                     l500:
  4828                           
  4829                           ; BSR set to: 0
  4830  004546  0100               	movlb	0	; () banked
  4831  004548  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  4832                           
  4833                           ; Switch size 1, requested type "space"
  4834                           ; Number of cases is 2, Range of values is 2 to 4
  4835                           ; switch strategies available:
  4836                           ; Name         Instructions Cycles
  4837                           ; simple_byte            7     4 (average)
  4838                           ;	Chosen strategy is simple_byte
  4839  00454A  0A02               	xorlw	2	; case 2
  4840  00454C  B4D8               	btfsc	status,2,c
  4841  00454E  D7C4               	goto	l502
  4842  004550  0A06               	xorlw	6	; case 4
  4843  004552  A4D8               	btfss	status,2,c
  4844  004554  0012               	return	
  4845  004556  D7E0               	goto	l510
  4846  004558                     __end_of_TmrBInit:
  4847                           	opt stack 0
  4848                           tblptru	equ	0xFF8
  4849                           tblptrh	equ	0xFF7
  4850                           tblptrl	equ	0xFF6
  4851                           tablat	equ	0xFF5
  4852                           prodh	equ	0xFF4
  4853                           prodl	equ	0xFF3
  4854                           intcon	equ	0xFF2
  4855                           intcon2	equ	0xFF1
  4856                           intcon3	equ	0xFF0
  4857                           postinc0	equ	0xFEE
  4858                           wreg	equ	0xFE8
  4859                           postdec1	equ	0xFE5
  4860                           fsr1h	equ	0xFE2
  4861                           fsr1l	equ	0xFE1
  4862                           indf2	equ	0xFDF
  4863                           postinc2	equ	0xFDE
  4864                           postdec2	equ	0xFDD
  4865                           fsr2h	equ	0xFDA
  4866                           fsr2l	equ	0xFD9
  4867                           status	equ	0xFD8
  4868                           
  4869 ;; *************** function _Sch_MainScheduler *****************
  4870 ;; Defined at:
  4871 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;		None
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;		None
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1    wreg      void 
  4878 ;; Registers used:
  4879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4889 ;;Total ram usage:        0 bytes
  4890 ;; Hardware stack levels used:    1
  4891 ;; Hardware stack levels required when called:   22
  4892 ;; This function calls:
  4893 ;;		_InitializeTasks
  4894 ;;		_ScheduleTasks
  4895 ;; This function is called by:
  4896 ;;		_main
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text13
  4901  005CFA                     __ptext13:
  4902                           	opt stack 0
  4903  005CFA                     _Sch_MainScheduler:
  4904                           	opt stack 8
  4905                           
  4906                           ;os_sched.c: 178: InitializeTasks();
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;incstack = 0
  4910  005CFA  ECDC  F025         	call	_InitializeTasks	;wreg free
  4911                           
  4912                           ;os_sched.c: 180: SystemState = RunningState;
  4913  005CFE  0E01               	movlw	1
  4914  005D00  0100               	movlb	0	; () banked
  4915  005D02  6FD2               	movwf	_SystemState& (0+255),b
  4916  005D04                     
  4917                           ;os_sched.c: 188: {
  4918                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  4919                           
  4920                           ; BSR set to: 0
  4921  005D04  0102               	movlb	2	; () banked
  4922  005D06  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  4923  005D08  A4D8               	btfss	status,2,c
  4924  005D0A  D7FC               	goto	l790
  4925                           
  4926                           ; BSR set to: 2
  4927                           ;os_sched.c: 191: {
  4928                           ;os_sched.c: 196: ScheduleTasks();
  4929  005D0C  ECA9  F015         	call	_ScheduleTasks	;wreg free
  4930                           
  4931                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  4932  005D10  0E01               	movlw	1
  4933  005D12  0102               	movlb	2	; () banked
  4934  005D14  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  4935                           
  4936                           ; BSR set to: 2
  4937                           
  4938                           ; BSR set to: 2
  4939  005D16  D7F6               	goto	l790
  4940  005D18                     __end_of_Sch_MainScheduler:
  4941                           	opt stack 0
  4942                           tblptru	equ	0xFF8
  4943                           tblptrh	equ	0xFF7
  4944                           tblptrl	equ	0xFF6
  4945                           tablat	equ	0xFF5
  4946                           prodh	equ	0xFF4
  4947                           prodl	equ	0xFF3
  4948                           intcon	equ	0xFF2
  4949                           intcon2	equ	0xFF1
  4950                           intcon3	equ	0xFF0
  4951                           postinc0	equ	0xFEE
  4952                           wreg	equ	0xFE8
  4953                           postdec1	equ	0xFE5
  4954                           fsr1h	equ	0xFE2
  4955                           fsr1l	equ	0xFE1
  4956                           indf2	equ	0xFDF
  4957                           postinc2	equ	0xFDE
  4958                           postdec2	equ	0xFDD
  4959                           fsr2h	equ	0xFDA
  4960                           fsr2l	equ	0xFD9
  4961                           status	equ	0xFD8
  4962                           
  4963 ;; *************** function _ScheduleTasks *****************
  4964 ;; Defined at:
  4965 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  ActiveTaskIn    1   75[BANK0 ] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4981 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4982 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4983 ;;Total ram usage:        5 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:   21
  4986 ;; This function calls:
  4987 ;;		_I2cSlv_MainTask
  4988 ;;		_Led_MainTask
  4989 ;;		_MdmHttp_MainTask
  4990 ;;		_Mdm_DrvMainFn
  4991 ;;		_Mdm_MainTask
  4992 ;;		_MyApp_Task
  4993 ;;		_Rtcm_MainTask
  4994 ;;		_Term_MainTask
  4995 ;;		_UsbDevice_MainTask
  4996 ;;		_Wdg_MainTask
  4997 ;; This function is called by:
  4998 ;;		_Sch_MainScheduler
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           	psect	text14
  5003  002B52                     __ptext14:
  5004                           	opt stack 0
  5005  002B52                     _ScheduleTasks:
  5006                           	opt stack 8
  5007                           
  5008                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5009                           
  5010                           ; BSR set to: 2
  5011                           ;incstack = 0
  5012  002B52  0E00               	movlw	0
  5013  002B54  0100               	movlb	0	; () banked
  5014  002B56  6FAB               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5015                           
  5016                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5017  002B58  0E00               	movlw	0
  5018  002B5A  6FAB               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5019  002B5C                     l13968:
  5020                           
  5021                           ; BSR set to: 0
  5022  002B5C  0E5D               	movlw	low _TaskNumber
  5023  002B5E  6EF6               	movwf	tblptrl,c
  5024  002B60                     	if	1	;There is more than 1 active tblptr byte
  5025  002B60  0EFC               	movlw	high _TaskNumber
  5026  002B62  6EF7               	movwf	tblptrh,c
  5027  002B64                     	endif
  5028  002B64                     	if	0	;There are less than 3 active tblptr bytes
  5029  002B64                     	endif
  5030  002B64  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5031  002B66  6FA7               	movwf	??_ScheduleTasks& (0+255),b
  5032  002B68  6BA8               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5033  002B6A  0009               	tblrd		*+
  5034  002B6C  50F5               	movf	tablat,w,c
  5035  002B6E  5DA7               	subwf	??_ScheduleTasks& (0+255),w,b
  5036  002B70  0009               	tblrd		*+
  5037  002B72  50F5               	movf	tablat,w,c
  5038  002B74  59A8               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5039  002B76  B0D8               	btfsc	status,0,c
  5040  002B78  0012               	return	
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;os_sched.c: 106: {
  5044                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5045                           
  5046                           ; BSR set to: 0
  5047                           
  5048                           ; BSR set to: 0
  5049  002B7A  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5050  002B7C  0D08               	mullw	8
  5051  002B7E  0E03               	movlw	3
  5052  002B80  26F3               	addwf	prodl,f,c
  5053  002B82  0E00               	movlw	0
  5054  002B84  22F4               	addwfc	prodh,f,c
  5055  002B86  0E82               	movlw	low _TaskTable
  5056  002B88  24F3               	addwf	prodl,w,c
  5057  002B8A  6ED9               	movwf	fsr2l,c
  5058  002B8C  0E05               	movlw	high _TaskTable
  5059  002B8E  20F4               	addwfc	prodh,w,c
  5060  002B90  6EDA               	movwf	fsr2h,c
  5061  002B92  2ADE               	incf	postinc2,f,c
  5062  002B94  0E00               	movlw	0
  5063  002B96  22DD               	addwfc	postdec2,f,c
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5067  002B98  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5068  002B9A  0D08               	mullw	8
  5069  002B9C  0E05               	movlw	5
  5070  002B9E  26F3               	addwf	prodl,f,c
  5071  002BA0  0E00               	movlw	0
  5072  002BA2  22F4               	addwfc	prodh,f,c
  5073  002BA4  0E82               	movlw	low _TaskTable
  5074  002BA6  24F3               	addwf	prodl,w,c
  5075  002BA8  6ED9               	movwf	fsr2l,c
  5076  002BAA  0E05               	movlw	high _TaskTable
  5077  002BAC  20F4               	addwfc	prodh,w,c
  5078  002BAE  6EDA               	movwf	fsr2h,c
  5079  002BB0  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5080  002BB2  0D08               	mullw	8
  5081  002BB4  0E03               	movlw	3
  5082  002BB6  26F3               	addwf	prodl,f,c
  5083  002BB8  0E00               	movlw	0
  5084  002BBA  22F4               	addwfc	prodh,f,c
  5085  002BBC  0E82               	movlw	low _TaskTable
  5086  002BBE  24F3               	addwf	prodl,w,c
  5087  002BC0  6EE1               	movwf	fsr1l,c
  5088  002BC2  0E05               	movlw	high _TaskTable
  5089  002BC4  20F4               	addwfc	prodh,w,c
  5090  002BC6  6EE2               	movwf	fsr1h,c
  5091  002BC8  50DE               	movf	postinc2,w,c
  5092  002BCA  5CE6               	subwf	postinc1,w,c
  5093  002BCC  50DE               	movf	postinc2,w,c
  5094  002BCE  58E6               	subwfb	postinc1,w,c
  5095  002BD0  A0D8               	btfss	status,0,c
  5096  002BD2  D04E               	goto	l775
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;os_sched.c: 111: {
  5100                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5101  002BD4  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5102  002BD6  0D08               	mullw	8
  5103  002BD8  0E03               	movlw	3
  5104  002BDA  26F3               	addwf	prodl,f,c
  5105  002BDC  0E00               	movlw	0
  5106  002BDE  22F4               	addwfc	prodh,f,c
  5107  002BE0  0E82               	movlw	low _TaskTable
  5108  002BE2  24F3               	addwf	prodl,w,c
  5109  002BE4  6ED9               	movwf	fsr2l,c
  5110  002BE6  0E05               	movlw	high _TaskTable
  5111  002BE8  20F4               	addwfc	prodh,w,c
  5112  002BEA  6EDA               	movwf	fsr2h,c
  5113  002BEC  0E00               	movlw	0
  5114  002BEE  6EDE               	movwf	postinc2,c
  5115  002BF0  0E00               	movlw	0
  5116  002BF2  6EDD               	movwf	postdec2,c
  5117                           
  5118                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5119  002BF4  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5120  002BF6  0D08               	mullw	8
  5121  002BF8  0E02               	movlw	2
  5122  002BFA  26F3               	addwf	prodl,f,c
  5123  002BFC  0E00               	movlw	0
  5124  002BFE  22F4               	addwfc	prodh,f,c
  5125  002C00  0E82               	movlw	low _TaskTable
  5126  002C02  24F3               	addwf	prodl,w,c
  5127  002C04  6ED9               	movwf	fsr2l,c
  5128  002C06  0E05               	movlw	high _TaskTable
  5129  002C08  20F4               	addwfc	prodh,w,c
  5130  002C0A  6EDA               	movwf	fsr2h,c
  5131  002C0C  0E01               	movlw	1
  5132  002C0E  6EDF               	movwf	indf2,c
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5136  002C10  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5137  002C12  0D08               	mullw	8
  5138  002C14  0E82               	movlw	low _TaskTable
  5139  002C16  24F3               	addwf	prodl,w,c
  5140  002C18  6ED9               	movwf	fsr2l,c
  5141  002C1A  0E05               	movlw	high _TaskTable
  5142  002C1C  20F4               	addwfc	prodh,w,c
  5143  002C1E  6EDA               	movwf	fsr2h,c
  5144  002C20  D801               	call	u13468
  5145  002C22  D017               	goto	u13469
  5146  002C24                     u13468:
  5147  002C24  0005               	push	
  5148  002C26  6EFA               	movwf	pclath,c
  5149  002C28  50DE               	movf	postinc2,w,c
  5150  002C2A  6EFD               	movwf	tosl,c
  5151  002C2C  50DE               	movf	postinc2,w,c
  5152  002C2E  6EFE               	movwf	tosh,c
  5153  002C30  50F8               	movf	tblptru,w,c
  5154  002C32  6EFF               	movwf	tosu,c
  5155  002C34  50FA               	movf	pclath,w,c
  5156  002C36  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5157  002C38  0D08               	mullw	8
  5158  002C3A  0E07               	movlw	7
  5159  002C3C  26F3               	addwf	prodl,f,c
  5160  002C3E  0E00               	movlw	0
  5161  002C40  22F4               	addwfc	prodh,f,c
  5162  002C42  0E82               	movlw	low _TaskTable
  5163  002C44  24F3               	addwf	prodl,w,c
  5164  002C46  6ED9               	movwf	fsr2l,c
  5165  002C48  0E05               	movlw	high _TaskTable
  5166  002C4A  20F4               	addwfc	prodh,w,c
  5167  002C4C  6EDA               	movwf	fsr2h,c
  5168  002C4E  50DF               	movf	indf2,w,c
  5169  002C50  0012               	return		;indir
  5170  002C52                     u13469:
  5171                           
  5172                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5173  002C52  0100               	movlb	0	; () banked
  5174  002C54  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5175  002C56  0D08               	mullw	8
  5176  002C58  0E02               	movlw	2
  5177  002C5A  26F3               	addwf	prodl,f,c
  5178  002C5C  0E00               	movlw	0
  5179  002C5E  22F4               	addwfc	prodh,f,c
  5180  002C60  0E82               	movlw	low _TaskTable
  5181  002C62  24F3               	addwf	prodl,w,c
  5182  002C64  6ED9               	movwf	fsr2l,c
  5183  002C66  0E05               	movlw	high _TaskTable
  5184  002C68  20F4               	addwfc	prodh,w,c
  5185  002C6A  6EDA               	movwf	fsr2h,c
  5186  002C6C  0E00               	movlw	0
  5187  002C6E  6EDF               	movwf	indf2,c
  5188  002C70                     l775:
  5189                           
  5190                           ; BSR set to: 0
  5191                           
  5192                           ; BSR set to: 0
  5193                           
  5194                           ;os_sched.c: 117: else
  5195                           ;os_sched.c: 118: {
  5196                           
  5197                           ; BSR set to: 0
  5198  002C70  2BAB               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5199  002C72  D774               	goto	l13968
  5200  002C74                     __end_of_ScheduleTasks:
  5201                           	opt stack 0
  5202                           tosu	equ	0xFFF
  5203                           tosh	equ	0xFFE
  5204                           tosl	equ	0xFFD
  5205                           pclath	equ	0xFFA
  5206                           tblptru	equ	0xFF8
  5207                           tblptrh	equ	0xFF7
  5208                           tblptrl	equ	0xFF6
  5209                           tablat	equ	0xFF5
  5210                           prodh	equ	0xFF4
  5211                           prodl	equ	0xFF3
  5212                           intcon	equ	0xFF2
  5213                           intcon2	equ	0xFF1
  5214                           intcon3	equ	0xFF0
  5215                           postinc0	equ	0xFEE
  5216                           wreg	equ	0xFE8
  5217                           postinc1	equ	0xFE6
  5218                           postdec1	equ	0xFE5
  5219                           fsr1h	equ	0xFE2
  5220                           fsr1l	equ	0xFE1
  5221                           indf2	equ	0xFDF
  5222                           postinc2	equ	0xFDE
  5223                           postdec2	equ	0xFDD
  5224                           fsr2h	equ	0xFDA
  5225                           fsr2l	equ	0xFD9
  5226                           status	equ	0xFD8
  5227                           
  5228 ;; *************** function _InitializeTasks *****************
  5229 ;; Defined at:
  5230 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;		None
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;  ActiveTaskIn    1   73[BANK0 ] unsigned char 
  5235 ;; Return value:  Size  Location     Type
  5236 ;;                  1    wreg      void 
  5237 ;; Registers used:
  5238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5245 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5246 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5247 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5248 ;;Total ram usage:        3 bytes
  5249 ;; Hardware stack levels used:    1
  5250 ;; Hardware stack levels required when called:   21
  5251 ;; This function calls:
  5252 ;;		_I2cSlv_MainTask
  5253 ;;		_Led_MainTask
  5254 ;;		_MdmHttp_MainTask
  5255 ;;		_Mdm_DrvMainFn
  5256 ;;		_Mdm_MainTask
  5257 ;;		_MyApp_Task
  5258 ;;		_Rtcm_MainTask
  5259 ;;		_Term_MainTask
  5260 ;;		_UsbDevice_MainTask
  5261 ;;		_Wdg_MainTask
  5262 ;; This function is called by:
  5263 ;;		_Sch_MainScheduler
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text15
  5268  004BB8                     __ptext15:
  5269                           	opt stack 0
  5270  004BB8                     _InitializeTasks:
  5271                           	opt stack 8
  5272                           
  5273                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;incstack = 0
  5277  004BB8  0E00               	movlw	0
  5278  004BBA  0100               	movlb	0	; () banked
  5279  004BBC  6FA9               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5280                           
  5281                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5282  004BBE  0E00               	movlw	0
  5283  004BC0  6FA9               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5284  004BC2                     l13956:
  5285                           
  5286                           ; BSR set to: 0
  5287  004BC2  0E5D               	movlw	low _TaskNumber
  5288  004BC4  6EF6               	movwf	tblptrl,c
  5289  004BC6                     	if	1	;There is more than 1 active tblptr byte
  5290  004BC6  0EFC               	movlw	high _TaskNumber
  5291  004BC8  6EF7               	movwf	tblptrh,c
  5292  004BCA                     	endif
  5293  004BCA                     	if	0	;There are less than 3 active tblptr bytes
  5294  004BCA                     	endif
  5295  004BCA  51A9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5296  004BCC  6FA7               	movwf	??_InitializeTasks& (0+255),b
  5297  004BCE  6BA8               	clrf	(??_InitializeTasks+1)& (0+255),b
  5298  004BD0  0009               	tblrd		*+
  5299  004BD2  50F5               	movf	tablat,w,c
  5300  004BD4  5DA7               	subwf	??_InitializeTasks& (0+255),w,b
  5301  004BD6  0009               	tblrd		*+
  5302  004BD8  50F5               	movf	tablat,w,c
  5303  004BDA  59A8               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5304  004BDC  B0D8               	btfsc	status,0,c
  5305  004BDE  0012               	return	
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;os_sched.c: 86: {
  5309                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5310                           
  5311                           ; BSR set to: 0
  5312                           
  5313                           ; BSR set to: 0
  5314  004BE0  51A9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5315  004BE2  0D08               	mullw	8
  5316  004BE4  0E82               	movlw	low _TaskTable
  5317  004BE6  24F3               	addwf	prodl,w,c
  5318  004BE8  6ED9               	movwf	fsr2l,c
  5319  004BEA  0E05               	movlw	high _TaskTable
  5320  004BEC  20F4               	addwfc	prodh,w,c
  5321  004BEE  6EDA               	movwf	fsr2h,c
  5322  004BF0  D801               	call	u13428
  5323  004BF2  D017               	goto	u13429
  5324  004BF4                     u13428:
  5325  004BF4  0005               	push	
  5326  004BF6  6EFA               	movwf	pclath,c
  5327  004BF8  50DE               	movf	postinc2,w,c
  5328  004BFA  6EFD               	movwf	tosl,c
  5329  004BFC  50DE               	movf	postinc2,w,c
  5330  004BFE  6EFE               	movwf	tosh,c
  5331  004C00  50F8               	movf	tblptru,w,c
  5332  004C02  6EFF               	movwf	tosu,c
  5333  004C04  50FA               	movf	pclath,w,c
  5334  004C06  51A9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5335  004C08  0D08               	mullw	8
  5336  004C0A  0E07               	movlw	7
  5337  004C0C  26F3               	addwf	prodl,f,c
  5338  004C0E  0E00               	movlw	0
  5339  004C10  22F4               	addwfc	prodh,f,c
  5340  004C12  0E82               	movlw	low _TaskTable
  5341  004C14  24F3               	addwf	prodl,w,c
  5342  004C16  6ED9               	movwf	fsr2l,c
  5343  004C18  0E05               	movlw	high _TaskTable
  5344  004C1A  20F4               	addwfc	prodh,w,c
  5345  004C1C  6EDA               	movwf	fsr2h,c
  5346  004C1E  50DF               	movf	indf2,w,c
  5347  004C20  0012               	return		;indir
  5348  004C22                     u13429:
  5349  004C22  0100               	movlb	0	; () banked
  5350  004C24  2BA9               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5351  004C26  D7CD               	goto	l13956
  5352  004C28                     __end_of_InitializeTasks:
  5353                           	opt stack 0
  5354                           tosu	equ	0xFFF
  5355                           tosh	equ	0xFFE
  5356                           tosl	equ	0xFFD
  5357                           pclath	equ	0xFFA
  5358                           tblptru	equ	0xFF8
  5359                           tblptrh	equ	0xFF7
  5360                           tblptrl	equ	0xFF6
  5361                           tablat	equ	0xFF5
  5362                           prodh	equ	0xFF4
  5363                           prodl	equ	0xFF3
  5364                           intcon	equ	0xFF2
  5365                           intcon2	equ	0xFF1
  5366                           intcon3	equ	0xFF0
  5367                           postinc0	equ	0xFEE
  5368                           wreg	equ	0xFE8
  5369                           postinc1	equ	0xFE6
  5370                           postdec1	equ	0xFE5
  5371                           fsr1h	equ	0xFE2
  5372                           fsr1l	equ	0xFE1
  5373                           indf2	equ	0xFDF
  5374                           postinc2	equ	0xFDE
  5375                           postdec2	equ	0xFDD
  5376                           fsr2h	equ	0xFDA
  5377                           fsr2l	equ	0xFD9
  5378                           status	equ	0xFD8
  5379                           
  5380 ;; *************** function _MyApp_Task *****************
  5381 ;; Defined at:
  5382 ;;		line 149 in file "../Source/c/04_App/app.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;  Options         1    wreg     unsigned char 
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;  Options         1    0[COMRAM] unsigned char 
  5387 ;;  phone          10   54[BANK0 ] unsigned char [10]
  5388 ;;  I2cTxBufferT    2   68[BANK0 ] unsigned char [2]
  5389 ;;  on              2   66[BANK0 ] unsigned char [2]
  5390 ;;  off             2   64[BANK0 ] unsigned char [2]
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5401 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5403 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5404 ;;Total ram usage:       16 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:   14
  5407 ;; This function calls:
  5408 ;;		_Led_SetLedBlinkTime
  5409 ;;		_Mdm_IsRinging
  5410 ;;		_blinkForSeconds
  5411 ;;		_initGprsModem
  5412 ;; This function is called by:
  5413 ;;		_InitializeTasks
  5414 ;;		_ScheduleTasks
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           	psect	text16
  5419  0048C0                     __ptext16:
  5420                           	opt stack 0
  5421  0048C0                     _MyApp_Task:
  5422                           	opt stack 14
  5423                           
  5424                           ;app.c: 151: static uint8_t countRelay1 = 1;
  5425                           ;app.c: 152: static uint16_t countRelay2 = 1;
  5426                           ;app.c: 153: static bool isRelay1On = 0;
  5427                           ;app.c: 154: static bool isRelay2On = 0;
  5428                           ;app.c: 155: static uint8_t test = 0;
  5429                           ;app.c: 156: uint8_t off[2] = {((UINT8)(0x50)), 0x00};
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;incstack = 0
  5433  0048C0  C3C4  F0A0         	movff	MyApp_Task@F8990,MyApp_Task@off
  5434  0048C4  C3C5  F0A1         	movff	MyApp_Task@F8990+1,MyApp_Task@off+1
  5435                           
  5436                           ;app.c: 157: uint8_t on[2] = {((UINT8)(0x50)), 0x1};
  5437  0048C8  C3C2  F0A2         	movff	MyApp_Task@F8993,MyApp_Task@on
  5438  0048CC  C3C3  F0A3         	movff	MyApp_Task@F8993+1,MyApp_Task@on+1
  5439                           
  5440                           ;app.c: 160: UINT8 I2cTxBufferTest[] = {0x00, 0x00};
  5441  0048D0  C320  F0A4         	movff	MyApp_Task@F8996,MyApp_Task@I2cTxBufferTest
  5442  0048D4  C321  F0A5         	movff	MyApp_Task@F8996+1,MyApp_Task@I2cTxBufferTest+1
  5443                           
  5444                           ;app.c: 161: static UINT8 I2cStsReady = 0u;
  5445                           ;app.c: 162: UINT8 phone[] = {'3', '2', '0', '0', '2', '7', '6', '3', '1', '8'};
  5446  0048D8  EE24  F0E5         	lfsr	2,MyApp_Task@F8999
  5447  0048DC  EE10  F096         	lfsr	1,MyApp_Task@phone
  5448  0048E0  0E09               	movlw	9
  5449  0048E2                     u13381:
  5450  0048E2  CFDB FFE3          	movff	plusw2,plusw1
  5451  0048E6  06E8               	decf	wreg,f,c
  5452  0048E8  E2FC               	bc	u13381
  5453                           
  5454                           ;app.c: 164: static uint16_t blickTicks = 0xFFFF;
  5455                           ;app.c: 166: switch (SystemState)
  5456  0048EA  D025               	goto	l2555
  5457  0048EC                     
  5458                           ;app.c: 171: Led_SetLedBlinkTime(1u,100,900);
  5459  0048EC  0E00               	movlw	0
  5460  0048EE  0100               	movlb	0	; () banked
  5461  0048F0  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5462  0048F2  0E64               	movlw	100
  5463  0048F4  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5464  0048F6  0E03               	movlw	3
  5465  0048F8  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5466  0048FA  0E84               	movlw	132
  5467  0048FC  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5468  0048FE  0E01               	movlw	1
  5469  004900  ECA7  F028         	call	_Led_SetLedBlinkTime
  5470                           
  5471                           ;app.c: 172: break;
  5472  004904  0012               	return	
  5473  004906                     
  5474                           ;app.c: 176: if (initGprsModem())
  5475  004906  EC74  F029         	call	_initGprsModem	;wreg free
  5476  00490A  0900               	iorlw	0
  5477  00490C  B4D8               	btfsc	status,2,c
  5478  00490E  0012               	return	
  5479                           
  5480                           ;app.c: 177: {
  5481                           ;app.c: 179: if (Mdm_IsRinging())
  5482  004910  ECC4  F02D         	call	_Mdm_IsRinging	;wreg free
  5483  004914  0900               	iorlw	0
  5484  004916  B4D8               	btfsc	status,2,c
  5485  004918  D005               	goto	l2560
  5486                           
  5487                           ;app.c: 180: {
  5488                           ;app.c: 181: blickTicks = 0;
  5489  00491A  0E00               	movlw	0
  5490  00491C  0103               	movlb	3	; () banked
  5491  00491E  6FF7               	movwf	(MyApp_Task@blickTicks+1)& (0+255),b
  5492  004920  0E00               	movlw	0
  5493  004922  6FF6               	movwf	MyApp_Task@blickTicks& (0+255),b
  5494  004924                     l2560:
  5495                           
  5496                           ;app.c: 182: }
  5497                           ;app.c: 183: blinkForSeconds(5, &blickTicks);
  5498                           
  5499                           ; BSR set to: 3
  5500  004924  0EF6               	movlw	low MyApp_Task@blickTicks
  5501  004926  0100               	movlb	0	; () banked
  5502  004928  6F93               	movwf	blinkForSeconds@blickTicks& (0+255),b
  5503  00492A  0E03               	movlw	high MyApp_Task@blickTicks
  5504  00492C  6F94               	movwf	(blinkForSeconds@blickTicks+1)& (0+255),b
  5505  00492E  0E05               	movlw	5
  5506  004930  EC1C  F02C         	call	_blinkForSeconds
  5507                           
  5508                           ;app.c: 190: }
  5509                           
  5510                           ;app.c: 189: break;
  5511                           
  5512                           ;app.c: 188: default:
  5513                           
  5514                           ;app.c: 184: }
  5515                           ;app.c: 185: break;
  5516  004934  0012               	return	
  5517  004936                     l2555:
  5518  004936  0100               	movlb	0	; () banked
  5519  004938  51D2               	movf	_SystemState& (0+255),w,b
  5520                           
  5521                           ; Switch size 1, requested type "space"
  5522                           ; Number of cases is 2, Range of values is 0 to 1
  5523                           ; switch strategies available:
  5524                           ; Name         Instructions Cycles
  5525                           ; simple_byte            7     4 (average)
  5526                           ;	Chosen strategy is simple_byte
  5527  00493A  0A00               	xorlw	0	; case 0
  5528  00493C  B4D8               	btfsc	status,2,c
  5529  00493E  D7D6               	goto	l2556
  5530  004940  0A01               	xorlw	1	; case 1
  5531  004942  A4D8               	btfss	status,2,c
  5532  004944  0012               	return	
  5533  004946  D7DF               	goto	l2558
  5534  004948                     __end_of_MyApp_Task:
  5535                           	opt stack 0
  5536                           tosu	equ	0xFFF
  5537                           tosh	equ	0xFFE
  5538                           tosl	equ	0xFFD
  5539                           pclath	equ	0xFFA
  5540                           tblptru	equ	0xFF8
  5541                           tblptrh	equ	0xFF7
  5542                           tblptrl	equ	0xFF6
  5543                           tablat	equ	0xFF5
  5544                           prodh	equ	0xFF4
  5545                           prodl	equ	0xFF3
  5546                           intcon	equ	0xFF2
  5547                           intcon2	equ	0xFF1
  5548                           intcon3	equ	0xFF0
  5549                           postinc0	equ	0xFEE
  5550                           wreg	equ	0xFE8
  5551                           postinc1	equ	0xFE6
  5552                           postdec1	equ	0xFE5
  5553                           plusw1	equ	0xFE3
  5554                           fsr1h	equ	0xFE2
  5555                           fsr1l	equ	0xFE1
  5556                           indf2	equ	0xFDF
  5557                           postinc2	equ	0xFDE
  5558                           postdec2	equ	0xFDD
  5559                           plusw2	equ	0xFDB
  5560                           fsr2h	equ	0xFDA
  5561                           fsr2l	equ	0xFD9
  5562                           status	equ	0xFD8
  5563                           
  5564 ;; *************** function _Term_MainTask *****************
  5565 ;; Defined at:
  5566 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;  Options         1    wreg     unsigned char 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;  Options         1    0[COMRAM] unsigned char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      void 
  5573 ;; Registers used:
  5574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5584 ;;Total ram usage:        0 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:   17
  5587 ;; This function calls:
  5588 ;;		_Term_MainSm
  5589 ;; This function is called by:
  5590 ;;		_InitializeTasks
  5591 ;;		_ScheduleTasks
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text17
  5596  005D6A                     __ptext17:
  5597                           	opt stack 0
  5598  005D6A                     _Term_MainTask:
  5599                           	opt stack 11
  5600                           
  5601                           ;term.c: 847: switch (SystemState)
  5602                           
  5603                           ;incstack = 0
  5604  005D6A  D003               	goto	l2438
  5605  005D6C                     
  5606                           ;term.c: 858: Term_MainSm();
  5607  005D6C  EC5B  F008         	call	_Term_MainSm	;wreg free
  5608                           
  5609                           ;term.c: 865: }
  5610                           
  5611                           ;term.c: 864: break;
  5612                           
  5613                           ;term.c: 863: default:
  5614                           
  5615                           ;term.c: 860: break;
  5616  005D70  0012               	return	
  5617  005D72                     l2438:
  5618  005D72  0100               	movlb	0	; () banked
  5619  005D74  51D2               	movf	_SystemState& (0+255),w,b
  5620                           
  5621                           ; Switch size 1, requested type "space"
  5622                           ; Number of cases is 2, Range of values is 0 to 1
  5623                           ; switch strategies available:
  5624                           ; Name         Instructions Cycles
  5625                           ; simple_byte            7     4 (average)
  5626                           ;	Chosen strategy is simple_byte
  5627  005D76  0A00               	xorlw	0	; case 0
  5628  005D78  B4D8               	btfsc	status,2,c
  5629  005D7A  0012               	return	
  5630  005D7C  0A01               	xorlw	1	; case 1
  5631  005D7E  A4D8               	btfss	status,2,c
  5632  005D80  0012               	return	
  5633  005D82  D7F4               	goto	l2441
  5634  005D84                     __end_of_Term_MainTask:
  5635                           	opt stack 0
  5636                           tosu	equ	0xFFF
  5637                           tosh	equ	0xFFE
  5638                           tosl	equ	0xFFD
  5639                           pclath	equ	0xFFA
  5640                           tblptru	equ	0xFF8
  5641                           tblptrh	equ	0xFF7
  5642                           tblptrl	equ	0xFF6
  5643                           tablat	equ	0xFF5
  5644                           prodh	equ	0xFF4
  5645                           prodl	equ	0xFF3
  5646                           intcon	equ	0xFF2
  5647                           intcon2	equ	0xFF1
  5648                           intcon3	equ	0xFF0
  5649                           postinc0	equ	0xFEE
  5650                           wreg	equ	0xFE8
  5651                           postinc1	equ	0xFE6
  5652                           postdec1	equ	0xFE5
  5653                           plusw1	equ	0xFE3
  5654                           fsr1h	equ	0xFE2
  5655                           fsr1l	equ	0xFE1
  5656                           indf2	equ	0xFDF
  5657                           postinc2	equ	0xFDE
  5658                           postdec2	equ	0xFDD
  5659                           plusw2	equ	0xFDB
  5660                           fsr2h	equ	0xFDA
  5661                           fsr2l	equ	0xFD9
  5662                           status	equ	0xFD8
  5663                           
  5664 ;; *************** function _Rtcm_MainTask *****************
  5665 ;; Defined at:
  5666 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  Options         1    wreg     unsigned char 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  Options         1    0[COMRAM] unsigned char 
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  1    wreg      void 
  5673 ;; Registers used:
  5674 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5684 ;;Total ram usage:        0 bytes
  5685 ;; Hardware stack levels used:    1
  5686 ;; Hardware stack levels required when called:   14
  5687 ;; This function calls:
  5688 ;;		_Rtcc_AlarmConfig
  5689 ;;		_Rtcc_LockRtc
  5690 ;;		_Rtcc_RtcConfig
  5691 ;;		_Rtcc_SetRtcStatus
  5692 ;;		_Rtcc_UnlockRtc
  5693 ;;		_Rtcm_GetRtccDate
  5694 ;;		_Rtcm_SetRtccDate
  5695 ;; This function is called by:
  5696 ;;		_InitializeTasks
  5697 ;;		_ScheduleTasks
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text18
  5702  0047A6                     __ptext18:
  5703                           	opt stack 0
  5704  0047A6                     _Rtcm_MainTask:
  5705                           	opt stack 14
  5706                           
  5707                           ;rtcm.c: 101: switch (SystemState)
  5708                           
  5709                           ;incstack = 0
  5710  0047A6  D03D               	goto	l2168
  5711  0047A8                     l2169:
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  5715  0047A8  86CD               	bsf	4045,3,c	;volatile
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  5719  0047AA  0E00               	movlw	0
  5720  0047AC  0103               	movlb	3	; () banked
  5721  0047AE  6FB3               	movwf	_RtcConfig& (0+255),b
  5722                           
  5723                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  5724  0047B0  0E00               	movlw	0
  5725  0047B2  6FB4               	movwf	(_RtcConfig+1)& (0+255),b
  5726                           
  5727                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  5728  0047B4  0E01               	movlw	1
  5729  0047B6  6FB5               	movwf	(_RtcConfig+2)& (0+255),b
  5730                           
  5731                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  5732  0047B8  0E01               	movlw	1
  5733  0047BA  6FB6               	movwf	(_RtcConfig+3)& (0+255),b
  5734                           
  5735                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  5736  0047BC  0E01               	movlw	1
  5737  0047BE  6FAF               	movwf	_AlCfg& (0+255),b
  5738                           
  5739                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  5740  0047C0  0E01               	movlw	1
  5741  0047C2  6FB0               	movwf	(_AlCfg+1)& (0+255),b
  5742                           
  5743                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  5744  0047C4  0E01               	movlw	1
  5745  0047C6  6FB1               	movwf	(_AlCfg+2)& (0+255),b
  5746                           
  5747                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  5748  0047C8  0E00               	movlw	0
  5749  0047CA  6FB2               	movwf	(_AlCfg+3)& (0+255),b
  5750                           
  5751                           ; BSR set to: 3
  5752                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  5753  0047CC  EC38  F02F         	call	_Rtcc_UnlockRtc	;wreg free
  5754                           
  5755                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  5756  0047D0  0EB3               	movlw	low _RtcConfig
  5757  0047D2  0100               	movlb	0	; () banked
  5758  0047D4  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  5759  0047D6  0E03               	movlw	high _RtcConfig
  5760  0047D8  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  5761  0047DA  EC76  F021         	call	_Rtcc_RtcConfig	;wreg free
  5762                           
  5763                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  5764  0047DE  0EAF               	movlw	low _AlCfg
  5765  0047E0  0100               	movlb	0	; () banked
  5766  0047E2  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  5767  0047E4  0E03               	movlw	high _AlCfg
  5768  0047E6  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  5769  0047E8  EC4A  F026         	call	_Rtcc_AlarmConfig	;wreg free
  5770                           
  5771                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  5772  0047EC  0E01               	movlw	1
  5773  0047EE  ECE6  F02E         	call	_Rtcc_SetRtcStatus
  5774                           
  5775                           ;rtcm.c: 127: Rtcc_LockRtc();
  5776  0047F2  EC40  F02F         	call	_Rtcc_LockRtc	;wreg free
  5777                           
  5778                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  5779  0047F6  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  5780  0047FA  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  5781  0047FE  0E07               	movlw	7
  5782  004800                     u9311:
  5783  004800  CFDB FFEB          	movff	plusw2,plusw0
  5784  004804  06E8               	decf	wreg,f,c
  5785  004806  E2FC               	bc	u9311
  5786  004808  EC7D  F028         	call	_Rtcm_SetRtccDate	;wreg free
  5787                           
  5788                           ;rtcm.c: 154: break;
  5789  00480C  0012               	return	
  5790  00480E                     
  5791                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  5792  00480E  ECB3  F026         	call	_Rtcm_GetRtccDate	;wreg free
  5793  004812  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  5794  004816  0E07               	movlw	7
  5795  004818                     u9321:
  5796  004818  CFEB FFDB          	movff	plusw0,plusw2
  5797  00481C  06E8               	decf	wreg,f,c
  5798  00481E  E2FC               	bc	u9321
  5799                           
  5800                           ;rtcm.c: 165: }
  5801                           
  5802                           ;rtcm.c: 164: break;
  5803                           
  5804                           ;rtcm.c: 163: default:
  5805                           
  5806                           ;rtcm.c: 160: break;
  5807  004820  0012               	return	
  5808  004822                     l2168:
  5809  004822  0100               	movlb	0	; () banked
  5810  004824  51D2               	movf	_SystemState& (0+255),w,b
  5811                           
  5812                           ; Switch size 1, requested type "space"
  5813                           ; Number of cases is 2, Range of values is 0 to 1
  5814                           ; switch strategies available:
  5815                           ; Name         Instructions Cycles
  5816                           ; simple_byte            7     4 (average)
  5817                           ;	Chosen strategy is simple_byte
  5818  004826  0A00               	xorlw	0	; case 0
  5819  004828  B4D8               	btfsc	status,2,c
  5820  00482A  D7BE               	goto	l2169
  5821  00482C  0A01               	xorlw	1	; case 1
  5822  00482E  A4D8               	btfss	status,2,c
  5823  004830  0012               	return	
  5824  004832  D7ED               	goto	l2171
  5825  004834                     __end_of_Rtcm_MainTask:
  5826                           	opt stack 0
  5827                           tosu	equ	0xFFF
  5828                           tosh	equ	0xFFE
  5829                           tosl	equ	0xFFD
  5830                           pclath	equ	0xFFA
  5831                           tblptru	equ	0xFF8
  5832                           tblptrh	equ	0xFF7
  5833                           tblptrl	equ	0xFF6
  5834                           tablat	equ	0xFF5
  5835                           prodh	equ	0xFF4
  5836                           prodl	equ	0xFF3
  5837                           intcon	equ	0xFF2
  5838                           intcon2	equ	0xFF1
  5839                           intcon3	equ	0xFF0
  5840                           postinc0	equ	0xFEE
  5841                           plusw0	equ	0xFEB
  5842                           wreg	equ	0xFE8
  5843                           postinc1	equ	0xFE6
  5844                           postdec1	equ	0xFE5
  5845                           plusw1	equ	0xFE3
  5846                           fsr1h	equ	0xFE2
  5847                           fsr1l	equ	0xFE1
  5848                           indf2	equ	0xFDF
  5849                           postinc2	equ	0xFDE
  5850                           postdec2	equ	0xFDD
  5851                           plusw2	equ	0xFDB
  5852                           fsr2h	equ	0xFDA
  5853                           fsr2l	equ	0xFD9
  5854                           status	equ	0xFD8
  5855                           
  5856 ;; *************** function _Led_MainTask *****************
  5857 ;; Defined at:
  5858 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  Options         1    wreg     unsigned char 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  Options         1    0[COMRAM] unsigned char 
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  1    wreg      void 
  5865 ;; Registers used:
  5866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5874 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5875 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5876 ;;Total ram usage:        1 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:   14
  5879 ;; This function calls:
  5880 ;;		_LedStateMachine
  5881 ;; This function is called by:
  5882 ;;		_InitializeTasks
  5883 ;;		_ScheduleTasks
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text19
  5888  00367A                     __ptext19:
  5889                           	opt stack 0
  5890  00367A                     _Led_MainTask:
  5891                           	opt stack 14
  5892                           
  5893                           ;led.c: 300: switch (SystemState)
  5894                           
  5895                           ;incstack = 0
  5896  00367A  D05C               	goto	l2082
  5897  00367C                     l2083:
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  5901  00367C  9895               	bcf	3989,4,c	;volatile
  5902                           
  5903                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  5904  00367E  9A95               	bcf	3989,5,c	;volatile
  5905                           
  5906                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  5907  003680  9C95               	bcf	3989,6,c	;volatile
  5908                           
  5909                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  5910  003682  9883               	bcf	3971,4,c	;volatile
  5911                           
  5912                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  5913  003684  9A83               	bcf	3971,5,c	;volatile
  5914                           
  5915                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  5916  003686  9C83               	bcf	3971,6,c	;volatile
  5917                           
  5918                           ;led.c: 311: break;
  5919  003688  0012               	return	
  5920  00368A                     
  5921                           ; BSR set to: 0
  5922                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  5923                           
  5924                           ; BSR set to: 0
  5925  00368A  0EFC               	movlw	low _Led1Sts
  5926  00368C  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  5927  00368E  0E01               	movlw	high _Led1Sts
  5928  003690  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  5929  003692  0EFB               	movlw	low _Led1OutSts
  5930  003694  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  5931  003696  0E01               	movlw	high _Led1OutSts
  5932  003698  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  5933  00369A  0E6D               	movlw	low _Led1Blink
  5934  00369C  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  5935  00369E  0E03               	movlw	high _Led1Blink
  5936  0036A0  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  5937  0036A2  0E91               	movlw	low _Led1Pulse
  5938  0036A4  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  5939  0036A6  0E03               	movlw	high _Led1Pulse
  5940  0036A8  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  5941  0036AA  0E01               	movlw	1
  5942  0036AC  ECD1  F020         	call	_LedStateMachine
  5943  0036B0  0100               	movlb	0	; () banked
  5944  0036B2  6F9A               	movwf	??_Led_MainTask& (0+255),b
  5945  0036B4  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  5946  0036B6  5083               	movf	3971,w,c	;volatile
  5947  0036B8  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  5948  0036BA  0BEF               	andlw	-17
  5949  0036BC  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  5950  0036BE  6E83               	movwf	3971,c	;volatile
  5951                           
  5952                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  5953  0036C0  0EFA               	movlw	low _Led2Sts
  5954  0036C2  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  5955  0036C4  0E01               	movlw	high _Led2Sts
  5956  0036C6  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  5957  0036C8  0EF9               	movlw	low _Led2OutSts
  5958  0036CA  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  5959  0036CC  0E01               	movlw	high _Led2OutSts
  5960  0036CE  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  5961  0036D0  0E64               	movlw	low _Led2Blink
  5962  0036D2  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  5963  0036D4  0E03               	movlw	high _Led2Blink
  5964  0036D6  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  5965  0036D8  0E8B               	movlw	low _Led2Pulse
  5966  0036DA  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  5967  0036DC  0E03               	movlw	high _Led2Pulse
  5968  0036DE  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  5969  0036E0  0E02               	movlw	2
  5970  0036E2  ECD1  F020         	call	_LedStateMachine
  5971  0036E6  0100               	movlb	0	; () banked
  5972  0036E8  6F9A               	movwf	??_Led_MainTask& (0+255),b
  5973  0036EA  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  5974  0036EC  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  5975  0036EE  5083               	movf	3971,w,c	;volatile
  5976  0036F0  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  5977  0036F2  0BDF               	andlw	-33
  5978  0036F4  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  5979  0036F6  6E83               	movwf	3971,c	;volatile
  5980                           
  5981                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  5982  0036F8  0EF8               	movlw	low _Led3Sts
  5983  0036FA  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  5984  0036FC  0E01               	movlw	high _Led3Sts
  5985  0036FE  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  5986  003700  0EF7               	movlw	low _Led3OutSts
  5987  003702  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  5988  003704  0E01               	movlw	high _Led3OutSts
  5989  003706  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  5990  003708  0E5B               	movlw	low _Led3Blink
  5991  00370A  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  5992  00370C  0E03               	movlw	high _Led3Blink
  5993  00370E  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  5994  003710  0E85               	movlw	low _Led3Pulse
  5995  003712  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  5996  003714  0E03               	movlw	high _Led3Pulse
  5997  003716  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  5998  003718  0E03               	movlw	3
  5999  00371A  ECD1  F020         	call	_LedStateMachine
  6000  00371E  0100               	movlb	0	; () banked
  6001  003720  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6002  003722  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6003  003724  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6004  003726  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6005  003728  5083               	movf	3971,w,c	;volatile
  6006  00372A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6007  00372C  0BBF               	andlw	-65
  6008  00372E  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6009  003730  6E83               	movwf	3971,c	;volatile
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;led.c: 326: }
  6013                           
  6014                           ; BSR set to: 0
  6015                           ;led.c: 325: break;
  6016                           
  6017                           ;led.c: 324: default:
  6018                           
  6019                           ;led.c: 321: break;
  6020  003732  0012               	return	
  6021  003734                     l2082:
  6022                           
  6023                           ; BSR set to: 0
  6024  003734  0100               	movlb	0	; () banked
  6025  003736  51D2               	movf	_SystemState& (0+255),w,b
  6026                           
  6027                           ; Switch size 1, requested type "space"
  6028                           ; Number of cases is 2, Range of values is 0 to 1
  6029                           ; switch strategies available:
  6030                           ; Name         Instructions Cycles
  6031                           ; simple_byte            7     4 (average)
  6032                           ;	Chosen strategy is simple_byte
  6033  003738  0A00               	xorlw	0	; case 0
  6034  00373A  B4D8               	btfsc	status,2,c
  6035  00373C  D79F               	goto	l2083
  6036  00373E  0A01               	xorlw	1	; case 1
  6037  003740  A4D8               	btfss	status,2,c
  6038  003742  0012               	return	
  6039  003744  D7A2               	goto	l2085
  6040  003746                     __end_of_Led_MainTask:
  6041                           	opt stack 0
  6042                           tosu	equ	0xFFF
  6043                           tosh	equ	0xFFE
  6044                           tosl	equ	0xFFD
  6045                           pclath	equ	0xFFA
  6046                           tblptru	equ	0xFF8
  6047                           tblptrh	equ	0xFF7
  6048                           tblptrl	equ	0xFF6
  6049                           tablat	equ	0xFF5
  6050                           prodh	equ	0xFF4
  6051                           prodl	equ	0xFF3
  6052                           intcon	equ	0xFF2
  6053                           intcon2	equ	0xFF1
  6054                           intcon3	equ	0xFF0
  6055                           postinc0	equ	0xFEE
  6056                           plusw0	equ	0xFEB
  6057                           wreg	equ	0xFE8
  6058                           postinc1	equ	0xFE6
  6059                           postdec1	equ	0xFE5
  6060                           plusw1	equ	0xFE3
  6061                           fsr1h	equ	0xFE2
  6062                           fsr1l	equ	0xFE1
  6063                           indf2	equ	0xFDF
  6064                           postinc2	equ	0xFDE
  6065                           postdec2	equ	0xFDD
  6066                           plusw2	equ	0xFDB
  6067                           fsr2h	equ	0xFDA
  6068                           fsr2l	equ	0xFD9
  6069                           status	equ	0xFD8
  6070                           
  6071 ;; *************** function _UsbDevice_MainTask *****************
  6072 ;; Defined at:
  6073 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;  Options         1    wreg     unsigned char 
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;  Options         1    0[COMRAM] unsigned char 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  1    wreg      void 
  6080 ;; Registers used:
  6081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6091 ;;Total ram usage:        0 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; Hardware stack levels required when called:   20
  6094 ;; This function calls:
  6095 ;;		_CDCTxService
  6096 ;;		_USBDeviceInit
  6097 ;;		_USBDeviceTasks
  6098 ;; This function is called by:
  6099 ;;		_InitializeTasks
  6100 ;;		_ScheduleTasks
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text20
  6105  005B64                     __ptext20:
  6106                           	opt stack 0
  6107  005B64                     _UsbDevice_MainTask:
  6108                           	opt stack 8
  6109                           
  6110                           ;usb_device_mgr.c: 74: switch (SystemState)
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;incstack = 0
  6114  005B64  D008               	goto	l1975
  6115  005B66                     
  6116                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6117  005B66  ECFF  F00F         	call	_USBDeviceInit	;wreg free
  6118                           
  6119                           ;usb_device_mgr.c: 80: ;
  6120                           ;usb_device_mgr.c: 81: break;
  6121  005B6A  0012               	return	
  6122  005B6C                     
  6123                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6124  005B6C  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6125                           
  6126                           ;usb_device_mgr.c: 90: CDCTxService();
  6127  005B70  ECA2  F012         	call	_CDCTxService	;wreg free
  6128                           
  6129                           ;usb_device_mgr.c: 101: }
  6130                           
  6131                           ;usb_device_mgr.c: 100: break;
  6132                           
  6133                           ;usb_device_mgr.c: 99: default:
  6134                           
  6135                           ;usb_device_mgr.c: 96: break;
  6136  005B74  0012               	return	
  6137  005B76                     l1975:
  6138  005B76  0100               	movlb	0	; () banked
  6139  005B78  51D2               	movf	_SystemState& (0+255),w,b
  6140                           
  6141                           ; Switch size 1, requested type "space"
  6142                           ; Number of cases is 2, Range of values is 0 to 1
  6143                           ; switch strategies available:
  6144                           ; Name         Instructions Cycles
  6145                           ; simple_byte            7     4 (average)
  6146                           ;	Chosen strategy is simple_byte
  6147  005B7A  0A00               	xorlw	0	; case 0
  6148  005B7C  B4D8               	btfsc	status,2,c
  6149  005B7E  D7F3               	goto	l1976
  6150  005B80  0A01               	xorlw	1	; case 1
  6151  005B82  A4D8               	btfss	status,2,c
  6152  005B84  0012               	return	
  6153  005B86  D7F2               	goto	l1978
  6154  005B88                     __end_of_UsbDevice_MainTask:
  6155                           	opt stack 0
  6156                           tosu	equ	0xFFF
  6157                           tosh	equ	0xFFE
  6158                           tosl	equ	0xFFD
  6159                           pclath	equ	0xFFA
  6160                           tblptru	equ	0xFF8
  6161                           tblptrh	equ	0xFF7
  6162                           tblptrl	equ	0xFF6
  6163                           tablat	equ	0xFF5
  6164                           prodh	equ	0xFF4
  6165                           prodl	equ	0xFF3
  6166                           intcon	equ	0xFF2
  6167                           intcon2	equ	0xFF1
  6168                           intcon3	equ	0xFF0
  6169                           postinc0	equ	0xFEE
  6170                           plusw0	equ	0xFEB
  6171                           wreg	equ	0xFE8
  6172                           postinc1	equ	0xFE6
  6173                           postdec1	equ	0xFE5
  6174                           plusw1	equ	0xFE3
  6175                           fsr1h	equ	0xFE2
  6176                           fsr1l	equ	0xFE1
  6177                           indf2	equ	0xFDF
  6178                           postinc2	equ	0xFDE
  6179                           postdec2	equ	0xFDD
  6180                           plusw2	equ	0xFDB
  6181                           fsr2h	equ	0xFDA
  6182                           fsr2l	equ	0xFD9
  6183                           status	equ	0xFD8
  6184                           
  6185 ;; *************** function _MdmHttp_MainTask *****************
  6186 ;; Defined at:
  6187 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  Options         1    wreg     unsigned char 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;  Options         1    0[COMRAM] unsigned char 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  1    wreg      void 
  6194 ;; Registers used:
  6195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6205 ;;Total ram usage:        0 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:   15
  6208 ;; This function calls:
  6209 ;;		_HttpGetMethod
  6210 ;;		_InitGprsNetwork
  6211 ;; This function is called by:
  6212 ;;		_InitializeTasks
  6213 ;;		_ScheduleTasks
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           	psect	text21
  6218  005468                     __ptext21:
  6219                           	opt stack 0
  6220  005468                     _MdmHttp_MainTask:
  6221                           	opt stack 13
  6222                           
  6223                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6224                           
  6225                           ;incstack = 0
  6226  005468  D019               	goto	l1274
  6227  00546A                     
  6228                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6229  00546A  0E03               	movlw	3
  6230  00546C  0100               	movlb	0	; () banked
  6231  00546E  19CF               	xorwf	_MdmStatus& (0+255),w,b
  6232  005470  A4D8               	btfss	status,2,c
  6233  005472  0012               	return	
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;mdm_gsm_gprs_http.c: 570: {
  6237                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6238  005474  C2D6  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6239  005478  C2D7  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6240  00547C  C1F3  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6241  005480  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6242  005484  0101               	movlb	1	; () banked
  6243  005486  6FF2               	movwf	_GprsNetworkSts& (0+255),b
  6244                           
  6245                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6246  005488  0EA2               	movlw	low _HttpGetDataLocal
  6247  00548A  0100               	movlb	0	; () banked
  6248  00548C  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6249  00548E  0E03               	movlw	high _HttpGetDataLocal
  6250  005490  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6251  005492  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6252  005496  0101               	movlb	1	; () banked
  6253  005498  6FF1               	movwf	_HttpGetMethodSts& (0+255),b
  6254                           
  6255                           ; BSR set to: 1
  6256                           ;mdm_gsm_gprs_http.c: 581: }
  6257                           
  6258                           ; BSR set to: 1
  6259                           ;mdm_gsm_gprs_http.c: 580: break;
  6260                           
  6261                           ;mdm_gsm_gprs_http.c: 579: default:
  6262                           
  6263                           ; BSR set to: 1
  6264                           ;mdm_gsm_gprs_http.c: 575: }
  6265                           ;mdm_gsm_gprs_http.c: 576: break;
  6266  00549A  0012               	return	
  6267  00549C                     l1274:
  6268                           
  6269                           ; BSR set to: 1
  6270  00549C  0100               	movlb	0	; () banked
  6271  00549E  51D2               	movf	_SystemState& (0+255),w,b
  6272                           
  6273                           ; Switch size 1, requested type "space"
  6274                           ; Number of cases is 2, Range of values is 0 to 1
  6275                           ; switch strategies available:
  6276                           ; Name         Instructions Cycles
  6277                           ; simple_byte            7     4 (average)
  6278                           ;	Chosen strategy is simple_byte
  6279  0054A0  0A00               	xorlw	0	; case 0
  6280  0054A2  B4D8               	btfsc	status,2,c
  6281  0054A4  0012               	return	
  6282  0054A6  0A01               	xorlw	1	; case 1
  6283  0054A8  A4D8               	btfss	status,2,c
  6284  0054AA  0012               	return	
  6285  0054AC  D7DE               	goto	l1277
  6286  0054AE                     __end_of_MdmHttp_MainTask:
  6287                           	opt stack 0
  6288                           tosu	equ	0xFFF
  6289                           tosh	equ	0xFFE
  6290                           tosl	equ	0xFFD
  6291                           pclath	equ	0xFFA
  6292                           tblptru	equ	0xFF8
  6293                           tblptrh	equ	0xFF7
  6294                           tblptrl	equ	0xFF6
  6295                           tablat	equ	0xFF5
  6296                           prodh	equ	0xFF4
  6297                           prodl	equ	0xFF3
  6298                           intcon	equ	0xFF2
  6299                           intcon2	equ	0xFF1
  6300                           intcon3	equ	0xFF0
  6301                           postinc0	equ	0xFEE
  6302                           plusw0	equ	0xFEB
  6303                           wreg	equ	0xFE8
  6304                           postinc1	equ	0xFE6
  6305                           postdec1	equ	0xFE5
  6306                           plusw1	equ	0xFE3
  6307                           fsr1h	equ	0xFE2
  6308                           fsr1l	equ	0xFE1
  6309                           indf2	equ	0xFDF
  6310                           postinc2	equ	0xFDE
  6311                           postdec2	equ	0xFDD
  6312                           plusw2	equ	0xFDB
  6313                           fsr2h	equ	0xFDA
  6314                           fsr2l	equ	0xFD9
  6315                           status	equ	0xFD8
  6316                           
  6317 ;; *************** function _Mdm_MainTask *****************
  6318 ;; Defined at:
  6319 ;;		line 734 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;  Options         1    wreg     unsigned char 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;  Options         1    0[COMRAM] unsigned char 
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  1    wreg      void 
  6326 ;; Registers used:
  6327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6337 ;;Total ram usage:        0 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:   15
  6340 ;; This function calls:
  6341 ;;		_CheckModem
  6342 ;;		_ConfigureModem
  6343 ;;		_GetSmsSm
  6344 ;;		_ModemEvtParser
  6345 ;;		_SendSmsSm
  6346 ;;		_TurnOnModem
  6347 ;;		_UartSetConfig
  6348 ;;		_Uart_InitUartModule
  6349 ;; This function is called by:
  6350 ;;		_InitializeTasks
  6351 ;;		_ScheduleTasks
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text22
  6356  005298                     __ptext22:
  6357                           	opt stack 0
  6358  005298                     _Mdm_MainTask:
  6359                           	opt stack 13
  6360                           
  6361                           ;mdm_gsm_gprs.c: 736: switch (SystemState)
  6362                           
  6363                           ;incstack = 0
  6364  005298  D01E               	goto	l1097
  6365  00529A                     
  6366                           ;mdm_gsm_gprs.c: 741: UartSetConfig();
  6367  00529A  ECA3  F027         	call	_UartSetConfig	;wreg free
  6368                           
  6369                           ;mdm_gsm_gprs.c: 743: Uart_InitUartModule(1,&UartConfig);
  6370  00529E  0E26               	movlw	low _UartConfig
  6371  0052A0  0100               	movlb	0	; () banked
  6372  0052A2  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6373  0052A4  0E03               	movlw	high _UartConfig
  6374  0052A6  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6375  0052A8  0E01               	movlw	1
  6376  0052AA  EC5E  F005         	call	_Uart_InitUartModule
  6377                           
  6378                           ;mdm_gsm_gprs.c: 744: break;
  6379  0052AE  0012               	return	
  6380  0052B0                     
  6381                           ;mdm_gsm_gprs.c: 749: CheckModem();
  6382  0052B0  EC55  F011         	call	_CheckModem	;wreg free
  6383                           
  6384                           ;mdm_gsm_gprs.c: 751: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6385  0052B4  042B               	decf	_ComChecCompleted,w,c
  6386  0052B6  A4D8               	btfss	status,2,c
  6387  0052B8  D005               	goto	l1101
  6388  0052BA  0100               	movlb	0	; () banked
  6389  0052BC  51CF               	movf	_MdmStatus& (0+255),w,b
  6390  0052BE  B4D8               	btfsc	status,2,c
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;mdm_gsm_gprs.c: 752: {
  6394                           ;mdm_gsm_gprs.c: 754: TurnOnModem();
  6395  0052C0  EC57  F02A         	call	_TurnOnModem	;wreg free
  6396  0052C4                     l1101:
  6397                           
  6398                           ;mdm_gsm_gprs.c: 755: }
  6399                           ;mdm_gsm_gprs.c: 757: ConfigureModem();
  6400  0052C4  EC09  F01C         	call	_ConfigureModem	;wreg free
  6401                           
  6402                           ;mdm_gsm_gprs.c: 759: ModemEvtParser();
  6403  0052C8  EC3A  F016         	call	_ModemEvtParser	;wreg free
  6404                           
  6405                           ;mdm_gsm_gprs.c: 761: GetSmsSm();
  6406  0052CC  ECBE  F017         	call	_GetSmsSm	;wreg free
  6407                           
  6408                           ;mdm_gsm_gprs.c: 763: SendSmsSm();
  6409  0052D0  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6410                           
  6411                           ;mdm_gsm_gprs.c: 769: }
  6412                           
  6413                           ;mdm_gsm_gprs.c: 768: break;
  6414                           
  6415                           ;mdm_gsm_gprs.c: 767: default:
  6416                           
  6417                           ;mdm_gsm_gprs.c: 764: break;
  6418  0052D4  0012               	return	
  6419  0052D6                     l1097:
  6420  0052D6  0100               	movlb	0	; () banked
  6421  0052D8  51D2               	movf	_SystemState& (0+255),w,b
  6422                           
  6423                           ; Switch size 1, requested type "space"
  6424                           ; Number of cases is 2, Range of values is 0 to 1
  6425                           ; switch strategies available:
  6426                           ; Name         Instructions Cycles
  6427                           ; simple_byte            7     4 (average)
  6428                           ;	Chosen strategy is simple_byte
  6429  0052DA  0A00               	xorlw	0	; case 0
  6430  0052DC  B4D8               	btfsc	status,2,c
  6431  0052DE  D7DD               	goto	l1098
  6432  0052E0  0A01               	xorlw	1	; case 1
  6433  0052E2  A4D8               	btfss	status,2,c
  6434  0052E4  0012               	return	
  6435  0052E6  D7E4               	goto	l1100
  6436  0052E8                     __end_of_Mdm_MainTask:
  6437                           	opt stack 0
  6438                           tosu	equ	0xFFF
  6439                           tosh	equ	0xFFE
  6440                           tosl	equ	0xFFD
  6441                           pclath	equ	0xFFA
  6442                           tblptru	equ	0xFF8
  6443                           tblptrh	equ	0xFF7
  6444                           tblptrl	equ	0xFF6
  6445                           tablat	equ	0xFF5
  6446                           prodh	equ	0xFF4
  6447                           prodl	equ	0xFF3
  6448                           intcon	equ	0xFF2
  6449                           intcon2	equ	0xFF1
  6450                           intcon3	equ	0xFF0
  6451                           postinc0	equ	0xFEE
  6452                           plusw0	equ	0xFEB
  6453                           wreg	equ	0xFE8
  6454                           postinc1	equ	0xFE6
  6455                           postdec1	equ	0xFE5
  6456                           plusw1	equ	0xFE3
  6457                           fsr1h	equ	0xFE2
  6458                           fsr1l	equ	0xFE1
  6459                           indf2	equ	0xFDF
  6460                           postinc2	equ	0xFDE
  6461                           postdec2	equ	0xFDD
  6462                           plusw2	equ	0xFDB
  6463                           fsr2h	equ	0xFDA
  6464                           fsr2l	equ	0xFD9
  6465                           status	equ	0xFD8
  6466                           
  6467 ;; *************** function _I2cSlv_MainTask *****************
  6468 ;; Defined at:
  6469 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  Options         1    wreg     unsigned char 
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  Options         1    0[COMRAM] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  1    wreg      void 
  6476 ;; Registers used:
  6477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6487 ;;Total ram usage:        0 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:   14
  6490 ;; This function calls:
  6491 ;;		_I2cSendMsgSm
  6492 ;;		_I2cSetConfig
  6493 ;;		_I2c_InitI2cModule
  6494 ;;		_OsAlrm_SetOsAlarm
  6495 ;; This function is called by:
  6496 ;;		_InitializeTasks
  6497 ;;		_ScheduleTasks
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           	psect	text23
  6502  0050A6                     __ptext23:
  6503                           	opt stack 0
  6504  0050A6                     _I2cSlv_MainTask:
  6505                           	opt stack 14
  6506                           
  6507                           ;i2c_slv.c: 217: switch (SystemState)
  6508                           
  6509                           ;incstack = 0
  6510  0050A6  D020               	goto	l1387
  6511  0050A8                     
  6512                           ;i2c_slv.c: 222: I2cSetConfig();
  6513  0050A8  EC4B  F02D         	call	_I2cSetConfig	;wreg free
  6514                           
  6515                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6516  0050AC  0E51               	movlw	low _I2cConfig
  6517  0050AE  0100               	movlb	0	; () banked
  6518  0050B0  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6519  0050B2  0E03               	movlw	high _I2cConfig
  6520  0050B4  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6521  0050B6  ECA3  F025         	call	_I2c_InitI2cModule	;wreg free
  6522                           
  6523                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6524  0050BA  0E00               	movlw	0
  6525  0050BC  0100               	movlb	0	; () banked
  6526  0050BE  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  6527  0050C0  0E00               	movlw	0
  6528  0050C2  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  6529  0050C4  0E32               	movlw	50
  6530  0050C6  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  6531  0050C8  0E00               	movlw	0
  6532  0050CA  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  6533  0050CC  0E00               	movlw	0
  6534  0050CE  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  6535  0050D0  0E00               	movlw	0
  6536  0050D2  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  6537  0050D4  0E34               	movlw	low _I2cDummyTx
  6538  0050D6  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  6539  0050D8  0E5D               	movlw	high _I2cDummyTx
  6540  0050DA  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  6541  0050DC  EC9B  F01D         	call	_OsAlrm_SetOsAlarm	;wreg free
  6542                           
  6543                           ;i2c_slv.c: 227: break;
  6544  0050E0  0012               	return	
  6545  0050E2                     
  6546                           ;i2c_slv.c: 232: I2cSendMsgSm();
  6547  0050E2  ECFF  F01D         	call	_I2cSendMsgSm	;wreg free
  6548                           
  6549                           ;i2c_slv.c: 238: }
  6550                           
  6551                           ;i2c_slv.c: 237: break;
  6552                           
  6553                           ;i2c_slv.c: 236: default:
  6554                           
  6555                           ;i2c_slv.c: 233: break;
  6556  0050E6  0012               	return	
  6557  0050E8                     l1387:
  6558  0050E8  0100               	movlb	0	; () banked
  6559  0050EA  51D2               	movf	_SystemState& (0+255),w,b
  6560                           
  6561                           ; Switch size 1, requested type "space"
  6562                           ; Number of cases is 2, Range of values is 0 to 1
  6563                           ; switch strategies available:
  6564                           ; Name         Instructions Cycles
  6565                           ; simple_byte            7     4 (average)
  6566                           ;	Chosen strategy is simple_byte
  6567  0050EC  0A00               	xorlw	0	; case 0
  6568  0050EE  B4D8               	btfsc	status,2,c
  6569  0050F0  D7DB               	goto	l1388
  6570  0050F2  0A01               	xorlw	1	; case 1
  6571  0050F4  A4D8               	btfss	status,2,c
  6572  0050F6  0012               	return	
  6573  0050F8  D7F4               	goto	l1390
  6574  0050FA                     __end_of_I2cSlv_MainTask:
  6575                           	opt stack 0
  6576                           tosu	equ	0xFFF
  6577                           tosh	equ	0xFFE
  6578                           tosl	equ	0xFFD
  6579                           pclath	equ	0xFFA
  6580                           tblptru	equ	0xFF8
  6581                           tblptrh	equ	0xFF7
  6582                           tblptrl	equ	0xFF6
  6583                           tablat	equ	0xFF5
  6584                           prodh	equ	0xFF4
  6585                           prodl	equ	0xFF3
  6586                           intcon	equ	0xFF2
  6587                           intcon2	equ	0xFF1
  6588                           intcon3	equ	0xFF0
  6589                           postinc0	equ	0xFEE
  6590                           plusw0	equ	0xFEB
  6591                           wreg	equ	0xFE8
  6592                           postinc1	equ	0xFE6
  6593                           postdec1	equ	0xFE5
  6594                           plusw1	equ	0xFE3
  6595                           fsr1h	equ	0xFE2
  6596                           fsr1l	equ	0xFE1
  6597                           indf2	equ	0xFDF
  6598                           postinc2	equ	0xFDE
  6599                           postdec2	equ	0xFDD
  6600                           plusw2	equ	0xFDB
  6601                           fsr2h	equ	0xFDA
  6602                           fsr2l	equ	0xFD9
  6603                           status	equ	0xFD8
  6604                           
  6605 ;; *************** function _Mdm_DrvMainFn *****************
  6606 ;; Defined at:
  6607 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  Options         1    wreg     unsigned char 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  Options         1    0[COMRAM] unsigned char 
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1    wreg      void 
  6614 ;; Registers used:
  6615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6625 ;;Total ram usage:        0 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; Hardware stack levels required when called:   13
  6628 ;; This function calls:
  6629 ;;		_MdmCntSm
  6630 ;; This function is called by:
  6631 ;;		_InitializeTasks
  6632 ;;		_ScheduleTasks
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           	psect	text24
  6637  005F18                     __ptext24:
  6638                           	opt stack 0
  6639  005F18                     _Mdm_DrvMainFn:
  6640                           	opt stack 15
  6641                           
  6642                           ;mdm_drv.c: 307: MdmCntSm();
  6643                           
  6644                           ;incstack = 0
  6645  005F18  EC7D  F020         	call	_MdmCntSm	;wreg free
  6646  005F1C  0012               	return		;funcret
  6647  005F1E                     __end_of_Mdm_DrvMainFn:
  6648                           	opt stack 0
  6649                           tosu	equ	0xFFF
  6650                           tosh	equ	0xFFE
  6651                           tosl	equ	0xFFD
  6652                           pclath	equ	0xFFA
  6653                           tblptru	equ	0xFF8
  6654                           tblptrh	equ	0xFF7
  6655                           tblptrl	equ	0xFF6
  6656                           tablat	equ	0xFF5
  6657                           prodh	equ	0xFF4
  6658                           prodl	equ	0xFF3
  6659                           intcon	equ	0xFF2
  6660                           intcon2	equ	0xFF1
  6661                           intcon3	equ	0xFF0
  6662                           postinc0	equ	0xFEE
  6663                           plusw0	equ	0xFEB
  6664                           wreg	equ	0xFE8
  6665                           postinc1	equ	0xFE6
  6666                           postdec1	equ	0xFE5
  6667                           plusw1	equ	0xFE3
  6668                           fsr1h	equ	0xFE2
  6669                           fsr1l	equ	0xFE1
  6670                           indf2	equ	0xFDF
  6671                           postinc2	equ	0xFDE
  6672                           postdec2	equ	0xFDD
  6673                           plusw2	equ	0xFDB
  6674                           fsr2h	equ	0xFDA
  6675                           fsr2l	equ	0xFD9
  6676                           status	equ	0xFD8
  6677                           
  6678 ;; *************** function _Wdg_MainTask *****************
  6679 ;; Defined at:
  6680 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  Options         1    wreg     unsigned char 
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;  Options         1    0[COMRAM] unsigned char 
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  1    wreg      void 
  6687 ;; Registers used:
  6688 ;;		wreg, status,2, status,0, cstack
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6698 ;;Total ram usage:        0 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; Hardware stack levels required when called:   12
  6701 ;; This function calls:
  6702 ;;		_Mcu_ClearWdg
  6703 ;;		_Mcu_SetWdgSts
  6704 ;; This function is called by:
  6705 ;;		_InitializeTasks
  6706 ;;		_ScheduleTasks
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           	psect	text25
  6711  005BD0                     __ptext25:
  6712                           	opt stack 0
  6713  005BD0                     _Wdg_MainTask:
  6714                           	opt stack 16
  6715                           
  6716                           ;wdg.c: 75: switch (SystemState)
  6717                           
  6718                           ;incstack = 0
  6719  005BD0  D007               	goto	l2458
  6720  005BD2                     
  6721                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  6722  005BD2  0E01               	movlw	1
  6723  005BD4  EC26  F02F         	call	_Mcu_SetWdgSts
  6724                           
  6725                           ;wdg.c: 81: break;
  6726  005BD8  0012               	return	
  6727  005BDA                     
  6728                           ;wdg.c: 86: Mcu_ClearWdg();
  6729  005BDA  EC8F  F02F         	call	_Mcu_ClearWdg	;wreg free
  6730                           
  6731                           ;wdg.c: 92: }
  6732                           
  6733                           ;wdg.c: 91: break;
  6734                           
  6735                           ;wdg.c: 90: default:
  6736                           
  6737                           ;wdg.c: 87: break;
  6738  005BDE  0012               	return	
  6739  005BE0                     l2458:
  6740  005BE0  0100               	movlb	0	; () banked
  6741  005BE2  51D2               	movf	_SystemState& (0+255),w,b
  6742                           
  6743                           ; Switch size 1, requested type "space"
  6744                           ; Number of cases is 2, Range of values is 0 to 1
  6745                           ; switch strategies available:
  6746                           ; Name         Instructions Cycles
  6747                           ; simple_byte            7     4 (average)
  6748                           ;	Chosen strategy is simple_byte
  6749  005BE4  0A00               	xorlw	0	; case 0
  6750  005BE6  B4D8               	btfsc	status,2,c
  6751  005BE8  D7F4               	goto	l2459
  6752  005BEA  0A01               	xorlw	1	; case 1
  6753  005BEC  A4D8               	btfss	status,2,c
  6754  005BEE  0012               	return	
  6755  005BF0  D7F4               	goto	l2461
  6756  005BF2                     __end_of_Wdg_MainTask:
  6757                           	opt stack 0
  6758                           tosu	equ	0xFFF
  6759                           tosh	equ	0xFFE
  6760                           tosl	equ	0xFFD
  6761                           pclath	equ	0xFFA
  6762                           tblptru	equ	0xFF8
  6763                           tblptrh	equ	0xFF7
  6764                           tblptrl	equ	0xFF6
  6765                           tablat	equ	0xFF5
  6766                           prodh	equ	0xFF4
  6767                           prodl	equ	0xFF3
  6768                           intcon	equ	0xFF2
  6769                           intcon2	equ	0xFF1
  6770                           intcon3	equ	0xFF0
  6771                           postinc0	equ	0xFEE
  6772                           plusw0	equ	0xFEB
  6773                           wreg	equ	0xFE8
  6774                           postinc1	equ	0xFE6
  6775                           postdec1	equ	0xFE5
  6776                           plusw1	equ	0xFE3
  6777                           fsr1h	equ	0xFE2
  6778                           fsr1l	equ	0xFE1
  6779                           indf2	equ	0xFDF
  6780                           postinc2	equ	0xFDE
  6781                           postdec2	equ	0xFDD
  6782                           plusw2	equ	0xFDB
  6783                           fsr2h	equ	0xFDA
  6784                           fsr2l	equ	0xFD9
  6785                           status	equ	0xFD8
  6786                           
  6787 ;; *************** function _Mcu_SetWdgSts *****************
  6788 ;; Defined at:
  6789 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;  WdgSts          1    wreg     unsigned char 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  1    wreg      void 
  6796 ;; Registers used:
  6797 ;;		wreg
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6804 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6806 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6807 ;;Total ram usage:        1 bytes
  6808 ;; Hardware stack levels used:    1
  6809 ;; Hardware stack levels required when called:   11
  6810 ;; This function calls:
  6811 ;;		Nothing
  6812 ;; This function is called by:
  6813 ;;		_Wdg_MainTask
  6814 ;; This function uses a non-reentrant model
  6815 ;;
  6816                           
  6817                           	psect	text26
  6818  005E4C                     __ptext26:
  6819                           	opt stack 0
  6820  005E4C                     _Mcu_SetWdgSts:
  6821                           	opt stack 16
  6822                           
  6823                           ;incstack = 0
  6824                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  6825  005E4C  0100               	movlb	0	; () banked
  6826  005E4E  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  6827                           
  6828                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  6829  005E50  0100               	movlb	0	; () banked
  6830  005E52  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  6831  005E54  D002               	bra	u7935
  6832  005E56  90C0               	bcf	4032,0,c	;volatile
  6833  005E58  D001               	bra	u7936
  6834  005E5A                     u7935:
  6835  005E5A  80C0               	bsf	4032,0,c	;volatile
  6836  005E5C                     u7936:
  6837  005E5C  0012               	return		;funcret
  6838  005E5E                     __end_of_Mcu_SetWdgSts:
  6839                           	opt stack 0
  6840                           tosu	equ	0xFFF
  6841                           tosh	equ	0xFFE
  6842                           tosl	equ	0xFFD
  6843                           pclath	equ	0xFFA
  6844                           tblptru	equ	0xFF8
  6845                           tblptrh	equ	0xFF7
  6846                           tblptrl	equ	0xFF6
  6847                           tablat	equ	0xFF5
  6848                           prodh	equ	0xFF4
  6849                           prodl	equ	0xFF3
  6850                           intcon	equ	0xFF2
  6851                           intcon2	equ	0xFF1
  6852                           intcon3	equ	0xFF0
  6853                           postinc0	equ	0xFEE
  6854                           plusw0	equ	0xFEB
  6855                           wreg	equ	0xFE8
  6856                           postinc1	equ	0xFE6
  6857                           postdec1	equ	0xFE5
  6858                           plusw1	equ	0xFE3
  6859                           fsr1h	equ	0xFE2
  6860                           fsr1l	equ	0xFE1
  6861                           indf2	equ	0xFDF
  6862                           postinc2	equ	0xFDE
  6863                           postdec2	equ	0xFDD
  6864                           plusw2	equ	0xFDB
  6865                           fsr2h	equ	0xFDA
  6866                           fsr2l	equ	0xFD9
  6867                           status	equ	0xFD8
  6868                           
  6869 ;; *************** function _Mcu_ClearWdg *****************
  6870 ;; Defined at:
  6871 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;		None
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;		None
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  1    wreg      void 
  6878 ;; Registers used:
  6879 ;;		None
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6889 ;;Total ram usage:        0 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:   11
  6892 ;; This function calls:
  6893 ;;		Nothing
  6894 ;; This function is called by:
  6895 ;;		_Wdg_MainTask
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text27
  6900  005F1E                     __ptext27:
  6901                           	opt stack 0
  6902  005F1E                     _Mcu_ClearWdg:
  6903                           	opt stack 16
  6904                           
  6905                           ;incstack = 0
  6906  005F1E  0004               	clrwdt		;# 
  6907  005F20  0012               	return		;funcret
  6908  005F22                     __end_of_Mcu_ClearWdg:
  6909                           	opt stack 0
  6910                           tosu	equ	0xFFF
  6911                           tosh	equ	0xFFE
  6912                           tosl	equ	0xFFD
  6913                           pclath	equ	0xFFA
  6914                           tblptru	equ	0xFF8
  6915                           tblptrh	equ	0xFF7
  6916                           tblptrl	equ	0xFF6
  6917                           tablat	equ	0xFF5
  6918                           prodh	equ	0xFF4
  6919                           prodl	equ	0xFF3
  6920                           intcon	equ	0xFF2
  6921                           intcon2	equ	0xFF1
  6922                           intcon3	equ	0xFF0
  6923                           postinc0	equ	0xFEE
  6924                           plusw0	equ	0xFEB
  6925                           wreg	equ	0xFE8
  6926                           postinc1	equ	0xFE6
  6927                           postdec1	equ	0xFE5
  6928                           plusw1	equ	0xFE3
  6929                           fsr1h	equ	0xFE2
  6930                           fsr1l	equ	0xFE1
  6931                           indf2	equ	0xFDF
  6932                           postinc2	equ	0xFDE
  6933                           postdec2	equ	0xFDD
  6934                           plusw2	equ	0xFDB
  6935                           fsr2h	equ	0xFDA
  6936                           fsr2l	equ	0xFD9
  6937                           status	equ	0xFD8
  6938                           
  6939 ;; *************** function _USBDeviceTasks *****************
  6940 ;; Defined at:
  6941 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;		None
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;  i               1   56[BANK0 ] unsigned char 
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  1    wreg      void 
  6948 ;; Registers used:
  6949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6956 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6958 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6959 ;;Total ram usage:        1 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; Hardware stack levels required when called:   19
  6962 ;; This function calls:
  6963 ;;		_USBCtrlEPAllowStatusStage
  6964 ;;		_USBCtrlEPService
  6965 ;;		_USBDeviceInit
  6966 ;;		_USBIncrement1msInternalTimers
  6967 ;;		_USBStallHandler
  6968 ;;		_USBSuspend
  6969 ;;		_USBWakeFromSuspend
  6970 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6971 ;; This function is called by:
  6972 ;;		_UsbDevice_MainTask
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text28
  6977  001BAA                     __ptext28:
  6978                           	opt stack 0
  6979  001BAA                     _USBDeviceTasks:
  6980                           	opt stack 8
  6981                           
  6982                           ;usb_device.c: 562: }
  6983                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  6984                           
  6985                           ; BSR set to: 0
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;usb_device.c: 561: return;
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  6992                           
  6993                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  6994                           
  6995                           ;usb_device.c: 529: UIE = 0;
  6996                           
  6997                           ;usb_device.c: 524: {
  6998                           ;usb_device.c: 526: UCON = 0;
  6999                           
  7000                           ;usb_device.c: 497: uint8_t i;
  7001                           ;usb_device.c: 523: if (1 != 1)
  7002                           
  7003                           ;incstack = 0
  7004  001BAA  0100               	movlb	0	; () banked
  7005  001BAC  51CB               	movf	_USBDeviceState& (0+255),w,b
  7006  001BAE  A4D8               	btfss	status,2,c
  7007  001BB0  D012               	goto	l1598
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;usb_device.c: 585: {
  7011                           ;usb_device.c: 587: UCON = 0;
  7012  001BB2  0E00               	movlw	0
  7013  001BB4  6E65               	movwf	3941,c	;volatile
  7014                           
  7015                           ;usb_device.c: 590: UIE = 0;
  7016  001BB6  0E00               	movlw	0
  7017  001BB8  010F               	movlb	15	; () banked
  7018  001BBA  6F36               	movwf	54,b	;volatile
  7019                           
  7020                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7021  001BBC  0E16               	movlw	22
  7022  001BBE  6F39               	movwf	57,b	;volatile
  7023  001BC0  0E9F               	movlw	159
  7024  001BC2  6F37               	movwf	55,b	;volatile
  7025  001BC4  0E7B               	movlw	123
  7026  001BC6  6F36               	movwf	54,b	;volatile
  7027                           
  7028                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7029  001BC8  D001               	goto	l1599
  7030  001BCA                     l1600:
  7031  001BCA  8665               	bsf	3941,3,c	;volatile
  7032  001BCC                     l1599:
  7033  001BCC  A665               	btfss	3941,3,c	;volatile
  7034  001BCE  D7FD               	goto	l1600
  7035                           
  7036                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7037  001BD0  0E01               	movlw	1
  7038  001BD2  0100               	movlb	0	; () banked
  7039  001BD4  6FCB               	movwf	_USBDeviceState& (0+255),b
  7040  001BD6                     l1598:
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;usb_device.c: 605: }
  7044                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7045                           
  7046                           ; BSR set to: 0
  7047  001BD6  05CB               	decf	_USBDeviceState& (0+255),w,b
  7048  001BD8  B4D8               	btfsc	status,2,c
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;usb_device.c: 609: {
  7052                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7053  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7054  001BDC  D00A               	goto	l1603
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;usb_device.c: 620: {
  7058                           ;usb_device.c: 626: {UIR = 0;};
  7059  001BDE  0E00               	movlw	0
  7060  001BE0  6E62               	movwf	3938,c	;volatile
  7061                           
  7062                           ;usb_device.c: 630: UIE=0;
  7063  001BE2  0E00               	movlw	0
  7064  001BE4  010F               	movlb	15	; () banked
  7065  001BE6  6F36               	movwf	54,b	;volatile
  7066                           
  7067                           ; BSR set to: 15
  7068                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7069  001BE8  8136               	bsf	54,0,b	;volatile
  7070                           
  7071                           ; BSR set to: 15
  7072                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7073  001BEA  8936               	bsf	54,4,b	;volatile
  7074                           
  7075                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7076  001BEC  0E02               	movlw	2
  7077  001BEE  0100               	movlb	0	; () banked
  7078  001BF0  6FCB               	movwf	_USBDeviceState& (0+255),b
  7079  001BF2                     l1603:
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;usb_device.c: 635: }
  7083                           ;usb_device.c: 636: }
  7084                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7085                           
  7086                           ; BSR set to: 0
  7087                           
  7088                           ; BSR set to: 0
  7089  001BF2  A462               	btfss	3938,2,c	;volatile
  7090  001BF4  D006               	goto	l1604
  7091                           
  7092                           ; BSR set to: 0
  7093  001BF6  010F               	movlb	15	; () banked
  7094  001BF8  A536               	btfss	54,2,b	;volatile
  7095  001BFA  D003               	goto	l1604
  7096                           
  7097                           ; BSR set to: 15
  7098                           ;usb_device.c: 653: {
  7099                           ;usb_device.c: 654: (UIR &= 0xFB);
  7100  001BFC  9462               	bcf	3938,2,c	;volatile
  7101                           
  7102                           ; BSR set to: 15
  7103                           ;usb_device.c: 658: USBWakeFromSuspend();
  7104  001BFE  ECFF  F02B         	call	_USBWakeFromSuspend	;wreg free
  7105  001C02                     l1604:
  7106                           
  7107                           ;usb_device.c: 660: }
  7108                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7109  001C02  A265               	btfss	3941,1,c	;volatile
  7110  001C04  D002               	goto	l1605
  7111                           
  7112                           ;usb_device.c: 666: {
  7113                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7114  001C06  98A1               	bcf	4001,4,c	;volatile
  7115                           
  7116                           ;usb_device.c: 668: return;
  7117  001C08  0012               	return	
  7118  001C0A                     l1605:
  7119                           
  7120                           ;usb_device.c: 669: }
  7121                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7122  001C0A  A062               	btfss	3938,0,c	;volatile
  7123  001C0C  D009               	goto	l1606
  7124  001C0E  010F               	movlb	15	; () banked
  7125  001C10  A136               	btfss	54,0,b	;volatile
  7126  001C12  D006               	goto	l1606
  7127                           
  7128                           ; BSR set to: 15
  7129                           ;usb_device.c: 682: {
  7130                           ;usb_device.c: 683: USBDeviceInit();
  7131  001C14  ECFF  F00F         	call	_USBDeviceInit	;wreg free
  7132                           
  7133                           ;usb_device.c: 687: ;
  7134                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7135  001C18  0E04               	movlw	4
  7136  001C1A  0100               	movlb	0	; () banked
  7137  001C1C  6FCB               	movwf	_USBDeviceState& (0+255),b
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;usb_device.c: 699: (UIR &= 0xFE);
  7141  001C1E  9062               	bcf	3938,0,c	;volatile
  7142  001C20                     l1606:
  7143                           
  7144                           ;usb_device.c: 700: }
  7145                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7146                           
  7147                           ; BSR set to: 0
  7148  001C20  A862               	btfss	3938,4,c	;volatile
  7149  001C22  D004               	goto	l1607
  7150  001C24  010F               	movlb	15	; () banked
  7151  001C26  B936               	btfsc	54,4,b	;volatile
  7152                           
  7153                           ; BSR set to: 15
  7154                           ;usb_device.c: 706: {
  7155                           ;usb_device.c: 712: USBSuspend();
  7156  001C28  EC8B  F02C         	call	_USBSuspend	;wreg free
  7157  001C2C                     l1607:
  7158                           
  7159                           ;usb_device.c: 714: }
  7160                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7161  001C2C  AC62               	btfss	3938,6,c	;volatile
  7162  001C2E  D01D               	goto	l1611
  7163                           
  7164                           ;usb_device.c: 727: {
  7165                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7166  001C30  010F               	movlb	15	; () banked
  7167  001C32  AD36               	btfss	54,6,b	;volatile
  7168  001C34  D00F               	goto	l1609
  7169                           
  7170                           ; BSR set to: 15
  7171                           ;usb_device.c: 730: {
  7172                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7173  001C36  0E00               	movlw	0
  7174  001C38  0100               	movlb	0	; () banked
  7175  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7176  001C3C  0E73               	movlw	115
  7177  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7178  001C40  0E00               	movlw	0
  7179  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7180  001C44  0E00               	movlw	0
  7181  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7182  001C48  0E00               	movlw	0
  7183  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7184  001C4C  0E01               	movlw	1
  7185  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7186  001C50  EC17  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7187  001C54                     l1609:
  7188                           
  7189                           ;usb_device.c: 732: }
  7190                           ;usb_device.c: 733: (UIR &= 0xBF);
  7191  001C54  9C62               	bcf	3938,6,c	;volatile
  7192                           
  7193                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7194  001C56  ECF9  F02D         	call	_USBIncrement1msInternalTimers	;wreg free
  7195                           
  7196                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7197  001C5A  0100               	movlb	0	; () banked
  7198  001C5C  51C7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7199  001C5E  A4D8               	btfss	status,2,c
  7200                           
  7201                           ; BSR set to: 0
  7202                           ;usb_device.c: 754: {
  7203                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7204  001C60  07C7               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;usb_device.c: 756: }
  7208                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7209                           
  7210                           ; BSR set to: 0
  7211  001C62  51C7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7212  001C64  B4D8               	btfsc	status,2,c
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;usb_device.c: 763: {
  7216                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7217  001C66  ECA3  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7218  001C6A                     l1611:
  7219                           
  7220                           ;usb_device.c: 765: }
  7221                           ;usb_device.c: 767: }
  7222                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7223  001C6A  AA62               	btfss	3938,5,c	;volatile
  7224  001C6C  D004               	goto	l1612
  7225  001C6E  010F               	movlb	15	; () banked
  7226  001C70  BB36               	btfsc	54,5,b	;volatile
  7227                           
  7228                           ; BSR set to: 15
  7229                           ;usb_device.c: 770: {
  7230                           ;usb_device.c: 771: USBStallHandler();
  7231  001C72  EC7A  F02A         	call	_USBStallHandler	;wreg free
  7232  001C76                     l1612:
  7233                           
  7234                           ;usb_device.c: 772: }
  7235                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7236  001C76  A262               	btfss	3938,1,c	;volatile
  7237  001C78  D013               	goto	l1613
  7238  001C7A  010F               	movlb	15	; () banked
  7239  001C7C  A336               	btfss	54,1,b	;volatile
  7240  001C7E  D010               	goto	l1613
  7241                           
  7242                           ; BSR set to: 15
  7243                           ;usb_device.c: 775: {
  7244                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7245  001C80  0E7F               	movlw	127
  7246  001C82  0100               	movlb	0	; () banked
  7247  001C84  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7248  001C86  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7249  001C88  0E00               	movlw	0
  7250  001C8A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7251  001C8C  0E00               	movlw	0
  7252  001C8E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7253  001C90  0E00               	movlw	0
  7254  001C92  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7255  001C94  0E01               	movlw	1
  7256  001C96  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7257  001C98  EC17  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7258                           
  7259                           ;usb_device.c: 777: {UEIR = 0;};
  7260  001C9C  0E00               	movlw	0
  7261  001C9E  6E63               	movwf	3939,c	;volatile
  7262  001CA0                     l1613:
  7263                           
  7264                           ;usb_device.c: 785: }
  7265                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7266  001CA0  0E04               	movlw	4
  7267  001CA2  0100               	movlb	0	; () banked
  7268  001CA4  61CB               	cpfslt	_USBDeviceState& (0+255),b
  7269  001CA6  D002               	goto	l1614
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;usb_device.c: 793: {
  7273                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7274  001CA8  98A1               	bcf	4001,4,c	;volatile
  7275                           
  7276                           ;usb_device.c: 795: return;
  7277  001CAA  0012               	return	
  7278  001CAC                     l1614:
  7279                           
  7280                           ; BSR set to: 0
  7281                           ;usb_device.c: 796: }
  7282                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7283  001CAC  010F               	movlb	15	; () banked
  7284  001CAE  A736               	btfss	54,3,b	;volatile
  7285  001CB0  D03E               	goto	u12990
  7286                           
  7287                           ; BSR set to: 15
  7288                           ;usb_device.c: 802: {
  7289                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7290  001CB2  0E00               	movlw	0
  7291  001CB4  0100               	movlb	0	; () banked
  7292  001CB6  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7293  001CB8                     l13608:
  7294                           
  7295                           ; BSR set to: 0
  7296  001CB8  0E03               	movlw	3
  7297  001CBA  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7298  001CBC  D001               	goto	l1616
  7299  001CBE  D037               	goto	u12990
  7300  001CC0                     l1616:
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;usb_device.c: 804: {
  7304                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7305  001CC0  A662               	btfss	3938,3,c	;volatile
  7306  001CC2  D035               	goto	u12990
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;usb_device.c: 806: {
  7310                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7311  001CC4  CF64 F0D3          	movff	3940,_USTATcopy	;volatile
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7315  001CC8  31D3               	rrcf	_USTATcopy& (0+255),w,b
  7316  001CCA  32E8               	rrcf	wreg,f,c
  7317  001CCC  32E8               	rrcf	wreg,f,c
  7318  001CCE  0B0F               	andlw	15
  7319  001CD0  6FC8               	movwf	_endpoint_number& (0+255),b
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;usb_device.c: 811: (UIR &= 0xF7);
  7323  001CD2  9662               	bcf	3938,3,c	;volatile
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7327  001CD4  B5D3               	btfsc	_USTATcopy& (0+255),2,b
  7328  001CD6  D007               	goto	l1619
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;usb_device.c: 817: {
  7332                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7333  001CD8  51C8               	movf	_endpoint_number& (0+255),w,b
  7334  001CDA  0D01               	mullw	1
  7335  001CDC  0ECE               	movlw	low _ep_data_out
  7336  001CDE  24F3               	addwf	prodl,w,c
  7337  001CE0  6ED9               	movwf	fsr2l,c
  7338  001CE2  0E02               	movlw	high _ep_data_out
  7339  001CE4  D007               	goto	L3
  7340  001CE6                     l1619:
  7341                           
  7342                           ;usb_device.c: 820: else
  7343                           ;usb_device.c: 821: {
  7344                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7345                           
  7346                           ; BSR set to: 2
  7347  001CE6  0100               	movlb	0	; () banked
  7348  001CE8  51C8               	movf	_endpoint_number& (0+255),w,b
  7349  001CEA  0D01               	mullw	1
  7350  001CEC  0ED1               	movlw	low _ep_data_in
  7351  001CEE  24F3               	addwf	prodl,w,c
  7352  001CF0  6ED9               	movwf	fsr2l,c
  7353  001CF2  0E02               	movlw	high _ep_data_in
  7354  001CF4                     L3:
  7355  001CF4  20F4               	addwfc	prodh,w,c
  7356  001CF6  6EDA               	movwf	fsr2h,c
  7357  001CF8  0102               	movlb	2	; () banked
  7358  001CFA  70DF               	btg	indf2,0,c
  7359                           
  7360                           ; BSR set to: 2
  7361                           ;usb_device.c: 823: }
  7362                           ;usb_device.c: 828: if(endpoint_number == 0)
  7363                           
  7364                           ; BSR set to: 2
  7365  001CFC  0100               	movlb	0	; () banked
  7366  001CFE  51C8               	movf	_endpoint_number& (0+255),w,b
  7367  001D00  A4D8               	btfss	status,2,c
  7368  001D02  D003               	goto	l1621
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;usb_device.c: 829: {
  7372                           ;usb_device.c: 830: USBCtrlEPService();
  7373  001D04  ECF7  F022         	call	_USBCtrlEPService	;wreg free
  7374                           
  7375                           ;usb_device.c: 831: }
  7376  001D08  D00F               	goto	l1623
  7377  001D0A                     l1621:
  7378                           
  7379                           ;usb_device.c: 832: else
  7380                           ;usb_device.c: 833: {
  7381                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7382  001D0A  0E00               	movlw	0
  7383  001D0C  0100               	movlb	0	; () banked
  7384  001D0E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7385  001D10  0E72               	movlw	114
  7386  001D12  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7387  001D14  0ED3               	movlw	low _USTATcopy
  7388  001D16  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7389  001D18  0E00               	movlw	high _USTATcopy
  7390  001D1A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7391  001D1C  0E00               	movlw	0
  7392  001D1E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7393  001D20  0E00               	movlw	0
  7394  001D22  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7395  001D24  EC17  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7396  001D28                     l1623:
  7397  001D28  0100               	movlb	0	; () banked
  7398  001D2A  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7399  001D2C  D7C5               	goto	l13608
  7400  001D2E                     u12990:
  7401                           
  7402                           ;usb_device.c: 840: }
  7403                           ;usb_device.c: 841: }
  7404                           ;usb_device.c: 842: }
  7405                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7406                           
  7407                           ; BSR set to: 0
  7408  001D2E  98A1               	bcf	4001,4,c	;volatile
  7409  001D30  0012               	return		;funcret
  7410  001D32                     __end_of_USBDeviceTasks:
  7411                           	opt stack 0
  7412                           tosu	equ	0xFFF
  7413                           tosh	equ	0xFFE
  7414                           tosl	equ	0xFFD
  7415                           pclath	equ	0xFFA
  7416                           tblptru	equ	0xFF8
  7417                           tblptrh	equ	0xFF7
  7418                           tblptrl	equ	0xFF6
  7419                           tablat	equ	0xFF5
  7420                           prodh	equ	0xFF4
  7421                           prodl	equ	0xFF3
  7422                           intcon	equ	0xFF2
  7423                           intcon2	equ	0xFF1
  7424                           intcon3	equ	0xFF0
  7425                           postinc0	equ	0xFEE
  7426                           plusw0	equ	0xFEB
  7427                           wreg	equ	0xFE8
  7428                           postinc1	equ	0xFE6
  7429                           postdec1	equ	0xFE5
  7430                           plusw1	equ	0xFE3
  7431                           fsr1h	equ	0xFE2
  7432                           fsr1l	equ	0xFE1
  7433                           indf2	equ	0xFDF
  7434                           postinc2	equ	0xFDE
  7435                           postdec2	equ	0xFDD
  7436                           plusw2	equ	0xFDB
  7437                           fsr2h	equ	0xFDA
  7438                           fsr2l	equ	0xFD9
  7439                           status	equ	0xFD8
  7440                           
  7441 ;; *************** function _USBWakeFromSuspend *****************
  7442 ;; Defined at:
  7443 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;		None
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;		None
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  1    wreg      void 
  7450 ;; Registers used:
  7451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7461 ;;Total ram usage:        0 bytes
  7462 ;; Hardware stack levels used:    1
  7463 ;; Hardware stack levels required when called:   15
  7464 ;; This function calls:
  7465 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7466 ;; This function is called by:
  7467 ;;		_USBDeviceTasks
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           
  7471                           	psect	text29
  7472  0057FE                     __ptext29:
  7473                           	opt stack 0
  7474  0057FE                     _USBWakeFromSuspend:
  7475                           	opt stack 11
  7476                           
  7477                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7478                           
  7479                           ;incstack = 0
  7480  0057FE  0E00               	movlw	0
  7481  005800  0101               	movlb	1	; () banked
  7482  005802  6FE7               	movwf	_USBBusIsSuspended& (0+255),b
  7483                           
  7484                           ; BSR set to: 1
  7485                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7486  005804  0E00               	movlw	0
  7487  005806  0100               	movlb	0	; () banked
  7488  005808  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7489  00580A  0E74               	movlw	116
  7490  00580C  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7491  00580E  0E00               	movlw	0
  7492  005810  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7493  005812  0E00               	movlw	0
  7494  005814  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7495  005816  0E00               	movlw	0
  7496  005818  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7497  00581A  0E00               	movlw	0
  7498  00581C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7499  00581E  EC17  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7500                           
  7501                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7502  005822  9265               	bcf	3941,1,c	;volatile
  7503                           
  7504                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7505  005824  010F               	movlb	15	; () banked
  7506  005826  9536               	bcf	54,2,b	;volatile
  7507                           
  7508                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7509  005828  D001               	goto	l1751
  7510  00582A                     
  7511                           ;usb_device.c: 2361: {
  7512                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7513                           
  7514                           ; BSR set to: 15
  7515  00582A  9462               	bcf	3938,2,c	;volatile
  7516  00582C                     l1751:
  7517  00582C  B462               	btfsc	3938,2,c	;volatile
  7518  00582E  D7FD               	goto	l1752
  7519                           
  7520                           ;usb_device.c: 2363: }
  7521                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7522  005830  0E00               	movlw	0
  7523  005832  0101               	movlb	1	; () banked
  7524  005834  6FE5               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7525                           
  7526                           ; BSR set to: 1
  7527  005836  0012               	return		;funcret
  7528  005838                     __end_of_USBWakeFromSuspend:
  7529                           	opt stack 0
  7530                           tosu	equ	0xFFF
  7531                           tosh	equ	0xFFE
  7532                           tosl	equ	0xFFD
  7533                           pclath	equ	0xFFA
  7534                           tblptru	equ	0xFF8
  7535                           tblptrh	equ	0xFF7
  7536                           tblptrl	equ	0xFF6
  7537                           tablat	equ	0xFF5
  7538                           prodh	equ	0xFF4
  7539                           prodl	equ	0xFF3
  7540                           intcon	equ	0xFF2
  7541                           intcon2	equ	0xFF1
  7542                           intcon3	equ	0xFF0
  7543                           postinc0	equ	0xFEE
  7544                           plusw0	equ	0xFEB
  7545                           wreg	equ	0xFE8
  7546                           postinc1	equ	0xFE6
  7547                           postdec1	equ	0xFE5
  7548                           plusw1	equ	0xFE3
  7549                           fsr1h	equ	0xFE2
  7550                           fsr1l	equ	0xFE1
  7551                           indf2	equ	0xFDF
  7552                           postinc2	equ	0xFDE
  7553                           postdec2	equ	0xFDD
  7554                           plusw2	equ	0xFDB
  7555                           fsr2h	equ	0xFDA
  7556                           fsr2l	equ	0xFD9
  7557                           status	equ	0xFD8
  7558                           
  7559 ;; *************** function _USBSuspend *****************
  7560 ;; Defined at:
  7561 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;		None
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;		None
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  1    wreg      void 
  7568 ;; Registers used:
  7569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7579 ;;Total ram usage:        0 bytes
  7580 ;; Hardware stack levels used:    1
  7581 ;; Hardware stack levels required when called:   15
  7582 ;; This function calls:
  7583 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7584 ;; This function is called by:
  7585 ;;		_USBDeviceTasks
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text30
  7590  005916                     __ptext30:
  7591                           	opt stack 0
  7592  005916                     _USBSuspend:
  7593                           	opt stack 11
  7594                           
  7595                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  7596                           
  7597                           ; BSR set to: 1
  7598                           ;incstack = 0
  7599  005916  010F               	movlb	15	; () banked
  7600  005918  8536               	bsf	54,2,b	;volatile
  7601                           
  7602                           ; BSR set to: 15
  7603                           ;usb_device.c: 2289: (UIR &= 0xEF);
  7604  00591A  9862               	bcf	3938,4,c	;volatile
  7605                           
  7606                           ; BSR set to: 15
  7607                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  7608  00591C  8265               	bsf	3941,1,c	;volatile
  7609                           
  7610                           ; BSR set to: 15
  7611                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  7612  00591E  0E01               	movlw	1
  7613  005920  0101               	movlb	1	; () banked
  7614  005922  6FE7               	movwf	_USBBusIsSuspended& (0+255),b
  7615                           
  7616                           ; BSR set to: 1
  7617                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  7618  005924  0E00               	movlw	0
  7619  005926  6FE5               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7620                           
  7621                           ; BSR set to: 1
  7622                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7623  005928  0E00               	movlw	0
  7624  00592A  0100               	movlb	0	; () banked
  7625  00592C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7626  00592E  0E75               	movlw	117
  7627  005930  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7628  005932  0E00               	movlw	0
  7629  005934  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7630  005936  0E00               	movlw	0
  7631  005938  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7632  00593A  0E00               	movlw	0
  7633  00593C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7634  00593E  0E00               	movlw	0
  7635  005940  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7636  005942  EC17  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7637  005946  0012               	return		;funcret
  7638  005948                     __end_of_USBSuspend:
  7639                           	opt stack 0
  7640                           tosu	equ	0xFFF
  7641                           tosh	equ	0xFFE
  7642                           tosl	equ	0xFFD
  7643                           pclath	equ	0xFFA
  7644                           tblptru	equ	0xFF8
  7645                           tblptrh	equ	0xFF7
  7646                           tblptrl	equ	0xFF6
  7647                           tablat	equ	0xFF5
  7648                           prodh	equ	0xFF4
  7649                           prodl	equ	0xFF3
  7650                           intcon	equ	0xFF2
  7651                           intcon2	equ	0xFF1
  7652                           intcon3	equ	0xFF0
  7653                           postinc0	equ	0xFEE
  7654                           plusw0	equ	0xFEB
  7655                           wreg	equ	0xFE8
  7656                           postinc1	equ	0xFE6
  7657                           postdec1	equ	0xFE5
  7658                           plusw1	equ	0xFE3
  7659                           fsr1h	equ	0xFE2
  7660                           fsr1l	equ	0xFE1
  7661                           indf2	equ	0xFDF
  7662                           postinc2	equ	0xFDE
  7663                           postdec2	equ	0xFDD
  7664                           plusw2	equ	0xFDB
  7665                           fsr2h	equ	0xFDA
  7666                           fsr2l	equ	0xFD9
  7667                           status	equ	0xFD8
  7668                           
  7669 ;; *************** function _USBStallHandler *****************
  7670 ;; Defined at:
  7671 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;		None
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;		None
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  1    wreg      void 
  7678 ;; Registers used:
  7679 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7687 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7688 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7689 ;;Total ram usage:        1 bytes
  7690 ;; Hardware stack levels used:    1
  7691 ;; Hardware stack levels required when called:   11
  7692 ;; This function calls:
  7693 ;;		Nothing
  7694 ;; This function is called by:
  7695 ;;		_USBDeviceTasks
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           	psect	text31
  7700  0054F4                     __ptext31:
  7701                           	opt stack 0
  7702  0054F4                     _USBStallHandler:
  7703                           	opt stack 15
  7704                           
  7705                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  7706                           
  7707                           ;incstack = 0
  7708  0054F4  010F               	movlb	15	; () banked
  7709  0054F6  A126               	btfss	38,0,b	;volatile
  7710  0054F8  D01D               	goto	l1743
  7711                           
  7712                           ; BSR set to: 15
  7713                           ;usb_device.c: 2233: {
  7714                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  7715  0054FA  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7716  0054FE  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7717  005502  0E80               	movlw	128
  7718  005504  18DE               	xorwf	postinc2,w,c
  7719  005506  A4D8               	btfss	status,2,c
  7720  005508  D014               	goto	l1744
  7721                           
  7722                           ; BSR set to: 15
  7723  00550A  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  7724  00550E  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7725  005512  0E84               	movlw	132
  7726  005514  18DE               	xorwf	postinc2,w,c
  7727  005516  A4D8               	btfss	status,2,c
  7728  005518  D00C               	goto	l1744
  7729                           
  7730                           ; BSR set to: 15
  7731                           ;usb_device.c: 2236: {
  7732                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7733  00551A  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7734  00551E  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7735  005522  0E0C               	movlw	12
  7736  005524  6EDF               	movwf	indf2,c
  7737                           
  7738                           ; BSR set to: 15
  7739                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  7740  005526  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7741  00552A  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7742  00552E  0E00               	movlw	0
  7743  005530  8EDB               	bsf	plusw2,7,c
  7744  005532                     l1744:
  7745                           
  7746                           ; BSR set to: 15
  7747                           ;usb_device.c: 2240: }
  7748                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  7749                           
  7750                           ; BSR set to: 15
  7751  005532  9126               	bcf	38,0,b	;volatile
  7752  005534                     l1743:
  7753                           
  7754                           ; BSR set to: 15
  7755                           ;usb_device.c: 2242: }
  7756                           ;usb_device.c: 2244: (UIR &= 0xDF);
  7757  005534  9A62               	bcf	3938,5,c	;volatile
  7758                           
  7759                           ; BSR set to: 15
  7760  005536  0012               	return		;funcret
  7761  005538                     __end_of_USBStallHandler:
  7762                           	opt stack 0
  7763                           tosu	equ	0xFFF
  7764                           tosh	equ	0xFFE
  7765                           tosl	equ	0xFFD
  7766                           pclath	equ	0xFFA
  7767                           tblptru	equ	0xFF8
  7768                           tblptrh	equ	0xFF7
  7769                           tblptrl	equ	0xFF6
  7770                           tablat	equ	0xFF5
  7771                           prodh	equ	0xFF4
  7772                           prodl	equ	0xFF3
  7773                           intcon	equ	0xFF2
  7774                           intcon2	equ	0xFF1
  7775                           intcon3	equ	0xFF0
  7776                           postinc0	equ	0xFEE
  7777                           plusw0	equ	0xFEB
  7778                           wreg	equ	0xFE8
  7779                           postinc1	equ	0xFE6
  7780                           postdec1	equ	0xFE5
  7781                           plusw1	equ	0xFE3
  7782                           fsr1h	equ	0xFE2
  7783                           fsr1l	equ	0xFE1
  7784                           indf2	equ	0xFDF
  7785                           postinc2	equ	0xFDE
  7786                           postdec2	equ	0xFDD
  7787                           plusw2	equ	0xFDB
  7788                           fsr2h	equ	0xFDA
  7789                           fsr2l	equ	0xFD9
  7790                           status	equ	0xFD8
  7791                           
  7792 ;; *************** function _USBIncrement1msInternalTimers *****************
  7793 ;; Defined at:
  7794 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;		None
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  1    wreg      void 
  7801 ;; Registers used:
  7802 ;;		wreg, status,2, status,0
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7812 ;;Total ram usage:        0 bytes
  7813 ;; Hardware stack levels used:    1
  7814 ;; Hardware stack levels required when called:   11
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_USBDeviceTasks
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           	psect	text32
  7823  005BF2                     __ptext32:
  7824                           	opt stack 0
  7825  005BF2                     _USBIncrement1msInternalTimers:
  7826                           	opt stack 15
  7827                           
  7828                           ;usb_device.c: 3050: USB1msTickCount++;
  7829                           
  7830                           ; BSR set to: 15
  7831                           ;incstack = 0
  7832  005BF2  0E01               	movlw	1
  7833  005BF4  0103               	movlb	3	; () banked
  7834  005BF6  2718               	addwf	_USB1msTickCount& (0+255),f,b
  7835  005BF8  0E00               	movlw	0
  7836  005BFA  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  7837  005BFC  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  7838  005BFE  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  7839                           
  7840                           ; BSR set to: 3
  7841                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  7842  005C00  0101               	movlb	1	; () banked
  7843  005C02  51E7               	movf	_USBBusIsSuspended& (0+255),w,b
  7844  005C04  A4D8               	btfss	status,2,c
  7845  005C06  0012               	return	
  7846                           
  7847                           ; BSR set to: 1
  7848                           ;usb_device.c: 3052: {
  7849                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  7850  005C08  2BE5               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  7851                           
  7852                           ; BSR set to: 1
  7853                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  7854  005C0A  51E5               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  7855  005C0C  A4D8               	btfss	status,2,c
  7856  005C0E  0012               	return	
  7857                           
  7858                           ; BSR set to: 1
  7859                           ;usb_device.c: 3056: {
  7860                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  7861  005C10  69E5               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  7862                           
  7863                           ; BSR set to: 1
  7864  005C12  0012               	return	
  7865  005C14                     __end_of_USBIncrement1msInternalTimers:
  7866                           	opt stack 0
  7867                           tosu	equ	0xFFF
  7868                           tosh	equ	0xFFE
  7869                           tosl	equ	0xFFD
  7870                           pclath	equ	0xFFA
  7871                           tblptru	equ	0xFF8
  7872                           tblptrh	equ	0xFF7
  7873                           tblptrl	equ	0xFF6
  7874                           tablat	equ	0xFF5
  7875                           prodh	equ	0xFF4
  7876                           prodl	equ	0xFF3
  7877                           intcon	equ	0xFF2
  7878                           intcon2	equ	0xFF1
  7879                           intcon3	equ	0xFF0
  7880                           postinc0	equ	0xFEE
  7881                           plusw0	equ	0xFEB
  7882                           wreg	equ	0xFE8
  7883                           postinc1	equ	0xFE6
  7884                           postdec1	equ	0xFE5
  7885                           plusw1	equ	0xFE3
  7886                           fsr1h	equ	0xFE2
  7887                           fsr1l	equ	0xFE1
  7888                           indf2	equ	0xFDF
  7889                           postinc2	equ	0xFDE
  7890                           postdec2	equ	0xFDD
  7891                           plusw2	equ	0xFDB
  7892                           fsr2h	equ	0xFDA
  7893                           fsr2l	equ	0xFD9
  7894                           status	equ	0xFD8
  7895                           
  7896 ;; *************** function _USBDeviceInit *****************
  7897 ;; Defined at:
  7898 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;		None
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;  i               1   37[BANK0 ] unsigned char 
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  1    wreg      void 
  7905 ;; Registers used:
  7906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7913 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7915 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7916 ;;Total ram usage:        1 bytes
  7917 ;; Hardware stack levels used:    1
  7918 ;; Hardware stack levels required when called:   12
  7919 ;; This function calls:
  7920 ;;		_memset
  7921 ;; This function is called by:
  7922 ;;		_USBDeviceTasks
  7923 ;;		_UsbDevice_MainTask
  7924 ;; This function uses a non-reentrant model
  7925 ;;
  7926                           
  7927                           	psect	text33
  7928  001FFE                     __ptext33:
  7929                           	opt stack 0
  7930  001FFE                     _USBDeviceInit:
  7931                           	opt stack 14
  7932                           
  7933                           ;usb_device.c: 297: uint8_t i;
  7934                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  7935                           
  7936                           ; BSR set to: 1
  7937                           ;incstack = 0
  7938  001FFE  98A0               	bcf	4000,4,c	;volatile
  7939                           
  7940                           ;usb_device.c: 303: ;
  7941                           ;usb_device.c: 306: {UEIR = 0;};
  7942  002000  0E00               	movlw	0
  7943  002002  6E63               	movwf	3939,c	;volatile
  7944                           
  7945                           ;usb_device.c: 309: {UIR = 0;};
  7946  002004  0E00               	movlw	0
  7947  002006  6E62               	movwf	3938,c	;volatile
  7948                           
  7949                           ;usb_device.c: 312: UEP0 = 0;
  7950  002008  0E00               	movlw	0
  7951  00200A  010F               	movlb	15	; () banked
  7952  00200C  6F26               	movwf	38,b	;volatile
  7953                           
  7954                           ; BSR set to: 15
  7955                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  7956  00200E  0E27               	movlw	39
  7957  002010  0100               	movlb	0	; () banked
  7958  002012  6F7D               	movwf	memset@p1& (0+255),b
  7959  002014  0E0F               	movlw	15
  7960  002016  6F7E               	movwf	(memset@p1+1)& (0+255),b
  7961  002018  0E00               	movlw	0
  7962  00201A  6F80               	movwf	(memset@c+1)& (0+255),b
  7963  00201C  0E00               	movlw	0
  7964  00201E  6F7F               	movwf	memset@c& (0+255),b
  7965  002020  0E00               	movlw	0
  7966  002022  6F82               	movwf	(memset@n+1)& (0+255),b
  7967  002024  0E02               	movlw	2
  7968  002026  6F81               	movwf	memset@n& (0+255),b
  7969  002028  ECD5  F02C         	call	_memset	;wreg free
  7970                           
  7971                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7972  00202C  0E16               	movlw	22
  7973  00202E  010F               	movlb	15	; () banked
  7974  002030  6F39               	movwf	57,b	;volatile
  7975                           
  7976                           ; BSR set to: 15
  7977  002032  0E9F               	movlw	159
  7978  002034  6F37               	movwf	55,b	;volatile
  7979                           
  7980                           ; BSR set to: 15
  7981  002036  0E7B               	movlw	123
  7982  002038  6F36               	movwf	54,b	;volatile
  7983                           
  7984                           ; BSR set to: 15
  7985                           ;usb_device.c: 319: ;
  7986                           ;usb_device.c: 322: ;
  7987                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  7988  00203A  0E00               	movlw	0
  7989  00203C  0100               	movlb	0	; () banked
  7990  00203E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  7991  002040                     l12510:
  7992                           
  7993                           ; BSR set to: 0
  7994  002040  0E0B               	movlw	11
  7995  002042  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  7996  002044  D001               	goto	l1587
  7997  002046  D00E               	goto	u11460
  7998  002048                     l1587:
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;usb_device.c: 326: {
  8002                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8003                           
  8004                           ; BSR set to: 0
  8005  002048  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8006  00204A  0D04               	mullw	4
  8007  00204C  0E00               	movlw	0
  8008  00204E  24F3               	addwf	prodl,w,c
  8009  002050  6ED9               	movwf	fsr2l,c
  8010  002052  0E04               	movlw	4
  8011  002054  20F4               	addwfc	prodh,w,c
  8012  002056  6EDA               	movwf	fsr2h,c
  8013  002058  6ADE               	clrf	postinc2,c
  8014  00205A  6ADE               	clrf	postinc2,c
  8015  00205C  6ADE               	clrf	postinc2,c
  8016  00205E  6ADD               	clrf	postdec2,c
  8017                           
  8018                           ; BSR set to: 0
  8019  002060  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8020  002062  D7EE               	goto	l12510
  8021  002064                     u11460:
  8022                           
  8023                           ; BSR set to: 0
  8024                           ;usb_device.c: 328: }
  8025                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8026  002064  8C65               	bsf	3941,6,c	;volatile
  8027                           
  8028                           ; BSR set to: 0
  8029                           ;usb_device.c: 334: UADDR = 0x00;
  8030  002066  0E00               	movlw	0
  8031  002068  010F               	movlb	15	; () banked
  8032  00206A  6F38               	movwf	56,b	;volatile
  8033                           
  8034                           ; BSR set to: 15
  8035                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8036  00206C  9865               	bcf	3941,4,c	;volatile
  8037                           
  8038                           ; BSR set to: 15
  8039                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8040  00206E  9C65               	bcf	3941,6,c	;volatile
  8041  002070                     
  8042                           ;usb_device.c: 344: {
  8043                           ;usb_device.c: 345: (UIR &= 0xF7);
  8044                           
  8045                           ; BSR set to: 15
  8046  002070  9662               	bcf	3938,3,c	;volatile
  8047                           
  8048                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8049  002072  0E00               	movlw	0
  8050  002074  0100               	movlb	0	; () banked
  8051  002076  6FAF               	movwf	(_inPipes+3)& (0+255),b
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8055  002078  0E00               	movlw	0
  8056  00207A  0101               	movlb	1	; () banked
  8057  00207C  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8058                           
  8059                           ; BSR set to: 1
  8060                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8061  00207E  0E00               	movlw	0
  8062  002080  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8063  002082  0E00               	movlw	0
  8064  002084  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8065                           
  8066                           ; BSR set to: 1
  8067                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8068  002086  B662               	btfsc	3938,3,c	;volatile
  8069  002088  D7F3               	goto	l1589
  8070                           
  8071                           ; BSR set to: 1
  8072                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8073                           
  8074                           ; BSR set to: 1
  8075  00208A  0E01               	movlw	1
  8076  00208C  0100               	movlb	0	; () banked
  8077  00208E  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8078                           
  8079                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8080  002090  0E01               	movlw	1
  8081  002092  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8082                           
  8083                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8084  002094  0E00               	movlw	0
  8085  002096  6FC3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  8086                           
  8087                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8088  002098  0E00               	movlw	0
  8089  00209A  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8090                           
  8091                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8092  00209C  0E00               	movlw	0
  8093  00209E  0101               	movlb	1	; () banked
  8094  0020A0  6FE7               	movwf	_USBBusIsSuspended& (0+255),b
  8095                           
  8096                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8097  0020A2  0E00               	movlw	0
  8098  0020A4  0100               	movlb	0	; () banked
  8099  0020A6  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8100  0020A8                     l12538:
  8101                           
  8102                           ; BSR set to: 0
  8103  0020A8  0E02               	movlw	2
  8104  0020AA  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8105  0020AC  D001               	goto	l1591
  8106  0020AE  D02E               	goto	u11490
  8107  0020B0                     l1591:
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;usb_device.c: 364: {
  8111                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8112                           
  8113                           ; BSR set to: 0
  8114  0020B0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8115  0020B2  0D02               	mullw	2
  8116  0020B4  0EB2               	movlw	low _pBDTEntryIn
  8117  0020B6  24F3               	addwf	prodl,w,c
  8118  0020B8  6ED9               	movwf	fsr2l,c
  8119  0020BA  0E00               	movlw	high _pBDTEntryIn
  8120  0020BC  20F4               	addwfc	prodh,w,c
  8121  0020BE  6EDA               	movwf	fsr2h,c
  8122  0020C0  0E00               	movlw	0
  8123  0020C2  6EDE               	movwf	postinc2,c
  8124  0020C4  0E00               	movlw	0
  8125  0020C6  6EDD               	movwf	postdec2,c
  8126                           
  8127                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8128  0020C8  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8129  0020CA  0D02               	mullw	2
  8130  0020CC  0E0E               	movlw	low _pBDTEntryOut
  8131  0020CE  24F3               	addwf	prodl,w,c
  8132  0020D0  6ED9               	movwf	fsr2l,c
  8133  0020D2  0E03               	movlw	high _pBDTEntryOut
  8134  0020D4  20F4               	addwfc	prodh,w,c
  8135  0020D6  6EDA               	movwf	fsr2h,c
  8136  0020D8  0E00               	movlw	0
  8137  0020DA  6EDE               	movwf	postinc2,c
  8138  0020DC  0E00               	movlw	0
  8139  0020DE  6EDD               	movwf	postdec2,c
  8140                           
  8141                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8142  0020E0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8143  0020E2  0D01               	mullw	1
  8144  0020E4  0ED1               	movlw	low _ep_data_in
  8145  0020E6  24F3               	addwf	prodl,w,c
  8146  0020E8  6ED9               	movwf	fsr2l,c
  8147  0020EA  0E02               	movlw	high _ep_data_in
  8148  0020EC  20F4               	addwfc	prodh,w,c
  8149  0020EE  6EDA               	movwf	fsr2h,c
  8150  0020F0  0E00               	movlw	0
  8151  0020F2  6EDF               	movwf	indf2,c
  8152                           
  8153                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8154  0020F4  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8155  0020F6  0D01               	mullw	1
  8156  0020F8  0ECE               	movlw	low _ep_data_out
  8157  0020FA  24F3               	addwf	prodl,w,c
  8158  0020FC  6ED9               	movwf	fsr2l,c
  8159  0020FE  0E02               	movlw	high _ep_data_out
  8160  002100  20F4               	addwfc	prodh,w,c
  8161  002102  6EDA               	movwf	fsr2h,c
  8162  002104  0E00               	movlw	0
  8163  002106  6EDF               	movwf	indf2,c
  8164                           
  8165                           ; BSR set to: 0
  8166  002108  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8167  00210A  D7CE               	goto	l12538
  8168  00210C                     u11490:
  8169                           
  8170                           ; BSR set to: 0
  8171                           ;usb_device.c: 369: }
  8172                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8173                           
  8174                           ; BSR set to: 0
  8175  00210C  0E08               	movlw	8
  8176  00210E  6FB2               	movwf	_pBDTEntryIn& (0+255),b
  8177  002110  0E04               	movlw	4
  8178  002112  6FB3               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8182  002114  0E16               	movlw	22
  8183  002116  010F               	movlb	15	; () banked
  8184  002118  6F26               	movwf	38,b	;volatile
  8185                           
  8186                           ; BSR set to: 15
  8187                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8188  00211A  0E04               	movlw	4
  8189  00211C  0104               	movlb	4	; () banked
  8190  00211E  6F03               	movwf	3,b	;volatile
  8191  002120  0E30               	movlw	48
  8192  002122  6F02               	movwf	2,b	;volatile
  8193                           
  8194                           ; BSR set to: 4
  8195                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8196  002124  0E08               	movlw	8
  8197  002126  6F01               	movwf	1,b	;volatile
  8198                           
  8199                           ; BSR set to: 4
  8200                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8201  002128  0E04               	movlw	4
  8202  00212A  6F00               	movwf	0,b	;volatile
  8203                           
  8204                           ; BSR set to: 4
  8205                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8206  00212C  8F00               	bsf	0,7,b	;volatile
  8207                           
  8208                           ; BSR set to: 4
  8209                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8210  00212E  0E00               	movlw	0
  8211  002130  0100               	movlb	0	; () banked
  8212  002132  6FD4               	movwf	_USBActiveConfiguration& (0+255),b
  8213                           
  8214                           ; BSR set to: 0
  8215                           ;usb_device.c: 384: USB1msTickCount = 0;
  8216  002134  0E00               	movlw	0
  8217  002136  0103               	movlb	3	; () banked
  8218  002138  6F18               	movwf	_USB1msTickCount& (0+255),b
  8219  00213A  0E00               	movlw	0
  8220  00213C  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8221  00213E  0E00               	movlw	0
  8222  002140  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8223  002142  0E00               	movlw	0
  8224  002144  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8225                           
  8226                           ; BSR set to: 3
  8227                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8228  002146  0E00               	movlw	0
  8229  002148  0101               	movlb	1	; () banked
  8230  00214A  6FE5               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8231                           
  8232                           ; BSR set to: 1
  8233                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8234  00214C  0E00               	movlw	0
  8235  00214E  0100               	movlb	0	; () banked
  8236  002150  6FCB               	movwf	_USBDeviceState& (0+255),b
  8237                           
  8238                           ; BSR set to: 0
  8239  002152  0012               	return		;funcret
  8240  002154                     __end_of_USBDeviceInit:
  8241                           	opt stack 0
  8242                           tosu	equ	0xFFF
  8243                           tosh	equ	0xFFE
  8244                           tosl	equ	0xFFD
  8245                           pclath	equ	0xFFA
  8246                           tblptru	equ	0xFF8
  8247                           tblptrh	equ	0xFF7
  8248                           tblptrl	equ	0xFF6
  8249                           tablat	equ	0xFF5
  8250                           prodh	equ	0xFF4
  8251                           prodl	equ	0xFF3
  8252                           intcon	equ	0xFF2
  8253                           intcon2	equ	0xFF1
  8254                           intcon3	equ	0xFF0
  8255                           postinc0	equ	0xFEE
  8256                           plusw0	equ	0xFEB
  8257                           wreg	equ	0xFE8
  8258                           postinc1	equ	0xFE6
  8259                           postdec1	equ	0xFE5
  8260                           plusw1	equ	0xFE3
  8261                           fsr1h	equ	0xFE2
  8262                           fsr1l	equ	0xFE1
  8263                           indf2	equ	0xFDF
  8264                           postinc2	equ	0xFDE
  8265                           postdec2	equ	0xFDD
  8266                           plusw2	equ	0xFDB
  8267                           fsr2h	equ	0xFDA
  8268                           fsr2l	equ	0xFD9
  8269                           status	equ	0xFD8
  8270                           
  8271 ;; *************** function _USBCtrlEPService *****************
  8272 ;; Defined at:
  8273 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;		None
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;		None
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      void 
  8280 ;; Registers used:
  8281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8289 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8290 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;Total ram usage:        1 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:   18
  8294 ;; This function calls:
  8295 ;;		_USBCtrlTrfInHandler
  8296 ;;		_USBCtrlTrfOutHandler
  8297 ;;		_USBCtrlTrfSetupHandler
  8298 ;;		_memcpy
  8299 ;; This function is called by:
  8300 ;;		_USBDeviceTasks
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text34
  8305  0045EE                     __ptext34:
  8306                           	opt stack 0
  8307  0045EE                     _USBCtrlEPService:
  8308                           	opt stack 8
  8309                           
  8310                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;incstack = 0
  8314  0045EE  0E2D               	movlw	45
  8315  0045F0  0100               	movlb	0	; () banked
  8316  0045F2  6FC7               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  8317                           
  8318                           ; BSR set to: 0
  8319                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8320  0045F4  C0D3  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8321  0045F8  0EFD               	movlw	253
  8322  0045FA  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8323  0045FC  A4D8               	btfss	status,2,c
  8324  0045FE  D038               	goto	l1757
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;usb_device.c: 2401: {
  8328                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8329  004600  C0D3  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8330  004604  90D8               	bcf	status,0,c
  8331  004606  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8332  004608  0E3F               	movlw	63
  8333  00460A  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8334  00460C  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8335  00460E  0D04               	mullw	4
  8336  004610  0E00               	movlw	0
  8337  004612  24F3               	addwf	prodl,w,c
  8338  004614  6FBC               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8339  004616  0E04               	movlw	4
  8340  004618  20F4               	addwfc	prodh,w,c
  8341  00461A  6FBD               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8342                           
  8343                           ; BSR set to: 0
  8344                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8345  00461C  C0BC  F0BA         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8346  004620  C0BD  F0BB         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8350  004624  0E04               	movlw	4
  8351  004626  1BBA               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8352                           
  8353                           ; BSR set to: 0
  8354                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8355  004628  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8356  00462C  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8357  004630  30DF               	rrcf	223,w,c
  8358  004632  32E8               	rrcf	wreg,f,c
  8359  004634  0B0F               	andlw	15
  8360  004636  0A0D               	xorlw	13
  8361  004638  A4D8               	btfss	status,2,c
  8362  00463A  D017               	goto	l1758
  8363                           
  8364                           ; BSR set to: 0
  8365                           ;usb_device.c: 2418: {
  8366                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8367  00463C  0E30               	movlw	48
  8368  00463E  6F7D               	movwf	memcpy@d1& (0+255),b
  8369  004640  0E04               	movlw	4
  8370  004642  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8371  004644  EE20 F002          	lfsr	2,2
  8372  004648  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8373  00464A  26D9               	addwf	fsr2l,f,c
  8374  00464C  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8375  00464E  22DA               	addwfc	fsr2h,f,c
  8376  004650  CFDE F07F          	movff	postinc2,memcpy@s1
  8377  004654  CFDD F080          	movff	postdec2,memcpy@s1+1
  8378  004658  0E00               	movlw	0
  8379  00465A  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8380  00465C  0E08               	movlw	8
  8381  00465E  6F81               	movwf	memcpy@n& (0+255),b
  8382  004660  EC10  F02A         	call	_memcpy	;wreg free
  8383                           
  8384                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8385  004664  EC1A  F024         	call	_USBCtrlTrfSetupHandler	;wreg free
  8386                           
  8387                           ;usb_device.c: 2427: }
  8388  004668  0012               	return	
  8389  00466A                     l1758:
  8390                           
  8391                           ;usb_device.c: 2428: else
  8392                           ;usb_device.c: 2429: {
  8393                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8394  00466A  EC80  F026         	call	_USBCtrlTrfOutHandler	;wreg free
  8395                           
  8396                           ;usb_device.c: 2432: }
  8397                           ;usb_device.c: 2433: }
  8398  00466E  0012               	return	
  8399  004670                     l1757:
  8400                           
  8401                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8402  004670  0100               	movlb	0	; () banked
  8403  004672  51D3               	movf	_USTATcopy& (0+255),w,b
  8404  004674  0BFD               	andlw	253
  8405  004676  0A04               	xorlw	4
  8406  004678  A4D8               	btfss	status,2,c
  8407  00467A  0012               	return	
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;usb_device.c: 2435: {
  8411                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8412  00467C  EC61  F01E         	call	_USBCtrlTrfInHandler	;wreg free
  8413  004680  0012               	return	
  8414  004682                     __end_of_USBCtrlEPService:
  8415                           	opt stack 0
  8416                           tosu	equ	0xFFF
  8417                           tosh	equ	0xFFE
  8418                           tosl	equ	0xFFD
  8419                           pclath	equ	0xFFA
  8420                           tblptru	equ	0xFF8
  8421                           tblptrh	equ	0xFF7
  8422                           tblptrl	equ	0xFF6
  8423                           tablat	equ	0xFF5
  8424                           prodh	equ	0xFF4
  8425                           prodl	equ	0xFF3
  8426                           intcon	equ	0xFF2
  8427                           intcon2	equ	0xFF1
  8428                           intcon3	equ	0xFF0
  8429                           postinc0	equ	0xFEE
  8430                           plusw0	equ	0xFEB
  8431                           wreg	equ	0xFE8
  8432                           postinc1	equ	0xFE6
  8433                           postdec1	equ	0xFE5
  8434                           plusw1	equ	0xFE3
  8435                           fsr1h	equ	0xFE2
  8436                           fsr1l	equ	0xFE1
  8437                           indf2	equ	0xFDF
  8438                           postinc2	equ	0xFDE
  8439                           postdec2	equ	0xFDD
  8440                           plusw2	equ	0xFDB
  8441                           fsr2h	equ	0xFDA
  8442                           fsr2l	equ	0xFD9
  8443                           status	equ	0xFD8
  8444                           
  8445 ;; *************** function _memcpy *****************
  8446 ;; Defined at:
  8447 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8448 ;; Parameters:    Size  Location     Type
  8449 ;;  d1              2   29[BANK0 ] PTR void 
  8450 ;;		 -> SetupPkt(8), 
  8451 ;;  s1              2   31[BANK0 ] PTR const void 
  8452 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8453 ;;  n               2   33[BANK0 ] unsigned int 
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  8456 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8457 ;;  d               2   35[BANK0 ] PTR unsigned char 
  8458 ;;		 -> SetupPkt(8), 
  8459 ;;  tmp             1   39[BANK0 ] unsigned char 
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  2   29[BANK0 ] PTR void 
  8462 ;; Registers used:
  8463 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8469 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8470 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8472 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8473 ;;Total ram usage:       11 bytes
  8474 ;; Hardware stack levels used:    1
  8475 ;; Hardware stack levels required when called:   11
  8476 ;; This function calls:
  8477 ;;		Nothing
  8478 ;; This function is called by:
  8479 ;;		_USBCtrlEPService
  8480 ;; This function uses a non-reentrant model
  8481 ;;
  8482                           
  8483                           	psect	text35
  8484  005420                     __ptext35:
  8485                           	opt stack 0
  8486  005420                     _memcpy:
  8487                           	opt stack 14
  8488                           
  8489                           ;incstack = 0
  8490  005420  C07F  F085         	movff	memcpy@s1,memcpy@s
  8491  005424  C080  F086         	movff	memcpy@s1+1,memcpy@s+1
  8492  005428  C07D  F083         	movff	memcpy@d1,memcpy@d
  8493  00542C  C07E  F084         	movff	memcpy@d1+1,memcpy@d+1
  8494  005430  D011               	goto	l3045
  8495  005432                     l8448:
  8496  005432  C085  FFD9         	movff	memcpy@s,fsr2l
  8497  005436  C086  FFDA         	movff	memcpy@s+1,fsr2h
  8498  00543A  50DF               	movf	indf2,w,c
  8499  00543C  0100               	movlb	0	; () banked
  8500  00543E  6F87               	movwf	memcpy@tmp& (0+255),b
  8501                           
  8502                           ; BSR set to: 0
  8503  005440  4B85               	infsnz	memcpy@s& (0+255),f,b
  8504  005442  2B86               	incf	(memcpy@s+1)& (0+255),f,b
  8505                           
  8506                           ; BSR set to: 0
  8507  005444  C083  FFD9         	movff	memcpy@d,fsr2l
  8508  005448  C084  FFDA         	movff	memcpy@d+1,fsr2h
  8509  00544C  C087  FFDF         	movff	memcpy@tmp,indf2
  8510                           
  8511                           ; BSR set to: 0
  8512  005450  4B83               	infsnz	memcpy@d& (0+255),f,b
  8513  005452  2B84               	incf	(memcpy@d+1)& (0+255),f,b
  8514  005454                     l3045:
  8515                           
  8516                           ; BSR set to: 0
  8517  005454  0100               	movlb	0	; () banked
  8518  005456  0781               	decf	memcpy@n& (0+255),f,b
  8519  005458  A0D8               	btfss	status,0,c
  8520  00545A  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8521  00545C  2981               	incf	memcpy@n& (0+255),w,b
  8522  00545E  E1E9               	bnz	l8448
  8523  005460  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8524  005462  B4D8               	btfsc	status,2,c
  8525  005464  0012               	return	
  8526  005466  D7E5               	goto	l3046
  8527  005468                     __end_of_memcpy:
  8528                           	opt stack 0
  8529                           tosu	equ	0xFFF
  8530                           tosh	equ	0xFFE
  8531                           tosl	equ	0xFFD
  8532                           pclath	equ	0xFFA
  8533                           tblptru	equ	0xFF8
  8534                           tblptrh	equ	0xFF7
  8535                           tblptrl	equ	0xFF6
  8536                           tablat	equ	0xFF5
  8537                           prodh	equ	0xFF4
  8538                           prodl	equ	0xFF3
  8539                           intcon	equ	0xFF2
  8540                           intcon2	equ	0xFF1
  8541                           intcon3	equ	0xFF0
  8542                           postinc0	equ	0xFEE
  8543                           plusw0	equ	0xFEB
  8544                           wreg	equ	0xFE8
  8545                           postinc1	equ	0xFE6
  8546                           postdec1	equ	0xFE5
  8547                           plusw1	equ	0xFE3
  8548                           fsr1h	equ	0xFE2
  8549                           fsr1l	equ	0xFE1
  8550                           indf2	equ	0xFDF
  8551                           postinc2	equ	0xFDE
  8552                           postdec2	equ	0xFDD
  8553                           plusw2	equ	0xFDB
  8554                           fsr2h	equ	0xFDA
  8555                           fsr2l	equ	0xFD9
  8556                           status	equ	0xFD8
  8557                           
  8558 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8559 ;; Defined at:
  8560 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8561 ;; Parameters:    Size  Location     Type
  8562 ;;		None
  8563 ;; Auto vars:     Size  Location     Type
  8564 ;;		None
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  1    wreg      void 
  8567 ;; Registers used:
  8568 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8578 ;;Total ram usage:        0 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; Hardware stack levels required when called:   17
  8581 ;; This function calls:
  8582 ;;		_USBCheckStdRequest
  8583 ;;		_USBCtrlEPServiceComplete
  8584 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8585 ;; This function is called by:
  8586 ;;		_USBCtrlEPService
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           	psect	text36
  8591  004834                     __ptext36:
  8592                           	opt stack 0
  8593  004834                     _USBCtrlTrfSetupHandler:
  8594                           	opt stack 8
  8595                           
  8596                           ;usb_device.c: 2488: shortPacketStatus = 0;
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;incstack = 0
  8600  004834  0E00               	movlw	0
  8601  004836  0100               	movlb	0	; () banked
  8602  004838  6FCA               	movwf	_shortPacketStatus& (0+255),b
  8603                           
  8604                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  8605  00483A  0E00               	movlw	0
  8606  00483C  6FC6               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  8607                           
  8608                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  8609  00483E  0E00               	movlw	0
  8610  004840  6FC3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  8611                           
  8612                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  8613  004842  0E00               	movlw	0
  8614  004844  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8615                           
  8616                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  8617  004846  0E00               	movlw	0
  8618  004848  0101               	movlb	1	; () banked
  8619  00484A  6FE6               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8620                           
  8621                           ;usb_device.c: 2493: controlTransferState = 0;
  8622  00484C  0E00               	movlw	0
  8623  00484E  0100               	movlb	0	; () banked
  8624  004850  6FC9               	movwf	_controlTransferState& (0+255),b
  8625                           
  8626                           ; BSR set to: 0
  8627                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8628  004852  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8629  004856  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8630  00485A  0E7F               	movlw	127
  8631  00485C  16DF               	andwf	indf2,f,c
  8632                           
  8633                           ; BSR set to: 0
  8634                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8635  00485E  0E04               	movlw	4
  8636  004860  1BB2               	xorwf	_pBDTEntryIn& (0+255),f,b
  8637                           
  8638                           ; BSR set to: 0
  8639                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8640  004862  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8641  004866  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8642  00486A  0E7F               	movlw	127
  8643  00486C  16DF               	andwf	indf2,f,c
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8647  00486E  0E04               	movlw	4
  8648  004870  1BB2               	xorwf	_pBDTEntryIn& (0+255),f,b
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8652  004872  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8653  004876  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8654  00487A  0E7F               	movlw	127
  8655  00487C  16DF               	andwf	indf2,f,c
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  8659  00487E  0E00               	movlw	0
  8660  004880  6FAF               	movwf	(_inPipes+3)& (0+255),b
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  8664  004882  0E00               	movlw	0
  8665  004884  6FB1               	movwf	(_inPipes+5)& (0+255),b
  8666  004886  0E00               	movlw	0
  8667  004888  6FB0               	movwf	(_inPipes+4)& (0+255),b
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  8671  00488A  0E00               	movlw	0
  8672  00488C  0101               	movlb	1	; () banked
  8673  00488E  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8674                           
  8675                           ; BSR set to: 1
  8676                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  8677  004890  0E00               	movlw	0
  8678  004892  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8679  004894  0E00               	movlw	0
  8680  004896  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8681                           
  8682                           ; BSR set to: 1
  8683                           ;usb_device.c: 2517: USBCheckStdRequest();
  8684  004898  EC8C  F019         	call	_USBCheckStdRequest	;wreg free
  8685                           
  8686                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8687  00489C  0E00               	movlw	0
  8688  00489E  0100               	movlb	0	; () banked
  8689  0048A0  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8690  0048A2  0E03               	movlw	3
  8691  0048A4  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8692  0048A6  0E00               	movlw	0
  8693  0048A8  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8694  0048AA  0E00               	movlw	0
  8695  0048AC  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8696  0048AE  0E00               	movlw	0
  8697  0048B0  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8698  0048B2  0E00               	movlw	0
  8699  0048B4  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8700  0048B6  EC17  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8701                           
  8702                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  8703  0048BA  ECC7  F016         	call	_USBCtrlEPServiceComplete	;wreg free
  8704  0048BE  0012               	return		;funcret
  8705  0048C0                     __end_of_USBCtrlTrfSetupHandler:
  8706                           	opt stack 0
  8707                           tosu	equ	0xFFF
  8708                           tosh	equ	0xFFE
  8709                           tosl	equ	0xFFD
  8710                           pclath	equ	0xFFA
  8711                           tblptru	equ	0xFF8
  8712                           tblptrh	equ	0xFF7
  8713                           tblptrl	equ	0xFF6
  8714                           tablat	equ	0xFF5
  8715                           prodh	equ	0xFF4
  8716                           prodl	equ	0xFF3
  8717                           intcon	equ	0xFF2
  8718                           intcon2	equ	0xFF1
  8719                           intcon3	equ	0xFF0
  8720                           postinc0	equ	0xFEE
  8721                           plusw0	equ	0xFEB
  8722                           wreg	equ	0xFE8
  8723                           postinc1	equ	0xFE6
  8724                           postdec1	equ	0xFE5
  8725                           plusw1	equ	0xFE3
  8726                           fsr1h	equ	0xFE2
  8727                           fsr1l	equ	0xFE1
  8728                           indf2	equ	0xFDF
  8729                           postinc2	equ	0xFDE
  8730                           postdec2	equ	0xFDD
  8731                           plusw2	equ	0xFDB
  8732                           fsr2h	equ	0xFDA
  8733                           fsr2l	equ	0xFD9
  8734                           status	equ	0xFD8
  8735                           
  8736 ;; *************** function _USBCtrlEPServiceComplete *****************
  8737 ;; Defined at:
  8738 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;		None
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;		None
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1    wreg      void 
  8745 ;; Registers used:
  8746 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8756 ;;Total ram usage:        0 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:   13
  8759 ;; This function calls:
  8760 ;;		_USBCtrlEPAllowDataStage
  8761 ;;		_USBCtrlEPAllowStatusStage
  8762 ;; This function is called by:
  8763 ;;		_USBCtrlTrfSetupHandler
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           	psect	text37
  8768  002D8E                     __ptext37:
  8769                           	opt stack 0
  8770  002D8E                     _USBCtrlEPServiceComplete:
  8771                           	opt stack 11
  8772                           
  8773                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  8774                           
  8775                           ;incstack = 0
  8776  002D8E  9865               	bcf	3941,4,c	;volatile
  8777                           
  8778                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  8779  002D90  0100               	movlb	0	; () banked
  8780  002D92  BFAF               	btfsc	(_inPipes+3)& (0+255),7,b
  8781  002D94  D03C               	goto	l1667
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;usb_device.c: 1647: {
  8785                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  8786  002D96  0101               	movlb	1	; () banked
  8787  002D98  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  8788  002D9A  D00D               	goto	l1668
  8789                           
  8790                           ; BSR set to: 1
  8791                           ;usb_device.c: 1649: {
  8792                           ;usb_device.c: 1650: controlTransferState = 2;
  8793  002D9C  0E02               	movlw	2
  8794  002D9E  0100               	movlb	0	; () banked
  8795  002DA0  6FC9               	movwf	_controlTransferState& (0+255),b
  8796                           
  8797                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  8798  002DA2  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  8799  002DA4  B4D8               	btfsc	status,2,c
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;usb_device.c: 1662: {
  8803                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  8804  002DA6  ECC6  F021         	call	_USBCtrlEPAllowDataStage	;wreg free
  8805                           
  8806                           ;usb_device.c: 1664: }
  8807                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  8808  002DAA  0E00               	movlw	0
  8809  002DAC  0100               	movlb	0	; () banked
  8810  002DAE  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8811                           
  8812                           ; BSR set to: 0
  8813                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  8814  002DB0  0E00               	movlw	0
  8815  002DB2  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8816                           
  8817                           ;usb_device.c: 1670: }
  8818  002DB4  0012               	return	
  8819  002DB6                     l1668:
  8820                           
  8821                           ;usb_device.c: 1671: else
  8822                           ;usb_device.c: 1672: {
  8823                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  8824                           
  8825                           ; BSR set to: 0
  8826  002DB6  0100               	movlb	0	; () banked
  8827  002DB8  EE20 F001          	lfsr	2,1
  8828  002DBC  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8829  002DBE  26D9               	addwf	fsr2l,f,c
  8830  002DC0  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8831  002DC2  22DA               	addwfc	fsr2h,f,c
  8832  002DC4  0E08               	movlw	8
  8833  002DC6  6EDF               	movwf	indf2,c
  8834                           
  8835                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8836  002DC8  EE20 F002          	lfsr	2,2
  8837  002DCC  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8838  002DCE  26D9               	addwf	fsr2l,f,c
  8839  002DD0  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8840  002DD2  22DA               	addwfc	fsr2h,f,c
  8841  002DD4  0E30               	movlw	48
  8842  002DD6  6EDE               	movwf	postinc2,c
  8843  002DD8  0E04               	movlw	4
  8844  002DDA  6EDD               	movwf	postdec2,c
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8848  002DDC  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8849  002DE0  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8850  002DE4  0E0C               	movlw	12
  8851  002DE6  6EDF               	movwf	indf2,c
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8855  002DE8  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8856  002DEC  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8857  002DF0  0E00               	movlw	0
  8858  002DF2  8EDB               	bsf	plusw2,7,c
  8859                           
  8860                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  8861  002DF4  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8862  002DF8  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8863  002DFC  0E04               	movlw	4
  8864  002DFE  6EDF               	movwf	indf2,c
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8868  002E00  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8869  002E04  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8870  002E08  0E00               	movlw	0
  8871  002E0A  8EDB               	bsf	plusw2,7,c
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;usb_device.c: 1683: }
  8875                           ;usb_device.c: 1684: }
  8876  002E0C  0012               	return	
  8877  002E0E                     l1667:
  8878                           
  8879                           ; BSR set to: 0
  8880                           ;usb_device.c: 1685: else
  8881                           ;usb_device.c: 1686: {
  8882                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  8883  002E0E  0104               	movlb	4	; () banked
  8884  002E10  AF30               	btfss	48,7,b	;volatile
  8885  002E12  D012               	goto	l1672
  8886                           
  8887                           ; BSR set to: 4
  8888                           ;usb_device.c: 1688: {
  8889                           ;usb_device.c: 1689: controlTransferState = 1;
  8890  002E14  0E01               	movlw	1
  8891  002E16  0100               	movlb	0	; () banked
  8892  002E18  6FC9               	movwf	_controlTransferState& (0+255),b
  8893                           
  8894                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  8895  002E1A  51C3               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
  8896  002E1C  B4D8               	btfsc	status,2,c
  8897                           
  8898                           ; BSR set to: 0
  8899                           ;usb_device.c: 1704: {
  8900                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  8901  002E1E  ECC6  F021         	call	_USBCtrlEPAllowDataStage	;wreg free
  8902                           
  8903                           ;usb_device.c: 1706: }
  8904                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  8905  002E22  0E00               	movlw	0
  8906  002E24  0100               	movlb	0	; () banked
  8907  002E26  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8908                           
  8909                           ; BSR set to: 0
  8910                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  8911  002E28  0E00               	movlw	0
  8912  002E2A  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  8916  002E2C  51C6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  8917  002E2E  A4D8               	btfss	status,2,c
  8918  002E30  0012               	return	
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;usb_device.c: 1731: {
  8922                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  8923  002E32  ECA3  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8924                           
  8925                           ;usb_device.c: 1733: }
  8926                           ;usb_device.c: 1734: }
  8927  002E36  0012               	return	
  8928  002E38                     l1672:
  8929                           
  8930                           ;usb_device.c: 1735: else
  8931                           ;usb_device.c: 1736: {
  8932                           ;usb_device.c: 1747: controlTransferState = 2;
  8933  002E38  0E02               	movlw	2
  8934  002E3A  0100               	movlb	0	; () banked
  8935  002E3C  6FC9               	movwf	_controlTransferState& (0+255),b
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  8939  002E3E  EE20 F001          	lfsr	2,1
  8940  002E42  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8941  002E44  26D9               	addwf	fsr2l,f,c
  8942  002E46  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8943  002E48  22DA               	addwfc	fsr2h,f,c
  8944  002E4A  0E08               	movlw	8
  8945  002E4C  6EDF               	movwf	indf2,c
  8946                           
  8947                           ; BSR set to: 0
  8948                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8949  002E4E  EE20 F002          	lfsr	2,2
  8950  002E52  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8951  002E54  26D9               	addwf	fsr2l,f,c
  8952  002E56  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8953  002E58  22DA               	addwfc	fsr2h,f,c
  8954  002E5A  0E30               	movlw	48
  8955  002E5C  6EDE               	movwf	postinc2,c
  8956  002E5E  0E04               	movlw	4
  8957  002E60  6EDD               	movwf	postdec2,c
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8961  002E62  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8962  002E66  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8963  002E6A  0E04               	movlw	4
  8964  002E6C  6EDF               	movwf	indf2,c
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8968  002E6E  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8969  002E72  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8970  002E76  0E00               	movlw	0
  8971  002E78  8EDB               	bsf	plusw2,7,c
  8972                           
  8973                           ; BSR set to: 0
  8974                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  8975  002E7A  0E00               	movlw	0
  8976  002E7C  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  8980  002E7E  0E00               	movlw	0
  8981  002E80  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8982                           
  8983                           ; BSR set to: 0
  8984                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  8985  002E82  51C6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  8986  002E84  A4D8               	btfss	status,2,c
  8987  002E86  0012               	return	
  8988                           
  8989                           ; BSR set to: 0
  8990                           ;usb_device.c: 1759: {
  8991                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  8992  002E88  ECA3  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8993  002E8C  0012               	return	
  8994  002E8E                     __end_of_USBCtrlEPServiceComplete:
  8995                           	opt stack 0
  8996                           tosu	equ	0xFFF
  8997                           tosh	equ	0xFFE
  8998                           tosl	equ	0xFFD
  8999                           pclath	equ	0xFFA
  9000                           tblptru	equ	0xFF8
  9001                           tblptrh	equ	0xFF7
  9002                           tblptrl	equ	0xFF6
  9003                           tablat	equ	0xFF5
  9004                           prodh	equ	0xFF4
  9005                           prodl	equ	0xFF3
  9006                           intcon	equ	0xFF2
  9007                           intcon2	equ	0xFF1
  9008                           intcon3	equ	0xFF0
  9009                           postinc0	equ	0xFEE
  9010                           plusw0	equ	0xFEB
  9011                           wreg	equ	0xFE8
  9012                           postinc1	equ	0xFE6
  9013                           postdec1	equ	0xFE5
  9014                           plusw1	equ	0xFE3
  9015                           fsr1h	equ	0xFE2
  9016                           fsr1l	equ	0xFE1
  9017                           indf2	equ	0xFDF
  9018                           postinc2	equ	0xFDE
  9019                           postdec2	equ	0xFDD
  9020                           plusw2	equ	0xFDB
  9021                           fsr2h	equ	0xFDA
  9022                           fsr2l	equ	0xFD9
  9023                           status	equ	0xFD8
  9024                           
  9025 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9026 ;; Defined at:
  9027 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;		None
  9030 ;; Auto vars:     Size  Location     Type
  9031 ;;		None
  9032 ;; Return value:  Size  Location     Type
  9033 ;;                  1    wreg      void 
  9034 ;; Registers used:
  9035 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9036 ;; Tracked objects:
  9037 ;;		On entry : 0/0
  9038 ;;		On exit  : 0/0
  9039 ;;		Unchanged: 0/0
  9040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9045 ;;Total ram usage:        0 bytes
  9046 ;; Hardware stack levels used:    1
  9047 ;; Hardware stack levels required when called:   12
  9048 ;; This function calls:
  9049 ;;		_USBCtrlTrfTxService
  9050 ;; This function is called by:
  9051 ;;		_USBCtrlEPServiceComplete
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           	psect	text38
  9056  00438C                     __ptext38:
  9057                           	opt stack 0
  9058  00438C                     _USBCtrlEPAllowDataStage:
  9059                           	opt stack 11
  9060                           
  9061                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9062                           
  9063                           ;incstack = 0
  9064  00438C  0E00               	movlw	0
  9065  00438E  0100               	movlb	0	; () banked
  9066  004390  6FC3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  9067                           
  9068                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9069  004392  0E00               	movlw	0
  9070  004394  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9071                           
  9072                           ; BSR set to: 0
  9073                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9074  004396  0E02               	movlw	2
  9075  004398  19C9               	xorwf	_controlTransferState& (0+255),w,b
  9076  00439A  A4D8               	btfss	status,2,c
  9077  00439C  D01F               	goto	l1656
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;usb_device.c: 1512: {
  9081                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9082  00439E  EE20 F001          	lfsr	2,1
  9083  0043A2  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9084  0043A4  26D9               	addwf	fsr2l,f,c
  9085  0043A6  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9086  0043A8  22DA               	addwfc	fsr2h,f,c
  9087  0043AA  0E08               	movlw	8
  9088  0043AC  6EDF               	movwf	indf2,c
  9089                           
  9090                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9091  0043AE  EE20 F002          	lfsr	2,2
  9092  0043B2  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9093  0043B4  26D9               	addwf	fsr2l,f,c
  9094  0043B6  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9095  0043B8  22DA               	addwfc	fsr2h,f,c
  9096  0043BA  0E38               	movlw	56
  9097  0043BC  6EDE               	movwf	postinc2,c
  9098  0043BE  0E04               	movlw	4
  9099  0043C0  6EDD               	movwf	postdec2,c
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9103  0043C2  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9104  0043C6  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9105  0043CA  0E48               	movlw	72
  9106  0043CC  6EDF               	movwf	indf2,c
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9110  0043CE  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9111  0043D2  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9112  0043D6  0E00               	movlw	0
  9113  0043D8  8EDB               	bsf	plusw2,7,c
  9114                           
  9115                           ;usb_device.c: 1518: }
  9116  0043DA  0012               	return	
  9117  0043DC                     l1656:
  9118                           
  9119                           ; BSR set to: 0
  9120                           ;usb_device.c: 1519: else
  9121                           ;usb_device.c: 1520: {
  9122                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9123                           
  9124                           ; BSR set to: 0
  9125  0043DC  51B0               	movf	(_inPipes+4)& (0+255),w,b
  9126  0043DE  0104               	movlb	4	; () banked
  9127  0043E0  5D36               	subwf	54,w,b	;volatile
  9128  0043E2  0100               	movlb	0	; () banked
  9129  0043E4  51B1               	movf	(_inPipes+5)& (0+255),w,b
  9130  0043E6  0104               	movlb	4	; () banked
  9131  0043E8  5937               	subwfb	55,w,b	;volatile
  9132  0043EA  B0D8               	btfsc	status,0,c
  9133  0043EC  D004               	goto	l1658
  9134                           
  9135                           ; BSR set to: 4
  9136                           ;usb_device.c: 1524: {
  9137                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9138  0043EE  C436 F0B0          	movff	1078,_inPipes+4	;volatile
  9139  0043F2  C437 F0B1          	movff	1079,_inPipes+5	;volatile
  9140  0043F6                     l1658:
  9141                           
  9142                           ; BSR set to: 4
  9143                           ;usb_device.c: 1526: }
  9144                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9145                           
  9146                           ; BSR set to: 4
  9147  0043F6  ECFE  F019         	call	_USBCtrlTrfTxService	;wreg free
  9148                           
  9149                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9150  0043FA  0100               	movlb	0	; () banked
  9151  0043FC  EE20 F002          	lfsr	2,2
  9152  004400  51B2               	movf	_pBDTEntryIn& (0+255),w,b
  9153  004402  26D9               	addwf	fsr2l,f,c
  9154  004404  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9155  004406  22DA               	addwfc	fsr2h,f,c
  9156  004408  0E38               	movlw	56
  9157  00440A  6EDE               	movwf	postinc2,c
  9158  00440C  0E04               	movlw	4
  9159  00440E  6EDD               	movwf	postdec2,c
  9160                           
  9161                           ; BSR set to: 0
  9162                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9163  004410  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  9164  004414  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9165  004418  0E48               	movlw	72
  9166  00441A  6EDF               	movwf	indf2,c
  9167                           
  9168                           ; BSR set to: 0
  9169                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9170  00441C  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  9171  004420  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9172  004424  0E00               	movlw	0
  9173  004426  8EDB               	bsf	plusw2,7,c
  9174  004428  0012               	return	
  9175  00442A                     __end_of_USBCtrlEPAllowDataStage:
  9176                           	opt stack 0
  9177                           tosu	equ	0xFFF
  9178                           tosh	equ	0xFFE
  9179                           tosl	equ	0xFFD
  9180                           pclath	equ	0xFFA
  9181                           tblptru	equ	0xFF8
  9182                           tblptrh	equ	0xFF7
  9183                           tblptrl	equ	0xFF6
  9184                           tablat	equ	0xFF5
  9185                           prodh	equ	0xFF4
  9186                           prodl	equ	0xFF3
  9187                           intcon	equ	0xFF2
  9188                           intcon2	equ	0xFF1
  9189                           intcon3	equ	0xFF0
  9190                           postinc0	equ	0xFEE
  9191                           plusw0	equ	0xFEB
  9192                           wreg	equ	0xFE8
  9193                           postinc1	equ	0xFE6
  9194                           postdec1	equ	0xFE5
  9195                           plusw1	equ	0xFE3
  9196                           fsr1h	equ	0xFE2
  9197                           fsr1l	equ	0xFE1
  9198                           indf2	equ	0xFDF
  9199                           postinc2	equ	0xFDE
  9200                           postdec2	equ	0xFDD
  9201                           plusw2	equ	0xFDB
  9202                           fsr2h	equ	0xFDA
  9203                           fsr2l	equ	0xFD9
  9204                           status	equ	0xFD8
  9205                           
  9206 ;; *************** function _USBCheckStdRequest *****************
  9207 ;; Defined at:
  9208 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;		None
  9211 ;; Auto vars:     Size  Location     Type
  9212 ;;		None
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  1    wreg      void 
  9215 ;; Registers used:
  9216 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/0
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9226 ;;Total ram usage:        0 bytes
  9227 ;; Hardware stack levels used:    1
  9228 ;; Hardware stack levels required when called:   16
  9229 ;; This function calls:
  9230 ;;		_USBStdFeatureReqHandler
  9231 ;;		_USBStdGetDscHandler
  9232 ;;		_USBStdGetStatusHandler
  9233 ;;		_USBStdSetCfgHandler
  9234 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9235 ;; This function is called by:
  9236 ;;		_USBCtrlTrfSetupHandler
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text39
  9241  003318                     __ptext39:
  9242                           	opt stack 0
  9243  003318                     _USBCheckStdRequest:
  9244                           	opt stack 8
  9245                           
  9246                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;incstack = 0
  9250  003318  0104               	movlb	4	; () banked
  9251  00331A  3930               	swapf	48,w,b	;volatile
  9252  00331C  32E8               	rrcf	wreg,f,c
  9253  00331E  0B03               	andlw	3
  9254  003320  0900               	iorlw	0
  9255  003322  A4D8               	btfss	status,2,c
  9256  003324  0012               	return	
  9257  003326  D048               	goto	l1791
  9258  003328                     l1792:
  9259                           
  9260                           ; BSR set to: 4
  9261                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9262  003328  0100               	movlb	0	; () banked
  9263  00332A  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9267  00332C  0E08               	movlw	8
  9268  00332E  6FCB               	movwf	_USBDeviceState& (0+255),b
  9269                           
  9270                           ;usb_device.c: 2713: break;
  9271  003330  0012               	return	
  9272  003332                     
  9273                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9274                           
  9275                           ; BSR set to: 0
  9276  003332  EC80  F014         	call	_USBStdGetDscHandler	;wreg free
  9277                           
  9278                           ;usb_device.c: 2716: break;
  9279  003336  0012               	return	
  9280  003338                     
  9281                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9282  003338  ECA6  F018         	call	_USBStdSetCfgHandler	;wreg free
  9283                           
  9284                           ;usb_device.c: 2719: break;
  9285  00333C  0012               	return	
  9286  00333E                     
  9287                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9288  00333E  0ED4               	movlw	low _USBActiveConfiguration
  9289  003340  0100               	movlb	0	; () banked
  9290  003342  6FAC               	movwf	_inPipes& (0+255),b
  9291  003344  0E00               	movlw	high _USBActiveConfiguration
  9292  003346  6FAD               	movwf	(_inPipes+1)& (0+255),b
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9296  003348  81AF               	bsf	(_inPipes+3)& (0+255),0,b
  9297                           
  9298                           ; BSR set to: 0
  9299                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9300  00334A  0E01               	movlw	1
  9301  00334C  6FB0               	movwf	(_inPipes+4)& (0+255),b
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9305  00334E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9306                           
  9307                           ;usb_device.c: 2725: break;
  9308  003350  0012               	return	
  9309  003352                     
  9310                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9311                           
  9312                           ; BSR set to: 0
  9313  003352  EC21  F01F         	call	_USBStdGetStatusHandler	;wreg free
  9314                           
  9315                           ;usb_device.c: 2728: break;
  9316  003356  0012               	return	
  9317  003358                     
  9318                           ;usb_device.c: 2730: case 3:
  9319                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9320  003358  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9321                           
  9322                           ;usb_device.c: 2732: break;
  9323  00335C  0012               	return	
  9324  00335E                     
  9325                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9326  00335E  0104               	movlb	4	; () banked
  9327  003360  5134               	movf	52,w,b	;volatile
  9328  003362  0D01               	mullw	1
  9329  003364  0EF1               	movlw	low _USBAlternateInterface
  9330  003366  24F3               	addwf	prodl,w,c
  9331  003368  0100               	movlb	0	; () banked
  9332  00336A  6FAC               	movwf	_inPipes& (0+255),b
  9333  00336C  0E02               	movlw	high _USBAlternateInterface
  9334  00336E  20F4               	addwfc	prodh,w,c
  9335  003370  6FAD               	movwf	(_inPipes+1)& (0+255),b
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9339  003372  81AF               	bsf	(_inPipes+3)& (0+255),0,b
  9340                           
  9341                           ; BSR set to: 0
  9342                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9343  003374  0E01               	movlw	1
  9344  003376  6FB0               	movwf	(_inPipes+4)& (0+255),b
  9345                           
  9346                           ; BSR set to: 0
  9347                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9348  003378  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9349                           
  9350                           ;usb_device.c: 2738: break;
  9351  00337A  0012               	return	
  9352  00337C                     l1801:
  9353                           
  9354                           ; BSR set to: 4
  9355                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9356  00337C  0100               	movlb	0	; () banked
  9357  00337E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9358                           
  9359                           ; BSR set to: 0
  9360                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9361  003380  0104               	movlb	4	; () banked
  9362  003382  5134               	movf	52,w,b	;volatile
  9363  003384  0D01               	mullw	1
  9364  003386  0EF1               	movlw	low _USBAlternateInterface
  9365  003388  24F3               	addwf	prodl,w,c
  9366  00338A  6ED9               	movwf	fsr2l,c
  9367  00338C  0E02               	movlw	high _USBAlternateInterface
  9368  00338E  20F4               	addwfc	prodh,w,c
  9369  003390  6EDA               	movwf	fsr2h,c
  9370  003392  C432 FFDF          	movff	1074,indf2	;volatile
  9371                           
  9372                           ;usb_device.c: 2742: break;
  9373  003396  0012               	return	
  9374  003398                     
  9375                           ; BSR set to: 4
  9376                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9377                           
  9378                           ; BSR set to: 4
  9379  003398  0E00               	movlw	0
  9380  00339A  0100               	movlb	0	; () banked
  9381  00339C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9382  00339E  0E02               	movlw	2
  9383  0033A0  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9384  0033A2  0E00               	movlw	0
  9385  0033A4  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9386  0033A6  0E00               	movlw	0
  9387  0033A8  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9388  0033AA  0E00               	movlw	0
  9389  0033AC  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9390  0033AE  0E00               	movlw	0
  9391  0033B0  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9392  0033B2  EC17  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9393                           
  9394                           ;usb_device.c: 2749: }
  9395                           
  9396                           ;usb_device.c: 2748: break;
  9397                           
  9398                           ;usb_device.c: 2747: default:
  9399                           
  9400                           ;usb_device.c: 2746: case 12:
  9401                           
  9402                           ;usb_device.c: 2745: break;
  9403  0033B6  0012               	return	
  9404  0033B8                     l1791:
  9405  0033B8  0104               	movlb	4	; () banked
  9406  0033BA  5131               	movf	49,w,b	;volatile
  9407                           
  9408                           ; Switch size 1, requested type "space"
  9409                           ; Number of cases is 11, Range of values is 0 to 12
  9410                           ; switch strategies available:
  9411                           ; Name         Instructions Cycles
  9412                           ; simple_byte           34    18 (average)
  9413                           ;	Chosen strategy is simple_byte
  9414  0033BC  0A00               	xorlw	0	; case 0
  9415  0033BE  B4D8               	btfsc	status,2,c
  9416  0033C0  D7C8               	goto	l1797
  9417  0033C2  0A01               	xorlw	1	; case 1
  9418  0033C4  B4D8               	btfsc	status,2,c
  9419  0033C6  D7C8               	goto	l1798
  9420  0033C8  0A02               	xorlw	2	; case 3
  9421  0033CA  B4D8               	btfsc	status,2,c
  9422  0033CC  D7C5               	goto	l1798
  9423  0033CE  0A06               	xorlw	6	; case 5
  9424  0033D0  B4D8               	btfsc	status,2,c
  9425  0033D2  D7AA               	goto	l1792
  9426  0033D4  0A03               	xorlw	3	; case 6
  9427  0033D6  B4D8               	btfsc	status,2,c
  9428  0033D8  D7AC               	goto	l1794
  9429  0033DA  0A01               	xorlw	1	; case 7
  9430  0033DC  B4D8               	btfsc	status,2,c
  9431  0033DE  D7DC               	goto	l1802
  9432  0033E0  0A0F               	xorlw	15	; case 8
  9433  0033E2  B4D8               	btfsc	status,2,c
  9434  0033E4  D7AC               	goto	l1796
  9435  0033E6  0A01               	xorlw	1	; case 9
  9436  0033E8  B4D8               	btfsc	status,2,c
  9437  0033EA  D7A6               	goto	l1795
  9438  0033EC  0A03               	xorlw	3	; case 10
  9439  0033EE  B4D8               	btfsc	status,2,c
  9440  0033F0  D7B6               	goto	l1800
  9441  0033F2  0A01               	xorlw	1	; case 11
  9442  0033F4  B4D8               	btfsc	status,2,c
  9443  0033F6  D7C2               	goto	l1801
  9444  0033F8  0A07               	xorlw	7	; case 12
  9445  0033FA  0012               	return	
  9446  0033FC                     __end_of_USBCheckStdRequest:
  9447                           	opt stack 0
  9448                           tosu	equ	0xFFF
  9449                           tosh	equ	0xFFE
  9450                           tosl	equ	0xFFD
  9451                           pclath	equ	0xFFA
  9452                           tblptru	equ	0xFF8
  9453                           tblptrh	equ	0xFF7
  9454                           tblptrl	equ	0xFF6
  9455                           tablat	equ	0xFF5
  9456                           prodh	equ	0xFF4
  9457                           prodl	equ	0xFF3
  9458                           intcon	equ	0xFF2
  9459                           intcon2	equ	0xFF1
  9460                           intcon3	equ	0xFF0
  9461                           postinc0	equ	0xFEE
  9462                           plusw0	equ	0xFEB
  9463                           wreg	equ	0xFE8
  9464                           postinc1	equ	0xFE6
  9465                           postdec1	equ	0xFE5
  9466                           plusw1	equ	0xFE3
  9467                           fsr1h	equ	0xFE2
  9468                           fsr1l	equ	0xFE1
  9469                           indf2	equ	0xFDF
  9470                           postinc2	equ	0xFDE
  9471                           postdec2	equ	0xFDD
  9472                           plusw2	equ	0xFDB
  9473                           fsr2h	equ	0xFDA
  9474                           fsr2l	equ	0xFD9
  9475                           status	equ	0xFD8
  9476                           
  9477 ;; *************** function _USBStdSetCfgHandler *****************
  9478 ;; Defined at:
  9479 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9480 ;; Parameters:    Size  Location     Type
  9481 ;;		None
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;  i               1   49[BANK0 ] unsigned char 
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  1    wreg      void 
  9486 ;; Registers used:
  9487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9494 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9496 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9497 ;;Total ram usage:        1 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; Hardware stack levels required when called:   15
  9500 ;; This function calls:
  9501 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9502 ;;		_memset
  9503 ;; This function is called by:
  9504 ;;		_USBCheckStdRequest
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           	psect	text40
  9509  00314C                     __ptext40:
  9510                           	opt stack 0
  9511  00314C                     _USBStdSetCfgHandler:
  9512                           	opt stack 8
  9513                           
  9514                           ;usb_device.c: 1988: uint8_t i;
  9515                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9516                           
  9517                           ;incstack = 0
  9518  00314C  0100               	movlb	0	; () banked
  9519  00314E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9520                           
  9521                           ; BSR set to: 0
  9522                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9523  003150  0E27               	movlw	39
  9524  003152  6F7D               	movwf	memset@p1& (0+255),b
  9525  003154  0E0F               	movlw	15
  9526  003156  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9527  003158  0E00               	movlw	0
  9528  00315A  6F80               	movwf	(memset@c+1)& (0+255),b
  9529  00315C  0E00               	movlw	0
  9530  00315E  6F7F               	movwf	memset@c& (0+255),b
  9531  003160  0E00               	movlw	0
  9532  003162  6F82               	movwf	(memset@n+1)& (0+255),b
  9533  003164  0E02               	movlw	2
  9534  003166  6F81               	movwf	memset@n& (0+255),b
  9535  003168  ECD5  F02C         	call	_memset	;wreg free
  9536                           
  9537                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9538  00316C  0E00               	movlw	0
  9539  00316E  0100               	movlb	0	; () banked
  9540  003170  6F7D               	movwf	memset@p1& (0+255),b
  9541  003172  0E04               	movlw	4
  9542  003174  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9543  003176  0E00               	movlw	0
  9544  003178  6F80               	movwf	(memset@c+1)& (0+255),b
  9545  00317A  0E00               	movlw	0
  9546  00317C  6F7F               	movwf	memset@c& (0+255),b
  9547  00317E  0E00               	movlw	0
  9548  003180  6F82               	movwf	(memset@n+1)& (0+255),b
  9549  003182  0E30               	movlw	48
  9550  003184  6F81               	movwf	memset@n& (0+255),b
  9551  003186  ECD5  F02C         	call	_memset	;wreg free
  9552                           
  9553                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9554  00318A  8C65               	bsf	3941,6,c	;volatile
  9555                           
  9556                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9557  00318C  0E00               	movlw	0
  9558  00318E  0100               	movlb	0	; () banked
  9559  003190  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
  9560  003192                     l11504:
  9561                           
  9562                           ; BSR set to: 0
  9563  003192  0E02               	movlw	2
  9564  003194  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  9565  003196  D001               	goto	l1708
  9566  003198  D016               	goto	u10060
  9567  00319A                     l1708:
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;usb_device.c: 2006: {
  9571                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  9572                           
  9573                           ; BSR set to: 0
  9574  00319A  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9575  00319C  0D01               	mullw	1
  9576  00319E  0ED1               	movlw	low _ep_data_in
  9577  0031A0  24F3               	addwf	prodl,w,c
  9578  0031A2  6ED9               	movwf	fsr2l,c
  9579  0031A4  0E02               	movlw	high _ep_data_in
  9580  0031A6  20F4               	addwfc	prodh,w,c
  9581  0031A8  6EDA               	movwf	fsr2h,c
  9582  0031AA  0E00               	movlw	0
  9583  0031AC  6EDF               	movwf	indf2,c
  9584                           
  9585                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  9586  0031AE  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9587  0031B0  0D01               	mullw	1
  9588  0031B2  0ECE               	movlw	low _ep_data_out
  9589  0031B4  24F3               	addwf	prodl,w,c
  9590  0031B6  6ED9               	movwf	fsr2l,c
  9591  0031B8  0E02               	movlw	high _ep_data_out
  9592  0031BA  20F4               	addwfc	prodh,w,c
  9593  0031BC  6EDA               	movwf	fsr2h,c
  9594  0031BE  0E00               	movlw	0
  9595  0031C0  6EDF               	movwf	indf2,c
  9596                           
  9597                           ; BSR set to: 0
  9598  0031C2  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  9599  0031C4  D7E6               	goto	l11504
  9600  0031C6                     u10060:
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;usb_device.c: 2009: }
  9604                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  9605                           
  9606                           ; BSR set to: 0
  9607  0031C6  0EF1               	movlw	low _USBAlternateInterface
  9608  0031C8  6F7D               	movwf	memset@p1& (0+255),b
  9609  0031CA  0E02               	movlw	high _USBAlternateInterface
  9610  0031CC  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9611  0031CE  0E00               	movlw	0
  9612  0031D0  6F80               	movwf	(memset@c+1)& (0+255),b
  9613  0031D2  0E00               	movlw	0
  9614  0031D4  6F7F               	movwf	memset@c& (0+255),b
  9615  0031D6  0E00               	movlw	0
  9616  0031D8  6F82               	movwf	(memset@n+1)& (0+255),b
  9617  0031DA  0E02               	movlw	2
  9618  0031DC  6F81               	movwf	memset@n& (0+255),b
  9619  0031DE  ECD5  F02C         	call	_memset	;wreg free
  9620                           
  9621                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  9622  0031E2  9C65               	bcf	3941,6,c	;volatile
  9623                           
  9624                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9625  0031E4  0E08               	movlw	8
  9626  0031E6  0100               	movlb	0	; () banked
  9627  0031E8  6FB2               	movwf	_pBDTEntryIn& (0+255),b
  9628  0031EA  0E04               	movlw	4
  9629  0031EC  6FB3               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9633  0031EE  0E00               	movlw	0
  9634  0031F0  6FBC               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9635  0031F2  0E04               	movlw	4
  9636  0031F4  6FBD               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9637                           
  9638                           ; BSR set to: 0
  9639                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9640  0031F6  C0BC  F0BA         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9641  0031FA  C0BD  F0BB         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9645  0031FE  C432 F0D4          	movff	1074,_USBActiveConfiguration	;volatile
  9646                           
  9647                           ; BSR set to: 0
  9648                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  9649  003202  51D4               	movf	_USBActiveConfiguration& (0+255),w,b
  9650  003204  A4D8               	btfss	status,2,c
  9651  003206  D003               	goto	l1710
  9652                           
  9653                           ; BSR set to: 0
  9654                           ;usb_device.c: 2028: {
  9655                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  9656  003208  0E10               	movlw	16
  9657  00320A  6FCB               	movwf	_USBDeviceState& (0+255),b
  9658                           
  9659                           ;usb_device.c: 2031: }
  9660  00320C  0012               	return	
  9661  00320E                     l1710:
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;usb_device.c: 2032: else
  9665                           ;usb_device.c: 2033: {
  9666                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9667                           
  9668                           ; BSR set to: 0
  9669  00320E  0E00               	movlw	0
  9670  003210  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9671  003212  0E01               	movlw	1
  9672  003214  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9673  003216  0ED4               	movlw	low _USBActiveConfiguration
  9674  003218  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9675  00321A  0E00               	movlw	high _USBActiveConfiguration
  9676  00321C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9677  00321E  0E00               	movlw	0
  9678  003220  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9679  003222  0E01               	movlw	1
  9680  003224  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9681  003226  EC17  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9682                           
  9683                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  9684  00322A  0E20               	movlw	32
  9685  00322C  0100               	movlb	0	; () banked
  9686  00322E  6FCB               	movwf	_USBDeviceState& (0+255),b
  9687  003230  0012               	return	
  9688  003232                     __end_of_USBStdSetCfgHandler:
  9689                           	opt stack 0
  9690                           tosu	equ	0xFFF
  9691                           tosh	equ	0xFFE
  9692                           tosl	equ	0xFFD
  9693                           pclath	equ	0xFFA
  9694                           tblptru	equ	0xFF8
  9695                           tblptrh	equ	0xFF7
  9696                           tblptrl	equ	0xFF6
  9697                           tablat	equ	0xFF5
  9698                           prodh	equ	0xFF4
  9699                           prodl	equ	0xFF3
  9700                           intcon	equ	0xFF2
  9701                           intcon2	equ	0xFF1
  9702                           intcon3	equ	0xFF0
  9703                           postinc0	equ	0xFEE
  9704                           plusw0	equ	0xFEB
  9705                           wreg	equ	0xFE8
  9706                           postinc1	equ	0xFE6
  9707                           postdec1	equ	0xFE5
  9708                           plusw1	equ	0xFE3
  9709                           fsr1h	equ	0xFE2
  9710                           fsr1l	equ	0xFE1
  9711                           indf2	equ	0xFDF
  9712                           postinc2	equ	0xFDE
  9713                           postdec2	equ	0xFDD
  9714                           plusw2	equ	0xFDB
  9715                           fsr2h	equ	0xFDA
  9716                           fsr2l	equ	0xFD9
  9717                           status	equ	0xFD8
  9718                           
  9719 ;; *************** function _USBStdGetStatusHandler *****************
  9720 ;; Defined at:
  9721 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;		None
  9724 ;; Auto vars:     Size  Location     Type
  9725 ;;  p               2   30[BANK0 ] PTR struct __BDT
  9726 ;;		 -> NULL(0), BDT(48), 
  9727 ;; Return value:  Size  Location     Type
  9728 ;;                  1    wreg      void 
  9729 ;; Registers used:
  9730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9731 ;; Tracked objects:
  9732 ;;		On entry : 0/0
  9733 ;;		On exit  : 0/0
  9734 ;;		Unchanged: 0/0
  9735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9737 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9738 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9739 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9740 ;;Total ram usage:        3 bytes
  9741 ;; Hardware stack levels used:    1
  9742 ;; Hardware stack levels required when called:   11
  9743 ;; This function calls:
  9744 ;;		Nothing
  9745 ;; This function is called by:
  9746 ;;		_USBCheckStdRequest
  9747 ;; This function uses a non-reentrant model
  9748 ;;
  9749                           
  9750                           	psect	text41
  9751  003E42                     __ptext41:
  9752                           	opt stack 0
  9753  003E42                     _USBStdGetStatusHandler:
  9754                           	opt stack 12
  9755                           
  9756                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
  9757                           
  9758                           ; BSR set to: 0
  9759                           ;incstack = 0
  9760  003E42  0E00               	movlw	0
  9761  003E44  0104               	movlb	4	; () banked
  9762  003E46  6F38               	movwf	56,b	;volatile
  9763                           
  9764                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
  9765  003E48  0E00               	movlw	0
  9766  003E4A  6F39               	movwf	57,b	;volatile
  9767                           
  9768                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
  9769  003E4C  D03D               	goto	l1729
  9770  003E4E                     l1730:
  9771                           
  9772                           ; BSR set to: 4
  9773                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
  9774  003E4E  0100               	movlb	0	; () banked
  9775  003E50  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9776                           
  9777                           ;usb_device.c: 2163: }
  9778                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
  9779                           
  9780                           ; BSR set to: 4
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;usb_device.c: 2161: {
  9784                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
  9785                           
  9786                           ;usb_device.c: 2160: if(0 == 1)
  9787  003E52  0101               	movlb	1	; () banked
  9788  003E54  05E8               	decf	_RemoteWakeup& (0+255),w,b
  9789  003E56  A4D8               	btfss	status,2,c
  9790  003E58  D042               	goto	l1733
  9791                           
  9792                           ; BSR set to: 1
  9793                           ;usb_device.c: 2166: {
  9794                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
  9795  003E5A  0104               	movlb	4	; () banked
  9796  003E5C  8338               	bsf	56,1,b	;volatile
  9797                           
  9798                           ; BSR set to: 4
  9799                           ;usb_device.c: 2168: }
  9800                           ;usb_device.c: 2169: break;
  9801  003E5E  D03F               	goto	l1733
  9802  003E60                     l1734:
  9803                           
  9804                           ; BSR set to: 4
  9805                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
  9806  003E60  0100               	movlb	0	; () banked
  9807  003E62  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9808                           
  9809                           ;usb_device.c: 2172: break;
  9810  003E64  D03C               	goto	l1733
  9811  003E66                     l1735:
  9812                           
  9813                           ; BSR set to: 4
  9814                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
  9815  003E66  0100               	movlb	0	; () banked
  9816  003E68  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9817                           
  9818                           ;usb_device.c: 2178: {
  9819                           ;usb_device.c: 2179: BDT_ENTRY *p;
  9820                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
  9821  003E6A  0104               	movlb	4	; () banked
  9822  003E6C  BF34               	btfsc	52,7,b	;volatile
  9823  003E6E  D00B               	goto	l1736
  9824                           
  9825                           ; BSR set to: 4
  9826                           ;usb_device.c: 2182: {
  9827                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  9828  003E70  5134               	movf	52,w,b	;volatile
  9829  003E72  0B0F               	andlw	15
  9830  003E74  0100               	movlb	0	; () banked
  9831  003E76  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
  9832  003E78  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  9833  003E7A  0D02               	mullw	2
  9834  003E7C  0E0E               	movlw	low _pBDTEntryOut
  9835  003E7E  24F3               	addwf	prodl,w,c
  9836  003E80  6ED9               	movwf	fsr2l,c
  9837  003E82  0E03               	movlw	high _pBDTEntryOut
  9838  003E84  D00B               	goto	L4
  9839  003E86                     l1736:
  9840                           
  9841                           ;usb_device.c: 2185: else
  9842                           ;usb_device.c: 2186: {
  9843                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  9844                           
  9845                           ; BSR set to: 0
  9846  003E86  0104               	movlb	4	; () banked
  9847  003E88  5134               	movf	52,w,b	;volatile
  9848  003E8A  0B0F               	andlw	15
  9849  003E8C  0100               	movlb	0	; () banked
  9850  003E8E  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
  9851  003E90  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  9852  003E92  0D02               	mullw	2
  9853  003E94  0EB2               	movlw	low _pBDTEntryIn
  9854  003E96  24F3               	addwf	prodl,w,c
  9855  003E98  6ED9               	movwf	fsr2l,c
  9856  003E9A  0E00               	movlw	high _pBDTEntryIn
  9857  003E9C                     L4:
  9858  003E9C  20F4               	addwfc	prodh,w,c
  9859  003E9E  6EDA               	movwf	fsr2h,c
  9860  003EA0  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
  9861  003EA4  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
  9862                           
  9863                           ; BSR set to: 0
  9864                           ;usb_device.c: 2188: }
  9865                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  9866                           
  9867                           ; BSR set to: 0
  9868  003EA8  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  9869  003EAC  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  9870  003EB0  AEDF               	btfss	indf2,7,c
  9871  003EB2  D015               	goto	l1733
  9872                           
  9873                           ; BSR set to: 0
  9874  003EB4  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  9875  003EB8  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  9876  003EBC  A4DF               	btfss	indf2,2,c
  9877  003EBE  D00F               	goto	l1733
  9878                           
  9879                           ; BSR set to: 0
  9880                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
  9881  003EC0  0E01               	movlw	1
  9882  003EC2  0104               	movlb	4	; () banked
  9883  003EC4  6F38               	movwf	56,b	;volatile
  9884                           
  9885                           ; BSR set to: 4
  9886                           ;usb_device.c: 2193: }
  9887                           ;usb_device.c: 2194: }
  9888                           
  9889                           ; BSR set to: 4
  9890                           ;usb_device.c: 2192: break;
  9891  003EC6  D00B               	goto	l1733
  9892  003EC8                     l1729:
  9893                           
  9894                           ; BSR set to: 4
  9895                           
  9896                           ; BSR set to: 4
  9897  003EC8  5130               	movf	48,w,b	;volatile
  9898  003ECA  0B1F               	andlw	31
  9899                           
  9900                           ; Switch size 1, requested type "space"
  9901                           ; Number of cases is 3, Range of values is 0 to 2
  9902                           ; switch strategies available:
  9903                           ; Name         Instructions Cycles
  9904                           ; simple_byte           10     6 (average)
  9905                           ;	Chosen strategy is simple_byte
  9906  003ECC  0A00               	xorlw	0	; case 0
  9907  003ECE  B4D8               	btfsc	status,2,c
  9908  003ED0  D7BE               	goto	l1730
  9909  003ED2  0A01               	xorlw	1	; case 1
  9910  003ED4  B4D8               	btfsc	status,2,c
  9911  003ED6  D7C4               	goto	l1734
  9912  003ED8  0A03               	xorlw	3	; case 2
  9913  003EDA  B4D8               	btfsc	status,2,c
  9914  003EDC  D7C4               	goto	l1735
  9915  003EDE                     l1733:
  9916                           
  9917                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
  9918  003EDE  0100               	movlb	0	; () banked
  9919  003EE0  AFAF               	btfss	(_inPipes+3)& (0+255),7,b
  9920  003EE2  0012               	return	
  9921                           
  9922                           ; BSR set to: 0
  9923                           ;usb_device.c: 2197: {
  9924                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  9925  003EE4  0E38               	movlw	56
  9926  003EE6  6FAC               	movwf	_inPipes& (0+255),b
  9927  003EE8  0E04               	movlw	4
  9928  003EEA  6FAD               	movwf	(_inPipes+1)& (0+255),b
  9929                           
  9930                           ; BSR set to: 0
  9931                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9932  003EEC  81AF               	bsf	(_inPipes+3)& (0+255),0,b
  9933                           
  9934                           ; BSR set to: 0
  9935                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
  9936  003EEE  0E02               	movlw	2
  9937  003EF0  6FB0               	movwf	(_inPipes+4)& (0+255),b
  9938  003EF2  0012               	return	
  9939  003EF4                     __end_of_USBStdGetStatusHandler:
  9940                           	opt stack 0
  9941                           tosu	equ	0xFFF
  9942                           tosh	equ	0xFFE
  9943                           tosl	equ	0xFFD
  9944                           pclath	equ	0xFFA
  9945                           tblptru	equ	0xFF8
  9946                           tblptrh	equ	0xFF7
  9947                           tblptrl	equ	0xFF6
  9948                           tablat	equ	0xFF5
  9949                           prodh	equ	0xFF4
  9950                           prodl	equ	0xFF3
  9951                           intcon	equ	0xFF2
  9952                           intcon2	equ	0xFF1
  9953                           intcon3	equ	0xFF0
  9954                           postinc0	equ	0xFEE
  9955                           plusw0	equ	0xFEB
  9956                           wreg	equ	0xFE8
  9957                           postinc1	equ	0xFE6
  9958                           postdec1	equ	0xFE5
  9959                           plusw1	equ	0xFE3
  9960                           fsr1h	equ	0xFE2
  9961                           fsr1l	equ	0xFE1
  9962                           indf2	equ	0xFDF
  9963                           postinc2	equ	0xFDE
  9964                           postdec2	equ	0xFDD
  9965                           plusw2	equ	0xFDB
  9966                           fsr2h	equ	0xFDA
  9967                           fsr2l	equ	0xFD9
  9968                           status	equ	0xFD8
  9969                           
  9970 ;; *************** function _USBStdGetDscHandler *****************
  9971 ;; Defined at:
  9972 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;		None
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;		None
  9977 ;; Return value:  Size  Location     Type
  9978 ;;                  1    wreg      void 
  9979 ;; Registers used:
  9980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9988 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9989 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9990 ;;Total ram usage:        2 bytes
  9991 ;; Hardware stack levels used:    1
  9992 ;; Hardware stack levels required when called:   11
  9993 ;; This function calls:
  9994 ;;		Nothing
  9995 ;; This function is called by:
  9996 ;;		_USBCheckStdRequest
  9997 ;; This function uses a non-reentrant model
  9998 ;;
  9999                           
 10000                           	psect	text42
 10001  002900                     __ptext42:
 10002                           	opt stack 0
 10003  002900                     _USBStdGetDscHandler:
 10004                           	opt stack 12
 10005                           
 10006                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10007                           
 10008                           ; BSR set to: 0
 10009                           ;incstack = 0
 10010  002900  0E80               	movlw	128
 10011  002902  0104               	movlb	4	; () banked
 10012  002904  1930               	xorwf	48,w,b	;volatile
 10013  002906  A4D8               	btfss	status,2,c
 10014  002908  0012               	return	
 10015                           
 10016                           ; BSR set to: 4
 10017                           ;usb_device.c: 2064: {
 10018                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10019  00290A  0EC0               	movlw	192
 10020  00290C  0100               	movlb	0	; () banked
 10021  00290E  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10022                           
 10023                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10024  002910  D082               	goto	l1716
 10025  002912                     
 10026                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10027                           
 10028                           ; BSR set to: 0
 10029  002912  0E76               	movlw	low _device_dsc
 10030  002914  0100               	movlb	0	; () banked
 10031  002916  6FAC               	movwf	_inPipes& (0+255),b
 10032  002918  0EFE               	movlw	high _device_dsc
 10033  00291A  6FAD               	movwf	(_inPipes+1)& (0+255),b
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10037  00291C  0E00               	movlw	0
 10038  00291E  6FB1               	movwf	(_inPipes+5)& (0+255),b
 10039  002920  0E12               	movlw	18
 10040  002922  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10041                           
 10042                           ;usb_device.c: 2076: break;
 10043  002924  0012               	return	
 10044  002926                     
 10045                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10046                           
 10047                           ; BSR set to: 0
 10048  002926  0104               	movlb	4	; () banked
 10049  002928  5132               	movf	50,w,b	;volatile
 10050  00292A  A4D8               	btfss	status,2,c
 10051  00292C  D040               	goto	l1720
 10052                           
 10053                           ; BSR set to: 4
 10054                           ;usb_device.c: 2082: {
 10055                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10056  00292E  5132               	movf	50,w,b	;volatile
 10057  002930  0D02               	mullw	2
 10058  002932  0E5B               	movlw	low _USB_CD_Ptr
 10059  002934  24F3               	addwf	prodl,w,c
 10060  002936  6EF6               	movwf	tblptrl,c
 10061  002938  0EFC               	movlw	high _USB_CD_Ptr
 10062  00293A  20F4               	addwfc	prodh,w,c
 10063  00293C  6EF7               	movwf	tblptrh,c
 10064  00293E                     	if	0	;There are less than 3 active tblptr bytes
 10065  00293E                     	endif
 10066  00293E  0009               	tblrd		*+
 10067  002940  CFF5 F0AC          	movff	tablat,_inPipes
 10068  002944  000A               	tblrd		*-
 10069  002946  CFF5 F0AD          	movff	tablat,_inPipes+1
 10070                           
 10071                           ; BSR set to: 4
 10072                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10073  00294A  0E02               	movlw	2
 10074  00294C  0100               	movlb	0	; () banked
 10075  00294E  25AC               	addwf	_inPipes& (0+255),w,b
 10076  002950  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10077  002952  0E00               	movlw	0
 10078  002954  21AD               	addwfc	(_inPipes+1)& (0+255),w,b
 10079  002956  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10080  002958  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10081  00295C  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10082  002960  6AF8               	clrf	tblptru,c
 10083  002962  0E0E               	movlw	(high __ramtop+-1)
 10084  002964  64F7               	cpfsgt	tblptrh,c
 10085  002966  D003               	bra	u5337
 10086  002968  0008               	tblrd		*
 10087  00296A  50F5               	movf	tablat,w,c
 10088  00296C  D005               	bra	u5330
 10089  00296E                     u5337:
 10090  00296E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10091  002972  CFF7 FFEA          	movff	tblptrh,fsr0h
 10092  002976  50EF               	movf	indf0,w,c
 10093  002978                     u5330:
 10094  002978  0100               	movlb	0	; () banked
 10095  00297A  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10099  00297C  0E03               	movlw	3
 10100  00297E  25AC               	addwf	_inPipes& (0+255),w,b
 10101  002980  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10102  002982  0E00               	movlw	0
 10103  002984  21AD               	addwfc	(_inPipes+1)& (0+255),w,b
 10104  002986  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10105  002988  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10106  00298C  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10107  002990  6AF8               	clrf	tblptru,c
 10108  002992  0E0E               	movlw	(high __ramtop+-1)
 10109  002994  64F7               	cpfsgt	tblptrh,c
 10110  002996  D003               	bra	u5347
 10111  002998  0008               	tblrd		*
 10112  00299A  50F5               	movf	tablat,w,c
 10113  00299C  D005               	bra	u5340
 10114  00299E                     u5347:
 10115  00299E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10116  0029A2  CFF7 FFEA          	movff	tblptrh,fsr0h
 10117  0029A6  50EF               	movf	indf0,w,c
 10118  0029A8                     u5340:
 10119  0029A8  0100               	movlb	0	; () banked
 10120  0029AA  6FB1               	movwf	(_inPipes+5)& (0+255),b
 10121                           
 10122                           ;usb_device.c: 2094: }
 10123  0029AC  0012               	return	
 10124  0029AE                     l1720:
 10125                           
 10126                           ;usb_device.c: 2095: else
 10127                           ;usb_device.c: 2096: {
 10128                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10129                           
 10130                           ; BSR set to: 0
 10131  0029AE  0E00               	movlw	0
 10132  0029B0  0100               	movlb	0	; () banked
 10133  0029B2  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10134                           
 10135                           ; BSR set to: 0
 10136                           ;usb_device.c: 2098: }
 10137                           ;usb_device.c: 2099: break;
 10138  0029B4  0012               	return	
 10139  0029B6                     
 10140                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10141                           
 10142                           ; BSR set to: 0
 10143  0029B6  0E03               	movlw	3
 10144  0029B8  0104               	movlb	4	; () banked
 10145  0029BA  6132               	cpfslt	50,b	;volatile
 10146  0029BC  D024               	goto	l1723
 10147                           
 10148                           ; BSR set to: 4
 10149                           ;usb_device.c: 2105: {
 10150                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10151  0029BE  5132               	movf	50,w,b	;volatile
 10152  0029C0  0D02               	mullw	2
 10153  0029C2  0E55               	movlw	low _USB_SD_Ptr
 10154  0029C4  24F3               	addwf	prodl,w,c
 10155  0029C6  6EF6               	movwf	tblptrl,c
 10156  0029C8  0EFC               	movlw	high _USB_SD_Ptr
 10157  0029CA  20F4               	addwfc	prodh,w,c
 10158  0029CC  6EF7               	movwf	tblptrh,c
 10159  0029CE                     	if	0	;There are less than 3 active tblptr bytes
 10160  0029CE                     	endif
 10161  0029CE  0009               	tblrd		*+
 10162  0029D0  CFF5 F0AC          	movff	tablat,_inPipes
 10163  0029D4  000A               	tblrd		*-
 10164  0029D6  CFF5 F0AD          	movff	tablat,_inPipes+1
 10165                           
 10166                           ; BSR set to: 4
 10167                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10168  0029DA  C0AC  FFF6         	movff	_inPipes,tblptrl
 10169  0029DE  C0AD  FFF7         	movff	_inPipes+1,tblptrh
 10170  0029E2  6AF8               	clrf	tblptru,c
 10171  0029E4  0E0E               	movlw	(high __ramtop+-1)
 10172  0029E6  64F7               	cpfsgt	tblptrh,c
 10173  0029E8  D003               	bra	u5367
 10174  0029EA  0008               	tblrd		*
 10175  0029EC  50F5               	movf	tablat,w,c
 10176  0029EE  D005               	bra	u5360
 10177  0029F0                     u5367:
 10178  0029F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 10179  0029F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 10180  0029F8  50EF               	movf	indf0,w,c
 10181  0029FA                     u5360:
 10182  0029FA  0100               	movlb	0	; () banked
 10183  0029FC  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10184  0029FE  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10185  002A00  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10186  002A02  6BB1               	clrf	(_inPipes+5)& (0+255),b
 10187                           
 10188                           ;usb_device.c: 2110: }
 10189  002A04  0012               	return	
 10190  002A06                     l1723:
 10191                           
 10192                           ;usb_device.c: 2120: else
 10193                           ;usb_device.c: 2121: {
 10194                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10195                           
 10196                           ; BSR set to: 0
 10197  002A06  0E00               	movlw	0
 10198  002A08  0100               	movlb	0	; () banked
 10199  002A0A  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10200                           
 10201                           ; BSR set to: 0
 10202                           ;usb_device.c: 2123: }
 10203                           ;usb_device.c: 2124: break;
 10204  002A0C  0012               	return	
 10205  002A0E                     
 10206                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10207                           
 10208                           ; BSR set to: 0
 10209  002A0E  0E00               	movlw	0
 10210  002A10  0100               	movlb	0	; () banked
 10211  002A12  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10212                           
 10213                           ; BSR set to: 0
 10214                           ;usb_device.c: 2128: }
 10215                           
 10216                           ;usb_device.c: 2127: break;
 10217  002A14  0012               	return	
 10218  002A16                     l1716:
 10219                           
 10220                           ; BSR set to: 0
 10221                           
 10222                           ; BSR set to: 0
 10223  002A16  0104               	movlb	4	; () banked
 10224  002A18  5133               	movf	51,w,b	;volatile
 10225                           
 10226                           ; Switch size 1, requested type "space"
 10227                           ; Number of cases is 3, Range of values is 1 to 3
 10228                           ; switch strategies available:
 10229                           ; Name         Instructions Cycles
 10230                           ; simple_byte           10     6 (average)
 10231                           ;	Chosen strategy is simple_byte
 10232  002A1A  0A01               	xorlw	1	; case 1
 10233  002A1C  B4D8               	btfsc	status,2,c
 10234  002A1E  D779               	goto	l1717
 10235  002A20  0A03               	xorlw	3	; case 2
 10236  002A22  B4D8               	btfsc	status,2,c
 10237  002A24  D780               	goto	l1719
 10238  002A26  0A01               	xorlw	1	; case 3
 10239  002A28  B4D8               	btfsc	status,2,c
 10240  002A2A  D7C5               	goto	l1722
 10241  002A2C  D7F0               	goto	l1725
 10242  002A2E                     __end_of_USBStdGetDscHandler:
 10243                           	opt stack 0
 10244                           tosu	equ	0xFFF
 10245                           tosh	equ	0xFFE
 10246                           tosl	equ	0xFFD
 10247                           pclath	equ	0xFFA
 10248                           tblptru	equ	0xFF8
 10249                           tblptrh	equ	0xFF7
 10250                           tblptrl	equ	0xFF6
 10251                           tablat	equ	0xFF5
 10252                           prodh	equ	0xFF4
 10253                           prodl	equ	0xFF3
 10254                           intcon	equ	0xFF2
 10255                           intcon2	equ	0xFF1
 10256                           intcon3	equ	0xFF0
 10257                           indf0	equ	0xFEF
 10258                           postinc0	equ	0xFEE
 10259                           plusw0	equ	0xFEB
 10260                           fsr0h	equ	0xFEA
 10261                           fsr0l	equ	0xFE9
 10262                           wreg	equ	0xFE8
 10263                           postinc1	equ	0xFE6
 10264                           postdec1	equ	0xFE5
 10265                           plusw1	equ	0xFE3
 10266                           fsr1h	equ	0xFE2
 10267                           fsr1l	equ	0xFE1
 10268                           indf2	equ	0xFDF
 10269                           postinc2	equ	0xFDE
 10270                           postdec2	equ	0xFDD
 10271                           plusw2	equ	0xFDB
 10272                           fsr2h	equ	0xFDA
 10273                           fsr2l	equ	0xFD9
 10274                           status	equ	0xFD8
 10275                           
 10276 ;; *************** function _USBStdFeatureReqHandler *****************
 10277 ;; Defined at:
 10278 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10279 ;; Parameters:    Size  Location     Type
 10280 ;;		None
 10281 ;; Auto vars:     Size  Location     Type
 10282 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10283 ;;		 -> NULL(0), BDT(48), 
 10284 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10285 ;;		 -> UEP0(1), 
 10286 ;;  current_ep_d    1   52[BANK0 ] struct .
 10287 ;; Return value:  Size  Location     Type
 10288 ;;                  1    wreg      void 
 10289 ;; Registers used:
 10290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10291 ;; Tracked objects:
 10292 ;;		On entry : 0/0
 10293 ;;		On exit  : 0/0
 10294 ;;		Unchanged: 0/0
 10295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10297 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10298 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10299 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10300 ;;Total ram usage:        6 bytes
 10301 ;; Hardware stack levels used:    1
 10302 ;; Hardware stack levels required when called:   15
 10303 ;; This function calls:
 10304 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10305 ;; This function is called by:
 10306 ;;		_USBCheckStdRequest
 10307 ;; This function uses a non-reentrant model
 10308 ;;
 10309                           
 10310                           	psect	text43
 10311  00135A                     __ptext43:
 10312                           	opt stack 0
 10313  00135A                     _USBStdFeatureReqHandler:
 10314                           	opt stack 8
 10315                           
 10316                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10317                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10318                           ;usb_device.c: 2778: unsigned char* pUEP;
 10319                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10320                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10321                           
 10322                           ;incstack = 0
 10323  00135A  0104               	movlb	4	; () banked
 10324  00135C  0532               	decf	50,w,b	;volatile
 10325  00135E  A4D8               	btfss	status,2,c
 10326  001360  D011               	goto	l1809
 10327                           
 10328                           ; BSR set to: 4
 10329  001362  5130               	movf	48,w,b	;volatile
 10330  001364  0B1F               	andlw	31
 10331  001366  0900               	iorlw	0
 10332  001368  A4D8               	btfss	status,2,c
 10333  00136A  D00C               	goto	l1809
 10334                           
 10335                           ; BSR set to: 4
 10336                           ;usb_device.c: 2818: {
 10337                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10338  00136C  0100               	movlb	0	; () banked
 10339  00136E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10343  001370  0E03               	movlw	3
 10344  001372  0104               	movlb	4	; () banked
 10345  001374  1931               	xorwf	49,w,b	;volatile
 10346  001376  A4D8               	btfss	status,2,c
 10347  001378  D002               	goto	l1808
 10348                           
 10349                           ; BSR set to: 4
 10350                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10351  00137A  0E01               	movlw	1
 10352  00137C  D001               	goto	L5
 10353  00137E                     l1808:
 10354                           
 10355                           ;usb_device.c: 2822: else
 10356                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10357                           
 10358                           ; BSR set to: 1
 10359  00137E  0E00               	movlw	0
 10360  001380                     L5:
 10361  001380  0101               	movlb	1	; () banked
 10362  001382  6FE8               	movwf	_RemoteWakeup& (0+255),b
 10363  001384                     l1809:
 10364                           
 10365                           ;usb_device.c: 2824: }
 10366                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10367                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10368                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10369                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10370                           
 10371                           ; BSR set to: 1
 10372  001384  0104               	movlb	4	; () banked
 10373  001386  5132               	movf	50,w,b	;volatile
 10374  001388  A4D8               	btfss	status,2,c
 10375  00138A  0012               	return	
 10376                           
 10377                           ; BSR set to: 4
 10378  00138C  5130               	movf	48,w,b	;volatile
 10379  00138E  0B1F               	andlw	31
 10380  001390  0A02               	xorlw	2
 10381  001392  A4D8               	btfss	status,2,c
 10382  001394  0012               	return	
 10383                           
 10384                           ; BSR set to: 4
 10385  001396  5134               	movf	52,w,b	;volatile
 10386  001398  0B0F               	andlw	15
 10387  00139A  0900               	iorlw	0
 10388  00139C  B4D8               	btfsc	status,2,c
 10389  00139E  0012               	return	
 10390                           
 10391                           ; BSR set to: 4
 10392  0013A0  5134               	movf	52,w,b	;volatile
 10393  0013A2  0B0F               	andlw	15
 10394  0013A4  0100               	movlb	0	; () banked
 10395  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10396  0013A8  0E03               	movlw	3
 10397  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10398  0013AC  0012               	return	
 10399                           
 10400                           ; BSR set to: 0
 10401  0013AE  0E20               	movlw	32
 10402  0013B0  19CB               	xorwf	_USBDeviceState& (0+255),w,b
 10403  0013B2  A4D8               	btfss	status,2,c
 10404  0013B4  0012               	return	
 10405                           
 10406                           ; BSR set to: 0
 10407                           ;usb_device.c: 2831: {
 10408                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10409  0013B6  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 10410                           
 10411                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10412  0013B8  0104               	movlb	4	; () banked
 10413  0013BA  BF34               	btfsc	52,7,b	;volatile
 10414  0013BC  D01C               	goto	l1811
 10415                           
 10416                           ; BSR set to: 4
 10417                           ;usb_device.c: 2838: {
 10418                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10419  0013BE  5134               	movf	52,w,b	;volatile
 10420  0013C0  0B0F               	andlw	15
 10421  0013C2  0100               	movlb	0	; () banked
 10422  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10423  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10424  0013C8  0D02               	mullw	2
 10425  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10426  0013CC  24F3               	addwf	prodl,w,c
 10427  0013CE  6ED9               	movwf	fsr2l,c
 10428  0013D0  0E03               	movlw	high _pBDTEntryOut
 10429  0013D2  20F4               	addwfc	prodh,w,c
 10430  0013D4  6EDA               	movwf	fsr2h,c
 10431  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10432  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10433                           
 10434                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10435  0013DE  0104               	movlb	4	; () banked
 10436  0013E0  5134               	movf	52,w,b	;volatile
 10437  0013E2  0B0F               	andlw	15
 10438  0013E4  0100               	movlb	0	; () banked
 10439  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10440  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10441  0013EA  0D01               	mullw	1
 10442  0013EC  0ECE               	movlw	low _ep_data_out
 10443  0013EE  24F3               	addwf	prodl,w,c
 10444  0013F0  6ED9               	movwf	fsr2l,c
 10445  0013F2  0E02               	movlw	high _ep_data_out
 10446  0013F4  D01C               	goto	L6
 10447  0013F6                     l1811:
 10448                           
 10449                           ;usb_device.c: 2842: else
 10450                           ;usb_device.c: 2843: {
 10451                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10452                           
 10453                           ; BSR set to: 0
 10454  0013F6  0104               	movlb	4	; () banked
 10455  0013F8  5134               	movf	52,w,b	;volatile
 10456  0013FA  0B0F               	andlw	15
 10457  0013FC  0100               	movlb	0	; () banked
 10458  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10459  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10460  001402  0D02               	mullw	2
 10461  001404  0EB2               	movlw	low _pBDTEntryIn
 10462  001406  24F3               	addwf	prodl,w,c
 10463  001408  6ED9               	movwf	fsr2l,c
 10464  00140A  0E00               	movlw	high _pBDTEntryIn
 10465  00140C  20F4               	addwfc	prodh,w,c
 10466  00140E  6EDA               	movwf	fsr2h,c
 10467  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10468  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10469                           
 10470                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10471  001418  0104               	movlb	4	; () banked
 10472  00141A  5134               	movf	52,w,b	;volatile
 10473  00141C  0B0F               	andlw	15
 10474  00141E  0100               	movlb	0	; () banked
 10475  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10476  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10477  001424  0D01               	mullw	1
 10478  001426  0ED1               	movlw	low _ep_data_in
 10479  001428  24F3               	addwf	prodl,w,c
 10480  00142A  6ED9               	movwf	fsr2l,c
 10481  00142C  0E02               	movlw	high _ep_data_in
 10482  00142E                     L6:
 10483  00142E  20F4               	addwfc	prodh,w,c
 10484  001430  6EDA               	movwf	fsr2h,c
 10485  001432  50DF               	movf	indf2,w,c
 10486  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10487                           
 10488                           ; BSR set to: 0
 10489                           ;usb_device.c: 2846: }
 10490                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10491                           
 10492                           ; BSR set to: 0
 10493  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10494  001438  D002               	goto	l1813
 10495                           
 10496                           ; BSR set to: 0
 10497                           ;usb_device.c: 2853: {
 10498                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10499  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10500                           
 10501                           ;usb_device.c: 2855: }
 10502  00143C  D001               	goto	l1814
 10503  00143E                     l1813:
 10504                           
 10505                           ; BSR set to: 0
 10506                           ;usb_device.c: 2856: else
 10507                           ;usb_device.c: 2857: {
 10508                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10509                           
 10510                           ; BSR set to: 0
 10511  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10512  001440                     l1814:
 10513                           
 10514                           ; BSR set to: 0
 10515                           ;usb_device.c: 2859: }
 10516                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10517                           
 10518                           ; BSR set to: 0
 10519  001440  0104               	movlb	4	; () banked
 10520  001442  BF34               	btfsc	52,7,b	;volatile
 10521  001444  D00B               	goto	l1815
 10522                           
 10523                           ; BSR set to: 4
 10524                           ;usb_device.c: 2865: {
 10525                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10526  001446  5134               	movf	52,w,b	;volatile
 10527  001448  0B0F               	andlw	15
 10528  00144A  0100               	movlb	0	; () banked
 10529  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10530  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10531  001450  0D02               	mullw	2
 10532  001452  0E0E               	movlw	low _pBDTEntryOut
 10533  001454  24F3               	addwf	prodl,w,c
 10534  001456  6ED9               	movwf	fsr2l,c
 10535  001458  0E03               	movlw	high _pBDTEntryOut
 10536  00145A  D00B               	goto	L7
 10537  00145C                     l1815:
 10538                           
 10539                           ;usb_device.c: 2868: else
 10540                           ;usb_device.c: 2869: {
 10541                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10542                           
 10543                           ; BSR set to: 0
 10544  00145C  0104               	movlb	4	; () banked
 10545  00145E  5134               	movf	52,w,b	;volatile
 10546  001460  0B0F               	andlw	15
 10547  001462  0100               	movlb	0	; () banked
 10548  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10549  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10550  001468  0D02               	mullw	2
 10551  00146A  0EB2               	movlw	low _pBDTEntryIn
 10552  00146C  24F3               	addwf	prodl,w,c
 10553  00146E  6ED9               	movwf	fsr2l,c
 10554  001470  0E00               	movlw	high _pBDTEntryIn
 10555  001472                     L7:
 10556  001472  20F4               	addwfc	prodh,w,c
 10557  001474  6EDA               	movwf	fsr2h,c
 10558  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10559  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10560                           
 10561                           ; BSR set to: 0
 10562                           ;usb_device.c: 2871: }
 10563                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 10564                           
 10565                           ; BSR set to: 0
 10566  00147E  0E03               	movlw	3
 10567  001480  0104               	movlb	4	; () banked
 10568  001482  1931               	xorwf	49,w,b	;volatile
 10569  001484  A4D8               	btfss	status,2,c
 10570  001486  D031               	goto	l1817
 10571                           
 10572                           ; BSR set to: 4
 10573                           ;usb_device.c: 2875: {
 10574                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 10575  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10576  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10577  001490  0100               	movlb	0	; () banked
 10578  001492  AEDF               	btfss	indf2,7,c
 10579  001494  D01D               	goto	l1820
 10580                           
 10581                           ; BSR set to: 0
 10582                           ;usb_device.c: 2877: {
 10583                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 10584  001496  0104               	movlb	4	; () banked
 10585  001498  BF34               	btfsc	52,7,b	;volatile
 10586  00149A  D00B               	goto	l1819
 10587                           
 10588                           ; BSR set to: 4
 10589                           ;usb_device.c: 2881: {
 10590                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10591  00149C  5134               	movf	52,w,b	;volatile
 10592  00149E  0B0F               	andlw	15
 10593  0014A0  0100               	movlb	0	; () banked
 10594  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10595  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10596  0014A6  0D01               	mullw	1
 10597  0014A8  0ECE               	movlw	low _ep_data_out
 10598  0014AA  24F3               	addwf	prodl,w,c
 10599  0014AC  6ED9               	movwf	fsr2l,c
 10600  0014AE  0E02               	movlw	high _ep_data_out
 10601  0014B0  D00B               	goto	L8
 10602  0014B2                     l1819:
 10603                           
 10604                           ;usb_device.c: 2884: else
 10605                           ;usb_device.c: 2885: {
 10606                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10607                           
 10608                           ; BSR set to: 2
 10609  0014B2  0104               	movlb	4	; () banked
 10610  0014B4  5134               	movf	52,w,b	;volatile
 10611  0014B6  0B0F               	andlw	15
 10612  0014B8  0100               	movlb	0	; () banked
 10613  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10614  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10615  0014BE  0D01               	mullw	1
 10616  0014C0  0ED1               	movlw	low _ep_data_in
 10617  0014C2  24F3               	addwf	prodl,w,c
 10618  0014C4  6ED9               	movwf	fsr2l,c
 10619  0014C6  0E02               	movlw	high _ep_data_in
 10620  0014C8                     L8:
 10621  0014C8  20F4               	addwfc	prodh,w,c
 10622  0014CA  6EDA               	movwf	fsr2h,c
 10623  0014CC  0102               	movlb	2	; () banked
 10624  0014CE  82DF               	bsf	indf2,1,c
 10625  0014D0                     l1820:
 10626                           
 10627                           ;usb_device.c: 2887: }
 10628                           ;usb_device.c: 2888: }
 10629                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 10630                           
 10631                           ; BSR set to: 2
 10632                           
 10633                           ; BSR set to: 2
 10634  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10635  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10636  0014D8  0E00               	movlw	0
 10637  0014DA  84DB               	bsf	plusw2,2,c
 10638                           
 10639                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 10640  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10641  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10642  0014E4  0E00               	movlw	0
 10643  0014E6  8EDB               	bsf	plusw2,7,c
 10644                           
 10645                           ;usb_device.c: 2893: }
 10646  0014E8  0012               	return	
 10647  0014EA                     l1817:
 10648                           
 10649                           ;usb_device.c: 2894: else
 10650                           ;usb_device.c: 2895: {
 10651                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10652  0014EA  0E04               	movlw	4
 10653  0014EC  0100               	movlb	0	; () banked
 10654  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10655                           
 10656                           ; BSR set to: 0
 10657                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 10658  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10659  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10660  0014F8  AEDF               	btfss	indf2,7,c
 10661  0014FA  D01B               	goto	l1822
 10662                           
 10663                           ; BSR set to: 0
 10664                           ;usb_device.c: 2902: {
 10665                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 10666  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10667  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10668  001504  0E7F               	movlw	127
 10669  001506  16DF               	andwf	indf2,f,c
 10670                           
 10671                           ; BSR set to: 0
 10672                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 10673  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10674  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10675  001510  0E00               	movlw	0
 10676  001512  8CDB               	bsf	plusw2,6,c
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10680  001514  0E00               	movlw	0
 10681  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10682  001518  0E05               	movlw	5
 10683  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10684  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10685  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10686  001524  0E00               	movlw	0
 10687  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10688  001528  0E02               	movlw	2
 10689  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10690  00152C  EC17  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10691                           
 10692                           ;usb_device.c: 2908: }
 10693  001530  D006               	goto	l1823
 10694  001532                     l1822:
 10695                           
 10696                           ;usb_device.c: 2909: else
 10697                           ;usb_device.c: 2910: {
 10698                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 10699  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10700  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10701  00153A  0E00               	movlw	0
 10702  00153C  8CDB               	bsf	plusw2,6,c
 10703  00153E                     l1823:
 10704                           
 10705                           ;usb_device.c: 2913: }
 10706                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10707  00153E  0E04               	movlw	4
 10708  001540  0100               	movlb	0	; () banked
 10709  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10710                           
 10711                           ; BSR set to: 0
 10712                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10713  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 10714  001546  D006               	goto	u10240
 10715                           
 10716                           ; BSR set to: 0
 10717  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10718  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10719  001550  AEDF               	btfss	indf2,7,c
 10720  001552  D033               	goto	l1824
 10721  001554                     u10240:
 10722                           
 10723                           ; BSR set to: 0
 10724                           ;usb_device.c: 2924: {
 10725                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 10726  001554  0104               	movlb	4	; () banked
 10727  001556  BF34               	btfsc	52,7,b	;volatile
 10728  001558  D00B               	goto	l1827
 10729                           
 10730                           ; BSR set to: 4
 10731                           ;usb_device.c: 2926: {
 10732                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10733  00155A  5134               	movf	52,w,b	;volatile
 10734  00155C  0B0F               	andlw	15
 10735  00155E  0100               	movlb	0	; () banked
 10736  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10737  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10738  001564  0D01               	mullw	1
 10739  001566  0ECE               	movlw	low _ep_data_out
 10740  001568  24F3               	addwf	prodl,w,c
 10741  00156A  6ED9               	movwf	fsr2l,c
 10742  00156C  0E02               	movlw	high _ep_data_out
 10743  00156E  D00B               	goto	L9
 10744  001570                     l1827:
 10745                           
 10746                           ;usb_device.c: 2929: else
 10747                           ;usb_device.c: 2930: {
 10748                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10749                           
 10750                           ; BSR set to: 2
 10751  001570  0104               	movlb	4	; () banked
 10752  001572  5134               	movf	52,w,b	;volatile
 10753  001574  0B0F               	andlw	15
 10754  001576  0100               	movlb	0	; () banked
 10755  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10756  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10757  00157C  0D01               	mullw	1
 10758  00157E  0ED1               	movlw	low _ep_data_in
 10759  001580  24F3               	addwf	prodl,w,c
 10760  001582  6ED9               	movwf	fsr2l,c
 10761  001584  0E02               	movlw	high _ep_data_in
 10762  001586                     L9:
 10763  001586  20F4               	addwfc	prodh,w,c
 10764  001588  6EDA               	movwf	fsr2h,c
 10765  00158A  0102               	movlb	2	; () banked
 10766  00158C  92DF               	bcf	indf2,1,c
 10767                           
 10768                           ; BSR set to: 2
 10769                           ;usb_device.c: 2932: }
 10770                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10771                           
 10772                           ; BSR set to: 2
 10773  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10774  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10775  001596  0E3B               	movlw	59
 10776  001598  16DF               	andwf	indf2,f,c
 10777                           
 10778                           ; BSR set to: 2
 10779                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10780  00159A  0E00               	movlw	0
 10781  00159C  0100               	movlb	0	; () banked
 10782  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10783  0015A0  0E05               	movlw	5
 10784  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10785  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10786  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10787  0015AC  0E00               	movlw	0
 10788  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10789  0015B0  0E02               	movlw	2
 10790  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10791  0015B4  EC17  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10792                           
 10793                           ;usb_device.c: 2938: }
 10794  0015B8  D006               	goto	l1829
 10795  0015BA                     l1824:
 10796                           
 10797                           ;usb_device.c: 2939: else
 10798                           ;usb_device.c: 2940: {
 10799                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10800  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10801  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10802  0015C2  0E3B               	movlw	59
 10803  0015C4  16DF               	andwf	indf2,f,c
 10804  0015C6                     l1829:
 10805                           
 10806                           ;usb_device.c: 2943: }
 10807                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 10808  0015C6  0104               	movlb	4	; () banked
 10809  0015C8  5134               	movf	52,w,b	;volatile
 10810  0015CA  0B0F               	andlw	15
 10811  0015CC  0100               	movlb	0	; () banked
 10812  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10813  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10814  0015D2  0D01               	mullw	1
 10815  0015D4  0E26               	movlw	38
 10816  0015D6  24F3               	addwf	prodl,w,c
 10817  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 10818  0015DA  0E0F               	movlw	15
 10819  0015DC  20F4               	addwfc	prodh,w,c
 10820  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 10821                           
 10822                           ; BSR set to: 0
 10823                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 10824  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 10825  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 10826  0015E8  0EFE               	movlw	254
 10827  0015EA  16DF               	andwf	indf2,f,c
 10828                           
 10829                           ; BSR set to: 0
 10830  0015EC  0012               	return	
 10831  0015EE                     __end_of_USBStdFeatureReqHandler:
 10832                           	opt stack 0
 10833                           tosu	equ	0xFFF
 10834                           tosh	equ	0xFFE
 10835                           tosl	equ	0xFFD
 10836                           pclath	equ	0xFFA
 10837                           tblptru	equ	0xFF8
 10838                           tblptrh	equ	0xFF7
 10839                           tblptrl	equ	0xFF6
 10840                           tablat	equ	0xFF5
 10841                           prodh	equ	0xFF4
 10842                           prodl	equ	0xFF3
 10843                           intcon	equ	0xFF2
 10844                           intcon2	equ	0xFF1
 10845                           intcon3	equ	0xFF0
 10846                           indf0	equ	0xFEF
 10847                           postinc0	equ	0xFEE
 10848                           plusw0	equ	0xFEB
 10849                           fsr0h	equ	0xFEA
 10850                           fsr0l	equ	0xFE9
 10851                           wreg	equ	0xFE8
 10852                           postinc1	equ	0xFE6
 10853                           postdec1	equ	0xFE5
 10854                           plusw1	equ	0xFE3
 10855                           fsr1h	equ	0xFE2
 10856                           fsr1l	equ	0xFE1
 10857                           indf2	equ	0xFDF
 10858                           postinc2	equ	0xFDE
 10859                           postdec2	equ	0xFDD
 10860                           plusw2	equ	0xFDB
 10861                           fsr2h	equ	0xFDA
 10862                           fsr2l	equ	0xFD9
 10863                           status	equ	0xFD8
 10864                           
 10865 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 10866 ;; Defined at:
 10867 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 10868 ;; Parameters:    Size  Location     Type
 10869 ;;  event           2   41[BANK0 ] enum E8346
 10870 ;;  pdata           2   43[BANK0 ] PTR void 
 10871 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 10872 ;;  size            2   45[BANK0 ] unsigned int 
 10873 ;; Auto vars:     Size  Location     Type
 10874 ;;		None
 10875 ;; Return value:  Size  Location     Type
 10876 ;;                  1    wreg      unsigned char 
 10877 ;; Registers used:
 10878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10879 ;; Tracked objects:
 10880 ;;		On entry : 0/0
 10881 ;;		On exit  : 0/0
 10882 ;;		Unchanged: 0/0
 10883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10884 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10886 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10887 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10888 ;;Total ram usage:        8 bytes
 10889 ;; Hardware stack levels used:    1
 10890 ;; Hardware stack levels required when called:   14
 10891 ;; This function calls:
 10892 ;;		_CDCInitEP
 10893 ;;		_USBCheckCDCRequest
 10894 ;; This function is called by:
 10895 ;;		_USBDeviceTasks
 10896 ;;		_USBStdSetCfgHandler
 10897 ;;		_USBSuspend
 10898 ;;		_USBWakeFromSuspend
 10899 ;;		_USBCtrlTrfSetupHandler
 10900 ;;		_USBCheckStdRequest
 10901 ;;		_USBStdFeatureReqHandler
 10902 ;; This function uses a non-reentrant model
 10903 ;;
 10904                           
 10905                           	psect	text44
 10906  004E2E                     __ptext44:
 10907                           	opt stack 0
 10908  004E2E                     _USER_USB_CALLBACK_EVENT_HANDLER:
 10909                           	opt stack 12
 10910                           
 10911                           ;usb_device_mgr.c: 106: switch( (int) event )
 10912                           
 10913                           ;incstack = 0
 10914  004E2E  D006               	goto	l1983
 10915  004E30                     
 10916                           ;usb_device_mgr.c: 134: CDCInitEP();
 10917  004E30  EC14  F026         	call	_CDCInitEP	;wreg free
 10918                           
 10919                           ;usb_device_mgr.c: 142: break;
 10920                           
 10921                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 10922                           
 10923                           ;usb_device_mgr.c: 139: break;
 10924  004E34  0012               	return	
 10925  004E36                     
 10926                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 10927  004E36  EC7A  F01F         	call	_USBCheckCDCRequest	;wreg free
 10928                           
 10929                           ;usb_device_mgr.c: 163: }
 10930                           
 10931                           ;usb_device_mgr.c: 162: break;
 10932                           
 10933                           ;usb_device_mgr.c: 161: default:
 10934                           
 10935                           ;usb_device_mgr.c: 159: break;
 10936                           
 10937                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 10938                           
 10939                           ;usb_device_mgr.c: 156: break;
 10940                           
 10941                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 10942                           
 10943                           ;usb_device_mgr.c: 153: break;
 10944  004E3A  0012               	return	
 10945  004E3C                     l1983:
 10946  004E3C  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 10947  004E40  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 10948                           
 10949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 10950                           ; Switch size 1, requested type "space"
 10951                           ; Number of cases is 2, Range of values is 0 to 127
 10952                           ; switch strategies available:
 10953                           ; Name         Instructions Cycles
 10954                           ; simple_byte            7     4 (average)
 10955                           ;	Chosen strategy is simple_byte
 10956  004E44  0100               	movlb	0	; () banked
 10957  004E46  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 10958  004E48  0A00               	xorlw	0	; case 0
 10959  004E4A  B4D8               	btfsc	status,2,c
 10960  004E4C  D004               	goto	l14322
 10961  004E4E  0A7F               	xorlw	127	; case 127
 10962  004E50  A4D8               	btfss	status,2,c
 10963  004E52  0012               	return	
 10964  004E54  D018               	goto	l14324
 10965  004E56                     l14322:
 10966                           
 10967                           ; BSR set to: 0
 10968                           ; Switch size 1, requested type "space"
 10969                           ; Number of cases is 8, Range of values is 1 to 117
 10970                           ; switch strategies available:
 10971                           ; Name         Instructions Cycles
 10972                           ; simple_byte           25    13 (average)
 10973                           ;	Chosen strategy is simple_byte
 10974  004E56  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 10975  004E58  0A01               	xorlw	1	; case 1
 10976  004E5A  B4D8               	btfsc	status,2,c
 10977  004E5C  D7E9               	goto	l1989
 10978  004E5E  0A03               	xorlw	3	; case 2
 10979  004E60  B4D8               	btfsc	status,2,c
 10980  004E62  0012               	return	
 10981  004E64  0A01               	xorlw	1	; case 3
 10982  004E66  B4D8               	btfsc	status,2,c
 10983  004E68  D7E6               	goto	l1991
 10984  004E6A  0A06               	xorlw	6	; case 5
 10985  004E6C  B4D8               	btfsc	status,2,c
 10986  004E6E  0012               	return	
 10987  004E70  0A77               	xorlw	119	; case 114
 10988  004E72  B4D8               	btfsc	status,2,c
 10989  004E74  0012               	return	
 10990  004E76  0A01               	xorlw	1	; case 115
 10991  004E78  B4D8               	btfsc	status,2,c
 10992  004E7A  0012               	return	
 10993  004E7C  0A07               	xorlw	7	; case 116
 10994  004E7E  B4D8               	btfsc	status,2,c
 10995  004E80  0012               	return	
 10996  004E82  0A01               	xorlw	1	; case 117
 10997  004E84  0012               	return	
 10998  004E86                     l14324:
 10999                           
 11000                           ; BSR set to: 0
 11001                           ; Switch size 1, requested type "space"
 11002                           ; Number of cases is 1, Range of values is 255 to 255
 11003                           ; switch strategies available:
 11004                           ; Name         Instructions Cycles
 11005                           ; simple_byte            4     3 (average)
 11006                           ;	Chosen strategy is simple_byte
 11007  004E86  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11008  004E88  0AFF               	xorlw	255	; case 255
 11009  004E8A  0012               	return	
 11010  004E8C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11011                           	opt stack 0
 11012                           tosu	equ	0xFFF
 11013                           tosh	equ	0xFFE
 11014                           tosl	equ	0xFFD
 11015                           pclath	equ	0xFFA
 11016                           tblptru	equ	0xFF8
 11017                           tblptrh	equ	0xFF7
 11018                           tblptrl	equ	0xFF6
 11019                           tablat	equ	0xFF5
 11020                           prodh	equ	0xFF4
 11021                           prodl	equ	0xFF3
 11022                           intcon	equ	0xFF2
 11023                           intcon2	equ	0xFF1
 11024                           intcon3	equ	0xFF0
 11025                           indf0	equ	0xFEF
 11026                           postinc0	equ	0xFEE
 11027                           plusw0	equ	0xFEB
 11028                           fsr0h	equ	0xFEA
 11029                           fsr0l	equ	0xFE9
 11030                           wreg	equ	0xFE8
 11031                           postinc1	equ	0xFE6
 11032                           postdec1	equ	0xFE5
 11033                           plusw1	equ	0xFE3
 11034                           fsr1h	equ	0xFE2
 11035                           fsr1l	equ	0xFE1
 11036                           indf2	equ	0xFDF
 11037                           postinc2	equ	0xFDE
 11038                           postdec2	equ	0xFDD
 11039                           plusw2	equ	0xFDB
 11040                           fsr2h	equ	0xFDA
 11041                           fsr2l	equ	0xFD9
 11042                           status	equ	0xFD8
 11043                           
 11044 ;; *************** function _USBCheckCDCRequest *****************
 11045 ;; Defined at:
 11046 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11047 ;; Parameters:    Size  Location     Type
 11048 ;;		None
 11049 ;; Auto vars:     Size  Location     Type
 11050 ;;		None
 11051 ;; Return value:  Size  Location     Type
 11052 ;;                  1    wreg      void 
 11053 ;; Registers used:
 11054 ;;		wreg, status,2, status,0
 11055 ;; Tracked objects:
 11056 ;;		On entry : 0/0
 11057 ;;		On exit  : 0/0
 11058 ;;		Unchanged: 0/0
 11059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11064 ;;Total ram usage:        0 bytes
 11065 ;; Hardware stack levels used:    1
 11066 ;; Hardware stack levels required when called:   11
 11067 ;; This function calls:
 11068 ;;		Nothing
 11069 ;; This function is called by:
 11070 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11071 ;; This function uses a non-reentrant model
 11072 ;;
 11073                           
 11074                           	psect	text45
 11075  003EF4                     __ptext45:
 11076                           	opt stack 0
 11077  003EF4                     _USBCheckCDCRequest:
 11078                           	opt stack 14
 11079                           
 11080                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11081                           
 11082                           ;incstack = 0
 11083  003EF4  0104               	movlb	4	; () banked
 11084  003EF6  5130               	movf	48,w,b	;volatile
 11085  003EF8  0B1F               	andlw	31
 11086  003EFA  06E8               	decf	wreg,f,c
 11087  003EFC  A4D8               	btfss	status,2,c
 11088  003EFE  0012               	return	
 11089                           
 11090                           ; BSR set to: 4
 11091                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11092                           
 11093                           ; BSR set to: 4
 11094                           
 11095                           ; BSR set to: 4
 11096  003F00  3930               	swapf	48,w,b	;volatile
 11097  003F02  32E8               	rrcf	wreg,f,c
 11098  003F04  0B03               	andlw	3
 11099  003F06  06E8               	decf	wreg,f,c
 11100  003F08  A4D8               	btfss	status,2,c
 11101  003F0A  0012               	return	
 11102                           
 11103                           ; BSR set to: 4
 11104                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11105                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11106                           
 11107                           ; BSR set to: 4
 11108                           
 11109                           ; BSR set to: 4
 11110  003F0C  5134               	movf	52,w,b	;volatile
 11111  003F0E  B4D8               	btfsc	status,2,c
 11112  003F10  D037               	goto	l1885
 11113                           
 11114                           ; BSR set to: 4
 11115  003F12  0534               	decf	52,w,b	;volatile
 11116  003F14  A4D8               	btfss	status,2,c
 11117  003F16  0012               	return	
 11118  003F18  D033               	goto	l1885
 11119  003F1A                     
 11120                           ; BSR set to: 4
 11121                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11122                           
 11123                           ; BSR set to: 4
 11124  003F1A  0E76               	movlw	low _dummy_encapsulated_cmd_response
 11125  003F1C  0100               	movlb	0	; () banked
 11126  003F1E  6FAC               	movwf	_inPipes& (0+255),b
 11127  003F20  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11128  003F22  6FAD               	movwf	(_inPipes+1)& (0+255),b
 11129                           
 11130                           ; BSR set to: 0
 11131                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11132  003F24  0E00               	movlw	0
 11133  003F26  6FB1               	movwf	(_inPipes+5)& (0+255),b
 11134  003F28  0E08               	movlw	8
 11135  003F2A  6FB0               	movwf	(_inPipes+4)& (0+255),b
 11136                           
 11137                           ; BSR set to: 0
 11138                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11139  003F2C  81AF               	bsf	(_inPipes+3)& (0+255),0,b
 11140                           
 11141                           ; BSR set to: 0
 11142                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11143  003F2E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 11144                           
 11145                           ;usb_device_cdc.c: 178: break;
 11146  003F30  0012               	return	
 11147  003F32                     
 11148                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11149                           
 11150                           ; BSR set to: 0
 11151  003F32  0E76               	movlw	low _dummy_encapsulated_cmd_response
 11152  003F34  0100               	movlb	0	; () banked
 11153  003F36  6FAC               	movwf	_inPipes& (0+255),b
 11154  003F38  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11155  003F3A  6FAD               	movwf	(_inPipes+1)& (0+255),b
 11156                           
 11157                           ; BSR set to: 0
 11158                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11159  003F3C  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 11160                           
 11161                           ;usb_device_cdc.c: 183: break;
 11162  003F3E  0012               	return	
 11163  003F40                     l1889:
 11164                           
 11165                           ; BSR set to: 4
 11166                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11167  003F40  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11168  003F44  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11169                           
 11170                           ; BSR set to: 4
 11171                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11172  003F48  0E7E               	movlw	low _line_coding
 11173  003F4A  0101               	movlb	1	; () banked
 11174  003F4C  6FC9               	movwf	_outPipes& (0+255),b
 11175  003F4E  0E03               	movlw	high _line_coding
 11176  003F50  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11177                           
 11178                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11179  003F52  0E00               	movlw	0
 11180  003F54  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11181  003F56  0E00               	movlw	0
 11182  003F58  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11183                           
 11184                           ; BSR set to: 1
 11185                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11186  003F5A  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11187                           
 11188                           ;usb_device_cdc.c: 192: break;
 11189  003F5C  0012               	return	
 11190  003F5E                     
 11191                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11192                           
 11193                           ; BSR set to: 1
 11194  003F5E  0E7E               	movlw	low _line_coding
 11195  003F60  0100               	movlb	0	; () banked
 11196  003F62  6FAC               	movwf	_inPipes& (0+255),b
 11197  003F64  0E03               	movlw	high _line_coding
 11198  003F66  6FAD               	movwf	(_inPipes+1)& (0+255),b
 11199                           
 11200                           ; BSR set to: 0
 11201  003F68  0E00               	movlw	0
 11202  003F6A  6FB1               	movwf	(_inPipes+5)& (0+255),b
 11203  003F6C  0E07               	movlw	7
 11204  003F6E  6FB0               	movwf	(_inPipes+4)& (0+255),b
 11205                           
 11206                           ; BSR set to: 0
 11207  003F70  0EC1               	movlw	193
 11208  003F72  6FAF               	movwf	(_inPipes+3)& (0+255),b
 11209                           
 11210                           ;usb_device_cdc.c: 199: break;
 11211  003F74  0012               	return	
 11212  003F76                     l1891:
 11213                           
 11214                           ; BSR set to: 4
 11215                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11216  003F76  C432 F1E3          	movff	1074,_control_signal_bitmap	;volatile
 11217                           
 11218                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11219  003F7A  0100               	movlb	0	; () banked
 11220  003F7C  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 11221                           
 11222                           ; BSR set to: 0
 11223                           ;usb_device_cdc.c: 261: }
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;usb_device_cdc.c: 260: break;
 11227                           
 11228                           ;usb_device_cdc.c: 259: default:
 11229                           
 11230                           ;usb_device_cdc.c: 235: break;
 11231  003F7E  0012               	return	
 11232  003F80                     l1885:
 11233                           
 11234                           ; BSR set to: 0
 11235  003F80  0104               	movlb	4	; () banked
 11236  003F82  5131               	movf	49,w,b	;volatile
 11237                           
 11238                           ; Switch size 1, requested type "space"
 11239                           ; Number of cases is 5, Range of values is 0 to 34
 11240                           ; switch strategies available:
 11241                           ; Name         Instructions Cycles
 11242                           ; simple_byte           16     9 (average)
 11243                           ;	Chosen strategy is simple_byte
 11244  003F84  0A00               	xorlw	0	; case 0
 11245  003F86  B4D8               	btfsc	status,2,c
 11246  003F88  D7C8               	goto	l1886
 11247  003F8A  0A01               	xorlw	1	; case 1
 11248  003F8C  B4D8               	btfsc	status,2,c
 11249  003F8E  D7D1               	goto	l1888
 11250  003F90  0A21               	xorlw	33	; case 32
 11251  003F92  B4D8               	btfsc	status,2,c
 11252  003F94  D7D5               	goto	l1889
 11253  003F96  0A01               	xorlw	1	; case 33
 11254  003F98  B4D8               	btfsc	status,2,c
 11255  003F9A  D7E1               	goto	l1890
 11256  003F9C  0A03               	xorlw	3	; case 34
 11257  003F9E  A4D8               	btfss	status,2,c
 11258  003FA0  0012               	return	
 11259  003FA2  D7E9               	goto	l1891
 11260  003FA4                     __end_of_USBCheckCDCRequest:
 11261                           	opt stack 0
 11262                           tosu	equ	0xFFF
 11263                           tosh	equ	0xFFE
 11264                           tosl	equ	0xFFD
 11265                           pclath	equ	0xFFA
 11266                           tblptru	equ	0xFF8
 11267                           tblptrh	equ	0xFF7
 11268                           tblptrl	equ	0xFF6
 11269                           tablat	equ	0xFF5
 11270                           prodh	equ	0xFF4
 11271                           prodl	equ	0xFF3
 11272                           intcon	equ	0xFF2
 11273                           intcon2	equ	0xFF1
 11274                           intcon3	equ	0xFF0
 11275                           indf0	equ	0xFEF
 11276                           postinc0	equ	0xFEE
 11277                           plusw0	equ	0xFEB
 11278                           fsr0h	equ	0xFEA
 11279                           fsr0l	equ	0xFE9
 11280                           wreg	equ	0xFE8
 11281                           postinc1	equ	0xFE6
 11282                           postdec1	equ	0xFE5
 11283                           plusw1	equ	0xFE3
 11284                           fsr1h	equ	0xFE2
 11285                           fsr1l	equ	0xFE1
 11286                           indf2	equ	0xFDF
 11287                           postinc2	equ	0xFDE
 11288                           postdec2	equ	0xFDD
 11289                           plusw2	equ	0xFDB
 11290                           fsr2h	equ	0xFDA
 11291                           fsr2l	equ	0xFD9
 11292                           status	equ	0xFD8
 11293                           
 11294 ;; *************** function _CDCInitEP *****************
 11295 ;; Defined at:
 11296 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11297 ;; Parameters:    Size  Location     Type
 11298 ;;		None
 11299 ;; Auto vars:     Size  Location     Type
 11300 ;;		None
 11301 ;; Return value:  Size  Location     Type
 11302 ;;                  1    wreg      void 
 11303 ;; Registers used:
 11304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11305 ;; Tracked objects:
 11306 ;;		On entry : 0/0
 11307 ;;		On exit  : 0/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11314 ;;Total ram usage:        0 bytes
 11315 ;; Hardware stack levels used:    1
 11316 ;; Hardware stack levels required when called:   13
 11317 ;; This function calls:
 11318 ;;		_USBEnableEndpoint
 11319 ;;		_USBTransferOnePacket
 11320 ;; This function is called by:
 11321 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11322 ;; This function uses a non-reentrant model
 11323 ;;
 11324                           
 11325                           	psect	text46
 11326  004C28                     __ptext46:
 11327                           	opt stack 0
 11328  004C28                     _CDCInitEP:
 11329                           	opt stack 12
 11330                           
 11331                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11332                           
 11333                           ;incstack = 0
 11334  004C28  0E80               	movlw	128
 11335  004C2A  0103               	movlb	3	; () banked
 11336  004C2C  6F7E               	movwf	_line_coding& (0+255),b
 11337  004C2E  0E25               	movlw	37
 11338  004C30  6F7F               	movwf	(_line_coding+1)& (0+255),b
 11339  004C32  0E00               	movlw	0
 11340  004C34  6F80               	movwf	(_line_coding+2)& (0+255),b
 11341  004C36  0E00               	movlw	0
 11342  004C38  6F81               	movwf	(_line_coding+3)& (0+255),b
 11343                           
 11344                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11345  004C3A  0E00               	movlw	0
 11346  004C3C  6F82               	movwf	(_line_coding+4)& (0+255),b
 11347                           
 11348                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11349  004C3E  0E00               	movlw	0
 11350  004C40  6F83               	movwf	(_line_coding+5)& (0+255),b
 11351                           
 11352                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11353  004C42  0E08               	movlw	8
 11354  004C44  6F84               	movwf	(_line_coding+6)& (0+255),b
 11355                           
 11356                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11357  004C46  0E00               	movlw	0
 11358  004C48  0100               	movlb	0	; () banked
 11359  004C4A  6FC2               	movwf	_cdc_rx_len& (0+255),b
 11360                           
 11361                           ; BSR set to: 0
 11362                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11363  004C4C  0E1A               	movlw	26
 11364  004C4E  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11365  004C50  0E01               	movlw	1
 11366  004C52  EC9C  F02A         	call	_USBEnableEndpoint
 11367                           
 11368                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11369  004C56  0E1E               	movlw	30
 11370  004C58  0100               	movlb	0	; () banked
 11371  004C5A  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11372  004C5C  0E02               	movlw	2
 11373  004C5E  EC9C  F02A         	call	_USBEnableEndpoint
 11374                           
 11375                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11376  004C62  0E00               	movlw	0
 11377  004C64  0100               	movlb	0	; () banked
 11378  004C66  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11379  004C68  0E54               	movlw	low _cdc_data_rx
 11380  004C6A  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11381  004C6C  0E04               	movlw	high _cdc_data_rx
 11382  004C6E  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11383  004C70  0E40               	movlw	64
 11384  004C72  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11385  004C74  0E02               	movlw	2
 11386  004C76  ECC2  F01E         	call	_USBTransferOnePacket
 11387  004C7A  C07D  F0B8         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11388  004C7E  C07E  F0B9         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11389                           
 11390                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11391  004C82  0E00               	movlw	0
 11392  004C84  0101               	movlb	1	; () banked
 11393  004C86  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11394  004C88  0E00               	movlw	0
 11395  004C8A  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11396                           
 11397                           ; BSR set to: 1
 11398                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11399  004C8C  0E00               	movlw	0
 11400  004C8E  0100               	movlb	0	; () banked
 11401  004C90  6FC1               	movwf	_cdc_trf_state& (0+255),b
 11402                           
 11403                           ; BSR set to: 0
 11404  004C92  0012               	return		;funcret
 11405  004C94                     __end_of_CDCInitEP:
 11406                           	opt stack 0
 11407                           tosu	equ	0xFFF
 11408                           tosh	equ	0xFFE
 11409                           tosl	equ	0xFFD
 11410                           pclath	equ	0xFFA
 11411                           tblptru	equ	0xFF8
 11412                           tblptrh	equ	0xFF7
 11413                           tblptrl	equ	0xFF6
 11414                           tablat	equ	0xFF5
 11415                           prodh	equ	0xFF4
 11416                           prodl	equ	0xFF3
 11417                           intcon	equ	0xFF2
 11418                           intcon2	equ	0xFF1
 11419                           intcon3	equ	0xFF0
 11420                           indf0	equ	0xFEF
 11421                           postinc0	equ	0xFEE
 11422                           plusw0	equ	0xFEB
 11423                           fsr0h	equ	0xFEA
 11424                           fsr0l	equ	0xFE9
 11425                           wreg	equ	0xFE8
 11426                           postinc1	equ	0xFE6
 11427                           postdec1	equ	0xFE5
 11428                           plusw1	equ	0xFE3
 11429                           fsr1h	equ	0xFE2
 11430                           fsr1l	equ	0xFE1
 11431                           indf2	equ	0xFDF
 11432                           postinc2	equ	0xFDE
 11433                           postdec2	equ	0xFDD
 11434                           plusw2	equ	0xFDB
 11435                           fsr2h	equ	0xFDA
 11436                           fsr2l	equ	0xFD9
 11437                           status	equ	0xFD8
 11438                           
 11439 ;; *************** function _USBEnableEndpoint *****************
 11440 ;; Defined at:
 11441 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11442 ;; Parameters:    Size  Location     Type
 11443 ;;  ep              1    wreg     unsigned char 
 11444 ;;  options         1   37[BANK0 ] unsigned char 
 11445 ;; Auto vars:     Size  Location     Type
 11446 ;;  ep              1   40[BANK0 ] unsigned char 
 11447 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11448 ;;		 -> UEP0(1), 
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  1    wreg      void 
 11451 ;; Registers used:
 11452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11458 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11459 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11461 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11462 ;;Total ram usage:        4 bytes
 11463 ;; Hardware stack levels used:    1
 11464 ;; Hardware stack levels required when called:   12
 11465 ;; This function calls:
 11466 ;;		_USBConfigureEndpoint
 11467 ;; This function is called by:
 11468 ;;		_CDCInitEP
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           	psect	text47
 11473  005538                     __ptext47:
 11474                           	opt stack 0
 11475  005538                     _USBEnableEndpoint:
 11476                           	opt stack 12
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;incstack = 0
 11480                           ;USBEnableEndpoint@ep stored from wreg
 11481  005538  0100               	movlb	0	; () banked
 11482  00553A  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11483                           
 11484                           ;usb_device.c: 898: unsigned char* p;
 11485                           ;usb_device.c: 902: if(options & 0x04)
 11486  00553C  0100               	movlb	0	; () banked
 11487  00553E  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11488  005540  D005               	goto	l1626
 11489                           
 11490                           ; BSR set to: 0
 11491                           ;usb_device.c: 903: {
 11492                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11493  005542  0E00               	movlw	0
 11494  005544  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11495  005546  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11496  005548  EC15  F022         	call	_USBConfigureEndpoint
 11497  00554C                     l1626:
 11498                           
 11499                           ;usb_device.c: 905: }
 11500                           ;usb_device.c: 906: if(options & 0x02)
 11501  00554C  0100               	movlb	0	; () banked
 11502  00554E  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11503  005550  D005               	goto	l1627
 11504                           
 11505                           ; BSR set to: 0
 11506                           ;usb_device.c: 907: {
 11507                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11508  005552  0E01               	movlw	1
 11509  005554  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11510  005556  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11511  005558  EC15  F022         	call	_USBConfigureEndpoint
 11512  00555C                     l1627:
 11513                           
 11514                           ;usb_device.c: 909: }
 11515                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11516  00555C  0100               	movlb	0	; () banked
 11517  00555E  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11518  005560  0D01               	mullw	1
 11519  005562  0E26               	movlw	38
 11520  005564  24F3               	addwf	prodl,w,c
 11521  005566  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11522  005568  0E0F               	movlw	15
 11523  00556A  20F4               	addwfc	prodh,w,c
 11524  00556C  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11525                           
 11526                           ; BSR set to: 0
 11527                           ;usb_device.c: 919: *p = options;
 11528  00556E  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11529  005572  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11530  005576  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11531                           
 11532                           ; BSR set to: 0
 11533  00557A  0012               	return		;funcret
 11534  00557C                     __end_of_USBEnableEndpoint:
 11535                           	opt stack 0
 11536                           tosu	equ	0xFFF
 11537                           tosh	equ	0xFFE
 11538                           tosl	equ	0xFFD
 11539                           pclath	equ	0xFFA
 11540                           tblptru	equ	0xFF8
 11541                           tblptrh	equ	0xFF7
 11542                           tblptrl	equ	0xFF6
 11543                           tablat	equ	0xFF5
 11544                           prodh	equ	0xFF4
 11545                           prodl	equ	0xFF3
 11546                           intcon	equ	0xFF2
 11547                           intcon2	equ	0xFF1
 11548                           intcon3	equ	0xFF0
 11549                           indf0	equ	0xFEF
 11550                           postinc0	equ	0xFEE
 11551                           plusw0	equ	0xFEB
 11552                           fsr0h	equ	0xFEA
 11553                           fsr0l	equ	0xFE9
 11554                           wreg	equ	0xFE8
 11555                           postinc1	equ	0xFE6
 11556                           postdec1	equ	0xFE5
 11557                           plusw1	equ	0xFE3
 11558                           fsr1h	equ	0xFE2
 11559                           fsr1l	equ	0xFE1
 11560                           indf2	equ	0xFDF
 11561                           postinc2	equ	0xFDE
 11562                           postdec2	equ	0xFDD
 11563                           plusw2	equ	0xFDB
 11564                           fsr2h	equ	0xFDA
 11565                           fsr2l	equ	0xFD9
 11566                           status	equ	0xFD8
 11567                           
 11568 ;; *************** function _USBConfigureEndpoint *****************
 11569 ;; Defined at:
 11570 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11571 ;; Parameters:    Size  Location     Type
 11572 ;;  EPNum           1    wreg     unsigned char 
 11573 ;;  direction       1   29[BANK0 ] unsigned char 
 11574 ;; Auto vars:     Size  Location     Type
 11575 ;;  EPNum           1   34[BANK0 ] unsigned char 
 11576 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 11577 ;;		 -> BDT(48), 
 11578 ;; Return value:  Size  Location     Type
 11579 ;;                  1    wreg      void 
 11580 ;; Registers used:
 11581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11582 ;; Tracked objects:
 11583 ;;		On entry : 0/0
 11584 ;;		On exit  : 0/0
 11585 ;;		Unchanged: 0/0
 11586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11587 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11588 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11589 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11590 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11591 ;;Total ram usage:        8 bytes
 11592 ;; Hardware stack levels used:    1
 11593 ;; Hardware stack levels required when called:   11
 11594 ;; This function calls:
 11595 ;;		Nothing
 11596 ;; This function is called by:
 11597 ;;		_USBEnableEndpoint
 11598 ;; This function uses a non-reentrant model
 11599 ;;
 11600                           
 11601                           	psect	text48
 11602  00442A                     __ptext48:
 11603                           	opt stack 0
 11604  00442A                     _USBConfigureEndpoint:
 11605                           	opt stack 12
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;incstack = 0
 11609                           ;USBConfigureEndpoint@EPNum stored from wreg
 11610  00442A  0100               	movlb	0	; () banked
 11611  00442C  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 11612                           
 11613                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 11614                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 11615  00442E  0E00               	movlw	0
 11616  004430  0100               	movlb	0	; () banked
 11617  004432  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 11618  004434  0E04               	movlw	4
 11619  004436  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 11620                           
 11621                           ; BSR set to: 0
 11622                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 11623  004438  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11624  00443A  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 11625  00443C  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 11626  00443E  90D8               	bcf	status,0,c
 11627  004440  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 11628  004442  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 11629  004444  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11630  004446  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 11631  004448  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 11632  00444A  90D8               	bcf	status,0,c
 11633  00444C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11634  00444E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11635  004450  90D8               	bcf	status,0,c
 11636  004452  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11637  004454  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11638  004456  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 11639  004458  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11640  00445A  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 11641  00445C  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11642  00445E  90D8               	bcf	status,0,c
 11643  004460  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11644  004462  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11645  004464  90D8               	bcf	status,0,c
 11646  004466  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11647  004468  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11648  00446A  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 11649  00446C  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 11650  00446E  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 11651  004470  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 11652                           
 11653                           ; BSR set to: 0
 11654                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 11655  004472  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11656  004476  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11657  00447A  9EDF               	bcf	indf2,7,c
 11658                           
 11659                           ; BSR set to: 0
 11660                           ;usb_device.c: 1575: if(direction == 0)
 11661  00447C  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11662  00447E  A4D8               	btfss	status,2,c
 11663  004480  D007               	goto	l1662
 11664                           
 11665                           ; BSR set to: 0
 11666                           ;usb_device.c: 1576: {
 11667                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 11668  004482  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11669  004484  0D02               	mullw	2
 11670  004486  0E0E               	movlw	low _pBDTEntryOut
 11671  004488  24F3               	addwf	prodl,w,c
 11672  00448A  6ED9               	movwf	fsr2l,c
 11673  00448C  0E03               	movlw	high _pBDTEntryOut
 11674  00448E  D006               	goto	L10
 11675  004490                     l1662:
 11676                           
 11677                           ; BSR set to: 0
 11678                           ;usb_device.c: 1579: else
 11679                           ;usb_device.c: 1580: {
 11680                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 11681                           
 11682                           ; BSR set to: 0
 11683  004490  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11684  004492  0D02               	mullw	2
 11685  004494  0EB2               	movlw	low _pBDTEntryIn
 11686  004496  24F3               	addwf	prodl,w,c
 11687  004498  6ED9               	movwf	fsr2l,c
 11688  00449A  0E00               	movlw	high _pBDTEntryIn
 11689  00449C                     L10:
 11690  00449C  20F4               	addwfc	prodh,w,c
 11691  00449E  6EDA               	movwf	fsr2h,c
 11692  0044A0  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 11693  0044A4  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 11694                           
 11695                           ; BSR set to: 0
 11696                           ;usb_device.c: 1582: }
 11697                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 11698                           
 11699                           ; BSR set to: 0
 11700  0044A8  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11701  0044AC  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11702  0044B0  9CDF               	bcf	indf2,6,c
 11703                           
 11704                           ; BSR set to: 0
 11705                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 11706  0044B2  EE20 F004          	lfsr	2,4
 11707  0044B6  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 11708  0044B8  26D9               	addwf	fsr2l,f,c
 11709  0044BA  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 11710  0044BC  22DA               	addwfc	fsr2h,f,c
 11711  0044BE  8CDF               	bsf	indf2,6,c
 11712                           
 11713                           ; BSR set to: 0
 11714  0044C0  0012               	return		;funcret
 11715  0044C2                     __end_of_USBConfigureEndpoint:
 11716                           	opt stack 0
 11717                           tosu	equ	0xFFF
 11718                           tosh	equ	0xFFE
 11719                           tosl	equ	0xFFD
 11720                           pclath	equ	0xFFA
 11721                           tblptru	equ	0xFF8
 11722                           tblptrh	equ	0xFF7
 11723                           tblptrl	equ	0xFF6
 11724                           tablat	equ	0xFF5
 11725                           prodh	equ	0xFF4
 11726                           prodl	equ	0xFF3
 11727                           intcon	equ	0xFF2
 11728                           intcon2	equ	0xFF1
 11729                           intcon3	equ	0xFF0
 11730                           indf0	equ	0xFEF
 11731                           postinc0	equ	0xFEE
 11732                           plusw0	equ	0xFEB
 11733                           fsr0h	equ	0xFEA
 11734                           fsr0l	equ	0xFE9
 11735                           wreg	equ	0xFE8
 11736                           postinc1	equ	0xFE6
 11737                           postdec1	equ	0xFE5
 11738                           plusw1	equ	0xFE3
 11739                           fsr1h	equ	0xFE2
 11740                           fsr1l	equ	0xFE1
 11741                           indf2	equ	0xFDF
 11742                           postinc2	equ	0xFDE
 11743                           postdec2	equ	0xFDD
 11744                           plusw2	equ	0xFDB
 11745                           fsr2h	equ	0xFDA
 11746                           fsr2l	equ	0xFD9
 11747                           status	equ	0xFD8
 11748                           
 11749 ;; *************** function _USBCtrlTrfOutHandler *****************
 11750 ;; Defined at:
 11751 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11752 ;; Parameters:    Size  Location     Type
 11753 ;;		None
 11754 ;; Auto vars:     Size  Location     Type
 11755 ;;		None
 11756 ;; Return value:  Size  Location     Type
 11757 ;;                  1    wreg      void 
 11758 ;; Registers used:
 11759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11760 ;; Tracked objects:
 11761 ;;		On entry : 0/0
 11762 ;;		On exit  : 0/0
 11763 ;;		Unchanged: 0/0
 11764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11769 ;;Total ram usage:        0 bytes
 11770 ;; Hardware stack levels used:    1
 11771 ;; Hardware stack levels required when called:   13
 11772 ;; This function calls:
 11773 ;;		_USBCtrlTrfRxService
 11774 ;; This function is called by:
 11775 ;;		_USBCtrlEPService
 11776 ;; This function uses a non-reentrant model
 11777 ;;
 11778                           
 11779                           	psect	text49
 11780  004D00                     __ptext49:
 11781                           	opt stack 0
 11782  004D00                     _USBCtrlTrfOutHandler:
 11783                           	opt stack 12
 11784                           
 11785                           ;usb_device.c: 2557: if(controlTransferState == 2)
 11786                           
 11787                           ; BSR set to: 0
 11788                           ;incstack = 0
 11789  004D00  0E02               	movlw	2
 11790  004D02  0100               	movlb	0	; () banked
 11791  004D04  19C9               	xorwf	_controlTransferState& (0+255),w,b
 11792  004D06  A4D8               	btfss	status,2,c
 11793  004D08  D003               	goto	l1768
 11794                           
 11795                           ; BSR set to: 0
 11796                           ;usb_device.c: 2558: {
 11797                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 11798  004D0A  EC17  F015         	call	_USBCtrlTrfRxService	;wreg free
 11799                           
 11800                           ;usb_device.c: 2560: }
 11801  004D0E  0012               	return	
 11802  004D10                     l1768:
 11803                           
 11804                           ;usb_device.c: 2561: else
 11805                           ;usb_device.c: 2562: {
 11806                           ;usb_device.c: 2565: controlTransferState = 0;
 11807  004D10  0E00               	movlw	0
 11808  004D12  0100               	movlb	0	; () banked
 11809  004D14  6FC9               	movwf	_controlTransferState& (0+255),b
 11810                           
 11811                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 11812  004D16  0101               	movlb	1	; () banked
 11813  004D18  51E6               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 11814  004D1A  A4D8               	btfss	status,2,c
 11815  004D1C  D020               	goto	l1770
 11816                           
 11817                           ; BSR set to: 1
 11818                           ;usb_device.c: 2573: {
 11819                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 11820  004D1E  0100               	movlb	0	; () banked
 11821  004D20  EE20 F001          	lfsr	2,1
 11822  004D24  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11823  004D26  26D9               	addwf	fsr2l,f,c
 11824  004D28  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11825  004D2A  22DA               	addwfc	fsr2h,f,c
 11826  004D2C  0E08               	movlw	8
 11827  004D2E  6EDF               	movwf	indf2,c
 11828                           
 11829                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 11830  004D30  EE20 F002          	lfsr	2,2
 11831  004D34  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11832  004D36  26D9               	addwf	fsr2l,f,c
 11833  004D38  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11834  004D3A  22DA               	addwfc	fsr2h,f,c
 11835  004D3C  0E30               	movlw	48
 11836  004D3E  6EDE               	movwf	postinc2,c
 11837  004D40  0E04               	movlw	4
 11838  004D42  6EDD               	movwf	postdec2,c
 11839                           
 11840                           ; BSR set to: 0
 11841                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 11842  004D44  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11843  004D48  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11844  004D4C  0E0C               	movlw	12
 11845  004D4E  6EDF               	movwf	indf2,c
 11846                           
 11847                           ; BSR set to: 0
 11848                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11849  004D50  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11850  004D54  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11851  004D58  0E00               	movlw	0
 11852  004D5A  8EDB               	bsf	plusw2,7,c
 11853                           
 11854                           ;usb_device.c: 2578: }
 11855  004D5C  0012               	return	
 11856  004D5E                     l1770:
 11857                           
 11858                           ;usb_device.c: 2579: else
 11859                           ;usb_device.c: 2580: {
 11860                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 11861                           
 11862                           ; BSR set to: 0
 11863  004D5E  0E00               	movlw	0
 11864  004D60  0101               	movlb	1	; () banked
 11865  004D62  6FE6               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 11866                           
 11867                           ; BSR set to: 1
 11868  004D64  0012               	return	
 11869  004D66                     __end_of_USBCtrlTrfOutHandler:
 11870                           	opt stack 0
 11871                           tosu	equ	0xFFF
 11872                           tosh	equ	0xFFE
 11873                           tosl	equ	0xFFD
 11874                           pclath	equ	0xFFA
 11875                           tblptru	equ	0xFF8
 11876                           tblptrh	equ	0xFF7
 11877                           tblptrl	equ	0xFF6
 11878                           tablat	equ	0xFF5
 11879                           prodh	equ	0xFF4
 11880                           prodl	equ	0xFF3
 11881                           intcon	equ	0xFF2
 11882                           intcon2	equ	0xFF1
 11883                           intcon3	equ	0xFF0
 11884                           indf0	equ	0xFEF
 11885                           postinc0	equ	0xFEE
 11886                           plusw0	equ	0xFEB
 11887                           fsr0h	equ	0xFEA
 11888                           fsr0l	equ	0xFE9
 11889                           wreg	equ	0xFE8
 11890                           postinc1	equ	0xFE6
 11891                           postdec1	equ	0xFE5
 11892                           plusw1	equ	0xFE3
 11893                           fsr1h	equ	0xFE2
 11894                           fsr1l	equ	0xFE1
 11895                           indf2	equ	0xFDF
 11896                           postinc2	equ	0xFDE
 11897                           postdec2	equ	0xFDD
 11898                           plusw2	equ	0xFDB
 11899                           fsr2h	equ	0xFDA
 11900                           fsr2l	equ	0xFD9
 11901                           status	equ	0xFD8
 11902                           
 11903 ;; *************** function _USBCtrlTrfRxService *****************
 11904 ;; Defined at:
 11905 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11906 ;; Parameters:    Size  Location     Type
 11907 ;;		None
 11908 ;; Auto vars:     Size  Location     Type
 11909 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 11910 ;;  i               1   29[BANK0 ] unsigned char 
 11911 ;; Return value:  Size  Location     Type
 11912 ;;                  1    wreg      void 
 11913 ;; Registers used:
 11914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11915 ;; Tracked objects:
 11916 ;;		On entry : 0/0
 11917 ;;		On exit  : 0/0
 11918 ;;		Unchanged: 0/0
 11919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11921 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11923 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11924 ;;Total ram usage:        2 bytes
 11925 ;; Hardware stack levels used:    1
 11926 ;; Hardware stack levels required when called:   12
 11927 ;; This function calls:
 11928 ;;		_USBCtrlEPAllowStatusStage
 11929 ;; This function is called by:
 11930 ;;		_USBCtrlTrfOutHandler
 11931 ;; This function uses a non-reentrant model
 11932 ;;
 11933                           
 11934                           	psect	text50
 11935  002A2E                     __ptext50:
 11936                           	opt stack 0
 11937  002A2E                     _USBCtrlTrfRxService:
 11938                           	opt stack 12
 11939                           
 11940                           ;usb_device.c: 1872: uint8_t byteToRead;
 11941                           ;usb_device.c: 1873: uint8_t i;
 11942                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 11943                           
 11944                           ;incstack = 0
 11945  002A2E  0100               	movlb	0	; () banked
 11946  002A30  EE20 F001          	lfsr	2,1
 11947  002A34  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 11948  002A36  26D9               	addwf	fsr2l,f,c
 11949  002A38  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 11950  002A3A  22DA               	addwfc	fsr2h,f,c
 11951  002A3C  50DF               	movf	indf2,w,c
 11952  002A3E  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 11953                           
 11954                           ; BSR set to: 0
 11955                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 11956  002A40  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 11957  002A42  0101               	movlb	1	; () banked
 11958  002A44  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 11959  002A46  0E00               	movlw	0
 11960  002A48  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 11961  002A4A  A0D8               	btfss	status,0,c
 11962                           
 11963                           ; BSR set to: 1
 11964                           ;usb_device.c: 1884: {
 11965                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 11966  002A4C  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 11967                           
 11968                           ; BSR set to: 1
 11969                           ;usb_device.c: 1886: }
 11970                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 11971                           
 11972                           ; BSR set to: 1
 11973  002A50  0100               	movlb	0	; () banked
 11974  002A52  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 11975  002A54  0101               	movlb	1	; () banked
 11976  002A56  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 11977  002A58  0E00               	movlw	0
 11978  002A5A  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 11979                           
 11980                           ; BSR set to: 1
 11981                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 11982  002A5C  0E00               	movlw	0
 11983  002A5E  0100               	movlb	0	; () banked
 11984  002A60  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 11985  002A62  D013               	goto	l1696
 11986  002A64                     
 11987                           ; BSR set to: 0
 11988                           ;usb_device.c: 1893: {
 11989                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 11990                           
 11991                           ; BSR set to: 0
 11992  002A64  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 11993  002A66  0D01               	mullw	1
 11994  002A68  0E38               	movlw	56
 11995  002A6A  24F3               	addwf	prodl,w,c
 11996  002A6C  6ED9               	movwf	fsr2l,c
 11997  002A6E  0E04               	movlw	4
 11998  002A70  20F4               	addwfc	prodh,w,c
 11999  002A72  6EDA               	movwf	fsr2h,c
 12000  002A74  C1C9  FFE1         	movff	_outPipes,fsr1l
 12001  002A78  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12002  002A7C  CFDF FFE7          	movff	indf2,indf1
 12003                           
 12004                           ; BSR set to: 0
 12005  002A80  0101               	movlb	1	; () banked
 12006  002A82  4BC9               	infsnz	_outPipes& (0+255),f,b
 12007  002A84  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12008                           
 12009                           ; BSR set to: 1
 12010  002A86  0100               	movlb	0	; () banked
 12011  002A88  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12012  002A8A                     l1696:
 12013                           
 12014                           ; BSR set to: 0
 12015                           
 12016                           ; BSR set to: 0
 12017  002A8A  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12018  002A8C  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12019  002A8E  A0D8               	btfss	status,0,c
 12020  002A90  D7E9               	goto	l1697
 12021                           
 12022                           ; BSR set to: 0
 12023                           ;usb_device.c: 1895: }
 12024                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12025                           
 12026                           ; BSR set to: 0
 12027  002A92  0101               	movlb	1	; () banked
 12028  002A94  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12029  002A96  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12030  002A98  B4D8               	btfsc	status,2,c
 12031  002A9A  D033               	goto	l1699
 12032                           
 12033                           ; BSR set to: 1
 12034                           ;usb_device.c: 1900: {
 12035                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12036  002A9C  0100               	movlb	0	; () banked
 12037  002A9E  EE20 F001          	lfsr	2,1
 12038  002AA2  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12039  002AA4  26D9               	addwf	fsr2l,f,c
 12040  002AA6  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12041  002AA8  22DA               	addwfc	fsr2h,f,c
 12042  002AAA  0E08               	movlw	8
 12043  002AAC  6EDF               	movwf	indf2,c
 12044                           
 12045                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12046  002AAE  EE20 F002          	lfsr	2,2
 12047  002AB2  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12048  002AB4  26D9               	addwf	fsr2l,f,c
 12049  002AB6  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12050  002AB8  22DA               	addwfc	fsr2h,f,c
 12051  002ABA  0E38               	movlw	56
 12052  002ABC  6EDE               	movwf	postinc2,c
 12053  002ABE  0E04               	movlw	4
 12054  002AC0  6EDD               	movwf	postdec2,c
 12055                           
 12056                           ; BSR set to: 0
 12057                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12058  002AC2  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12059  002AC6  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12060  002ACA  BCDF               	btfsc	indf2,6,c
 12061  002ACC  D00D               	goto	l1700
 12062                           
 12063                           ; BSR set to: 0
 12064                           ;usb_device.c: 1904: {
 12065                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12066  002ACE  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12067  002AD2  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12068  002AD6  0E48               	movlw	72
 12069  002AD8  6EDF               	movwf	indf2,c
 12070                           
 12071                           ; BSR set to: 0
 12072                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12073  002ADA  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12074  002ADE  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12075  002AE2  0E00               	movlw	0
 12076  002AE4  8EDB               	bsf	plusw2,7,c
 12077                           
 12078                           ;usb_device.c: 1907: }
 12079  002AE6  0012               	return	
 12080  002AE8                     l1700:
 12081                           
 12082                           ; BSR set to: 0
 12083                           ;usb_device.c: 1908: else
 12084                           ;usb_device.c: 1909: {
 12085                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12086                           
 12087                           ; BSR set to: 0
 12088  002AE8  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12089  002AEC  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12090  002AF0  0E08               	movlw	8
 12091  002AF2  6EDF               	movwf	indf2,c
 12092                           
 12093                           ; BSR set to: 0
 12094                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12095  002AF4  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12096  002AF8  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12097  002AFC  0E00               	movlw	0
 12098  002AFE  8EDB               	bsf	plusw2,7,c
 12099                           
 12100                           ; BSR set to: 0
 12101                           ;usb_device.c: 1912: }
 12102                           ;usb_device.c: 1913: }
 12103  002B00  0012               	return	
 12104  002B02                     l1699:
 12105                           
 12106                           ;usb_device.c: 1914: else
 12107                           ;usb_device.c: 1915: {
 12108                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12109                           
 12110                           ; BSR set to: 0
 12111  002B02  0100               	movlb	0	; () banked
 12112  002B04  EE20 F001          	lfsr	2,1
 12113  002B08  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12114  002B0A  26D9               	addwf	fsr2l,f,c
 12115  002B0C  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12116  002B0E  22DA               	addwfc	fsr2h,f,c
 12117  002B10  0E08               	movlw	8
 12118  002B12  6EDF               	movwf	indf2,c
 12119                           
 12120                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12121  002B14  EE20 F002          	lfsr	2,2
 12122  002B18  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12123  002B1A  26D9               	addwf	fsr2l,f,c
 12124  002B1C  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12125  002B1E  22DA               	addwfc	fsr2h,f,c
 12126  002B20  0E30               	movlw	48
 12127  002B22  6EDE               	movwf	postinc2,c
 12128  002B24  0E04               	movlw	4
 12129  002B26  6EDD               	movwf	postdec2,c
 12130                           
 12131                           ; BSR set to: 0
 12132                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12133  002B28  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12134  002B2C  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12135  002B30  0E04               	movlw	4
 12136  002B32  6EDF               	movwf	indf2,c
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12140  002B34  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12141  002B38  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12142  002B3C  0E00               	movlw	0
 12143  002B3E  8EDB               	bsf	plusw2,7,c
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;usb_device.c: 1944: }
 12147                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12148                           
 12149                           ; BSR set to: 0
 12150  002B40  0101               	movlb	1	; () banked
 12151  002B42  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12152                           
 12153                           ; BSR set to: 1
 12154                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12155  002B44  0100               	movlb	0	; () banked
 12156  002B46  51C6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12157  002B48  A4D8               	btfss	status,2,c
 12158  002B4A  0012               	return	
 12159                           
 12160                           ; BSR set to: 0
 12161                           ;usb_device.c: 1960: {
 12162                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12163  002B4C  ECA3  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12164  002B50  0012               	return	
 12165  002B52                     __end_of_USBCtrlTrfRxService:
 12166                           	opt stack 0
 12167                           tosu	equ	0xFFF
 12168                           tosh	equ	0xFFE
 12169                           tosl	equ	0xFFD
 12170                           pclath	equ	0xFFA
 12171                           tblptru	equ	0xFF8
 12172                           tblptrh	equ	0xFF7
 12173                           tblptrl	equ	0xFF6
 12174                           tablat	equ	0xFF5
 12175                           prodh	equ	0xFF4
 12176                           prodl	equ	0xFF3
 12177                           intcon	equ	0xFF2
 12178                           intcon2	equ	0xFF1
 12179                           intcon3	equ	0xFF0
 12180                           indf0	equ	0xFEF
 12181                           postinc0	equ	0xFEE
 12182                           plusw0	equ	0xFEB
 12183                           fsr0h	equ	0xFEA
 12184                           fsr0l	equ	0xFE9
 12185                           wreg	equ	0xFE8
 12186                           indf1	equ	0xFE7
 12187                           postinc1	equ	0xFE6
 12188                           postdec1	equ	0xFE5
 12189                           plusw1	equ	0xFE3
 12190                           fsr1h	equ	0xFE2
 12191                           fsr1l	equ	0xFE1
 12192                           indf2	equ	0xFDF
 12193                           postinc2	equ	0xFDE
 12194                           postdec2	equ	0xFDD
 12195                           plusw2	equ	0xFDB
 12196                           fsr2h	equ	0xFDA
 12197                           fsr2l	equ	0xFD9
 12198                           status	equ	0xFD8
 12199                           
 12200 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12201 ;; Defined at:
 12202 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12203 ;; Parameters:    Size  Location     Type
 12204 ;;		None
 12205 ;; Auto vars:     Size  Location     Type
 12206 ;;		None
 12207 ;; Return value:  Size  Location     Type
 12208 ;;                  1    wreg      void 
 12209 ;; Registers used:
 12210 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12211 ;; Tracked objects:
 12212 ;;		On entry : 0/0
 12213 ;;		On exit  : 0/0
 12214 ;;		Unchanged: 0/0
 12215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12220 ;;Total ram usage:        0 bytes
 12221 ;; Hardware stack levels used:    1
 12222 ;; Hardware stack levels required when called:   11
 12223 ;; This function calls:
 12224 ;;		Nothing
 12225 ;; This function is called by:
 12226 ;;		_USBDeviceTasks
 12227 ;;		_USBCtrlEPServiceComplete
 12228 ;;		_USBCtrlTrfRxService
 12229 ;; This function uses a non-reentrant model
 12230 ;;
 12231                           
 12232                           	psect	text51
 12233  003746                     __ptext51:
 12234                           	opt stack 0
 12235  003746                     _USBCtrlEPAllowStatusStage:
 12236                           	opt stack 12
 12237                           
 12238                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12239                           
 12240                           ;incstack = 0
 12241  003746  0100               	movlb	0	; () banked
 12242  003748  51C5               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 12243  00374A  A4D8               	btfss	status,2,c
 12244  00374C  0012               	return	
 12245                           
 12246                           ; BSR set to: 0
 12247                           ;usb_device.c: 1442: {
 12248                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12249  00374E  0E01               	movlw	1
 12250  003750  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12251                           
 12252                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12253  003752  51C4               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 12254  003754  A4D8               	btfss	status,2,c
 12255  003756  0012               	return	
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;usb_device.c: 1445: {
 12259                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12260  003758  0E01               	movlw	1
 12261  00375A  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12262                           
 12263                           ; BSR set to: 0
 12264                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12265  00375C  0E02               	movlw	2
 12266  00375E  19C9               	xorwf	_controlTransferState& (0+255),w,b
 12267  003760  A4D8               	btfss	status,2,c
 12268  003762  D015               	goto	l1650
 12269                           
 12270                           ; BSR set to: 0
 12271                           ;usb_device.c: 1451: {
 12272                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12273  003764  EE20 F001          	lfsr	2,1
 12274  003768  51B2               	movf	_pBDTEntryIn& (0+255),w,b
 12275  00376A  26D9               	addwf	fsr2l,f,c
 12276  00376C  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12277  00376E  22DA               	addwfc	fsr2h,f,c
 12278  003770  0E00               	movlw	0
 12279  003772  6EDF               	movwf	indf2,c
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12283  003774  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12284  003778  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12285  00377C  0E48               	movlw	72
 12286  00377E  6EDF               	movwf	indf2,c
 12287                           
 12288                           ; BSR set to: 0
 12289                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12290  003780  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12291  003784  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12292  003788  0E00               	movlw	0
 12293  00378A  8EDB               	bsf	plusw2,7,c
 12294                           
 12295                           ;usb_device.c: 1455: }
 12296  00378C  0012               	return	
 12297  00378E                     l1650:
 12298                           
 12299                           ; BSR set to: 0
 12300                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12301                           
 12302                           ; BSR set to: 0
 12303  00378E  05C9               	decf	_controlTransferState& (0+255),w,b
 12304  003790  A4D8               	btfss	status,2,c
 12305  003792  0012               	return	
 12306                           
 12307                           ; BSR set to: 0
 12308                           ;usb_device.c: 1457: {
 12309                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12310  003794  0E00               	movlw	0
 12311  003796  0101               	movlb	1	; () banked
 12312  003798  6FE6               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12313                           
 12314                           ; BSR set to: 1
 12315                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12316  00379A  0100               	movlb	0	; () banked
 12317  00379C  EE20 F001          	lfsr	2,1
 12318  0037A0  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12319  0037A2  26D9               	addwf	fsr2l,f,c
 12320  0037A4  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12321  0037A6  22DA               	addwfc	fsr2h,f,c
 12322  0037A8  0E08               	movlw	8
 12323  0037AA  6EDF               	movwf	indf2,c
 12324                           
 12325                           ; BSR set to: 0
 12326                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12327  0037AC  EE20 F002          	lfsr	2,2
 12328  0037B0  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12329  0037B2  26D9               	addwf	fsr2l,f,c
 12330  0037B4  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12331  0037B6  22DA               	addwfc	fsr2h,f,c
 12332  0037B8  0E30               	movlw	48
 12333  0037BA  6EDE               	movwf	postinc2,c
 12334  0037BC  0E04               	movlw	4
 12335  0037BE  6EDD               	movwf	postdec2,c
 12336                           
 12337                           ; BSR set to: 0
 12338                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12339  0037C0  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12340  0037C4  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12341  0037C8  0E04               	movlw	4
 12342  0037CA  6EDF               	movwf	indf2,c
 12343                           
 12344                           ; BSR set to: 0
 12345                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12346  0037CC  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12347  0037D0  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12348  0037D4  0E00               	movlw	0
 12349  0037D6  8EDB               	bsf	plusw2,7,c
 12350                           
 12351                           ; BSR set to: 0
 12352                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12353  0037D8  0E01               	movlw	1
 12354  0037DA  0101               	movlb	1	; () banked
 12355  0037DC  6FE6               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12356                           
 12357                           ; BSR set to: 1
 12358                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12359  0037DE  0100               	movlb	0	; () banked
 12360  0037E0  EE20 F001          	lfsr	2,1
 12361  0037E4  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12362  0037E6  26D9               	addwf	fsr2l,f,c
 12363  0037E8  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12364  0037EA  22DA               	addwfc	fsr2h,f,c
 12365  0037EC  0E08               	movlw	8
 12366  0037EE  6EDF               	movwf	indf2,c
 12367                           
 12368                           ; BSR set to: 0
 12369                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12370  0037F0  EE20 F002          	lfsr	2,2
 12371  0037F4  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12372  0037F6  26D9               	addwf	fsr2l,f,c
 12373  0037F8  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12374  0037FA  22DA               	addwfc	fsr2h,f,c
 12375  0037FC  0E30               	movlw	48
 12376  0037FE  6EDE               	movwf	postinc2,c
 12377  003800  0E04               	movlw	4
 12378  003802  6EDD               	movwf	postdec2,c
 12379                           
 12380                           ; BSR set to: 0
 12381                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12382  003804  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12383  003808  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12384  00380C  0E80               	movlw	128
 12385  00380E  6EDF               	movwf	indf2,c
 12386                           
 12387                           ; BSR set to: 0
 12388                           
 12389                           ; BSR set to: 0
 12390                           
 12391                           ; BSR set to: 0
 12392  003810  0012               	return	
 12393  003812                     __end_of_USBCtrlEPAllowStatusStage:
 12394                           	opt stack 0
 12395                           tosu	equ	0xFFF
 12396                           tosh	equ	0xFFE
 12397                           tosl	equ	0xFFD
 12398                           pclath	equ	0xFFA
 12399                           tblptru	equ	0xFF8
 12400                           tblptrh	equ	0xFF7
 12401                           tblptrl	equ	0xFF6
 12402                           tablat	equ	0xFF5
 12403                           prodh	equ	0xFF4
 12404                           prodl	equ	0xFF3
 12405                           intcon	equ	0xFF2
 12406                           intcon2	equ	0xFF1
 12407                           intcon3	equ	0xFF0
 12408                           indf0	equ	0xFEF
 12409                           postinc0	equ	0xFEE
 12410                           plusw0	equ	0xFEB
 12411                           fsr0h	equ	0xFEA
 12412                           fsr0l	equ	0xFE9
 12413                           wreg	equ	0xFE8
 12414                           indf1	equ	0xFE7
 12415                           postinc1	equ	0xFE6
 12416                           postdec1	equ	0xFE5
 12417                           plusw1	equ	0xFE3
 12418                           fsr1h	equ	0xFE2
 12419                           fsr1l	equ	0xFE1
 12420                           indf2	equ	0xFDF
 12421                           postinc2	equ	0xFDE
 12422                           postdec2	equ	0xFDD
 12423                           plusw2	equ	0xFDB
 12424                           fsr2h	equ	0xFDA
 12425                           fsr2l	equ	0xFD9
 12426                           status	equ	0xFD8
 12427                           
 12428 ;; *************** function _USBCtrlTrfInHandler *****************
 12429 ;; Defined at:
 12430 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12431 ;; Parameters:    Size  Location     Type
 12432 ;;		None
 12433 ;; Auto vars:     Size  Location     Type
 12434 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  1    wreg      void 
 12437 ;; Registers used:
 12438 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12439 ;; Tracked objects:
 12440 ;;		On entry : 0/0
 12441 ;;		On exit  : 0/0
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12447 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12448 ;;Total ram usage:        1 bytes
 12449 ;; Hardware stack levels used:    1
 12450 ;; Hardware stack levels required when called:   12
 12451 ;; This function calls:
 12452 ;;		_USBCtrlTrfTxService
 12453 ;; This function is called by:
 12454 ;;		_USBCtrlEPService
 12455 ;; This function uses a non-reentrant model
 12456 ;;
 12457                           
 12458                           	psect	text52
 12459  003CC2                     __ptext52:
 12460                           	opt stack 0
 12461  003CC2                     _USBCtrlTrfInHandler:
 12462                           	opt stack 13
 12463                           
 12464                           ;usb_device.c: 2611: uint8_t lastDTS;
 12465                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12466                           
 12467                           ; BSR set to: 0
 12468                           ;incstack = 0
 12469  003CC2  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12470  003CC6  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12471  003CCA  0100               	movlb	0	; () banked
 12472  003CCC  0E00               	movlw	0
 12473  003CCE  BCDF               	btfsc	indf2,6,c
 12474  003CD0  0E01               	movlw	1
 12475  003CD2  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12476                           
 12477                           ; BSR set to: 0
 12478                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12479  003CD4  0E04               	movlw	4
 12480  003CD6  1BB2               	xorwf	_pBDTEntryIn& (0+255),f,b
 12481                           
 12482                           ; BSR set to: 0
 12483                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12484  003CD8  0E08               	movlw	8
 12485  003CDA  19CB               	xorwf	_USBDeviceState& (0+255),w,b
 12486  003CDC  A4D8               	btfss	status,2,c
 12487  003CDE  D00D               	goto	l1777
 12488                           
 12489                           ; BSR set to: 0
 12490                           ;usb_device.c: 2622: {
 12491                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12492  003CE0  0104               	movlb	4	; () banked
 12493  003CE2  5132               	movf	50,w,b	;volatile
 12494  003CE4  0B7F               	andlw	127
 12495  003CE6  010F               	movlb	15	; () banked
 12496  003CE8  6F38               	movwf	56,b	;volatile
 12497                           
 12498                           ; BSR set to: 15
 12499                           ;usb_device.c: 2624: if(UADDR != 0u)
 12500  003CEA  5138               	movf	56,w,b	;volatile
 12501  003CEC  B4D8               	btfsc	status,2,c
 12502  003CEE  D002               	goto	l1776
 12503                           
 12504                           ; BSR set to: 15
 12505                           ;usb_device.c: 2625: {
 12506                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12507  003CF0  0E10               	movlw	16
 12508  003CF2  D001               	goto	L11
 12509  003CF4                     l1776:
 12510                           
 12511                           ;usb_device.c: 2628: else
 12512                           ;usb_device.c: 2629: {
 12513                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12514                           
 12515                           ; BSR set to: 0
 12516  003CF4  0E04               	movlw	4
 12517  003CF6                     L11:
 12518  003CF6  0100               	movlb	0	; () banked
 12519  003CF8  6FCB               	movwf	_USBDeviceState& (0+255),b
 12520  003CFA                     l1777:
 12521                           
 12522                           ; BSR set to: 0
 12523                           ;usb_device.c: 2631: }
 12524                           ;usb_device.c: 2632: }
 12525                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12526                           
 12527                           ; BSR set to: 0
 12528                           
 12529                           ; BSR set to: 0
 12530  003CFA  05C9               	decf	_controlTransferState& (0+255),w,b
 12531  003CFC  A4D8               	btfss	status,2,c
 12532  003CFE  D03B               	goto	l1778
 12533                           
 12534                           ; BSR set to: 0
 12535                           ;usb_device.c: 2636: {
 12536                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12537  003D00  EE20 F002          	lfsr	2,2
 12538  003D04  51B2               	movf	_pBDTEntryIn& (0+255),w,b
 12539  003D06  26D9               	addwf	fsr2l,f,c
 12540  003D08  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12541  003D0A  22DA               	addwfc	fsr2h,f,c
 12542  003D0C  0E38               	movlw	56
 12543  003D0E  6EDE               	movwf	postinc2,c
 12544  003D10  0E04               	movlw	4
 12545  003D12  6EDD               	movwf	postdec2,c
 12546                           
 12547                           ; BSR set to: 0
 12548                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12549  003D14  ECFE  F019         	call	_USBCtrlTrfTxService	;wreg free
 12550                           
 12551                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12552  003D18  0E02               	movlw	2
 12553  003D1A  0100               	movlb	0	; () banked
 12554  003D1C  19CA               	xorwf	_shortPacketStatus& (0+255),w,b
 12555  003D1E  A4D8               	btfss	status,2,c
 12556  003D20  D00D               	goto	l1779
 12557                           
 12558                           ; BSR set to: 0
 12559                           ;usb_device.c: 2645: {
 12560                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12561  003D22  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12562  003D26  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12563  003D2A  0E04               	movlw	4
 12564  003D2C  6EDF               	movwf	indf2,c
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12568  003D2E  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12569  003D32  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12570  003D36  0E00               	movlw	0
 12571  003D38  8EDB               	bsf	plusw2,7,c
 12572                           
 12573                           ;usb_device.c: 2650: }
 12574  003D3A  0012               	return	
 12575  003D3C                     l1779:
 12576                           
 12577                           ; BSR set to: 0
 12578                           ;usb_device.c: 2651: else
 12579                           ;usb_device.c: 2652: {
 12580                           ;usb_device.c: 2653: if(lastDTS == 0)
 12581                           
 12582                           ; BSR set to: 0
 12583  003D3C  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 12584  003D3E  A4D8               	btfss	status,2,c
 12585  003D40  D00D               	goto	l1781
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;usb_device.c: 2654: {
 12589                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12590  003D42  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12591  003D46  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12592  003D4A  0E48               	movlw	72
 12593  003D4C  6EDF               	movwf	indf2,c
 12594                           
 12595                           ; BSR set to: 0
 12596                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12597  003D4E  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12598  003D52  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12599  003D56  0E00               	movlw	0
 12600  003D58  8EDB               	bsf	plusw2,7,c
 12601                           
 12602                           ;usb_device.c: 2657: }
 12603  003D5A  0012               	return	
 12604  003D5C                     l1781:
 12605                           
 12606                           ; BSR set to: 0
 12607                           ;usb_device.c: 2658: else
 12608                           ;usb_device.c: 2659: {
 12609                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 12610                           
 12611                           ; BSR set to: 0
 12612  003D5C  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12613  003D60  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12614  003D64  0E08               	movlw	8
 12615  003D66  6EDF               	movwf	indf2,c
 12616                           
 12617                           ; BSR set to: 0
 12618                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12619  003D68  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12620  003D6C  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12621  003D70  0E00               	movlw	0
 12622  003D72  8EDB               	bsf	plusw2,7,c
 12623                           
 12624                           ; BSR set to: 0
 12625                           ;usb_device.c: 2662: }
 12626                           ;usb_device.c: 2663: }
 12627                           ;usb_device.c: 2664: }
 12628                           
 12629                           ; BSR set to: 0
 12630  003D74  0012               	return	
 12631  003D76                     l1778:
 12632                           
 12633                           ; BSR set to: 0
 12634                           ;usb_device.c: 2665: else
 12635                           ;usb_device.c: 2666: {
 12636                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 12637  003D76  0101               	movlb	1	; () banked
 12638  003D78  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 12639                           
 12640                           ; BSR set to: 1
 12641                           ;usb_device.c: 2675: }
 12642                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 12643                           
 12644                           ; BSR set to: 1
 12645  003D7A  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12646                           
 12647                           ; BSR set to: 1
 12648                           ;usb_device.c: 2677: }
 12649                           ;usb_device.c: 2679: controlTransferState = 0;
 12650                           
 12651                           ; BSR set to: 1
 12652  003D7C  0E00               	movlw	0
 12653  003D7E  0100               	movlb	0	; () banked
 12654  003D80  6FC9               	movwf	_controlTransferState& (0+255),b
 12655  003D82  0012               	return	
 12656  003D84                     __end_of_USBCtrlTrfInHandler:
 12657                           	opt stack 0
 12658                           tosu	equ	0xFFF
 12659                           tosh	equ	0xFFE
 12660                           tosl	equ	0xFFD
 12661                           pclath	equ	0xFFA
 12662                           tblptru	equ	0xFF8
 12663                           tblptrh	equ	0xFF7
 12664                           tblptrl	equ	0xFF6
 12665                           tablat	equ	0xFF5
 12666                           prodh	equ	0xFF4
 12667                           prodl	equ	0xFF3
 12668                           intcon	equ	0xFF2
 12669                           intcon2	equ	0xFF1
 12670                           intcon3	equ	0xFF0
 12671                           indf0	equ	0xFEF
 12672                           postinc0	equ	0xFEE
 12673                           plusw0	equ	0xFEB
 12674                           fsr0h	equ	0xFEA
 12675                           fsr0l	equ	0xFE9
 12676                           wreg	equ	0xFE8
 12677                           indf1	equ	0xFE7
 12678                           postinc1	equ	0xFE6
 12679                           postdec1	equ	0xFE5
 12680                           plusw1	equ	0xFE3
 12681                           fsr1h	equ	0xFE2
 12682                           fsr1l	equ	0xFE1
 12683                           indf2	equ	0xFDF
 12684                           postinc2	equ	0xFDE
 12685                           postdec2	equ	0xFDD
 12686                           plusw2	equ	0xFDB
 12687                           fsr2h	equ	0xFDA
 12688                           fsr2l	equ	0xFD9
 12689                           status	equ	0xFD8
 12690                           
 12691 ;; *************** function _USBCtrlTrfTxService *****************
 12692 ;; Defined at:
 12693 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12694 ;; Parameters:    Size  Location     Type
 12695 ;;		None
 12696 ;; Auto vars:     Size  Location     Type
 12697 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 12698 ;; Return value:  Size  Location     Type
 12699 ;;                  1    wreg      void 
 12700 ;; Registers used:
 12701 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12702 ;; Tracked objects:
 12703 ;;		On entry : 0/0
 12704 ;;		On exit  : 0/0
 12705 ;;		Unchanged: 0/0
 12706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12710 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12711 ;;Total ram usage:        1 bytes
 12712 ;; Hardware stack levels used:    1
 12713 ;; Hardware stack levels required when called:   11
 12714 ;; This function calls:
 12715 ;;		Nothing
 12716 ;; This function is called by:
 12717 ;;		_USBCtrlEPAllowDataStage
 12718 ;;		_USBCtrlTrfInHandler
 12719 ;; This function uses a non-reentrant model
 12720 ;;
 12721                           
 12722                           	psect	text53
 12723  0033FC                     __ptext53:
 12724                           	opt stack 0
 12725  0033FC                     _USBCtrlTrfTxService:
 12726                           	opt stack 11
 12727                           
 12728                           ;usb_device.c: 1791: uint8_t byteToSend;
 12729                           ;usb_device.c: 1795: byteToSend = 8;
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;incstack = 0
 12733  0033FC  0E08               	movlw	8
 12734  0033FE  0100               	movlb	0	; () banked
 12735  003400  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 12736                           
 12737                           ; BSR set to: 0
 12738                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 12739  003402  51B1               	movf	(_inPipes+5)& (0+255),w,b
 12740  003404  E110               	bnz	l7630
 12741  003406  0E08               	movlw	8
 12742  003408  5DB0               	subwf	(_inPipes+4)& (0+255),w,b
 12743  00340A  B0D8               	btfsc	status,0,c
 12744  00340C  D00C               	goto	l1683
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;usb_device.c: 1797: {
 12748                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 12749  00340E  C0B0  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 12750                           
 12751                           ; BSR set to: 0
 12752                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 12753  003412  51CA               	movf	_shortPacketStatus& (0+255),w,b
 12754  003414  A4D8               	btfss	status,2,c
 12755  003416  D002               	goto	l1681
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;usb_device.c: 1806: {
 12759                           ;usb_device.c: 1807: shortPacketStatus = 1;
 12760  003418  0E01               	movlw	1
 12761  00341A  D004               	goto	L12
 12762  00341C                     l1681:
 12763                           
 12764                           ; BSR set to: 0
 12765                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 12766                           
 12767                           ; BSR set to: 0
 12768  00341C  05CA               	decf	_shortPacketStatus& (0+255),w,b
 12769  00341E  A4D8               	btfss	status,2,c
 12770  003420  D002               	goto	l1683
 12771                           
 12772                           ; BSR set to: 0
 12773                           ;usb_device.c: 1810: {
 12774                           ;usb_device.c: 1811: shortPacketStatus = 2;
 12775  003422  0E02               	movlw	2
 12776  003424                     L12:
 12777  003424  6FCA               	movwf	_shortPacketStatus& (0+255),b
 12778  003426                     l1683:
 12779  003426                     l7630:
 12780                           
 12781                           ; BSR set to: 0
 12782                           ;usb_device.c: 1812: }
 12783                           ;usb_device.c: 1813: }
 12784                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 12785  003426  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 12786  003428  5FB0               	subwf	(_inPipes+4)& (0+255),f,b
 12787  00342A  0E00               	movlw	0
 12788  00342C  5BB1               	subwfb	(_inPipes+5)& (0+255),f,b
 12789                           
 12790                           ; BSR set to: 0
 12791                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 12792  00342E  EE20 F001          	lfsr	2,1
 12793  003432  51B2               	movf	_pBDTEntryIn& (0+255),w,b
 12794  003434  26D9               	addwf	fsr2l,f,c
 12795  003436  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12796  003438  22DA               	addwfc	fsr2h,f,c
 12797  00343A  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 12798                           
 12799                           ; BSR set to: 0
 12800                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 12801  00343E  0E38               	movlw	56
 12802  003440  0102               	movlb	2	; () banked
 12803  003442  6FD4               	movwf	_pDst& (0+255),b
 12804  003444  0E04               	movlw	4
 12805  003446  6FD5               	movwf	(_pDst+1)& (0+255),b
 12806                           
 12807                           ; BSR set to: 2
 12808                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 12809  003448  0100               	movlb	0	; () banked
 12810  00344A  A1AF               	btfss	(_inPipes+3)& (0+255),0,b
 12811  00344C  D01E               	goto	l1685
 12812  00344E  D03E               	goto	l1689
 12813  003450                     
 12814                           ; BSR set to: 0
 12815                           ;usb_device.c: 1830: {
 12816                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 12817                           
 12818                           ; BSR set to: 0
 12819  003450  C0AC  FFF6         	movff	_inPipes,tblptrl
 12820  003454  C0AD  FFF7         	movff	_inPipes+1,tblptrh
 12821  003458  6AF8               	clrf	tblptru,c
 12822  00345A  C2D4  FFD9         	movff	_pDst,fsr2l
 12823  00345E  C2D5  FFDA         	movff	_pDst+1,fsr2h
 12824  003462  0E0E               	movlw	(high __ramtop+-1)
 12825  003464  64F7               	cpfsgt	tblptrh,c
 12826  003466  D003               	bra	u5177
 12827  003468  0008               	tblrd		*
 12828  00346A  50F5               	movf	tablat,w,c
 12829  00346C  D005               	bra	u5170
 12830  00346E                     u5177:
 12831  00346E  CFF6 FFE9          	movff	tblptrl,fsr0l
 12832  003472  CFF7 FFEA          	movff	tblptrh,fsr0h
 12833  003476  50EF               	movf	indf0,w,c
 12834  003478                     u5170:
 12835  003478  6EDF               	movwf	indf2,c
 12836  00347A  0100               	movlb	0	; () banked
 12837  00347C  4BAC               	infsnz	_inPipes& (0+255),f,b
 12838  00347E  2BAD               	incf	(_inPipes+1)& (0+255),f,b
 12839                           
 12840                           ; BSR set to: 0
 12841  003480  0102               	movlb	2	; () banked
 12842  003482  4BD4               	infsnz	_pDst& (0+255),f,b
 12843  003484  2BD5               	incf	(_pDst+1)& (0+255),f,b
 12844                           
 12845                           ; BSR set to: 2
 12846                           ;usb_device.c: 1832: byteToSend--;
 12847  003486  0100               	movlb	0	; () banked
 12848  003488  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 12849  00348A                     l1685:
 12850                           
 12851                           ; BSR set to: 0
 12852                           
 12853                           ; BSR set to: 0
 12854  00348A  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 12855  00348C  B4D8               	btfsc	status,2,c
 12856  00348E  0012               	return	
 12857  003490  D7DF               	goto	l1686
 12858  003492                     
 12859                           ; BSR set to: 0
 12860                           ;usb_device.c: 1838: {
 12861                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 12862                           
 12863                           ; BSR set to: 0
 12864  003492  C0AC  FFF6         	movff	_inPipes,tblptrl
 12865  003496  C0AD  FFF7         	movff	_inPipes+1,tblptrh
 12866  00349A  6AF8               	clrf	tblptru,c
 12867  00349C  C2D4  FFD9         	movff	_pDst,fsr2l
 12868  0034A0  C2D5  FFDA         	movff	_pDst+1,fsr2h
 12869  0034A4  0E0E               	movlw	(high __ramtop+-1)
 12870  0034A6  64F7               	cpfsgt	tblptrh,c
 12871  0034A8  D003               	bra	u5197
 12872  0034AA  0008               	tblrd		*
 12873  0034AC  50F5               	movf	tablat,w,c
 12874  0034AE  D005               	bra	u5190
 12875  0034B0                     u5197:
 12876  0034B0  CFF6 FFE9          	movff	tblptrl,fsr0l
 12877  0034B4  CFF7 FFEA          	movff	tblptrh,fsr0h
 12878  0034B8  50EF               	movf	indf0,w,c
 12879  0034BA                     u5190:
 12880  0034BA  6EDF               	movwf	indf2,c
 12881  0034BC  0100               	movlb	0	; () banked
 12882  0034BE  4BAC               	infsnz	_inPipes& (0+255),f,b
 12883  0034C0  2BAD               	incf	(_inPipes+1)& (0+255),f,b
 12884                           
 12885                           ; BSR set to: 0
 12886  0034C2  0102               	movlb	2	; () banked
 12887  0034C4  4BD4               	infsnz	_pDst& (0+255),f,b
 12888  0034C6  2BD5               	incf	(_pDst+1)& (0+255),f,b
 12889                           
 12890                           ; BSR set to: 2
 12891                           ;usb_device.c: 1840: byteToSend--;
 12892  0034C8  0100               	movlb	0	; () banked
 12893  0034CA  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 12894  0034CC                     l1689:
 12895                           
 12896                           ; BSR set to: 0
 12897                           
 12898                           ; BSR set to: 0
 12899  0034CC  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 12900  0034CE  B4D8               	btfsc	status,2,c
 12901  0034D0  0012               	return	
 12902  0034D2  D7DF               	goto	l1690
 12903  0034D4                     __end_of_USBCtrlTrfTxService:
 12904                           	opt stack 0
 12905                           tosu	equ	0xFFF
 12906                           tosh	equ	0xFFE
 12907                           tosl	equ	0xFFD
 12908                           pclath	equ	0xFFA
 12909                           tblptru	equ	0xFF8
 12910                           tblptrh	equ	0xFF7
 12911                           tblptrl	equ	0xFF6
 12912                           tablat	equ	0xFF5
 12913                           prodh	equ	0xFF4
 12914                           prodl	equ	0xFF3
 12915                           intcon	equ	0xFF2
 12916                           intcon2	equ	0xFF1
 12917                           intcon3	equ	0xFF0
 12918                           indf0	equ	0xFEF
 12919                           postinc0	equ	0xFEE
 12920                           plusw0	equ	0xFEB
 12921                           fsr0h	equ	0xFEA
 12922                           fsr0l	equ	0xFE9
 12923                           wreg	equ	0xFE8
 12924                           indf1	equ	0xFE7
 12925                           postinc1	equ	0xFE6
 12926                           postdec1	equ	0xFE5
 12927                           plusw1	equ	0xFE3
 12928                           fsr1h	equ	0xFE2
 12929                           fsr1l	equ	0xFE1
 12930                           indf2	equ	0xFDF
 12931                           postinc2	equ	0xFDE
 12932                           postdec2	equ	0xFDD
 12933                           plusw2	equ	0xFDB
 12934                           fsr2h	equ	0xFDA
 12935                           fsr2l	equ	0xFD9
 12936                           status	equ	0xFD8
 12937                           
 12938 ;; *************** function _CDCTxService *****************
 12939 ;; Defined at:
 12940 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 12941 ;; Parameters:    Size  Location     Type
 12942 ;;		None
 12943 ;; Auto vars:     Size  Location     Type
 12944 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 12945 ;;  i               1   36[BANK0 ] unsigned char 
 12946 ;; Return value:  Size  Location     Type
 12947 ;;                  1    wreg      void 
 12948 ;; Registers used:
 12949 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12950 ;; Tracked objects:
 12951 ;;		On entry : 0/0
 12952 ;;		On exit  : 0/0
 12953 ;;		Unchanged: 0/0
 12954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12956 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12958 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12959 ;;Total ram usage:        2 bytes
 12960 ;; Hardware stack levels used:    1
 12961 ;; Hardware stack levels required when called:   12
 12962 ;; This function calls:
 12963 ;;		_USBTransferOnePacket
 12964 ;; This function is called by:
 12965 ;;		_UsbDevice_MainTask
 12966 ;; This function uses a non-reentrant model
 12967 ;;
 12968                           
 12969                           	psect	text54
 12970  002544                     __ptext54:
 12971                           	opt stack 0
 12972  002544                     _CDCTxService:
 12973                           	opt stack 15
 12974                           
 12975                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 12976                           ;usb_device_cdc.c: 842: uint8_t i;
 12977                           ;usb_device_cdc.c: 844: ;
 12978                           ;usb_device_cdc.c: 846: {};
 12979                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 12980                           
 12981                           ; BSR set to: 0
 12982                           ;incstack = 0
 12983  002544  0101               	movlb	1	; () banked
 12984  002546  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 12985  002548  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 12986  00254A  B4D8               	btfsc	status,2,c
 12987  00254C  D006               	goto	l1935
 12988                           
 12989                           ; BSR set to: 1
 12990  00254E  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 12991  002552  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 12992  002556  BEDF               	btfsc	indf2,7,c
 12993  002558  0012               	return	
 12994  00255A                     l1935:
 12995                           
 12996                           ; BSR set to: 1
 12997                           ;usb_device_cdc.c: 852: }
 12998                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 12999                           
 13000                           ; BSR set to: 1
 13001  00255A  0E03               	movlw	3
 13002  00255C  0100               	movlb	0	; () banked
 13003  00255E  19C1               	xorwf	_cdc_trf_state& (0+255),w,b
 13004  002560  A4D8               	btfss	status,2,c
 13005  002562  D002               	goto	l1937
 13006                           
 13007                           ; BSR set to: 0
 13008                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13009  002564  0E00               	movlw	0
 13010  002566  6FC1               	movwf	_cdc_trf_state& (0+255),b
 13011  002568                     l1937:
 13012                           
 13013                           ; BSR set to: 0
 13014                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13015  002568  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13016  00256A  B4D8               	btfsc	status,2,c
 13017  00256C  0012               	return	
 13018                           
 13019                           ; BSR set to: 0
 13020                           ;usb_device_cdc.c: 869: }
 13021                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13022                           
 13023                           ; BSR set to: 0
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;usb_device_cdc.c: 866: {
 13027                           ;usb_device_cdc.c: 867: ;
 13028                           ;usb_device_cdc.c: 868: return;
 13029  00256E  0E02               	movlw	2
 13030  002570  19C1               	xorwf	_cdc_trf_state& (0+255),w,b
 13031  002572  A4D8               	btfss	status,2,c
 13032  002574  D013               	goto	l1939
 13033                           
 13034                           ; BSR set to: 0
 13035                           ;usb_device_cdc.c: 875: {
 13036                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13037  002576  0E01               	movlw	1
 13038  002578  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13039  00257A  0E00               	movlw	0
 13040  00257C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13041  00257E  0E00               	movlw	0
 13042  002580  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13043  002582  0E00               	movlw	0
 13044  002584  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13045  002586  0E02               	movlw	2
 13046  002588  ECC2  F01E         	call	_USBTransferOnePacket
 13047  00258C  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13048  002590  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13049                           
 13050                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13051  002594  0E03               	movlw	3
 13052  002596  0100               	movlb	0	; () banked
 13053  002598  6FC1               	movwf	_cdc_trf_state& (0+255),b
 13054                           
 13055                           ;usb_device_cdc.c: 879: }
 13056  00259A  0012               	return	
 13057  00259C                     l1939:
 13058                           
 13059                           ; BSR set to: 0
 13060                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13061                           
 13062                           ; BSR set to: 0
 13063  00259C  05C1               	decf	_cdc_trf_state& (0+255),w,b
 13064  00259E  A4D8               	btfss	status,2,c
 13065  0025A0  0012               	return	
 13066                           
 13067                           ; BSR set to: 0
 13068                           ;usb_device_cdc.c: 881: {
 13069                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13070  0025A2  0E40               	movlw	64
 13071  0025A4  65C0               	cpfsgt	_cdc_tx_len& (0+255),b
 13072  0025A6  D003               	goto	l1942
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13076  0025A8  0E40               	movlw	64
 13077  0025AA  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13078  0025AC  D002               	goto	l1943
 13079  0025AE                     l1942:
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;usb_device_cdc.c: 887: else
 13083                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13084  0025AE  C0C0  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13085  0025B2                     l1943:
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13089                           
 13090                           ; BSR set to: 0
 13091  0025B2  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13092  0025B4  0800               	sublw	0
 13093  0025B6  25C0               	addwf	_cdc_tx_len& (0+255),w,b
 13094  0025B8  6FC0               	movwf	_cdc_tx_len& (0+255),b
 13095                           
 13096                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13097  0025BA  0E84               	movlw	low _cdc_data_tx
 13098  0025BC  0102               	movlb	2	; () banked
 13099  0025BE  6FC8               	movwf	_pCDCDst& (0+255),b
 13100  0025C0  0E07               	movlw	high _cdc_data_tx
 13101  0025C2  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13102                           
 13103                           ; BSR set to: 2
 13104                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13105  0025C4  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13106                           
 13107                           ; BSR set to: 2
 13108                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13109  0025C8  0101               	movlb	1	; () banked
 13110  0025CA  51E4               	movf	_cdc_mem_type& (0+255),w,b
 13111  0025CC  B4D8               	btfsc	status,2,c
 13112  0025CE  D01D               	goto	l1945
 13113  0025D0  D03D               	goto	l1949
 13114  0025D2                     
 13115                           ;usb_device_cdc.c: 901: {
 13116                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13117                           
 13118                           ; BSR set to: 1
 13119  0025D2  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13120  0025D6  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13121  0025DA  6AF8               	clrf	tblptru,c
 13122  0025DC  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13123  0025E0  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13124  0025E4  0E0E               	movlw	(high __ramtop+-1)
 13125  0025E6  64F7               	cpfsgt	tblptrh,c
 13126  0025E8  D003               	bra	u13087
 13127  0025EA  0008               	tblrd		*
 13128  0025EC  50F5               	movf	tablat,w,c
 13129  0025EE  D005               	bra	u13080
 13130  0025F0                     u13087:
 13131  0025F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 13132  0025F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 13133  0025F8  50EF               	movf	indf0,w,c
 13134  0025FA                     u13080:
 13135  0025FA  6EDF               	movwf	indf2,c
 13136                           
 13137                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13138  0025FC  0102               	movlb	2	; () banked
 13139  0025FE  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13140  002600  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13141                           
 13142                           ; BSR set to: 2
 13143                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13144  002602  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13145  002604  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13146                           
 13147                           ; BSR set to: 2
 13148                           ;usb_device_cdc.c: 905: i--;
 13149  002606  0100               	movlb	0	; () banked
 13150  002608  0784               	decf	CDCTxService@i& (0+255),f,b
 13151  00260A                     l1945:
 13152                           
 13153                           ; BSR set to: 0
 13154  00260A  0100               	movlb	0	; () banked
 13155  00260C  5184               	movf	CDCTxService@i& (0+255),w,b
 13156  00260E  B4D8               	btfsc	status,2,c
 13157  002610  D021               	goto	u13110
 13158  002612  D7DF               	goto	l1946
 13159  002614                     
 13160                           ; BSR set to: 0
 13161                           ;usb_device_cdc.c: 911: {
 13162                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13163                           
 13164                           ; BSR set to: 0
 13165  002614  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13166  002618  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13167  00261C  6AF8               	clrf	tblptru,c
 13168  00261E  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13169  002622  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13170  002626  0E0E               	movlw	(high __ramtop+-1)
 13171  002628  64F7               	cpfsgt	tblptrh,c
 13172  00262A  D003               	bra	u13107
 13173  00262C  0008               	tblrd		*
 13174  00262E  50F5               	movf	tablat,w,c
 13175  002630  D005               	bra	u13100
 13176  002632                     u13107:
 13177  002632  CFF6 FFE9          	movff	tblptrl,fsr0l
 13178  002636  CFF7 FFEA          	movff	tblptrh,fsr0h
 13179  00263A  50EF               	movf	indf0,w,c
 13180  00263C                     u13100:
 13181  00263C  6EDF               	movwf	indf2,c
 13182                           
 13183                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13184  00263E  0102               	movlb	2	; () banked
 13185  002640  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13186  002642  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13187                           
 13188                           ; BSR set to: 2
 13189                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13190  002644  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13191  002646  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13192                           
 13193                           ; BSR set to: 2
 13194                           ;usb_device_cdc.c: 915: i--;
 13195  002648  0100               	movlb	0	; () banked
 13196  00264A  0784               	decf	CDCTxService@i& (0+255),f,b
 13197  00264C                     l1949:
 13198                           
 13199                           ; BSR set to: 0
 13200  00264C  0100               	movlb	0	; () banked
 13201  00264E  5184               	movf	CDCTxService@i& (0+255),w,b
 13202  002650  A4D8               	btfss	status,2,c
 13203  002652  D7E0               	goto	l1950
 13204  002654                     u13110:
 13205                           
 13206                           ; BSR set to: 0
 13207                           ;usb_device_cdc.c: 916: }
 13208                           ;usb_device_cdc.c: 917: }
 13209                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13210                           
 13211                           ; BSR set to: 0
 13212                           
 13213                           ; BSR set to: 0
 13214  002654  51C0               	movf	_cdc_tx_len& (0+255),w,b
 13215  002656  A4D8               	btfss	status,2,c
 13216  002658  D008               	goto	l1954
 13217                           
 13218                           ; BSR set to: 0
 13219                           ;usb_device_cdc.c: 924: {
 13220                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13221  00265A  0E40               	movlw	64
 13222  00265C  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13223  00265E  A4D8               	btfss	status,2,c
 13224  002660  D002               	goto	l1953
 13225                           
 13226                           ; BSR set to: 0
 13227                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13228  002662  0E02               	movlw	2
 13229  002664  D001               	goto	L13
 13230  002666                     l1953:
 13231                           
 13232                           ; BSR set to: 0
 13233                           ;usb_device_cdc.c: 927: else
 13234                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13235                           
 13236                           ; BSR set to: 0
 13237  002666  0E03               	movlw	3
 13238  002668                     L13:
 13239  002668  6FC1               	movwf	_cdc_trf_state& (0+255),b
 13240  00266A                     l1954:
 13241                           
 13242                           ; BSR set to: 0
 13243                           ;usb_device_cdc.c: 929: }
 13244                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13245                           
 13246                           ; BSR set to: 0
 13247                           
 13248                           ; BSR set to: 0
 13249  00266A  0E01               	movlw	1
 13250  00266C  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13251  00266E  0E84               	movlw	low _cdc_data_tx
 13252  002670  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13253  002672  0E07               	movlw	high _cdc_data_tx
 13254  002674  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13255  002676  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13256  00267A  0E02               	movlw	2
 13257  00267C  ECC2  F01E         	call	_USBTransferOnePacket
 13258  002680  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13259  002684  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13260  002688  0012               	return	
 13261  00268A                     __end_of_CDCTxService:
 13262                           	opt stack 0
 13263                           tosu	equ	0xFFF
 13264                           tosh	equ	0xFFE
 13265                           tosl	equ	0xFFD
 13266                           pclath	equ	0xFFA
 13267                           tblptru	equ	0xFF8
 13268                           tblptrh	equ	0xFF7
 13269                           tblptrl	equ	0xFF6
 13270                           tablat	equ	0xFF5
 13271                           prodh	equ	0xFF4
 13272                           prodl	equ	0xFF3
 13273                           intcon	equ	0xFF2
 13274                           intcon2	equ	0xFF1
 13275                           intcon3	equ	0xFF0
 13276                           indf0	equ	0xFEF
 13277                           postinc0	equ	0xFEE
 13278                           plusw0	equ	0xFEB
 13279                           fsr0h	equ	0xFEA
 13280                           fsr0l	equ	0xFE9
 13281                           wreg	equ	0xFE8
 13282                           indf1	equ	0xFE7
 13283                           postinc1	equ	0xFE6
 13284                           postdec1	equ	0xFE5
 13285                           plusw1	equ	0xFE3
 13286                           fsr1h	equ	0xFE2
 13287                           fsr1l	equ	0xFE1
 13288                           indf2	equ	0xFDF
 13289                           postinc2	equ	0xFDE
 13290                           postdec2	equ	0xFDD
 13291                           plusw2	equ	0xFDB
 13292                           fsr2h	equ	0xFDA
 13293                           fsr2l	equ	0xFD9
 13294                           status	equ	0xFD8
 13295                           
 13296 ;; *************** function _Term_MainSm *****************
 13297 ;; Defined at:
 13298 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13299 ;; Parameters:    Size  Location     Type
 13300 ;;		None
 13301 ;; Auto vars:     Size  Location     Type
 13302 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13303 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13304 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13305 ;;  FwkBuildYear    4    0        unsigned char [4]
 13306 ;;  FwkBuildMont    4    0        unsigned char [4]
 13307 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13308 ;; Return value:  Size  Location     Type
 13309 ;;                  1    wreg      void 
 13310 ;; Registers used:
 13311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13312 ;; Tracked objects:
 13313 ;;		On entry : 0/0
 13314 ;;		On exit  : 0/0
 13315 ;;		Unchanged: 0/0
 13316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13318 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13320 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13321 ;;Total ram usage:       12 bytes
 13322 ;; Hardware stack levels used:    1
 13323 ;; Hardware stack levels required when called:   16
 13324 ;; This function calls:
 13325 ;;		_OsTmr_GetTimerStatus
 13326 ;;		_OsTmr_StartTimer
 13327 ;;		_Terminal
 13328 ;;		_memset
 13329 ;;		_putUSBUSART
 13330 ;;		_sprintf
 13331 ;;		_strcat
 13332 ;;		_strcpy
 13333 ;;		_strlen
 13334 ;;		_utoa
 13335 ;; This function is called by:
 13336 ;;		_Term_MainTask
 13337 ;; This function uses a non-reentrant model
 13338 ;;
 13339                           
 13340                           	psect	text55
 13341  0010B6                     __ptext55:
 13342                           	opt stack 0
 13343  0010B6                     _Term_MainSm:
 13344                           	opt stack 11
 13345                           
 13346                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13347                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13348                           ;term.c: 711: static UINT8 Data[50];
 13349                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13350                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13351                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13352                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13353                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13354                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13355                           ;term.c: 719: switch (TermMainSmState)
 13356                           
 13357                           ;incstack = 0
 13358  0010B6  D133               	goto	l2413
 13359  0010B8                     
 13360                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13361  0010B8  0ECA               	movlw	low Term_MainSm@TermDelay
 13362  0010BA  0100               	movlb	0	; () banked
 13363  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13364  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13365  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13366  0010C2  0ED0               	movlw	208
 13367  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13368  0010C6  0E07               	movlw	7
 13369  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13370  0010CA  0E00               	movlw	0
 13371  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13372  0010CE  0E00               	movlw	0
 13373  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13374  0010D2  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 13375                           
 13376                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13377  0010D6  0E01               	movlw	1
 13378  0010D8  0102               	movlb	2	; () banked
 13379  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13380                           
 13381                           ;term.c: 726: break;
 13382  0010DC  0012               	return	
 13383  0010DE                     
 13384                           ; BSR set to: 2
 13385                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13386                           
 13387                           ; BSR set to: 2
 13388  0010DE  0ECA               	movlw	low Term_MainSm@TermDelay
 13389  0010E0  0100               	movlb	0	; () banked
 13390  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13391  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13392  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13393  0010E8  EC8B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 13394  0010EC  06E8               	decf	wreg,f,c
 13395  0010EE  A4D8               	btfss	status,2,c
 13396  0010F0  0012               	return	
 13397                           
 13398                           ;term.c: 731: {
 13399                           ;term.c: 733: TermMainSmState = Term_InitState;
 13400  0010F2  0E02               	movlw	2
 13401  0010F4  0102               	movlb	2	; () banked
 13402  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13403                           
 13404                           ; BSR set to: 2
 13405                           ;term.c: 734: }
 13406                           ;term.c: 735: break;
 13407  0010F8  0012               	return	
 13408  0010FA                     
 13409                           ; BSR set to: 2
 13410                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13411                           
 13412                           ; BSR set to: 2
 13413  0010FA  0E1F               	movlw	31
 13414  0010FC  0100               	movlb	0	; () banked
 13415  0010FE  65CB               	cpfsgt	_USBDeviceState& (0+255),b
 13416  001100  0012               	return	
 13417                           
 13418                           ; BSR set to: 0
 13419  001102  B265               	btfsc	3941,1,c	;volatile
 13420  001104  0012               	return	
 13421                           
 13422                           ; BSR set to: 0
 13423                           ;term.c: 743: else
 13424                           ;term.c: 744: {
 13425                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13426                           
 13427                           ; BSR set to: 0
 13428                           
 13429                           ; BSR set to: 0
 13430                           ;term.c: 740: {
 13431                           ;term.c: 742: }
 13432  001106  0E03               	movlw	3
 13433  001108  0102               	movlb	2	; () banked
 13434  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13435                           
 13436                           ; BSR set to: 2
 13437                           ;term.c: 747: }
 13438                           ;term.c: 748: break;
 13439  00110C  0012               	return	
 13440  00110E                     
 13441                           ; BSR set to: 2
 13442                           ;term.c: 752: if((cdc_trf_state == 0))
 13443                           
 13444                           ; BSR set to: 2
 13445  00110E  0100               	movlb	0	; () banked
 13446  001110  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13447  001112  A4D8               	btfss	status,2,c
 13448  001114  0012               	return	
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;term.c: 753: {
 13452                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13453  001116  0E4F               	movlw	low _Welcome
 13454  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13455  00111A  0EFD               	movlw	high _Welcome
 13456  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13457  00111E  0E88               	movlw	136
 13458  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13459  001122  EC1B  F02E         	call	_putUSBUSART	;wreg free
 13460                           
 13461                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13462  001126  0E04               	movlw	4
 13463  001128  0102               	movlb	2	; () banked
 13464  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13465                           
 13466                           ; BSR set to: 2
 13467                           ;term.c: 758: }
 13468                           ;term.c: 759: break;
 13469  00112C  0012               	return	
 13470  00112E                     
 13471                           ; BSR set to: 2
 13472                           ;term.c: 763: if((cdc_trf_state == 0))
 13473                           
 13474                           ; BSR set to: 2
 13475  00112E  0100               	movlb	0	; () banked
 13476  001130  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13477  001132  A4D8               	btfss	status,2,c
 13478  001134  0012               	return	
 13479                           
 13480                           ; BSR set to: 0
 13481                           ;term.c: 764: {
 13482                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13483  001136  0E5F               	movlw	low _MsgFormat
 13484  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13485  00113A  0EFC               	movlw	high _MsgFormat
 13486  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13487  00113E  0EEF               	movlw	239
 13488  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13489  001142  EC1B  F02E         	call	_putUSBUSART	;wreg free
 13490                           
 13491                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13492  001146  0E05               	movlw	5
 13493  001148  0102               	movlb	2	; () banked
 13494  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13495                           
 13496                           ; BSR set to: 2
 13497                           ;term.c: 769: }
 13498                           ;term.c: 770: break;
 13499  00114C  0012               	return	
 13500  00114E                     
 13501                           ; BSR set to: 2
 13502                           ;term.c: 774: if((cdc_trf_state == 0))
 13503                           
 13504                           ; BSR set to: 2
 13505  00114E  0100               	movlb	0	; () banked
 13506  001150  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13507  001152  A4D8               	btfss	status,2,c
 13508  001154  0012               	return	
 13509                           
 13510                           ; BSR set to: 0
 13511                           ;term.c: 775: {
 13512                           ;term.c: 777: memset(Data,0,50);
 13513  001156  0E94               	movlw	low Term_MainSm@Data
 13514  001158  6F7D               	movwf	memset@p1& (0+255),b
 13515  00115A  0E04               	movlw	high Term_MainSm@Data
 13516  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13517  00115E  0E00               	movlw	0
 13518  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13519  001162  0E00               	movlw	0
 13520  001164  6F7F               	movwf	memset@c& (0+255),b
 13521  001166  0E00               	movlw	0
 13522  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13523  00116A  0E32               	movlw	50
 13524  00116C  6F81               	movwf	memset@n& (0+255),b
 13525  00116E  ECD5  F02C         	call	_memset	;wreg free
 13526                           
 13527                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13528  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13529  001174  0100               	movlb	0	; () banked
 13530  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13531  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13532  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13533  00117C  0E00               	movlw	0
 13534  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13535  001180  0E01               	movlw	1
 13536  001182  6F8C               	movwf	utoa@val& (0+255),b
 13537  001184  0E00               	movlw	0
 13538  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13539  001188  0E0A               	movlw	10
 13540  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13541  00118C  EC28  F020         	call	_utoa	;wreg free
 13542                           
 13543                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13544  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13545  001192  0100               	movlb	0	; () banked
 13546  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13547  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13548  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13549  00119A  0E00               	movlw	0
 13550  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13551  00119E  0E02               	movlw	2
 13552  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13553  0011A2  0E00               	movlw	0
 13554  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13555  0011A6  0E0A               	movlw	10
 13556  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13557  0011AA  EC28  F020         	call	_utoa	;wreg free
 13558                           
 13559                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13560  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13561  0011B0  0100               	movlb	0	; () banked
 13562  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13563  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13564  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13565  0011B8  0E00               	movlw	0
 13566  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13567  0011BC  0E00               	movlw	0
 13568  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 13569  0011C0  0E00               	movlw	0
 13570  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13571  0011C4  0E0A               	movlw	10
 13572  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 13573  0011C8  EC28  F020         	call	_utoa	;wreg free
 13574                           
 13575                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13576  0011CC  0E94               	movlw	low Term_MainSm@Data
 13577  0011CE  0100               	movlb	0	; () banked
 13578  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 13579  0011D2  0E04               	movlw	high Term_MainSm@Data
 13580  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 13581  0011D6  0EFF               	movlw	low STR_23
 13582  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 13583  0011DA  0EFE               	movlw	high STR_23
 13584  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 13585  0011DE  ECA4  F02C         	call	_strcpy	;wreg free
 13586                           
 13587                           ;term.c: 783: strcat(Data,FwkMajorStr);
 13588  0011E2  0E94               	movlw	low Term_MainSm@Data
 13589  0011E4  0100               	movlb	0	; () banked
 13590  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 13591  0011E8  0E04               	movlw	high Term_MainSm@Data
 13592  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13593  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13594  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 13595  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13596  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 13597  0011F4  EC75  F027         	call	_strcat	;wreg free
 13598                           
 13599                           ;term.c: 784: strcat(Data,".");
 13600  0011F8  0E94               	movlw	low Term_MainSm@Data
 13601  0011FA  0100               	movlb	0	; () banked
 13602  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 13603  0011FE  0E04               	movlw	high Term_MainSm@Data
 13604  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13605  001202  0EF4               	movlw	low STR_24
 13606  001204  6F7F               	movwf	strcat@from& (0+255),b
 13607  001206  0EFF               	movlw	high STR_24
 13608  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 13609  00120A  EC75  F027         	call	_strcat	;wreg free
 13610                           
 13611                           ;term.c: 785: strcat(Data,FwkMinorStr);
 13612  00120E  0E94               	movlw	low Term_MainSm@Data
 13613  001210  0100               	movlb	0	; () banked
 13614  001212  6F7D               	movwf	strcat@to& (0+255),b
 13615  001214  0E04               	movlw	high Term_MainSm@Data
 13616  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13617  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13618  00121A  6F7F               	movwf	strcat@from& (0+255),b
 13619  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13620  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 13621  001220  EC75  F027         	call	_strcat	;wreg free
 13622                           
 13623                           ;term.c: 786: strcat(Data,".");
 13624  001224  0E94               	movlw	low Term_MainSm@Data
 13625  001226  0100               	movlb	0	; () banked
 13626  001228  6F7D               	movwf	strcat@to& (0+255),b
 13627  00122A  0E04               	movlw	high Term_MainSm@Data
 13628  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13629  00122E  0EF4               	movlw	low STR_24
 13630  001230  6F7F               	movwf	strcat@from& (0+255),b
 13631  001232  0EFF               	movlw	high STR_24
 13632  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 13633  001236  EC75  F027         	call	_strcat	;wreg free
 13634                           
 13635                           ;term.c: 787: strcat(Data,FwkBuildStr);
 13636  00123A  0E94               	movlw	low Term_MainSm@Data
 13637  00123C  0100               	movlb	0	; () banked
 13638  00123E  6F7D               	movwf	strcat@to& (0+255),b
 13639  001240  0E04               	movlw	high Term_MainSm@Data
 13640  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13641  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13642  001246  6F7F               	movwf	strcat@from& (0+255),b
 13643  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13644  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 13645  00124C  EC75  F027         	call	_strcat	;wreg free
 13646                           
 13647                           ;term.c: 788: strcat(Data,"\r\n");
 13648  001250  0E94               	movlw	low Term_MainSm@Data
 13649  001252  0100               	movlb	0	; () banked
 13650  001254  6F7D               	movwf	strcat@to& (0+255),b
 13651  001256  0E04               	movlw	high Term_MainSm@Data
 13652  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13653  00125A  0EB3               	movlw	low (STR_21+39)
 13654  00125C  6F7F               	movwf	strcat@from& (0+255),b
 13655  00125E  0EFE               	movlw	high (STR_21+39)
 13656  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 13657  001262  EC75  F027         	call	_strcat	;wreg free
 13658                           
 13659                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 13660  001266  0E94               	movlw	low Term_MainSm@Data
 13661  001268  0100               	movlb	0	; () banked
 13662  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 13663  00126C  0E04               	movlw	high Term_MainSm@Data
 13664  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13665  001270  0E94               	movlw	low Term_MainSm@Data
 13666  001272  6F7D               	movwf	strlen@s& (0+255),b
 13667  001274  0E04               	movlw	high Term_MainSm@Data
 13668  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13669  001278  EC84  F02B         	call	_strlen	;wreg free
 13670  00127C  0100               	movlb	0	; () banked
 13671  00127E  517D               	movf	?_strlen& (0+255),w,b
 13672  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 13673  001282  EC1B  F02E         	call	_putUSBUSART	;wreg free
 13674                           
 13675                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 13676  001286  0E06               	movlw	6
 13677  001288  0102               	movlb	2	; () banked
 13678  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13679                           
 13680                           ; BSR set to: 2
 13681                           ;term.c: 793: }
 13682                           ;term.c: 794: break;
 13683  00128C  0012               	return	
 13684  00128E                     
 13685                           ; BSR set to: 2
 13686                           ;term.c: 798: if((cdc_trf_state == 0))
 13687                           
 13688                           ; BSR set to: 2
 13689  00128E  0100               	movlb	0	; () banked
 13690  001290  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13691  001292  A4D8               	btfss	status,2,c
 13692  001294  0012               	return	
 13693                           
 13694                           ; BSR set to: 0
 13695                           ;term.c: 799: {
 13696                           ;term.c: 801: memset(Data,0,50);
 13697  001296  0E94               	movlw	low Term_MainSm@Data
 13698  001298  6F7D               	movwf	memset@p1& (0+255),b
 13699  00129A  0E04               	movlw	high Term_MainSm@Data
 13700  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13701  00129E  0E00               	movlw	0
 13702  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 13703  0012A2  0E00               	movlw	0
 13704  0012A4  6F7F               	movwf	memset@c& (0+255),b
 13705  0012A6  0E00               	movlw	0
 13706  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 13707  0012AA  0E32               	movlw	50
 13708  0012AC  6F81               	movwf	memset@n& (0+255),b
 13709  0012AE  ECD5  F02C         	call	_memset	;wreg free
 13710                           
 13711                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 12 2022");
 13712  0012B2  0E94               	movlw	low Term_MainSm@Data
 13713  0012B4  0100               	movlb	0	; () banked
 13714  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 13715  0012B8  0E04               	movlw	high Term_MainSm@Data
 13716  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 13717  0012BC  0E27               	movlw	low STR_27
 13718  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 13719  0012C0  0EFF               	movlw	high STR_27
 13720  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 13721  0012C4  0EB6               	movlw	low STR_28
 13722  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 13723  0012C8  0EFF               	movlw	high STR_28
 13724  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 13725  0012CC  ECD6  F01A         	call	_sprintf	;wreg free
 13726                           
 13727                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 13728  0012D0  0E94               	movlw	low Term_MainSm@Data
 13729  0012D2  0100               	movlb	0	; () banked
 13730  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 13731  0012D6  0E04               	movlw	high Term_MainSm@Data
 13732  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13733  0012DA  0E94               	movlw	low Term_MainSm@Data
 13734  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 13735  0012DE  0E04               	movlw	high Term_MainSm@Data
 13736  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13737  0012E2  EC84  F02B         	call	_strlen	;wreg free
 13738  0012E6  0100               	movlb	0	; () banked
 13739  0012E8  517D               	movf	?_strlen& (0+255),w,b
 13740  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 13741  0012EC  EC1B  F02E         	call	_putUSBUSART	;wreg free
 13742                           
 13743                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 13744  0012F0  0E07               	movlw	7
 13745  0012F2  0102               	movlb	2	; () banked
 13746  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13747                           
 13748                           ; BSR set to: 2
 13749                           ;term.c: 808: }
 13750                           ;term.c: 809: break;
 13751  0012F6  0012               	return	
 13752  0012F8                     
 13753                           ; BSR set to: 2
 13754                           ;term.c: 813: if((cdc_trf_state == 0))
 13755                           
 13756                           ; BSR set to: 2
 13757  0012F8  0100               	movlb	0	; () banked
 13758  0012FA  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13759  0012FC  A4D8               	btfss	status,2,c
 13760  0012FE  0012               	return	
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;term.c: 814: {
 13764                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 13765  001300  0E5F               	movlw	low _MsgReady
 13766  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 13767  001304  0EFE               	movlw	high _MsgReady
 13768  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13769  001308  0E16               	movlw	22
 13770  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 13771  00130C  EC1B  F02E         	call	_putUSBUSART	;wreg free
 13772                           
 13773                           ;term.c: 818: TermMainSmState = Term_FinalState;
 13774  001310  0E08               	movlw	8
 13775  001312  0102               	movlb	2	; () banked
 13776  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13777                           
 13778                           ; BSR set to: 2
 13779                           ;term.c: 819: }
 13780                           ;term.c: 820: break;
 13781  001316  0012               	return	
 13782  001318                     
 13783                           ; BSR set to: 2
 13784                           ;term.c: 824: Terminal();
 13785                           
 13786                           ; BSR set to: 2
 13787  001318  EC68  F000         	call	_Terminal	;wreg free
 13788                           
 13789                           ;term.c: 829: }
 13790                           
 13791                           ;term.c: 828: break;
 13792                           
 13793                           ;term.c: 827: default:
 13794                           
 13795                           ;term.c: 825: break;
 13796  00131C  0012               	return	
 13797  00131E                     l2413:
 13798  00131E  0102               	movlb	2	; () banked
 13799  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 13800                           
 13801                           ; Switch size 1, requested type "space"
 13802                           ; Number of cases is 9, Range of values is 0 to 8
 13803                           ; switch strategies available:
 13804                           ; Name         Instructions Cycles
 13805                           ; simple_byte           28    15 (average)
 13806                           ;	Chosen strategy is simple_byte
 13807  001322  0A00               	xorlw	0	; case 0
 13808  001324  B4D8               	btfsc	status,2,c
 13809  001326  D6C8               	goto	l2414
 13810  001328  0A01               	xorlw	1	; case 1
 13811  00132A  B4D8               	btfsc	status,2,c
 13812  00132C  D6D8               	goto	l2416
 13813  00132E  0A03               	xorlw	3	; case 2
 13814  001330  B4D8               	btfsc	status,2,c
 13815  001332  D6E3               	goto	l2418
 13816  001334  0A01               	xorlw	1	; case 3
 13817  001336  B4D8               	btfsc	status,2,c
 13818  001338  D6EA               	goto	l2423
 13819  00133A  0A07               	xorlw	7	; case 4
 13820  00133C  B4D8               	btfsc	status,2,c
 13821  00133E  D6F7               	goto	l2425
 13822  001340  0A01               	xorlw	1	; case 5
 13823  001342  B4D8               	btfsc	status,2,c
 13824  001344  D704               	goto	l2427
 13825  001346  0A03               	xorlw	3	; case 6
 13826  001348  B4D8               	btfsc	status,2,c
 13827  00134A  D7A1               	goto	l2429
 13828  00134C  0A01               	xorlw	1	; case 7
 13829  00134E  B4D8               	btfsc	status,2,c
 13830  001350  D7D3               	goto	l2431
 13831  001352  0A0F               	xorlw	15	; case 8
 13832  001354  A4D8               	btfss	status,2,c
 13833  001356  0012               	return	
 13834  001358  D7DF               	goto	l2433
 13835  00135A                     __end_of_Term_MainSm:
 13836                           	opt stack 0
 13837                           tosu	equ	0xFFF
 13838                           tosh	equ	0xFFE
 13839                           tosl	equ	0xFFD
 13840                           pclath	equ	0xFFA
 13841                           tblptru	equ	0xFF8
 13842                           tblptrh	equ	0xFF7
 13843                           tblptrl	equ	0xFF6
 13844                           tablat	equ	0xFF5
 13845                           prodh	equ	0xFF4
 13846                           prodl	equ	0xFF3
 13847                           intcon	equ	0xFF2
 13848                           intcon2	equ	0xFF1
 13849                           intcon3	equ	0xFF0
 13850                           indf0	equ	0xFEF
 13851                           postinc0	equ	0xFEE
 13852                           plusw0	equ	0xFEB
 13853                           fsr0h	equ	0xFEA
 13854                           fsr0l	equ	0xFE9
 13855                           wreg	equ	0xFE8
 13856                           indf1	equ	0xFE7
 13857                           postinc1	equ	0xFE6
 13858                           postdec1	equ	0xFE5
 13859                           plusw1	equ	0xFE3
 13860                           fsr1h	equ	0xFE2
 13861                           fsr1l	equ	0xFE1
 13862                           indf2	equ	0xFDF
 13863                           postinc2	equ	0xFDE
 13864                           postdec2	equ	0xFDD
 13865                           plusw2	equ	0xFDB
 13866                           fsr2h	equ	0xFDA
 13867                           fsr2l	equ	0xFD9
 13868                           status	equ	0xFD8
 13869                           
 13870 ;; *************** function _strlen *****************
 13871 ;; Defined at:
 13872 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 13873 ;; Parameters:    Size  Location     Type
 13874 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 13875 ;;		 -> Term_MainSm@Data(50), 
 13876 ;; Auto vars:     Size  Location     Type
 13877 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 13878 ;;		 -> Term_MainSm@Data(50), 
 13879 ;; Return value:  Size  Location     Type
 13880 ;;                  2   29[BANK0 ] unsigned int 
 13881 ;; Registers used:
 13882 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13883 ;; Tracked objects:
 13884 ;;		On entry : 0/0
 13885 ;;		On exit  : 0/0
 13886 ;;		Unchanged: 0/0
 13887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13888 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13889 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13890 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13891 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13892 ;;Total ram usage:        6 bytes
 13893 ;; Hardware stack levels used:    1
 13894 ;; Hardware stack levels required when called:   11
 13895 ;; This function calls:
 13896 ;;		Nothing
 13897 ;; This function is called by:
 13898 ;;		_Term_MainSm
 13899 ;; This function uses a non-reentrant model
 13900 ;;
 13901                           
 13902                           	psect	text56
 13903  005708                     __ptext56:
 13904                           	opt stack 0
 13905  005708                     _strlen:
 13906                           	opt stack 15
 13907                           
 13908                           ;incstack = 0
 13909  005708  C07D  F081         	movff	strlen@s,strlen@cp
 13910  00570C  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 13911  005710  D003               	goto	l3192
 13912  005712  0100               	movlb	0	; () banked
 13913  005714  4B81               	infsnz	strlen@cp& (0+255),f,b
 13914  005716  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 13915  005718                     l3192:
 13916                           
 13917                           ; BSR set to: 0
 13918  005718  C081  FFD9         	movff	strlen@cp,fsr2l
 13919  00571C  C082  FFDA         	movff	strlen@cp+1,fsr2h
 13920  005720  50DF               	movf	indf2,w,c
 13921  005722  A4D8               	btfss	status,2,c
 13922  005724  D7F6               	goto	l3193
 13923  005726  C07D  F07F         	movff	strlen@s,??_strlen
 13924  00572A  C07E  F080         	movff	strlen@s+1,??_strlen+1
 13925  00572E  0100               	movlb	0	; () banked
 13926  005730  1F7F               	comf	??_strlen& (0+255),f,b
 13927  005732  1F80               	comf	(??_strlen+1)& (0+255),f,b
 13928  005734  4B7F               	infsnz	??_strlen& (0+255),f,b
 13929  005736  2B80               	incf	(??_strlen+1)& (0+255),f,b
 13930  005738  5181               	movf	strlen@cp& (0+255),w,b
 13931  00573A  257F               	addwf	??_strlen& (0+255),w,b
 13932  00573C  6F7D               	movwf	?_strlen& (0+255),b
 13933  00573E  5182               	movf	(strlen@cp+1)& (0+255),w,b
 13934  005740  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 13935  005742  6F7E               	movwf	(?_strlen+1)& (0+255),b
 13936  005744  0012               	return	
 13937  005746                     __end_of_strlen:
 13938                           	opt stack 0
 13939                           tosu	equ	0xFFF
 13940                           tosh	equ	0xFFE
 13941                           tosl	equ	0xFFD
 13942                           pclath	equ	0xFFA
 13943                           tblptru	equ	0xFF8
 13944                           tblptrh	equ	0xFF7
 13945                           tblptrl	equ	0xFF6
 13946                           tablat	equ	0xFF5
 13947                           prodh	equ	0xFF4
 13948                           prodl	equ	0xFF3
 13949                           intcon	equ	0xFF2
 13950                           intcon2	equ	0xFF1
 13951                           intcon3	equ	0xFF0
 13952                           indf0	equ	0xFEF
 13953                           postinc0	equ	0xFEE
 13954                           plusw0	equ	0xFEB
 13955                           fsr0h	equ	0xFEA
 13956                           fsr0l	equ	0xFE9
 13957                           wreg	equ	0xFE8
 13958                           indf1	equ	0xFE7
 13959                           postinc1	equ	0xFE6
 13960                           postdec1	equ	0xFE5
 13961                           plusw1	equ	0xFE3
 13962                           fsr1h	equ	0xFE2
 13963                           fsr1l	equ	0xFE1
 13964                           indf2	equ	0xFDF
 13965                           postinc2	equ	0xFDE
 13966                           postdec2	equ	0xFDD
 13967                           plusw2	equ	0xFDB
 13968                           fsr2h	equ	0xFDA
 13969                           fsr2l	equ	0xFD9
 13970                           status	equ	0xFD8
 13971                           
 13972 ;; *************** function _strcat *****************
 13973 ;; Defined at:
 13974 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 13975 ;; Parameters:    Size  Location     Type
 13976 ;;  to              2   29[BANK0 ] PTR unsigned char 
 13977 ;;		 -> Term_MainSm@Data(50), 
 13978 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 13979 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 13980 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 13981 ;; Auto vars:     Size  Location     Type
 13982 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 13983 ;;		 -> Term_MainSm@Data(50), 
 13984 ;; Return value:  Size  Location     Type
 13985 ;;                  2   29[BANK0 ] PTR unsigned char 
 13986 ;; Registers used:
 13987 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13988 ;; Tracked objects:
 13989 ;;		On entry : 0/0
 13990 ;;		On exit  : 0/0
 13991 ;;		Unchanged: 0/0
 13992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13993 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13994 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13996 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13997 ;;Total ram usage:        6 bytes
 13998 ;; Hardware stack levels used:    1
 13999 ;; Hardware stack levels required when called:   11
 14000 ;; This function calls:
 14001 ;;		Nothing
 14002 ;; This function is called by:
 14003 ;;		_Term_MainSm
 14004 ;; This function uses a non-reentrant model
 14005 ;;
 14006                           
 14007                           	psect	text57
 14008  004EEA                     __ptext57:
 14009                           	opt stack 0
 14010  004EEA                     _strcat:
 14011                           	opt stack 15
 14012                           
 14013                           ; BSR set to: 0
 14014                           ;incstack = 0
 14015  004EEA  C07D  F081         	movff	strcat@to,strcat@cp
 14016  004EEE  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14017  004EF2  D003               	goto	l3177
 14018  004EF4  0100               	movlb	0	; () banked
 14019  004EF6  4B81               	infsnz	strcat@cp& (0+255),f,b
 14020  004EF8  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14021  004EFA                     l3177:
 14022                           
 14023                           ; BSR set to: 0
 14024  004EFA  C081  FFD9         	movff	strcat@cp,fsr2l
 14025  004EFE  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14026  004F02  50DF               	movf	indf2,w,c
 14027  004F04  B4D8               	btfsc	status,2,c
 14028  004F06  D006               	goto	l3180
 14029  004F08  D7F5               	goto	l3178
 14030  004F0A  0100               	movlb	0	; () banked
 14031  004F0C  4B81               	infsnz	strcat@cp& (0+255),f,b
 14032  004F0E  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14033  004F10  4B7F               	infsnz	strcat@from& (0+255),f,b
 14034  004F12  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14035  004F14                     l3180:
 14036                           
 14037                           ; BSR set to: 0
 14038  004F14  C07F  FFF6         	movff	strcat@from,tblptrl
 14039  004F18  C080  FFF7         	movff	strcat@from+1,tblptrh
 14040  004F1C  6AF8               	clrf	tblptru,c
 14041  004F1E  C081  FFD9         	movff	strcat@cp,fsr2l
 14042  004F22  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14043  004F26  0E0E               	movlw	(high __ramtop+-1)
 14044  004F28  64F7               	cpfsgt	tblptrh,c
 14045  004F2A  D003               	bra	u11997
 14046  004F2C  0008               	tblrd		*
 14047  004F2E  50F5               	movf	tablat,w,c
 14048  004F30  D005               	bra	u11990
 14049  004F32                     u11997:
 14050  004F32  CFF6 FFE9          	movff	tblptrl,fsr0l
 14051  004F36  CFF7 FFEA          	movff	tblptrh,fsr0h
 14052  004F3A  50EF               	movf	indf0,w,c
 14053  004F3C                     u11990:
 14054  004F3C  6EDF               	movwf	indf2,c
 14055  004F3E  50DF               	movf	indf2,w,c
 14056  004F40  B4D8               	btfsc	status,2,c
 14057  004F42  0012               	return	
 14058  004F44  D7E2               	goto	l3181
 14059  004F46                     __end_of_strcat:
 14060                           	opt stack 0
 14061                           tosu	equ	0xFFF
 14062                           tosh	equ	0xFFE
 14063                           tosl	equ	0xFFD
 14064                           pclath	equ	0xFFA
 14065                           tblptru	equ	0xFF8
 14066                           tblptrh	equ	0xFF7
 14067                           tblptrl	equ	0xFF6
 14068                           tablat	equ	0xFF5
 14069                           prodh	equ	0xFF4
 14070                           prodl	equ	0xFF3
 14071                           intcon	equ	0xFF2
 14072                           intcon2	equ	0xFF1
 14073                           intcon3	equ	0xFF0
 14074                           indf0	equ	0xFEF
 14075                           postinc0	equ	0xFEE
 14076                           plusw0	equ	0xFEB
 14077                           fsr0h	equ	0xFEA
 14078                           fsr0l	equ	0xFE9
 14079                           wreg	equ	0xFE8
 14080                           indf1	equ	0xFE7
 14081                           postinc1	equ	0xFE6
 14082                           postdec1	equ	0xFE5
 14083                           plusw1	equ	0xFE3
 14084                           fsr1h	equ	0xFE2
 14085                           fsr1l	equ	0xFE1
 14086                           indf2	equ	0xFDF
 14087                           postinc2	equ	0xFDE
 14088                           postdec2	equ	0xFDD
 14089                           plusw2	equ	0xFDB
 14090                           fsr2h	equ	0xFDA
 14091                           fsr2l	equ	0xFD9
 14092                           status	equ	0xFD8
 14093                           
 14094 ;; *************** function _sprintf *****************
 14095 ;; Defined at:
 14096 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14097 ;; Parameters:    Size  Location     Type
 14098 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14099 ;;		 -> Term_MainSm@Data(50), 
 14100 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14101 ;;		 -> STR_27(17), 
 14102 ;; Auto vars:     Size  Location     Type
 14103 ;;  tmpval          4    0        struct .
 14104 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14105 ;;		 -> STR_30(7), STR_28(12), 
 14106 ;;  ap              2   36[BANK0 ] PTR void [1]
 14107 ;;		 -> ?_sprintf(2), 
 14108 ;;  len             2    0        unsigned int 
 14109 ;;  val             2    0        unsigned int 
 14110 ;;  c               1   38[BANK0 ] char 
 14111 ;;  flag            1   35[BANK0 ] unsigned char 
 14112 ;;  prec            1    0        char 
 14113 ;; Return value:  Size  Location     Type
 14114 ;;                  2   29[BANK0 ] int 
 14115 ;; Registers used:
 14116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14117 ;; Tracked objects:
 14118 ;;		On entry : 0/0
 14119 ;;		On exit  : 0/0
 14120 ;;		Unchanged: 0/0
 14121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14122 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14123 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14125 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14126 ;;Total ram usage:       12 bytes
 14127 ;; Hardware stack levels used:    1
 14128 ;; Hardware stack levels required when called:   11
 14129 ;; This function calls:
 14130 ;;		Nothing
 14131 ;; This function is called by:
 14132 ;;		_Term_MainSm
 14133 ;; This function uses a non-reentrant model
 14134 ;;
 14135                           
 14136                           	psect	text58
 14137  0035AC                     __ptext58:
 14138                           	opt stack 0
 14139  0035AC                     _sprintf:
 14140                           	opt stack 15
 14141                           
 14142                           ;doprnt.c: 494: va_list ap;
 14143                           ;doprnt.c: 499: signed char c;
 14144                           ;doprnt.c: 506: signed char prec;
 14145                           ;doprnt.c: 508: unsigned char flag;
 14146                           ;doprnt.c: 523: union {
 14147                           ;doprnt.c: 524: unsigned long vd;
 14148                           ;doprnt.c: 525: double integ;
 14149                           ;doprnt.c: 526: } tmpval;
 14150                           ;doprnt.c: 528: unsigned int val;
 14151                           ;doprnt.c: 529: unsigned len;
 14152                           ;doprnt.c: 530: const char * cp;
 14153                           ;doprnt.c: 533: *ap = __va_start();
 14154                           
 14155                           ;incstack = 0
 14156  0035AC  0E81               	movlw	low (?_sprintf+4)
 14157  0035AE  0100               	movlb	0	; () banked
 14158  0035B0  6F84               	movwf	sprintf@ap& (0+255),b
 14159  0035B2  0E00               	movlw	high (?_sprintf+4)
 14160  0035B4  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14161                           
 14162                           ;doprnt.c: 536: while(c = *f++) {
 14163  0035B6  D04E               	goto	l2581
 14164  0035B8                     
 14165                           ; BSR set to: 0
 14166                           ;doprnt.c: 538: if(c != '%')
 14167                           
 14168                           ; BSR set to: 0
 14169  0035B8  0E25               	movlw	37
 14170  0035BA  1986               	xorwf	sprintf@c& (0+255),w,b
 14171  0035BC  B4D8               	btfsc	status,2,c
 14172  0035BE  D009               	goto	l2571
 14173                           
 14174                           ; BSR set to: 0
 14175                           ;doprnt.c: 540: {
 14176                           ;doprnt.c: 541: ((*sp++ = (c)));
 14177  0035C0  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14178  0035C4  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14179  0035C8  C086  FFDF         	movff	sprintf@c,indf2
 14180                           
 14181                           ; BSR set to: 0
 14182  0035CC  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14183  0035CE  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14184                           
 14185                           ;doprnt.c: 542: continue;
 14186  0035D0  D041               	goto	l2581
 14187  0035D2                     l2571:
 14188                           
 14189                           ; BSR set to: 0
 14190                           ;doprnt.c: 543: }
 14191                           ;doprnt.c: 548: flag = 0;
 14192                           
 14193                           ; BSR set to: 0
 14194  0035D2  0E00               	movlw	0
 14195  0035D4  6F83               	movwf	sprintf@flag& (0+255),b
 14196                           
 14197                           ;doprnt.c: 635: switch(c = *f++) {
 14198  0035D6  D02E               	goto	l2572
 14199  0035D8                     
 14200                           ; BSR set to: 0
 14201                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14202                           
 14203                           ; BSR set to: 0
 14204  0035D8  C084  FFD9         	movff	sprintf@ap,fsr2l
 14205  0035DC  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14206  0035E0  CFDE F087          	movff	postinc2,sprintf@cp
 14207  0035E4  CFDD F088          	movff	postdec2,sprintf@cp+1
 14208                           
 14209                           ; BSR set to: 0
 14210  0035E8  0E02               	movlw	2
 14211  0035EA  2784               	addwf	sprintf@ap& (0+255),f,b
 14212  0035EC  0E00               	movlw	0
 14213  0035EE  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14214                           
 14215                           ; BSR set to: 0
 14216                           ;doprnt.c: 740: if(!cp)
 14217  0035F0  5187               	movf	sprintf@cp& (0+255),w,b
 14218  0035F2  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14219  0035F4  A4D8               	btfss	status,2,c
 14220  0035F6  D014               	goto	l2577
 14221                           
 14222                           ; BSR set to: 0
 14223                           ;doprnt.c: 741: cp = "(null)";
 14224  0035F8  0ED7               	movlw	low STR_30
 14225  0035FA  6F87               	movwf	sprintf@cp& (0+255),b
 14226  0035FC  0EFF               	movlw	high STR_30
 14227  0035FE  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14228                           
 14229                           ; BSR set to: 0
 14230                           ;doprnt.c: 777: while(*cp)
 14231  003600  D00F               	goto	l2577
 14232  003602                     
 14233                           ; BSR set to: 0
 14234                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14235                           
 14236                           ; BSR set to: 0
 14237  003602  C087  FFF6         	movff	sprintf@cp,tblptrl
 14238  003606  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14239  00360A                     	if	0	;tblptru may be non-zero
 14240  00360A                     	endif
 14241  00360A                     	if	0	;tblptru may be non-zero
 14242  00360A                     	endif
 14243  00360A  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14244  00360E  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14245  003612  0008               	tblrd		*
 14246  003614  CFF5 FFDF          	movff	tablat,indf2
 14247                           
 14248                           ; BSR set to: 0
 14249  003618  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14250  00361A  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14251                           
 14252                           ; BSR set to: 0
 14253  00361C  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14254  00361E  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14255  003620                     l2577:
 14256                           
 14257                           ; BSR set to: 0
 14258                           
 14259                           ; BSR set to: 0
 14260  003620  C087  FFF6         	movff	sprintf@cp,tblptrl
 14261  003624  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14262  003628                     	if	0	;tblptru may be non-zero
 14263  003628                     	endif
 14264  003628                     	if	0	;tblptru may be non-zero
 14265  003628                     	endif
 14266  003628  0008               	tblrd		*
 14267  00362A  50F5               	movf	tablat,w,c
 14268  00362C  0900               	iorlw	0
 14269  00362E  B4D8               	btfsc	status,2,c
 14270  003630  D011               	goto	l2581
 14271  003632  D7E7               	goto	l2578
 14272  003634                     l2572:
 14273                           
 14274                           ; BSR set to: 0
 14275                           
 14276                           ; BSR set to: 0
 14277  003634  C07F  FFF6         	movff	sprintf@f,tblptrl
 14278  003638  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14279  00363C  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14280  00363E  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14281  003640                     	if	0	;tblptru may be non-zero
 14282  003640                     	endif
 14283  003640                     	if	0	;tblptru may be non-zero
 14284  003640                     	endif
 14285  003640  0008               	tblrd		*
 14286  003642  CFF5 F086          	movff	tablat,sprintf@c
 14287  003646  5186               	movf	sprintf@c& (0+255),w,b
 14288                           
 14289                           ; Switch size 1, requested type "space"
 14290                           ; Number of cases is 2, Range of values is 0 to 115
 14291                           ; switch strategies available:
 14292                           ; Name         Instructions Cycles
 14293                           ; simple_byte            7     4 (average)
 14294                           ;	Chosen strategy is simple_byte
 14295  003648  0A00               	xorlw	0	; case 0
 14296  00364A  B4D8               	btfsc	status,2,c
 14297  00364C  D00F               	goto	u12050
 14298  00364E  0A73               	xorlw	115	; case 115
 14299  003650  B4D8               	btfsc	status,2,c
 14300  003652  D7C2               	goto	l2575
 14301  003654                     l2581:
 14302                           
 14303                           ; BSR set to: 0
 14304                           
 14305                           ; BSR set to: 0
 14306                           
 14307                           ;doprnt.c: 1422: {
 14308                           
 14309                           ; BSR set to: 0
 14310  003654  C07F  FFF6         	movff	sprintf@f,tblptrl
 14311  003658  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14312  00365C  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14313  00365E  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14314  003660                     	if	0	;tblptru may be non-zero
 14315  003660                     	endif
 14316  003660                     	if	0	;tblptru may be non-zero
 14317  003660                     	endif
 14318  003660  0008               	tblrd		*
 14319  003662  CFF5 F086          	movff	tablat,sprintf@c
 14320  003666  5186               	movf	sprintf@c& (0+255),w,b
 14321  003668  A4D8               	btfss	status,2,c
 14322  00366A  D7A6               	goto	l2570
 14323  00366C                     u12050:
 14324                           
 14325                           ; BSR set to: 0
 14326                           ;doprnt.c: 1538: *sp = 0;
 14327                           
 14328                           ; BSR set to: 0
 14329                           
 14330                           ;doprnt.c: 1469: }
 14331                           ;doprnt.c: 1533: }
 14332                           ;doprnt.c: 1535: alldone:
 14333                           
 14334                           ; BSR set to: 0
 14335  00366C  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14336  003670  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14337  003674  0E00               	movlw	0
 14338  003676  6EDF               	movwf	indf2,c
 14339  003678  0012               	return	
 14340  00367A                     __end_of_sprintf:
 14341                           	opt stack 0
 14342                           tosu	equ	0xFFF
 14343                           tosh	equ	0xFFE
 14344                           tosl	equ	0xFFD
 14345                           pclath	equ	0xFFA
 14346                           tblptru	equ	0xFF8
 14347                           tblptrh	equ	0xFF7
 14348                           tblptrl	equ	0xFF6
 14349                           tablat	equ	0xFF5
 14350                           prodh	equ	0xFF4
 14351                           prodl	equ	0xFF3
 14352                           intcon	equ	0xFF2
 14353                           intcon2	equ	0xFF1
 14354                           intcon3	equ	0xFF0
 14355                           indf0	equ	0xFEF
 14356                           postinc0	equ	0xFEE
 14357                           plusw0	equ	0xFEB
 14358                           fsr0h	equ	0xFEA
 14359                           fsr0l	equ	0xFE9
 14360                           wreg	equ	0xFE8
 14361                           indf1	equ	0xFE7
 14362                           postinc1	equ	0xFE6
 14363                           postdec1	equ	0xFE5
 14364                           plusw1	equ	0xFE3
 14365                           fsr1h	equ	0xFE2
 14366                           fsr1l	equ	0xFE1
 14367                           indf2	equ	0xFDF
 14368                           postinc2	equ	0xFDE
 14369                           postdec2	equ	0xFDD
 14370                           plusw2	equ	0xFDB
 14371                           fsr2h	equ	0xFDA
 14372                           fsr2l	equ	0xFD9
 14373                           status	equ	0xFD8
 14374                           
 14375 ;; *************** function _memset *****************
 14376 ;; Defined at:
 14377 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14378 ;; Parameters:    Size  Location     Type
 14379 ;;  p1              2   29[BANK0 ] PTR void 
 14380 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14381 ;;  c               2   31[BANK0 ] int 
 14382 ;;  n               2   33[BANK0 ] unsigned int 
 14383 ;; Auto vars:     Size  Location     Type
 14384 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14385 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14386 ;; Return value:  Size  Location     Type
 14387 ;;                  2   29[BANK0 ] PTR void 
 14388 ;; Registers used:
 14389 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14390 ;; Tracked objects:
 14391 ;;		On entry : 0/0
 14392 ;;		On exit  : 0/0
 14393 ;;		Unchanged: 0/0
 14394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14395 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14396 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14398 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14399 ;;Total ram usage:        8 bytes
 14400 ;; Hardware stack levels used:    1
 14401 ;; Hardware stack levels required when called:   11
 14402 ;; This function calls:
 14403 ;;		Nothing
 14404 ;; This function is called by:
 14405 ;;		_USBDeviceInit
 14406 ;;		_USBStdSetCfgHandler
 14407 ;;		_Term_MainSm
 14408 ;; This function uses a non-reentrant model
 14409 ;;
 14410                           
 14411                           	psect	text59
 14412  0059AA                     __ptext59:
 14413                           	opt stack 0
 14414  0059AA                     _memset:
 14415                           	opt stack 14
 14416                           
 14417                           ; BSR set to: 0
 14418                           ;incstack = 0
 14419  0059AA  C07D  F083         	movff	memset@p1,memset@p
 14420  0059AE  C07E  F084         	movff	memset@p1+1,memset@p+1
 14421  0059B2  D009               	goto	l3051
 14422  0059B4                     l11460:
 14423  0059B4  C083  FFD9         	movff	memset@p,fsr2l
 14424  0059B8  C084  FFDA         	movff	memset@p+1,fsr2h
 14425  0059BC  C07F  FFDF         	movff	memset@c,indf2
 14426  0059C0  0100               	movlb	0	; () banked
 14427  0059C2  4B83               	infsnz	memset@p& (0+255),f,b
 14428  0059C4  2B84               	incf	(memset@p+1)& (0+255),f,b
 14429  0059C6                     l3051:
 14430                           
 14431                           ; BSR set to: 0
 14432  0059C6  0100               	movlb	0	; () banked
 14433  0059C8  0781               	decf	memset@n& (0+255),f,b
 14434  0059CA  A0D8               	btfss	status,0,c
 14435  0059CC  0782               	decf	(memset@n+1)& (0+255),f,b
 14436  0059CE  2981               	incf	memset@n& (0+255),w,b
 14437  0059D0  E1F1               	bnz	l11460
 14438  0059D2  2982               	incf	(memset@n+1)& (0+255),w,b
 14439  0059D4  B4D8               	btfsc	status,2,c
 14440  0059D6  0012               	return	
 14441  0059D8  D7ED               	goto	l3052
 14442  0059DA                     __end_of_memset:
 14443                           	opt stack 0
 14444                           tosu	equ	0xFFF
 14445                           tosh	equ	0xFFE
 14446                           tosl	equ	0xFFD
 14447                           pclath	equ	0xFFA
 14448                           tblptru	equ	0xFF8
 14449                           tblptrh	equ	0xFF7
 14450                           tblptrl	equ	0xFF6
 14451                           tablat	equ	0xFF5
 14452                           prodh	equ	0xFF4
 14453                           prodl	equ	0xFF3
 14454                           intcon	equ	0xFF2
 14455                           intcon2	equ	0xFF1
 14456                           intcon3	equ	0xFF0
 14457                           indf0	equ	0xFEF
 14458                           postinc0	equ	0xFEE
 14459                           plusw0	equ	0xFEB
 14460                           fsr0h	equ	0xFEA
 14461                           fsr0l	equ	0xFE9
 14462                           wreg	equ	0xFE8
 14463                           indf1	equ	0xFE7
 14464                           postinc1	equ	0xFE6
 14465                           postdec1	equ	0xFE5
 14466                           plusw1	equ	0xFE3
 14467                           fsr1h	equ	0xFE2
 14468                           fsr1l	equ	0xFE1
 14469                           indf2	equ	0xFDF
 14470                           postinc2	equ	0xFDE
 14471                           postdec2	equ	0xFDD
 14472                           plusw2	equ	0xFDB
 14473                           fsr2h	equ	0xFDA
 14474                           fsr2l	equ	0xFD9
 14475                           status	equ	0xFD8
 14476                           
 14477 ;; *************** function _Terminal *****************
 14478 ;; Defined at:
 14479 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14480 ;; Parameters:    Size  Location     Type
 14481 ;;		None
 14482 ;; Auto vars:     Size  Location     Type
 14483 ;;  i               1   68[BANK0 ] unsigned char 
 14484 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14485 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14486 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14487 ;;  Index           1   70[BANK0 ] unsigned char 
 14488 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14489 ;; Return value:  Size  Location     Type
 14490 ;;                  1    wreg      void 
 14491 ;; Registers used:
 14492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14493 ;; Tracked objects:
 14494 ;;		On entry : 0/0
 14495 ;;		On exit  : 0/0
 14496 ;;		Unchanged: 0/0
 14497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14499 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14500 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14501 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14502 ;;Total ram usage:      455 bytes
 14503 ;; Hardware stack levels used:    1
 14504 ;; Hardware stack levels required when called:   15
 14505 ;; This function calls:
 14506 ;;		_I2cSlv_I2cReadMsgSts
 14507 ;;		_I2cSlv_ReceiveI2cMsg
 14508 ;;		_I2cSlv_SendI2cMsg
 14509 ;;		_OsTmr_Wait
 14510 ;;		_atoi
 14511 ;;		_getsUSBUSART
 14512 ;;		_itoa
 14513 ;;		_putUSBUSART
 14514 ;;		_strcpy
 14515 ;;		_strtol
 14516 ;;		_xtoi
 14517 ;; This function is called by:
 14518 ;;		_Term_MainSm
 14519 ;; This function uses a non-reentrant model
 14520 ;;
 14521                           
 14522                           	psect	text60
 14523  0000D0                     __ptext60:
 14524                           	opt stack 0
 14525  0000D0                     _Terminal:
 14526                           	opt stack 11
 14527                           
 14528                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14529                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14530                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14531                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14532                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14533                           ;term.c: 435: UINT8 Index;
 14534                           ;term.c: 436: static UINT8 Len[4];
 14535                           ;term.c: 437: static UINT8 PackageLen;
 14536                           ;term.c: 438: static UINT8 Addr[4];
 14537                           ;term.c: 439: static UINT8 SlaveAddr;
 14538                           ;term.c: 440: static PayloadType Payload[20u];
 14539                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14540                           
 14541                           ; BSR set to: 0
 14542                           ;incstack = 0
 14543  0000D0  0E00               	movlw	0
 14544  0000D2  0100               	movlb	0	; () banked
 14545  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14546                           
 14547                           ; BSR set to: 0
 14548                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14549                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14550                           ;term.c: 445: static SwTimerType SwTimer;
 14551                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14552  0000D6  0E1F               	movlw	31
 14553  0000D8  65CB               	cpfsgt	_USBDeviceState& (0+255),b
 14554  0000DA  0012               	return	
 14555                           
 14556                           ; BSR set to: 0
 14557  0000DC  B265               	btfsc	3941,1,c	;volatile
 14558  0000DE  0012               	return	
 14559  0000E0  D278               	goto	l2353
 14560  0000E2                     
 14561                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14562                           
 14563                           ; BSR set to: 0
 14564  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14565  0000E4  0100               	movlb	0	; () banked
 14566  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14567  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14568  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14569  0000EC  0EC8               	movlw	200
 14570  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14571  0000F0  ECAC  F022         	call	_getsUSBUSART	;wreg free
 14572  0000F4  0100               	movlb	0	; () banked
 14573  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14574                           
 14575                           ; BSR set to: 0
 14576                           ;term.c: 458: if (ReceivedBytes > 0)
 14577  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14578  0000FA  B4D8               	btfsc	status,2,c
 14579  0000FC  0012               	return	
 14580                           
 14581                           ; BSR set to: 0
 14582                           ;term.c: 459: {
 14583                           ;term.c: 461: if (EchoOption == 1u)
 14584  0000FE  0102               	movlb	2	; () banked
 14585  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 14586  000102  A4D8               	btfss	status,2,c
 14587  000104  D026               	goto	l2357
 14588                           
 14589                           ; BSR set to: 2
 14590                           ;term.c: 462: {
 14591                           ;term.c: 464: if((cdc_trf_state == 0))
 14592  000106  0100               	movlb	0	; () banked
 14593  000108  51C1               	movf	_cdc_trf_state& (0+255),w,b
 14594  00010A  A4D8               	btfss	status,2,c
 14595  00010C  D022               	goto	l2357
 14596                           
 14597                           ; BSR set to: 0
 14598                           ;term.c: 465: {
 14599                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 14600  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14601  000110  0D01               	mullw	1
 14602  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 14603  000114  24F3               	addwf	prodl,w,c
 14604  000116  6ED9               	movwf	fsr2l,c
 14605  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 14606  00011A  20F4               	addwfc	prodh,w,c
 14607  00011C  6EDA               	movwf	fsr2h,c
 14608  00011E  0E0D               	movlw	13
 14609  000120  6EDF               	movwf	indf2,c
 14610                           
 14611                           ; BSR set to: 0
 14612                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 14613  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14614  000124  6FA2               	movwf	??_Terminal& (0+255),b
 14615  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 14616  000128  0E01               	movlw	1
 14617  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 14618  00012C  0E00               	movlw	0
 14619  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 14620  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 14621  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 14622  000134  6ED9               	movwf	fsr2l,c
 14623  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 14624  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 14625  00013A  6EDA               	movwf	fsr2h,c
 14626  00013C  0E0A               	movlw	10
 14627  00013E  6EDF               	movwf	indf2,c
 14628                           
 14629                           ; BSR set to: 0
 14630                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 14631  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 14632  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 14633  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 14634  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14635  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14636  00014A  0F02               	addlw	2
 14637  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 14638  00014E  EC1B  F02E         	call	_putUSBUSART	;wreg free
 14639  000152                     l2357:
 14640                           
 14641                           ;term.c: 469: }
 14642                           ;term.c: 470: }
 14643                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 14644                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 14645                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14646  000152  0E53               	movlw	83
 14647  000154  010A               	movlb	10	; () banked
 14648  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14649  000158  A4D8               	btfss	status,2,c
 14650  00015A  D043               	goto	l2358
 14651                           
 14652                           ; BSR set to: 10
 14653  00015C  0E4F               	movlw	79
 14654  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14655  000160  A4D8               	btfss	status,2,c
 14656  000162  D03F               	goto	l2358
 14657                           
 14658                           ; BSR set to: 10
 14659  000164  0E3A               	movlw	58
 14660  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14661  000168  A4D8               	btfss	status,2,c
 14662  00016A  D03B               	goto	l2358
 14663                           
 14664                           ; BSR set to: 10
 14665                           ;term.c: 476: {
 14666                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14667  00016C  0E47               	movlw	71
 14668  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14669  000170  A4D8               	btfss	status,2,c
 14670  000172  0012               	return	
 14671                           
 14672                           ; BSR set to: 10
 14673  000174  0E3A               	movlw	58
 14674  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14675  000178  A4D8               	btfss	status,2,c
 14676  00017A  0012               	return	
 14677                           
 14678                           ; BSR set to: 10
 14679                           ;term.c: 479: {
 14680                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 14681  00017C  0E44               	movlw	68
 14682  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14683  000180  A4D8               	btfss	status,2,c
 14684  000182  D015               	goto	l2360
 14685                           
 14686                           ; BSR set to: 10
 14687  000184  0E46               	movlw	70
 14688  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14689  000188  A4D8               	btfss	status,2,c
 14690  00018A  D011               	goto	l2360
 14691                           
 14692                           ; BSR set to: 10
 14693                           ;term.c: 482: {
 14694                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 14695  00018C  0E41               	movlw	65
 14696  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14697  000190  A4D8               	btfss	status,2,c
 14698  000192  D004               	goto	l2361
 14699                           
 14700                           ; BSR set to: 10
 14701                           ;term.c: 484: {
 14702                           ;term.c: 485: FormatOption = 1u;
 14703  000194  0E01               	movlw	1
 14704  000196  0102               	movlb	2	; () banked
 14705  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14706                           
 14707                           ;term.c: 486: }
 14708  00019A  0012               	return	
 14709  00019C                     l2361:
 14710                           
 14711                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 14712                           
 14713                           ; BSR set to: 2
 14714  00019C  0E42               	movlw	66
 14715  00019E  010A               	movlb	10	; () banked
 14716  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14717  0001A2  A4D8               	btfss	status,2,c
 14718  0001A4  0012               	return	
 14719                           
 14720                           ; BSR set to: 10
 14721                           ;term.c: 488: {
 14722                           ;term.c: 489: FormatOption = 0u;
 14723  0001A6  0E00               	movlw	0
 14724  0001A8  0102               	movlb	2	; () banked
 14725  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14726                           
 14727                           ; BSR set to: 2
 14728                           ;term.c: 490: }
 14729                           ;term.c: 491: }
 14730                           
 14731                           ; BSR set to: 2
 14732  0001AC  0012               	return	
 14733  0001AE                     l2360:
 14734                           
 14735                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 14736                           
 14737                           ; BSR set to: 2
 14738  0001AE  0E45               	movlw	69
 14739  0001B0  010A               	movlb	10	; () banked
 14740  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14741  0001B4  A4D8               	btfss	status,2,c
 14742  0001B6  0012               	return	
 14743                           
 14744                           ; BSR set to: 10
 14745  0001B8  0E4D               	movlw	77
 14746  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14747  0001BC  A4D8               	btfss	status,2,c
 14748  0001BE  0012               	return	
 14749                           
 14750                           ; BSR set to: 10
 14751                           ;term.c: 494: {
 14752                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 14753  0001C0  0E31               	movlw	49
 14754  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14755  0001C4  A4D8               	btfss	status,2,c
 14756  0001C6  D004               	goto	l2366
 14757                           
 14758                           ; BSR set to: 10
 14759                           ;term.c: 496: {
 14760                           ;term.c: 497: EchoOption = 1u;
 14761  0001C8  0E01               	movlw	1
 14762  0001CA  0102               	movlb	2	; () banked
 14763  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 14764                           
 14765                           ;term.c: 498: }
 14766  0001CE  0012               	return	
 14767  0001D0                     l2366:
 14768                           
 14769                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 14770                           
 14771                           ; BSR set to: 2
 14772  0001D0  0E30               	movlw	48
 14773  0001D2  010A               	movlb	10	; () banked
 14774  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14775  0001D6  A4D8               	btfss	status,2,c
 14776  0001D8  0012               	return	
 14777                           
 14778                           ; BSR set to: 10
 14779                           ;term.c: 500: {
 14780                           ;term.c: 501: EchoOption = 0u;
 14781  0001DA  0E00               	movlw	0
 14782  0001DC  0102               	movlb	2	; () banked
 14783  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 14784                           
 14785                           ; BSR set to: 2
 14786                           ;term.c: 507: }
 14787                           ;term.c: 508: }
 14788                           ;term.c: 509: }
 14789                           
 14790                           ; BSR set to: 2
 14791                           
 14792                           ; BSR set to: 2
 14793                           
 14794                           ;term.c: 504: else
 14795                           ;term.c: 505: {
 14796                           
 14797                           ; BSR set to: 2
 14798                           
 14799                           ; BSR set to: 2
 14800                           ;term.c: 502: }
 14801                           ;term.c: 503: }
 14802                           
 14803                           ; BSR set to: 2
 14804  0001E0  0012               	return	
 14805  0001E2                     l2358:
 14806                           
 14807                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 14808                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 14809                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14810                           
 14811                           ; BSR set to: 2
 14812  0001E2  0E53               	movlw	83
 14813  0001E4  010A               	movlb	10	; () banked
 14814  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14815  0001E8  A4D8               	btfss	status,2,c
 14816  0001EA  D0D3               	goto	l2371
 14817                           
 14818                           ; BSR set to: 10
 14819  0001EC  0E42               	movlw	66
 14820  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14821  0001F0  A4D8               	btfss	status,2,c
 14822  0001F2  D0CF               	goto	l2371
 14823                           
 14824                           ; BSR set to: 10
 14825  0001F4  0E3A               	movlw	58
 14826  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14827  0001F8  A4D8               	btfss	status,2,c
 14828  0001FA  D0CB               	goto	l2371
 14829                           
 14830                           ; BSR set to: 10
 14831                           ;term.c: 513: {
 14832                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14833  0001FC  0E57               	movlw	87
 14834  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14835  000200  A4D8               	btfss	status,2,c
 14836  000202  D091               	goto	l2372
 14837                           
 14838                           ; BSR set to: 10
 14839  000204  0E3A               	movlw	58
 14840  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14841  000208  A4D8               	btfss	status,2,c
 14842  00020A  D08D               	goto	l2372
 14843                           
 14844                           ; BSR set to: 10
 14845                           ;term.c: 515: {
 14846                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 14847  00020C  CA05  F3AB         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 14848                           
 14849                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 14850  000210  CA06  F3AC         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 14851                           
 14852                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 14853  000214  CA08  F3A7         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 14854                           
 14855                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 14856  000218  CA09  F3A8         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 14857                           
 14858                           ; BSR set to: 10
 14859                           ;term.c: 523: PackageLen = atoi((void*)Len);
 14860  00021C  0EAB               	movlw	low Terminal@Len
 14861  00021E  0100               	movlb	0	; () banked
 14862  000220  6F83               	movwf	atoi@s& (0+255),b
 14863  000222  0E03               	movlw	high Terminal@Len
 14864  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 14865  000226  EC6A  F01A         	call	_atoi	;wreg free
 14866  00022A  0100               	movlb	0	; () banked
 14867  00022C  5183               	movf	?_atoi& (0+255),w,b
 14868  00022E  0102               	movlb	2	; () banked
 14869  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 14870                           
 14871                           ; BSR set to: 2
 14872                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 14873  000232  0EA7               	movlw	low Terminal@Addr
 14874  000234  0100               	movlb	0	; () banked
 14875  000236  6F83               	movwf	xtoi@s& (0+255),b
 14876  000238  0E03               	movlw	high Terminal@Addr
 14877  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 14878  00023C  EC19  F019         	call	_xtoi	;wreg free
 14879  000240  0100               	movlb	0	; () banked
 14880  000242  5183               	movf	?_xtoi& (0+255),w,b
 14881  000244  0102               	movlb	2	; () banked
 14882  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 14883                           
 14884                           ; BSR set to: 2
 14885                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 14886  000248  0E00               	movlw	0
 14887  00024A  0100               	movlb	0	; () banked
 14888  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 14889  00024E  D032               	goto	l2373
 14890  000250                     
 14891                           ;term.c: 527: {
 14892                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 14893                           
 14894                           ; BSR set to: 0
 14895  000250  0100               	movlb	0	; () banked
 14896  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 14897  000254  0D02               	mullw	2
 14898  000256  0E0B               	movlw	11
 14899  000258  26F3               	addwf	prodl,f,c
 14900  00025A  0E00               	movlw	0
 14901  00025C  22F4               	addwfc	prodh,f,c
 14902  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 14903  000260  24F3               	addwf	prodl,w,c
 14904  000262  6ED9               	movwf	fsr2l,c
 14905  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 14906  000266  20F4               	addwfc	prodh,w,c
 14907  000268  6EDA               	movwf	fsr2h,c
 14908  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 14909  00026C  0D04               	mullw	4
 14910  00026E  0E00               	movlw	low Terminal@Payload
 14911  000270  24F3               	addwf	prodl,w,c
 14912  000272  6EE1               	movwf	fsr1l,c
 14913  000274  0E05               	movlw	high Terminal@Payload
 14914  000276  20F4               	addwfc	prodh,w,c
 14915  000278  6EE2               	movwf	fsr1h,c
 14916  00027A  CFDF FFE7          	movff	indf2,indf1
 14917                           
 14918                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 14919  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 14920  000280  0D02               	mullw	2
 14921  000282  0E0C               	movlw	12
 14922  000284  26F3               	addwf	prodl,f,c
 14923  000286  0E00               	movlw	0
 14924  000288  22F4               	addwfc	prodh,f,c
 14925  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 14926  00028C  24F3               	addwf	prodl,w,c
 14927  00028E  6ED9               	movwf	fsr2l,c
 14928  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 14929  000292  20F4               	addwfc	prodh,w,c
 14930  000294  6EDA               	movwf	fsr2h,c
 14931  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 14932  000298  0D04               	mullw	4
 14933  00029A  0E01               	movlw	1
 14934  00029C  26F3               	addwf	prodl,f,c
 14935  00029E  0E00               	movlw	0
 14936  0002A0  22F4               	addwfc	prodh,f,c
 14937  0002A2  0E00               	movlw	low Terminal@Payload
 14938  0002A4  24F3               	addwf	prodl,w,c
 14939  0002A6  6EE1               	movwf	fsr1l,c
 14940  0002A8  0E05               	movlw	high Terminal@Payload
 14941  0002AA  20F4               	addwfc	prodh,w,c
 14942  0002AC  6EE2               	movwf	fsr1h,c
 14943  0002AE  CFDF FFE7          	movff	indf2,indf1
 14944                           
 14945                           ; BSR set to: 0
 14946  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 14947  0002B4                     l2373:
 14948                           
 14949                           ; BSR set to: 0
 14950                           
 14951                           ; BSR set to: 0
 14952  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 14953  0002B6  0102               	movlb	2	; () banked
 14954  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 14955  0002BA  B0D8               	btfsc	status,0,c
 14956  0002BC  D7C9               	goto	l2374
 14957                           
 14958                           ; BSR set to: 2
 14959                           ;term.c: 530: }
 14960                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 14961                           
 14962                           ; BSR set to: 2
 14963  0002BE  0E00               	movlw	0
 14964  0002C0  0100               	movlb	0	; () banked
 14965  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 14966  0002C4  D01F               	goto	l2376
 14967  0002C6                     
 14968                           ;term.c: 533: {
 14969                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 14970                           
 14971                           ; BSR set to: 0
 14972  0002C6  0100               	movlb	0	; () banked
 14973  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 14974  0002CA  0D04               	mullw	4
 14975  0002CC  0E00               	movlw	low Terminal@Payload
 14976  0002CE  24F3               	addwf	prodl,w,c
 14977  0002D0  6F89               	movwf	strtol@s& (0+255),b
 14978  0002D2  0E05               	movlw	high Terminal@Payload
 14979  0002D4  20F4               	addwfc	prodh,w,c
 14980  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 14981  0002D8  0E00               	movlw	0
 14982  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 14983  0002DC  0E00               	movlw	0
 14984  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 14985  0002E0  0E00               	movlw	0
 14986  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 14987  0002E4  0E10               	movlw	16
 14988  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 14989  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 14990  0002EC  0100               	movlb	0	; () banked
 14991  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 14992  0002F0  0D01               	mullw	1
 14993  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 14994  0002F4  24F3               	addwf	prodl,w,c
 14995  0002F6  6ED9               	movwf	fsr2l,c
 14996  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 14997  0002FA  20F4               	addwfc	prodh,w,c
 14998  0002FC  6EDA               	movwf	fsr2h,c
 14999  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15000                           
 15001                           ; BSR set to: 0
 15002  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15003  000304                     l2376:
 15004                           
 15005                           ; BSR set to: 0
 15006                           
 15007                           ; BSR set to: 0
 15008  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15009  000306  0102               	movlb	2	; () banked
 15010  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15011  00030A  B0D8               	btfsc	status,0,c
 15012  00030C  D7DC               	goto	l2377
 15013                           
 15014                           ; BSR set to: 2
 15015                           ;term.c: 539: }
 15016                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15017                           
 15018                           ; BSR set to: 2
 15019  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15020  000310  0100               	movlb	0	; () banked
 15021  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15022  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15023  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15024  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15025  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15026  000320  ECA3  F02B         	call	_I2cSlv_SendI2cMsg	;wreg free
 15027                           
 15028                           ;term.c: 543: }
 15029  000324  0012               	return	
 15030  000326                     l2372:
 15031                           
 15032                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15033  000326  0E52               	movlw	82
 15034  000328  010A               	movlb	10	; () banked
 15035  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15036  00032C  A4D8               	btfss	status,2,c
 15037  00032E  0012               	return	
 15038                           
 15039                           ; BSR set to: 10
 15040  000330  0E3A               	movlw	58
 15041  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15042  000334  A4D8               	btfss	status,2,c
 15043  000336  0012               	return	
 15044                           
 15045                           ; BSR set to: 10
 15046                           ;term.c: 545: {
 15047                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15048  000338  CA05  F3AB         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15049                           
 15050                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15051  00033C  CA06  F3AC         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15052                           
 15053                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15054  000340  CA08  F3A7         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15055                           
 15056                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15057  000344  CA09  F3A8         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15058                           
 15059                           ; BSR set to: 10
 15060                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15061  000348  0EAB               	movlw	low Terminal@Len
 15062  00034A  0100               	movlb	0	; () banked
 15063  00034C  6F83               	movwf	atoi@s& (0+255),b
 15064  00034E  0E03               	movlw	high Terminal@Len
 15065  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15066  000352  EC6A  F01A         	call	_atoi	;wreg free
 15067  000356  0100               	movlb	0	; () banked
 15068  000358  5183               	movf	?_atoi& (0+255),w,b
 15069  00035A  0102               	movlb	2	; () banked
 15070  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15071                           
 15072                           ; BSR set to: 2
 15073                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15074  00035E  0EA7               	movlw	low Terminal@Addr
 15075  000360  0100               	movlb	0	; () banked
 15076  000362  6F83               	movwf	xtoi@s& (0+255),b
 15077  000364  0E03               	movlw	high Terminal@Addr
 15078  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15079  000368  EC19  F019         	call	_xtoi	;wreg free
 15080  00036C  0100               	movlb	0	; () banked
 15081  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15082  000370  0102               	movlb	2	; () banked
 15083  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15084                           
 15085                           ; BSR set to: 2
 15086                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15087  000374  0E50               	movlw	low Terminal@TermRxBuffer
 15088  000376  0100               	movlb	0	; () banked
 15089  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15090  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15091  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15092  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15093  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15094  000386  EC24  F02B         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15095                           
 15096                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15097  00038A  0E01               	movlw	1
 15098  00038C  0102               	movlb	2	; () banked
 15099  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15100                           
 15101                           ; BSR set to: 2
 15102                           ;term.c: 561: }
 15103                           ;term.c: 562: }
 15104                           
 15105                           ; BSR set to: 2
 15106  000390  0012               	return	
 15107  000392                     l2371:
 15108                           
 15109                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15110                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15111                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15112                           
 15113                           ; BSR set to: 2
 15114  000392  0E54               	movlw	84
 15115  000394  010A               	movlb	10	; () banked
 15116  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15117  000398  A4D8               	btfss	status,2,c
 15118  00039A  0012               	return	
 15119                           
 15120                           ; BSR set to: 10
 15121  00039C  0E45               	movlw	69
 15122  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15123  0003A0  A4D8               	btfss	status,2,c
 15124  0003A2  0012               	return	
 15125                           
 15126                           ; BSR set to: 10
 15127  0003A4  0E4C               	movlw	76
 15128  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15129  0003A8  A4D8               	btfss	status,2,c
 15130  0003AA  0012               	return	
 15131                           
 15132                           ; BSR set to: 10
 15133                           ;term.c: 566: {
 15134                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15135  0003AC  CA03  F3AB         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15136                           
 15137                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15138  0003B0  CA04  F3AC         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15139                           
 15140                           ; BSR set to: 10
 15141                           ;term.c: 570: PhoneNumberLen = atoi(Len);
 15142  0003B4  0EAB               	movlw	low Terminal@Len
 15143  0003B6  0100               	movlb	0	; () banked
 15144  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15145  0003BA  0E03               	movlw	high Terminal@Len
 15146  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15147  0003BE  EC6A  F01A         	call	_atoi	;wreg free
 15148  0003C2  C083  F324         	movff	?_atoi,_PhoneNumberLen
 15149  0003C6  C084  F325         	movff	?_atoi+1,_PhoneNumberLen+1
 15150                           
 15151                           ;term.c: 572: for (UINT8 i = 0; i < PhoneNumberLen; i++)
 15152  0003CA  0E00               	movlw	0
 15153  0003CC  0100               	movlb	0	; () banked
 15154  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15155  0003D0  D018               	goto	l2383
 15156  0003D2                     
 15157                           ; BSR set to: 0
 15158                           ;term.c: 573: {
 15159                           ;term.c: 574: PhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15160                           
 15161                           ; BSR set to: 0
 15162  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15163  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15164  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15165  0003D8  0E05               	movlw	5
 15166  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15167  0003DC  0E00               	movlw	0
 15168  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15169  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15170  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15171  0003E4  6ED9               	movwf	fsr2l,c
 15172  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15173  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15174  0003EA  6EDA               	movwf	fsr2h,c
 15175  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15176  0003EE  0D01               	mullw	1
 15177  0003F0  0EC6               	movlw	low _PhoneNumber
 15178  0003F2  24F3               	addwf	prodl,w,c
 15179  0003F4  6EE1               	movwf	fsr1l,c
 15180  0003F6  0E04               	movlw	high _PhoneNumber
 15181  0003F8  20F4               	addwfc	prodh,w,c
 15182  0003FA  6EE2               	movwf	fsr1h,c
 15183  0003FC  CFDF FFE7          	movff	indf2,indf1
 15184                           
 15185                           ; BSR set to: 0
 15186  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15187  000402                     l2383:
 15188                           
 15189                           ; BSR set to: 0
 15190                           
 15191                           ; BSR set to: 0
 15192  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15193  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15194  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15195  000408  0103               	movlb	3	; () banked
 15196  00040A  5124               	movf	_PhoneNumberLen& (0+255),w,b
 15197  00040C  0100               	movlb	0	; () banked
 15198  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15199  000410  0103               	movlb	3	; () banked
 15200  000412  5125               	movf	(_PhoneNumberLen+1)& (0+255),w,b
 15201  000414  0100               	movlb	0	; () banked
 15202  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15203  000418  B0D8               	btfsc	status,0,c
 15204  00041A  0012               	return	
 15205  00041C  D7DA               	goto	l2384
 15206  00041E                     
 15207                           ;term.c: 619: if((cdc_trf_state == 0))
 15208                           
 15209                           ; BSR set to: 0
 15210  00041E  0100               	movlb	0	; () banked
 15211  000420  51C1               	movf	_cdc_trf_state& (0+255),w,b
 15212  000422  A4D8               	btfss	status,2,c
 15213  000424  0012               	return	
 15214                           
 15215                           ; BSR set to: 0
 15216                           ;term.c: 620: {
 15217                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15218  000426  0E53               	movlw	83
 15219  000428  0102               	movlb	2	; () banked
 15220  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15221                           
 15222                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15223  00042C  0E42               	movlw	66
 15224  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15225                           
 15226                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15227  000430  0E5B               	movlw	91
 15228  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15229                           
 15230                           ; BSR set to: 2
 15231                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15232  000434  C3A7  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15233                           
 15234                           ; BSR set to: 2
 15235                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15236  000438  C3A8  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15237                           
 15238                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15239  00043C  0E5D               	movlw	93
 15240  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15241                           
 15242                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15243  000440  0E3A               	movlw	58
 15244  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15245                           
 15246                           ; BSR set to: 2
 15247                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15248  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15249  000446  0100               	movlb	0	; () banked
 15250  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15251  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15252  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15253  00044E  0E07               	movlw	7
 15254  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15255  000452  EC1B  F02E         	call	_putUSBUSART	;wreg free
 15256                           
 15257                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15258  000456  0E02               	movlw	2
 15259  000458  0102               	movlb	2	; () banked
 15260  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15261                           
 15262                           ; BSR set to: 2
 15263                           ;term.c: 632: }
 15264                           ;term.c: 633: break;
 15265  00045C  0012               	return	
 15266  00045E                     
 15267                           ; BSR set to: 2
 15268                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15269                           
 15270                           ; BSR set to: 2
 15271  00045E  EC3D  F02E         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15272  000462  06E8               	decf	wreg,f,c
 15273  000464  A4D8               	btfss	status,2,c
 15274  000466  D088               	goto	l2392
 15275                           
 15276                           ;term.c: 638: {
 15277                           ;term.c: 640: if (FormatOption == 1u)
 15278  000468  0102               	movlb	2	; () banked
 15279  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15280  00046C  A4D8               	btfss	status,2,c
 15281  00046E  D027               	goto	u11930
 15282                           
 15283                           ; BSR set to: 2
 15284                           ;term.c: 641: {
 15285                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15286  000470  0E00               	movlw	0
 15287  000472  0100               	movlb	0	; () banked
 15288  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15289  000476  D01E               	goto	l2394
 15290  000478                     
 15291                           ;term.c: 644: {
 15292                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15293                           
 15294                           ; BSR set to: 0
 15295  000478  0100               	movlb	0	; () banked
 15296  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15297  00047C  0D04               	mullw	4
 15298  00047E  0E00               	movlw	low Terminal@Payload
 15299  000480  24F3               	addwf	prodl,w,c
 15300  000482  6F93               	movwf	itoa@buf& (0+255),b
 15301  000484  0E05               	movlw	high Terminal@Payload
 15302  000486  20F4               	addwfc	prodh,w,c
 15303  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15304  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15305  00048C  0D01               	mullw	1
 15306  00048E  0E50               	movlw	low Terminal@TermRxBuffer
 15307  000490  24F3               	addwf	prodl,w,c
 15308  000492  6ED9               	movwf	fsr2l,c
 15309  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15310  000496  20F4               	addwfc	prodh,w,c
 15311  000498  6EDA               	movwf	fsr2h,c
 15312  00049A  50DF               	movf	indf2,w,c
 15313  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15314  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15315  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15316  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15317  0004A4  0E00               	movlw	0
 15318  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15319  0004A8  0E0A               	movlw	10
 15320  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15321  0004AC  ECBE  F02A         	call	_itoa	;wreg free
 15322  0004B0  0100               	movlb	0	; () banked
 15323  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15324  0004B4                     l2394:
 15325                           
 15326                           ; BSR set to: 0
 15327                           
 15328                           ; BSR set to: 0
 15329  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15330  0004B6  0102               	movlb	2	; () banked
 15331  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15332  0004BA  B0D8               	btfsc	status,0,c
 15333  0004BC  D7DD               	goto	l2395
 15334  0004BE                     u11930:
 15335                           
 15336                           ; BSR set to: 2
 15337                           ;term.c: 646: }
 15338                           ;term.c: 647: }
 15339                           ;term.c: 650: if((cdc_trf_state == 0))
 15340                           
 15341                           ; BSR set to: 2
 15342                           
 15343                           ; BSR set to: 2
 15344  0004BE  0100               	movlb	0	; () banked
 15345  0004C0  51C1               	movf	_cdc_trf_state& (0+255),w,b
 15346  0004C2  A4D8               	btfss	status,2,c
 15347  0004C4  0012               	return	
 15348                           
 15349                           ; BSR set to: 0
 15350                           ;term.c: 651: {
 15351                           ;term.c: 653: if (FormatOption == 1u)
 15352  0004C6  0102               	movlb	2	; () banked
 15353  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15354  0004CA  A4D8               	btfss	status,2,c
 15355  0004CC  D02B               	goto	l2398
 15356                           
 15357                           ; BSR set to: 2
 15358                           ;term.c: 654: {
 15359                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15360  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15361  0004D0  0D08               	mullw	8
 15362  0004D2  0E03               	movlw	3
 15363  0004D4  26F3               	addwf	prodl,f,c
 15364  0004D6  0E00               	movlw	0
 15365  0004D8  22F4               	addwfc	prodh,f,c
 15366  0004DA  0E00               	movlw	low Terminal@Payload
 15367  0004DC  24F3               	addwf	prodl,w,c
 15368  0004DE  6ED9               	movwf	fsr2l,c
 15369  0004E0  0E05               	movlw	high Terminal@Payload
 15370  0004E2  20F4               	addwfc	prodh,w,c
 15371  0004E4  6EDA               	movwf	fsr2h,c
 15372  0004E6  0E0D               	movlw	13
 15373  0004E8  6EDF               	movwf	indf2,c
 15374                           
 15375                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15376  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15377  0004EC  0D08               	mullw	8
 15378  0004EE  0E02               	movlw	2
 15379  0004F0  26F3               	addwf	prodl,f,c
 15380  0004F2  0E00               	movlw	0
 15381  0004F4  22F4               	addwfc	prodh,f,c
 15382  0004F6  0E00               	movlw	low Terminal@Payload
 15383  0004F8  24F3               	addwf	prodl,w,c
 15384  0004FA  6ED9               	movwf	fsr2l,c
 15385  0004FC  0E05               	movlw	high Terminal@Payload
 15386  0004FE  20F4               	addwfc	prodh,w,c
 15387  000500  6EDA               	movwf	fsr2h,c
 15388  000502  0E0A               	movlw	10
 15389  000504  6EDF               	movwf	indf2,c
 15390                           
 15391                           ; BSR set to: 2
 15392                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15393  000506  0E00               	movlw	low Terminal@Payload
 15394  000508  0100               	movlb	0	; () banked
 15395  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15396  00050C  0E05               	movlw	high Terminal@Payload
 15397  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15398  000510  0102               	movlb	2	; () banked
 15399  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15400  000514  0D02               	mullw	2
 15401  000516  50F3               	movf	prodl,w,c
 15402  000518  0F04               	addlw	4
 15403  00051A  0100               	movlb	0	; () banked
 15404  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15405  00051E  EC1B  F02E         	call	_putUSBUSART	;wreg free
 15406                           
 15407                           ;term.c: 659: }
 15408  000522  D026               	goto	l2399
 15409  000524                     l2398:
 15410                           
 15411                           ;term.c: 660: else
 15412                           ;term.c: 661: {
 15413                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15414  000524  0102               	movlb	2	; () banked
 15415  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15416  000528  0D01               	mullw	1
 15417  00052A  0E50               	movlw	low Terminal@TermRxBuffer
 15418  00052C  24F3               	addwf	prodl,w,c
 15419  00052E  6ED9               	movwf	fsr2l,c
 15420  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15421  000532  20F4               	addwfc	prodh,w,c
 15422  000534  6EDA               	movwf	fsr2h,c
 15423  000536  0E0D               	movlw	13
 15424  000538  6EDF               	movwf	indf2,c
 15425                           
 15426                           ; BSR set to: 2
 15427                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15428  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15429  00053C  0100               	movlb	0	; () banked
 15430  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15431  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15432  000542  0E01               	movlw	1
 15433  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15434  000546  0E00               	movlw	0
 15435  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15436  00054A  0E50               	movlw	low Terminal@TermRxBuffer
 15437  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15438  00054E  6ED9               	movwf	fsr2l,c
 15439  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15440  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15441  000554  6EDA               	movwf	fsr2h,c
 15442  000556  0E0A               	movlw	10
 15443  000558  6EDF               	movwf	indf2,c
 15444                           
 15445                           ; BSR set to: 0
 15446                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15447  00055A  0E50               	movlw	low Terminal@TermRxBuffer
 15448  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15449  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15450  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15451  000562  0102               	movlb	2	; () banked
 15452  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15453  000566  0F02               	addlw	2
 15454  000568  0100               	movlb	0	; () banked
 15455  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15456  00056C  EC1B  F02E         	call	_putUSBUSART	;wreg free
 15457  000570                     l2399:
 15458                           
 15459                           ;term.c: 666: }
 15460                           ;term.c: 668: TermState = Term_GetData;
 15461  000570  0E00               	movlw	0
 15462  000572  0102               	movlb	2	; () banked
 15463  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15464                           
 15465                           ; BSR set to: 2
 15466                           ;term.c: 669: }
 15467                           ;term.c: 670: }
 15468  000576  0012               	return	
 15469  000578                     l2392:
 15470                           
 15471                           ;term.c: 671: else
 15472                           ;term.c: 672: {
 15473                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15474                           
 15475                           ; BSR set to: 2
 15476  000578  0EDA               	movlw	low Terminal@SwTimer
 15477  00057A  0100               	movlb	0	; () banked
 15478  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15479  00057E  0E04               	movlw	high Terminal@SwTimer
 15480  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15481  000582  0EB8               	movlw	184
 15482  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15483  000586  0E0B               	movlw	11
 15484  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15485  00058A  0E00               	movlw	0
 15486  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15487  00058E  0E00               	movlw	0
 15488  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15489  000592  EC29  F025         	call	_OsTmr_Wait	;wreg free
 15490  000596  06E8               	decf	wreg,f,c
 15491  000598  A4D8               	btfss	status,2,c
 15492  00059A  0012               	return	
 15493                           
 15494                           ;term.c: 675: {
 15495                           ;term.c: 677: if((cdc_trf_state == 0))
 15496  00059C  0100               	movlb	0	; () banked
 15497  00059E  51C1               	movf	_cdc_trf_state& (0+255),w,b
 15498  0005A0  A4D8               	btfss	status,2,c
 15499  0005A2  0012               	return	
 15500                           
 15501                           ; BSR set to: 0
 15502                           ;term.c: 678: {
 15503                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15504  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15505  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15506  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15507  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15508  0005AC  0E8C               	movlw	low STR_21
 15509  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15510  0005B0  0EFE               	movlw	high STR_21
 15511  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15512  0005B4  ECA4  F02C         	call	_strcpy	;wreg free
 15513                           
 15514                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15515  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15516  0005BA  0100               	movlb	0	; () banked
 15517  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15518  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15519  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15520  0005C2  0E29               	movlw	41
 15521  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15522  0005C6  EC1B  F02E         	call	_putUSBUSART	;wreg free
 15523                           
 15524                           ;term.c: 682: TermState = Term_GetData;
 15525  0005CA  0E00               	movlw	0
 15526  0005CC  0102               	movlb	2	; () banked
 15527  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15528                           
 15529                           ; BSR set to: 2
 15530                           ;term.c: 693: }
 15531                           
 15532                           ; BSR set to: 2
 15533                           ;term.c: 692: break;
 15534                           
 15535                           ;term.c: 691: default:
 15536                           
 15537                           ; BSR set to: 2
 15538                           ;term.c: 689: break;
 15539                           
 15540                           ;term.c: 688: case Term_ReadSlvUartData:
 15541                           
 15542                           ; BSR set to: 2
 15543                           ;term.c: 683: }
 15544                           ;term.c: 684: }
 15545                           ;term.c: 685: }
 15546                           ;term.c: 686: break;
 15547                           
 15548                           ; BSR set to: 2
 15549                           
 15550                           ; BSR set to: 2
 15551  0005D0  0012               	return	
 15552  0005D2                     l2353:
 15553                           
 15554                           ; BSR set to: 2
 15555  0005D2  0102               	movlb	2	; () banked
 15556  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15557                           
 15558                           ; Switch size 1, requested type "space"
 15559                           ; Number of cases is 4, Range of values is 0 to 3
 15560                           ; switch strategies available:
 15561                           ; Name         Instructions Cycles
 15562                           ; simple_byte           13     7 (average)
 15563                           ;	Chosen strategy is simple_byte
 15564  0005D6  0A00               	xorlw	0	; case 0
 15565  0005D8  B4D8               	btfsc	status,2,c
 15566  0005DA  D583               	goto	l2354
 15567  0005DC  0A01               	xorlw	1	; case 1
 15568  0005DE  B4D8               	btfsc	status,2,c
 15569  0005E0  D71E               	goto	l2389
 15570  0005E2  0A03               	xorlw	3	; case 2
 15571  0005E4  B4D8               	btfsc	status,2,c
 15572  0005E6  D73B               	goto	l2391
 15573  0005E8  0A01               	xorlw	1	; case 3
 15574  0005EA  0012               	return	
 15575  0005EC                     __end_of_Terminal:
 15576                           	opt stack 0
 15577                           tosu	equ	0xFFF
 15578                           tosh	equ	0xFFE
 15579                           tosl	equ	0xFFD
 15580                           pclath	equ	0xFFA
 15581                           tblptru	equ	0xFF8
 15582                           tblptrh	equ	0xFF7
 15583                           tblptrl	equ	0xFF6
 15584                           tablat	equ	0xFF5
 15585                           prodh	equ	0xFF4
 15586                           prodl	equ	0xFF3
 15587                           intcon	equ	0xFF2
 15588                           intcon2	equ	0xFF1
 15589                           intcon3	equ	0xFF0
 15590                           indf0	equ	0xFEF
 15591                           postinc0	equ	0xFEE
 15592                           plusw0	equ	0xFEB
 15593                           fsr0h	equ	0xFEA
 15594                           fsr0l	equ	0xFE9
 15595                           wreg	equ	0xFE8
 15596                           indf1	equ	0xFE7
 15597                           postinc1	equ	0xFE6
 15598                           postdec1	equ	0xFE5
 15599                           plusw1	equ	0xFE3
 15600                           fsr1h	equ	0xFE2
 15601                           fsr1l	equ	0xFE1
 15602                           indf2	equ	0xFDF
 15603                           postinc2	equ	0xFDE
 15604                           postdec2	equ	0xFDD
 15605                           plusw2	equ	0xFDB
 15606                           fsr2h	equ	0xFDA
 15607                           fsr2l	equ	0xFD9
 15608                           status	equ	0xFD8
 15609                           
 15610 ;; *************** function _xtoi *****************
 15611 ;; Defined at:
 15612 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 15613 ;; Parameters:    Size  Location     Type
 15614 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 15615 ;;		 -> Terminal@Addr(4), 
 15616 ;; Auto vars:     Size  Location     Type
 15617 ;;  val             2   40[BANK0 ] unsigned int 
 15618 ;;  c               1   42[BANK0 ] unsigned char 
 15619 ;;  sign            1   39[BANK0 ] unsigned char 
 15620 ;; Return value:  Size  Location     Type
 15621 ;;                  2   35[BANK0 ] unsigned int 
 15622 ;; Registers used:
 15623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15624 ;; Tracked objects:
 15625 ;;		On entry : 0/0
 15626 ;;		On exit  : 0/0
 15627 ;;		Unchanged: 0/0
 15628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15629 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15630 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15631 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15632 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15633 ;;Total ram usage:        8 bytes
 15634 ;; Hardware stack levels used:    1
 15635 ;; Hardware stack levels required when called:   13
 15636 ;; This function calls:
 15637 ;;		_isdigit
 15638 ;;		_isspace
 15639 ;;		_isupper
 15640 ;;		_isxdigit
 15641 ;;		_tolower
 15642 ;; This function is called by:
 15643 ;;		_Terminal
 15644 ;; This function uses a non-reentrant model
 15645 ;;
 15646                           
 15647                           	psect	text61
 15648  003232                     __ptext61:
 15649                           	opt stack 0
 15650  003232                     _xtoi:
 15651                           	opt stack 12
 15652                           
 15653                           ;incstack = 0
 15654  003232  0E00               	movlw	0
 15655  003234  0100               	movlb	0	; () banked
 15656  003236  6F87               	movwf	xtoi@sign& (0+255),b
 15657  003238  0E00               	movlw	0
 15658  00323A  6F89               	movwf	(xtoi@val+1)& (0+255),b
 15659  00323C  0E00               	movlw	0
 15660  00323E  6F88               	movwf	xtoi@val& (0+255),b
 15661  003240  D003               	goto	l3246
 15662  003242                     
 15663                           ; BSR set to: 0
 15664  003242  0100               	movlb	0	; () banked
 15665  003244  4B83               	infsnz	xtoi@s& (0+255),f,b
 15666  003246  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15667  003248                     l3246:
 15668                           
 15669                           ; BSR set to: 0
 15670                           
 15671                           ; BSR set to: 0
 15672  003248  C083  FFD9         	movff	xtoi@s,fsr2l
 15673  00324C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15674  003250  50DF               	movf	indf2,w,c
 15675  003252  EC76  F02D         	call	_isspace
 15676  003256  B0D8               	btfsc	status,0,c
 15677  003258  D7F4               	goto	l3247
 15678  00325A  C083  FFD9         	movff	xtoi@s,fsr2l
 15679  00325E  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15680  003262  0E2D               	movlw	45
 15681  003264  18DE               	xorwf	postinc2,w,c
 15682  003266  A4D8               	btfss	status,2,c
 15683  003268  D003               	goto	l3249
 15684  00326A  0100               	movlb	0	; () banked
 15685  00326C  2B87               	incf	xtoi@sign& (0+255),f,b
 15686  00326E  D009               	goto	L15
 15687  003270                     l3249:
 15688                           
 15689                           ; BSR set to: 0
 15690  003270  C083  FFD9         	movff	xtoi@s,fsr2l
 15691  003274  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15692  003278  0E2B               	movlw	43
 15693  00327A  18DE               	xorwf	postinc2,w,c
 15694  00327C  A4D8               	btfss	status,2,c
 15695  00327E  D028               	goto	l3252
 15696  003280  0100               	movlb	0	; () banked
 15697  003282                     L15:
 15698  003282  4B83               	infsnz	xtoi@s& (0+255),f,b
 15699  003284  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15700                           
 15701                           ; BSR set to: 0
 15702                           
 15703                           ; BSR set to: 0
 15704  003286  D024               	goto	l3252
 15705  003288                     
 15706                           ; BSR set to: 0
 15707  003288  0100               	movlb	0	; () banked
 15708  00328A  518A               	movf	xtoi@c& (0+255),w,b
 15709  00328C  EC0A  F02E         	call	_isupper
 15710  003290  A0D8               	btfss	status,0,c
 15711  003292  D006               	goto	l3254
 15712  003294  0100               	movlb	0	; () banked
 15713  003296  518A               	movf	xtoi@c& (0+255),w,b
 15714  003298  ECC2  F02E         	call	_tolower
 15715  00329C  0100               	movlb	0	; () banked
 15716  00329E  6F8A               	movwf	xtoi@c& (0+255),b
 15717  0032A0                     l3254:
 15718  0032A0  0100               	movlb	0	; () banked
 15719  0032A2  518A               	movf	xtoi@c& (0+255),w,b
 15720  0032A4  EC2C  F02E         	call	_isdigit
 15721  0032A8  A0D8               	btfss	status,0,c
 15722  0032AA  D002               	goto	l3255
 15723  0032AC  0E30               	movlw	48
 15724  0032AE  D001               	goto	L14
 15725  0032B0                     l3255:
 15726                           
 15727                           ; BSR set to: 0
 15728  0032B0  0E57               	movlw	87
 15729  0032B2                     L14:
 15730  0032B2  0100               	movlb	0	; () banked
 15731  0032B4  5F8A               	subwf	xtoi@c& (0+255),f,b
 15732                           
 15733                           ; BSR set to: 0
 15734  0032B6  3B88               	swapf	xtoi@val& (0+255),f,b
 15735  0032B8  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 15736  0032BA  0EF0               	movlw	240
 15737  0032BC  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 15738  0032BE  5188               	movf	xtoi@val& (0+255),w,b
 15739  0032C0  0B0F               	andlw	15
 15740  0032C2  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 15741  0032C4  0EF0               	movlw	240
 15742  0032C6  1788               	andwf	xtoi@val& (0+255),f,b
 15743  0032C8  518A               	movf	xtoi@c& (0+255),w,b
 15744  0032CA  2788               	addwf	xtoi@val& (0+255),f,b
 15745  0032CC  0E00               	movlw	0
 15746  0032CE  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 15747  0032D0                     l3252:
 15748                           
 15749                           ; BSR set to: 0
 15750  0032D0  C083  FFD9         	movff	xtoi@s,fsr2l
 15751  0032D4  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15752  0032D8  0100               	movlb	0	; () banked
 15753  0032DA  4B83               	infsnz	xtoi@s& (0+255),f,b
 15754  0032DC  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15755  0032DE  50DF               	movf	indf2,w,c
 15756  0032E0  6F8A               	movwf	xtoi@c& (0+255),b
 15757  0032E2  518A               	movf	xtoi@c& (0+255),w,b
 15758  0032E4  ECE1  F02B         	call	_isxdigit
 15759  0032E8  B0D8               	btfsc	status,0,c
 15760  0032EA  D7CE               	goto	l3253
 15761  0032EC  0100               	movlb	0	; () banked
 15762  0032EE  5187               	movf	xtoi@sign& (0+255),w,b
 15763  0032F0  B4D8               	btfsc	status,2,c
 15764  0032F2  D00D               	goto	l3258
 15765                           
 15766                           ; BSR set to: 0
 15767  0032F4  C088  F085         	movff	xtoi@val,??_xtoi
 15768  0032F8  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 15769  0032FC  1F85               	comf	??_xtoi& (0+255),f,b
 15770  0032FE  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 15771  003300  4B85               	infsnz	??_xtoi& (0+255),f,b
 15772  003302  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 15773  003304  C085  F083         	movff	??_xtoi,?_xtoi
 15774  003308  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 15775  00330C  0012               	return	
 15776  00330E                     l3258:
 15777                           
 15778                           ; BSR set to: 0
 15779  00330E  C088  F083         	movff	xtoi@val,?_xtoi
 15780  003312  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 15781                           
 15782                           ; BSR set to: 0
 15783  003316  0012               	return		;funcret
 15784  003318                     __end_of_xtoi:
 15785                           	opt stack 0
 15786                           tosu	equ	0xFFF
 15787                           tosh	equ	0xFFE
 15788                           tosl	equ	0xFFD
 15789                           pclath	equ	0xFFA
 15790                           tblptru	equ	0xFF8
 15791                           tblptrh	equ	0xFF7
 15792                           tblptrl	equ	0xFF6
 15793                           tablat	equ	0xFF5
 15794                           prodh	equ	0xFF4
 15795                           prodl	equ	0xFF3
 15796                           intcon	equ	0xFF2
 15797                           intcon2	equ	0xFF1
 15798                           intcon3	equ	0xFF0
 15799                           indf0	equ	0xFEF
 15800                           postinc0	equ	0xFEE
 15801                           plusw0	equ	0xFEB
 15802                           fsr0h	equ	0xFEA
 15803                           fsr0l	equ	0xFE9
 15804                           wreg	equ	0xFE8
 15805                           indf1	equ	0xFE7
 15806                           postinc1	equ	0xFE6
 15807                           postdec1	equ	0xFE5
 15808                           plusw1	equ	0xFE3
 15809                           fsr1h	equ	0xFE2
 15810                           fsr1l	equ	0xFE1
 15811                           indf2	equ	0xFDF
 15812                           postinc2	equ	0xFDE
 15813                           postdec2	equ	0xFDD
 15814                           plusw2	equ	0xFDB
 15815                           fsr2h	equ	0xFDA
 15816                           fsr2l	equ	0xFD9
 15817                           status	equ	0xFD8
 15818                           
 15819 ;; *************** function _tolower *****************
 15820 ;; Defined at:
 15821 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 15822 ;; Parameters:    Size  Location     Type
 15823 ;;  c               1    wreg     unsigned char 
 15824 ;; Auto vars:     Size  Location     Type
 15825 ;;  c               1   29[BANK0 ] unsigned char 
 15826 ;; Return value:  Size  Location     Type
 15827 ;;                  1    wreg      unsigned char 
 15828 ;; Registers used:
 15829 ;;		wreg, status,2, status,0
 15830 ;; Tracked objects:
 15831 ;;		On entry : 0/0
 15832 ;;		On exit  : 0/0
 15833 ;;		Unchanged: 0/0
 15834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15838 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15839 ;;Total ram usage:        1 bytes
 15840 ;; Hardware stack levels used:    1
 15841 ;; Hardware stack levels required when called:   11
 15842 ;; This function calls:
 15843 ;;		Nothing
 15844 ;; This function is called by:
 15845 ;;		_xtoi
 15846 ;; This function uses a non-reentrant model
 15847 ;;
 15848                           
 15849                           	psect	text62
 15850  005D84                     __ptext62:
 15851                           	opt stack 0
 15852  005D84                     _tolower:
 15853                           	opt stack 13
 15854                           
 15855                           ; BSR set to: 0
 15856                           ;incstack = 0
 15857                           ;tolower@c stored from wreg
 15858  005D84  0100               	movlb	0	; () banked
 15859  005D86  6F7D               	movwf	tolower@c& (0+255),b
 15860  005D88  0E5B               	movlw	91
 15861  005D8A  0100               	movlb	0	; () banked
 15862  005D8C  617D               	cpfslt	tolower@c& (0+255),b
 15863  005D8E  D004               	goto	l3305
 15864                           
 15865                           ; BSR set to: 0
 15866  005D90  0E40               	movlw	64
 15867  005D92  657D               	cpfsgt	tolower@c& (0+255),b
 15868  005D94  D001               	goto	l3305
 15869                           
 15870                           ; BSR set to: 0
 15871  005D96  8B7D               	bsf	tolower@c& (0+255),5,b
 15872  005D98                     l3305:
 15873                           
 15874                           ; BSR set to: 0
 15875                           
 15876                           ; BSR set to: 0
 15877  005D98  517D               	movf	tolower@c& (0+255),w,b
 15878  005D9A  0012               	return	
 15879  005D9C                     __end_of_tolower:
 15880                           	opt stack 0
 15881                           tosu	equ	0xFFF
 15882                           tosh	equ	0xFFE
 15883                           tosl	equ	0xFFD
 15884                           pclath	equ	0xFFA
 15885                           tblptru	equ	0xFF8
 15886                           tblptrh	equ	0xFF7
 15887                           tblptrl	equ	0xFF6
 15888                           tablat	equ	0xFF5
 15889                           prodh	equ	0xFF4
 15890                           prodl	equ	0xFF3
 15891                           intcon	equ	0xFF2
 15892                           intcon2	equ	0xFF1
 15893                           intcon3	equ	0xFF0
 15894                           indf0	equ	0xFEF
 15895                           postinc0	equ	0xFEE
 15896                           plusw0	equ	0xFEB
 15897                           fsr0h	equ	0xFEA
 15898                           fsr0l	equ	0xFE9
 15899                           wreg	equ	0xFE8
 15900                           indf1	equ	0xFE7
 15901                           postinc1	equ	0xFE6
 15902                           postdec1	equ	0xFE5
 15903                           plusw1	equ	0xFE3
 15904                           fsr1h	equ	0xFE2
 15905                           fsr1l	equ	0xFE1
 15906                           indf2	equ	0xFDF
 15907                           postinc2	equ	0xFDE
 15908                           postdec2	equ	0xFDD
 15909                           plusw2	equ	0xFDB
 15910                           fsr2h	equ	0xFDA
 15911                           fsr2l	equ	0xFD9
 15912                           status	equ	0xFD8
 15913                           
 15914 ;; *************** function _isxdigit *****************
 15915 ;; Defined at:
 15916 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 15917 ;; Parameters:    Size  Location     Type
 15918 ;;  c               1    wreg     unsigned char 
 15919 ;; Auto vars:     Size  Location     Type
 15920 ;;  c               1   34[BANK0 ] unsigned char 
 15921 ;; Return value:  Size  Location     Type
 15922 ;;		None               void
 15923 ;; Registers used:
 15924 ;;		wreg, status,2, status,0, cstack
 15925 ;; Tracked objects:
 15926 ;;		On entry : 0/0
 15927 ;;		On exit  : 0/0
 15928 ;;		Unchanged: 0/0
 15929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15931 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15932 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15933 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15934 ;;Total ram usage:        3 bytes
 15935 ;; Hardware stack levels used:    1
 15936 ;; Hardware stack levels required when called:   12
 15937 ;; This function calls:
 15938 ;;		_isdigit
 15939 ;; This function is called by:
 15940 ;;		_xtoi
 15941 ;; This function uses a non-reentrant model
 15942 ;;
 15943                           
 15944                           	psect	text63
 15945  0057C2                     __ptext63:
 15946                           	opt stack 0
 15947  0057C2                     _isxdigit:
 15948                           	opt stack 12
 15949                           
 15950                           ; BSR set to: 0
 15951                           ;incstack = 0
 15952                           ;isxdigit@c stored from wreg
 15953  0057C2  0100               	movlb	0	; () banked
 15954  0057C4  6F82               	movwf	isxdigit@c& (0+255),b
 15955  0057C6  0E01               	movlw	1
 15956  0057C8  0100               	movlb	0	; () banked
 15957  0057CA  6F81               	movwf	_isxdigit$6401& (0+255),b
 15958                           
 15959                           ; BSR set to: 0
 15960  0057CC  0E67               	movlw	103
 15961  0057CE  6182               	cpfslt	isxdigit@c& (0+255),b
 15962  0057D0  D003               	goto	u10560
 15963                           
 15964                           ; BSR set to: 0
 15965  0057D2  0E61               	movlw	97
 15966  0057D4  6182               	cpfslt	isxdigit@c& (0+255),b
 15967  0057D6  D00E               	goto	l3301
 15968  0057D8                     u10560:
 15969                           
 15970                           ; BSR set to: 0
 15971                           
 15972                           ; BSR set to: 0
 15973  0057D8  0E47               	movlw	71
 15974  0057DA  6182               	cpfslt	isxdigit@c& (0+255),b
 15975  0057DC  D003               	goto	u10580
 15976                           
 15977                           ; BSR set to: 0
 15978  0057DE  0E41               	movlw	65
 15979  0057E0  6182               	cpfslt	isxdigit@c& (0+255),b
 15980  0057E2  D008               	goto	l3301
 15981  0057E4                     u10580:
 15982                           
 15983                           ; BSR set to: 0
 15984                           
 15985                           ; BSR set to: 0
 15986  0057E4  5182               	movf	isxdigit@c& (0+255),w,b
 15987  0057E6  EC2C  F02E         	call	_isdigit
 15988  0057EA  B0D8               	btfsc	status,0,c
 15989  0057EC  D003               	goto	l3301
 15990  0057EE  0E00               	movlw	0
 15991  0057F0  0100               	movlb	0	; () banked
 15992  0057F2  6F81               	movwf	_isxdigit$6401& (0+255),b
 15993  0057F4                     l3301:
 15994                           
 15995                           ; BSR set to: 0
 15996  0057F4  C081  F080         	movff	_isxdigit$6401,??_isxdigit
 15997  0057F8  0100               	movlb	0	; () banked
 15998  0057FA  3180               	rrcf	??_isxdigit& (0+255),w,b
 15999  0057FC  0012               	return	
 16000  0057FE                     __end_of_isxdigit:
 16001                           	opt stack 0
 16002                           tosu	equ	0xFFF
 16003                           tosh	equ	0xFFE
 16004                           tosl	equ	0xFFD
 16005                           pclath	equ	0xFFA
 16006                           tblptru	equ	0xFF8
 16007                           tblptrh	equ	0xFF7
 16008                           tblptrl	equ	0xFF6
 16009                           tablat	equ	0xFF5
 16010                           prodh	equ	0xFF4
 16011                           prodl	equ	0xFF3
 16012                           intcon	equ	0xFF2
 16013                           intcon2	equ	0xFF1
 16014                           intcon3	equ	0xFF0
 16015                           indf0	equ	0xFEF
 16016                           postinc0	equ	0xFEE
 16017                           plusw0	equ	0xFEB
 16018                           fsr0h	equ	0xFEA
 16019                           fsr0l	equ	0xFE9
 16020                           wreg	equ	0xFE8
 16021                           indf1	equ	0xFE7
 16022                           postinc1	equ	0xFE6
 16023                           postdec1	equ	0xFE5
 16024                           plusw1	equ	0xFE3
 16025                           fsr1h	equ	0xFE2
 16026                           fsr1l	equ	0xFE1
 16027                           indf2	equ	0xFDF
 16028                           postinc2	equ	0xFDE
 16029                           postdec2	equ	0xFDD
 16030                           plusw2	equ	0xFDB
 16031                           fsr2h	equ	0xFDA
 16032                           fsr2l	equ	0xFD9
 16033                           status	equ	0xFD8
 16034                           
 16035 ;; *************** function _strtol *****************
 16036 ;; Defined at:
 16037 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16038 ;; Parameters:    Size  Location     Type
 16039 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16040 ;;		 -> Terminal@Payload(80), 
 16041 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16042 ;;		 -> NULL(0), 
 16043 ;;  base            2   45[BANK0 ] int 
 16044 ;; Auto vars:     Size  Location     Type
 16045 ;;  a               4   52[BANK0 ] long 
 16046 ;;  c               1   56[BANK0 ] unsigned char 
 16047 ;;  sign            1   51[BANK0 ] unsigned char 
 16048 ;; Return value:  Size  Location     Type
 16049 ;;                  4   41[BANK0 ] long 
 16050 ;; Registers used:
 16051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16052 ;; Tracked objects:
 16053 ;;		On entry : 0/0
 16054 ;;		On exit  : 0/0
 16055 ;;		Unchanged: 0/0
 16056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16057 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16058 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16059 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16060 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16061 ;;Total ram usage:       16 bytes
 16062 ;; Hardware stack levels used:    1
 16063 ;; Hardware stack levels required when called:   13
 16064 ;; This function calls:
 16065 ;;		___lmul
 16066 ;;		_isalpha
 16067 ;;		_isdigit
 16068 ;;		_isspace
 16069 ;;		_toupper
 16070 ;; This function is called by:
 16071 ;;		_Terminal
 16072 ;; This function uses a non-reentrant model
 16073 ;;
 16074                           
 16075                           	psect	text64
 16076  00181C                     __ptext64:
 16077                           	opt stack 0
 16078  00181C                     _strtol:
 16079                           	opt stack 12
 16080                           
 16081                           ; BSR set to: 0
 16082                           ;incstack = 0
 16083  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16084  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16085  001824  50DF               	movf	indf2,w,c
 16086  001826  0100               	movlb	0	; () banked
 16087  001828  6F98               	movwf	strtol@c& (0+255),b
 16088                           
 16089                           ; BSR set to: 0
 16090  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16091  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16092                           
 16093                           ; BSR set to: 0
 16094  00182E  5198               	movf	strtol@c& (0+255),w,b
 16095  001830  EC76  F02D         	call	_isspace
 16096  001834  B0D8               	btfsc	status,0,c
 16097  001836  D7F2               	goto	_strtol
 16098  001838  0E00               	movlw	0
 16099  00183A  0100               	movlb	0	; () banked
 16100  00183C  6F94               	movwf	strtol@a& (0+255),b
 16101  00183E  0E00               	movlw	0
 16102  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16103  001842  0E00               	movlw	0
 16104  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16105  001846  0E00               	movlw	0
 16106  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16107  00184A  0E00               	movlw	0
 16108  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16109                           
 16110                           ; BSR set to: 0
 16111  00184E  0E2D               	movlw	45
 16112  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16113  001852  A4D8               	btfss	status,2,c
 16114  001854  D003               	goto	l3208
 16115                           
 16116                           ; BSR set to: 0
 16117  001856  0E01               	movlw	1
 16118  001858  6F93               	movwf	strtol@sign& (0+255),b
 16119  00185A  D004               	goto	u11020
 16120  00185C                     l3208:
 16121                           
 16122                           ; BSR set to: 0
 16123                           
 16124                           ; BSR set to: 0
 16125  00185C  0E2B               	movlw	43
 16126  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16127  001860  A4D8               	btfss	status,2,c
 16128  001862  D008               	goto	l3210
 16129  001864                     u11020:
 16130                           
 16131                           ; BSR set to: 0
 16132  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16133  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16134  00186C  50DF               	movf	indf2,w,c
 16135  00186E  6F98               	movwf	strtol@c& (0+255),b
 16136                           
 16137                           ; BSR set to: 0
 16138  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16139  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16140  001874                     l3210:
 16141                           
 16142                           ; BSR set to: 0
 16143                           
 16144                           ; BSR set to: 0
 16145                           
 16146                           ; BSR set to: 0
 16147  001874  0E30               	movlw	48
 16148  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16149  001878  A4D8               	btfss	status,2,c
 16150  00187A  D02E               	goto	l3218
 16151                           
 16152                           ; BSR set to: 0
 16153  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16154  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16155  001884  50DF               	movf	indf2,w,c
 16156  001886  6F98               	movwf	strtol@c& (0+255),b
 16157                           
 16158                           ; BSR set to: 0
 16159  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16160  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16161                           
 16162                           ; BSR set to: 0
 16163  00188C  518D               	movf	strtol@base& (0+255),w,b
 16164  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16165  001890  B4D8               	btfsc	status,2,c
 16166  001892  D005               	goto	u11050
 16167                           
 16168                           ; BSR set to: 0
 16169  001894  0E10               	movlw	16
 16170  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16171  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16172  00189A  A4D8               	btfss	status,2,c
 16173  00189C  D015               	goto	l3212
 16174  00189E                     u11050:
 16175                           
 16176                           ; BSR set to: 0
 16177                           
 16178                           ; BSR set to: 0
 16179  00189E  0E78               	movlw	120
 16180  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16181  0018A2  B4D8               	btfsc	status,2,c
 16182  0018A4  D004               	goto	u11070
 16183                           
 16184                           ; BSR set to: 0
 16185  0018A6  0E58               	movlw	88
 16186  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16187  0018AA  A4D8               	btfss	status,2,c
 16188  0018AC  D00D               	goto	l3212
 16189  0018AE                     u11070:
 16190                           
 16191                           ; BSR set to: 0
 16192                           
 16193                           ; BSR set to: 0
 16194  0018AE  0E00               	movlw	0
 16195  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16196  0018B2  0E10               	movlw	16
 16197  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16198                           
 16199                           ; BSR set to: 0
 16200  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16201  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16202  0018BE  50DF               	movf	indf2,w,c
 16203  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16204                           
 16205                           ; BSR set to: 0
 16206  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16207  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16208  0018C6  D008               	goto	l3218
 16209  0018C8                     l3212:
 16210                           
 16211                           ; BSR set to: 0
 16212                           
 16213                           ; BSR set to: 0
 16214  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16215  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16216  0018CC  A4D8               	btfss	status,2,c
 16217  0018CE  D004               	goto	l3218
 16218                           
 16219                           ; BSR set to: 0
 16220  0018D0  0E00               	movlw	0
 16221  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16222  0018D4  0E08               	movlw	8
 16223  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16224  0018D8                     l3218:
 16225                           
 16226                           ; BSR set to: 0
 16227                           
 16228                           ; BSR set to: 0
 16229                           
 16230                           ; BSR set to: 0
 16231                           
 16232                           ; BSR set to: 0
 16233  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16234  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16235  0018DC  A4D8               	btfss	status,2,c
 16236  0018DE  D004               	goto	l3219
 16237                           
 16238                           ; BSR set to: 0
 16239  0018E0  0E00               	movlw	0
 16240  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16241  0018E4  0E0A               	movlw	10
 16242  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16243  0018E8                     l3219:
 16244                           
 16245                           ; BSR set to: 0
 16246                           
 16247                           ; BSR set to: 0
 16248                           
 16249                           ; BSR set to: 0
 16250  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16251  0018EA  ECED  F02C         	call	_isalpha
 16252  0018EE  A0D8               	btfss	status,0,c
 16253  0018F0  D008               	goto	l3221
 16254  0018F2  0100               	movlb	0	; () banked
 16255  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16256  0018F6  ECCE  F02E         	call	_toupper
 16257  0018FA  0FC9               	addlw	201
 16258  0018FC  0100               	movlb	0	; () banked
 16259  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16260  001900  D009               	goto	l3224
 16261  001902                     l3221:
 16262                           
 16263                           ; BSR set to: 0
 16264  001902  0100               	movlb	0	; () banked
 16265  001904  5198               	movf	strtol@c& (0+255),w,b
 16266  001906  EC2C  F02E         	call	_isdigit
 16267  00190A  A0D8               	btfss	status,0,c
 16268  00190C  D039               	goto	l3225
 16269  00190E  0E30               	movlw	48
 16270  001910  0100               	movlb	0	; () banked
 16271  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16272  001914                     l3224:
 16273                           
 16274                           ; BSR set to: 0
 16275                           
 16276                           ; BSR set to: 0
 16277                           
 16278                           ; BSR set to: 0
 16279  001914  5198               	movf	strtol@c& (0+255),w,b
 16280  001916  6F8F               	movwf	??_strtol& (0+255),b
 16281  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16282  00191A  518D               	movf	strtol@base& (0+255),w,b
 16283  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16284  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16285  001920  0A80               	xorlw	128
 16286  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16287  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16288  001926  0A80               	xorlw	128
 16289  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16290  00192A  B0D8               	btfsc	status,0,c
 16291  00192C  D029               	goto	l3225
 16292                           
 16293                           ; BSR set to: 0
 16294                           
 16295                           ; BSR set to: 0
 16296                           
 16297                           ; BSR set to: 0
 16298  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16299  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16300  001936  0E00               	movlw	0
 16301  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16302  00193A  0EFF               	movlw	-1
 16303  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16304  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16305  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16306  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16307  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16308  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16309  001950  ECCF  F027         	call	___lmul	;wreg free
 16310  001954  0100               	movlb	0	; () banked
 16311  001956  5198               	movf	strtol@c& (0+255),w,b
 16312  001958  257D               	addwf	?___lmul& (0+255),w,b
 16313  00195A  6F94               	movwf	strtol@a& (0+255),b
 16314  00195C  0E00               	movlw	0
 16315  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16316  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16317  001962  0E00               	movlw	0
 16318  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16319  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16320  001968  0E00               	movlw	0
 16321  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16322  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16323                           
 16324                           ; BSR set to: 0
 16325  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16326  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16327  001976  50DF               	movf	indf2,w,c
 16328  001978  6F98               	movwf	strtol@c& (0+255),b
 16329                           
 16330                           ; BSR set to: 0
 16331  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16332  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16333  00197E  D7B4               	goto	l3219
 16334  001980                     l3225:
 16335                           
 16336                           ; BSR set to: 0
 16337  001980  0100               	movlb	0	; () banked
 16338  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16339  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16340  001986  B4D8               	btfsc	status,2,c
 16341  001988  D00E               	goto	l3227
 16342                           
 16343                           ; BSR set to: 0
 16344  00198A  0EFF               	movlw	255
 16345  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16346  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16347  001990  0EFF               	movlw	255
 16348  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16349  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16350  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16351  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16352  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16353  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16354  0019A6                     l3227:
 16355                           
 16356                           ; BSR set to: 0
 16357                           
 16358                           ; BSR set to: 0
 16359  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16360  0019A8  B4D8               	btfsc	status,2,c
 16361  0019AA  D01A               	goto	l3228
 16362                           
 16363                           ; BSR set to: 0
 16364  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16365  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16366  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16367  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16368  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16369  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16370  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16371  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16372  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16373  0019C6  0E00               	movlw	0
 16374  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16375  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16376  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16377  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16378  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16379  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16380  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16381                           
 16382                           ; BSR set to: 0
 16383  0019DE  0012               	return	
 16384  0019E0                     l3228:
 16385                           
 16386                           ; BSR set to: 0
 16387  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16388  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16389  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16390  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16391                           
 16392                           ; BSR set to: 0
 16393  0019F0  0012               	return		;funcret
 16394  0019F2                     __end_of_strtol:
 16395                           	opt stack 0
 16396                           tosu	equ	0xFFF
 16397                           tosh	equ	0xFFE
 16398                           tosl	equ	0xFFD
 16399                           pclath	equ	0xFFA
 16400                           tblptru	equ	0xFF8
 16401                           tblptrh	equ	0xFF7
 16402                           tblptrl	equ	0xFF6
 16403                           tablat	equ	0xFF5
 16404                           prodh	equ	0xFF4
 16405                           prodl	equ	0xFF3
 16406                           intcon	equ	0xFF2
 16407                           intcon2	equ	0xFF1
 16408                           intcon3	equ	0xFF0
 16409                           indf0	equ	0xFEF
 16410                           postinc0	equ	0xFEE
 16411                           plusw0	equ	0xFEB
 16412                           fsr0h	equ	0xFEA
 16413                           fsr0l	equ	0xFE9
 16414                           wreg	equ	0xFE8
 16415                           indf1	equ	0xFE7
 16416                           postinc1	equ	0xFE6
 16417                           postdec1	equ	0xFE5
 16418                           plusw1	equ	0xFE3
 16419                           fsr1h	equ	0xFE2
 16420                           fsr1l	equ	0xFE1
 16421                           indf2	equ	0xFDF
 16422                           postinc2	equ	0xFDE
 16423                           postdec2	equ	0xFDD
 16424                           plusw2	equ	0xFDB
 16425                           fsr2h	equ	0xFDA
 16426                           fsr2l	equ	0xFD9
 16427                           status	equ	0xFD8
 16428                           
 16429 ;; *************** function _toupper *****************
 16430 ;; Defined at:
 16431 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16432 ;; Parameters:    Size  Location     Type
 16433 ;;  c               1    wreg     unsigned char 
 16434 ;; Auto vars:     Size  Location     Type
 16435 ;;  c               1   29[BANK0 ] unsigned char 
 16436 ;; Return value:  Size  Location     Type
 16437 ;;                  1    wreg      unsigned char 
 16438 ;; Registers used:
 16439 ;;		wreg, status,2, status,0
 16440 ;; Tracked objects:
 16441 ;;		On entry : 0/0
 16442 ;;		On exit  : 0/0
 16443 ;;		Unchanged: 0/0
 16444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16446 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16448 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16449 ;;Total ram usage:        1 bytes
 16450 ;; Hardware stack levels used:    1
 16451 ;; Hardware stack levels required when called:   11
 16452 ;; This function calls:
 16453 ;;		Nothing
 16454 ;; This function is called by:
 16455 ;;		_strtol
 16456 ;; This function uses a non-reentrant model
 16457 ;;
 16458                           
 16459                           	psect	text65
 16460  005D9C                     __ptext65:
 16461                           	opt stack 0
 16462  005D9C                     _toupper:
 16463                           	opt stack 13
 16464                           
 16465                           ; BSR set to: 0
 16466                           ;incstack = 0
 16467                           ;toupper@c stored from wreg
 16468  005D9C  0100               	movlb	0	; () banked
 16469  005D9E  6F7D               	movwf	toupper@c& (0+255),b
 16470  005DA0  0E7B               	movlw	123
 16471  005DA2  0100               	movlb	0	; () banked
 16472  005DA4  617D               	cpfslt	toupper@c& (0+255),b
 16473  005DA6  D004               	goto	l3232
 16474                           
 16475                           ; BSR set to: 0
 16476  005DA8  0E60               	movlw	96
 16477  005DAA  657D               	cpfsgt	toupper@c& (0+255),b
 16478  005DAC  D001               	goto	l3232
 16479                           
 16480                           ; BSR set to: 0
 16481  005DAE  9B7D               	bcf	toupper@c& (0+255),5,b
 16482  005DB0                     l3232:
 16483                           
 16484                           ; BSR set to: 0
 16485                           
 16486                           ; BSR set to: 0
 16487  005DB0  517D               	movf	toupper@c& (0+255),w,b
 16488  005DB2  0012               	return	
 16489  005DB4                     __end_of_toupper:
 16490                           	opt stack 0
 16491                           tosu	equ	0xFFF
 16492                           tosh	equ	0xFFE
 16493                           tosl	equ	0xFFD
 16494                           pclath	equ	0xFFA
 16495                           tblptru	equ	0xFF8
 16496                           tblptrh	equ	0xFF7
 16497                           tblptrl	equ	0xFF6
 16498                           tablat	equ	0xFF5
 16499                           prodh	equ	0xFF4
 16500                           prodl	equ	0xFF3
 16501                           intcon	equ	0xFF2
 16502                           intcon2	equ	0xFF1
 16503                           intcon3	equ	0xFF0
 16504                           indf0	equ	0xFEF
 16505                           postinc0	equ	0xFEE
 16506                           plusw0	equ	0xFEB
 16507                           fsr0h	equ	0xFEA
 16508                           fsr0l	equ	0xFE9
 16509                           wreg	equ	0xFE8
 16510                           indf1	equ	0xFE7
 16511                           postinc1	equ	0xFE6
 16512                           postdec1	equ	0xFE5
 16513                           plusw1	equ	0xFE3
 16514                           fsr1h	equ	0xFE2
 16515                           fsr1l	equ	0xFE1
 16516                           indf2	equ	0xFDF
 16517                           postinc2	equ	0xFDE
 16518                           postdec2	equ	0xFDD
 16519                           plusw2	equ	0xFDB
 16520                           fsr2h	equ	0xFDA
 16521                           fsr2l	equ	0xFD9
 16522                           status	equ	0xFD8
 16523                           
 16524 ;; *************** function _isspace *****************
 16525 ;; Defined at:
 16526 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16527 ;; Parameters:    Size  Location     Type
 16528 ;;  c               1    wreg     unsigned char 
 16529 ;; Auto vars:     Size  Location     Type
 16530 ;;  c               1   31[BANK0 ] unsigned char 
 16531 ;; Return value:  Size  Location     Type
 16532 ;;		None               void
 16533 ;; Registers used:
 16534 ;;		wreg, status,2, status,0
 16535 ;; Tracked objects:
 16536 ;;		On entry : 0/0
 16537 ;;		On exit  : 0/0
 16538 ;;		Unchanged: 0/0
 16539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16541 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16542 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16543 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16544 ;;Total ram usage:        3 bytes
 16545 ;; Hardware stack levels used:    1
 16546 ;; Hardware stack levels required when called:   11
 16547 ;; This function calls:
 16548 ;;		Nothing
 16549 ;; This function is called by:
 16550 ;;		_strtol
 16551 ;;		_xtoi
 16552 ;; This function uses a non-reentrant model
 16553 ;;
 16554                           
 16555                           	psect	text66
 16556  005AEC                     __ptext66:
 16557                           	opt stack 0
 16558  005AEC                     _isspace:
 16559                           	opt stack 13
 16560                           
 16561                           ; BSR set to: 0
 16562                           ;incstack = 0
 16563                           ;isspace@c stored from wreg
 16564  005AEC  0100               	movlb	0	; () banked
 16565  005AEE  6F7F               	movwf	isspace@c& (0+255),b
 16566  005AF0  0E01               	movlw	1
 16567  005AF2  0100               	movlb	0	; () banked
 16568  005AF4  6F7E               	movwf	_isspace$6394& (0+255),b
 16569                           
 16570                           ; BSR set to: 0
 16571  005AF6  0E20               	movlw	32
 16572  005AF8  197F               	xorwf	isspace@c& (0+255),w,b
 16573  005AFA  B4D8               	btfsc	status,2,c
 16574  005AFC  D008               	goto	l3289
 16575                           
 16576                           ; BSR set to: 0
 16577  005AFE  0E0E               	movlw	14
 16578  005B00  617F               	cpfslt	isspace@c& (0+255),b
 16579  005B02  D003               	goto	u10470
 16580                           
 16581                           ; BSR set to: 0
 16582  005B04  0E09               	movlw	9
 16583  005B06  617F               	cpfslt	isspace@c& (0+255),b
 16584  005B08  D002               	goto	l3289
 16585  005B0A                     u10470:
 16586                           
 16587                           ; BSR set to: 0
 16588                           
 16589                           ; BSR set to: 0
 16590  005B0A  0E00               	movlw	0
 16591  005B0C  6F7E               	movwf	_isspace$6394& (0+255),b
 16592  005B0E                     l3289:
 16593                           
 16594                           ; BSR set to: 0
 16595                           
 16596                           ; BSR set to: 0
 16597  005B0E  C07E  F07D         	movff	_isspace$6394,??_isspace
 16598  005B12  317D               	rrcf	??_isspace& (0+255),w,b
 16599  005B14  0012               	return	
 16600  005B16                     __end_of_isspace:
 16601                           	opt stack 0
 16602                           tosu	equ	0xFFF
 16603                           tosh	equ	0xFFE
 16604                           tosl	equ	0xFFD
 16605                           pclath	equ	0xFFA
 16606                           tblptru	equ	0xFF8
 16607                           tblptrh	equ	0xFF7
 16608                           tblptrl	equ	0xFF6
 16609                           tablat	equ	0xFF5
 16610                           prodh	equ	0xFF4
 16611                           prodl	equ	0xFF3
 16612                           intcon	equ	0xFF2
 16613                           intcon2	equ	0xFF1
 16614                           intcon3	equ	0xFF0
 16615                           indf0	equ	0xFEF
 16616                           postinc0	equ	0xFEE
 16617                           plusw0	equ	0xFEB
 16618                           fsr0h	equ	0xFEA
 16619                           fsr0l	equ	0xFE9
 16620                           wreg	equ	0xFE8
 16621                           indf1	equ	0xFE7
 16622                           postinc1	equ	0xFE6
 16623                           postdec1	equ	0xFE5
 16624                           plusw1	equ	0xFE3
 16625                           fsr1h	equ	0xFE2
 16626                           fsr1l	equ	0xFE1
 16627                           indf2	equ	0xFDF
 16628                           postinc2	equ	0xFDE
 16629                           postdec2	equ	0xFDD
 16630                           plusw2	equ	0xFDB
 16631                           fsr2h	equ	0xFDA
 16632                           fsr2l	equ	0xFD9
 16633                           status	equ	0xFD8
 16634                           
 16635 ;; *************** function _isalpha *****************
 16636 ;; Defined at:
 16637 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 16638 ;; Parameters:    Size  Location     Type
 16639 ;;  c               1    wreg     unsigned char 
 16640 ;; Auto vars:     Size  Location     Type
 16641 ;;  c               1   34[BANK0 ] unsigned char 
 16642 ;; Return value:  Size  Location     Type
 16643 ;;		None               void
 16644 ;; Registers used:
 16645 ;;		wreg, status,2, status,0, cstack
 16646 ;; Tracked objects:
 16647 ;;		On entry : 0/0
 16648 ;;		On exit  : 0/0
 16649 ;;		Unchanged: 0/0
 16650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16652 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16653 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16654 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16655 ;;Total ram usage:        3 bytes
 16656 ;; Hardware stack levels used:    1
 16657 ;; Hardware stack levels required when called:   12
 16658 ;; This function calls:
 16659 ;;		_isupper
 16660 ;; This function is called by:
 16661 ;;		_strtol
 16662 ;; This function uses a non-reentrant model
 16663 ;;
 16664                           
 16665                           	psect	text67
 16666  0059DA                     __ptext67:
 16667                           	opt stack 0
 16668  0059DA                     _isalpha:
 16669                           	opt stack 12
 16670                           
 16671                           ; BSR set to: 0
 16672                           ;incstack = 0
 16673                           ;isalpha@c stored from wreg
 16674  0059DA  0100               	movlb	0	; () banked
 16675  0059DC  6F82               	movwf	isalpha@c& (0+255),b
 16676  0059DE  0E01               	movlw	1
 16677  0059E0  0100               	movlb	0	; () banked
 16678  0059E2  6F81               	movwf	_isalpha$6391& (0+255),b
 16679                           
 16680                           ; BSR set to: 0
 16681  0059E4  0E7B               	movlw	123
 16682  0059E6  6182               	cpfslt	isalpha@c& (0+255),b
 16683  0059E8  D003               	goto	u10490
 16684                           
 16685                           ; BSR set to: 0
 16686  0059EA  0E61               	movlw	97
 16687  0059EC  6182               	cpfslt	isalpha@c& (0+255),b
 16688  0059EE  D008               	goto	l3284
 16689  0059F0                     u10490:
 16690                           
 16691                           ; BSR set to: 0
 16692                           
 16693                           ; BSR set to: 0
 16694  0059F0  5182               	movf	isalpha@c& (0+255),w,b
 16695  0059F2  EC0A  F02E         	call	_isupper
 16696  0059F6  B0D8               	btfsc	status,0,c
 16697  0059F8  D003               	goto	l3284
 16698  0059FA  0E00               	movlw	0
 16699  0059FC  0100               	movlb	0	; () banked
 16700  0059FE  6F81               	movwf	_isalpha$6391& (0+255),b
 16701  005A00                     l3284:
 16702                           
 16703                           ; BSR set to: 0
 16704  005A00  C081  F080         	movff	_isalpha$6391,??_isalpha
 16705  005A04  0100               	movlb	0	; () banked
 16706  005A06  3180               	rrcf	??_isalpha& (0+255),w,b
 16707  005A08  0012               	return	
 16708  005A0A                     __end_of_isalpha:
 16709                           	opt stack 0
 16710                           tosu	equ	0xFFF
 16711                           tosh	equ	0xFFE
 16712                           tosl	equ	0xFFD
 16713                           pclath	equ	0xFFA
 16714                           tblptru	equ	0xFF8
 16715                           tblptrh	equ	0xFF7
 16716                           tblptrl	equ	0xFF6
 16717                           tablat	equ	0xFF5
 16718                           prodh	equ	0xFF4
 16719                           prodl	equ	0xFF3
 16720                           intcon	equ	0xFF2
 16721                           intcon2	equ	0xFF1
 16722                           intcon3	equ	0xFF0
 16723                           indf0	equ	0xFEF
 16724                           postinc0	equ	0xFEE
 16725                           plusw0	equ	0xFEB
 16726                           fsr0h	equ	0xFEA
 16727                           fsr0l	equ	0xFE9
 16728                           wreg	equ	0xFE8
 16729                           indf1	equ	0xFE7
 16730                           postinc1	equ	0xFE6
 16731                           postdec1	equ	0xFE5
 16732                           plusw1	equ	0xFE3
 16733                           fsr1h	equ	0xFE2
 16734                           fsr1l	equ	0xFE1
 16735                           indf2	equ	0xFDF
 16736                           postinc2	equ	0xFDE
 16737                           postdec2	equ	0xFDD
 16738                           plusw2	equ	0xFDB
 16739                           fsr2h	equ	0xFDA
 16740                           fsr2l	equ	0xFD9
 16741                           status	equ	0xFD8
 16742                           
 16743 ;; *************** function _isupper *****************
 16744 ;; Defined at:
 16745 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 16746 ;; Parameters:    Size  Location     Type
 16747 ;;  c               1    wreg     unsigned char 
 16748 ;; Auto vars:     Size  Location     Type
 16749 ;;  c               1   31[BANK0 ] unsigned char 
 16750 ;; Return value:  Size  Location     Type
 16751 ;;		None               void
 16752 ;; Registers used:
 16753 ;;		wreg, status,2, status,0
 16754 ;; Tracked objects:
 16755 ;;		On entry : 0/0
 16756 ;;		On exit  : 0/0
 16757 ;;		Unchanged: 0/0
 16758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16760 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16761 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16762 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16763 ;;Total ram usage:        3 bytes
 16764 ;; Hardware stack levels used:    1
 16765 ;; Hardware stack levels required when called:   11
 16766 ;; This function calls:
 16767 ;;		Nothing
 16768 ;; This function is called by:
 16769 ;;		_xtoi
 16770 ;;		_isalpha
 16771 ;; This function uses a non-reentrant model
 16772 ;;
 16773                           
 16774                           	psect	text68
 16775  005C14                     __ptext68:
 16776                           	opt stack 0
 16777  005C14                     _isupper:
 16778                           	opt stack 13
 16779                           
 16780                           ; BSR set to: 0
 16781                           ;incstack = 0
 16782                           ;isupper@c stored from wreg
 16783  005C14  0100               	movlb	0	; () banked
 16784  005C16  6F7F               	movwf	isupper@c& (0+255),b
 16785  005C18  0E00               	movlw	0
 16786  005C1A  0100               	movlb	0	; () banked
 16787  005C1C  6F7E               	movwf	_isupper$6397& (0+255),b
 16788                           
 16789                           ; BSR set to: 0
 16790  005C1E  0E5B               	movlw	91
 16791  005C20  617F               	cpfslt	isupper@c& (0+255),b
 16792  005C22  D005               	goto	l3294
 16793                           
 16794                           ; BSR set to: 0
 16795  005C24  0E40               	movlw	64
 16796  005C26  657F               	cpfsgt	isupper@c& (0+255),b
 16797  005C28  D002               	goto	l3294
 16798                           
 16799                           ; BSR set to: 0
 16800  005C2A  0E01               	movlw	1
 16801  005C2C  6F7E               	movwf	_isupper$6397& (0+255),b
 16802  005C2E                     l3294:
 16803                           
 16804                           ; BSR set to: 0
 16805                           
 16806                           ; BSR set to: 0
 16807  005C2E  C07E  F07D         	movff	_isupper$6397,??_isupper
 16808  005C32  317D               	rrcf	??_isupper& (0+255),w,b
 16809  005C34  0012               	return	
 16810  005C36                     __end_of_isupper:
 16811                           	opt stack 0
 16812                           tosu	equ	0xFFF
 16813                           tosh	equ	0xFFE
 16814                           tosl	equ	0xFFD
 16815                           pclath	equ	0xFFA
 16816                           tblptru	equ	0xFF8
 16817                           tblptrh	equ	0xFF7
 16818                           tblptrl	equ	0xFF6
 16819                           tablat	equ	0xFF5
 16820                           prodh	equ	0xFF4
 16821                           prodl	equ	0xFF3
 16822                           intcon	equ	0xFF2
 16823                           intcon2	equ	0xFF1
 16824                           intcon3	equ	0xFF0
 16825                           indf0	equ	0xFEF
 16826                           postinc0	equ	0xFEE
 16827                           plusw0	equ	0xFEB
 16828                           fsr0h	equ	0xFEA
 16829                           fsr0l	equ	0xFE9
 16830                           wreg	equ	0xFE8
 16831                           indf1	equ	0xFE7
 16832                           postinc1	equ	0xFE6
 16833                           postdec1	equ	0xFE5
 16834                           plusw1	equ	0xFE3
 16835                           fsr1h	equ	0xFE2
 16836                           fsr1l	equ	0xFE1
 16837                           indf2	equ	0xFDF
 16838                           postinc2	equ	0xFDE
 16839                           postdec2	equ	0xFDD
 16840                           plusw2	equ	0xFDB
 16841                           fsr2h	equ	0xFDA
 16842                           fsr2l	equ	0xFD9
 16843                           status	equ	0xFD8
 16844                           
 16845 ;; *************** function _strcpy *****************
 16846 ;; Defined at:
 16847 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 16848 ;; Parameters:    Size  Location     Type
 16849 ;;  to              2   29[BANK0 ] PTR unsigned char 
 16850 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 16851 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 16852 ;;		 -> STR_23(20), STR_21(42), 
 16853 ;; Auto vars:     Size  Location     Type
 16854 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 16855 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 16856 ;; Return value:  Size  Location     Type
 16857 ;;                  2   29[BANK0 ] PTR unsigned char 
 16858 ;; Registers used:
 16859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16860 ;; Tracked objects:
 16861 ;;		On entry : 0/0
 16862 ;;		On exit  : 0/0
 16863 ;;		Unchanged: 0/0
 16864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16865 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16866 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16868 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16869 ;;Total ram usage:        6 bytes
 16870 ;; Hardware stack levels used:    1
 16871 ;; Hardware stack levels required when called:   11
 16872 ;; This function calls:
 16873 ;;		Nothing
 16874 ;; This function is called by:
 16875 ;;		_Terminal
 16876 ;;		_Term_MainSm
 16877 ;; This function uses a non-reentrant model
 16878 ;;
 16879                           
 16880                           	psect	text69
 16881  005948                     __ptext69:
 16882                           	opt stack 0
 16883  005948                     _strcpy:
 16884                           	opt stack 15
 16885                           
 16886                           ; BSR set to: 0
 16887                           ;incstack = 0
 16888  005948  C07D  F081         	movff	strcpy@to,strcpy@cp
 16889  00594C  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 16890  005950  D005               	goto	l3186
 16891  005952  0100               	movlb	0	; () banked
 16892  005954  4B81               	infsnz	strcpy@cp& (0+255),f,b
 16893  005956  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 16894  005958  4B7F               	infsnz	strcpy@from& (0+255),f,b
 16895  00595A  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 16896  00595C                     l3186:
 16897                           
 16898                           ; BSR set to: 0
 16899  00595C  C07F  FFF6         	movff	strcpy@from,tblptrl
 16900  005960  C080  FFF7         	movff	strcpy@from+1,tblptrh
 16901  005964                     	if	0	;tblptru may be non-zero
 16902  005964                     	endif
 16903  005964                     	if	0	;tblptru may be non-zero
 16904  005964                     	endif
 16905  005964  C081  FFD9         	movff	strcpy@cp,fsr2l
 16906  005968  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 16907  00596C  0008               	tblrd		*
 16908  00596E  CFF5 FFDF          	movff	tablat,indf2
 16909  005972  50DF               	movf	indf2,w,c
 16910  005974  B4D8               	btfsc	status,2,c
 16911  005976  0012               	return	
 16912  005978  D7EC               	goto	l3187
 16913  00597A                     __end_of_strcpy:
 16914                           	opt stack 0
 16915                           tosu	equ	0xFFF
 16916                           tosh	equ	0xFFE
 16917                           tosl	equ	0xFFD
 16918                           pclath	equ	0xFFA
 16919                           tblptru	equ	0xFF8
 16920                           tblptrh	equ	0xFF7
 16921                           tblptrl	equ	0xFF6
 16922                           tablat	equ	0xFF5
 16923                           prodh	equ	0xFF4
 16924                           prodl	equ	0xFF3
 16925                           intcon	equ	0xFF2
 16926                           intcon2	equ	0xFF1
 16927                           intcon3	equ	0xFF0
 16928                           indf0	equ	0xFEF
 16929                           postinc0	equ	0xFEE
 16930                           plusw0	equ	0xFEB
 16931                           fsr0h	equ	0xFEA
 16932                           fsr0l	equ	0xFE9
 16933                           wreg	equ	0xFE8
 16934                           indf1	equ	0xFE7
 16935                           postinc1	equ	0xFE6
 16936                           postdec1	equ	0xFE5
 16937                           plusw1	equ	0xFE3
 16938                           fsr1h	equ	0xFE2
 16939                           fsr1l	equ	0xFE1
 16940                           indf2	equ	0xFDF
 16941                           postinc2	equ	0xFDE
 16942                           postdec2	equ	0xFDD
 16943                           plusw2	equ	0xFDB
 16944                           fsr2h	equ	0xFDA
 16945                           fsr2l	equ	0xFD9
 16946                           status	equ	0xFD8
 16947                           
 16948 ;; *************** function _putUSBUSART *****************
 16949 ;; Defined at:
 16950 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 16951 ;; Parameters:    Size  Location     Type
 16952 ;;  data            2   35[BANK0 ] PTR unsigned char 
 16953 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 16954 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 16955 ;;		 -> RxBuffer(400), 
 16956 ;;  length          1   37[BANK0 ] unsigned char 
 16957 ;; Auto vars:     Size  Location     Type
 16958 ;;		None
 16959 ;; Return value:  Size  Location     Type
 16960 ;;                  1    wreg      void 
 16961 ;; Registers used:
 16962 ;;		wreg, status,2, status,0
 16963 ;; Tracked objects:
 16964 ;;		On entry : 0/0
 16965 ;;		On exit  : 0/0
 16966 ;;		Unchanged: 0/0
 16967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16968 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16971 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16972 ;;Total ram usage:        3 bytes
 16973 ;; Hardware stack levels used:    1
 16974 ;; Hardware stack levels required when called:   11
 16975 ;; This function calls:
 16976 ;;		Nothing
 16977 ;; This function is called by:
 16978 ;;		_Terminal
 16979 ;;		_Term_MainSm
 16980 ;;		_GsmGprsTerminal
 16981 ;; This function uses a non-reentrant model
 16982 ;;
 16983                           
 16984                           	psect	text70
 16985  005C36                     __ptext70:
 16986                           	opt stack 0
 16987  005C36                     _putUSBUSART:
 16988                           	opt stack 15
 16989                           
 16990                           ;usb_device_cdc.c: 584: ;
 16991                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 16992                           
 16993                           ;incstack = 0
 16994  005C36  0100               	movlb	0	; () banked
 16995  005C38  51C1               	movf	_cdc_trf_state& (0+255),w,b
 16996  005C3A  A4D8               	btfss	status,2,c
 16997  005C3C  0012               	return	
 16998                           
 16999                           ; BSR set to: 0
 17000                           ;usb_device_cdc.c: 586: {
 17001                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17002  005C3E  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17003  005C42  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17004                           
 17005                           ; BSR set to: 0
 17006  005C46  C085  F0C0         	movff	putUSBUSART@length,_cdc_tx_len
 17007                           
 17008                           ; BSR set to: 0
 17009  005C4A  0E01               	movlw	1
 17010  005C4C  0101               	movlb	1	; () banked
 17011  005C4E  6FE4               	movwf	_cdc_mem_type& (0+255),b
 17012                           
 17013                           ; BSR set to: 1
 17014  005C50  0E01               	movlw	1
 17015  005C52  0100               	movlb	0	; () banked
 17016  005C54  6FC1               	movwf	_cdc_trf_state& (0+255),b
 17017  005C56  0012               	return	
 17018  005C58                     __end_of_putUSBUSART:
 17019                           	opt stack 0
 17020                           tosu	equ	0xFFF
 17021                           tosh	equ	0xFFE
 17022                           tosl	equ	0xFFD
 17023                           pclath	equ	0xFFA
 17024                           tblptru	equ	0xFF8
 17025                           tblptrh	equ	0xFF7
 17026                           tblptrl	equ	0xFF6
 17027                           tablat	equ	0xFF5
 17028                           prodh	equ	0xFF4
 17029                           prodl	equ	0xFF3
 17030                           intcon	equ	0xFF2
 17031                           intcon2	equ	0xFF1
 17032                           intcon3	equ	0xFF0
 17033                           indf0	equ	0xFEF
 17034                           postinc0	equ	0xFEE
 17035                           plusw0	equ	0xFEB
 17036                           fsr0h	equ	0xFEA
 17037                           fsr0l	equ	0xFE9
 17038                           wreg	equ	0xFE8
 17039                           indf1	equ	0xFE7
 17040                           postinc1	equ	0xFE6
 17041                           postdec1	equ	0xFE5
 17042                           plusw1	equ	0xFE3
 17043                           fsr1h	equ	0xFE2
 17044                           fsr1l	equ	0xFE1
 17045                           indf2	equ	0xFDF
 17046                           postinc2	equ	0xFDE
 17047                           postdec2	equ	0xFDD
 17048                           plusw2	equ	0xFDB
 17049                           fsr2h	equ	0xFDA
 17050                           fsr2l	equ	0xFD9
 17051                           status	equ	0xFD8
 17052                           
 17053 ;; *************** function _itoa *****************
 17054 ;; Defined at:
 17055 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17056 ;; Parameters:    Size  Location     Type
 17057 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17058 ;;		 -> Terminal@Payload(80), 
 17059 ;;  val             2   53[BANK0 ] int 
 17060 ;;  base            2   55[BANK0 ] int 
 17061 ;; Auto vars:     Size  Location     Type
 17062 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17063 ;;		 -> Terminal@Payload(80), 
 17064 ;; Return value:  Size  Location     Type
 17065 ;;                  2   51[BANK0 ] PTR unsigned char 
 17066 ;; Registers used:
 17067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17068 ;; Tracked objects:
 17069 ;;		On entry : 0/0
 17070 ;;		On exit  : 0/0
 17071 ;;		Unchanged: 0/0
 17072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17073 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17074 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17076 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17077 ;;Total ram usage:        8 bytes
 17078 ;; Hardware stack levels used:    1
 17079 ;; Hardware stack levels required when called:   13
 17080 ;; This function calls:
 17081 ;;		_utoa
 17082 ;; This function is called by:
 17083 ;;		_Terminal
 17084 ;; This function uses a non-reentrant model
 17085 ;;
 17086                           
 17087                           	psect	text71
 17088  00557C                     __ptext71:
 17089                           	opt stack 0
 17090  00557C                     _itoa:
 17091                           	opt stack 12
 17092                           
 17093                           ; BSR set to: 0
 17094                           ;incstack = 0
 17095  00557C  C093  F099         	movff	itoa@buf,itoa@cp
 17096  005580  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17097  005584  0100               	movlb	0	; () banked
 17098  005586  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17099  005588  D00C               	goto	l2934
 17100                           
 17101                           ; BSR set to: 0
 17102  00558A  C093  FFD9         	movff	itoa@buf,fsr2l
 17103  00558E  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17104  005592  0E2D               	movlw	45
 17105  005594  6EDF               	movwf	indf2,c
 17106                           
 17107                           ; BSR set to: 0
 17108  005596  4B93               	infsnz	itoa@buf& (0+255),f,b
 17109  005598  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17110                           
 17111                           ; BSR set to: 0
 17112  00559A  6D95               	negf	itoa@val& (0+255),b
 17113  00559C  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17114  00559E  B0D8               	btfsc	status,0,c
 17115  0055A0  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17116  0055A2                     l2934:
 17117                           
 17118                           ; BSR set to: 0
 17119                           
 17120                           ; BSR set to: 0
 17121  0055A2  C093  F08A         	movff	itoa@buf,utoa@buf
 17122  0055A6  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17123  0055AA  C095  F08C         	movff	itoa@val,utoa@val
 17124  0055AE  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17125  0055B2  C097  F08E         	movff	itoa@base,utoa@base
 17126  0055B6  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17127  0055BA  EC28  F020         	call	_utoa	;wreg free
 17128  0055BE  0012               	return	
 17129  0055C0                     __end_of_itoa:
 17130                           	opt stack 0
 17131                           tosu	equ	0xFFF
 17132                           tosh	equ	0xFFE
 17133                           tosl	equ	0xFFD
 17134                           pclath	equ	0xFFA
 17135                           tblptru	equ	0xFF8
 17136                           tblptrh	equ	0xFF7
 17137                           tblptrl	equ	0xFF6
 17138                           tablat	equ	0xFF5
 17139                           prodh	equ	0xFF4
 17140                           prodl	equ	0xFF3
 17141                           intcon	equ	0xFF2
 17142                           intcon2	equ	0xFF1
 17143                           intcon3	equ	0xFF0
 17144                           indf0	equ	0xFEF
 17145                           postinc0	equ	0xFEE
 17146                           plusw0	equ	0xFEB
 17147                           fsr0h	equ	0xFEA
 17148                           fsr0l	equ	0xFE9
 17149                           wreg	equ	0xFE8
 17150                           indf1	equ	0xFE7
 17151                           postinc1	equ	0xFE6
 17152                           postdec1	equ	0xFE5
 17153                           plusw1	equ	0xFE3
 17154                           fsr1h	equ	0xFE2
 17155                           fsr1l	equ	0xFE1
 17156                           indf2	equ	0xFDF
 17157                           postinc2	equ	0xFDE
 17158                           postdec2	equ	0xFDD
 17159                           plusw2	equ	0xFDB
 17160                           fsr2h	equ	0xFDA
 17161                           fsr2l	equ	0xFD9
 17162                           status	equ	0xFD8
 17163                           
 17164 ;; *************** function _utoa *****************
 17165 ;; Defined at:
 17166 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17167 ;; Parameters:    Size  Location     Type
 17168 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17169 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17170 ;;  val             2   44[BANK0 ] unsigned int 
 17171 ;;  base            2   46[BANK0 ] int 
 17172 ;; Auto vars:     Size  Location     Type
 17173 ;;  v               2   48[BANK0 ] unsigned int 
 17174 ;;  c               1   50[BANK0 ] unsigned char 
 17175 ;; Return value:  Size  Location     Type
 17176 ;;                  2   42[BANK0 ] PTR unsigned char 
 17177 ;; Registers used:
 17178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17179 ;; Tracked objects:
 17180 ;;		On entry : 0/0
 17181 ;;		On exit  : 0/0
 17182 ;;		Unchanged: 0/0
 17183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17184 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17185 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17187 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17188 ;;Total ram usage:        9 bytes
 17189 ;; Hardware stack levels used:    1
 17190 ;; Hardware stack levels required when called:   12
 17191 ;; This function calls:
 17192 ;;		___lwdiv
 17193 ;;		___lwmod
 17194 ;; This function is called by:
 17195 ;;		_Term_MainSm
 17196 ;;		_itoa
 17197 ;; This function uses a non-reentrant model
 17198 ;;
 17199                           
 17200                           	psect	text72
 17201  004050                     __ptext72:
 17202                           	opt stack 0
 17203  004050                     _utoa:
 17204                           	opt stack 14
 17205                           
 17206                           ;incstack = 0
 17207  004050  C08C  F090         	movff	utoa@val,utoa@v
 17208  004054  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17209  004058  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17210  00405C  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17211  004060  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17212  004064  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17213  004068  ECD1  F028         	call	___lwdiv	;wreg free
 17214  00406C  C083  F090         	movff	?___lwdiv,utoa@v
 17215  004070  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17216  004074  0100               	movlb	0	; () banked
 17217  004076  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17218  004078  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17219                           
 17220                           ; BSR set to: 0
 17221  00407A  5190               	movf	utoa@v& (0+255),w,b
 17222  00407C  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17223  00407E  A4D8               	btfss	status,2,c
 17224  004080  D7EB               	goto	l2938
 17225                           
 17226                           ; BSR set to: 0
 17227                           
 17228                           ; BSR set to: 0
 17229  004082  C08A  FFD9         	movff	utoa@buf,fsr2l
 17230  004086  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17231  00408A  0E00               	movlw	0
 17232  00408C  6EDF               	movwf	indf2,c
 17233                           
 17234                           ; BSR set to: 0
 17235  00408E  078A               	decf	utoa@buf& (0+255),f,b
 17236  004090  A0D8               	btfss	status,0,c
 17237  004092  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17238  004094                     
 17239                           ; BSR set to: 0
 17240                           
 17241                           ; BSR set to: 0
 17242  004094  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17243  004098  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17244  00409C  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17245  0040A0  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17246  0040A4  ECE0  F02A         	call	___lwmod	;wreg free
 17247  0040A8  0100               	movlb	0	; () banked
 17248  0040AA  517D               	movf	?___lwmod& (0+255),w,b
 17249  0040AC  6F92               	movwf	utoa@c& (0+255),b
 17250                           
 17251                           ; BSR set to: 0
 17252  0040AE  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17253  0040B2  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17254  0040B6  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17255  0040BA  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17256  0040BE  ECD1  F028         	call	___lwdiv	;wreg free
 17257  0040C2  C083  F08C         	movff	?___lwdiv,utoa@val
 17258  0040C6  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17259  0040CA  0E09               	movlw	9
 17260  0040CC  0100               	movlb	0	; () banked
 17261  0040CE  6592               	cpfsgt	utoa@c& (0+255),b
 17262  0040D0  D002               	goto	l2941
 17263                           
 17264                           ; BSR set to: 0
 17265  0040D2  0E07               	movlw	7
 17266  0040D4  2792               	addwf	utoa@c& (0+255),f,b
 17267  0040D6                     l2941:
 17268                           
 17269                           ; BSR set to: 0
 17270  0040D6  0E30               	movlw	48
 17271  0040D8  2792               	addwf	utoa@c& (0+255),f,b
 17272                           
 17273                           ; BSR set to: 0
 17274  0040DA  C08A  FFD9         	movff	utoa@buf,fsr2l
 17275  0040DE  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17276  0040E2  C092  FFDF         	movff	utoa@c,indf2
 17277                           
 17278                           ; BSR set to: 0
 17279  0040E6  078A               	decf	utoa@buf& (0+255),f,b
 17280  0040E8  A0D8               	btfss	status,0,c
 17281  0040EA  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17282                           
 17283                           ; BSR set to: 0
 17284  0040EC  518C               	movf	utoa@val& (0+255),w,b
 17285  0040EE  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17286  0040F0  A4D8               	btfss	status,2,c
 17287  0040F2  D7D0               	goto	l2940
 17288                           
 17289                           ; BSR set to: 0
 17290                           ;	Return value of _utoa is never used
 17291                           
 17292                           ; BSR set to: 0
 17293  0040F4  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17294  0040F6  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17295  0040F8  0012               	return	
 17296  0040FA                     __end_of_utoa:
 17297                           	opt stack 0
 17298                           tosu	equ	0xFFF
 17299                           tosh	equ	0xFFE
 17300                           tosl	equ	0xFFD
 17301                           pclath	equ	0xFFA
 17302                           tblptru	equ	0xFF8
 17303                           tblptrh	equ	0xFF7
 17304                           tblptrl	equ	0xFF6
 17305                           tablat	equ	0xFF5
 17306                           prodh	equ	0xFF4
 17307                           prodl	equ	0xFF3
 17308                           intcon	equ	0xFF2
 17309                           intcon2	equ	0xFF1
 17310                           intcon3	equ	0xFF0
 17311                           indf0	equ	0xFEF
 17312                           postinc0	equ	0xFEE
 17313                           plusw0	equ	0xFEB
 17314                           fsr0h	equ	0xFEA
 17315                           fsr0l	equ	0xFE9
 17316                           wreg	equ	0xFE8
 17317                           indf1	equ	0xFE7
 17318                           postinc1	equ	0xFE6
 17319                           postdec1	equ	0xFE5
 17320                           plusw1	equ	0xFE3
 17321                           fsr1h	equ	0xFE2
 17322                           fsr1l	equ	0xFE1
 17323                           indf2	equ	0xFDF
 17324                           postinc2	equ	0xFDE
 17325                           postdec2	equ	0xFDD
 17326                           plusw2	equ	0xFDB
 17327                           fsr2h	equ	0xFDA
 17328                           fsr2l	equ	0xFD9
 17329                           status	equ	0xFD8
 17330                           
 17331 ;; *************** function ___lwmod *****************
 17332 ;; Defined at:
 17333 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17334 ;; Parameters:    Size  Location     Type
 17335 ;;  dividend        2   29[BANK0 ] unsigned int 
 17336 ;;  divisor         2   31[BANK0 ] unsigned int 
 17337 ;; Auto vars:     Size  Location     Type
 17338 ;;  counter         1   33[BANK0 ] unsigned char 
 17339 ;; Return value:  Size  Location     Type
 17340 ;;                  2   29[BANK0 ] unsigned int 
 17341 ;; Registers used:
 17342 ;;		wreg, status,2, status,0
 17343 ;; Tracked objects:
 17344 ;;		On entry : 0/0
 17345 ;;		On exit  : 0/0
 17346 ;;		Unchanged: 0/0
 17347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17348 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17349 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17351 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17352 ;;Total ram usage:        5 bytes
 17353 ;; Hardware stack levels used:    1
 17354 ;; Hardware stack levels required when called:   11
 17355 ;; This function calls:
 17356 ;;		Nothing
 17357 ;; This function is called by:
 17358 ;;		_utoa
 17359 ;; This function uses a non-reentrant model
 17360 ;;
 17361                           
 17362                           	psect	text73
 17363  0055C0                     __ptext73:
 17364                           	opt stack 0
 17365  0055C0                     ___lwmod:
 17366                           	opt stack 14
 17367                           
 17368                           ; BSR set to: 0
 17369                           ;incstack = 0
 17370  0055C0  0100               	movlb	0	; () banked
 17371  0055C2  517F               	movf	___lwmod@divisor& (0+255),w,b
 17372  0055C4  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17373  0055C6  B4D8               	btfsc	status,2,c
 17374  0055C8  D018               	goto	l3036
 17375                           
 17376                           ; BSR set to: 0
 17377  0055CA  0E01               	movlw	1
 17378  0055CC  6F81               	movwf	___lwmod@counter& (0+255),b
 17379  0055CE  D004               	goto	l3031
 17380  0055D0                     
 17381                           ; BSR set to: 0
 17382                           
 17383                           ; BSR set to: 0
 17384  0055D0  90D8               	bcf	status,0,c
 17385  0055D2  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17386  0055D4  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17387  0055D6  2B81               	incf	___lwmod@counter& (0+255),f,b
 17388  0055D8                     l3031:
 17389                           
 17390                           ; BSR set to: 0
 17391                           
 17392                           ; BSR set to: 0
 17393  0055D8  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17394  0055DA  D7FA               	goto	l3032
 17395  0055DC                     u10320:
 17396                           
 17397                           ; BSR set to: 0
 17398                           
 17399                           ; BSR set to: 0
 17400                           
 17401                           ; BSR set to: 0
 17402  0055DC  517F               	movf	___lwmod@divisor& (0+255),w,b
 17403  0055DE  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17404  0055E0  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17405  0055E2  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17406  0055E4  A0D8               	btfss	status,0,c
 17407  0055E6  D004               	goto	l3035
 17408                           
 17409                           ; BSR set to: 0
 17410  0055E8  517F               	movf	___lwmod@divisor& (0+255),w,b
 17411  0055EA  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17412  0055EC  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17413  0055EE  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17414  0055F0                     l3035:
 17415                           
 17416                           ; BSR set to: 0
 17417                           
 17418                           ; BSR set to: 0
 17419  0055F0  90D8               	bcf	status,0,c
 17420  0055F2  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17421  0055F4  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17422                           
 17423                           ; BSR set to: 0
 17424  0055F6  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17425  0055F8  D7F1               	goto	u10320
 17426  0055FA                     l3036:
 17427                           
 17428                           ; BSR set to: 0
 17429                           
 17430                           ; BSR set to: 0
 17431  0055FA  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17432  0055FE  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17433                           
 17434                           ; BSR set to: 0
 17435  005602  0012               	return		;funcret
 17436  005604                     __end_of___lwmod:
 17437                           	opt stack 0
 17438                           tosu	equ	0xFFF
 17439                           tosh	equ	0xFFE
 17440                           tosl	equ	0xFFD
 17441                           pclath	equ	0xFFA
 17442                           tblptru	equ	0xFF8
 17443                           tblptrh	equ	0xFF7
 17444                           tblptrl	equ	0xFF6
 17445                           tablat	equ	0xFF5
 17446                           prodh	equ	0xFF4
 17447                           prodl	equ	0xFF3
 17448                           intcon	equ	0xFF2
 17449                           intcon2	equ	0xFF1
 17450                           intcon3	equ	0xFF0
 17451                           indf0	equ	0xFEF
 17452                           postinc0	equ	0xFEE
 17453                           plusw0	equ	0xFEB
 17454                           fsr0h	equ	0xFEA
 17455                           fsr0l	equ	0xFE9
 17456                           wreg	equ	0xFE8
 17457                           indf1	equ	0xFE7
 17458                           postinc1	equ	0xFE6
 17459                           postdec1	equ	0xFE5
 17460                           plusw1	equ	0xFE3
 17461                           fsr1h	equ	0xFE2
 17462                           fsr1l	equ	0xFE1
 17463                           indf2	equ	0xFDF
 17464                           postinc2	equ	0xFDE
 17465                           postdec2	equ	0xFDD
 17466                           plusw2	equ	0xFDB
 17467                           fsr2h	equ	0xFDA
 17468                           fsr2l	equ	0xFD9
 17469                           status	equ	0xFD8
 17470                           
 17471 ;; *************** function _getsUSBUSART *****************
 17472 ;; Defined at:
 17473 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17474 ;; Parameters:    Size  Location     Type
 17475 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17476 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17477 ;;  len             1   38[BANK0 ] unsigned char 
 17478 ;; Auto vars:     Size  Location     Type
 17479 ;;		None
 17480 ;; Return value:  Size  Location     Type
 17481 ;;                  1    wreg      unsigned char 
 17482 ;; Registers used:
 17483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17484 ;; Tracked objects:
 17485 ;;		On entry : 0/0
 17486 ;;		On exit  : 0/0
 17487 ;;		Unchanged: 0/0
 17488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17489 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17491 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17492 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17493 ;;Total ram usage:        4 bytes
 17494 ;; Hardware stack levels used:    1
 17495 ;; Hardware stack levels required when called:   12
 17496 ;; This function calls:
 17497 ;;		_USBTransferOnePacket
 17498 ;; This function is called by:
 17499 ;;		_Terminal
 17500 ;;		_GsmGprsTerminal
 17501 ;; This function uses a non-reentrant model
 17502 ;;
 17503                           
 17504                           	psect	text74
 17505  004558                     __ptext74:
 17506                           	opt stack 0
 17507  004558                     _getsUSBUSART:
 17508                           	opt stack 13
 17509                           
 17510                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17511                           
 17512                           ; BSR set to: 0
 17513                           ;incstack = 0
 17514  004558  0E00               	movlw	0
 17515  00455A  0100               	movlb	0	; () banked
 17516  00455C  6FC2               	movwf	_cdc_rx_len& (0+255),b
 17517                           
 17518                           ; BSR set to: 0
 17519                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17520  00455E  51B8               	movf	_CDCDataOutHandle& (0+255),w,b
 17521  004560  11B9               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17522  004562  B4D8               	btfsc	status,2,c
 17523  004564  D006               	goto	u10830
 17524                           
 17525                           ; BSR set to: 0
 17526  004566  C0B8  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17527  00456A  C0B9  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17528  00456E  BEDF               	btfsc	indf2,7,c
 17529  004570  D03B               	goto	l1907
 17530  004572                     u10830:
 17531                           
 17532                           ; BSR set to: 0
 17533                           ;usb_device_cdc.c: 493: {
 17534                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17535                           
 17536                           ; BSR set to: 0
 17537  004572  EE20 F001          	lfsr	2,1
 17538  004576  51B8               	movf	_CDCDataOutHandle& (0+255),w,b
 17539  004578  26D9               	addwf	fsr2l,f,c
 17540  00457A  51B9               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17541  00457C  22DA               	addwfc	fsr2h,f,c
 17542  00457E  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17543  004580  5CDE               	subwf	postinc2,w,c
 17544  004582  B0D8               	btfsc	status,0,c
 17545  004584  D008               	goto	l1910
 17546                           
 17547                           ; BSR set to: 0
 17548                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17549  004586  EE20 F001          	lfsr	2,1
 17550  00458A  51B8               	movf	_CDCDataOutHandle& (0+255),w,b
 17551  00458C  26D9               	addwf	fsr2l,f,c
 17552  00458E  51B9               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17553  004590  22DA               	addwfc	fsr2h,f,c
 17554  004592  50DF               	movf	indf2,w,c
 17555  004594  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17556  004596                     l1910:
 17557                           
 17558                           ; BSR set to: 0
 17559                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17560                           
 17561                           ; BSR set to: 0
 17562  004596  0E00               	movlw	0
 17563  004598  6FC2               	movwf	_cdc_rx_len& (0+255),b
 17564  00459A  D013               	goto	l1911
 17565  00459C                     
 17566                           ; BSR set to: 0
 17567                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17568                           
 17569                           ; BSR set to: 0
 17570  00459C  51C2               	movf	_cdc_rx_len& (0+255),w,b
 17571  00459E  0D01               	mullw	1
 17572  0045A0  0E54               	movlw	low _cdc_data_rx
 17573  0045A2  24F3               	addwf	prodl,w,c
 17574  0045A4  6ED9               	movwf	fsr2l,c
 17575  0045A6  0E04               	movlw	high _cdc_data_rx
 17576  0045A8  20F4               	addwfc	prodh,w,c
 17577  0045AA  6EDA               	movwf	fsr2h,c
 17578  0045AC  51C2               	movf	_cdc_rx_len& (0+255),w,b
 17579  0045AE  0D01               	mullw	1
 17580  0045B0  50F3               	movf	prodl,w,c
 17581  0045B2  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17582  0045B4  6EE1               	movwf	fsr1l,c
 17583  0045B6  50F4               	movf	prodh,w,c
 17584  0045B8  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17585  0045BA  6EE2               	movwf	fsr1h,c
 17586  0045BC  CFDF FFE7          	movff	indf2,indf1
 17587                           
 17588                           ; BSR set to: 0
 17589  0045C0  2BC2               	incf	_cdc_rx_len& (0+255),f,b
 17590  0045C2                     l1911:
 17591                           
 17592                           ; BSR set to: 0
 17593                           
 17594                           ; BSR set to: 0
 17595  0045C2  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17596  0045C4  5DC2               	subwf	_cdc_rx_len& (0+255),w,b
 17597  0045C6  A0D8               	btfss	status,0,c
 17598  0045C8  D7E9               	goto	l1912
 17599                           
 17600                           ; BSR set to: 0
 17601                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17602                           
 17603                           ; BSR set to: 0
 17604  0045CA  0E00               	movlw	0
 17605  0045CC  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 17606  0045CE  0E54               	movlw	low _cdc_data_rx
 17607  0045D0  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 17608  0045D2  0E04               	movlw	high _cdc_data_rx
 17609  0045D4  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17610  0045D6  0E40               	movlw	64
 17611  0045D8  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 17612  0045DA  0E02               	movlw	2
 17613  0045DC  ECC2  F01E         	call	_USBTransferOnePacket
 17614  0045E0  C07D  F0B8         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17615  0045E4  C07E  F0B9         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17616  0045E8                     l1907:
 17617                           
 17618                           ;usb_device_cdc.c: 513: }
 17619                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 17620  0045E8  0100               	movlb	0	; () banked
 17621  0045EA  51C2               	movf	_cdc_rx_len& (0+255),w,b
 17622  0045EC  0012               	return	
 17623  0045EE                     __end_of_getsUSBUSART:
 17624                           	opt stack 0
 17625                           tosu	equ	0xFFF
 17626                           tosh	equ	0xFFE
 17627                           tosl	equ	0xFFD
 17628                           pclath	equ	0xFFA
 17629                           tblptru	equ	0xFF8
 17630                           tblptrh	equ	0xFF7
 17631                           tblptrl	equ	0xFF6
 17632                           tablat	equ	0xFF5
 17633                           prodh	equ	0xFF4
 17634                           prodl	equ	0xFF3
 17635                           intcon	equ	0xFF2
 17636                           intcon2	equ	0xFF1
 17637                           intcon3	equ	0xFF0
 17638                           indf0	equ	0xFEF
 17639                           postinc0	equ	0xFEE
 17640                           plusw0	equ	0xFEB
 17641                           fsr0h	equ	0xFEA
 17642                           fsr0l	equ	0xFE9
 17643                           wreg	equ	0xFE8
 17644                           indf1	equ	0xFE7
 17645                           postinc1	equ	0xFE6
 17646                           postdec1	equ	0xFE5
 17647                           plusw1	equ	0xFE3
 17648                           fsr1h	equ	0xFE2
 17649                           fsr1l	equ	0xFE1
 17650                           indf2	equ	0xFDF
 17651                           postinc2	equ	0xFDE
 17652                           postdec2	equ	0xFDD
 17653                           plusw2	equ	0xFDB
 17654                           fsr2h	equ	0xFDA
 17655                           fsr2l	equ	0xFD9
 17656                           status	equ	0xFD8
 17657                           
 17658 ;; *************** function _USBTransferOnePacket *****************
 17659 ;; Defined at:
 17660 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 17661 ;; Parameters:    Size  Location     Type
 17662 ;;  ep              1    wreg     unsigned char 
 17663 ;;  dir             1   29[BANK0 ] unsigned char 
 17664 ;;  data            2   30[BANK0 ] PTR unsigned char 
 17665 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17666 ;;  len             1   32[BANK0 ] unsigned char 
 17667 ;; Auto vars:     Size  Location     Type
 17668 ;;  ep              1   33[BANK0 ] unsigned char 
 17669 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 17670 ;;		 -> NULL(0), BDT(48), 
 17671 ;; Return value:  Size  Location     Type
 17672 ;;                  2   29[BANK0 ] PTR void 
 17673 ;; Registers used:
 17674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17675 ;; Tracked objects:
 17676 ;;		On entry : 0/0
 17677 ;;		On exit  : 0/0
 17678 ;;		Unchanged: 0/0
 17679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17680 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17681 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17683 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17684 ;;Total ram usage:        7 bytes
 17685 ;; Hardware stack levels used:    1
 17686 ;; Hardware stack levels required when called:   11
 17687 ;; This function calls:
 17688 ;;		Nothing
 17689 ;; This function is called by:
 17690 ;;		_CDCInitEP
 17691 ;;		_getsUSBUSART
 17692 ;;		_CDCTxService
 17693 ;;		_USBCDCEventHandler
 17694 ;; This function uses a non-reentrant model
 17695 ;;
 17696                           
 17697                           	psect	text75
 17698  003D84                     __ptext75:
 17699                           	opt stack 0
 17700  003D84                     _USBTransferOnePacket:
 17701                           	opt stack 13
 17702                           
 17703                           ; BSR set to: 0
 17704                           ;incstack = 0
 17705                           ;USBTransferOnePacket@ep stored from wreg
 17706  003D84  0100               	movlb	0	; () banked
 17707  003D86  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 17708                           
 17709                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 17710                           ;usb_device.c: 1018: if(dir != 0)
 17711  003D88  0100               	movlb	0	; () banked
 17712  003D8A  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17713  003D8C  B4D8               	btfsc	status,2,c
 17714  003D8E  D007               	goto	l1631
 17715                           
 17716                           ; BSR set to: 0
 17717                           ;usb_device.c: 1019: {
 17718                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 17719  003D90  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17720  003D92  0D02               	mullw	2
 17721  003D94  0EB2               	movlw	low _pBDTEntryIn
 17722  003D96  24F3               	addwf	prodl,w,c
 17723  003D98  6ED9               	movwf	fsr2l,c
 17724  003D9A  0E00               	movlw	high _pBDTEntryIn
 17725  003D9C  D006               	goto	L16
 17726  003D9E                     l1631:
 17727                           
 17728                           ; BSR set to: 0
 17729                           ;usb_device.c: 1023: else
 17730                           ;usb_device.c: 1024: {
 17731                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 17732                           
 17733                           ; BSR set to: 0
 17734  003D9E  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17735  003DA0  0D02               	mullw	2
 17736  003DA2  0E0E               	movlw	low _pBDTEntryOut
 17737  003DA4  24F3               	addwf	prodl,w,c
 17738  003DA6  6ED9               	movwf	fsr2l,c
 17739  003DA8  0E03               	movlw	high _pBDTEntryOut
 17740  003DAA                     L16:
 17741  003DAA  20F4               	addwfc	prodh,w,c
 17742  003DAC  6EDA               	movwf	fsr2h,c
 17743  003DAE  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 17744  003DB2  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 17745                           
 17746                           ; BSR set to: 0
 17747                           ;usb_device.c: 1027: }
 17748                           ;usb_device.c: 1031: if(handle == 0)
 17749                           
 17750                           ; BSR set to: 0
 17751  003DB6  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17752  003DB8  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17753  003DBA  A4D8               	btfss	status,2,c
 17754  003DBC  D005               	goto	l1633
 17755                           
 17756                           ; BSR set to: 0
 17757                           ;usb_device.c: 1032: {
 17758                           ;usb_device.c: 1033: return 0;
 17759  003DBE  0E00               	movlw	0
 17760  003DC0  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 17761  003DC2  0E00               	movlw	0
 17762  003DC4  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 17763                           
 17764                           ; BSR set to: 0
 17765  003DC6  0012               	return	
 17766  003DC8                     l1633:
 17767                           
 17768                           ; BSR set to: 0
 17769                           ;usb_device.c: 1034: }
 17770                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 17771                           
 17772                           ; BSR set to: 0
 17773  003DC8  EE20 F002          	lfsr	2,2
 17774  003DCC  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17775  003DCE  26D9               	addwf	fsr2l,f,c
 17776  003DD0  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17777  003DD2  22DA               	addwfc	fsr2h,f,c
 17778  003DD4  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 17779  003DD8  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 17780                           
 17781                           ;usb_device.c: 1048: handle->CNT = len;
 17782  003DDC  EE20 F001          	lfsr	2,1
 17783  003DE0  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17784  003DE2  26D9               	addwf	fsr2l,f,c
 17785  003DE4  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17786  003DE6  22DA               	addwfc	fsr2h,f,c
 17787  003DE8  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 17788                           
 17789                           ; BSR set to: 0
 17790                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 17791  003DEC  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17792  003DF0  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17793  003DF4  0E40               	movlw	64
 17794  003DF6  16DF               	andwf	indf2,f,c
 17795                           
 17796                           ; BSR set to: 0
 17797                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 17798  003DF8  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17799  003DFC  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17800  003E00  0E00               	movlw	0
 17801  003E02  86DB               	bsf	plusw2,3,c
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 17805  003E04  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17806  003E08  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17807  003E0C  0E00               	movlw	0
 17808  003E0E  8EDB               	bsf	plusw2,7,c
 17809                           
 17810                           ; BSR set to: 0
 17811                           ;usb_device.c: 1054: if(dir != 0)
 17812  003E10  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17813  003E12  B4D8               	btfsc	status,2,c
 17814  003E14  D007               	goto	l1635
 17815                           
 17816                           ; BSR set to: 0
 17817                           ;usb_device.c: 1055: {
 17818                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 17819  003E16  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17820  003E18  0D02               	mullw	2
 17821  003E1A  0EB2               	movlw	low _pBDTEntryIn
 17822  003E1C  24F3               	addwf	prodl,w,c
 17823  003E1E  6ED9               	movwf	fsr2l,c
 17824  003E20  0E00               	movlw	high _pBDTEntryIn
 17825  003E22  D006               	goto	L17
 17826  003E24                     l1635:
 17827                           
 17828                           ; BSR set to: 0
 17829                           ;usb_device.c: 1059: else
 17830                           ;usb_device.c: 1060: {
 17831                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 17832                           
 17833                           ; BSR set to: 0
 17834  003E24  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17835  003E26  0D02               	mullw	2
 17836  003E28  0E0E               	movlw	low _pBDTEntryOut
 17837  003E2A  24F3               	addwf	prodl,w,c
 17838  003E2C  6ED9               	movwf	fsr2l,c
 17839  003E2E  0E03               	movlw	high _pBDTEntryOut
 17840  003E30                     L17:
 17841  003E30  20F4               	addwfc	prodh,w,c
 17842  003E32  6EDA               	movwf	fsr2h,c
 17843  003E34  0E04               	movlw	4
 17844  003E36  1ADF               	xorwf	indf2,f,c
 17845                           
 17846                           ; BSR set to: 0
 17847                           ;usb_device.c: 1063: }
 17848                           ;usb_device.c: 1064: return (void*)handle;
 17849                           
 17850                           ; BSR set to: 0
 17851  003E38  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 17852  003E3C  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 17853  003E40  0012               	return	
 17854  003E42                     __end_of_USBTransferOnePacket:
 17855                           	opt stack 0
 17856                           tosu	equ	0xFFF
 17857                           tosh	equ	0xFFE
 17858                           tosl	equ	0xFFD
 17859                           pclath	equ	0xFFA
 17860                           tblptru	equ	0xFF8
 17861                           tblptrh	equ	0xFF7
 17862                           tblptrl	equ	0xFF6
 17863                           tablat	equ	0xFF5
 17864                           prodh	equ	0xFF4
 17865                           prodl	equ	0xFF3
 17866                           intcon	equ	0xFF2
 17867                           intcon2	equ	0xFF1
 17868                           intcon3	equ	0xFF0
 17869                           indf0	equ	0xFEF
 17870                           postinc0	equ	0xFEE
 17871                           plusw0	equ	0xFEB
 17872                           fsr0h	equ	0xFEA
 17873                           fsr0l	equ	0xFE9
 17874                           wreg	equ	0xFE8
 17875                           indf1	equ	0xFE7
 17876                           postinc1	equ	0xFE6
 17877                           postdec1	equ	0xFE5
 17878                           plusw1	equ	0xFE3
 17879                           fsr1h	equ	0xFE2
 17880                           fsr1l	equ	0xFE1
 17881                           indf2	equ	0xFDF
 17882                           postinc2	equ	0xFDE
 17883                           postdec2	equ	0xFDD
 17884                           plusw2	equ	0xFDB
 17885                           fsr2h	equ	0xFDA
 17886                           fsr2l	equ	0xFD9
 17887                           status	equ	0xFD8
 17888                           
 17889 ;; *************** function _atoi *****************
 17890 ;; Defined at:
 17891 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 17892 ;; Parameters:    Size  Location     Type
 17893 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 17894 ;;		 -> Terminal@Len(4), 
 17895 ;; Auto vars:     Size  Location     Type
 17896 ;;  a               2   40[BANK0 ] int 
 17897 ;;  sign            1   39[BANK0 ] unsigned char 
 17898 ;; Return value:  Size  Location     Type
 17899 ;;                  2   35[BANK0 ] int 
 17900 ;; Registers used:
 17901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17902 ;; Tracked objects:
 17903 ;;		On entry : 0/0
 17904 ;;		On exit  : 0/0
 17905 ;;		Unchanged: 0/0
 17906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17907 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17908 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17909 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17910 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17911 ;;Total ram usage:        7 bytes
 17912 ;; Hardware stack levels used:    1
 17913 ;; Hardware stack levels required when called:   12
 17914 ;; This function calls:
 17915 ;;		___wmul
 17916 ;;		_isdigit
 17917 ;; This function is called by:
 17918 ;;		_Terminal
 17919 ;; This function uses a non-reentrant model
 17920 ;;
 17921                           
 17922                           	psect	text76
 17923  0034D4                     __ptext76:
 17924                           	opt stack 0
 17925  0034D4                     _atoi:
 17926                           	opt stack 13
 17927                           
 17928                           ; BSR set to: 0
 17929                           ;incstack = 0
 17930  0034D4  D003               	goto	l2747
 17931  0034D6  0100               	movlb	0	; () banked
 17932  0034D8  4B83               	infsnz	atoi@s& (0+255),f,b
 17933  0034DA  2B84               	incf	(atoi@s+1)& (0+255),f,b
 17934  0034DC                     l2747:
 17935                           
 17936                           ; BSR set to: 0
 17937  0034DC  C083  FFD9         	movff	atoi@s,fsr2l
 17938  0034E0  C084  FFDA         	movff	atoi@s+1,fsr2h
 17939  0034E4  0E20               	movlw	32
 17940  0034E6  18DE               	xorwf	postinc2,w,c
 17941  0034E8  B4D8               	btfsc	status,2,c
 17942  0034EA  D7F5               	goto	l2748
 17943  0034EC  C083  FFD9         	movff	atoi@s,fsr2l
 17944  0034F0  C084  FFDA         	movff	atoi@s+1,fsr2h
 17945  0034F4  0E09               	movlw	9
 17946  0034F6  18DE               	xorwf	postinc2,w,c
 17947  0034F8  B4D8               	btfsc	status,2,c
 17948  0034FA  D7ED               	goto	l2748
 17949  0034FC  0E00               	movlw	0
 17950  0034FE  0100               	movlb	0	; () banked
 17951  003500  6F89               	movwf	(atoi@a+1)& (0+255),b
 17952  003502  0E00               	movlw	0
 17953  003504  6F88               	movwf	atoi@a& (0+255),b
 17954  003506  0E00               	movlw	0
 17955  003508  6F87               	movwf	atoi@sign& (0+255),b
 17956                           
 17957                           ; BSR set to: 0
 17958  00350A  C083  FFD9         	movff	atoi@s,fsr2l
 17959  00350E  C084  FFDA         	movff	atoi@s+1,fsr2h
 17960  003512  0E2D               	movlw	45
 17961  003514  18DE               	xorwf	postinc2,w,c
 17962  003516  A4D8               	btfss	status,2,c
 17963  003518  D002               	goto	l2750
 17964                           
 17965                           ; BSR set to: 0
 17966  00351A  2B87               	incf	atoi@sign& (0+255),f,b
 17967  00351C  D026               	goto	l12106
 17968  00351E                     l2750:
 17969                           
 17970                           ; BSR set to: 0
 17971                           
 17972                           ; BSR set to: 0
 17973  00351E  C083  FFD9         	movff	atoi@s,fsr2l
 17974  003522  C084  FFDA         	movff	atoi@s+1,fsr2h
 17975  003526  0E2B               	movlw	43
 17976  003528  18DE               	xorwf	postinc2,w,c
 17977  00352A  A4D8               	btfss	status,2,c
 17978  00352C  D020               	goto	l2753
 17979  00352E  D01D               	goto	l12106
 17980  003530                     
 17981                           ; BSR set to: 0
 17982  003530  C088  F07D         	movff	atoi@a,___wmul@multiplier
 17983  003534  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 17984  003538  0E00               	movlw	0
 17985  00353A  0100               	movlb	0	; () banked
 17986  00353C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17987  00353E  0E0A               	movlw	10
 17988  003540  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 17989  003542  EC8B  F02D         	call	___wmul	;wreg free
 17990  003546  C083  FFD9         	movff	atoi@s,fsr2l
 17991  00354A  C084  FFDA         	movff	atoi@s+1,fsr2h
 17992  00354E  50DF               	movf	indf2,w,c
 17993  003550  0100               	movlb	0	; () banked
 17994  003552  6F85               	movwf	??_atoi& (0+255),b
 17995  003554  6B86               	clrf	(??_atoi+1)& (0+255),b
 17996  003556  517D               	movf	?___wmul& (0+255),w,b
 17997  003558  2785               	addwf	??_atoi& (0+255),f,b
 17998  00355A  517E               	movf	(?___wmul+1)& (0+255),w,b
 17999  00355C  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18000  00355E  0ED0               	movlw	208
 18001  003560  2585               	addwf	??_atoi& (0+255),w,b
 18002  003562  6F88               	movwf	atoi@a& (0+255),b
 18003  003564  0EFF               	movlw	255
 18004  003566  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18005  003568  6F89               	movwf	(atoi@a+1)& (0+255),b
 18006  00356A                     l12106:
 18007                           
 18008                           ; BSR set to: 0
 18009  00356A  4B83               	infsnz	atoi@s& (0+255),f,b
 18010  00356C  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18011  00356E                     l2753:
 18012                           
 18013                           ; BSR set to: 0
 18014                           
 18015                           ; BSR set to: 0
 18016  00356E  C083  FFD9         	movff	atoi@s,fsr2l
 18017  003572  C084  FFDA         	movff	atoi@s+1,fsr2h
 18018  003576  50DF               	movf	indf2,w,c
 18019  003578  EC2C  F02E         	call	_isdigit
 18020  00357C  B0D8               	btfsc	status,0,c
 18021  00357E  D7D8               	goto	l2754
 18022  003580  0100               	movlb	0	; () banked
 18023  003582  5187               	movf	atoi@sign& (0+255),w,b
 18024  003584  B4D8               	btfsc	status,2,c
 18025  003586  D00D               	goto	l2756
 18026                           
 18027                           ; BSR set to: 0
 18028  003588  C088  F085         	movff	atoi@a,??_atoi
 18029  00358C  C089  F086         	movff	atoi@a+1,??_atoi+1
 18030  003590  1F85               	comf	??_atoi& (0+255),f,b
 18031  003592  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18032  003594  4B85               	infsnz	??_atoi& (0+255),f,b
 18033  003596  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18034  003598  C085  F083         	movff	??_atoi,?_atoi
 18035  00359C  C086  F084         	movff	??_atoi+1,?_atoi+1
 18036  0035A0  0012               	return	
 18037  0035A2                     l2756:
 18038                           
 18039                           ; BSR set to: 0
 18040  0035A2  C088  F083         	movff	atoi@a,?_atoi
 18041  0035A6  C089  F084         	movff	atoi@a+1,?_atoi+1
 18042                           
 18043                           ; BSR set to: 0
 18044  0035AA  0012               	return		;funcret
 18045  0035AC                     __end_of_atoi:
 18046                           	opt stack 0
 18047                           tosu	equ	0xFFF
 18048                           tosh	equ	0xFFE
 18049                           tosl	equ	0xFFD
 18050                           pclath	equ	0xFFA
 18051                           tblptru	equ	0xFF8
 18052                           tblptrh	equ	0xFF7
 18053                           tblptrl	equ	0xFF6
 18054                           tablat	equ	0xFF5
 18055                           prodh	equ	0xFF4
 18056                           prodl	equ	0xFF3
 18057                           intcon	equ	0xFF2
 18058                           intcon2	equ	0xFF1
 18059                           intcon3	equ	0xFF0
 18060                           indf0	equ	0xFEF
 18061                           postinc0	equ	0xFEE
 18062                           plusw0	equ	0xFEB
 18063                           fsr0h	equ	0xFEA
 18064                           fsr0l	equ	0xFE9
 18065                           wreg	equ	0xFE8
 18066                           indf1	equ	0xFE7
 18067                           postinc1	equ	0xFE6
 18068                           postdec1	equ	0xFE5
 18069                           plusw1	equ	0xFE3
 18070                           fsr1h	equ	0xFE2
 18071                           fsr1l	equ	0xFE1
 18072                           indf2	equ	0xFDF
 18073                           postinc2	equ	0xFDE
 18074                           postdec2	equ	0xFDD
 18075                           plusw2	equ	0xFDB
 18076                           fsr2h	equ	0xFDA
 18077                           fsr2l	equ	0xFD9
 18078                           status	equ	0xFD8
 18079                           
 18080 ;; *************** function _isdigit *****************
 18081 ;; Defined at:
 18082 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18083 ;; Parameters:    Size  Location     Type
 18084 ;;  c               1    wreg     unsigned char 
 18085 ;; Auto vars:     Size  Location     Type
 18086 ;;  c               1   31[BANK0 ] unsigned char 
 18087 ;; Return value:  Size  Location     Type
 18088 ;;		None               void
 18089 ;; Registers used:
 18090 ;;		wreg, status,2, status,0
 18091 ;; Tracked objects:
 18092 ;;		On entry : 0/0
 18093 ;;		On exit  : 0/0
 18094 ;;		Unchanged: 0/0
 18095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18097 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18098 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18099 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18100 ;;Total ram usage:        3 bytes
 18101 ;; Hardware stack levels used:    1
 18102 ;; Hardware stack levels required when called:   11
 18103 ;; This function calls:
 18104 ;;		Nothing
 18105 ;; This function is called by:
 18106 ;;		_atoi
 18107 ;;		_strtol
 18108 ;;		_xtoi
 18109 ;;		_isxdigit
 18110 ;; This function uses a non-reentrant model
 18111 ;;
 18112                           
 18113                           	psect	text77
 18114  005C58                     __ptext77:
 18115                           	opt stack 0
 18116  005C58                     _isdigit:
 18117                           	opt stack 12
 18118                           
 18119                           ; BSR set to: 0
 18120                           ;incstack = 0
 18121                           ;isdigit@c stored from wreg
 18122  005C58  0100               	movlb	0	; () banked
 18123  005C5A  6F7F               	movwf	isdigit@c& (0+255),b
 18124  005C5C  0E00               	movlw	0
 18125  005C5E  0100               	movlb	0	; () banked
 18126  005C60  6F7E               	movwf	_isdigit$6125& (0+255),b
 18127                           
 18128                           ; BSR set to: 0
 18129  005C62  0E3A               	movlw	58
 18130  005C64  617F               	cpfslt	isdigit@c& (0+255),b
 18131  005C66  D005               	goto	l2928
 18132                           
 18133                           ; BSR set to: 0
 18134  005C68  0E2F               	movlw	47
 18135  005C6A  657F               	cpfsgt	isdigit@c& (0+255),b
 18136  005C6C  D002               	goto	l2928
 18137                           
 18138                           ; BSR set to: 0
 18139  005C6E  0E01               	movlw	1
 18140  005C70  6F7E               	movwf	_isdigit$6125& (0+255),b
 18141  005C72                     l2928:
 18142                           
 18143                           ; BSR set to: 0
 18144                           
 18145                           ; BSR set to: 0
 18146  005C72  C07E  F07D         	movff	_isdigit$6125,??_isdigit
 18147  005C76  317D               	rrcf	??_isdigit& (0+255),w,b
 18148  005C78  0012               	return	
 18149  005C7A                     __end_of_isdigit:
 18150                           	opt stack 0
 18151                           tosu	equ	0xFFF
 18152                           tosh	equ	0xFFE
 18153                           tosl	equ	0xFFD
 18154                           pclath	equ	0xFFA
 18155                           tblptru	equ	0xFF8
 18156                           tblptrh	equ	0xFF7
 18157                           tblptrl	equ	0xFF6
 18158                           tablat	equ	0xFF5
 18159                           prodh	equ	0xFF4
 18160                           prodl	equ	0xFF3
 18161                           intcon	equ	0xFF2
 18162                           intcon2	equ	0xFF1
 18163                           intcon3	equ	0xFF0
 18164                           indf0	equ	0xFEF
 18165                           postinc0	equ	0xFEE
 18166                           plusw0	equ	0xFEB
 18167                           fsr0h	equ	0xFEA
 18168                           fsr0l	equ	0xFE9
 18169                           wreg	equ	0xFE8
 18170                           indf1	equ	0xFE7
 18171                           postinc1	equ	0xFE6
 18172                           postdec1	equ	0xFE5
 18173                           plusw1	equ	0xFE3
 18174                           fsr1h	equ	0xFE2
 18175                           fsr1l	equ	0xFE1
 18176                           indf2	equ	0xFDF
 18177                           postinc2	equ	0xFDE
 18178                           postdec2	equ	0xFDD
 18179                           plusw2	equ	0xFDB
 18180                           fsr2h	equ	0xFDA
 18181                           fsr2l	equ	0xFD9
 18182                           status	equ	0xFD8
 18183                           
 18184 ;; *************** function _OsTmr_Wait *****************
 18185 ;; Defined at:
 18186 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 18187 ;; Parameters:    Size  Location     Type
 18188 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 18189 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 18190 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 18191 ;; Auto vars:     Size  Location     Type
 18192 ;;  Ret             1   65[BANK0 ] enum E7749
 18193 ;; Return value:  Size  Location     Type
 18194 ;;                  1    wreg      enum E7749
 18195 ;; Registers used:
 18196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18197 ;; Tracked objects:
 18198 ;;		On entry : 0/0
 18199 ;;		On exit  : 0/0
 18200 ;;		Unchanged: 0/0
 18201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18202 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18203 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18205 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18206 ;;Total ram usage:        7 bytes
 18207 ;; Hardware stack levels used:    1
 18208 ;; Hardware stack levels required when called:   14
 18209 ;; This function calls:
 18210 ;;		_OsTmr_GetTimerStatus
 18211 ;;		_OsTmr_StartTimer
 18212 ;; This function is called by:
 18213 ;;		_Terminal
 18214 ;;		_I2cSlv_QueryI2cData
 18215 ;; This function uses a non-reentrant model
 18216 ;;
 18217                           
 18218                           	psect	text78
 18219  004A52                     __ptext78:
 18220                           	opt stack 0
 18221  004A52                     _OsTmr_Wait:
 18222                           	opt stack 11
 18223                           
 18224                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 18225                           
 18226                           ; BSR set to: 0
 18227                           ;incstack = 0
 18228  004A52  0E00               	movlw	0
 18229  004A54  0100               	movlb	0	; () banked
 18230  004A56  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18231                           
 18232                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 18233  004A58  D02D               	goto	l855
 18234  004A5A                     
 18235                           ; BSR set to: 0
 18236                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 18237                           
 18238                           ; BSR set to: 0
 18239  004A5A  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 18240  004A5E  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 18241  004A62  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 18242  004A66  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 18243  004A6A  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 18244  004A6E  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 18245  004A72  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 18246                           
 18247                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 18248  004A76  0100               	movlb	0	; () banked
 18249  004A78  EE20 F00A          	lfsr	2,10
 18250  004A7C  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18251  004A7E  26D9               	addwf	fsr2l,f,c
 18252  004A80  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18253  004A82  22DA               	addwfc	fsr2h,f,c
 18254  004A84  0E01               	movlw	1
 18255  004A86  6EDF               	movwf	indf2,c
 18256                           
 18257                           ;os_timers.c: 165: break;
 18258  004A88  D022               	goto	l857
 18259  004A8A                     
 18260                           ; BSR set to: 0
 18261                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 18262                           
 18263                           ; BSR set to: 0
 18264  004A8A  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 18265  004A8E  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 18266  004A92  EC8B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 18267  004A96  06E8               	decf	wreg,f,c
 18268  004A98  A4D8               	btfss	status,2,c
 18269  004A9A  D019               	goto	l857
 18270                           
 18271                           ;os_timers.c: 170: {
 18272                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 18273  004A9C  0100               	movlb	0	; () banked
 18274  004A9E  EE20 F00A          	lfsr	2,10
 18275  004AA2  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18276  004AA4  26D9               	addwf	fsr2l,f,c
 18277  004AA6  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18278  004AA8  22DA               	addwfc	fsr2h,f,c
 18279  004AAA  0E00               	movlw	0
 18280  004AAC  6EDF               	movwf	indf2,c
 18281                           
 18282                           ; BSR set to: 0
 18283                           ;os_timers.c: 174: Ret = DelayExpired;
 18284  004AAE  0E01               	movlw	1
 18285  004AB0  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18286                           
 18287                           ; BSR set to: 0
 18288                           ;os_timers.c: 180: }
 18289                           
 18290                           ; BSR set to: 0
 18291                           ;os_timers.c: 179: break;
 18292                           
 18293                           ;os_timers.c: 178: default:
 18294                           
 18295                           ; BSR set to: 0
 18296                           ;os_timers.c: 175: }
 18297                           ;os_timers.c: 176: break;
 18298  004AB2  D00D               	goto	l857
 18299  004AB4                     l855:
 18300                           
 18301                           ; BSR set to: 0
 18302                           
 18303                           ; BSR set to: 0
 18304  004AB4  EE20 F00A          	lfsr	2,10
 18305  004AB8  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18306  004ABA  26D9               	addwf	fsr2l,f,c
 18307  004ABC  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18308  004ABE  22DA               	addwfc	fsr2h,f,c
 18309  004AC0  50DF               	movf	indf2,w,c
 18310                           
 18311                           ; Switch size 1, requested type "space"
 18312                           ; Number of cases is 2, Range of values is 0 to 1
 18313                           ; switch strategies available:
 18314                           ; Name         Instructions Cycles
 18315                           ; simple_byte            7     4 (average)
 18316                           ;	Chosen strategy is simple_byte
 18317  004AC2  0A00               	xorlw	0	; case 0
 18318  004AC4  B4D8               	btfsc	status,2,c
 18319  004AC6  D7C9               	goto	l856
 18320  004AC8  0A01               	xorlw	1	; case 1
 18321  004ACA  B4D8               	btfsc	status,2,c
 18322  004ACC  D7DE               	goto	l858
 18323  004ACE                     l857:
 18324                           
 18325                           ;os_timers.c: 182: return Ret;
 18326                           
 18327                           ; BSR set to: 0
 18328  004ACE  0100               	movlb	0	; () banked
 18329  004AD0  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 18330  004AD2  0012               	return	
 18331  004AD4                     __end_of_OsTmr_Wait:
 18332                           	opt stack 0
 18333                           tosu	equ	0xFFF
 18334                           tosh	equ	0xFFE
 18335                           tosl	equ	0xFFD
 18336                           pclath	equ	0xFFA
 18337                           tblptru	equ	0xFF8
 18338                           tblptrh	equ	0xFF7
 18339                           tblptrl	equ	0xFF6
 18340                           tablat	equ	0xFF5
 18341                           prodh	equ	0xFF4
 18342                           prodl	equ	0xFF3
 18343                           intcon	equ	0xFF2
 18344                           intcon2	equ	0xFF1
 18345                           intcon3	equ	0xFF0
 18346                           indf0	equ	0xFEF
 18347                           postinc0	equ	0xFEE
 18348                           plusw0	equ	0xFEB
 18349                           fsr0h	equ	0xFEA
 18350                           fsr0l	equ	0xFE9
 18351                           wreg	equ	0xFE8
 18352                           indf1	equ	0xFE7
 18353                           postinc1	equ	0xFE6
 18354                           postdec1	equ	0xFE5
 18355                           plusw1	equ	0xFE3
 18356                           fsr1h	equ	0xFE2
 18357                           fsr1l	equ	0xFE1
 18358                           indf2	equ	0xFDF
 18359                           postinc2	equ	0xFDE
 18360                           postdec2	equ	0xFDD
 18361                           plusw2	equ	0xFDB
 18362                           fsr2h	equ	0xFDA
 18363                           fsr2l	equ	0xFD9
 18364                           status	equ	0xFD8
 18365                           
 18366 ;; *************** function _I2cSlv_SendI2cMsg *****************
 18367 ;; Defined at:
 18368 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18369 ;; Parameters:    Size  Location     Type
 18370 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 18371 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 18372 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18373 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18374 ;; Auto vars:     Size  Location     Type
 18375 ;;  TxSts           1   36[BANK0 ] unsigned char 
 18376 ;; Return value:  Size  Location     Type
 18377 ;;                  1    wreg      unsigned char 
 18378 ;; Registers used:
 18379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18380 ;; Tracked objects:
 18381 ;;		On entry : 0/0
 18382 ;;		On exit  : 0/0
 18383 ;;		Unchanged: 0/0
 18384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18385 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18386 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18388 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18389 ;;Total ram usage:        5 bytes
 18390 ;; Hardware stack levels used:    1
 18391 ;; Hardware stack levels required when called:   12
 18392 ;; This function calls:
 18393 ;;		_GenerateEvt
 18394 ;; This function is called by:
 18395 ;;		_Terminal
 18396 ;;		_I2cSlv_QueryI2cData
 18397 ;;		_triggerRelay
 18398 ;; This function uses a non-reentrant model
 18399 ;;
 18400                           
 18401                           	psect	text79
 18402  005746                     __ptext79:
 18403                           	opt stack 0
 18404  005746                     _I2cSlv_SendI2cMsg:
 18405                           	opt stack 13
 18406                           
 18407                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 18408                           
 18409                           ; BSR set to: 0
 18410                           ;incstack = 0
 18411  005746  0E00               	movlw	0
 18412  005748  0100               	movlb	0	; () banked
 18413  00574A  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18414                           
 18415                           ; BSR set to: 0
 18416                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 18417  00574C  05CC               	decf	_I2cComSts& (0+255),w,b
 18418  00574E  B4D8               	btfsc	status,2,c
 18419  005750  D015               	goto	l1395
 18420                           
 18421                           ; BSR set to: 0
 18422                           ;i2c_slv.c: 257: {
 18423                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 18424  005752  C082  F39D         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 18425                           
 18426                           ; BSR set to: 0
 18427                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 18428  005756  0E00               	movlw	0
 18429  005758  0103               	movlb	3	; () banked
 18430  00575A  6F9E               	movwf	(_I2cTxPacket+1)& (0+255),b
 18431                           
 18432                           ; BSR set to: 3
 18433                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 18434  00575C  C083  F3A1         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 18435                           
 18436                           ; BSR set to: 3
 18437                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 18438  005760  C080  F39F         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 18439  005764  C081  F3A0         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 18440                           
 18441                           ; BSR set to: 3
 18442                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 18443  005768  0ED6               	movlw	low _I2cWriteDataEvt
 18444  00576A  0100               	movlb	0	; () banked
 18445  00576C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18446  00576E  0E00               	movlw	high _I2cWriteDataEvt
 18447  005770  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18448  005772  ECDA  F02E         	call	_GenerateEvt	;wreg free
 18449                           
 18450                           ;i2c_slv.c: 267: TxSts = 1u;
 18451  005776  0E01               	movlw	1
 18452  005778  0100               	movlb	0	; () banked
 18453  00577A  D001               	goto	L18
 18454  00577C                     l1395:
 18455                           
 18456                           ; BSR set to: 0
 18457                           ;i2c_slv.c: 269: else
 18458                           ;i2c_slv.c: 270: {
 18459                           ;i2c_slv.c: 272: TxSts = 0u;
 18460                           
 18461                           ; BSR set to: 0
 18462  00577C  0E00               	movlw	0
 18463  00577E                     L18:
 18464  00577E  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18465                           
 18466                           ; BSR set to: 0
 18467                           ;i2c_slv.c: 273: }
 18468                           ;i2c_slv.c: 275: return TxSts;
 18469  005780  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 18470  005782  0012               	return	
 18471  005784                     __end_of_I2cSlv_SendI2cMsg:
 18472                           	opt stack 0
 18473                           tosu	equ	0xFFF
 18474                           tosh	equ	0xFFE
 18475                           tosl	equ	0xFFD
 18476                           pclath	equ	0xFFA
 18477                           tblptru	equ	0xFF8
 18478                           tblptrh	equ	0xFF7
 18479                           tblptrl	equ	0xFF6
 18480                           tablat	equ	0xFF5
 18481                           prodh	equ	0xFF4
 18482                           prodl	equ	0xFF3
 18483                           intcon	equ	0xFF2
 18484                           intcon2	equ	0xFF1
 18485                           intcon3	equ	0xFF0
 18486                           indf0	equ	0xFEF
 18487                           postinc0	equ	0xFEE
 18488                           plusw0	equ	0xFEB
 18489                           fsr0h	equ	0xFEA
 18490                           fsr0l	equ	0xFE9
 18491                           wreg	equ	0xFE8
 18492                           indf1	equ	0xFE7
 18493                           postinc1	equ	0xFE6
 18494                           postdec1	equ	0xFE5
 18495                           plusw1	equ	0xFE3
 18496                           fsr1h	equ	0xFE2
 18497                           fsr1l	equ	0xFE1
 18498                           indf2	equ	0xFDF
 18499                           postinc2	equ	0xFDE
 18500                           postdec2	equ	0xFDD
 18501                           plusw2	equ	0xFDB
 18502                           fsr2h	equ	0xFDA
 18503                           fsr2l	equ	0xFD9
 18504                           status	equ	0xFD8
 18505                           
 18506 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 18507 ;; Defined at:
 18508 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18509 ;; Parameters:    Size  Location     Type
 18510 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 18511 ;;		 -> Terminal@TermRxBuffer(50), 
 18512 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18513 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18514 ;; Auto vars:     Size  Location     Type
 18515 ;;  RxSts           1   36[BANK0 ] unsigned char 
 18516 ;; Return value:  Size  Location     Type
 18517 ;;                  1    wreg      unsigned char 
 18518 ;; Registers used:
 18519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18520 ;; Tracked objects:
 18521 ;;		On entry : 0/0
 18522 ;;		On exit  : 0/0
 18523 ;;		Unchanged: 0/0
 18524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18525 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18526 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18528 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18529 ;;Total ram usage:        5 bytes
 18530 ;; Hardware stack levels used:    1
 18531 ;; Hardware stack levels required when called:   12
 18532 ;; This function calls:
 18533 ;;		_GenerateEvt
 18534 ;; This function is called by:
 18535 ;;		_Terminal
 18536 ;;		_I2cSlv_QueryI2cData
 18537 ;; This function uses a non-reentrant model
 18538 ;;
 18539                           
 18540                           	psect	text80
 18541  005648                     __ptext80:
 18542                           	opt stack 0
 18543  005648                     _I2cSlv_ReceiveI2cMsg:
 18544                           	opt stack 13
 18545                           
 18546                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 18547                           
 18548                           ; BSR set to: 0
 18549                           ;incstack = 0
 18550  005648  0E00               	movlw	0
 18551  00564A  0100               	movlb	0	; () banked
 18552  00564C  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18553                           
 18554                           ; BSR set to: 0
 18555                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 18556  00564E  0E02               	movlw	2
 18557  005650  19CC               	xorwf	_I2cComSts& (0+255),w,b
 18558  005652  B4D8               	btfsc	status,2,c
 18559  005654  D016               	goto	l1400
 18560                           
 18561                           ; BSR set to: 0
 18562                           ;i2c_slv.c: 294: {
 18563                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 18564  005656  C082  F397         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 18565                           
 18566                           ; BSR set to: 0
 18567                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 18568  00565A  0E01               	movlw	1
 18569  00565C  0103               	movlb	3	; () banked
 18570  00565E  6F98               	movwf	(_I2cRxPacket+1)& (0+255),b
 18571                           
 18572                           ; BSR set to: 3
 18573                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 18574  005660  C083  F39B         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 18575                           
 18576                           ; BSR set to: 3
 18577                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 18578  005664  C080  F399         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 18579  005668  C081  F39A         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 18580                           
 18581                           ; BSR set to: 3
 18582                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 18583  00566C  0ED5               	movlw	low _I2cReadDataEvt
 18584  00566E  0100               	movlb	0	; () banked
 18585  005670  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18586  005672  0E00               	movlw	high _I2cReadDataEvt
 18587  005674  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18588  005676  ECDA  F02E         	call	_GenerateEvt	;wreg free
 18589                           
 18590                           ;i2c_slv.c: 304: RxSts = 1u;
 18591  00567A  0E01               	movlw	1
 18592  00567C  0100               	movlb	0	; () banked
 18593  00567E  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18594                           
 18595                           ;i2c_slv.c: 305: }
 18596  005680  0012               	return	
 18597  005682                     l1400:
 18598                           
 18599                           ; BSR set to: 0
 18600                           ;i2c_slv.c: 306: else
 18601                           ;i2c_slv.c: 307: {
 18602                           ;i2c_slv.c: 309: RxSts = 0u;
 18603                           
 18604                           ; BSR set to: 0
 18605  005682  0E00               	movlw	0
 18606  005684  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18607                           
 18608                           ; BSR set to: 0
 18609  005686  0012               	return	
 18610  005688                     __end_of_I2cSlv_ReceiveI2cMsg:
 18611                           	opt stack 0
 18612                           tosu	equ	0xFFF
 18613                           tosh	equ	0xFFE
 18614                           tosl	equ	0xFFD
 18615                           pclath	equ	0xFFA
 18616                           tblptru	equ	0xFF8
 18617                           tblptrh	equ	0xFF7
 18618                           tblptrl	equ	0xFF6
 18619                           tablat	equ	0xFF5
 18620                           prodh	equ	0xFF4
 18621                           prodl	equ	0xFF3
 18622                           intcon	equ	0xFF2
 18623                           intcon2	equ	0xFF1
 18624                           intcon3	equ	0xFF0
 18625                           indf0	equ	0xFEF
 18626                           postinc0	equ	0xFEE
 18627                           plusw0	equ	0xFEB
 18628                           fsr0h	equ	0xFEA
 18629                           fsr0l	equ	0xFE9
 18630                           wreg	equ	0xFE8
 18631                           indf1	equ	0xFE7
 18632                           postinc1	equ	0xFE6
 18633                           postdec1	equ	0xFE5
 18634                           plusw1	equ	0xFE3
 18635                           fsr1h	equ	0xFE2
 18636                           fsr1l	equ	0xFE1
 18637                           indf2	equ	0xFDF
 18638                           postinc2	equ	0xFDE
 18639                           postdec2	equ	0xFDD
 18640                           plusw2	equ	0xFDB
 18641                           fsr2h	equ	0xFDA
 18642                           fsr2l	equ	0xFD9
 18643                           status	equ	0xFD8
 18644                           
 18645 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 18646 ;; Defined at:
 18647 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18648 ;; Parameters:    Size  Location     Type
 18649 ;;		None
 18650 ;; Auto vars:     Size  Location     Type
 18651 ;;  Result          1   33[BANK0 ] enum E8915
 18652 ;; Return value:  Size  Location     Type
 18653 ;;                  1    wreg      enum E8915
 18654 ;; Registers used:
 18655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18656 ;; Tracked objects:
 18657 ;;		On entry : 0/0
 18658 ;;		On exit  : 0/0
 18659 ;;		Unchanged: 0/0
 18660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18662 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18664 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18665 ;;Total ram usage:        1 bytes
 18666 ;; Hardware stack levels used:    1
 18667 ;; Hardware stack levels required when called:   12
 18668 ;; This function calls:
 18669 ;;		_ReceiveEvt
 18670 ;; This function is called by:
 18671 ;;		_Terminal
 18672 ;;		_I2cSlv_QueryI2cData
 18673 ;; This function uses a non-reentrant model
 18674 ;;
 18675                           
 18676                           	psect	text81
 18677  005C7A                     __ptext81:
 18678                           	opt stack 0
 18679  005C7A                     _I2cSlv_I2cReadMsgSts:
 18680                           	opt stack 13
 18681                           
 18682                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 18683                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 18684                           
 18685                           ; BSR set to: 0
 18686                           ;incstack = 0
 18687  005C7A  0E9C               	movlw	low (_I2cRxPacket+5)
 18688  005C7C  0100               	movlb	0	; () banked
 18689  005C7E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 18690  005C80  0E03               	movlw	high (_I2cRxPacket+5)
 18691  005C82  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 18692  005C84  EC34  F02D         	call	_ReceiveEvt	;wreg free
 18693  005C88  0900               	iorlw	0
 18694  005C8A  B4D8               	btfsc	status,2,c
 18695  005C8C  D002               	goto	l1405
 18696                           
 18697                           ;i2c_slv.c: 331: {
 18698                           ;i2c_slv.c: 332: Result = MessageReceived;
 18699  005C8E  0E01               	movlw	1
 18700  005C90  D001               	goto	L19
 18701  005C92                     l1405:
 18702                           
 18703                           ;i2c_slv.c: 334: else
 18704                           ;i2c_slv.c: 335: {
 18705                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 18706                           
 18707                           ; BSR set to: 0
 18708  005C92  0E00               	movlw	0
 18709  005C94                     L19:
 18710  005C94  0100               	movlb	0	; () banked
 18711  005C96  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 18712                           
 18713                           ; BSR set to: 0
 18714                           ;i2c_slv.c: 337: }
 18715                           ;i2c_slv.c: 339: return Result;
 18716  005C98  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 18717  005C9A  0012               	return	
 18718  005C9C                     __end_of_I2cSlv_I2cReadMsgSts:
 18719                           	opt stack 0
 18720                           tosu	equ	0xFFF
 18721                           tosh	equ	0xFFE
 18722                           tosl	equ	0xFFD
 18723                           pclath	equ	0xFFA
 18724                           tblptru	equ	0xFF8
 18725                           tblptrh	equ	0xFF7
 18726                           tblptrl	equ	0xFF6
 18727                           tablat	equ	0xFF5
 18728                           prodh	equ	0xFF4
 18729                           prodl	equ	0xFF3
 18730                           intcon	equ	0xFF2
 18731                           intcon2	equ	0xFF1
 18732                           intcon3	equ	0xFF0
 18733                           indf0	equ	0xFEF
 18734                           postinc0	equ	0xFEE
 18735                           plusw0	equ	0xFEB
 18736                           fsr0h	equ	0xFEA
 18737                           fsr0l	equ	0xFE9
 18738                           wreg	equ	0xFE8
 18739                           indf1	equ	0xFE7
 18740                           postinc1	equ	0xFE6
 18741                           postdec1	equ	0xFE5
 18742                           plusw1	equ	0xFE3
 18743                           fsr1h	equ	0xFE2
 18744                           fsr1l	equ	0xFE1
 18745                           indf2	equ	0xFDF
 18746                           postinc2	equ	0xFDE
 18747                           postdec2	equ	0xFDD
 18748                           plusw2	equ	0xFDB
 18749                           fsr2h	equ	0xFDA
 18750                           fsr2l	equ	0xFD9
 18751                           status	equ	0xFD8
 18752                           
 18753 ;; *************** function _Rtcm_SetRtccDate *****************
 18754 ;; Defined at:
 18755 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18756 ;; Parameters:    Size  Location     Type
 18757 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18758 ;; Auto vars:     Size  Location     Type
 18759 ;;		None
 18760 ;; Return value:  Size  Location     Type
 18761 ;;                  1    wreg      void 
 18762 ;; Registers used:
 18763 ;;		wreg, status,2, status,0, cstack
 18764 ;; Tracked objects:
 18765 ;;		On entry : 0/0
 18766 ;;		On exit  : 0/0
 18767 ;;		Unchanged: 0/0
 18768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18769 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18772 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18773 ;;Total ram usage:        8 bytes
 18774 ;; Hardware stack levels used:    1
 18775 ;; Hardware stack levels required when called:   13
 18776 ;; This function calls:
 18777 ;;		_Rtcc_LockRtc
 18778 ;;		_Rtcc_SetRtccValue
 18779 ;;		_Rtcc_UnlockRtc
 18780 ;; This function is called by:
 18781 ;;		_Rtcm_MainTask
 18782 ;; This function uses a non-reentrant model
 18783 ;;
 18784                           
 18785                           	psect	text82
 18786  0050FA                     __ptext82:
 18787                           	opt stack 0
 18788  0050FA                     _Rtcm_SetRtccDate:
 18789                           	opt stack 14
 18790                           
 18791                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18792                           
 18793                           ; BSR set to: 0
 18794                           ;incstack = 0
 18795  0050FA  EC38  F02F         	call	_Rtcc_UnlockRtc	;wreg free
 18796                           
 18797                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18798  0050FE  0100               	movlb	0	; () banked
 18799  005100  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18800  005102  0F30               	addlw	48
 18801  005104  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18802  005106  0E00               	movlw	0
 18803  005108  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18804                           
 18805                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18806  00510C  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18807  005110  0E01               	movlw	1
 18808  005112  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18809                           
 18810                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18811  005116  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18812  00511A  0E02               	movlw	2
 18813  00511C  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18814                           
 18815                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18816  005120  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18817  005124  0E03               	movlw	3
 18818  005126  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18819                           
 18820                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18821  00512A  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18822  00512E  0E04               	movlw	4
 18823  005130  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18824                           
 18825                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18826  005134  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18827  005138  0E05               	movlw	5
 18828  00513A  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18829                           
 18830                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18831  00513E  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18832  005142  0E06               	movlw	6
 18833  005144  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18834                           
 18835                           ;rtcm.c: 191: Rtcc_LockRtc();
 18836  005148  EC40  F02F         	call	_Rtcc_LockRtc	;wreg free
 18837  00514C  0012               	return		;funcret
 18838  00514E                     __end_of_Rtcm_SetRtccDate:
 18839                           	opt stack 0
 18840                           tosu	equ	0xFFF
 18841                           tosh	equ	0xFFE
 18842                           tosl	equ	0xFFD
 18843                           pclath	equ	0xFFA
 18844                           tblptru	equ	0xFF8
 18845                           tblptrh	equ	0xFF7
 18846                           tblptrl	equ	0xFF6
 18847                           tablat	equ	0xFF5
 18848                           prodh	equ	0xFF4
 18849                           prodl	equ	0xFF3
 18850                           intcon	equ	0xFF2
 18851                           intcon2	equ	0xFF1
 18852                           intcon3	equ	0xFF0
 18853                           indf0	equ	0xFEF
 18854                           postinc0	equ	0xFEE
 18855                           plusw0	equ	0xFEB
 18856                           fsr0h	equ	0xFEA
 18857                           fsr0l	equ	0xFE9
 18858                           wreg	equ	0xFE8
 18859                           indf1	equ	0xFE7
 18860                           postinc1	equ	0xFE6
 18861                           postdec1	equ	0xFE5
 18862                           plusw1	equ	0xFE3
 18863                           fsr1h	equ	0xFE2
 18864                           fsr1l	equ	0xFE1
 18865                           indf2	equ	0xFDF
 18866                           postinc2	equ	0xFDE
 18867                           postdec2	equ	0xFDD
 18868                           plusw2	equ	0xFDB
 18869                           fsr2h	equ	0xFDA
 18870                           fsr2l	equ	0xFD9
 18871                           status	equ	0xFD8
 18872                           
 18873 ;; *************** function _Rtcc_UnlockRtc *****************
 18874 ;; Defined at:
 18875 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18876 ;; Parameters:    Size  Location     Type
 18877 ;;		None
 18878 ;; Auto vars:     Size  Location     Type
 18879 ;;		None
 18880 ;; Return value:  Size  Location     Type
 18881 ;;                  1    wreg      void 
 18882 ;; Registers used:
 18883 ;;		None
 18884 ;; Tracked objects:
 18885 ;;		On entry : 0/0
 18886 ;;		On exit  : 0/0
 18887 ;;		Unchanged: 0/0
 18888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18893 ;;Total ram usage:        0 bytes
 18894 ;; Hardware stack levels used:    1
 18895 ;; Hardware stack levels required when called:   11
 18896 ;; This function calls:
 18897 ;;		Nothing
 18898 ;; This function is called by:
 18899 ;;		_Rtcm_MainTask
 18900 ;;		_Rtcm_SetRtccDate
 18901 ;;		_Rtcm_SetRtccAlarm
 18902 ;; This function uses a non-reentrant model
 18903 ;;
 18904                           
 18905                           	psect	text83
 18906  005E70                     __ptext83:
 18907                           	opt stack 0
 18908  005E70                     _Rtcc_UnlockRtc:
 18909                           	opt stack 15
 18910                           
 18911                           ;incstack = 0
 18912  005E70  010F               	movlb	15	;# 
 18913  005E72  0E55               	movlw	85	;# 
 18914  005E74  6EA7               	movwf	4007,c	;# 
 18915  005E76  0EAA               	movlw	170	;# 
 18916  005E78  6EA7               	movwf	4007,c	;# 
 18917                           
 18918                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18919  005E7A  010F               	movlb	15	; () banked
 18920  005E7C  8B3F               	bsf	63,5,b	;volatile
 18921                           
 18922                           ; BSR set to: 15
 18923  005E7E  0012               	return		;funcret
 18924  005E80                     __end_of_Rtcc_UnlockRtc:
 18925                           	opt stack 0
 18926                           tosu	equ	0xFFF
 18927                           tosh	equ	0xFFE
 18928                           tosl	equ	0xFFD
 18929                           pclath	equ	0xFFA
 18930                           tblptru	equ	0xFF8
 18931                           tblptrh	equ	0xFF7
 18932                           tblptrl	equ	0xFF6
 18933                           tablat	equ	0xFF5
 18934                           prodh	equ	0xFF4
 18935                           prodl	equ	0xFF3
 18936                           intcon	equ	0xFF2
 18937                           intcon2	equ	0xFF1
 18938                           intcon3	equ	0xFF0
 18939                           indf0	equ	0xFEF
 18940                           postinc0	equ	0xFEE
 18941                           plusw0	equ	0xFEB
 18942                           fsr0h	equ	0xFEA
 18943                           fsr0l	equ	0xFE9
 18944                           wreg	equ	0xFE8
 18945                           indf1	equ	0xFE7
 18946                           postinc1	equ	0xFE6
 18947                           postdec1	equ	0xFE5
 18948                           plusw1	equ	0xFE3
 18949                           fsr1h	equ	0xFE2
 18950                           fsr1l	equ	0xFE1
 18951                           indf2	equ	0xFDF
 18952                           postinc2	equ	0xFDE
 18953                           postdec2	equ	0xFDD
 18954                           plusw2	equ	0xFDB
 18955                           fsr2h	equ	0xFDA
 18956                           fsr2l	equ	0xFD9
 18957                           status	equ	0xFD8
 18958                           
 18959 ;; *************** function _Rtcc_SetRtccValue *****************
 18960 ;; Defined at:
 18961 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18962 ;; Parameters:    Size  Location     Type
 18963 ;;  RtccPtrVal      1    wreg     enum E7757
 18964 ;;  Value           1   37[BANK0 ] unsigned char 
 18965 ;; Auto vars:     Size  Location     Type
 18966 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18967 ;; Return value:  Size  Location     Type
 18968 ;;                  1    wreg      void 
 18969 ;; Registers used:
 18970 ;;		wreg, status,2, status,0, cstack
 18971 ;; Tracked objects:
 18972 ;;		On entry : 0/0
 18973 ;;		On exit  : 0/0
 18974 ;;		Unchanged: 0/0
 18975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18976 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18978 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18979 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18980 ;;Total ram usage:        4 bytes
 18981 ;; Hardware stack levels used:    1
 18982 ;; Hardware stack levels required when called:   12
 18983 ;; This function calls:
 18984 ;;		___awdiv
 18985 ;;		___awmod
 18986 ;; This function is called by:
 18987 ;;		_Rtcm_SetRtccDate
 18988 ;; This function uses a non-reentrant model
 18989 ;;
 18990                           
 18991                           	psect	text84
 18992  0015EE                     __ptext84:
 18993                           	opt stack 0
 18994  0015EE                     _Rtcc_SetRtccValue:
 18995                           	opt stack 14
 18996                           
 18997                           ; BSR set to: 15
 18998                           ;incstack = 0
 18999                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 19000  0015EE  0100               	movlb	0	; () banked
 19001  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 19002                           
 19003                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 19004  0015F2  D0FC               	goto	l441
 19005  0015F4                     l442:
 19006                           
 19007                           ; BSR set to: 0
 19008                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 19009  0015F4  010F               	movlb	15	; () banked
 19010  0015F6  833F               	bsf	63,1,b	;volatile
 19011                           
 19012                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 19013  0015F8  813F               	bsf	63,0,b	;volatile
 19014                           
 19015                           ; BSR set to: 15
 19016                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19017  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19018  0015FE  0100               	movlb	0	; () banked
 19019  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19020  001602  0E00               	movlw	0
 19021  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19022  001606  0E0A               	movlw	10
 19023  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 19024  00160A  EC6A  F025         	call	___awmod	;wreg free
 19025  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19026  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19027  001616  0E0F               	movlw	15
 19028  001618  0100               	movlb	0	; () banked
 19029  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19030  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19031  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19032  001622  0E00               	movlw	0
 19033  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19034  001626  0E0A               	movlw	10
 19035  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19036  00162A  ECA4  F024         	call	___awdiv	;wreg free
 19037  00162E  0100               	movlb	0	; () banked
 19038  001630  397D               	swapf	?___awdiv& (0+255),w,b
 19039  001632  0BF0               	andlw	240
 19040  001634  0BF0               	andlw	240
 19041  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19042  001638  6E98               	movwf	3992,c	;volatile
 19043                           
 19044                           ;rtcc_drv.c: 393: break;
 19045  00163A  0012               	return	
 19046  00163C                     l444:
 19047                           
 19048                           ; BSR set to: 0
 19049                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19050  00163C  010F               	movlb	15	; () banked
 19051  00163E  833F               	bsf	63,1,b	;volatile
 19052                           
 19053                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19054  001640  913F               	bcf	63,0,b	;volatile
 19055                           
 19056                           ; BSR set to: 15
 19057                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19058  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19059  001646  0100               	movlb	0	; () banked
 19060  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19061  00164A  0E00               	movlw	0
 19062  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19063  00164E  0E0A               	movlw	10
 19064  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 19065  001652  EC6A  F025         	call	___awmod	;wreg free
 19066  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19067  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19068  00165E  0E0F               	movlw	15
 19069  001660  0100               	movlb	0	; () banked
 19070  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19071  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19072  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19073  00166A  0E00               	movlw	0
 19074  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19075  00166E  0E0A               	movlw	10
 19076  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19077  001672  ECA4  F024         	call	___awdiv	;wreg free
 19078  001676  0100               	movlb	0	; () banked
 19079  001678  397D               	swapf	?___awdiv& (0+255),w,b
 19080  00167A  0BF0               	andlw	240
 19081  00167C  0BF0               	andlw	240
 19082  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19083  001680  6E99               	movwf	3993,c	;volatile
 19084                           
 19085                           ;rtcc_drv.c: 401: break;
 19086  001682  0012               	return	
 19087  001684                     l445:
 19088                           
 19089                           ; BSR set to: 0
 19090                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19091  001684  010F               	movlb	15	; () banked
 19092  001686  833F               	bsf	63,1,b	;volatile
 19093                           
 19094                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19095  001688  913F               	bcf	63,0,b	;volatile
 19096                           
 19097                           ; BSR set to: 15
 19098                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19099  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19100  00168E  0100               	movlb	0	; () banked
 19101  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19102  001692  0E00               	movlw	0
 19103  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19104  001696  0E0A               	movlw	10
 19105  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 19106  00169A  EC6A  F025         	call	___awmod	;wreg free
 19107  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19108  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19109  0016A6  0E0F               	movlw	15
 19110  0016A8  0100               	movlb	0	; () banked
 19111  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19112  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19113  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19114  0016B2  0E00               	movlw	0
 19115  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19116  0016B6  0E0A               	movlw	10
 19117  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19118  0016BA  ECA4  F024         	call	___awdiv	;wreg free
 19119  0016BE  0100               	movlb	0	; () banked
 19120  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 19121  0016C2  0BF0               	andlw	240
 19122  0016C4  0BF0               	andlw	240
 19123  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19124  0016C8  6E98               	movwf	3992,c	;volatile
 19125                           
 19126                           ;rtcc_drv.c: 409: break;
 19127  0016CA  0012               	return	
 19128  0016CC                     l446:
 19129                           
 19130                           ; BSR set to: 0
 19131                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19132  0016CC  010F               	movlb	15	; () banked
 19133  0016CE  933F               	bcf	63,1,b	;volatile
 19134                           
 19135                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19136  0016D0  813F               	bsf	63,0,b	;volatile
 19137                           
 19138                           ; BSR set to: 15
 19139                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19140  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19141  0016D6  0100               	movlb	0	; () banked
 19142  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19143  0016DA  0E00               	movlw	0
 19144  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19145  0016DE  0E0A               	movlw	10
 19146  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 19147  0016E2  EC6A  F025         	call	___awmod	;wreg free
 19148  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19149  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19150  0016EE  0E0F               	movlw	15
 19151  0016F0  0100               	movlb	0	; () banked
 19152  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19153  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19154  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19155  0016FA  0E00               	movlw	0
 19156  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19157  0016FE  0E0A               	movlw	10
 19158  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19159  001702  ECA4  F024         	call	___awdiv	;wreg free
 19160  001706  0100               	movlb	0	; () banked
 19161  001708  397D               	swapf	?___awdiv& (0+255),w,b
 19162  00170A  0BF0               	andlw	240
 19163  00170C  0BF0               	andlw	240
 19164  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19165  001710  6E99               	movwf	3993,c	;volatile
 19166                           
 19167                           ;rtcc_drv.c: 417: break;
 19168  001712  0012               	return	
 19169  001714                     l447:
 19170                           
 19171                           ; BSR set to: 0
 19172                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19173  001714  010F               	movlb	15	; () banked
 19174  001716  933F               	bcf	63,1,b	;volatile
 19175                           
 19176                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19177  001718  813F               	bsf	63,0,b	;volatile
 19178                           
 19179                           ; BSR set to: 15
 19180                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19181  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19182  00171E  0100               	movlb	0	; () banked
 19183  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19184  001722  0E00               	movlw	0
 19185  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19186  001726  0E0A               	movlw	10
 19187  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19188  00172A  EC6A  F025         	call	___awmod	;wreg free
 19189  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19190  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19191  001736  0E0F               	movlw	15
 19192  001738  0100               	movlb	0	; () banked
 19193  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19194  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19195  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19196  001742  0E00               	movlw	0
 19197  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19198  001746  0E0A               	movlw	10
 19199  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19200  00174A  ECA4  F024         	call	___awdiv	;wreg free
 19201  00174E  0100               	movlb	0	; () banked
 19202  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19203  001752  0BF0               	andlw	240
 19204  001754  0BF0               	andlw	240
 19205  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19206  001758  6E98               	movwf	3992,c	;volatile
 19207                           
 19208                           ;rtcc_drv.c: 425: break;
 19209  00175A  0012               	return	
 19210  00175C                     l448:
 19211                           
 19212                           ; BSR set to: 0
 19213                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19214  00175C  010F               	movlb	15	; () banked
 19215  00175E  933F               	bcf	63,1,b	;volatile
 19216                           
 19217                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19218  001760  913F               	bcf	63,0,b	;volatile
 19219                           
 19220                           ; BSR set to: 15
 19221                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19222  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19223  001766  0100               	movlb	0	; () banked
 19224  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19225  00176A  0E00               	movlw	0
 19226  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19227  00176E  0E0A               	movlw	10
 19228  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19229  001772  EC6A  F025         	call	___awmod	;wreg free
 19230  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19231  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19232  00177E  0E0F               	movlw	15
 19233  001780  0100               	movlb	0	; () banked
 19234  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19235  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19236  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19237  00178A  0E00               	movlw	0
 19238  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19239  00178E  0E0A               	movlw	10
 19240  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19241  001792  ECA4  F024         	call	___awdiv	;wreg free
 19242  001796  0100               	movlb	0	; () banked
 19243  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19244  00179A  0BF0               	andlw	240
 19245  00179C  0BF0               	andlw	240
 19246  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19247  0017A0  6E99               	movwf	3993,c	;volatile
 19248                           
 19249                           ;rtcc_drv.c: 433: break;
 19250  0017A2  0012               	return	
 19251  0017A4                     l449:
 19252                           
 19253                           ; BSR set to: 0
 19254                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19255  0017A4  010F               	movlb	15	; () banked
 19256  0017A6  933F               	bcf	63,1,b	;volatile
 19257                           
 19258                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19259  0017A8  913F               	bcf	63,0,b	;volatile
 19260                           
 19261                           ; BSR set to: 15
 19262                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19263  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19264  0017AE  0100               	movlb	0	; () banked
 19265  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19266  0017B2  0E00               	movlw	0
 19267  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19268  0017B6  0E0A               	movlw	10
 19269  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19270  0017BA  EC6A  F025         	call	___awmod	;wreg free
 19271  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19272  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19273  0017C6  0E0F               	movlw	15
 19274  0017C8  0100               	movlb	0	; () banked
 19275  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19276  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19277  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19278  0017D2  0E00               	movlw	0
 19279  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19280  0017D6  0E0A               	movlw	10
 19281  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19282  0017DA  ECA4  F024         	call	___awdiv	;wreg free
 19283  0017DE  0100               	movlb	0	; () banked
 19284  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19285  0017E2  0BF0               	andlw	240
 19286  0017E4  0BF0               	andlw	240
 19287  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19288  0017E8  6E98               	movwf	3992,c	;volatile
 19289                           
 19290                           ; BSR set to: 0
 19291                           ;rtcc_drv.c: 445: }
 19292                           
 19293                           ; BSR set to: 0
 19294                           ;rtcc_drv.c: 444: break;
 19295                           
 19296                           ;rtcc_drv.c: 443: default:
 19297                           
 19298                           ;rtcc_drv.c: 441: break;
 19299  0017EA  0012               	return	
 19300  0017EC                     l441:
 19301                           
 19302                           ; BSR set to: 0
 19303  0017EC  0100               	movlb	0	; () banked
 19304  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19305                           
 19306                           ; Switch size 1, requested type "space"
 19307                           ; Number of cases is 7, Range of values is 0 to 6
 19308                           ; switch strategies available:
 19309                           ; Name         Instructions Cycles
 19310                           ; simple_byte           22    12 (average)
 19311                           ;	Chosen strategy is simple_byte
 19312  0017F0  0A00               	xorlw	0	; case 0
 19313  0017F2  B4D8               	btfsc	status,2,c
 19314  0017F4  D6FF               	goto	l442
 19315  0017F6  0A01               	xorlw	1	; case 1
 19316  0017F8  B4D8               	btfsc	status,2,c
 19317  0017FA  D720               	goto	l444
 19318  0017FC  0A03               	xorlw	3	; case 2
 19319  0017FE  B4D8               	btfsc	status,2,c
 19320  001800  D741               	goto	l445
 19321  001802  0A01               	xorlw	1	; case 3
 19322  001804  B4D8               	btfsc	status,2,c
 19323  001806  D762               	goto	l446
 19324  001808  0A07               	xorlw	7	; case 4
 19325  00180A  B4D8               	btfsc	status,2,c
 19326  00180C  D783               	goto	l447
 19327  00180E  0A01               	xorlw	1	; case 5
 19328  001810  B4D8               	btfsc	status,2,c
 19329  001812  D7A4               	goto	l448
 19330  001814  0A03               	xorlw	3	; case 6
 19331  001816  A4D8               	btfss	status,2,c
 19332  001818  0012               	return	
 19333  00181A  D7C4               	goto	l449
 19334  00181C                     __end_of_Rtcc_SetRtccValue:
 19335                           	opt stack 0
 19336                           tosu	equ	0xFFF
 19337                           tosh	equ	0xFFE
 19338                           tosl	equ	0xFFD
 19339                           pclath	equ	0xFFA
 19340                           tblptru	equ	0xFF8
 19341                           tblptrh	equ	0xFF7
 19342                           tblptrl	equ	0xFF6
 19343                           tablat	equ	0xFF5
 19344                           prodh	equ	0xFF4
 19345                           prodl	equ	0xFF3
 19346                           intcon	equ	0xFF2
 19347                           intcon2	equ	0xFF1
 19348                           intcon3	equ	0xFF0
 19349                           indf0	equ	0xFEF
 19350                           postinc0	equ	0xFEE
 19351                           plusw0	equ	0xFEB
 19352                           fsr0h	equ	0xFEA
 19353                           fsr0l	equ	0xFE9
 19354                           wreg	equ	0xFE8
 19355                           indf1	equ	0xFE7
 19356                           postinc1	equ	0xFE6
 19357                           postdec1	equ	0xFE5
 19358                           plusw1	equ	0xFE3
 19359                           fsr1h	equ	0xFE2
 19360                           fsr1l	equ	0xFE1
 19361                           indf2	equ	0xFDF
 19362                           postinc2	equ	0xFDE
 19363                           postdec2	equ	0xFDD
 19364                           plusw2	equ	0xFDB
 19365                           fsr2h	equ	0xFDA
 19366                           fsr2l	equ	0xFD9
 19367                           status	equ	0xFD8
 19368                           
 19369 ;; *************** function ___awmod *****************
 19370 ;; Defined at:
 19371 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19372 ;; Parameters:    Size  Location     Type
 19373 ;;  dividend        2   29[BANK0 ] int 
 19374 ;;  divisor         2   31[BANK0 ] int 
 19375 ;; Auto vars:     Size  Location     Type
 19376 ;;  sign            1   34[BANK0 ] unsigned char 
 19377 ;;  counter         1   33[BANK0 ] unsigned char 
 19378 ;; Return value:  Size  Location     Type
 19379 ;;                  2   29[BANK0 ] int 
 19380 ;; Registers used:
 19381 ;;		wreg, status,2, status,0
 19382 ;; Tracked objects:
 19383 ;;		On entry : 0/0
 19384 ;;		On exit  : 0/0
 19385 ;;		Unchanged: 0/0
 19386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19387 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19388 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19390 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19391 ;;Total ram usage:        6 bytes
 19392 ;; Hardware stack levels used:    1
 19393 ;; Hardware stack levels required when called:   11
 19394 ;; This function calls:
 19395 ;;		Nothing
 19396 ;; This function is called by:
 19397 ;;		_Rtcc_SetRtccValue
 19398 ;;		_Rtcc_SetRtccAlarm
 19399 ;; This function uses a non-reentrant model
 19400 ;;
 19401                           
 19402                           	psect	text85
 19403  004AD4                     __ptext85:
 19404                           	opt stack 0
 19405  004AD4                     ___awmod:
 19406                           	opt stack 14
 19407                           
 19408                           ; BSR set to: 0
 19409                           ;incstack = 0
 19410  004AD4  0E00               	movlw	0
 19411  004AD6  0100               	movlb	0	; () banked
 19412  004AD8  6F82               	movwf	___awmod@sign& (0+255),b
 19413                           
 19414                           ; BSR set to: 0
 19415  004ADA  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19416  004ADC  D006               	goto	l2779
 19417                           
 19418                           ; BSR set to: 0
 19419  004ADE  6D7D               	negf	___awmod@dividend& (0+255),b
 19420  004AE0  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19421  004AE2  B0D8               	btfsc	status,0,c
 19422  004AE4  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19423                           
 19424                           ; BSR set to: 0
 19425  004AE6  0E01               	movlw	1
 19426  004AE8  6F82               	movwf	___awmod@sign& (0+255),b
 19427  004AEA                     l2779:
 19428                           
 19429                           ; BSR set to: 0
 19430                           
 19431                           ; BSR set to: 0
 19432  004AEA  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19433  004AEC  D004               	goto	l2780
 19434                           
 19435                           ; BSR set to: 0
 19436  004AEE  6D7F               	negf	___awmod@divisor& (0+255),b
 19437  004AF0  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19438  004AF2  B0D8               	btfsc	status,0,c
 19439  004AF4  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19440  004AF6                     l2780:
 19441                           
 19442                           ; BSR set to: 0
 19443                           
 19444                           ; BSR set to: 0
 19445  004AF6  517F               	movf	___awmod@divisor& (0+255),w,b
 19446  004AF8  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19447  004AFA  B4D8               	btfsc	status,2,c
 19448  004AFC  D018               	goto	l2787
 19449                           
 19450                           ; BSR set to: 0
 19451  004AFE  0E01               	movlw	1
 19452  004B00  6F81               	movwf	___awmod@counter& (0+255),b
 19453  004B02  D004               	goto	l2782
 19454  004B04                     
 19455                           ; BSR set to: 0
 19456                           
 19457                           ; BSR set to: 0
 19458  004B04  90D8               	bcf	status,0,c
 19459  004B06  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19460  004B08  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19461  004B0A  2B81               	incf	___awmod@counter& (0+255),f,b
 19462  004B0C                     l2782:
 19463                           
 19464                           ; BSR set to: 0
 19465                           
 19466                           ; BSR set to: 0
 19467  004B0C  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19468  004B0E  D7FA               	goto	l2783
 19469  004B10                     u6850:
 19470                           
 19471                           ; BSR set to: 0
 19472                           
 19473                           ; BSR set to: 0
 19474                           
 19475                           ; BSR set to: 0
 19476  004B10  517F               	movf	___awmod@divisor& (0+255),w,b
 19477  004B12  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19478  004B14  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19479  004B16  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19480  004B18  A0D8               	btfss	status,0,c
 19481  004B1A  D004               	goto	l2786
 19482                           
 19483                           ; BSR set to: 0
 19484  004B1C  517F               	movf	___awmod@divisor& (0+255),w,b
 19485  004B1E  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19486  004B20  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19487  004B22  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19488  004B24                     l2786:
 19489                           
 19490                           ; BSR set to: 0
 19491                           
 19492                           ; BSR set to: 0
 19493  004B24  90D8               	bcf	status,0,c
 19494  004B26  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19495  004B28  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19496                           
 19497                           ; BSR set to: 0
 19498  004B2A  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19499  004B2C  D7F1               	goto	u6850
 19500  004B2E                     l2787:
 19501                           
 19502                           ; BSR set to: 0
 19503                           
 19504                           ; BSR set to: 0
 19505                           
 19506                           ; BSR set to: 0
 19507  004B2E  5182               	movf	___awmod@sign& (0+255),w,b
 19508  004B30  B4D8               	btfsc	status,2,c
 19509  004B32  D004               	goto	l2788
 19510                           
 19511                           ; BSR set to: 0
 19512  004B34  6D7D               	negf	___awmod@dividend& (0+255),b
 19513  004B36  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19514  004B38  B0D8               	btfsc	status,0,c
 19515  004B3A  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19516  004B3C                     l2788:
 19517                           
 19518                           ; BSR set to: 0
 19519                           
 19520                           ; BSR set to: 0
 19521  004B3C  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19522  004B40  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19523  004B44  0012               	return	
 19524  004B46                     __end_of___awmod:
 19525                           	opt stack 0
 19526                           tosu	equ	0xFFF
 19527                           tosh	equ	0xFFE
 19528                           tosl	equ	0xFFD
 19529                           pclath	equ	0xFFA
 19530                           tblptru	equ	0xFF8
 19531                           tblptrh	equ	0xFF7
 19532                           tblptrl	equ	0xFF6
 19533                           tablat	equ	0xFF5
 19534                           prodh	equ	0xFF4
 19535                           prodl	equ	0xFF3
 19536                           intcon	equ	0xFF2
 19537                           intcon2	equ	0xFF1
 19538                           intcon3	equ	0xFF0
 19539                           indf0	equ	0xFEF
 19540                           postinc0	equ	0xFEE
 19541                           plusw0	equ	0xFEB
 19542                           fsr0h	equ	0xFEA
 19543                           fsr0l	equ	0xFE9
 19544                           wreg	equ	0xFE8
 19545                           indf1	equ	0xFE7
 19546                           postinc1	equ	0xFE6
 19547                           postdec1	equ	0xFE5
 19548                           plusw1	equ	0xFE3
 19549                           fsr1h	equ	0xFE2
 19550                           fsr1l	equ	0xFE1
 19551                           indf2	equ	0xFDF
 19552                           postinc2	equ	0xFDE
 19553                           postdec2	equ	0xFDD
 19554                           plusw2	equ	0xFDB
 19555                           fsr2h	equ	0xFDA
 19556                           fsr2l	equ	0xFD9
 19557                           status	equ	0xFD8
 19558                           
 19559 ;; *************** function ___awdiv *****************
 19560 ;; Defined at:
 19561 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19562 ;; Parameters:    Size  Location     Type
 19563 ;;  dividend        2   29[BANK0 ] int 
 19564 ;;  divisor         2   31[BANK0 ] int 
 19565 ;; Auto vars:     Size  Location     Type
 19566 ;;  quotient        2   35[BANK0 ] int 
 19567 ;;  sign            1   34[BANK0 ] unsigned char 
 19568 ;;  counter         1   33[BANK0 ] unsigned char 
 19569 ;; Return value:  Size  Location     Type
 19570 ;;                  2   29[BANK0 ] int 
 19571 ;; Registers used:
 19572 ;;		wreg, status,2, status,0
 19573 ;; Tracked objects:
 19574 ;;		On entry : 0/0
 19575 ;;		On exit  : 0/0
 19576 ;;		Unchanged: 0/0
 19577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19578 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19579 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19581 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19582 ;;Total ram usage:        8 bytes
 19583 ;; Hardware stack levels used:    1
 19584 ;; Hardware stack levels required when called:   11
 19585 ;; This function calls:
 19586 ;;		Nothing
 19587 ;; This function is called by:
 19588 ;;		_Rtcc_SetRtccValue
 19589 ;;		_Rtcc_SetRtccAlarm
 19590 ;; This function uses a non-reentrant model
 19591 ;;
 19592                           
 19593                           	psect	text86
 19594  004948                     __ptext86:
 19595                           	opt stack 0
 19596  004948                     ___awdiv:
 19597                           	opt stack 14
 19598                           
 19599                           ; BSR set to: 0
 19600                           ;incstack = 0
 19601  004948  0E00               	movlw	0
 19602  00494A  0100               	movlb	0	; () banked
 19603  00494C  6F82               	movwf	___awdiv@sign& (0+255),b
 19604                           
 19605                           ; BSR set to: 0
 19606  00494E  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19607  004950  D006               	goto	l2766
 19608                           
 19609                           ; BSR set to: 0
 19610  004952  6D7F               	negf	___awdiv@divisor& (0+255),b
 19611  004954  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19612  004956  B0D8               	btfsc	status,0,c
 19613  004958  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19614                           
 19615                           ; BSR set to: 0
 19616  00495A  0E01               	movlw	1
 19617  00495C  6F82               	movwf	___awdiv@sign& (0+255),b
 19618  00495E                     l2766:
 19619                           
 19620                           ; BSR set to: 0
 19621                           
 19622                           ; BSR set to: 0
 19623  00495E  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19624  004960  D006               	goto	l2767
 19625                           
 19626                           ; BSR set to: 0
 19627  004962  6D7D               	negf	___awdiv@dividend& (0+255),b
 19628  004964  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19629  004966  B0D8               	btfsc	status,0,c
 19630  004968  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19631                           
 19632                           ; BSR set to: 0
 19633  00496A  0E01               	movlw	1
 19634  00496C  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19635  00496E                     l2767:
 19636                           
 19637                           ; BSR set to: 0
 19638                           
 19639                           ; BSR set to: 0
 19640  00496E  0E00               	movlw	0
 19641  004970  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19642  004972  0E00               	movlw	0
 19643  004974  6F83               	movwf	___awdiv@quotient& (0+255),b
 19644                           
 19645                           ; BSR set to: 0
 19646  004976  517F               	movf	___awdiv@divisor& (0+255),w,b
 19647  004978  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19648  00497A  B4D8               	btfsc	status,2,c
 19649  00497C  D01C               	goto	l2774
 19650                           
 19651                           ; BSR set to: 0
 19652  00497E  0E01               	movlw	1
 19653  004980  6F81               	movwf	___awdiv@counter& (0+255),b
 19654  004982  D004               	goto	l2769
 19655  004984                     
 19656                           ; BSR set to: 0
 19657                           
 19658                           ; BSR set to: 0
 19659  004984  90D8               	bcf	status,0,c
 19660  004986  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19661  004988  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19662  00498A  2B81               	incf	___awdiv@counter& (0+255),f,b
 19663  00498C                     l2769:
 19664                           
 19665                           ; BSR set to: 0
 19666                           
 19667                           ; BSR set to: 0
 19668  00498C  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19669  00498E  D7FA               	goto	l2770
 19670  004990                     u6790:
 19671                           
 19672                           ; BSR set to: 0
 19673                           
 19674                           ; BSR set to: 0
 19675                           
 19676                           ; BSR set to: 0
 19677  004990  90D8               	bcf	status,0,c
 19678  004992  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19679  004994  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19680                           
 19681                           ; BSR set to: 0
 19682  004996  517F               	movf	___awdiv@divisor& (0+255),w,b
 19683  004998  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19684  00499A  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19685  00499C  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19686  00499E  A0D8               	btfss	status,0,c
 19687  0049A0  D005               	goto	l2773
 19688                           
 19689                           ; BSR set to: 0
 19690  0049A2  517F               	movf	___awdiv@divisor& (0+255),w,b
 19691  0049A4  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19692  0049A6  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19693  0049A8  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19694                           
 19695                           ; BSR set to: 0
 19696  0049AA  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19697  0049AC                     l2773:
 19698                           
 19699                           ; BSR set to: 0
 19700                           
 19701                           ; BSR set to: 0
 19702  0049AC  90D8               	bcf	status,0,c
 19703  0049AE  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19704  0049B0  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19705                           
 19706                           ; BSR set to: 0
 19707  0049B2  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19708  0049B4  D7ED               	goto	u6790
 19709  0049B6                     l2774:
 19710                           
 19711                           ; BSR set to: 0
 19712                           
 19713                           ; BSR set to: 0
 19714                           
 19715                           ; BSR set to: 0
 19716  0049B6  5182               	movf	___awdiv@sign& (0+255),w,b
 19717  0049B8  B4D8               	btfsc	status,2,c
 19718  0049BA  D004               	goto	l2775
 19719                           
 19720                           ; BSR set to: 0
 19721  0049BC  6D83               	negf	___awdiv@quotient& (0+255),b
 19722  0049BE  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19723  0049C0  B0D8               	btfsc	status,0,c
 19724  0049C2  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19725  0049C4                     l2775:
 19726                           
 19727                           ; BSR set to: 0
 19728                           
 19729                           ; BSR set to: 0
 19730  0049C4  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19731  0049C8  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19732  0049CC  0012               	return	
 19733  0049CE                     __end_of___awdiv:
 19734                           	opt stack 0
 19735                           tosu	equ	0xFFF
 19736                           tosh	equ	0xFFE
 19737                           tosl	equ	0xFFD
 19738                           pclath	equ	0xFFA
 19739                           tblptru	equ	0xFF8
 19740                           tblptrh	equ	0xFF7
 19741                           tblptrl	equ	0xFF6
 19742                           tablat	equ	0xFF5
 19743                           prodh	equ	0xFF4
 19744                           prodl	equ	0xFF3
 19745                           intcon	equ	0xFF2
 19746                           intcon2	equ	0xFF1
 19747                           intcon3	equ	0xFF0
 19748                           indf0	equ	0xFEF
 19749                           postinc0	equ	0xFEE
 19750                           plusw0	equ	0xFEB
 19751                           fsr0h	equ	0xFEA
 19752                           fsr0l	equ	0xFE9
 19753                           wreg	equ	0xFE8
 19754                           indf1	equ	0xFE7
 19755                           postinc1	equ	0xFE6
 19756                           postdec1	equ	0xFE5
 19757                           plusw1	equ	0xFE3
 19758                           fsr1h	equ	0xFE2
 19759                           fsr1l	equ	0xFE1
 19760                           indf2	equ	0xFDF
 19761                           postinc2	equ	0xFDE
 19762                           postdec2	equ	0xFDD
 19763                           plusw2	equ	0xFDB
 19764                           fsr2h	equ	0xFDA
 19765                           fsr2l	equ	0xFD9
 19766                           status	equ	0xFD8
 19767                           
 19768 ;; *************** function _Rtcc_LockRtc *****************
 19769 ;; Defined at:
 19770 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19771 ;; Parameters:    Size  Location     Type
 19772 ;;		None
 19773 ;; Auto vars:     Size  Location     Type
 19774 ;;		None
 19775 ;; Return value:  Size  Location     Type
 19776 ;;                  1    wreg      void 
 19777 ;; Registers used:
 19778 ;;		None
 19779 ;; Tracked objects:
 19780 ;;		On entry : 0/0
 19781 ;;		On exit  : 0/0
 19782 ;;		Unchanged: 0/0
 19783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19788 ;;Total ram usage:        0 bytes
 19789 ;; Hardware stack levels used:    1
 19790 ;; Hardware stack levels required when called:   11
 19791 ;; This function calls:
 19792 ;;		Nothing
 19793 ;; This function is called by:
 19794 ;;		_Rtcm_MainTask
 19795 ;;		_Rtcm_SetRtccDate
 19796 ;;		_Rtcm_SetRtccAlarm
 19797 ;; This function uses a non-reentrant model
 19798 ;;
 19799                           
 19800                           	psect	text87
 19801  005E80                     __ptext87:
 19802                           	opt stack 0
 19803  005E80                     _Rtcc_LockRtc:
 19804                           	opt stack 15
 19805                           
 19806                           ; BSR set to: 0
 19807                           ;incstack = 0
 19808  005E80  010F               	movlb	15	;# 
 19809  005E82  0E55               	movlw	85	;# 
 19810  005E84  6EA7               	movwf	4007,c	;# 
 19811  005E86  0EAA               	movlw	170	;# 
 19812  005E88  6EA7               	movwf	4007,c	;# 
 19813                           
 19814                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19815  005E8A  010F               	movlb	15	; () banked
 19816  005E8C  9B3F               	bcf	63,5,b	;volatile
 19817                           
 19818                           ; BSR set to: 15
 19819  005E8E  0012               	return		;funcret
 19820  005E90                     __end_of_Rtcc_LockRtc:
 19821                           	opt stack 0
 19822                           tosu	equ	0xFFF
 19823                           tosh	equ	0xFFE
 19824                           tosl	equ	0xFFD
 19825                           pclath	equ	0xFFA
 19826                           tblptru	equ	0xFF8
 19827                           tblptrh	equ	0xFF7
 19828                           tblptrl	equ	0xFF6
 19829                           tablat	equ	0xFF5
 19830                           prodh	equ	0xFF4
 19831                           prodl	equ	0xFF3
 19832                           intcon	equ	0xFF2
 19833                           intcon2	equ	0xFF1
 19834                           intcon3	equ	0xFF0
 19835                           indf0	equ	0xFEF
 19836                           postinc0	equ	0xFEE
 19837                           plusw0	equ	0xFEB
 19838                           fsr0h	equ	0xFEA
 19839                           fsr0l	equ	0xFE9
 19840                           wreg	equ	0xFE8
 19841                           indf1	equ	0xFE7
 19842                           postinc1	equ	0xFE6
 19843                           postdec1	equ	0xFE5
 19844                           plusw1	equ	0xFE3
 19845                           fsr1h	equ	0xFE2
 19846                           fsr1l	equ	0xFE1
 19847                           indf2	equ	0xFDF
 19848                           postinc2	equ	0xFDE
 19849                           postdec2	equ	0xFDD
 19850                           plusw2	equ	0xFDB
 19851                           fsr2h	equ	0xFDA
 19852                           fsr2l	equ	0xFD9
 19853                           status	equ	0xFD8
 19854                           
 19855 ;; *************** function _Rtcm_GetRtccDate *****************
 19856 ;; Defined at:
 19857 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19858 ;; Parameters:    Size  Location     Type
 19859 ;;		None
 19860 ;; Auto vars:     Size  Location     Type
 19861 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19862 ;; Return value:  Size  Location     Type
 19863 ;;                  8   33[BANK0 ] struct _RtccDateType
 19864 ;; Registers used:
 19865 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19866 ;; Tracked objects:
 19867 ;;		On entry : 0/0
 19868 ;;		On exit  : 0/0
 19869 ;;		Unchanged: 0/0
 19870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19871 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19872 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19873 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19874 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19875 ;;Total ram usage:       17 bytes
 19876 ;; Hardware stack levels used:    1
 19877 ;; Hardware stack levels required when called:   12
 19878 ;; This function calls:
 19879 ;;		_Rtcc_GetRtccValue
 19880 ;; This function is called by:
 19881 ;;		_Rtcm_MainTask
 19882 ;; This function uses a non-reentrant model
 19883 ;;
 19884                           
 19885                           	psect	text88
 19886  004D66                     __ptext88:
 19887                           	opt stack 0
 19888  004D66                     _Rtcm_GetRtccDate:
 19889                           	opt stack 15
 19890                           
 19891                           ;rtcm.c: 204: RtccDateType LocalDate;
 19892                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19893                           
 19894                           ; BSR set to: 15
 19895                           ;incstack = 0
 19896  004D66  0E00               	movlw	0
 19897  004D68  EC41  F023         	call	_Rtcc_GetRtccValue
 19898  004D6C  0100               	movlb	0	; () banked
 19899  004D6E  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19900  004D70  0ED0               	movlw	208
 19901  004D72  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19902  004D74  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19903  004D76  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19904  004D78  0E07               	movlw	7
 19905  004D7A  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19906                           
 19907                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19908  004D7C  0E01               	movlw	1
 19909  004D7E  EC41  F023         	call	_Rtcc_GetRtccValue
 19910  004D82  0100               	movlb	0	; () banked
 19911  004D84  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19912                           
 19913                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19914  004D86  0E02               	movlw	2
 19915  004D88  EC41  F023         	call	_Rtcc_GetRtccValue
 19916  004D8C  0100               	movlb	0	; () banked
 19917  004D8E  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19918                           
 19919                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19920  004D90  0E03               	movlw	3
 19921  004D92  EC41  F023         	call	_Rtcc_GetRtccValue
 19922  004D96  0100               	movlb	0	; () banked
 19923  004D98  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19924                           
 19925                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19926  004D9A  0E04               	movlw	4
 19927  004D9C  EC41  F023         	call	_Rtcc_GetRtccValue
 19928  004DA0  0100               	movlb	0	; () banked
 19929  004DA2  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19930                           
 19931                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19932  004DA4  0E05               	movlw	5
 19933  004DA6  EC41  F023         	call	_Rtcc_GetRtccValue
 19934  004DAA  0100               	movlb	0	; () banked
 19935  004DAC  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19936                           
 19937                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19938  004DAE  0E06               	movlw	6
 19939  004DB0  EC41  F023         	call	_Rtcc_GetRtccValue
 19940  004DB4  0100               	movlb	0	; () banked
 19941  004DB6  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19942                           
 19943                           ; BSR set to: 0
 19944                           ;rtcm.c: 216: return LocalDate;
 19945  004DB8  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19946  004DBC  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19947  004DC0  0E07               	movlw	7
 19948  004DC2                     u9061:
 19949  004DC2  CFDB FFEB          	movff	plusw2,plusw0
 19950  004DC6  06E8               	decf	wreg,f,c
 19951  004DC8  E2FC               	bc	u9061
 19952  004DCA  0012               	return	
 19953  004DCC                     __end_of_Rtcm_GetRtccDate:
 19954                           	opt stack 0
 19955                           tosu	equ	0xFFF
 19956                           tosh	equ	0xFFE
 19957                           tosl	equ	0xFFD
 19958                           pclath	equ	0xFFA
 19959                           tblptru	equ	0xFF8
 19960                           tblptrh	equ	0xFF7
 19961                           tblptrl	equ	0xFF6
 19962                           tablat	equ	0xFF5
 19963                           prodh	equ	0xFF4
 19964                           prodl	equ	0xFF3
 19965                           intcon	equ	0xFF2
 19966                           intcon2	equ	0xFF1
 19967                           intcon3	equ	0xFF0
 19968                           indf0	equ	0xFEF
 19969                           postinc0	equ	0xFEE
 19970                           plusw0	equ	0xFEB
 19971                           fsr0h	equ	0xFEA
 19972                           fsr0l	equ	0xFE9
 19973                           wreg	equ	0xFE8
 19974                           indf1	equ	0xFE7
 19975                           postinc1	equ	0xFE6
 19976                           postdec1	equ	0xFE5
 19977                           plusw1	equ	0xFE3
 19978                           fsr1h	equ	0xFE2
 19979                           fsr1l	equ	0xFE1
 19980                           indf2	equ	0xFDF
 19981                           postinc2	equ	0xFDE
 19982                           postdec2	equ	0xFDD
 19983                           plusw2	equ	0xFDB
 19984                           fsr2h	equ	0xFDA
 19985                           fsr2l	equ	0xFD9
 19986                           status	equ	0xFD8
 19987                           
 19988 ;; *************** function _Rtcc_GetRtccValue *****************
 19989 ;; Defined at:
 19990 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19991 ;; Parameters:    Size  Location     Type
 19992 ;;  RtccPtrVal      1    wreg     enum E7757
 19993 ;; Auto vars:     Size  Location     Type
 19994 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19995 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19996 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19997 ;; Return value:  Size  Location     Type
 19998 ;;                  1    wreg      unsigned char 
 19999 ;; Registers used:
 20000 ;;		wreg, status,2, status,0, prodl, prodh
 20001 ;; Tracked objects:
 20002 ;;		On entry : 0/0
 20003 ;;		On exit  : 0/0
 20004 ;;		Unchanged: 0/0
 20005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20007 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20008 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20009 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20010 ;;Total ram usage:        4 bytes
 20011 ;; Hardware stack levels used:    1
 20012 ;; Hardware stack levels required when called:   11
 20013 ;; This function calls:
 20014 ;;		Nothing
 20015 ;; This function is called by:
 20016 ;;		_Rtcm_GetRtccDate
 20017 ;; This function uses a non-reentrant model
 20018 ;;
 20019                           
 20020                           	psect	text89
 20021  004682                     __ptext89:
 20022                           	opt stack 0
 20023  004682                     _Rtcc_GetRtccValue:
 20024                           	opt stack 15
 20025                           
 20026                           ; BSR set to: 0
 20027                           ;incstack = 0
 20028                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20029  004682  0100               	movlb	0	; () banked
 20030  004684  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20031                           
 20032                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20033                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20034                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20035  004686  D02D               	goto	l416
 20036  004688                     l417:
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20040  004688  010F               	movlb	15	; () banked
 20041  00468A  833F               	bsf	63,1,b	;volatile
 20042  00468C                     
 20043                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20044  00468C  813F               	bsf	63,0,b	;volatile
 20045  00468E  D01C               	goto	L20
 20046  004690                     l419:
 20047                           
 20048                           ; BSR set to: 0
 20049                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20050  004690  010F               	movlb	15	; () banked
 20051  004692  833F               	bsf	63,1,b	;volatile
 20052  004694  D01E               	goto	L21
 20053  004696                     l420:
 20054                           
 20055                           ; BSR set to: 0
 20056                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20057  004696  010F               	movlb	15	; () banked
 20058  004698  833F               	bsf	63,1,b	;volatile
 20059  00469A  D021               	goto	L24
 20060  00469C                     l8972:
 20061                           
 20062                           ; BSR set to: 15
 20063                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20064  00469C  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20065  0046A0  0E0F               	movlw	15
 20066  0046A2  0100               	movlb	0	; () banked
 20067  0046A4  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20068  0046A6  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20069  0046A8  0B0F               	andlw	15
 20070  0046AA  0B0F               	andlw	15
 20071  0046AC  0D0A               	mullw	10
 20072  0046AE  50F3               	movf	prodl,w,c
 20073  0046B0  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20074  0046B2  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20075                           
 20076                           ;rtcc_drv.c: 241: break;
 20077  0046B4  D02D               	goto	l418
 20078  0046B6                     l421:
 20079                           
 20080                           ; BSR set to: 0
 20081                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20082  0046B6  010F               	movlb	15	; () banked
 20083  0046B8  933F               	bcf	63,1,b	;volatile
 20084                           
 20085                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20086  0046BA  813F               	bsf	63,0,b	;volatile
 20087                           
 20088                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20089  0046BC  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20090                           
 20091                           ;rtcc_drv.c: 249: break;
 20092  0046C0  D027               	goto	l418
 20093  0046C2                     l422:
 20094                           
 20095                           ; BSR set to: 0
 20096                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20097  0046C2  010F               	movlb	15	; () banked
 20098  0046C4  933F               	bcf	63,1,b	;volatile
 20099  0046C6  D7E2               	goto	L22
 20100  0046C8                     L20:
 20101                           
 20102                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20103  0046C8  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20104  0046CC  D7E7               	goto	l8972
 20105  0046CE                     l423:
 20106                           
 20107                           ; BSR set to: 0
 20108                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20109  0046CE  010F               	movlb	15	; () banked
 20110  0046D0  933F               	bcf	63,1,b	;volatile
 20111  0046D2                     L21:
 20112                           
 20113                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20114  0046D2  913F               	bcf	63,0,b	;volatile
 20115                           
 20116                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20117  0046D4  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20118  0046D8  D7E1               	goto	l8972
 20119  0046DA                     l424:
 20120                           
 20121                           ; BSR set to: 0
 20122                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20123  0046DA  010F               	movlb	15	; () banked
 20124  0046DC  933F               	bcf	63,1,b	;volatile
 20125  0046DE                     L24:
 20126                           
 20127                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20128  0046DE  913F               	bcf	63,0,b	;volatile
 20129  0046E0  D7F3               	goto	L20
 20130  0046E2                     l416:
 20131                           
 20132                           ; BSR set to: 0
 20133  0046E2  0100               	movlb	0	; () banked
 20134  0046E4  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20135                           
 20136                           ; Switch size 1, requested type "space"
 20137                           ; Number of cases is 7, Range of values is 0 to 6
 20138                           ; switch strategies available:
 20139                           ; Name         Instructions Cycles
 20140                           ; simple_byte           22    12 (average)
 20141                           ;	Chosen strategy is simple_byte
 20142  0046E6  0A00               	xorlw	0	; case 0
 20143  0046E8  B4D8               	btfsc	status,2,c
 20144  0046EA  D7CE               	goto	l417
 20145  0046EC  0A01               	xorlw	1	; case 1
 20146  0046EE  B4D8               	btfsc	status,2,c
 20147  0046F0  D7CF               	goto	l419
 20148  0046F2  0A03               	xorlw	3	; case 2
 20149  0046F4  B4D8               	btfsc	status,2,c
 20150  0046F6  D7CF               	goto	l420
 20151  0046F8  0A01               	xorlw	1	; case 3
 20152  0046FA  B4D8               	btfsc	status,2,c
 20153  0046FC  D7DC               	goto	l421
 20154  0046FE  0A07               	xorlw	7	; case 4
 20155  004700  B4D8               	btfsc	status,2,c
 20156  004702  D7DF               	goto	l422
 20157  004704  0A01               	xorlw	1	; case 5
 20158  004706  B4D8               	btfsc	status,2,c
 20159  004708  D7E2               	goto	l423
 20160  00470A  0A03               	xorlw	3	; case 6
 20161  00470C  B4D8               	btfsc	status,2,c
 20162  00470E  D7E5               	goto	l424
 20163  004710                     l418:
 20164                           
 20165                           ;rtcc_drv.c: 286: return RetValue;
 20166                           
 20167                           ; BSR set to: 0
 20168  004710  0100               	movlb	0	; () banked
 20169  004712  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20170  004714  0012               	return	
 20171  004716                     __end_of_Rtcc_GetRtccValue:
 20172                           	opt stack 0
 20173                           tosu	equ	0xFFF
 20174                           tosh	equ	0xFFE
 20175                           tosl	equ	0xFFD
 20176                           pclath	equ	0xFFA
 20177                           tblptru	equ	0xFF8
 20178                           tblptrh	equ	0xFF7
 20179                           tblptrl	equ	0xFF6
 20180                           tablat	equ	0xFF5
 20181                           prodh	equ	0xFF4
 20182                           prodl	equ	0xFF3
 20183                           intcon	equ	0xFF2
 20184                           intcon2	equ	0xFF1
 20185                           intcon3	equ	0xFF0
 20186                           indf0	equ	0xFEF
 20187                           postinc0	equ	0xFEE
 20188                           plusw0	equ	0xFEB
 20189                           fsr0h	equ	0xFEA
 20190                           fsr0l	equ	0xFE9
 20191                           wreg	equ	0xFE8
 20192                           indf1	equ	0xFE7
 20193                           postinc1	equ	0xFE6
 20194                           postdec1	equ	0xFE5
 20195                           plusw1	equ	0xFE3
 20196                           fsr1h	equ	0xFE2
 20197                           fsr1l	equ	0xFE1
 20198                           indf2	equ	0xFDF
 20199                           postinc2	equ	0xFDE
 20200                           postdec2	equ	0xFDD
 20201                           plusw2	equ	0xFDB
 20202                           fsr2h	equ	0xFDA
 20203                           fsr2l	equ	0xFD9
 20204                           status	equ	0xFD8
 20205                           
 20206 ;; *************** function _Rtcc_SetRtcStatus *****************
 20207 ;; Defined at:
 20208 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20209 ;; Parameters:    Size  Location     Type
 20210 ;;  Status          1    wreg     unsigned char 
 20211 ;; Auto vars:     Size  Location     Type
 20212 ;;  Status          1   29[BANK0 ] unsigned char 
 20213 ;; Return value:  Size  Location     Type
 20214 ;;                  1    wreg      void 
 20215 ;; Registers used:
 20216 ;;		wreg
 20217 ;; Tracked objects:
 20218 ;;		On entry : 0/0
 20219 ;;		On exit  : 0/0
 20220 ;;		Unchanged: 0/0
 20221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20223 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20225 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20226 ;;Total ram usage:        1 bytes
 20227 ;; Hardware stack levels used:    1
 20228 ;; Hardware stack levels required when called:   11
 20229 ;; This function calls:
 20230 ;;		Nothing
 20231 ;; This function is called by:
 20232 ;;		_Rtcm_MainTask
 20233 ;; This function uses a non-reentrant model
 20234 ;;
 20235                           
 20236                           	psect	text90
 20237  005DCC                     __ptext90:
 20238                           	opt stack 0
 20239  005DCC                     _Rtcc_SetRtcStatus:
 20240                           	opt stack 16
 20241                           
 20242                           ; BSR set to: 0
 20243                           ;incstack = 0
 20244                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20245  005DCC  0100               	movlb	0	; () banked
 20246  005DCE  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20247                           
 20248                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20249  005DD0  0100               	movlb	0	; () banked
 20250  005DD2  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20251  005DD4  D003               	bra	u7995
 20252  005DD6  010F               	movlb	15	; () banked
 20253  005DD8  9F3F               	bcf	63,7,b	;volatile
 20254  005DDA  D002               	bra	u7996
 20255  005DDC                     u7995:
 20256  005DDC  010F               	movlb	15	; () banked
 20257  005DDE  8F3F               	bsf	63,7,b	;volatile
 20258  005DE0                     u7996:
 20259                           
 20260                           ; BSR set to: 15
 20261  005DE0  0012               	return		;funcret
 20262  005DE2                     __end_of_Rtcc_SetRtcStatus:
 20263                           	opt stack 0
 20264                           tosu	equ	0xFFF
 20265                           tosh	equ	0xFFE
 20266                           tosl	equ	0xFFD
 20267                           pclath	equ	0xFFA
 20268                           tblptru	equ	0xFF8
 20269                           tblptrh	equ	0xFF7
 20270                           tblptrl	equ	0xFF6
 20271                           tablat	equ	0xFF5
 20272                           prodh	equ	0xFF4
 20273                           prodl	equ	0xFF3
 20274                           intcon	equ	0xFF2
 20275                           intcon2	equ	0xFF1
 20276                           intcon3	equ	0xFF0
 20277                           indf0	equ	0xFEF
 20278                           postinc0	equ	0xFEE
 20279                           plusw0	equ	0xFEB
 20280                           fsr0h	equ	0xFEA
 20281                           fsr0l	equ	0xFE9
 20282                           wreg	equ	0xFE8
 20283                           indf1	equ	0xFE7
 20284                           postinc1	equ	0xFE6
 20285                           postdec1	equ	0xFE5
 20286                           plusw1	equ	0xFE3
 20287                           fsr1h	equ	0xFE2
 20288                           fsr1l	equ	0xFE1
 20289                           indf2	equ	0xFDF
 20290                           postinc2	equ	0xFDE
 20291                           postdec2	equ	0xFDD
 20292                           plusw2	equ	0xFDB
 20293                           fsr2h	equ	0xFDA
 20294                           fsr2l	equ	0xFD9
 20295                           status	equ	0xFD8
 20296                           
 20297 ;; *************** function _Rtcc_RtcConfig *****************
 20298 ;; Defined at:
 20299 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20300 ;; Parameters:    Size  Location     Type
 20301 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20302 ;;		 -> RtcConfig(4), 
 20303 ;; Auto vars:     Size  Location     Type
 20304 ;;		None
 20305 ;; Return value:  Size  Location     Type
 20306 ;;                  1    wreg      void 
 20307 ;; Registers used:
 20308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20309 ;; Tracked objects:
 20310 ;;		On entry : 0/0
 20311 ;;		On exit  : 0/0
 20312 ;;		Unchanged: 0/0
 20313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20314 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20316 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20317 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20318 ;;Total ram usage:        3 bytes
 20319 ;; Hardware stack levels used:    1
 20320 ;; Hardware stack levels required when called:   12
 20321 ;; This function calls:
 20322 ;;		_RtccIrqInit
 20323 ;; This function is called by:
 20324 ;;		_Rtcm_MainTask
 20325 ;; This function uses a non-reentrant model
 20326 ;;
 20327                           
 20328                           	psect	text91
 20329  0042EC                     __ptext91:
 20330                           	opt stack 0
 20331  0042EC                     _Rtcc_RtcConfig:
 20332                           	opt stack 15
 20333                           
 20334                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20335                           
 20336                           ; BSR set to: 15
 20337                           ;incstack = 0
 20338  0042EC  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20339  0042F0  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20340  0042F4  50DF               	movf	indf2,w,c
 20341  0042F6  0100               	movlb	0	; () banked
 20342  0042F8  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20343  0042FA  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20344  0042FC  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20345  0042FE  010F               	movlb	15	; () banked
 20346  004300  513F               	movf	63,w,b	;volatile
 20347  004302  0100               	movlb	0	; () banked
 20348  004304  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20349  004306  0BFB               	andlw	-5
 20350  004308  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20351  00430A  010F               	movlb	15	; () banked
 20352  00430C  6F3F               	movwf	63,b	;volatile
 20353                           
 20354                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20355  00430E  0100               	movlb	0	; () banked
 20356  004310  EE20 F001          	lfsr	2,1
 20357  004314  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20358  004316  26D9               	addwf	fsr2l,f,c
 20359  004318  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20360  00431A  22DA               	addwfc	fsr2h,f,c
 20361  00431C  50DF               	movf	indf2,w,c
 20362  00431E  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20363  004320  0E01               	movlw	1
 20364  004322  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20365  004324  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20366  004326  010F               	movlb	15	; () banked
 20367  004328  513C               	movf	60,w,b	;volatile
 20368  00432A  0100               	movlb	0	; () banked
 20369  00432C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20370  00432E  0BFD               	andlw	-3
 20371  004330  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20372  004332  010F               	movlb	15	; () banked
 20373  004334  6F3C               	movwf	60,b	;volatile
 20374                           
 20375                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20376  004336  0100               	movlb	0	; () banked
 20377  004338  EE20 F001          	lfsr	2,1
 20378  00433C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20379  00433E  26D9               	addwf	fsr2l,f,c
 20380  004340  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20381  004342  22DA               	addwfc	fsr2h,f,c
 20382  004344  50DF               	movf	indf2,w,c
 20383  004346  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20384  004348  90D8               	bcf	status,0,c
 20385  00434A  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20386  00434C  0E01               	movlw	1
 20387  00434E  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20388  004350  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20389  004352  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20390  004354  010F               	movlb	15	; () banked
 20391  004356  513C               	movf	60,w,b	;volatile
 20392  004358  0100               	movlb	0	; () banked
 20393  00435A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20394  00435C  0BFB               	andlw	-5
 20395  00435E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20396  004360  010F               	movlb	15	; () banked
 20397  004362  6F3C               	movwf	60,b	;volatile
 20398                           
 20399                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20400  004364  0100               	movlb	0	; () banked
 20401  004366  EE20 F002          	lfsr	2,2
 20402  00436A  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20403  00436C  26D9               	addwf	fsr2l,f,c
 20404  00436E  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20405  004370  22DA               	addwfc	fsr2h,f,c
 20406  004372  04DE               	decf	postinc2,w,c
 20407  004374  A4D8               	btfss	status,2,c
 20408  004376  0012               	return	
 20409                           
 20410                           ; BSR set to: 0
 20411                           ;rtcc_drv.c: 115: {
 20412                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20413  004378  EE20 F003          	lfsr	2,3
 20414  00437C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20415  00437E  26D9               	addwf	fsr2l,f,c
 20416  004380  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20417  004382  22DA               	addwfc	fsr2h,f,c
 20418  004384  50DF               	movf	indf2,w,c
 20419  004386  ECF1  F02E         	call	_RtccIrqInit
 20420  00438A  0012               	return	
 20421  00438C                     __end_of_Rtcc_RtcConfig:
 20422                           	opt stack 0
 20423                           tosu	equ	0xFFF
 20424                           tosh	equ	0xFFE
 20425                           tosl	equ	0xFFD
 20426                           pclath	equ	0xFFA
 20427                           tblptru	equ	0xFF8
 20428                           tblptrh	equ	0xFF7
 20429                           tblptrl	equ	0xFF6
 20430                           tablat	equ	0xFF5
 20431                           prodh	equ	0xFF4
 20432                           prodl	equ	0xFF3
 20433                           intcon	equ	0xFF2
 20434                           intcon2	equ	0xFF1
 20435                           intcon3	equ	0xFF0
 20436                           indf0	equ	0xFEF
 20437                           postinc0	equ	0xFEE
 20438                           plusw0	equ	0xFEB
 20439                           fsr0h	equ	0xFEA
 20440                           fsr0l	equ	0xFE9
 20441                           wreg	equ	0xFE8
 20442                           indf1	equ	0xFE7
 20443                           postinc1	equ	0xFE6
 20444                           postdec1	equ	0xFE5
 20445                           plusw1	equ	0xFE3
 20446                           fsr1h	equ	0xFE2
 20447                           fsr1l	equ	0xFE1
 20448                           indf2	equ	0xFDF
 20449                           postinc2	equ	0xFDE
 20450                           postdec2	equ	0xFDD
 20451                           plusw2	equ	0xFDB
 20452                           fsr2h	equ	0xFDA
 20453                           fsr2l	equ	0xFD9
 20454                           status	equ	0xFD8
 20455                           
 20456 ;; *************** function _RtccIrqInit *****************
 20457 ;; Defined at:
 20458 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20459 ;; Parameters:    Size  Location     Type
 20460 ;;  Priority        1    wreg     enum E7716
 20461 ;; Auto vars:     Size  Location     Type
 20462 ;;  Priority        1   29[BANK0 ] enum E7716
 20463 ;; Return value:  Size  Location     Type
 20464 ;;                  1    wreg      void 
 20465 ;; Registers used:
 20466 ;;		wreg
 20467 ;; Tracked objects:
 20468 ;;		On entry : 0/0
 20469 ;;		On exit  : 0/0
 20470 ;;		Unchanged: 0/0
 20471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20475 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20476 ;;Total ram usage:        1 bytes
 20477 ;; Hardware stack levels used:    1
 20478 ;; Hardware stack levels required when called:   11
 20479 ;; This function calls:
 20480 ;;		Nothing
 20481 ;; This function is called by:
 20482 ;;		_Rtcc_RtcConfig
 20483 ;; This function uses a non-reentrant model
 20484 ;;
 20485                           
 20486                           	psect	text92
 20487  005DE2                     __ptext92:
 20488                           	opt stack 0
 20489  005DE2                     _RtccIrqInit:
 20490                           	opt stack 15
 20491                           
 20492                           ;incstack = 0
 20493                           ;RtccIrqInit@Priority stored from wreg
 20494  005DE2  0100               	movlb	0	; () banked
 20495  005DE4  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20496                           
 20497                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20498  005DE6  90A4               	bcf	4004,0,c	;volatile
 20499                           
 20500                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20501  005DE8  0100               	movlb	0	; () banked
 20502  005DEA  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20503  005DEC  D002               	bra	u7005
 20504  005DEE  90A5               	bcf	4005,0,c	;volatile
 20505  005DF0  D001               	bra	u7006
 20506  005DF2                     u7005:
 20507  005DF2  80A5               	bsf	4005,0,c	;volatile
 20508  005DF4                     u7006:
 20509                           
 20510                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20511  005DF4  80A3               	bsf	4003,0,c	;volatile
 20512  005DF6  0012               	return		;funcret
 20513  005DF8                     __end_of_RtccIrqInit:
 20514                           	opt stack 0
 20515                           tosu	equ	0xFFF
 20516                           tosh	equ	0xFFE
 20517                           tosl	equ	0xFFD
 20518                           pclath	equ	0xFFA
 20519                           tblptru	equ	0xFF8
 20520                           tblptrh	equ	0xFF7
 20521                           tblptrl	equ	0xFF6
 20522                           tablat	equ	0xFF5
 20523                           prodh	equ	0xFF4
 20524                           prodl	equ	0xFF3
 20525                           intcon	equ	0xFF2
 20526                           intcon2	equ	0xFF1
 20527                           intcon3	equ	0xFF0
 20528                           indf0	equ	0xFEF
 20529                           postinc0	equ	0xFEE
 20530                           plusw0	equ	0xFEB
 20531                           fsr0h	equ	0xFEA
 20532                           fsr0l	equ	0xFE9
 20533                           wreg	equ	0xFE8
 20534                           indf1	equ	0xFE7
 20535                           postinc1	equ	0xFE6
 20536                           postdec1	equ	0xFE5
 20537                           plusw1	equ	0xFE3
 20538                           fsr1h	equ	0xFE2
 20539                           fsr1l	equ	0xFE1
 20540                           indf2	equ	0xFDF
 20541                           postinc2	equ	0xFDE
 20542                           postdec2	equ	0xFDD
 20543                           plusw2	equ	0xFDB
 20544                           fsr2h	equ	0xFDA
 20545                           fsr2l	equ	0xFD9
 20546                           status	equ	0xFD8
 20547                           
 20548 ;; *************** function _Rtcc_AlarmConfig *****************
 20549 ;; Defined at:
 20550 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20551 ;; Parameters:    Size  Location     Type
 20552 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20553 ;;		 -> AlCfg(4), 
 20554 ;; Auto vars:     Size  Location     Type
 20555 ;;		None
 20556 ;; Return value:  Size  Location     Type
 20557 ;;                  1    wreg      void 
 20558 ;; Registers used:
 20559 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20560 ;; Tracked objects:
 20561 ;;		On entry : 0/0
 20562 ;;		On exit  : 0/0
 20563 ;;		Unchanged: 0/0
 20564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20565 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20568 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20569 ;;Total ram usage:        3 bytes
 20570 ;; Hardware stack levels used:    1
 20571 ;; Hardware stack levels required when called:   11
 20572 ;; This function calls:
 20573 ;;		Nothing
 20574 ;; This function is called by:
 20575 ;;		_Rtcm_MainTask
 20576 ;; This function uses a non-reentrant model
 20577 ;;
 20578                           
 20579                           	psect	text93
 20580  004C94                     __ptext93:
 20581                           	opt stack 0
 20582  004C94                     _Rtcc_AlarmConfig:
 20583                           	opt stack 16
 20584                           
 20585                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20586                           
 20587                           ;incstack = 0
 20588  004C94  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20589  004C98  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20590  004C9C  50DF               	movf	indf2,w,c
 20591  004C9E  0100               	movlb	0	; () banked
 20592  004CA0  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20593  004CA2  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20594  004CA4  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20595  004CA6  5091               	movf	3985,w,c	;volatile
 20596  004CA8  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20597  004CAA  0B7F               	andlw	-129
 20598  004CAC  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20599  004CAE  6E91               	movwf	3985,c	;volatile
 20600                           
 20601                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20602  004CB0  EE20 F001          	lfsr	2,1
 20603  004CB4  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20604  004CB6  26D9               	addwf	fsr2l,f,c
 20605  004CB8  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20606  004CBA  22DA               	addwfc	fsr2h,f,c
 20607  004CBC  50DF               	movf	indf2,w,c
 20608  004CBE  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20609  004CC0  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20610  004CC2  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20611  004CC4  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20612  004CC6  5091               	movf	3985,w,c	;volatile
 20613  004CC8  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20614  004CCA  0BBF               	andlw	-65
 20615  004CCC  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20616  004CCE  6E91               	movwf	3985,c	;volatile
 20617                           
 20618                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20619  004CD0  EE20 F002          	lfsr	2,2
 20620  004CD4  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20621  004CD6  26D9               	addwf	fsr2l,f,c
 20622  004CD8  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20623  004CDA  22DA               	addwfc	fsr2h,f,c
 20624  004CDC  50DF               	movf	indf2,w,c
 20625  004CDE  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20626  004CE0  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20627  004CE2  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20628  004CE4  5091               	movf	3985,w,c	;volatile
 20629  004CE6  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20630  004CE8  0BC3               	andlw	-61
 20631  004CEA  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20632  004CEC  6E91               	movwf	3985,c	;volatile
 20633                           
 20634                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20635  004CEE  EE20 F003          	lfsr	2,3
 20636  004CF2  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20637  004CF4  26D9               	addwf	fsr2l,f,c
 20638  004CF6  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20639  004CF8  22DA               	addwfc	fsr2h,f,c
 20640  004CFA  50DF               	movf	indf2,w,c
 20641  004CFC  6E90               	movwf	3984,c	;volatile
 20642                           
 20643                           ; BSR set to: 0
 20644  004CFE  0012               	return		;funcret
 20645  004D00                     __end_of_Rtcc_AlarmConfig:
 20646                           	opt stack 0
 20647                           tosu	equ	0xFFF
 20648                           tosh	equ	0xFFE
 20649                           tosl	equ	0xFFD
 20650                           pclath	equ	0xFFA
 20651                           tblptru	equ	0xFF8
 20652                           tblptrh	equ	0xFF7
 20653                           tblptrl	equ	0xFF6
 20654                           tablat	equ	0xFF5
 20655                           prodh	equ	0xFF4
 20656                           prodl	equ	0xFF3
 20657                           intcon	equ	0xFF2
 20658                           intcon2	equ	0xFF1
 20659                           intcon3	equ	0xFF0
 20660                           indf0	equ	0xFEF
 20661                           postinc0	equ	0xFEE
 20662                           plusw0	equ	0xFEB
 20663                           fsr0h	equ	0xFEA
 20664                           fsr0l	equ	0xFE9
 20665                           wreg	equ	0xFE8
 20666                           indf1	equ	0xFE7
 20667                           postinc1	equ	0xFE6
 20668                           postdec1	equ	0xFE5
 20669                           plusw1	equ	0xFE3
 20670                           fsr1h	equ	0xFE2
 20671                           fsr1l	equ	0xFE1
 20672                           indf2	equ	0xFDF
 20673                           postinc2	equ	0xFDE
 20674                           postdec2	equ	0xFDD
 20675                           plusw2	equ	0xFDB
 20676                           fsr2h	equ	0xFDA
 20677                           fsr2l	equ	0xFD9
 20678                           status	equ	0xFD8
 20679                           
 20680 ;; *************** function _initGprsModem *****************
 20681 ;; Defined at:
 20682 ;;		line 109 in file "../Source/c/04_App/app.c"
 20683 ;; Parameters:    Size  Location     Type
 20684 ;;		None
 20685 ;; Auto vars:     Size  Location     Type
 20686 ;;		None
 20687 ;; Return value:  Size  Location     Type
 20688 ;;                  1    wreg      unsigned char 
 20689 ;; Registers used:
 20690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20691 ;; Tracked objects:
 20692 ;;		On entry : 0/0
 20693 ;;		On exit  : 0/0
 20694 ;;		Unchanged: 0/0
 20695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20700 ;;Total ram usage:        0 bytes
 20701 ;; Hardware stack levels used:    1
 20702 ;; Hardware stack levels required when called:   13
 20703 ;; This function calls:
 20704 ;;		_Led_SetLedStatus
 20705 ;;		_Uart_WriteConstString
 20706 ;;		_secondsAppTimer
 20707 ;; This function is called by:
 20708 ;;		_MyApp_Task
 20709 ;; This function uses a non-reentrant model
 20710 ;;
 20711                           
 20712                           	psect	text94
 20713  0052E8                     __ptext94:
 20714                           	opt stack 0
 20715  0052E8                     _initGprsModem:
 20716                           	opt stack 14
 20717                           
 20718                           ;app.c: 111: static uint16_t modemCounter = 0;
 20719                           ;app.c: 112: static bool isInitialized = 0u;
 20720                           ;app.c: 113: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 20721                           
 20722                           ; BSR set to: 0
 20723                           ;incstack = 0
 20724  0052E8  0E03               	movlw	3
 20725  0052EA  0100               	movlb	0	; () banked
 20726  0052EC  19CF               	xorwf	_MdmStatus& (0+255),w,b
 20727  0052EE  B4D8               	btfsc	status,2,c
 20728  0052F0  D003               	goto	u13240
 20729                           
 20730                           ; BSR set to: 0
 20731  0052F2  05CF               	decf	_MdmStatus& (0+255),w,b
 20732  0052F4  A4D8               	btfss	status,2,c
 20733  0052F6  D01D               	goto	l2524
 20734  0052F8                     u13240:
 20735                           
 20736                           ; BSR set to: 0
 20737                           ;app.c: 114: {
 20738                           ;app.c: 115: if (secondsAppTimer(5, &modemCounter, 0))
 20739                           
 20740                           ; BSR set to: 0
 20741  0052F8  0EB7               	movlw	low initGprsModem@modemCounter
 20742  0052FA  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20743  0052FC  0E03               	movlw	high initGprsModem@modemCounter
 20744  0052FE  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20745  005300  0E00               	movlw	0
 20746  005302  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20747  005304  0E05               	movlw	5
 20748  005306  EC25  F021         	call	_secondsAppTimer
 20749  00530A  0900               	iorlw	0
 20750  00530C  B4D8               	btfsc	status,2,c
 20751  00530E  D011               	goto	l2524
 20752                           
 20753                           ;app.c: 116: {
 20754                           ;app.c: 118: Uart_WriteConstString(1, "AT\r\n");
 20755  005310  0EE5               	movlw	low STR_1
 20756  005312  0100               	movlb	0	; () banked
 20757  005314  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 20758  005316  0EFF               	movlw	high STR_1
 20759  005318  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 20760  00531A  0E01               	movlw	1
 20761  00531C  EC02  F02B         	call	_Uart_WriteConstString
 20762                           
 20763                           ;app.c: 119: Led_SetLedStatus(1u, LED_STS_ON);
 20764  005320  0E01               	movlw	1
 20765  005322  0100               	movlb	0	; () banked
 20766  005324  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20767  005326  0E01               	movlw	1
 20768  005328  EC05  F02D         	call	_Led_SetLedStatus
 20769                           
 20770                           ;app.c: 120: isInitialized = 1;
 20771  00532C  0E01               	movlw	1
 20772  00532E  0101               	movlb	1	; () banked
 20773  005330  6FD9               	movwf	initGprsModem@isInitialized& (0+255),b
 20774  005332                     l2524:
 20775                           
 20776                           ;app.c: 121: }
 20777                           ;app.c: 122: }
 20778                           ;app.c: 123: return isInitialized;
 20779                           
 20780                           ; BSR set to: 1
 20781                           
 20782                           ; BSR set to: 1
 20783  005332  0101               	movlb	1	; () banked
 20784  005334  51D9               	movf	initGprsModem@isInitialized& (0+255),w,b
 20785  005336  0012               	return	
 20786  005338                     __end_of_initGprsModem:
 20787                           	opt stack 0
 20788                           tosu	equ	0xFFF
 20789                           tosh	equ	0xFFE
 20790                           tosl	equ	0xFFD
 20791                           pclath	equ	0xFFA
 20792                           tblptru	equ	0xFF8
 20793                           tblptrh	equ	0xFF7
 20794                           tblptrl	equ	0xFF6
 20795                           tablat	equ	0xFF5
 20796                           prodh	equ	0xFF4
 20797                           prodl	equ	0xFF3
 20798                           intcon	equ	0xFF2
 20799                           intcon2	equ	0xFF1
 20800                           intcon3	equ	0xFF0
 20801                           indf0	equ	0xFEF
 20802                           postinc0	equ	0xFEE
 20803                           plusw0	equ	0xFEB
 20804                           fsr0h	equ	0xFEA
 20805                           fsr0l	equ	0xFE9
 20806                           wreg	equ	0xFE8
 20807                           indf1	equ	0xFE7
 20808                           postinc1	equ	0xFE6
 20809                           postdec1	equ	0xFE5
 20810                           plusw1	equ	0xFE3
 20811                           fsr1h	equ	0xFE2
 20812                           fsr1l	equ	0xFE1
 20813                           indf2	equ	0xFDF
 20814                           postinc2	equ	0xFDE
 20815                           postdec2	equ	0xFDD
 20816                           plusw2	equ	0xFDB
 20817                           fsr2h	equ	0xFDA
 20818                           fsr2l	equ	0xFD9
 20819                           status	equ	0xFD8
 20820                           
 20821 ;; *************** function _blinkForSeconds *****************
 20822 ;; Defined at:
 20823 ;;		line 126 in file "../Source/c/04_App/app.c"
 20824 ;; Parameters:    Size  Location     Type
 20825 ;;  seconds         1    wreg     unsigned char 
 20826 ;;  blickTicks      2   51[BANK0 ] PTR unsigned int 
 20827 ;;		 -> MyApp_Task@blickTicks(2), 
 20828 ;; Auto vars:     Size  Location     Type
 20829 ;;  seconds         1   53[BANK0 ] unsigned char 
 20830 ;; Return value:  Size  Location     Type
 20831 ;;                  1    wreg      void 
 20832 ;; Registers used:
 20833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20834 ;; Tracked objects:
 20835 ;;		On entry : 0/0
 20836 ;;		On exit  : 0/0
 20837 ;;		Unchanged: 0/0
 20838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20839 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20840 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20842 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20843 ;;Total ram usage:        3 bytes
 20844 ;; Hardware stack levels used:    1
 20845 ;; Hardware stack levels required when called:   13
 20846 ;; This function calls:
 20847 ;;		_Led_SetLedStatus
 20848 ;;		_secondsAppTimer
 20849 ;; This function is called by:
 20850 ;;		_MyApp_Task
 20851 ;; This function uses a non-reentrant model
 20852 ;;
 20853                           
 20854                           	psect	text95
 20855  005838                     __ptext95:
 20856                           	opt stack 0
 20857  005838                     _blinkForSeconds:
 20858                           	opt stack 14
 20859                           
 20860                           ; BSR set to: 1
 20861                           ;incstack = 0
 20862                           ;blinkForSeconds@seconds stored from wreg
 20863  005838  0100               	movlb	0	; () banked
 20864  00583A  6F95               	movwf	blinkForSeconds@seconds& (0+255),b
 20865                           
 20866                           ;app.c: 128: if (secondsAppTimer(seconds, blickTicks, 0))
 20867  00583C  C093  F08A         	movff	blinkForSeconds@blickTicks,secondsAppTimer@counter
 20868  005840  C094  F08B         	movff	blinkForSeconds@blickTicks+1,secondsAppTimer@counter+1
 20869  005844  0E00               	movlw	0
 20870  005846  0100               	movlb	0	; () banked
 20871  005848  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20872  00584A  5195               	movf	blinkForSeconds@seconds& (0+255),w,b
 20873  00584C  EC25  F021         	call	_secondsAppTimer
 20874  005850  0900               	iorlw	0
 20875  005852  B4D8               	btfsc	status,2,c
 20876  005854  D007               	goto	l2528
 20877                           
 20878                           ;app.c: 129: {
 20879                           ;app.c: 130: Led_SetLedStatus(1u, LED_STS_ON);
 20880  005856  0E01               	movlw	1
 20881  005858  0100               	movlb	0	; () banked
 20882  00585A  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20883  00585C  0E01               	movlw	1
 20884  00585E  EC05  F02D         	call	_Led_SetLedStatus
 20885                           
 20886                           ;app.c: 131: }
 20887  005862  0012               	return	
 20888  005864                     l2528:
 20889                           
 20890                           ;app.c: 132: else
 20891                           ;app.c: 133: {
 20892                           ;app.c: 134: Led_SetLedStatus(1u, LED_STS_BLINK);
 20893  005864  0E03               	movlw	3
 20894  005866  0100               	movlb	0	; () banked
 20895  005868  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20896  00586A  0E01               	movlw	1
 20897  00586C  EC05  F02D         	call	_Led_SetLedStatus
 20898  005870  0012               	return	
 20899  005872                     __end_of_blinkForSeconds:
 20900                           	opt stack 0
 20901                           tosu	equ	0xFFF
 20902                           tosh	equ	0xFFE
 20903                           tosl	equ	0xFFD
 20904                           pclath	equ	0xFFA
 20905                           tblptru	equ	0xFF8
 20906                           tblptrh	equ	0xFF7
 20907                           tblptrl	equ	0xFF6
 20908                           tablat	equ	0xFF5
 20909                           prodh	equ	0xFF4
 20910                           prodl	equ	0xFF3
 20911                           intcon	equ	0xFF2
 20912                           intcon2	equ	0xFF1
 20913                           intcon3	equ	0xFF0
 20914                           indf0	equ	0xFEF
 20915                           postinc0	equ	0xFEE
 20916                           plusw0	equ	0xFEB
 20917                           fsr0h	equ	0xFEA
 20918                           fsr0l	equ	0xFE9
 20919                           wreg	equ	0xFE8
 20920                           indf1	equ	0xFE7
 20921                           postinc1	equ	0xFE6
 20922                           postdec1	equ	0xFE5
 20923                           plusw1	equ	0xFE3
 20924                           fsr1h	equ	0xFE2
 20925                           fsr1l	equ	0xFE1
 20926                           indf2	equ	0xFDF
 20927                           postinc2	equ	0xFDE
 20928                           postdec2	equ	0xFDD
 20929                           plusw2	equ	0xFDB
 20930                           fsr2h	equ	0xFDA
 20931                           fsr2l	equ	0xFD9
 20932                           status	equ	0xFD8
 20933                           
 20934 ;; *************** function _secondsAppTimer *****************
 20935 ;; Defined at:
 20936 ;;		line 85 in file "../Source/c/04_App/app.c"
 20937 ;; Parameters:    Size  Location     Type
 20938 ;;  seconds         1    wreg     unsigned char 
 20939 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 20940 ;;		 -> MyApp_Task@blickTicks(2), initGprsModem@modemCounter(2), 
 20941 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 20942 ;; Auto vars:     Size  Location     Type
 20943 ;;  seconds         1   47[BANK0 ] unsigned char 
 20944 ;;  destinationT    2   49[BANK0 ] unsigned int 
 20945 ;;  isExpired       1   48[BANK0 ] unsigned char 
 20946 ;; Return value:  Size  Location     Type
 20947 ;;                  1    wreg      unsigned char 
 20948 ;; Registers used:
 20949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20950 ;; Tracked objects:
 20951 ;;		On entry : 0/0
 20952 ;;		On exit  : 0/0
 20953 ;;		Unchanged: 0/0
 20954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20955 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20956 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20957 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20958 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20959 ;;Total ram usage:        9 bytes
 20960 ;; Hardware stack levels used:    1
 20961 ;; Hardware stack levels required when called:   12
 20962 ;; This function calls:
 20963 ;;		___lwdiv
 20964 ;;		___wmul
 20965 ;; This function is called by:
 20966 ;;		_initGprsModem
 20967 ;;		_blinkForSeconds
 20968 ;; This function uses a non-reentrant model
 20969 ;;
 20970                           
 20971                           	psect	text96
 20972  00424A                     __ptext96:
 20973                           	opt stack 0
 20974  00424A                     _secondsAppTimer:
 20975                           	opt stack 14
 20976                           
 20977                           ;incstack = 0
 20978                           ;secondsAppTimer@seconds stored from wreg
 20979  00424A  0100               	movlb	0	; () banked
 20980  00424C  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 20981                           
 20982                           ;app.c: 87: bool isExpired = 1;
 20983  00424E  0E01               	movlw	1
 20984  004250  0100               	movlb	0	; () banked
 20985  004252  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 20986                           
 20987                           ; BSR set to: 0
 20988                           ;app.c: 88: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(100));
 20989  004254  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 20990  004258  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 20991  00425A  0E03               	movlw	3
 20992  00425C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20993  00425E  0EE8               	movlw	232
 20994  004260  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 20995  004262  EC8B  F02D         	call	___wmul	;wreg free
 20996  004266  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 20997  00426A  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 20998  00426E  0E00               	movlw	0
 20999  004270  0100               	movlb	0	; () banked
 21000  004272  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21001  004274  0E64               	movlw	100
 21002  004276  6F85               	movwf	___lwdiv@divisor& (0+255),b
 21003  004278  ECD1  F028         	call	___lwdiv	;wreg free
 21004  00427C  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 21005  004280  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 21006                           
 21007                           ;app.c: 90: if (*counter < destinationTicks)
 21008  004284  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21009  004288  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21010  00428C  0100               	movlb	0	; () banked
 21011  00428E  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21012  004290  5CDE               	subwf	postinc2,w,c
 21013  004292  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21014  004294  58DE               	subwfb	postinc2,w,c
 21015  004296  B0D8               	btfsc	status,0,c
 21016  004298  D009               	goto	l2510
 21017                           
 21018                           ; BSR set to: 0
 21019                           ;app.c: 91: {
 21020                           ;app.c: 92: *counter += 1;
 21021  00429A  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21022  00429E  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21023  0042A2  2ADE               	incf	postinc2,f,c
 21024  0042A4  0E00               	movlw	0
 21025  0042A6  22DD               	addwfc	postdec2,f,c
 21026                           
 21027                           ; BSR set to: 0
 21028                           ;app.c: 93: isExpired = 0;
 21029  0042A8  0E00               	movlw	0
 21030  0042AA  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21031  0042AC                     l2510:
 21032                           
 21033                           ; BSR set to: 0
 21034                           ;app.c: 94: }
 21035                           ;app.c: 95: if (*counter == destinationTicks)
 21036                           
 21037                           ; BSR set to: 0
 21038  0042AC  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21039  0042B0  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21040  0042B4  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21041  0042B6  18DE               	xorwf	postinc2,w,c
 21042  0042B8  E117               	bnz	l12924
 21043  0042BA  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21044  0042BC  18DE               	xorwf	postinc2,w,c
 21045  0042BE  A4D8               	btfss	status,2,c
 21046  0042C0  D013               	goto	l2513
 21047                           
 21048                           ; BSR set to: 0
 21049                           ;app.c: 96: {
 21050                           ;app.c: 97: if (isCyclic)
 21051  0042C2  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 21052  0042C4  B4D8               	btfsc	status,2,c
 21053  0042C6  D009               	goto	l2512
 21054                           
 21055                           ; BSR set to: 0
 21056                           ;app.c: 98: {
 21057                           ;app.c: 99: *counter = 0;
 21058  0042C8  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21059  0042CC  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21060  0042D0  0E00               	movlw	0
 21061  0042D2  6EDE               	movwf	postinc2,c
 21062  0042D4  0E00               	movlw	0
 21063  0042D6  6EDD               	movwf	postdec2,c
 21064                           
 21065                           ;app.c: 100: }
 21066  0042D8  D007               	goto	l2513
 21067  0042DA                     l2512:
 21068                           
 21069                           ; BSR set to: 0
 21070                           ;app.c: 101: else
 21071                           ;app.c: 102: {
 21072                           ;app.c: 103: *counter += 1;
 21073                           
 21074                           ; BSR set to: 0
 21075  0042DA  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21076  0042DE  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21077  0042E2  2ADE               	incf	postinc2,f,c
 21078  0042E4  0E00               	movlw	0
 21079  0042E6  22DD               	addwfc	postdec2,f,c
 21080  0042E8                     l2513:
 21081  0042E8                     l12924:
 21082                           
 21083                           ; BSR set to: 0
 21084                           ;app.c: 104: }
 21085                           ;app.c: 105: }
 21086                           ;app.c: 106: return isExpired;
 21087  0042E8  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 21088  0042EA  0012               	return	
 21089  0042EC                     __end_of_secondsAppTimer:
 21090                           	opt stack 0
 21091                           tosu	equ	0xFFF
 21092                           tosh	equ	0xFFE
 21093                           tosl	equ	0xFFD
 21094                           pclath	equ	0xFFA
 21095                           tblptru	equ	0xFF8
 21096                           tblptrh	equ	0xFF7
 21097                           tblptrl	equ	0xFF6
 21098                           tablat	equ	0xFF5
 21099                           prodh	equ	0xFF4
 21100                           prodl	equ	0xFF3
 21101                           intcon	equ	0xFF2
 21102                           intcon2	equ	0xFF1
 21103                           intcon3	equ	0xFF0
 21104                           indf0	equ	0xFEF
 21105                           postinc0	equ	0xFEE
 21106                           plusw0	equ	0xFEB
 21107                           fsr0h	equ	0xFEA
 21108                           fsr0l	equ	0xFE9
 21109                           wreg	equ	0xFE8
 21110                           indf1	equ	0xFE7
 21111                           postinc1	equ	0xFE6
 21112                           postdec1	equ	0xFE5
 21113                           plusw1	equ	0xFE3
 21114                           fsr1h	equ	0xFE2
 21115                           fsr1l	equ	0xFE1
 21116                           indf2	equ	0xFDF
 21117                           postinc2	equ	0xFDE
 21118                           postdec2	equ	0xFDD
 21119                           plusw2	equ	0xFDB
 21120                           fsr2h	equ	0xFDA
 21121                           fsr2l	equ	0xFD9
 21122                           status	equ	0xFD8
 21123                           
 21124 ;; *************** function _Mdm_IsRinging *****************
 21125 ;; Defined at:
 21126 ;;		line 1003 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21127 ;; Parameters:    Size  Location     Type
 21128 ;;		None
 21129 ;; Auto vars:     Size  Location     Type
 21130 ;;  Ret             1   33[BANK0 ] enum E8910
 21131 ;; Return value:  Size  Location     Type
 21132 ;;                  1    wreg      enum E8910
 21133 ;; Registers used:
 21134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21135 ;; Tracked objects:
 21136 ;;		On entry : 0/0
 21137 ;;		On exit  : 0/0
 21138 ;;		Unchanged: 0/0
 21139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21141 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21143 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21144 ;;Total ram usage:        1 bytes
 21145 ;; Hardware stack levels used:    1
 21146 ;; Hardware stack levels required when called:   12
 21147 ;; This function calls:
 21148 ;;		_ReceiveEvt
 21149 ;; This function is called by:
 21150 ;;		_MyApp_Task
 21151 ;; This function uses a non-reentrant model
 21152 ;;
 21153                           
 21154                           	psect	text97
 21155  005B88                     __ptext97:
 21156                           	opt stack 0
 21157  005B88                     _Mdm_IsRinging:
 21158                           	opt stack 15
 21159                           
 21160                           ;mdm_gsm_gprs.c: 1005: RingStsType Ret = PhoneNotRinging;
 21161                           
 21162                           ; BSR set to: 0
 21163                           ;incstack = 0
 21164  005B88  0E00               	movlw	0
 21165  005B8A  0100               	movlb	0	; () banked
 21166  005B8C  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21167                           
 21168                           ; BSR set to: 0
 21169                           ;mdm_gsm_gprs.c: 1008: if (ReceiveEvt(&RingEvent))
 21170  005B8E  0EDC               	movlw	low _RingEvent
 21171  005B90  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21172  005B92  0E00               	movlw	high _RingEvent
 21173  005B94  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21174  005B96  EC34  F02D         	call	_ReceiveEvt	;wreg free
 21175  005B9A  0900               	iorlw	0
 21176  005B9C  B4D8               	btfsc	status,2,c
 21177  005B9E  D003               	goto	l1142
 21178                           
 21179                           ;mdm_gsm_gprs.c: 1009: {
 21180                           ;mdm_gsm_gprs.c: 1010: Ret = PhoneRinging;
 21181  005BA0  0E01               	movlw	1
 21182  005BA2  0100               	movlb	0	; () banked
 21183  005BA4  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21184  005BA6                     l1142:
 21185                           
 21186                           ;mdm_gsm_gprs.c: 1011: }
 21187                           ;mdm_gsm_gprs.c: 1013: return Ret;
 21188  005BA6  0100               	movlb	0	; () banked
 21189  005BA8  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21190  005BAA  0012               	return	
 21191  005BAC                     __end_of_Mdm_IsRinging:
 21192                           	opt stack 0
 21193                           tosu	equ	0xFFF
 21194                           tosh	equ	0xFFE
 21195                           tosl	equ	0xFFD
 21196                           pclath	equ	0xFFA
 21197                           tblptru	equ	0xFF8
 21198                           tblptrh	equ	0xFF7
 21199                           tblptrl	equ	0xFF6
 21200                           tablat	equ	0xFF5
 21201                           prodh	equ	0xFF4
 21202                           prodl	equ	0xFF3
 21203                           intcon	equ	0xFF2
 21204                           intcon2	equ	0xFF1
 21205                           intcon3	equ	0xFF0
 21206                           indf0	equ	0xFEF
 21207                           postinc0	equ	0xFEE
 21208                           plusw0	equ	0xFEB
 21209                           fsr0h	equ	0xFEA
 21210                           fsr0l	equ	0xFE9
 21211                           wreg	equ	0xFE8
 21212                           indf1	equ	0xFE7
 21213                           postinc1	equ	0xFE6
 21214                           postdec1	equ	0xFE5
 21215                           plusw1	equ	0xFE3
 21216                           fsr1h	equ	0xFE2
 21217                           fsr1l	equ	0xFE1
 21218                           indf2	equ	0xFDF
 21219                           postinc2	equ	0xFDE
 21220                           postdec2	equ	0xFDD
 21221                           plusw2	equ	0xFDB
 21222                           fsr2h	equ	0xFDA
 21223                           fsr2l	equ	0xFD9
 21224                           status	equ	0xFD8
 21225                           
 21226 ;; *************** function _Led_SetLedBlinkTime *****************
 21227 ;; Defined at:
 21228 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 21229 ;; Parameters:    Size  Location     Type
 21230 ;;  Led             1    wreg     unsigned char 
 21231 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 21232 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 21233 ;; Auto vars:     Size  Location     Type
 21234 ;;  Led             1   33[BANK0 ] unsigned char 
 21235 ;; Return value:  Size  Location     Type
 21236 ;;                  1    wreg      void 
 21237 ;; Registers used:
 21238 ;;		wreg, status,2, status,0
 21239 ;; Tracked objects:
 21240 ;;		On entry : 0/0
 21241 ;;		On exit  : 0/0
 21242 ;;		Unchanged: 0/0
 21243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21244 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21245 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21247 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21248 ;;Total ram usage:        5 bytes
 21249 ;; Hardware stack levels used:    1
 21250 ;; Hardware stack levels required when called:   11
 21251 ;; This function calls:
 21252 ;;		Nothing
 21253 ;; This function is called by:
 21254 ;;		_MyApp_Task
 21255 ;; This function uses a non-reentrant model
 21256 ;;
 21257                           
 21258                           	psect	text98
 21259  00514E                     __ptext98:
 21260                           	opt stack 0
 21261  00514E                     _Led_SetLedBlinkTime:
 21262                           	opt stack 16
 21263                           
 21264                           ; BSR set to: 0
 21265                           ;incstack = 0
 21266                           ;Led_SetLedBlinkTime@Led stored from wreg
 21267  00514E  0100               	movlb	0	; () banked
 21268  005150  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 21269                           
 21270                           ;led.c: 374: switch (Led)
 21271  005152  D01B               	goto	l2099
 21272  005154                     l2100:
 21273                           
 21274                           ; BSR set to: 0
 21275                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 21276  005154  C07D  F371         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 21277  005158  C07E  F372         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 21278                           
 21279                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 21280  00515C  C07F  F373         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 21281  005160  C080  F374         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 21282                           
 21283                           ;led.c: 379: break;
 21284  005164  0012               	return	
 21285  005166                     l2102:
 21286                           
 21287                           ; BSR set to: 0
 21288                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 21289  005166  C07D  F368         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 21290  00516A  C07E  F369         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 21291                           
 21292                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 21293  00516E  C07F  F36A         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 21294  005172  C080  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 21295                           
 21296                           ;led.c: 384: break;
 21297  005176  0012               	return	
 21298  005178                     l2103:
 21299                           
 21300                           ; BSR set to: 0
 21301                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 21302  005178  C07D  F368         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 21303  00517C  C07E  F369         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 21304                           
 21305                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 21306  005180  C07F  F36A         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 21307  005184  C080  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 21308                           
 21309                           ; BSR set to: 0
 21310                           ;led.c: 393: }
 21311                           
 21312                           ; BSR set to: 0
 21313                           ;led.c: 392: break;
 21314                           
 21315                           ;led.c: 391: default:
 21316                           
 21317                           ;led.c: 389: break;
 21318  005188  0012               	return	
 21319  00518A                     l2099:
 21320                           
 21321                           ; BSR set to: 0
 21322  00518A  0100               	movlb	0	; () banked
 21323  00518C  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 21324                           
 21325                           ; Switch size 1, requested type "space"
 21326                           ; Number of cases is 3, Range of values is 1 to 3
 21327                           ; switch strategies available:
 21328                           ; Name         Instructions Cycles
 21329                           ; simple_byte           10     6 (average)
 21330                           ;	Chosen strategy is simple_byte
 21331  00518E  0A01               	xorlw	1	; case 1
 21332  005190  B4D8               	btfsc	status,2,c
 21333  005192  D7E0               	goto	l2100
 21334  005194  0A03               	xorlw	3	; case 2
 21335  005196  B4D8               	btfsc	status,2,c
 21336  005198  D7E6               	goto	l2102
 21337  00519A  0A01               	xorlw	1	; case 3
 21338  00519C  A4D8               	btfss	status,2,c
 21339  00519E  0012               	return	
 21340  0051A0  D7EB               	goto	l2103
 21341  0051A2                     __end_of_Led_SetLedBlinkTime:
 21342                           	opt stack 0
 21343                           tosu	equ	0xFFF
 21344                           tosh	equ	0xFFE
 21345                           tosl	equ	0xFFD
 21346                           pclath	equ	0xFFA
 21347                           tblptru	equ	0xFF8
 21348                           tblptrh	equ	0xFF7
 21349                           tblptrl	equ	0xFF6
 21350                           tablat	equ	0xFF5
 21351                           prodh	equ	0xFF4
 21352                           prodl	equ	0xFF3
 21353                           intcon	equ	0xFF2
 21354                           intcon2	equ	0xFF1
 21355                           intcon3	equ	0xFF0
 21356                           indf0	equ	0xFEF
 21357                           postinc0	equ	0xFEE
 21358                           plusw0	equ	0xFEB
 21359                           fsr0h	equ	0xFEA
 21360                           fsr0l	equ	0xFE9
 21361                           wreg	equ	0xFE8
 21362                           indf1	equ	0xFE7
 21363                           postinc1	equ	0xFE6
 21364                           postdec1	equ	0xFE5
 21365                           plusw1	equ	0xFE3
 21366                           fsr1h	equ	0xFE2
 21367                           fsr1l	equ	0xFE1
 21368                           indf2	equ	0xFDF
 21369                           postinc2	equ	0xFDE
 21370                           postdec2	equ	0xFDD
 21371                           plusw2	equ	0xFDB
 21372                           fsr2h	equ	0xFDA
 21373                           fsr2l	equ	0xFD9
 21374                           status	equ	0xFD8
 21375                           
 21376 ;; *************** function _UartSetConfig *****************
 21377 ;; Defined at:
 21378 ;;		line 185 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21379 ;; Parameters:    Size  Location     Type
 21380 ;;		None
 21381 ;; Auto vars:     Size  Location     Type
 21382 ;;		None
 21383 ;; Return value:  Size  Location     Type
 21384 ;;                  1    wreg      void 
 21385 ;; Registers used:
 21386 ;;		wreg, status,2
 21387 ;; Tracked objects:
 21388 ;;		On entry : 0/0
 21389 ;;		On exit  : 0/0
 21390 ;;		Unchanged: 0/0
 21391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21396 ;;Total ram usage:        0 bytes
 21397 ;; Hardware stack levels used:    1
 21398 ;; Hardware stack levels required when called:   11
 21399 ;; This function calls:
 21400 ;;		Nothing
 21401 ;; This function is called by:
 21402 ;;		_Mdm_MainTask
 21403 ;; This function uses a non-reentrant model
 21404 ;;
 21405                           
 21406                           	psect	text99
 21407  004F46                     __ptext99:
 21408                           	opt stack 0
 21409  004F46                     _UartSetConfig:
 21410                           	opt stack 16
 21411                           
 21412                           ;mdm_gsm_gprs.c: 187: UartConfig.UartEnable = ((UINT8)(1));
 21413                           
 21414                           ; BSR set to: 0
 21415                           ;incstack = 0
 21416  004F46  0E01               	movlw	1
 21417  004F48  0103               	movlb	3	; () banked
 21418  004F4A  6F26               	movwf	_UartConfig& (0+255),b
 21419                           
 21420                           ;mdm_gsm_gprs.c: 188: UartConfig.UartMode = ((UINT8)(0));
 21421  004F4C  0E00               	movlw	0
 21422  004F4E  6F27               	movwf	(_UartConfig+1)& (0+255),b
 21423                           
 21424                           ;mdm_gsm_gprs.c: 190: UartConfig.BaudRateMode = ((UINT8)(0));
 21425  004F50  0E00               	movlw	0
 21426  004F52  6F28               	movwf	(_UartConfig+2)& (0+255),b
 21427                           
 21428                           ;mdm_gsm_gprs.c: 195: UartConfig.HighBaudMode = ((UINT8)(0));
 21429  004F54  0E00               	movlw	0
 21430  004F56  6F29               	movwf	(_UartConfig+3)& (0+255),b
 21431                           
 21432                           ;mdm_gsm_gprs.c: 199: UartConfig.Tx9bitMode = ((UINT8)(0));
 21433  004F58  0E00               	movlw	0
 21434  004F5A  6F2A               	movwf	(_UartConfig+4)& (0+255),b
 21435                           
 21436                           ;mdm_gsm_gprs.c: 200: UartConfig.Rx9bitMode = ((UINT8)(0));
 21437  004F5C  0E00               	movlw	0
 21438  004F5E  6F2B               	movwf	(_UartConfig+5)& (0+255),b
 21439                           
 21440                           ;mdm_gsm_gprs.c: 201: UartConfig.TxEnable = ((UINT8)(1));
 21441  004F60  0E01               	movlw	1
 21442  004F62  6F2C               	movwf	(_UartConfig+6)& (0+255),b
 21443                           
 21444                           ;mdm_gsm_gprs.c: 202: UartConfig.RxEnable = ((UINT8)(1));
 21445  004F64  0E01               	movlw	1
 21446  004F66  6F2D               	movwf	(_UartConfig+7)& (0+255),b
 21447                           
 21448                           ;mdm_gsm_gprs.c: 203: UartConfig.SendBreakEnable = ((UINT8)(0));
 21449  004F68  0E00               	movlw	0
 21450  004F6A  6F2E               	movwf	(_UartConfig+8)& (0+255),b
 21451                           
 21452                           ;mdm_gsm_gprs.c: 204: UartConfig.AutobaudEnable = ((UINT8)(0));
 21453  004F6C  0E00               	movlw	0
 21454  004F6E  6F2F               	movwf	(_UartConfig+9)& (0+255),b
 21455                           
 21456                           ;mdm_gsm_gprs.c: 205: UartConfig.WakeUpEnable = ((UINT8)(0));
 21457  004F70  0E00               	movlw	0
 21458  004F72  6F30               	movwf	(_UartConfig+10)& (0+255),b
 21459                           
 21460                           ;mdm_gsm_gprs.c: 206: UartConfig.TxInterruptEnable = ((UINT8)(0));
 21461  004F74  0E00               	movlw	0
 21462  004F76  6F31               	movwf	(_UartConfig+11)& (0+255),b
 21463                           
 21464                           ;mdm_gsm_gprs.c: 207: UartConfig.RxInterruptEnable = ((UINT8)(1));
 21465  004F78  0E01               	movlw	1
 21466  004F7A  6F32               	movwf	(_UartConfig+12)& (0+255),b
 21467                           
 21468                           ;mdm_gsm_gprs.c: 208: UartConfig.McuBusClock = ((UINT32)(48000000));
 21469  004F7C  0E00               	movlw	0
 21470  004F7E  6F33               	movwf	(_UartConfig+13)& (0+255),b
 21471  004F80  0E6C               	movlw	108
 21472  004F82  6F34               	movwf	(_UartConfig+14)& (0+255),b
 21473  004F84  0EDC               	movlw	220
 21474  004F86  6F35               	movwf	(_UartConfig+15)& (0+255),b
 21475  004F88  0E02               	movlw	2
 21476  004F8A  6F36               	movwf	(_UartConfig+16)& (0+255),b
 21477                           
 21478                           ;mdm_gsm_gprs.c: 210: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 21479  004F8C  0E80               	movlw	128
 21480  004F8E  6F37               	movwf	(_UartConfig+17)& (0+255),b
 21481  004F90  0E25               	movlw	37
 21482  004F92  6F38               	movwf	(_UartConfig+18)& (0+255),b
 21483  004F94  0E00               	movlw	0
 21484  004F96  6F39               	movwf	(_UartConfig+19)& (0+255),b
 21485  004F98  0E00               	movlw	0
 21486  004F9A  6F3A               	movwf	(_UartConfig+20)& (0+255),b
 21487                           
 21488                           ; BSR set to: 3
 21489  004F9C  0012               	return		;funcret
 21490  004F9E                     __end_of_UartSetConfig:
 21491                           	opt stack 0
 21492                           tosu	equ	0xFFF
 21493                           tosh	equ	0xFFE
 21494                           tosl	equ	0xFFD
 21495                           pclath	equ	0xFFA
 21496                           tblptru	equ	0xFF8
 21497                           tblptrh	equ	0xFF7
 21498                           tblptrl	equ	0xFF6
 21499                           tablat	equ	0xFF5
 21500                           prodh	equ	0xFF4
 21501                           prodl	equ	0xFF3
 21502                           intcon	equ	0xFF2
 21503                           intcon2	equ	0xFF1
 21504                           intcon3	equ	0xFF0
 21505                           indf0	equ	0xFEF
 21506                           postinc0	equ	0xFEE
 21507                           plusw0	equ	0xFEB
 21508                           fsr0h	equ	0xFEA
 21509                           fsr0l	equ	0xFE9
 21510                           wreg	equ	0xFE8
 21511                           indf1	equ	0xFE7
 21512                           postinc1	equ	0xFE6
 21513                           postdec1	equ	0xFE5
 21514                           plusw1	equ	0xFE3
 21515                           fsr1h	equ	0xFE2
 21516                           fsr1l	equ	0xFE1
 21517                           indf2	equ	0xFDF
 21518                           postinc2	equ	0xFDE
 21519                           postdec2	equ	0xFDD
 21520                           plusw2	equ	0xFDB
 21521                           fsr2h	equ	0xFDA
 21522                           fsr2l	equ	0xFD9
 21523                           status	equ	0xFD8
 21524                           
 21525 ;; *************** function _TurnOnModem *****************
 21526 ;; Defined at:
 21527 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21528 ;; Parameters:    Size  Location     Type
 21529 ;;		None
 21530 ;; Auto vars:     Size  Location     Type
 21531 ;;		None
 21532 ;; Return value:  Size  Location     Type
 21533 ;;                  1    wreg      void 
 21534 ;; Registers used:
 21535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21536 ;; Tracked objects:
 21537 ;;		On entry : 0/0
 21538 ;;		On exit  : 0/0
 21539 ;;		Unchanged: 0/0
 21540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21545 ;;Total ram usage:        0 bytes
 21546 ;; Hardware stack levels used:    1
 21547 ;; Hardware stack levels required when called:   12
 21548 ;; This function calls:
 21549 ;;		_GenerateEvt
 21550 ;; This function is called by:
 21551 ;;		_Mdm_MainTask
 21552 ;; This function uses a non-reentrant model
 21553 ;;
 21554                           
 21555                           	psect	text100
 21556  0054AE                     __ptext100:
 21557                           	opt stack 0
 21558  0054AE                     _TurnOnModem:
 21559                           	opt stack 15
 21560                           
 21561                           ;mdm_gsm_gprs.c: 373: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 21562                           ;mdm_gsm_gprs.c: 374: static UINT16 Counter = 0;
 21563                           ;mdm_gsm_gprs.c: 376: switch (TurnOnMdmState)
 21564                           
 21565                           ; BSR set to: 3
 21566                           ;incstack = 0
 21567  0054AE  D019               	goto	l1003
 21568  0054B0                     
 21569                           ;mdm_gsm_gprs.c: 380: Counter++;
 21570  0054B0  0102               	movlb	2	; () banked
 21571  0054B2  4BDC               	infsnz	TurnOnModem@Counter& (0+255),f,b
 21572  0054B4  2BDD               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 21573                           
 21574                           ; BSR set to: 2
 21575                           ;mdm_gsm_gprs.c: 382: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 21576  0054B6  0EB8               	movlw	184
 21577  0054B8  5DDC               	subwf	TurnOnModem@Counter& (0+255),w,b
 21578  0054BA  0E0B               	movlw	11
 21579  0054BC  59DD               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 21580  0054BE  A0D8               	btfss	status,0,c
 21581  0054C0  0012               	return	
 21582                           
 21583                           ; BSR set to: 2
 21584                           ;mdm_gsm_gprs.c: 383: {
 21585                           ;mdm_gsm_gprs.c: 385: TurnOnMdmState = TurnOnModuleReq;
 21586  0054C2  0E01               	movlw	1
 21587  0054C4  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 21588                           
 21589                           ; BSR set to: 2
 21590                           ;mdm_gsm_gprs.c: 386: }
 21591                           ;mdm_gsm_gprs.c: 387: break;
 21592  0054C6  0012               	return	
 21593  0054C8                     
 21594                           ;mdm_gsm_gprs.c: 391: GenerateEvt(&MdmOnOffPulseRequest);
 21595                           
 21596                           ; BSR set to: 2
 21597  0054C8  0EDE               	movlw	low _MdmOnOffPulseRequest
 21598  0054CA  0100               	movlb	0	; () banked
 21599  0054CC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 21600  0054CE  0E00               	movlw	high _MdmOnOffPulseRequest
 21601  0054D0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 21602  0054D2  ECDA  F02E         	call	_GenerateEvt	;wreg free
 21603                           
 21604                           ;mdm_gsm_gprs.c: 393: MdmStatus = ModemOn;
 21605  0054D6  0E01               	movlw	1
 21606  0054D8  0100               	movlb	0	; () banked
 21607  0054DA  6FCF               	movwf	_MdmStatus& (0+255),b
 21608                           
 21609                           ; BSR set to: 0
 21610                           ;mdm_gsm_gprs.c: 395: TurnOnMdmState = Stop;
 21611  0054DC  0E02               	movlw	2
 21612  0054DE  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 21613                           
 21614                           ; BSR set to: 0
 21615                           ;mdm_gsm_gprs.c: 403: }
 21616                           
 21617                           ; BSR set to: 0
 21618                           ;mdm_gsm_gprs.c: 402: break;
 21619                           
 21620                           ;mdm_gsm_gprs.c: 401: default:
 21621                           
 21622                           ; BSR set to: 0
 21623                           ;mdm_gsm_gprs.c: 399: break;
 21624                           
 21625                           ;mdm_gsm_gprs.c: 398: case Stop:
 21626                           
 21627                           ;mdm_gsm_gprs.c: 396: break;
 21628  0054E0  0012               	return	
 21629  0054E2                     l1003:
 21630                           
 21631                           ; BSR set to: 0
 21632  0054E2  5029               	movf	TurnOnModem@TurnOnMdmState,w,c
 21633                           
 21634                           ; Switch size 1, requested type "space"
 21635                           ; Number of cases is 3, Range of values is 0 to 2
 21636                           ; switch strategies available:
 21637                           ; Name         Instructions Cycles
 21638                           ; simple_byte           10     6 (average)
 21639                           ;	Chosen strategy is simple_byte
 21640  0054E4  0A00               	xorlw	0	; case 0
 21641  0054E6  B4D8               	btfsc	status,2,c
 21642  0054E8  D7E3               	goto	l1004
 21643  0054EA  0A01               	xorlw	1	; case 1
 21644  0054EC  B4D8               	btfsc	status,2,c
 21645  0054EE  D7EC               	goto	l1007
 21646  0054F0  0A03               	xorlw	3	; case 2
 21647  0054F2  0012               	return	
 21648  0054F4                     __end_of_TurnOnModem:
 21649                           	opt stack 0
 21650                           tosu	equ	0xFFF
 21651                           tosh	equ	0xFFE
 21652                           tosl	equ	0xFFD
 21653                           pclath	equ	0xFFA
 21654                           tblptru	equ	0xFF8
 21655                           tblptrh	equ	0xFF7
 21656                           tblptrl	equ	0xFF6
 21657                           tablat	equ	0xFF5
 21658                           prodh	equ	0xFF4
 21659                           prodl	equ	0xFF3
 21660                           intcon	equ	0xFF2
 21661                           intcon2	equ	0xFF1
 21662                           intcon3	equ	0xFF0
 21663                           indf0	equ	0xFEF
 21664                           postinc0	equ	0xFEE
 21665                           plusw0	equ	0xFEB
 21666                           fsr0h	equ	0xFEA
 21667                           fsr0l	equ	0xFE9
 21668                           wreg	equ	0xFE8
 21669                           indf1	equ	0xFE7
 21670                           postinc1	equ	0xFE6
 21671                           postdec1	equ	0xFE5
 21672                           plusw1	equ	0xFE3
 21673                           fsr1h	equ	0xFE2
 21674                           fsr1l	equ	0xFE1
 21675                           indf2	equ	0xFDF
 21676                           postinc2	equ	0xFDE
 21677                           postdec2	equ	0xFDD
 21678                           plusw2	equ	0xFDB
 21679                           fsr2h	equ	0xFDA
 21680                           fsr2l	equ	0xFD9
 21681                           status	equ	0xFD8
 21682                           
 21683 ;; *************** function _SendSmsSm *****************
 21684 ;; Defined at:
 21685 ;;		line 636 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21686 ;; Parameters:    Size  Location     Type
 21687 ;;		None
 21688 ;; Auto vars:     Size  Location     Type
 21689 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 21690 ;; Return value:  Size  Location     Type
 21691 ;;                  1    wreg      void 
 21692 ;; Registers used:
 21693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21694 ;; Tracked objects:
 21695 ;;		On entry : 0/0
 21696 ;;		On exit  : 0/0
 21697 ;;		Unchanged: 0/0
 21698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21700 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21701 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21702 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21703 ;;Total ram usage:       52 bytes
 21704 ;; Hardware stack levels used:    1
 21705 ;; Hardware stack levels required when called:   14
 21706 ;; This function calls:
 21707 ;;		_OsTmr_GetTimerStatus
 21708 ;;		_OsTmr_StartTimer
 21709 ;;		_ReceiveEvt
 21710 ;;		_StringCopy
 21711 ;;		_Uart_WriteStringLen
 21712 ;; This function is called by:
 21713 ;;		_Mdm_MainTask
 21714 ;; This function uses a non-reentrant model
 21715 ;;
 21716                           
 21717                           	psect	text101
 21718  0019F2                     __ptext101:
 21719                           	opt stack 0
 21720  0019F2                     _SendSmsSm:
 21721                           	opt stack 13
 21722                           
 21723                           ;mdm_gsm_gprs.c: 638: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 21724                           ;mdm_gsm_gprs.c: 639: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 21725                           ;mdm_gsm_gprs.c: 640: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 21726                           ;mdm_gsm_gprs.c: 641: UINT8 UartMessage[50];
 21727                           ;mdm_gsm_gprs.c: 644: if (MdmStatus == ModemConfigured)
 21728                           
 21729                           ;incstack = 0
 21730  0019F2  0E03               	movlw	3
 21731  0019F4  0100               	movlb	0	; () banked
 21732  0019F6  19CF               	xorwf	_MdmStatus& (0+255),w,b
 21733  0019F8  A4D8               	btfss	status,2,c
 21734  0019FA  0012               	return	
 21735  0019FC  D0C1               	goto	l1081
 21736  0019FE                     
 21737                           ;mdm_gsm_gprs.c: 650: if (ReceiveEvt(&SendSmsEvent))
 21738                           
 21739                           ; BSR set to: 0
 21740  0019FE  0EDD               	movlw	low _SendSmsEvent
 21741  001A00  0100               	movlb	0	; () banked
 21742  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21743  001A04  0E00               	movlw	high _SendSmsEvent
 21744  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21745  001A08  EC34  F02D         	call	_ReceiveEvt	;wreg free
 21746  001A0C  0900               	iorlw	0
 21747  001A0E  B4D8               	btfsc	status,2,c
 21748  001A10  0012               	return	
 21749                           
 21750                           ;mdm_gsm_gprs.c: 651: {
 21751                           ;mdm_gsm_gprs.c: 653: SendSms_State = SendSms_CmgsCmd;
 21752  001A12  0E01               	movlw	1
 21753  001A14  0101               	movlb	1	; () banked
 21754  001A16  6FF5               	movwf	SendSmsSm@SendSms_State& (0+255),b
 21755                           
 21756                           ; BSR set to: 1
 21757                           ;mdm_gsm_gprs.c: 654: }
 21758                           ;mdm_gsm_gprs.c: 655: break;
 21759  001A18  0012               	return	
 21760  001A1A                     
 21761                           ; BSR set to: 1
 21762                           ;mdm_gsm_gprs.c: 659: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 21763                           
 21764                           ; BSR set to: 1
 21765  001A1A  0ECD               	movlw	low STR_5
 21766  001A1C  0100               	movlb	0	; () banked
 21767  001A1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21768  001A20  0EFF               	movlw	high STR_5
 21769  001A22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21770  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 21771  001A26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 21772  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 21773  001A2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 21774  001A2C  0E00               	movlw	0
 21775  001A2E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 21776  001A30  0E09               	movlw	9
 21777  001A32  6F81               	movwf	StringCopy@Len& (0+255),b
 21778  001A34  ECE6  F026         	call	_StringCopy	;wreg free
 21779                           
 21780                           ;mdm_gsm_gprs.c: 661: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 21781  001A38  0EC6               	movlw	low _PhoneNumber
 21782  001A3A  0100               	movlb	0	; () banked
 21783  001A3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21784  001A3E  0E04               	movlw	high _PhoneNumber
 21785  001A40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21786  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 21787  001A44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 21788  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 21789  001A48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 21790  001A4A  C0D0  F081         	movff	_PhoneNumbLen,StringCopy@Len
 21791  001A4E  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 21792  001A50  ECE6  F026         	call	_StringCopy	;wreg free
 21793                           
 21794                           ;mdm_gsm_gprs.c: 663: UartMessage[PhoneNumbLen + 9] = '"';
 21795  001A54  0100               	movlb	0	; () banked
 21796  001A56  51D0               	movf	_PhoneNumbLen& (0+255),w,b
 21797  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 21798  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 21799  001A5C  0E09               	movlw	9
 21800  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 21801  001A60  0E00               	movlw	0
 21802  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 21803  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 21804  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 21805  001A68  6ED9               	movwf	fsr2l,c
 21806  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 21807  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 21808  001A6E  6EDA               	movwf	fsr2h,c
 21809  001A70  0E22               	movlw	34
 21810  001A72  6EDF               	movwf	indf2,c
 21811                           
 21812                           ; BSR set to: 0
 21813                           ;mdm_gsm_gprs.c: 664: UartMessage[PhoneNumbLen + 10] = '\r';
 21814  001A74  51D0               	movf	_PhoneNumbLen& (0+255),w,b
 21815  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 21816  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 21817  001A7A  0E0A               	movlw	10
 21818  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 21819  001A7E  0E00               	movlw	0
 21820  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 21821  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 21822  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 21823  001A86  6ED9               	movwf	fsr2l,c
 21824  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 21825  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 21826  001A8C  6EDA               	movwf	fsr2h,c
 21827  001A8E  0E0D               	movlw	13
 21828  001A90  6EDF               	movwf	indf2,c
 21829                           
 21830                           ; BSR set to: 0
 21831                           ;mdm_gsm_gprs.c: 666: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 21832  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 21833  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 21834  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 21835  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 21836  001A9A  51D0               	movf	_PhoneNumbLen& (0+255),w,b
 21837  001A9C  0F0B               	addlw	11
 21838  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 21839  001AA0  0E01               	movlw	1
 21840  001AA2  EC44  F02B         	call	_Uart_WriteStringLen
 21841                           
 21842                           ;mdm_gsm_gprs.c: 668: OsTmr_StartTimer(&SwTimer,2500);
 21843  001AA6  0EE0               	movlw	low SendSmsSm@SwTimer
 21844  001AA8  0100               	movlb	0	; () banked
 21845  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 21846  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 21847  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 21848  001AB0  0EC4               	movlw	196
 21849  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 21850  001AB4  0E09               	movlw	9
 21851  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 21852  001AB8  0E00               	movlw	0
 21853  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 21854  001ABC  0E00               	movlw	0
 21855  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 21856  001AC0  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 21857                           
 21858                           ;mdm_gsm_gprs.c: 669: SendSms_State = SendSms_Delay;
 21859  001AC4  0E05               	movlw	5
 21860  001AC6  0101               	movlb	1	; () banked
 21861  001AC8  6FF5               	movwf	SendSmsSm@SendSms_State& (0+255),b
 21862                           
 21863                           ; BSR set to: 1
 21864                           ;mdm_gsm_gprs.c: 670: SendSms_NextState = SendSms_EnterCmd;
 21865  001ACA  0E02               	movlw	2
 21866  001ACC  6FF4               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 21867                           
 21868                           ;mdm_gsm_gprs.c: 671: break;
 21869  001ACE  0012               	return	
 21870  001AD0                     
 21871                           ; BSR set to: 1
 21872                           ;mdm_gsm_gprs.c: 675: UartMessage[0] = '\n';
 21873                           
 21874                           ; BSR set to: 1
 21875  001AD0  0E0A               	movlw	10
 21876  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 21877                           
 21878                           ;mdm_gsm_gprs.c: 676: UartMessage[1] = '\r';
 21879  001AD4  0E0D               	movlw	13
 21880  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 21881                           
 21882                           ; BSR set to: 1
 21883                           ;mdm_gsm_gprs.c: 678: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 21884  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 21885  001ADA  0100               	movlb	0	; () banked
 21886  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 21887  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 21888  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 21889  001AE2  0E02               	movlw	2
 21890  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 21891  001AE6  0E01               	movlw	1
 21892  001AE8  EC44  F02B         	call	_Uart_WriteStringLen
 21893                           
 21894                           ;mdm_gsm_gprs.c: 680: SendSms_State = SendSms_WaitConf;
 21895  001AEC  0E03               	movlw	3
 21896  001AEE  0101               	movlb	1	; () banked
 21897  001AF0  6FF5               	movwf	SendSmsSm@SendSms_State& (0+255),b
 21898                           
 21899                           ;mdm_gsm_gprs.c: 681: break;
 21900  001AF2  0012               	return	
 21901  001AF4                     
 21902                           ; BSR set to: 1
 21903                           ;mdm_gsm_gprs.c: 685: if (ReceiveEvt(&NewStringReceived))
 21904                           
 21905                           ; BSR set to: 1
 21906  001AF4  0E3C               	movlw	low _NewStringReceived
 21907  001AF6  0100               	movlb	0	; () banked
 21908  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21909  001AFA  0E00               	movlw	high _NewStringReceived
 21910  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21911  001AFE  EC34  F02D         	call	_ReceiveEvt	;wreg free
 21912  001B02  0900               	iorlw	0
 21913  001B04  B4D8               	btfsc	status,2,c
 21914  001B06  0012               	return	
 21915                           
 21916                           ;mdm_gsm_gprs.c: 686: {
 21917                           ;mdm_gsm_gprs.c: 688: if (RxBuffer[0] == '>')
 21918  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 21919  001B0C  0A3E               	xorlw	62
 21920  001B0E  A4D8               	btfss	status,2,c
 21921  001B10  0012               	return	
 21922                           
 21923                           ;mdm_gsm_gprs.c: 689: {
 21924                           ;mdm_gsm_gprs.c: 691: SendSms_State = SendSms_SendSmsText;
 21925  001B12  0E04               	movlw	4
 21926  001B14  0101               	movlb	1	; () banked
 21927  001B16  6FF5               	movwf	SendSmsSm@SendSms_State& (0+255),b
 21928                           
 21929                           ; BSR set to: 1
 21930                           ;mdm_gsm_gprs.c: 692: }
 21931                           ;mdm_gsm_gprs.c: 693: }
 21932                           ;mdm_gsm_gprs.c: 694: break;
 21933                           
 21934                           ; BSR set to: 1
 21935  001B18  0012               	return	
 21936  001B1A                     
 21937                           ; BSR set to: 1
 21938                           ;mdm_gsm_gprs.c: 698: StringCopy(MessageText,UartMessage,SmsLen);
 21939                           
 21940                           ; BSR set to: 1
 21941  001B1A  0EC4               	movlw	low _MessageText
 21942  001B1C  0100               	movlb	0	; () banked
 21943  001B1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21944  001B20  0E07               	movlw	high _MessageText
 21945  001B22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21946  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 21947  001B26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 21948  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 21949  001B2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 21950  001B2C  C0D1  F081         	movff	_SmsLen,StringCopy@Len
 21951  001B30  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 21952  001B32  ECE6  F026         	call	_StringCopy	;wreg free
 21953                           
 21954                           ;mdm_gsm_gprs.c: 700: UartMessage[SmsLen] = 0x1A;
 21955  001B36  0100               	movlb	0	; () banked
 21956  001B38  51D1               	movf	_SmsLen& (0+255),w,b
 21957  001B3A  0D01               	mullw	1
 21958  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 21959  001B3E  24F3               	addwf	prodl,w,c
 21960  001B40  6ED9               	movwf	fsr2l,c
 21961  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 21962  001B44  20F4               	addwfc	prodh,w,c
 21963  001B46  6EDA               	movwf	fsr2h,c
 21964  001B48  0E1A               	movlw	26
 21965  001B4A  6EDF               	movwf	indf2,c
 21966                           
 21967                           ; BSR set to: 0
 21968                           ;mdm_gsm_gprs.c: 702: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 21969  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 21970  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 21971  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 21972  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 21973  001B54  29D1               	incf	_SmsLen& (0+255),w,b
 21974  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 21975  001B58  0E01               	movlw	1
 21976  001B5A  EC44  F02B         	call	_Uart_WriteStringLen
 21977                           
 21978                           ;mdm_gsm_gprs.c: 704: SendSms_State = SendSms_WaitEvt;
 21979  001B5E  0E00               	movlw	0
 21980  001B60  0101               	movlb	1	; () banked
 21981  001B62  6FF5               	movwf	SendSmsSm@SendSms_State& (0+255),b
 21982                           
 21983                           ;mdm_gsm_gprs.c: 705: break;
 21984  001B64  0012               	return	
 21985  001B66                     
 21986                           ; BSR set to: 1
 21987                           ;mdm_gsm_gprs.c: 709: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 21988                           
 21989                           ; BSR set to: 1
 21990  001B66  0EE0               	movlw	low SendSmsSm@SwTimer
 21991  001B68  0100               	movlb	0	; () banked
 21992  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 21993  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 21994  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 21995  001B70  EC8B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 21996  001B74  06E8               	decf	wreg,f,c
 21997  001B76  A4D8               	btfss	status,2,c
 21998  001B78  0012               	return	
 21999                           
 22000                           ;mdm_gsm_gprs.c: 710: {
 22001                           ;mdm_gsm_gprs.c: 712: SendSms_State = SendSms_NextState;
 22002  001B7A  C1F4  F1F5         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 22003                           
 22004                           ;mdm_gsm_gprs.c: 718: }
 22005                           
 22006                           ;mdm_gsm_gprs.c: 717: break;
 22007                           
 22008                           ;mdm_gsm_gprs.c: 716: default:
 22009                           
 22010                           ;mdm_gsm_gprs.c: 713: }
 22011                           ;mdm_gsm_gprs.c: 714: break;
 22012  001B7E  0012               	return	
 22013  001B80                     l1081:
 22014  001B80  0101               	movlb	1	; () banked
 22015  001B82  51F5               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 22016                           
 22017                           ; Switch size 1, requested type "space"
 22018                           ; Number of cases is 6, Range of values is 0 to 5
 22019                           ; switch strategies available:
 22020                           ; Name         Instructions Cycles
 22021                           ; simple_byte           19    10 (average)
 22022                           ;	Chosen strategy is simple_byte
 22023  001B84  0A00               	xorlw	0	; case 0
 22024  001B86  B4D8               	btfsc	status,2,c
 22025  001B88  D73A               	goto	l1082
 22026  001B8A  0A01               	xorlw	1	; case 1
 22027  001B8C  B4D8               	btfsc	status,2,c
 22028  001B8E  D745               	goto	l1085
 22029  001B90  0A03               	xorlw	3	; case 2
 22030  001B92  B4D8               	btfsc	status,2,c
 22031  001B94  D79D               	goto	l1086
 22032  001B96  0A01               	xorlw	1	; case 3
 22033  001B98  B4D8               	btfsc	status,2,c
 22034  001B9A  D7AC               	goto	l1087
 22035  001B9C  0A07               	xorlw	7	; case 4
 22036  001B9E  B4D8               	btfsc	status,2,c
 22037  001BA0  D7BC               	goto	l1090
 22038  001BA2  0A01               	xorlw	1	; case 5
 22039  001BA4  A4D8               	btfss	status,2,c
 22040                           
 22041                           ; BSR set to: 1
 22042  001BA6  0012               	return	
 22043  001BA8  D7DE               	goto	l1091
 22044  001BAA                     __end_of_SendSmsSm:
 22045                           	opt stack 0
 22046                           tosu	equ	0xFFF
 22047                           tosh	equ	0xFFE
 22048                           tosl	equ	0xFFD
 22049                           pclath	equ	0xFFA
 22050                           tblptru	equ	0xFF8
 22051                           tblptrh	equ	0xFF7
 22052                           tblptrl	equ	0xFF6
 22053                           tablat	equ	0xFF5
 22054                           prodh	equ	0xFF4
 22055                           prodl	equ	0xFF3
 22056                           intcon	equ	0xFF2
 22057                           intcon2	equ	0xFF1
 22058                           intcon3	equ	0xFF0
 22059                           indf0	equ	0xFEF
 22060                           postinc0	equ	0xFEE
 22061                           plusw0	equ	0xFEB
 22062                           fsr0h	equ	0xFEA
 22063                           fsr0l	equ	0xFE9
 22064                           wreg	equ	0xFE8
 22065                           indf1	equ	0xFE7
 22066                           postinc1	equ	0xFE6
 22067                           postdec1	equ	0xFE5
 22068                           plusw1	equ	0xFE3
 22069                           fsr1h	equ	0xFE2
 22070                           fsr1l	equ	0xFE1
 22071                           indf2	equ	0xFDF
 22072                           postinc2	equ	0xFDE
 22073                           postdec2	equ	0xFDD
 22074                           plusw2	equ	0xFDB
 22075                           fsr2h	equ	0xFDA
 22076                           fsr2l	equ	0xFD9
 22077                           status	equ	0xFD8
 22078                           
 22079 ;; *************** function _Uart_WriteStringLen *****************
 22080 ;; Defined at:
 22081 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 22082 ;; Parameters:    Size  Location     Type
 22083 ;;  Module          1    wreg     unsigned char 
 22084 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 22085 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 22086 ;;  Len             1   34[BANK0 ] unsigned char 
 22087 ;; Auto vars:     Size  Location     Type
 22088 ;;  Module          1   36[BANK0 ] unsigned char 
 22089 ;;  Index           1   35[BANK0 ] unsigned char 
 22090 ;; Return value:  Size  Location     Type
 22091 ;;                  1    wreg      void 
 22092 ;; Registers used:
 22093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22094 ;; Tracked objects:
 22095 ;;		On entry : 0/0
 22096 ;;		On exit  : 0/0
 22097 ;;		Unchanged: 0/0
 22098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22099 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22100 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22102 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22103 ;;Total ram usage:        5 bytes
 22104 ;; Hardware stack levels used:    1
 22105 ;; Hardware stack levels required when called:   12
 22106 ;; This function calls:
 22107 ;;		_UartTxBufferStatus
 22108 ;;		_UartWriteByte
 22109 ;; This function is called by:
 22110 ;;		_SendSmsSm
 22111 ;;		_GsmGprsTerminal
 22112 ;; This function uses a non-reentrant model
 22113 ;;
 22114                           
 22115                           	psect	text102
 22116  005688                     __ptext102:
 22117                           	opt stack 0
 22118  005688                     _Uart_WriteStringLen:
 22119                           	opt stack 14
 22120                           
 22121                           ;incstack = 0
 22122                           ;Uart_WriteStringLen@Module stored from wreg
 22123  005688  0100               	movlb	0	; () banked
 22124  00568A  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 22125                           
 22126                           ;uart_drv.c: 544: UINT8 Index;
 22127                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 22128  00568C  0E00               	movlw	0
 22129  00568E  0100               	movlb	0	; () banked
 22130  005690  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 22131  005692  D015               	goto	l715
 22132  005694                     
 22133                           ; BSR set to: 0
 22134                           ;uart_drv.c: 547: {
 22135                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 22136                           
 22137                           ; BSR set to: 0
 22138  005694  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 22139  005698  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 22140  00569C  50DF               	movf	indf2,w,c
 22141  00569E  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 22142  0056A0  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 22143  0056A2  EC5E  F02E         	call	_UartWriteByte
 22144                           
 22145                           ;uart_drv.c: 551: StringToWrite++;
 22146  0056A6  0100               	movlb	0	; () banked
 22147  0056A8  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 22148  0056AA  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 22149  0056AC                     
 22150                           ; BSR set to: 0
 22151                           
 22152                           ; BSR set to: 0
 22153  0056AC  0100               	movlb	0	; () banked
 22154  0056AE  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 22155  0056B0  EC9C  F029         	call	_UartTxBufferStatus
 22156  0056B4  06E8               	decf	wreg,f,c
 22157  0056B6  B4D8               	btfsc	status,2,c
 22158  0056B8  D7F9               	goto	l718
 22159  0056BA  0100               	movlb	0	; () banked
 22160  0056BC  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 22161  0056BE                     l715:
 22162                           
 22163                           ; BSR set to: 0
 22164                           
 22165                           ; BSR set to: 0
 22166  0056BE  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 22167  0056C0  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 22168  0056C2  B0D8               	btfsc	status,0,c
 22169  0056C4  0012               	return	
 22170  0056C6  D7E6               	goto	l716
 22171  0056C8                     __end_of_Uart_WriteStringLen:
 22172                           	opt stack 0
 22173                           tosu	equ	0xFFF
 22174                           tosh	equ	0xFFE
 22175                           tosl	equ	0xFFD
 22176                           pclath	equ	0xFFA
 22177                           tblptru	equ	0xFF8
 22178                           tblptrh	equ	0xFF7
 22179                           tblptrl	equ	0xFF6
 22180                           tablat	equ	0xFF5
 22181                           prodh	equ	0xFF4
 22182                           prodl	equ	0xFF3
 22183                           intcon	equ	0xFF2
 22184                           intcon2	equ	0xFF1
 22185                           intcon3	equ	0xFF0
 22186                           indf0	equ	0xFEF
 22187                           postinc0	equ	0xFEE
 22188                           plusw0	equ	0xFEB
 22189                           fsr0h	equ	0xFEA
 22190                           fsr0l	equ	0xFE9
 22191                           wreg	equ	0xFE8
 22192                           indf1	equ	0xFE7
 22193                           postinc1	equ	0xFE6
 22194                           postdec1	equ	0xFE5
 22195                           plusw1	equ	0xFE3
 22196                           fsr1h	equ	0xFE2
 22197                           fsr1l	equ	0xFE1
 22198                           indf2	equ	0xFDF
 22199                           postinc2	equ	0xFDE
 22200                           postdec2	equ	0xFDD
 22201                           plusw2	equ	0xFDB
 22202                           fsr2h	equ	0xFDA
 22203                           fsr2l	equ	0xFD9
 22204                           status	equ	0xFD8
 22205                           
 22206 ;; *************** function _ModemEvtParser *****************
 22207 ;; Defined at:
 22208 ;;		line 494 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22209 ;; Parameters:    Size  Location     Type
 22210 ;;		None
 22211 ;; Auto vars:     Size  Location     Type
 22212 ;;  CallReadyStr   10   40[BANK0 ] unsigned char [10]
 22213 ;;  SmsString       5   50[BANK0 ] unsigned char [5]
 22214 ;;  RingString      4   55[BANK0 ] unsigned char [4]
 22215 ;;  CompareIdx      1   60[BANK0 ] unsigned char 
 22216 ;;  Match           1   59[BANK0 ] unsigned char 
 22217 ;; Return value:  Size  Location     Type
 22218 ;;                  1    wreg      void 
 22219 ;; Registers used:
 22220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22221 ;; Tracked objects:
 22222 ;;		On entry : 0/0
 22223 ;;		On exit  : 0/0
 22224 ;;		Unchanged: 0/0
 22225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22227 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22229 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22230 ;;Total ram usage:       21 bytes
 22231 ;; Hardware stack levels used:    1
 22232 ;; Hardware stack levels required when called:   12
 22233 ;; This function calls:
 22234 ;;		_GenerateEvt
 22235 ;;		_ReceiveEvt
 22236 ;;		_StringCompare
 22237 ;;		_Uart_ClearRxBuffer
 22238 ;; This function is called by:
 22239 ;;		_Mdm_MainTask
 22240 ;; This function uses a non-reentrant model
 22241 ;;
 22242                           
 22243                           	psect	text103
 22244  002C74                     __ptext103:
 22245                           	opt stack 0
 22246  002C74                     _ModemEvtParser:
 22247                           	opt stack 15
 22248                           
 22249                           ;mdm_gsm_gprs.c: 496: UINT8 RingString[] = {'R','I','N','G'};
 22250                           
 22251                           ; BSR set to: 0
 22252                           ;incstack = 0
 22253  002C74  C3BE  F097         	movff	ModemEvtParser@F9086,ModemEvtParser@RingString
 22254  002C78  C3BF  F098         	movff	ModemEvtParser@F9086+1,ModemEvtParser@RingString+1
 22255  002C7C  C3C0  F099         	movff	ModemEvtParser@F9086+2,ModemEvtParser@RingString+2
 22256  002C80  C3C1  F09A         	movff	ModemEvtParser@F9086+3,ModemEvtParser@RingString+3
 22257                           
 22258                           ;mdm_gsm_gprs.c: 497: UINT8 SmsString[] = {'+','C','M','T','I'};
 22259  002C84  EE23  F0B9         	lfsr	2,ModemEvtParser@F9088
 22260  002C88  EE10  F092         	lfsr	1,ModemEvtParser@SmsString
 22261  002C8C  0E04               	movlw	4
 22262  002C8E                     u12251:
 22263  002C8E  CFDB FFE3          	movff	plusw2,plusw1
 22264  002C92  06E8               	decf	wreg,f,c
 22265  002C94  E2FC               	bc	u12251
 22266                           
 22267                           ;mdm_gsm_gprs.c: 498: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 22268  002C96  EE24  F0EF         	lfsr	2,ModemEvtParser@F9090
 22269  002C9A  EE10  F088         	lfsr	1,ModemEvtParser@CallReadyString
 22270  002C9E  0E09               	movlw	9
 22271  002CA0                     u12261:
 22272  002CA0  CFDB FFE3          	movff	plusw2,plusw1
 22273  002CA4  06E8               	decf	wreg,f,c
 22274  002CA6  E2FC               	bc	u12261
 22275                           
 22276                           ;mdm_gsm_gprs.c: 499: UINT8 CompareIdx = 0;
 22277  002CA8  0E00               	movlw	0
 22278  002CAA  0100               	movlb	0	; () banked
 22279  002CAC  6F9C               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 22280                           
 22281                           ; BSR set to: 0
 22282                           ;mdm_gsm_gprs.c: 500: UINT8 Match = 0;
 22283  002CAE  0E00               	movlw	0
 22284  002CB0  6F9B               	movwf	ModemEvtParser@Match& (0+255),b
 22285                           
 22286                           ; BSR set to: 0
 22287                           ;mdm_gsm_gprs.c: 503: if (ReceiveEvt(&NewMdmEvtParserRequest))
 22288  002CB2  0E3B               	movlw	low _NewMdmEvtParserRequest
 22289  002CB4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22290  002CB6  0E00               	movlw	high _NewMdmEvtParserRequest
 22291  002CB8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22292  002CBA  EC34  F02D         	call	_ReceiveEvt	;wreg free
 22293  002CBE  0900               	iorlw	0
 22294  002CC0  B4D8               	btfsc	status,2,c
 22295  002CC2  0012               	return	
 22296                           
 22297                           ;mdm_gsm_gprs.c: 504: {
 22298                           ;mdm_gsm_gprs.c: 505: for (CompareIdx = 0; CompareIdx < ((UINT8)(3)); CompareIdx++)
 22299  002CC4  0E00               	movlw	0
 22300  002CC6  0100               	movlb	0	; () banked
 22301  002CC8  6F9C               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 22302  002CCA                     l13108:
 22303                           
 22304                           ; BSR set to: 0
 22305  002CCA  0E02               	movlw	2
 22306  002CCC  659C               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 22307  002CCE  D04C               	goto	l1044
 22308  002CD0  D058               	goto	u12320
 22309  002CD2                     
 22310                           ; BSR set to: 0
 22311                           ;mdm_gsm_gprs.c: 511: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 22312                           
 22313                           ; BSR set to: 0
 22314  002CD2  0E97               	movlw	low ModemEvtParser@RingString
 22315  002CD4  6F7D               	movwf	StringCompare@String1& (0+255),b
 22316  002CD6  0E00               	movlw	high ModemEvtParser@RingString
 22317  002CD8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22318  002CDA  0E58               	movlw	low _RxBuffer
 22319  002CDC  6F7F               	movwf	StringCompare@String2& (0+255),b
 22320  002CDE  0E0C               	movlw	high _RxBuffer
 22321  002CE0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22322  002CE2  0E00               	movlw	0
 22323  002CE4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22324  002CE6  0E04               	movlw	4
 22325  002CE8  6F81               	movwf	StringCompare@Len& (0+255),b
 22326  002CEA  ECFB  F028         	call	_StringCompare	;wreg free
 22327  002CEE  0900               	iorlw	0
 22328  002CF0  B4D8               	btfsc	status,2,c
 22329  002CF2  D044               	goto	l1047
 22330                           
 22331                           ;mdm_gsm_gprs.c: 512: {
 22332                           ;mdm_gsm_gprs.c: 514: GenerateEvt(&RingEvent);
 22333  002CF4  0EDC               	movlw	low _RingEvent
 22334  002CF6  0100               	movlb	0	; () banked
 22335  002CF8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22336  002CFA  0E00               	movlw	high _RingEvent
 22337  002CFC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22338  002CFE  ECDA  F02E         	call	_GenerateEvt	;wreg free
 22339  002D02  D018               	goto	l13122
 22340  002D04                     
 22341                           ; BSR set to: 0
 22342                           ;mdm_gsm_gprs.c: 522: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 22343                           
 22344                           ; BSR set to: 0
 22345  002D04  0E92               	movlw	low ModemEvtParser@SmsString
 22346  002D06  6F7D               	movwf	StringCompare@String1& (0+255),b
 22347  002D08  0E00               	movlw	high ModemEvtParser@SmsString
 22348  002D0A  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22349  002D0C  0E58               	movlw	low _RxBuffer
 22350  002D0E  6F7F               	movwf	StringCompare@String2& (0+255),b
 22351  002D10  0E0C               	movlw	high _RxBuffer
 22352  002D12  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22353  002D14  0E00               	movlw	0
 22354  002D16  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22355  002D18  0E05               	movlw	5
 22356  002D1A  6F81               	movwf	StringCompare@Len& (0+255),b
 22357  002D1C  ECFB  F028         	call	_StringCompare	;wreg free
 22358  002D20  0900               	iorlw	0
 22359  002D22  B4D8               	btfsc	status,2,c
 22360  002D24  D02B               	goto	l1047
 22361                           
 22362                           ;mdm_gsm_gprs.c: 523: {
 22363                           ;mdm_gsm_gprs.c: 525: GenerateEvt(&SmsEvent);
 22364  002D26  0EDB               	movlw	low _SmsEvent
 22365  002D28  0100               	movlb	0	; () banked
 22366  002D2A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22367  002D2C  0E00               	movlw	high _SmsEvent
 22368  002D2E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22369  002D30  ECDA  F02E         	call	_GenerateEvt	;wreg free
 22370  002D34                     l13122:
 22371                           
 22372                           ;mdm_gsm_gprs.c: 527: Match = 1;
 22373  002D34  0E01               	movlw	1
 22374  002D36  0100               	movlb	0	; () banked
 22375  002D38  D015               	goto	L25
 22376  002D3A                     
 22377                           ; BSR set to: 0
 22378                           ;mdm_gsm_gprs.c: 533: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 22379                           
 22380                           ; BSR set to: 0
 22381  002D3A  0E88               	movlw	low ModemEvtParser@CallReadyString
 22382  002D3C  6F7D               	movwf	StringCompare@String1& (0+255),b
 22383  002D3E  0E00               	movlw	high ModemEvtParser@CallReadyString
 22384  002D40  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22385  002D42  0E58               	movlw	low _RxBuffer
 22386  002D44  6F7F               	movwf	StringCompare@String2& (0+255),b
 22387  002D46  0E0C               	movlw	high _RxBuffer
 22388  002D48  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22389  002D4A  0E00               	movlw	0
 22390  002D4C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22391  002D4E  0E0A               	movlw	10
 22392  002D50  6F81               	movwf	StringCompare@Len& (0+255),b
 22393  002D52  ECFB  F028         	call	_StringCompare	;wreg free
 22394  002D56  0900               	iorlw	0
 22395  002D58  B4D8               	btfsc	status,2,c
 22396  002D5A  D010               	goto	l1047
 22397                           
 22398                           ;mdm_gsm_gprs.c: 534: {
 22399                           ;mdm_gsm_gprs.c: 536: MdmStatus = ModemReady;
 22400  002D5C  0E02               	movlw	2
 22401  002D5E  0100               	movlb	0	; () banked
 22402  002D60  6FCF               	movwf	_MdmStatus& (0+255),b
 22403                           
 22404                           ;mdm_gsm_gprs.c: 538: Match = 1;
 22405  002D62  0E01               	movlw	1
 22406  002D64                     L25:
 22407  002D64  6F9B               	movwf	ModemEvtParser@Match& (0+255),b
 22408                           
 22409                           ; BSR set to: 0
 22410                           ;mdm_gsm_gprs.c: 544: }
 22411                           
 22412                           ; BSR set to: 0
 22413                           ;mdm_gsm_gprs.c: 543: break;
 22414                           
 22415                           ;mdm_gsm_gprs.c: 542: default:
 22416                           
 22417                           ; BSR set to: 0
 22418                           ;mdm_gsm_gprs.c: 539: }
 22419                           ;mdm_gsm_gprs.c: 540: break;
 22420  002D66  D00A               	goto	l1047
 22421  002D68                     l1044:
 22422                           
 22423                           ; BSR set to: 0
 22424                           
 22425                           ; BSR set to: 0
 22426  002D68  519C               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 22427                           
 22428                           ; Switch size 1, requested type "space"
 22429                           ; Number of cases is 3, Range of values is 0 to 2
 22430                           ; switch strategies available:
 22431                           ; Name         Instructions Cycles
 22432                           ; simple_byte           10     6 (average)
 22433                           ;	Chosen strategy is simple_byte
 22434  002D6A  0A00               	xorlw	0	; case 0
 22435  002D6C  B4D8               	btfsc	status,2,c
 22436  002D6E  D7B1               	goto	l1045
 22437  002D70  0A01               	xorlw	1	; case 1
 22438  002D72  B4D8               	btfsc	status,2,c
 22439  002D74  D7C7               	goto	l1048
 22440  002D76  0A03               	xorlw	3	; case 2
 22441  002D78  B4D8               	btfsc	status,2,c
 22442  002D7A  D7DF               	goto	l1050
 22443  002D7C                     l1047:
 22444                           
 22445                           ; BSR set to: 0
 22446  002D7C  0100               	movlb	0	; () banked
 22447  002D7E  2B9C               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 22448  002D80  D7A4               	goto	l13108
 22449  002D82                     u12320:
 22450                           
 22451                           ; BSR set to: 0
 22452                           ;mdm_gsm_gprs.c: 545: }
 22453                           ;mdm_gsm_gprs.c: 548: if (Match == 1)
 22454                           
 22455                           ; BSR set to: 0
 22456  002D82  059B               	decf	ModemEvtParser@Match& (0+255),w,b
 22457  002D84  A4D8               	btfss	status,2,c
 22458  002D86  0012               	return	
 22459                           
 22460                           ; BSR set to: 0
 22461                           ;mdm_gsm_gprs.c: 549: {
 22462                           ;mdm_gsm_gprs.c: 552: Uart_ClearRxBuffer();
 22463  002D88  EC71  F02C         	call	_Uart_ClearRxBuffer	;wreg free
 22464  002D8C  0012               	return	
 22465  002D8E                     __end_of_ModemEvtParser:
 22466                           	opt stack 0
 22467                           tosu	equ	0xFFF
 22468                           tosh	equ	0xFFE
 22469                           tosl	equ	0xFFD
 22470                           pclath	equ	0xFFA
 22471                           tblptru	equ	0xFF8
 22472                           tblptrh	equ	0xFF7
 22473                           tblptrl	equ	0xFF6
 22474                           tablat	equ	0xFF5
 22475                           prodh	equ	0xFF4
 22476                           prodl	equ	0xFF3
 22477                           intcon	equ	0xFF2
 22478                           intcon2	equ	0xFF1
 22479                           intcon3	equ	0xFF0
 22480                           indf0	equ	0xFEF
 22481                           postinc0	equ	0xFEE
 22482                           plusw0	equ	0xFEB
 22483                           fsr0h	equ	0xFEA
 22484                           fsr0l	equ	0xFE9
 22485                           wreg	equ	0xFE8
 22486                           indf1	equ	0xFE7
 22487                           postinc1	equ	0xFE6
 22488                           postdec1	equ	0xFE5
 22489                           plusw1	equ	0xFE3
 22490                           fsr1h	equ	0xFE2
 22491                           fsr1l	equ	0xFE1
 22492                           indf2	equ	0xFDF
 22493                           postinc2	equ	0xFDE
 22494                           postdec2	equ	0xFDD
 22495                           plusw2	equ	0xFDB
 22496                           fsr2h	equ	0xFDA
 22497                           fsr2l	equ	0xFD9
 22498                           status	equ	0xFD8
 22499                           
 22500 ;; *************** function _Uart_ClearRxBuffer *****************
 22501 ;; Defined at:
 22502 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 22503 ;; Parameters:    Size  Location     Type
 22504 ;;		None
 22505 ;; Auto vars:     Size  Location     Type
 22506 ;;  Index           2   29[BANK0 ] unsigned short 
 22507 ;; Return value:  Size  Location     Type
 22508 ;;                  1    wreg      void 
 22509 ;; Registers used:
 22510 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22511 ;; Tracked objects:
 22512 ;;		On entry : 0/0
 22513 ;;		On exit  : 0/0
 22514 ;;		Unchanged: 0/0
 22515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22517 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22519 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22520 ;;Total ram usage:        2 bytes
 22521 ;; Hardware stack levels used:    1
 22522 ;; Hardware stack levels required when called:   11
 22523 ;; This function calls:
 22524 ;;		Nothing
 22525 ;; This function is called by:
 22526 ;;		_ModemEvtParser
 22527 ;; This function uses a non-reentrant model
 22528 ;;
 22529                           
 22530                           	psect	text104
 22531  0058E2                     __ptext104:
 22532                           	opt stack 0
 22533  0058E2                     _Uart_ClearRxBuffer:
 22534                           	opt stack 15
 22535                           
 22536                           ;uart_drv.c: 567: UINT16 Index = 0;
 22537                           
 22538                           ;incstack = 0
 22539  0058E2  0E00               	movlw	0
 22540  0058E4  0100               	movlb	0	; () banked
 22541  0058E6  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 22542  0058E8  0E00               	movlw	0
 22543  0058EA  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 22544                           
 22545                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 22546  0058EC  0E00               	movlw	0
 22547  0058EE  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 22548  0058F0  0E00               	movlw	0
 22549  0058F2  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 22550  0058F4                     l9118:
 22551                           
 22552                           ; BSR set to: 0
 22553  0058F4  0E90               	movlw	144
 22554  0058F6  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 22555  0058F8  0E01               	movlw	1
 22556  0058FA  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 22557  0058FC  B0D8               	btfsc	status,0,c
 22558  0058FE  0012               	return	
 22559                           
 22560                           ; BSR set to: 0
 22561                           ;uart_drv.c: 571: {
 22562                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 22563                           
 22564                           ; BSR set to: 0
 22565                           
 22566                           ; BSR set to: 0
 22567  005900  0E58               	movlw	low _RxBuffer
 22568  005902  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 22569  005904  6ED9               	movwf	fsr2l,c
 22570  005906  0E0C               	movlw	high _RxBuffer
 22571  005908  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 22572  00590A  6EDA               	movwf	fsr2h,c
 22573  00590C  0E00               	movlw	0
 22574  00590E  6EDF               	movwf	indf2,c
 22575                           
 22576                           ; BSR set to: 0
 22577  005910  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 22578  005912  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 22579  005914  D7EF               	goto	l9118
 22580  005916                     __end_of_Uart_ClearRxBuffer:
 22581                           	opt stack 0
 22582                           tosu	equ	0xFFF
 22583                           tosh	equ	0xFFE
 22584                           tosl	equ	0xFFD
 22585                           pclath	equ	0xFFA
 22586                           tblptru	equ	0xFF8
 22587                           tblptrh	equ	0xFF7
 22588                           tblptrl	equ	0xFF6
 22589                           tablat	equ	0xFF5
 22590                           prodh	equ	0xFF4
 22591                           prodl	equ	0xFF3
 22592                           intcon	equ	0xFF2
 22593                           intcon2	equ	0xFF1
 22594                           intcon3	equ	0xFF0
 22595                           indf0	equ	0xFEF
 22596                           postinc0	equ	0xFEE
 22597                           plusw0	equ	0xFEB
 22598                           fsr0h	equ	0xFEA
 22599                           fsr0l	equ	0xFE9
 22600                           wreg	equ	0xFE8
 22601                           indf1	equ	0xFE7
 22602                           postinc1	equ	0xFE6
 22603                           postdec1	equ	0xFE5
 22604                           plusw1	equ	0xFE3
 22605                           fsr1h	equ	0xFE2
 22606                           fsr1l	equ	0xFE1
 22607                           indf2	equ	0xFDF
 22608                           postinc2	equ	0xFDE
 22609                           postdec2	equ	0xFDD
 22610                           plusw2	equ	0xFDB
 22611                           fsr2h	equ	0xFDA
 22612                           fsr2l	equ	0xFD9
 22613                           status	equ	0xFD8
 22614                           
 22615 ;; *************** function _StringCompare *****************
 22616 ;; Defined at:
 22617 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 22618 ;; Parameters:    Size  Location     Type
 22619 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 22620 ;;		 -> ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), ModemEvtParser@RingString(4), 
 22621 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 22622 ;;		 -> RxBuffer(400), 
 22623 ;;  Len             2   33[BANK0 ] unsigned short 
 22624 ;; Auto vars:     Size  Location     Type
 22625 ;;  Index           2   38[BANK0 ] unsigned short 
 22626 ;;  Result          1   37[BANK0 ] unsigned char 
 22627 ;; Return value:  Size  Location     Type
 22628 ;;                  1    wreg      unsigned char 
 22629 ;; Registers used:
 22630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22631 ;; Tracked objects:
 22632 ;;		On entry : 0/0
 22633 ;;		On exit  : 0/0
 22634 ;;		Unchanged: 0/0
 22635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22636 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22637 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22638 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22639 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22640 ;;Total ram usage:       11 bytes
 22641 ;; Hardware stack levels used:    1
 22642 ;; Hardware stack levels required when called:   11
 22643 ;; This function calls:
 22644 ;;		Nothing
 22645 ;; This function is called by:
 22646 ;;		_ModemEvtParser
 22647 ;; This function uses a non-reentrant model
 22648 ;;
 22649                           
 22650                           	psect	text105
 22651  0051F6                     __ptext105:
 22652                           	opt stack 0
 22653  0051F6                     _StringCompare:
 22654                           	opt stack 15
 22655                           
 22656                           ;sf.c: 77: UINT16 Index = 0;
 22657                           
 22658                           ; BSR set to: 0
 22659                           ;incstack = 0
 22660  0051F6  0E00               	movlw	0
 22661  0051F8  0100               	movlb	0	; () banked
 22662  0051FA  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 22663  0051FC  0E00               	movlw	0
 22664  0051FE  6F86               	movwf	StringCompare@Index& (0+255),b
 22665                           
 22666                           ;sf.c: 78: UINT8 Result = 1;
 22667  005200  0E01               	movlw	1
 22668  005202  6F85               	movwf	StringCompare@Result& (0+255),b
 22669                           
 22670                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 22671  005204  0E00               	movlw	0
 22672  005206  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 22673  005208  0E00               	movlw	0
 22674  00520A  6F86               	movwf	StringCompare@Index& (0+255),b
 22675  00520C  D015               	goto	l2197
 22676  00520E                     
 22677                           ; BSR set to: 0
 22678                           ;sf.c: 82: {
 22679                           ;sf.c: 83: if (String1[Index] != String2[Index])
 22680                           
 22681                           ; BSR set to: 0
 22682  00520E  5186               	movf	StringCompare@Index& (0+255),w,b
 22683  005210  257F               	addwf	StringCompare@String2& (0+255),w,b
 22684  005212  6ED9               	movwf	fsr2l,c
 22685  005214  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 22686  005216  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 22687  005218  6EDA               	movwf	fsr2h,c
 22688  00521A  5186               	movf	StringCompare@Index& (0+255),w,b
 22689  00521C  257D               	addwf	StringCompare@String1& (0+255),w,b
 22690  00521E  6EE1               	movwf	fsr1l,c
 22691  005220  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 22692  005222  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 22693  005224  6EE2               	movwf	fsr1h,c
 22694  005226  50DE               	movf	postinc2,w,c
 22695  005228  18E6               	xorwf	postinc1,w,c
 22696  00522A  B4D8               	btfsc	status,2,c
 22697  00522C  D003               	goto	l2199
 22698                           
 22699                           ; BSR set to: 0
 22700                           ;sf.c: 84: {
 22701                           ;sf.c: 85: Result = 0;
 22702  00522E  0E00               	movlw	0
 22703  005230  6F85               	movwf	StringCompare@Result& (0+255),b
 22704                           
 22705                           ;sf.c: 86: break;
 22706  005232  D008               	goto	u7180
 22707  005234                     l2199:
 22708                           
 22709                           ; BSR set to: 0
 22710                           
 22711                           ; BSR set to: 0
 22712  005234  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 22713  005236  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 22714  005238                     l2197:
 22715                           
 22716                           ; BSR set to: 0
 22717                           
 22718                           ; BSR set to: 0
 22719  005238  5181               	movf	StringCompare@Len& (0+255),w,b
 22720  00523A  5D86               	subwf	StringCompare@Index& (0+255),w,b
 22721  00523C  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 22722  00523E  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 22723  005240  A0D8               	btfss	status,0,c
 22724  005242  D7E5               	goto	l2198
 22725  005244                     u7180:
 22726                           
 22727                           ; BSR set to: 0
 22728                           ;sf.c: 87: }
 22729                           ;sf.c: 88: }
 22730                           ;sf.c: 91: return Result;
 22731                           
 22732                           ; BSR set to: 0
 22733  005244  5185               	movf	StringCompare@Result& (0+255),w,b
 22734  005246  0012               	return	
 22735  005248                     __end_of_StringCompare:
 22736                           	opt stack 0
 22737                           tosu	equ	0xFFF
 22738                           tosh	equ	0xFFE
 22739                           tosl	equ	0xFFD
 22740                           pclath	equ	0xFFA
 22741                           tblptru	equ	0xFF8
 22742                           tblptrh	equ	0xFF7
 22743                           tblptrl	equ	0xFF6
 22744                           tablat	equ	0xFF5
 22745                           prodh	equ	0xFF4
 22746                           prodl	equ	0xFF3
 22747                           intcon	equ	0xFF2
 22748                           intcon2	equ	0xFF1
 22749                           intcon3	equ	0xFF0
 22750                           indf0	equ	0xFEF
 22751                           postinc0	equ	0xFEE
 22752                           plusw0	equ	0xFEB
 22753                           fsr0h	equ	0xFEA
 22754                           fsr0l	equ	0xFE9
 22755                           wreg	equ	0xFE8
 22756                           indf1	equ	0xFE7
 22757                           postinc1	equ	0xFE6
 22758                           postdec1	equ	0xFE5
 22759                           plusw1	equ	0xFE3
 22760                           fsr1h	equ	0xFE2
 22761                           fsr1l	equ	0xFE1
 22762                           indf2	equ	0xFDF
 22763                           postinc2	equ	0xFDE
 22764                           postdec2	equ	0xFDD
 22765                           plusw2	equ	0xFDB
 22766                           fsr2h	equ	0xFDA
 22767                           fsr2l	equ	0xFD9
 22768                           status	equ	0xFD8
 22769                           
 22770 ;; *************** function _GetSmsSm *****************
 22771 ;; Defined at:
 22772 ;;		line 566 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22773 ;; Parameters:    Size  Location     Type
 22774 ;;		None
 22775 ;; Auto vars:     Size  Location     Type
 22776 ;;		None
 22777 ;; Return value:  Size  Location     Type
 22778 ;;                  1    wreg      void 
 22779 ;; Registers used:
 22780 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22781 ;; Tracked objects:
 22782 ;;		On entry : 0/0
 22783 ;;		On exit  : 0/0
 22784 ;;		Unchanged: 0/0
 22785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22790 ;;Total ram usage:        0 bytes
 22791 ;; Hardware stack levels used:    1
 22792 ;; Hardware stack levels required when called:   13
 22793 ;; This function calls:
 22794 ;;		_GenerateEvt
 22795 ;;		_ReceiveEvt
 22796 ;;		_StringCopy
 22797 ;;		_Uart_WriteConstString
 22798 ;; This function is called by:
 22799 ;;		_Mdm_MainTask
 22800 ;; This function uses a non-reentrant model
 22801 ;;
 22802                           
 22803                           	psect	text106
 22804  002F7C                     __ptext106:
 22805                           	opt stack 0
 22806  002F7C                     _GetSmsSm:
 22807                           	opt stack 14
 22808                           
 22809                           ;mdm_gsm_gprs.c: 568: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 22810                           ;mdm_gsm_gprs.c: 571: if (MdmStatus == ModemConfigured)
 22811                           
 22812                           ; BSR set to: 0
 22813                           ;incstack = 0
 22814  002F7C  0E03               	movlw	3
 22815  002F7E  0100               	movlb	0	; () banked
 22816  002F80  19CF               	xorwf	_MdmStatus& (0+255),w,b
 22817  002F82  A4D8               	btfss	status,2,c
 22818  002F84  0012               	return	
 22819  002F86  D060               	goto	l1060
 22820  002F88                     
 22821                           ;mdm_gsm_gprs.c: 577: if (ReceiveEvt(&GetSmsText))
 22822                           
 22823                           ; BSR set to: 0
 22824  002F88  0EDA               	movlw	low _GetSmsText
 22825  002F8A  0100               	movlb	0	; () banked
 22826  002F8C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22827  002F8E  0E00               	movlw	high _GetSmsText
 22828  002F90  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22829  002F92  EC34  F02D         	call	_ReceiveEvt	;wreg free
 22830  002F96  0900               	iorlw	0
 22831  002F98  B4D8               	btfsc	status,2,c
 22832  002F9A  0012               	return	
 22833                           
 22834                           ;mdm_gsm_gprs.c: 578: {
 22835                           ;mdm_gsm_gprs.c: 580: GetSmsState = GetSms_SendAtCmd;
 22836  002F9C  0E01               	movlw	1
 22837  002F9E  6E26               	movwf	GetSmsSm@GetSmsState,c
 22838                           
 22839                           ;mdm_gsm_gprs.c: 581: }
 22840                           ;mdm_gsm_gprs.c: 582: break;
 22841  002FA0  0012               	return	
 22842  002FA2                     
 22843                           ;mdm_gsm_gprs.c: 586: Uart_WriteConstString(1,"AT+CMGR=1\r");
 22844  002FA2  0EC2               	movlw	low STR_4
 22845  002FA4  0100               	movlb	0	; () banked
 22846  002FA6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22847  002FA8  0EFF               	movlw	high STR_4
 22848  002FAA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22849  002FAC  0E01               	movlw	1
 22850  002FAE  EC02  F02B         	call	_Uart_WriteConstString
 22851                           
 22852                           ;mdm_gsm_gprs.c: 588: GetSmsState = GetSms_StoreHeader;
 22853  002FB2  0E02               	movlw	2
 22854  002FB4  6E26               	movwf	GetSmsSm@GetSmsState,c
 22855                           
 22856                           ;mdm_gsm_gprs.c: 589: break;
 22857  002FB6  0012               	return	
 22858  002FB8                     
 22859                           ;mdm_gsm_gprs.c: 593: if (ReceiveEvt(&NewStringReceived))
 22860  002FB8  0E3C               	movlw	low _NewStringReceived
 22861  002FBA  0100               	movlb	0	; () banked
 22862  002FBC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22863  002FBE  0E00               	movlw	high _NewStringReceived
 22864  002FC0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22865  002FC2  EC34  F02D         	call	_ReceiveEvt	;wreg free
 22866  002FC6  0900               	iorlw	0
 22867  002FC8  B4D8               	btfsc	status,2,c
 22868  002FCA  0012               	return	
 22869                           
 22870                           ;mdm_gsm_gprs.c: 594: {
 22871                           ;mdm_gsm_gprs.c: 595: if (RxBuffer[0] != 0)
 22872  002FCC  EE2C  F058         	lfsr	2,_RxBuffer
 22873  002FD0  50DF               	movf	indf2,w,c
 22874  002FD2  B4D8               	btfsc	status,2,c
 22875  002FD4  0012               	return	
 22876                           
 22877                           ;mdm_gsm_gprs.c: 596: {
 22878                           ;mdm_gsm_gprs.c: 598: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 22879  002FD6  0E58               	movlw	low _RxBuffer
 22880  002FD8  0100               	movlb	0	; () banked
 22881  002FDA  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22882  002FDC  0E0C               	movlw	high _RxBuffer
 22883  002FDE  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22884  002FE0  0E00               	movlw	low _Mdm_SmsRx
 22885  002FE2  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22886  002FE4  0E07               	movlw	high _Mdm_SmsRx
 22887  002FE6  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22888  002FE8  C0BE  F081         	movff	_RxLen,StringCopy@Len
 22889  002FEC  C0BF  F082         	movff	_RxLen+1,StringCopy@Len+1
 22890  002FF0  ECE6  F026         	call	_StringCopy	;wreg free
 22891                           
 22892                           ;mdm_gsm_gprs.c: 600: Mdm_SmsRx.HeadLen = RxLen;
 22893  002FF4  C0BE  F782         	movff	_RxLen,_Mdm_SmsRx+130
 22894                           
 22895                           ;mdm_gsm_gprs.c: 602: GetSmsState = GetSms_StoreText;
 22896  002FF8  0E03               	movlw	3
 22897  002FFA  6E26               	movwf	GetSmsSm@GetSmsState,c
 22898                           
 22899                           ;mdm_gsm_gprs.c: 603: }
 22900                           ;mdm_gsm_gprs.c: 604: }
 22901                           ;mdm_gsm_gprs.c: 605: break;
 22902  002FFC  0012               	return	
 22903  002FFE                     
 22904                           ;mdm_gsm_gprs.c: 609: if (ReceiveEvt(&NewStringReceived))
 22905  002FFE  0E3C               	movlw	low _NewStringReceived
 22906  003000  0100               	movlb	0	; () banked
 22907  003002  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22908  003004  0E00               	movlw	high _NewStringReceived
 22909  003006  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22910  003008  EC34  F02D         	call	_ReceiveEvt	;wreg free
 22911  00300C  0900               	iorlw	0
 22912  00300E  B4D8               	btfsc	status,2,c
 22913  003010  0012               	return	
 22914                           
 22915                           ;mdm_gsm_gprs.c: 610: {
 22916                           ;mdm_gsm_gprs.c: 612: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 22917  003012  0E58               	movlw	low _RxBuffer
 22918  003014  0100               	movlb	0	; () banked
 22919  003016  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22920  003018  0E0C               	movlw	high _RxBuffer
 22921  00301A  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22922  00301C  0E50               	movlw	low (_Mdm_SmsRx+80)
 22923  00301E  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22924  003020  0E07               	movlw	high (_Mdm_SmsRx+80)
 22925  003022  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22926  003024  C0BE  F081         	movff	_RxLen,StringCopy@Len
 22927  003028  C0BF  F082         	movff	_RxLen+1,StringCopy@Len+1
 22928  00302C  ECE6  F026         	call	_StringCopy	;wreg free
 22929                           
 22930                           ;mdm_gsm_gprs.c: 614: Mdm_SmsRx.TextLen = RxLen;
 22931  003030  C0BE  F783         	movff	_RxLen,_Mdm_SmsRx+131
 22932                           
 22933                           ;mdm_gsm_gprs.c: 616: GetSmsState = GetSms_CheckReq;
 22934  003034  0E00               	movlw	0
 22935  003036  6E26               	movwf	GetSmsSm@GetSmsState,c
 22936                           
 22937                           ;mdm_gsm_gprs.c: 618: GenerateEvt(&SmsTxtReady);
 22938  003038  0ED9               	movlw	low _SmsTxtReady
 22939  00303A  0100               	movlb	0	; () banked
 22940  00303C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22941  00303E  0E00               	movlw	high _SmsTxtReady
 22942  003040  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22943  003042  ECDA  F02E         	call	_GenerateEvt	;wreg free
 22944                           
 22945                           ;mdm_gsm_gprs.c: 624: }
 22946                           
 22947                           ;mdm_gsm_gprs.c: 623: break;
 22948                           
 22949                           ;mdm_gsm_gprs.c: 622: default:
 22950                           
 22951                           ;mdm_gsm_gprs.c: 619: }
 22952                           ;mdm_gsm_gprs.c: 620: break;
 22953  003046  0012               	return	
 22954  003048                     l1060:
 22955  003048  5026               	movf	GetSmsSm@GetSmsState,w,c
 22956                           
 22957                           ; Switch size 1, requested type "space"
 22958                           ; Number of cases is 4, Range of values is 0 to 3
 22959                           ; switch strategies available:
 22960                           ; Name         Instructions Cycles
 22961                           ; simple_byte           13     7 (average)
 22962                           ;	Chosen strategy is simple_byte
 22963  00304A  0A00               	xorlw	0	; case 0
 22964  00304C  B4D8               	btfsc	status,2,c
 22965  00304E  D79C               	goto	l1061
 22966  003050  0A01               	xorlw	1	; case 1
 22967  003052  B4D8               	btfsc	status,2,c
 22968  003054  D7A6               	goto	l1064
 22969  003056  0A03               	xorlw	3	; case 2
 22970  003058  B4D8               	btfsc	status,2,c
 22971  00305A  D7AE               	goto	l1065
 22972  00305C  0A01               	xorlw	1	; case 3
 22973  00305E  A4D8               	btfss	status,2,c
 22974  003060  0012               	return	
 22975  003062  D7CD               	goto	l1068
 22976  003064                     __end_of_GetSmsSm:
 22977                           	opt stack 0
 22978                           tosu	equ	0xFFF
 22979                           tosh	equ	0xFFE
 22980                           tosl	equ	0xFFD
 22981                           pclath	equ	0xFFA
 22982                           tblptru	equ	0xFF8
 22983                           tblptrh	equ	0xFF7
 22984                           tblptrl	equ	0xFF6
 22985                           tablat	equ	0xFF5
 22986                           prodh	equ	0xFF4
 22987                           prodl	equ	0xFF3
 22988                           intcon	equ	0xFF2
 22989                           intcon2	equ	0xFF1
 22990                           intcon3	equ	0xFF0
 22991                           indf0	equ	0xFEF
 22992                           postinc0	equ	0xFEE
 22993                           plusw0	equ	0xFEB
 22994                           fsr0h	equ	0xFEA
 22995                           fsr0l	equ	0xFE9
 22996                           wreg	equ	0xFE8
 22997                           indf1	equ	0xFE7
 22998                           postinc1	equ	0xFE6
 22999                           postdec1	equ	0xFE5
 23000                           plusw1	equ	0xFE3
 23001                           fsr1h	equ	0xFE2
 23002                           fsr1l	equ	0xFE1
 23003                           indf2	equ	0xFDF
 23004                           postinc2	equ	0xFDE
 23005                           postdec2	equ	0xFDD
 23006                           plusw2	equ	0xFDB
 23007                           fsr2h	equ	0xFDA
 23008                           fsr2l	equ	0xFD9
 23009                           status	equ	0xFD8
 23010                           
 23011 ;; *************** function _ConfigureModem *****************
 23012 ;; Defined at:
 23013 ;;		line 414 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23014 ;; Parameters:    Size  Location     Type
 23015 ;;		None
 23016 ;; Auto vars:     Size  Location     Type
 23017 ;;		None
 23018 ;; Return value:  Size  Location     Type
 23019 ;;                  1    wreg      void 
 23020 ;; Registers used:
 23021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23022 ;; Tracked objects:
 23023 ;;		On entry : 0/0
 23024 ;;		On exit  : 0/0
 23025 ;;		Unchanged: 0/0
 23026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23031 ;;Total ram usage:        0 bytes
 23032 ;; Hardware stack levels used:    1
 23033 ;; Hardware stack levels required when called:   14
 23034 ;; This function calls:
 23035 ;;		_GenerateEvt
 23036 ;;		_UartSetConfigLow
 23037 ;;		_Uart_InitUartModule
 23038 ;;		_Uart_WriteConstString
 23039 ;; This function is called by:
 23040 ;;		_Mdm_MainTask
 23041 ;; This function uses a non-reentrant model
 23042 ;;
 23043                           
 23044                           	psect	text107
 23045  003812                     __ptext107:
 23046                           	opt stack 0
 23047  003812                     _ConfigureModem:
 23048                           	opt stack 13
 23049                           
 23050                           ;mdm_gsm_gprs.c: 416: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 23051                           ;mdm_gsm_gprs.c: 417: static MdmConfigStateType NextState = MdmCfg_Init;
 23052                           ;mdm_gsm_gprs.c: 418: static UINT16 DelayValueMs = 0;
 23053                           ;mdm_gsm_gprs.c: 419: static UINT16 DelayCounter = 0;
 23054                           ;mdm_gsm_gprs.c: 421: switch (MdmConfigState)
 23055                           
 23056                           ;incstack = 0
 23057  003812  D052               	goto	l1021
 23058  003814                     
 23059                           ;mdm_gsm_gprs.c: 425: if (MdmStatus == ModemReady)
 23060  003814  0E02               	movlw	2
 23061  003816  0100               	movlb	0	; () banked
 23062  003818  19CF               	xorwf	_MdmStatus& (0+255),w,b
 23063  00381A  A4D8               	btfss	status,2,c
 23064  00381C  0012               	return	
 23065                           
 23066                           ; BSR set to: 0
 23067                           ;mdm_gsm_gprs.c: 426: {
 23068                           ;mdm_gsm_gprs.c: 428: MdmConfigState = MdmCfg_ChangeBaud;
 23069  00381E  0E01               	movlw	1
 23070  003820  6E28               	movwf	ConfigureModem@MdmConfigState,c
 23071                           
 23072                           ; BSR set to: 0
 23073                           ;mdm_gsm_gprs.c: 429: }
 23074                           ;mdm_gsm_gprs.c: 430: break;
 23075  003822  0012               	return	
 23076  003824                     
 23077                           ;mdm_gsm_gprs.c: 434: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 23078                           
 23079                           ; BSR set to: 0
 23080  003824  0E81               	movlw	low STR_2
 23081  003826  0100               	movlb	0	; () banked
 23082  003828  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23083  00382A  0EFF               	movlw	high STR_2
 23084  00382C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23085  00382E  0E01               	movlw	1
 23086  003830  EC02  F02B         	call	_Uart_WriteConstString
 23087                           
 23088                           ;mdm_gsm_gprs.c: 436: UartSetConfigLow();
 23089  003834  ECFB  F027         	call	_UartSetConfigLow	;wreg free
 23090                           
 23091                           ;mdm_gsm_gprs.c: 438: Uart_InitUartModule(1,&UartConfig);
 23092  003838  0E26               	movlw	low _UartConfig
 23093  00383A  0100               	movlb	0	; () banked
 23094  00383C  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 23095  00383E  0E03               	movlw	high _UartConfig
 23096  003840  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 23097  003842  0E01               	movlw	1
 23098  003844  EC5E  F005         	call	_Uart_InitUartModule
 23099                           
 23100                           ;mdm_gsm_gprs.c: 440: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 23101  003848  0E03               	movlw	3
 23102  00384A  0102               	movlb	2	; () banked
 23103  00384C  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 23104  00384E  0EE8               	movlw	232
 23105  003850  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 23106                           
 23107                           ; BSR set to: 2
 23108                           ;mdm_gsm_gprs.c: 442: NextState = MdmCfg_SetMdmEchoMode;
 23109  003852  0E02               	movlw	2
 23110  003854  6E27               	movwf	ConfigureModem@NextState,c
 23111                           
 23112                           ; BSR set to: 2
 23113                           ;mdm_gsm_gprs.c: 443: MdmConfigState = MdmCfg_Delay;
 23114  003856  0E04               	movlw	4
 23115  003858  6E28               	movwf	ConfigureModem@MdmConfigState,c
 23116                           
 23117                           ;mdm_gsm_gprs.c: 444: break;
 23118  00385A  0012               	return	
 23119  00385C                     
 23120                           ;mdm_gsm_gprs.c: 448: Uart_WriteConstString(1,"ATE0\r\n");
 23121                           
 23122                           ; BSR set to: 2
 23123  00385C  0EDE               	movlw	low STR_3
 23124  00385E  0100               	movlb	0	; () banked
 23125  003860  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23126  003862  0EFF               	movlw	high STR_3
 23127  003864  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23128  003866  0E01               	movlw	1
 23129  003868  EC02  F02B         	call	_Uart_WriteConstString
 23130                           
 23131                           ;mdm_gsm_gprs.c: 450: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 23132  00386C  0E03               	movlw	3
 23133  00386E  0102               	movlb	2	; () banked
 23134  003870  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 23135  003872  0EE8               	movlw	232
 23136  003874  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 23137                           
 23138                           ; BSR set to: 2
 23139                           ;mdm_gsm_gprs.c: 452: NextState = MdmCfg_UpdateMdmSts;
 23140  003876  0E05               	movlw	5
 23141  003878  6E27               	movwf	ConfigureModem@NextState,c
 23142                           
 23143                           ; BSR set to: 2
 23144                           ;mdm_gsm_gprs.c: 453: MdmConfigState = MdmCfg_Delay;
 23145  00387A  0E04               	movlw	4
 23146  00387C  6E28               	movwf	ConfigureModem@MdmConfigState,c
 23147                           
 23148                           ;mdm_gsm_gprs.c: 454: break;
 23149  00387E  0012               	return	
 23150  003880                     
 23151                           ;mdm_gsm_gprs.c: 458: DelayCounter++;
 23152                           
 23153                           ; BSR set to: 2
 23154  003880  0102               	movlb	2	; () banked
 23155  003882  4BD8               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 23156  003884  2BD9               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 23157                           
 23158                           ; BSR set to: 2
 23159                           ;mdm_gsm_gprs.c: 460: if (DelayCounter >= DelayValueMs)
 23160  003886  51DA               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 23161  003888  5DD8               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 23162  00388A  51DB               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 23163  00388C  59D9               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 23164  00388E  A0D8               	btfss	status,0,c
 23165  003890  0012               	return	
 23166                           
 23167                           ; BSR set to: 2
 23168                           ;mdm_gsm_gprs.c: 461: {
 23169                           ;mdm_gsm_gprs.c: 463: DelayCounter = 0;
 23170  003892  0E00               	movlw	0
 23171  003894  6FD9               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 23172  003896  0E00               	movlw	0
 23173  003898  6FD8               	movwf	ConfigureModem@DelayCounter& (0+255),b
 23174                           
 23175                           ; BSR set to: 2
 23176                           ;mdm_gsm_gprs.c: 465: MdmConfigState = NextState;
 23177  00389A  C027  F028         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 23178                           
 23179                           ; BSR set to: 2
 23180                           ;mdm_gsm_gprs.c: 466: }
 23181                           ;mdm_gsm_gprs.c: 467: break;
 23182  00389E  0012               	return	
 23183  0038A0                     
 23184                           ;mdm_gsm_gprs.c: 471: MdmStatus = ModemConfigured;
 23185                           
 23186                           ; BSR set to: 2
 23187  0038A0  0E03               	movlw	3
 23188  0038A2  0100               	movlb	0	; () banked
 23189  0038A4  6FCF               	movwf	_MdmStatus& (0+255),b
 23190                           
 23191                           ; BSR set to: 0
 23192                           ;mdm_gsm_gprs.c: 473: GenerateEvt(&MdmStsReady);
 23193  0038A6  0E39               	movlw	low _MdmStsReady
 23194  0038A8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23195  0038AA  0E00               	movlw	high _MdmStsReady
 23196  0038AC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23197  0038AE  ECDA  F02E         	call	_GenerateEvt	;wreg free
 23198                           
 23199                           ;mdm_gsm_gprs.c: 475: MdmConfigState = MdmCfg_Stop;
 23200  0038B2  0E06               	movlw	6
 23201  0038B4  6E28               	movwf	ConfigureModem@MdmConfigState,c
 23202                           
 23203                           ;mdm_gsm_gprs.c: 483: }
 23204                           
 23205                           ;mdm_gsm_gprs.c: 482: break;
 23206                           
 23207                           ;mdm_gsm_gprs.c: 481: default:
 23208                           
 23209                           ;mdm_gsm_gprs.c: 479: break;
 23210                           
 23211                           ;mdm_gsm_gprs.c: 478: case MdmCfg_Stop:
 23212                           
 23213                           ;mdm_gsm_gprs.c: 476: break;
 23214  0038B6  0012               	return	
 23215  0038B8                     l1021:
 23216  0038B8  5028               	movf	ConfigureModem@MdmConfigState,w,c
 23217                           
 23218                           ; Switch size 1, requested type "space"
 23219                           ; Number of cases is 6, Range of values is 0 to 6
 23220                           ; switch strategies available:
 23221                           ; Name         Instructions Cycles
 23222                           ; simple_byte           19    10 (average)
 23223                           ;	Chosen strategy is simple_byte
 23224  0038BA  0A00               	xorlw	0	; case 0
 23225  0038BC  B4D8               	btfsc	status,2,c
 23226  0038BE  D7AA               	goto	l1022
 23227  0038C0  0A01               	xorlw	1	; case 1
 23228  0038C2  B4D8               	btfsc	status,2,c
 23229  0038C4  D7AF               	goto	l1025
 23230  0038C6  0A03               	xorlw	3	; case 2
 23231  0038C8  B4D8               	btfsc	status,2,c
 23232  0038CA  D7C8               	goto	l1026
 23233  0038CC  0A06               	xorlw	6	; case 4
 23234  0038CE  B4D8               	btfsc	status,2,c
 23235  0038D0  D7D7               	goto	l1027
 23236  0038D2  0A01               	xorlw	1	; case 5
 23237  0038D4  B4D8               	btfsc	status,2,c
 23238  0038D6  D7E4               	goto	l1029
 23239  0038D8  0A03               	xorlw	3	; case 6
 23240  0038DA  0012               	return	
 23241  0038DC                     __end_of_ConfigureModem:
 23242                           	opt stack 0
 23243                           tosu	equ	0xFFF
 23244                           tosh	equ	0xFFE
 23245                           tosl	equ	0xFFD
 23246                           pclath	equ	0xFFA
 23247                           tblptru	equ	0xFF8
 23248                           tblptrh	equ	0xFF7
 23249                           tblptrl	equ	0xFF6
 23250                           tablat	equ	0xFF5
 23251                           prodh	equ	0xFF4
 23252                           prodl	equ	0xFF3
 23253                           intcon	equ	0xFF2
 23254                           intcon2	equ	0xFF1
 23255                           intcon3	equ	0xFF0
 23256                           indf0	equ	0xFEF
 23257                           postinc0	equ	0xFEE
 23258                           plusw0	equ	0xFEB
 23259                           fsr0h	equ	0xFEA
 23260                           fsr0l	equ	0xFE9
 23261                           wreg	equ	0xFE8
 23262                           indf1	equ	0xFE7
 23263                           postinc1	equ	0xFE6
 23264                           postdec1	equ	0xFE5
 23265                           plusw1	equ	0xFE3
 23266                           fsr1h	equ	0xFE2
 23267                           fsr1l	equ	0xFE1
 23268                           indf2	equ	0xFDF
 23269                           postinc2	equ	0xFDE
 23270                           postdec2	equ	0xFDD
 23271                           plusw2	equ	0xFDB
 23272                           fsr2h	equ	0xFDA
 23273                           fsr2l	equ	0xFD9
 23274                           status	equ	0xFD8
 23275                           
 23276 ;; *************** function _Uart_InitUartModule *****************
 23277 ;; Defined at:
 23278 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23279 ;; Parameters:    Size  Location     Type
 23280 ;;  Module          1    wreg     unsigned char 
 23281 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 23282 ;;		 -> UartConfig(21), 
 23283 ;; Auto vars:     Size  Location     Type
 23284 ;;  Module          1   65[BANK0 ] unsigned char 
 23285 ;; Return value:  Size  Location     Type
 23286 ;;                  1    wreg      void 
 23287 ;; Registers used:
 23288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23289 ;; Tracked objects:
 23290 ;;		On entry : 0/0
 23291 ;;		On exit  : 0/0
 23292 ;;		Unchanged: 0/0
 23293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23294 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23295 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23296 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23297 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23298 ;;Total ram usage:        5 bytes
 23299 ;; Hardware stack levels used:    1
 23300 ;; Hardware stack levels required when called:   13
 23301 ;; This function calls:
 23302 ;;		_SetUartBaudRate
 23303 ;; This function is called by:
 23304 ;;		_ConfigureModem
 23305 ;;		_Mdm_MainTask
 23306 ;; This function uses a non-reentrant model
 23307 ;;
 23308                           
 23309                           	psect	text108
 23310  000ABC                     __ptext108:
 23311                           	opt stack 0
 23312  000ABC                     _Uart_InitUartModule:
 23313                           	opt stack 14
 23314                           
 23315                           ;incstack = 0
 23316                           ;Uart_InitUartModule@Module stored from wreg
 23317  000ABC  0100               	movlb	0	; () banked
 23318  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 23319                           
 23320                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 23321  000AC0  0100               	movlb	0	; () banked
 23322  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 23323  000AC4  A4D8               	btfss	status,2,c
 23324  000AC6  D0BE               	goto	l668
 23325                           
 23326                           ; BSR set to: 0
 23327                           ;uart_drv.c: 291: {
 23328                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 23329  000AC8  9C94               	bcf	3988,6,c	;volatile
 23330                           
 23331                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 23332  000ACA  8E94               	bsf	3988,7,c	;volatile
 23333                           
 23334                           ; BSR set to: 0
 23335                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 23336  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 23337  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 23338  000AD4  0E01               	movlw	1
 23339  000AD6  ECE4  F013         	call	_SetUartBaudRate
 23340                           
 23341                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 23342  000ADA  0E00               	movlw	0
 23343  000ADC  6EAD               	movwf	4013,c	;volatile
 23344                           
 23345                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 23346  000ADE  0100               	movlb	0	; () banked
 23347  000AE0  EE20 F004          	lfsr	2,4
 23348  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23349  000AE6  26D9               	addwf	fsr2l,f,c
 23350  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23351  000AEA  22DA               	addwfc	fsr2h,f,c
 23352  000AEC  50DF               	movf	indf2,w,c
 23353  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23354  000AF0  0E06               	movlw	6
 23355  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23356  000AF4                     u11295:
 23357  000AF4  90D8               	bcf	status,0,c
 23358  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23359  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23360  000AFA  D7FC               	goto	u11295
 23361  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23362  000AFE  12AD               	iorwf	4013,f,c	;volatile
 23363                           
 23364                           ; BSR set to: 0
 23365                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 23366  000B00  EE20 F006          	lfsr	2,6
 23367  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23368  000B06  26D9               	addwf	fsr2l,f,c
 23369  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23370  000B0A  22DA               	addwfc	fsr2h,f,c
 23371  000B0C  50DF               	movf	indf2,w,c
 23372  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23373  000B10  0E05               	movlw	5
 23374  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23375  000B14                     u11305:
 23376  000B14  90D8               	bcf	status,0,c
 23377  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23378  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23379  000B1A  D7FC               	goto	u11305
 23380  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23381  000B1E  12AD               	iorwf	4013,f,c	;volatile
 23382                           
 23383                           ; BSR set to: 0
 23384                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 23385  000B20  EE20 F001          	lfsr	2,1
 23386  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23387  000B26  26D9               	addwf	fsr2l,f,c
 23388  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23389  000B2A  22DA               	addwfc	fsr2h,f,c
 23390  000B2C  50DF               	movf	indf2,w,c
 23391  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23392  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23393  000B32  0BF0               	andlw	240
 23394  000B34  12AD               	iorwf	4013,f,c	;volatile
 23395                           
 23396                           ; BSR set to: 0
 23397                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 23398  000B36  EE20 F008          	lfsr	2,8
 23399  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23400  000B3C  26D9               	addwf	fsr2l,f,c
 23401  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23402  000B40  22DA               	addwfc	fsr2h,f,c
 23403  000B42  50DF               	movf	indf2,w,c
 23404  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23405  000B46  90D8               	bcf	status,0,c
 23406  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23407  000B4A  90D8               	bcf	status,0,c
 23408  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23409  000B4E  90D8               	bcf	status,0,c
 23410  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23411  000B52  12AD               	iorwf	4013,f,c	;volatile
 23412                           
 23413                           ; BSR set to: 0
 23414                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 23415  000B54  EE20 F003          	lfsr	2,3
 23416  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23417  000B5A  26D9               	addwf	fsr2l,f,c
 23418  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23419  000B5E  22DA               	addwfc	fsr2h,f,c
 23420  000B60  50DF               	movf	indf2,w,c
 23421  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23422  000B64  90D8               	bcf	status,0,c
 23423  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23424  000B68  90D8               	bcf	status,0,c
 23425  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23426  000B6C  12AD               	iorwf	4013,f,c	;volatile
 23427                           
 23428                           ; BSR set to: 0
 23429                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 23430  000B6E  0E00               	movlw	0
 23431  000B70  6EAC               	movwf	4012,c	;volatile
 23432                           
 23433                           ; BSR set to: 0
 23434                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 23435  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 23436  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 23437  000B7A  50DF               	movf	indf2,w,c
 23438  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23439  000B7E  0E00               	movlw	0
 23440  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 23441  000B82  0E80               	movlw	128
 23442  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23443  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23444  000B88  12AC               	iorwf	4012,f,c	;volatile
 23445                           
 23446                           ; BSR set to: 0
 23447                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 23448  000B8A  EE20 F005          	lfsr	2,5
 23449  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23450  000B90  26D9               	addwf	fsr2l,f,c
 23451  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23452  000B94  22DA               	addwfc	fsr2h,f,c
 23453  000B96  50DF               	movf	indf2,w,c
 23454  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23455  000B9A  0E06               	movlw	6
 23456  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23457  000B9E                     u11315:
 23458  000B9E  90D8               	bcf	status,0,c
 23459  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23460  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23461  000BA4  D7FC               	goto	u11315
 23462  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23463  000BA8  12AC               	iorwf	4012,f,c	;volatile
 23464                           
 23465                           ; BSR set to: 0
 23466                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 23467  000BAA  EE20 F007          	lfsr	2,7
 23468  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23469  000BB0  26D9               	addwf	fsr2l,f,c
 23470  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23471  000BB4  22DA               	addwfc	fsr2h,f,c
 23472  000BB6  50DF               	movf	indf2,w,c
 23473  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23474  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23475  000BBC  0BF0               	andlw	240
 23476  000BBE  12AC               	iorwf	4012,f,c	;volatile
 23477                           
 23478                           ; BSR set to: 0
 23479                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 23480  000BC0  0E00               	movlw	0
 23481  000BC2  6E7E               	movwf	3966,c	;volatile
 23482                           
 23483                           ; BSR set to: 0
 23484                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 23485  000BC4  EE20 F002          	lfsr	2,2
 23486  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23487  000BCA  26D9               	addwf	fsr2l,f,c
 23488  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23489  000BCE  22DA               	addwfc	fsr2h,f,c
 23490  000BD0  50DF               	movf	indf2,w,c
 23491  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23492  000BD4  90D8               	bcf	status,0,c
 23493  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23494  000BD8  90D8               	bcf	status,0,c
 23495  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23496  000BDC  90D8               	bcf	status,0,c
 23497  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23498  000BE0  127E               	iorwf	3966,f,c	;volatile
 23499                           
 23500                           ; BSR set to: 0
 23501                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 23502  000BE2  EE20 F00A          	lfsr	2,10
 23503  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23504  000BE8  26D9               	addwf	fsr2l,f,c
 23505  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23506  000BEC  22DA               	addwfc	fsr2h,f,c
 23507  000BEE  50DF               	movf	indf2,w,c
 23508  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23509  000BF2  90D8               	bcf	status,0,c
 23510  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23511  000BF6  127E               	iorwf	3966,f,c	;volatile
 23512                           
 23513                           ; BSR set to: 0
 23514                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 23515  000BF8  EE20 F009          	lfsr	2,9
 23516  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23517  000BFE  26D9               	addwf	fsr2l,f,c
 23518  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23519  000C02  22DA               	addwfc	fsr2h,f,c
 23520  000C04  50DF               	movf	indf2,w,c
 23521  000C06  127E               	iorwf	3966,f,c	;volatile
 23522                           
 23523                           ; BSR set to: 0
 23524                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 23525  000C08  EE20 F00B          	lfsr	2,11
 23526  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23527  000C0E  26D9               	addwf	fsr2l,f,c
 23528  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23529  000C12  22DA               	addwfc	fsr2h,f,c
 23530  000C14  50DF               	movf	indf2,w,c
 23531  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23532  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 23533  000C1A  509D               	movf	3997,w,c	;volatile
 23534  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23535  000C1E  0BEF               	andlw	-17
 23536  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23537  000C22  6E9D               	movwf	3997,c	;volatile
 23538                           
 23539                           ; BSR set to: 0
 23540                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 23541  000C24  EE20 F00C          	lfsr	2,12
 23542  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23543  000C2A  26D9               	addwf	fsr2l,f,c
 23544  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23545  000C2E  22DA               	addwfc	fsr2h,f,c
 23546  000C30  50DF               	movf	indf2,w,c
 23547  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23548  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 23549  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 23550  000C38  509D               	movf	3997,w,c	;volatile
 23551  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23552  000C3C  0BDF               	andlw	-33
 23553  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23554  000C40  6E9D               	movwf	3997,c	;volatile
 23555                           
 23556                           ;uart_drv.c: 326: }
 23557  000C42  0012               	return	
 23558  000C44                     l668:
 23559                           
 23560                           ; BSR set to: 0
 23561                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 23562                           
 23563                           ; BSR set to: 0
 23564  000C44  0E02               	movlw	2
 23565  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 23566  000C48  A4D8               	btfss	status,2,c
 23567  000C4A  0012               	return	
 23568                           
 23569                           ; BSR set to: 0
 23570                           ;uart_drv.c: 328: {
 23571                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 23572  000C4C  9094               	bcf	3988,0,c	;volatile
 23573                           
 23574                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 23575  000C4E  8294               	bsf	3988,1,c	;volatile
 23576                           
 23577                           ; BSR set to: 0
 23578                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 23579  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 23580  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 23581  000C58  0E02               	movlw	2
 23582  000C5A  ECE4  F013         	call	_SetUartBaudRate
 23583                           
 23584                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 23585  000C5E  0E00               	movlw	0
 23586  000C60  6EA8               	movwf	4008,c	;volatile
 23587                           
 23588                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 23589  000C62  0100               	movlb	0	; () banked
 23590  000C64  EE20 F004          	lfsr	2,4
 23591  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23592  000C6A  26D9               	addwf	fsr2l,f,c
 23593  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23594  000C6E  22DA               	addwfc	fsr2h,f,c
 23595  000C70  50DF               	movf	indf2,w,c
 23596  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23597  000C74  0E06               	movlw	6
 23598  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23599  000C78                     u11335:
 23600  000C78  90D8               	bcf	status,0,c
 23601  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23602  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23603  000C7E  D7FC               	goto	u11335
 23604  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23605  000C82  12A8               	iorwf	4008,f,c	;volatile
 23606                           
 23607                           ; BSR set to: 0
 23608                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 23609  000C84  EE20 F006          	lfsr	2,6
 23610  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23611  000C8A  26D9               	addwf	fsr2l,f,c
 23612  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23613  000C8E  22DA               	addwfc	fsr2h,f,c
 23614  000C90  50DF               	movf	indf2,w,c
 23615  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23616  000C94  0E05               	movlw	5
 23617  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23618  000C98                     u11345:
 23619  000C98  90D8               	bcf	status,0,c
 23620  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23621  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23622  000C9E  D7FC               	goto	u11345
 23623  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23624  000CA2  12A8               	iorwf	4008,f,c	;volatile
 23625                           
 23626                           ; BSR set to: 0
 23627                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 23628  000CA4  EE20 F001          	lfsr	2,1
 23629  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23630  000CAA  26D9               	addwf	fsr2l,f,c
 23631  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23632  000CAE  22DA               	addwfc	fsr2h,f,c
 23633  000CB0  50DF               	movf	indf2,w,c
 23634  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23635  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23636  000CB6  0BF0               	andlw	240
 23637  000CB8  12A8               	iorwf	4008,f,c	;volatile
 23638                           
 23639                           ; BSR set to: 0
 23640                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 23641  000CBA  EE20 F008          	lfsr	2,8
 23642  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23643  000CC0  26D9               	addwf	fsr2l,f,c
 23644  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23645  000CC4  22DA               	addwfc	fsr2h,f,c
 23646  000CC6  50DF               	movf	indf2,w,c
 23647  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23648  000CCA  90D8               	bcf	status,0,c
 23649  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23650  000CCE  90D8               	bcf	status,0,c
 23651  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23652  000CD2  90D8               	bcf	status,0,c
 23653  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23654  000CD6  12A8               	iorwf	4008,f,c	;volatile
 23655                           
 23656                           ; BSR set to: 0
 23657                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 23658  000CD8  EE20 F003          	lfsr	2,3
 23659  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23660  000CDE  26D9               	addwf	fsr2l,f,c
 23661  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23662  000CE2  22DA               	addwfc	fsr2h,f,c
 23663  000CE4  50DF               	movf	indf2,w,c
 23664  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23665  000CE8  90D8               	bcf	status,0,c
 23666  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23667  000CEC  90D8               	bcf	status,0,c
 23668  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23669  000CF0  12A8               	iorwf	4008,f,c	;volatile
 23670                           
 23671                           ; BSR set to: 0
 23672                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 23673  000CF2  0E00               	movlw	0
 23674  000CF4  6E9C               	movwf	3996,c	;volatile
 23675                           
 23676                           ; BSR set to: 0
 23677                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 23678  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 23679  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 23680  000CFE  50DF               	movf	indf2,w,c
 23681  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23682  000D02  0E00               	movlw	0
 23683  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 23684  000D06  0E80               	movlw	128
 23685  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23686  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23687  000D0C  129C               	iorwf	3996,f,c	;volatile
 23688                           
 23689                           ; BSR set to: 0
 23690                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 23691  000D0E  EE20 F005          	lfsr	2,5
 23692  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23693  000D14  26D9               	addwf	fsr2l,f,c
 23694  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23695  000D18  22DA               	addwfc	fsr2h,f,c
 23696  000D1A  50DF               	movf	indf2,w,c
 23697  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23698  000D1E  0E06               	movlw	6
 23699  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23700  000D22                     u11355:
 23701  000D22  90D8               	bcf	status,0,c
 23702  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23703  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23704  000D28  D7FC               	goto	u11355
 23705  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23706  000D2C  129C               	iorwf	3996,f,c	;volatile
 23707                           
 23708                           ; BSR set to: 0
 23709                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 23710  000D2E  EE20 F007          	lfsr	2,7
 23711  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23712  000D34  26D9               	addwf	fsr2l,f,c
 23713  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23714  000D38  22DA               	addwfc	fsr2h,f,c
 23715  000D3A  50DF               	movf	indf2,w,c
 23716  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23717  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23718  000D40  0BF0               	andlw	240
 23719  000D42  129C               	iorwf	3996,f,c	;volatile
 23720                           
 23721                           ; BSR set to: 0
 23722                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 23723  000D44  0E00               	movlw	0
 23724  000D46  6E7C               	movwf	3964,c	;volatile
 23725                           
 23726                           ; BSR set to: 0
 23727                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 23728  000D48  EE20 F002          	lfsr	2,2
 23729  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23730  000D4E  26D9               	addwf	fsr2l,f,c
 23731  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23732  000D52  22DA               	addwfc	fsr2h,f,c
 23733  000D54  50DF               	movf	indf2,w,c
 23734  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23735  000D58  90D8               	bcf	status,0,c
 23736  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23737  000D5C  90D8               	bcf	status,0,c
 23738  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23739  000D60  90D8               	bcf	status,0,c
 23740  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23741  000D64  127C               	iorwf	3964,f,c	;volatile
 23742                           
 23743                           ; BSR set to: 0
 23744                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 23745  000D66  EE20 F00A          	lfsr	2,10
 23746  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23747  000D6C  26D9               	addwf	fsr2l,f,c
 23748  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23749  000D70  22DA               	addwfc	fsr2h,f,c
 23750  000D72  50DF               	movf	indf2,w,c
 23751  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23752  000D76  90D8               	bcf	status,0,c
 23753  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23754  000D7A  127C               	iorwf	3964,f,c	;volatile
 23755                           
 23756                           ; BSR set to: 0
 23757                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 23758  000D7C  EE20 F009          	lfsr	2,9
 23759  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23760  000D82  26D9               	addwf	fsr2l,f,c
 23761  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23762  000D86  22DA               	addwfc	fsr2h,f,c
 23763  000D88  50DF               	movf	indf2,w,c
 23764  000D8A  127C               	iorwf	3964,f,c	;volatile
 23765                           
 23766                           ; BSR set to: 0
 23767                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 23768  000D8C  EE20 F00B          	lfsr	2,11
 23769  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23770  000D92  26D9               	addwf	fsr2l,f,c
 23771  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23772  000D96  22DA               	addwfc	fsr2h,f,c
 23773  000D98  50DF               	movf	indf2,w,c
 23774  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23775  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 23776  000D9E  50A3               	movf	4003,w,c	;volatile
 23777  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23778  000DA2  0BEF               	andlw	-17
 23779  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23780  000DA6  6EA3               	movwf	4003,c	;volatile
 23781                           
 23782                           ; BSR set to: 0
 23783                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 23784  000DA8  EE20 F00C          	lfsr	2,12
 23785  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23786  000DAE  26D9               	addwf	fsr2l,f,c
 23787  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23788  000DB2  22DA               	addwfc	fsr2h,f,c
 23789  000DB4  50DF               	movf	indf2,w,c
 23790  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23791  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 23792  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 23793  000DBC  50A3               	movf	4003,w,c	;volatile
 23794  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23795  000DC0  0BDF               	andlw	-33
 23796  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23797  000DC4  6EA3               	movwf	4003,c	;volatile
 23798                           
 23799                           ; BSR set to: 0
 23800  000DC6  0012               	return	
 23801  000DC8                     __end_of_Uart_InitUartModule:
 23802                           	opt stack 0
 23803                           tosu	equ	0xFFF
 23804                           tosh	equ	0xFFE
 23805                           tosl	equ	0xFFD
 23806                           pclath	equ	0xFFA
 23807                           tblptru	equ	0xFF8
 23808                           tblptrh	equ	0xFF7
 23809                           tblptrl	equ	0xFF6
 23810                           tablat	equ	0xFF5
 23811                           prodh	equ	0xFF4
 23812                           prodl	equ	0xFF3
 23813                           intcon	equ	0xFF2
 23814                           intcon2	equ	0xFF1
 23815                           intcon3	equ	0xFF0
 23816                           indf0	equ	0xFEF
 23817                           postinc0	equ	0xFEE
 23818                           plusw0	equ	0xFEB
 23819                           fsr0h	equ	0xFEA
 23820                           fsr0l	equ	0xFE9
 23821                           wreg	equ	0xFE8
 23822                           indf1	equ	0xFE7
 23823                           postinc1	equ	0xFE6
 23824                           postdec1	equ	0xFE5
 23825                           plusw1	equ	0xFE3
 23826                           fsr1h	equ	0xFE2
 23827                           fsr1l	equ	0xFE1
 23828                           indf2	equ	0xFDF
 23829                           postinc2	equ	0xFDE
 23830                           postdec2	equ	0xFDD
 23831                           plusw2	equ	0xFDB
 23832                           fsr2h	equ	0xFDA
 23833                           fsr2l	equ	0xFD9
 23834                           status	equ	0xFD8
 23835                           
 23836 ;; *************** function _SetUartBaudRate *****************
 23837 ;; Defined at:
 23838 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23839 ;; Parameters:    Size  Location     Type
 23840 ;;  Module          1    wreg     unsigned char 
 23841 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 23842 ;;		 -> UartConfig(21), 
 23843 ;; Auto vars:     Size  Location     Type
 23844 ;;  Module          1   57[BANK0 ] unsigned char 
 23845 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 23846 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 23847 ;; Return value:  Size  Location     Type
 23848 ;;                  1    wreg      void 
 23849 ;; Registers used:
 23850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23851 ;; Tracked objects:
 23852 ;;		On entry : 0/0
 23853 ;;		On exit  : 0/0
 23854 ;;		Unchanged: 0/0
 23855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23856 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23857 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23858 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23859 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23860 ;;Total ram usage:        7 bytes
 23861 ;; Hardware stack levels used:    1
 23862 ;; Hardware stack levels required when called:   12
 23863 ;; This function calls:
 23864 ;;		___lldiv
 23865 ;;		___lmul
 23866 ;; This function is called by:
 23867 ;;		_Uart_InitUartModule
 23868 ;; This function uses a non-reentrant model
 23869 ;;
 23870                           
 23871                           	psect	text109
 23872  0027C8                     __ptext109:
 23873                           	opt stack 0
 23874  0027C8                     _SetUartBaudRate:
 23875                           	opt stack 14
 23876                           
 23877                           ; BSR set to: 0
 23878                           ;incstack = 0
 23879                           ;SetUartBaudRate@Module stored from wreg
 23880  0027C8  0100               	movlb	0	; () banked
 23881  0027CA  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 23882                           
 23883                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 23884  0027CC  0E00               	movlw	0
 23885  0027CE  0100               	movlb	0	; () banked
 23886  0027D0  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 23887  0027D2  0E00               	movlw	0
 23888  0027D4  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 23889                           
 23890                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 23891  0027D6  0E00               	movlw	0
 23892  0027D8  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 23893                           
 23894                           ; BSR set to: 0
 23895                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 23896  0027DA  EE20 F002          	lfsr	2,2
 23897  0027DE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23898  0027E0  26D9               	addwf	fsr2l,f,c
 23899  0027E2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23900  0027E4  22DA               	addwfc	fsr2h,f,c
 23901  0027E6  50DF               	movf	indf2,w,c
 23902  0027E8  A4D8               	btfss	status,2,c
 23903  0027EA  D00B               	goto	l625
 23904                           
 23905                           ; BSR set to: 0
 23906  0027EC  EE20 F002          	lfsr	2,2
 23907  0027F0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23908  0027F2  26D9               	addwf	fsr2l,f,c
 23909  0027F4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23910  0027F6  22DA               	addwfc	fsr2h,f,c
 23911  0027F8  50DF               	movf	indf2,w,c
 23912  0027FA  A4D8               	btfss	status,2,c
 23913  0027FC  D002               	goto	l625
 23914                           
 23915                           ; BSR set to: 0
 23916                           ;uart_drv.c: 128: {
 23917                           ;uart_drv.c: 129: DivisionFactor = 64;
 23918  0027FE  0E40               	movlw	64
 23919  002800  D039               	goto	L27
 23920  002802                     l625:
 23921                           
 23922                           ; BSR set to: 0
 23923                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 23924                           
 23925                           ; BSR set to: 0
 23926  002802  EE20 F002          	lfsr	2,2
 23927  002806  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23928  002808  26D9               	addwf	fsr2l,f,c
 23929  00280A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23930  00280C  22DA               	addwfc	fsr2h,f,c
 23931  00280E  04DE               	decf	postinc2,w,c
 23932  002810  A4D8               	btfss	status,2,c
 23933  002812  D009               	goto	l627
 23934                           
 23935                           ; BSR set to: 0
 23936  002814  EE20 F002          	lfsr	2,2
 23937  002818  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23938  00281A  26D9               	addwf	fsr2l,f,c
 23939  00281C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23940  00281E  22DA               	addwfc	fsr2h,f,c
 23941  002820  50DF               	movf	indf2,w,c
 23942  002822  B4D8               	btfsc	status,2,c
 23943  002824  D012               	goto	u10650
 23944  002826                     l627:
 23945                           
 23946                           ; BSR set to: 0
 23947                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 23948                           
 23949                           ; BSR set to: 0
 23950  002826  EE20 F002          	lfsr	2,2
 23951  00282A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23952  00282C  26D9               	addwf	fsr2l,f,c
 23953  00282E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23954  002830  22DA               	addwfc	fsr2h,f,c
 23955  002832  50DF               	movf	indf2,w,c
 23956  002834  A4D8               	btfss	status,2,c
 23957  002836  D00B               	goto	l629
 23958                           
 23959                           ; BSR set to: 0
 23960  002838  EE20 F002          	lfsr	2,2
 23961  00283C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23962  00283E  26D9               	addwf	fsr2l,f,c
 23963  002840  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23964  002842  22DA               	addwfc	fsr2h,f,c
 23965  002844  04DE               	decf	postinc2,w,c
 23966  002846  A4D8               	btfss	status,2,c
 23967  002848  D002               	goto	l629
 23968  00284A                     u10650:
 23969                           
 23970                           ; BSR set to: 0
 23971                           ;uart_drv.c: 136: {
 23972                           ;uart_drv.c: 137: DivisionFactor = 16;
 23973  00284A  0E10               	movlw	16
 23974  00284C  D013               	goto	L27
 23975  00284E                     l629:
 23976                           
 23977                           ; BSR set to: 0
 23978                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 23979                           
 23980                           ; BSR set to: 0
 23981  00284E  EE20 F002          	lfsr	2,2
 23982  002852  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23983  002854  26D9               	addwf	fsr2l,f,c
 23984  002856  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23985  002858  22DA               	addwfc	fsr2h,f,c
 23986  00285A  04DE               	decf	postinc2,w,c
 23987  00285C  A4D8               	btfss	status,2,c
 23988  00285E  D00B               	goto	l631
 23989                           
 23990                           ; BSR set to: 0
 23991  002860  EE20 F002          	lfsr	2,2
 23992  002864  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23993  002866  26D9               	addwf	fsr2l,f,c
 23994  002868  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23995  00286A  22DA               	addwfc	fsr2h,f,c
 23996  00286C  04DE               	decf	postinc2,w,c
 23997  00286E  A4D8               	btfss	status,2,c
 23998  002870  D002               	goto	l631
 23999                           
 24000                           ; BSR set to: 0
 24001                           ;uart_drv.c: 140: {
 24002                           ;uart_drv.c: 141: DivisionFactor = 4;
 24003  002872  0E04               	movlw	4
 24004  002874                     L27:
 24005  002874  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 24006  002876                     l631:
 24007                           
 24008                           ; BSR set to: 0
 24009                           ;uart_drv.c: 146: }
 24010                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 24011                           
 24012                           ; BSR set to: 0
 24013                           
 24014                           ; BSR set to: 0
 24015                           
 24016                           ; BSR set to: 0
 24017                           
 24018                           ; BSR set to: 0
 24019                           
 24020                           ;uart_drv.c: 143: else
 24021                           ;uart_drv.c: 144: {
 24022                           
 24023                           ; BSR set to: 0
 24024  002876  EE20 F00D          	lfsr	2,13
 24025  00287A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24026  00287C  26D9               	addwf	fsr2l,f,c
 24027  00287E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24028  002880  22DA               	addwfc	fsr2h,f,c
 24029  002882  CFDE F089          	movff	postinc2,___lldiv@dividend
 24030  002886  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 24031  00288A  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 24032  00288E  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 24033  002892  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 24034  002894  6F7D               	movwf	___lmul@multiplier& (0+255),b
 24035  002896  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 24036  002898  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 24037  00289A  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 24038  00289C  EE20 F011          	lfsr	2,17
 24039  0028A0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24040  0028A2  26D9               	addwf	fsr2l,f,c
 24041  0028A4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24042  0028A6  22DA               	addwfc	fsr2h,f,c
 24043  0028A8  CFDE F081          	movff	postinc2,___lmul@multiplicand
 24044  0028AC  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 24045  0028B0  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 24046  0028B4  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 24047  0028B8  ECCF  F027         	call	___lmul	;wreg free
 24048  0028BC  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 24049  0028C0  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 24050  0028C4  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 24051  0028C8  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 24052  0028CC  ECE7  F024         	call	___lldiv	;wreg free
 24053  0028D0  0EFF               	movlw	255
 24054  0028D2  0100               	movlb	0	; () banked
 24055  0028D4  2589               	addwf	?___lldiv& (0+255),w,b
 24056  0028D6  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 24057  0028D8  0EFF               	movlw	255
 24058  0028DA  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 24059  0028DC  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 24060                           
 24061                           ; BSR set to: 0
 24062                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 24063  0028DE  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 24064  0028E0  A4D8               	btfss	status,2,c
 24065  0028E2  D005               	goto	l633
 24066                           
 24067                           ; BSR set to: 0
 24068                           ;uart_drv.c: 152: {
 24069                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 24070  0028E4  0E00               	movlw	0
 24071  0028E6  6E7F               	movwf	3967,c	;volatile
 24072                           
 24073                           ; BSR set to: 0
 24074                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 24075  0028E8  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 24076                           
 24077                           ;uart_drv.c: 156: }
 24078  0028EC  0012               	return	
 24079  0028EE                     l633:
 24080                           
 24081                           ; BSR set to: 0
 24082                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 24083                           
 24084                           ; BSR set to: 0
 24085  0028EE  0E02               	movlw	2
 24086  0028F0  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 24087  0028F2  A4D8               	btfss	status,2,c
 24088  0028F4  0012               	return	
 24089                           
 24090                           ; BSR set to: 0
 24091                           ;uart_drv.c: 158: {
 24092                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 24093  0028F6  0E00               	movlw	0
 24094  0028F8  6E7D               	movwf	3965,c	;volatile
 24095                           
 24096                           ; BSR set to: 0
 24097                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 24098  0028FA  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 24099                           
 24100                           ; BSR set to: 0
 24101  0028FE  0012               	return	
 24102  002900                     __end_of_SetUartBaudRate:
 24103                           	opt stack 0
 24104                           tosu	equ	0xFFF
 24105                           tosh	equ	0xFFE
 24106                           tosl	equ	0xFFD
 24107                           pclath	equ	0xFFA
 24108                           tblptru	equ	0xFF8
 24109                           tblptrh	equ	0xFF7
 24110                           tblptrl	equ	0xFF6
 24111                           tablat	equ	0xFF5
 24112                           prodh	equ	0xFF4
 24113                           prodl	equ	0xFF3
 24114                           intcon	equ	0xFF2
 24115                           intcon2	equ	0xFF1
 24116                           intcon3	equ	0xFF0
 24117                           indf0	equ	0xFEF
 24118                           postinc0	equ	0xFEE
 24119                           plusw0	equ	0xFEB
 24120                           fsr0h	equ	0xFEA
 24121                           fsr0l	equ	0xFE9
 24122                           wreg	equ	0xFE8
 24123                           indf1	equ	0xFE7
 24124                           postinc1	equ	0xFE6
 24125                           postdec1	equ	0xFE5
 24126                           plusw1	equ	0xFE3
 24127                           fsr1h	equ	0xFE2
 24128                           fsr1l	equ	0xFE1
 24129                           indf2	equ	0xFDF
 24130                           postinc2	equ	0xFDE
 24131                           postdec2	equ	0xFDD
 24132                           plusw2	equ	0xFDB
 24133                           fsr2h	equ	0xFDA
 24134                           fsr2l	equ	0xFD9
 24135                           status	equ	0xFD8
 24136                           
 24137 ;; *************** function ___lmul *****************
 24138 ;; Defined at:
 24139 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 24140 ;; Parameters:    Size  Location     Type
 24141 ;;  multiplier      4   29[BANK0 ] unsigned long 
 24142 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 24143 ;; Auto vars:     Size  Location     Type
 24144 ;;  product         4   37[BANK0 ] unsigned long 
 24145 ;; Return value:  Size  Location     Type
 24146 ;;                  4   29[BANK0 ] unsigned long 
 24147 ;; Registers used:
 24148 ;;		wreg, status,2, status,0
 24149 ;; Tracked objects:
 24150 ;;		On entry : 0/0
 24151 ;;		On exit  : 0/0
 24152 ;;		Unchanged: 0/0
 24153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24154 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24155 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24157 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24158 ;;Total ram usage:       12 bytes
 24159 ;; Hardware stack levels used:    1
 24160 ;; Hardware stack levels required when called:   11
 24161 ;; This function calls:
 24162 ;;		Nothing
 24163 ;; This function is called by:
 24164 ;;		_Tmr_TmrBPrSet
 24165 ;;		_SetUartBaudRate
 24166 ;;		_strtol
 24167 ;; This function uses a non-reentrant model
 24168 ;;
 24169                           
 24170                           	psect	text110
 24171  004F9E                     __ptext110:
 24172                           	opt stack 0
 24173  004F9E                     ___lmul:
 24174                           	opt stack 15
 24175                           
 24176                           ; BSR set to: 0
 24177                           ;incstack = 0
 24178  004F9E  0E00               	movlw	0
 24179  004FA0  0100               	movlb	0	; () banked
 24180  004FA2  6F85               	movwf	___lmul@product& (0+255),b
 24181  004FA4  0E00               	movlw	0
 24182  004FA6  6F86               	movwf	(___lmul@product+1)& (0+255),b
 24183  004FA8  0E00               	movlw	0
 24184  004FAA  6F87               	movwf	(___lmul@product+2)& (0+255),b
 24185  004FAC  0E00               	movlw	0
 24186  004FAE  6F88               	movwf	(___lmul@product+3)& (0+255),b
 24187  004FB0                     
 24188                           ; BSR set to: 0
 24189                           
 24190                           ; BSR set to: 0
 24191  004FB0  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 24192  004FB2  D008               	goto	l2596
 24193                           
 24194                           ; BSR set to: 0
 24195  004FB4  5181               	movf	___lmul@multiplicand& (0+255),w,b
 24196  004FB6  2785               	addwf	___lmul@product& (0+255),f,b
 24197  004FB8  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 24198  004FBA  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 24199  004FBC  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 24200  004FBE  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 24201  004FC0  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 24202  004FC2  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 24203  004FC4                     l2596:
 24204                           
 24205                           ; BSR set to: 0
 24206                           
 24207                           ; BSR set to: 0
 24208  004FC4  90D8               	bcf	status,0,c
 24209  004FC6  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 24210  004FC8  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 24211  004FCA  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 24212  004FCC  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 24213                           
 24214                           ; BSR set to: 0
 24215  004FCE  90D8               	bcf	status,0,c
 24216  004FD0  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 24217  004FD2  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 24218  004FD4  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 24219  004FD6  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 24220  004FD8  517D               	movf	___lmul@multiplier& (0+255),w,b
 24221  004FDA  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 24222  004FDC  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 24223  004FDE  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 24224  004FE0  A4D8               	btfss	status,2,c
 24225  004FE2  D7E6               	goto	l2595
 24226                           
 24227                           ; BSR set to: 0
 24228  004FE4  C085  F07D         	movff	___lmul@product,?___lmul
 24229  004FE8  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 24230  004FEC  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 24231  004FF0  C088  F080         	movff	___lmul@product+3,?___lmul+3
 24232                           
 24233                           ; BSR set to: 0
 24234  004FF4  0012               	return		;funcret
 24235  004FF6                     __end_of___lmul:
 24236                           	opt stack 0
 24237                           tosu	equ	0xFFF
 24238                           tosh	equ	0xFFE
 24239                           tosl	equ	0xFFD
 24240                           pclath	equ	0xFFA
 24241                           tblptru	equ	0xFF8
 24242                           tblptrh	equ	0xFF7
 24243                           tblptrl	equ	0xFF6
 24244                           tablat	equ	0xFF5
 24245                           prodh	equ	0xFF4
 24246                           prodl	equ	0xFF3
 24247                           intcon	equ	0xFF2
 24248                           intcon2	equ	0xFF1
 24249                           intcon3	equ	0xFF0
 24250                           indf0	equ	0xFEF
 24251                           postinc0	equ	0xFEE
 24252                           plusw0	equ	0xFEB
 24253                           fsr0h	equ	0xFEA
 24254                           fsr0l	equ	0xFE9
 24255                           wreg	equ	0xFE8
 24256                           indf1	equ	0xFE7
 24257                           postinc1	equ	0xFE6
 24258                           postdec1	equ	0xFE5
 24259                           plusw1	equ	0xFE3
 24260                           fsr1h	equ	0xFE2
 24261                           fsr1l	equ	0xFE1
 24262                           indf2	equ	0xFDF
 24263                           postinc2	equ	0xFDE
 24264                           postdec2	equ	0xFDD
 24265                           plusw2	equ	0xFDB
 24266                           fsr2h	equ	0xFDA
 24267                           fsr2l	equ	0xFD9
 24268                           status	equ	0xFD8
 24269                           
 24270 ;; *************** function _UartSetConfigLow *****************
 24271 ;; Defined at:
 24272 ;;		line 224 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24273 ;; Parameters:    Size  Location     Type
 24274 ;;		None
 24275 ;; Auto vars:     Size  Location     Type
 24276 ;;		None
 24277 ;; Return value:  Size  Location     Type
 24278 ;;                  1    wreg      void 
 24279 ;; Registers used:
 24280 ;;		wreg, status,2
 24281 ;; Tracked objects:
 24282 ;;		On entry : 0/0
 24283 ;;		On exit  : 0/0
 24284 ;;		Unchanged: 0/0
 24285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24290 ;;Total ram usage:        0 bytes
 24291 ;; Hardware stack levels used:    1
 24292 ;; Hardware stack levels required when called:   11
 24293 ;; This function calls:
 24294 ;;		Nothing
 24295 ;; This function is called by:
 24296 ;;		_ConfigureModem
 24297 ;; This function uses a non-reentrant model
 24298 ;;
 24299                           
 24300                           	psect	text111
 24301  004FF6                     __ptext111:
 24302                           	opt stack 0
 24303  004FF6                     _UartSetConfigLow:
 24304                           	opt stack 15
 24305                           
 24306                           ;mdm_gsm_gprs.c: 226: UartConfig.UartEnable = ((UINT8)(1));
 24307                           
 24308                           ; BSR set to: 0
 24309                           ;incstack = 0
 24310  004FF6  0E01               	movlw	1
 24311  004FF8  0103               	movlb	3	; () banked
 24312  004FFA  6F26               	movwf	_UartConfig& (0+255),b
 24313                           
 24314                           ;mdm_gsm_gprs.c: 227: UartConfig.UartMode = ((UINT8)(0));
 24315  004FFC  0E00               	movlw	0
 24316  004FFE  6F27               	movwf	(_UartConfig+1)& (0+255),b
 24317                           
 24318                           ;mdm_gsm_gprs.c: 228: UartConfig.BaudRateMode = ((UINT8)(0));
 24319  005000  0E00               	movlw	0
 24320  005002  6F28               	movwf	(_UartConfig+2)& (0+255),b
 24321                           
 24322                           ;mdm_gsm_gprs.c: 229: UartConfig.HighBaudMode = ((UINT8)(0));
 24323  005004  0E00               	movlw	0
 24324  005006  6F29               	movwf	(_UartConfig+3)& (0+255),b
 24325                           
 24326                           ;mdm_gsm_gprs.c: 230: UartConfig.Tx9bitMode = ((UINT8)(0));
 24327  005008  0E00               	movlw	0
 24328  00500A  6F2A               	movwf	(_UartConfig+4)& (0+255),b
 24329                           
 24330                           ;mdm_gsm_gprs.c: 231: UartConfig.Rx9bitMode = ((UINT8)(0));
 24331  00500C  0E00               	movlw	0
 24332  00500E  6F2B               	movwf	(_UartConfig+5)& (0+255),b
 24333                           
 24334                           ;mdm_gsm_gprs.c: 232: UartConfig.TxEnable = ((UINT8)(1));
 24335  005010  0E01               	movlw	1
 24336  005012  6F2C               	movwf	(_UartConfig+6)& (0+255),b
 24337                           
 24338                           ;mdm_gsm_gprs.c: 233: UartConfig.RxEnable = ((UINT8)(1));
 24339  005014  0E01               	movlw	1
 24340  005016  6F2D               	movwf	(_UartConfig+7)& (0+255),b
 24341                           
 24342                           ;mdm_gsm_gprs.c: 234: UartConfig.SendBreakEnable = ((UINT8)(0));
 24343  005018  0E00               	movlw	0
 24344  00501A  6F2E               	movwf	(_UartConfig+8)& (0+255),b
 24345                           
 24346                           ;mdm_gsm_gprs.c: 235: UartConfig.AutobaudEnable = ((UINT8)(0));
 24347  00501C  0E00               	movlw	0
 24348  00501E  6F2F               	movwf	(_UartConfig+9)& (0+255),b
 24349                           
 24350                           ;mdm_gsm_gprs.c: 236: UartConfig.WakeUpEnable = ((UINT8)(0));
 24351  005020  0E00               	movlw	0
 24352  005022  6F30               	movwf	(_UartConfig+10)& (0+255),b
 24353                           
 24354                           ;mdm_gsm_gprs.c: 237: UartConfig.TxInterruptEnable = ((UINT8)(0));
 24355  005024  0E00               	movlw	0
 24356  005026  6F31               	movwf	(_UartConfig+11)& (0+255),b
 24357                           
 24358                           ;mdm_gsm_gprs.c: 238: UartConfig.RxInterruptEnable = ((UINT8)(1));
 24359  005028  0E01               	movlw	1
 24360  00502A  6F32               	movwf	(_UartConfig+12)& (0+255),b
 24361                           
 24362                           ;mdm_gsm_gprs.c: 239: UartConfig.McuBusClock = ((UINT32)(48000000));
 24363  00502C  0E00               	movlw	0
 24364  00502E  6F33               	movwf	(_UartConfig+13)& (0+255),b
 24365  005030  0E6C               	movlw	108
 24366  005032  6F34               	movwf	(_UartConfig+14)& (0+255),b
 24367  005034  0EDC               	movlw	220
 24368  005036  6F35               	movwf	(_UartConfig+15)& (0+255),b
 24369  005038  0E02               	movlw	2
 24370  00503A  6F36               	movwf	(_UartConfig+16)& (0+255),b
 24371                           
 24372                           ;mdm_gsm_gprs.c: 240: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 24373  00503C  0E80               	movlw	128
 24374  00503E  6F37               	movwf	(_UartConfig+17)& (0+255),b
 24375  005040  0E25               	movlw	37
 24376  005042  6F38               	movwf	(_UartConfig+18)& (0+255),b
 24377  005044  0E00               	movlw	0
 24378  005046  6F39               	movwf	(_UartConfig+19)& (0+255),b
 24379  005048  0E00               	movlw	0
 24380  00504A  6F3A               	movwf	(_UartConfig+20)& (0+255),b
 24381                           
 24382                           ; BSR set to: 3
 24383  00504C  0012               	return		;funcret
 24384  00504E                     __end_of_UartSetConfigLow:
 24385                           	opt stack 0
 24386                           tosu	equ	0xFFF
 24387                           tosh	equ	0xFFE
 24388                           tosl	equ	0xFFD
 24389                           pclath	equ	0xFFA
 24390                           tblptru	equ	0xFF8
 24391                           tblptrh	equ	0xFF7
 24392                           tblptrl	equ	0xFF6
 24393                           tablat	equ	0xFF5
 24394                           prodh	equ	0xFF4
 24395                           prodl	equ	0xFF3
 24396                           intcon	equ	0xFF2
 24397                           intcon2	equ	0xFF1
 24398                           intcon3	equ	0xFF0
 24399                           indf0	equ	0xFEF
 24400                           postinc0	equ	0xFEE
 24401                           plusw0	equ	0xFEB
 24402                           fsr0h	equ	0xFEA
 24403                           fsr0l	equ	0xFE9
 24404                           wreg	equ	0xFE8
 24405                           indf1	equ	0xFE7
 24406                           postinc1	equ	0xFE6
 24407                           postdec1	equ	0xFE5
 24408                           plusw1	equ	0xFE3
 24409                           fsr1h	equ	0xFE2
 24410                           fsr1l	equ	0xFE1
 24411                           indf2	equ	0xFDF
 24412                           postinc2	equ	0xFDE
 24413                           postdec2	equ	0xFDD
 24414                           plusw2	equ	0xFDB
 24415                           fsr2h	equ	0xFDA
 24416                           fsr2l	equ	0xFD9
 24417                           status	equ	0xFD8
 24418                           
 24419 ;; *************** function _CheckModem *****************
 24420 ;; Defined at:
 24421 ;;		line 278 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24422 ;; Parameters:    Size  Location     Type
 24423 ;;		None
 24424 ;; Auto vars:     Size  Location     Type
 24425 ;;		None
 24426 ;; Return value:  Size  Location     Type
 24427 ;;                  1    wreg      void 
 24428 ;; Registers used:
 24429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24430 ;; Tracked objects:
 24431 ;;		On entry : 0/0
 24432 ;;		On exit  : 0/0
 24433 ;;		Unchanged: 0/0
 24434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24439 ;;Total ram usage:        0 bytes
 24440 ;; Hardware stack levels used:    1
 24441 ;; Hardware stack levels required when called:   14
 24442 ;; This function calls:
 24443 ;;		_GenerateEvt
 24444 ;;		_OsTmr_GetTimerStatus
 24445 ;;		_OsTmr_StartTimer
 24446 ;;		_ReceiveEvt
 24447 ;;		_Uart_WriteConstString
 24448 ;; This function is called by:
 24449 ;;		_Mdm_MainTask
 24450 ;; This function uses a non-reentrant model
 24451 ;;
 24452                           
 24453                           	psect	text112
 24454  0022AA                     __ptext112:
 24455                           	opt stack 0
 24456  0022AA                     _CheckModem:
 24457                           	opt stack 13
 24458                           
 24459                           ;mdm_gsm_gprs.c: 280: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 24460                           ;mdm_gsm_gprs.c: 281: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 24461                           ;mdm_gsm_gprs.c: 283: switch (CheckMdmSts)
 24462                           
 24463                           ; BSR set to: 3
 24464                           ;incstack = 0
 24465  0022AA  D096               	goto	l976
 24466  0022AC                     
 24467                           ;mdm_gsm_gprs.c: 287: OsTmr_StartTimer(&Timeout,2000);
 24468  0022AC  0EEB               	movlw	low CheckModem@Timeout
 24469  0022AE  0100               	movlb	0	; () banked
 24470  0022B0  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24471  0022B2  0E03               	movlw	high CheckModem@Timeout
 24472  0022B4  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24473  0022B6  0ED0               	movlw	208
 24474  0022B8  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24475  0022BA  0E07               	movlw	7
 24476  0022BC  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24477  0022BE  0E00               	movlw	0
 24478  0022C0  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 24479  0022C2  0E00               	movlw	0
 24480  0022C4  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 24481  0022C6  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 24482                           
 24483                           ;mdm_gsm_gprs.c: 289: CheckMdmSts = MdmCh_InitialDelay;
 24484  0022CA  0E01               	movlw	1
 24485  0022CC  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24486                           
 24487                           ;mdm_gsm_gprs.c: 290: break;
 24488  0022CE  0012               	return	
 24489  0022D0                     
 24490                           ;mdm_gsm_gprs.c: 294: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 24491  0022D0  0EEB               	movlw	low CheckModem@Timeout
 24492  0022D2  0100               	movlb	0	; () banked
 24493  0022D4  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 24494  0022D6  0E03               	movlw	high CheckModem@Timeout
 24495  0022D8  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 24496  0022DA  EC8B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 24497  0022DE  06E8               	decf	wreg,f,c
 24498  0022E0  A4D8               	btfss	status,2,c
 24499  0022E2  0012               	return	
 24500                           
 24501                           ;mdm_gsm_gprs.c: 295: {
 24502                           ;mdm_gsm_gprs.c: 297: CheckMdmSts = MdmCh_SendATE1;
 24503  0022E4  0E02               	movlw	2
 24504  0022E6  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24505                           
 24506                           ;mdm_gsm_gprs.c: 298: }
 24507                           ;mdm_gsm_gprs.c: 299: break;
 24508  0022E8  0012               	return	
 24509  0022EA                     
 24510                           ;mdm_gsm_gprs.c: 303: Uart_WriteConstString(1,"AT\r\n");
 24511  0022EA  0EE5               	movlw	low STR_1
 24512  0022EC  0100               	movlb	0	; () banked
 24513  0022EE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24514  0022F0  0EFF               	movlw	high STR_1
 24515  0022F2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24516  0022F4  0E01               	movlw	1
 24517  0022F6  EC02  F02B         	call	_Uart_WriteConstString
 24518                           
 24519                           ;mdm_gsm_gprs.c: 305: OsTmr_StartTimer(&Timeout,2000u);
 24520  0022FA  0EEB               	movlw	low CheckModem@Timeout
 24521  0022FC  0100               	movlb	0	; () banked
 24522  0022FE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24523  002300  0E03               	movlw	high CheckModem@Timeout
 24524  002302  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24525  002304  0ED0               	movlw	208
 24526  002306  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24527  002308  0E07               	movlw	7
 24528  00230A  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24529  00230C  0E00               	movlw	0
 24530  00230E  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 24531  002310  0E00               	movlw	0
 24532  002312  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 24533  002314  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 24534                           
 24535                           ;mdm_gsm_gprs.c: 307: CheckMdmSts = MdmCh_WaitEcho;
 24536  002318  0E03               	movlw	3
 24537  00231A  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24538                           
 24539                           ;mdm_gsm_gprs.c: 308: break;
 24540  00231C  0012               	return	
 24541  00231E                     
 24542                           ;mdm_gsm_gprs.c: 312: if (ReceiveEvt(&NewStringReceived))
 24543  00231E  0E3C               	movlw	low _NewStringReceived
 24544  002320  0100               	movlb	0	; () banked
 24545  002322  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24546  002324  0E00               	movlw	high _NewStringReceived
 24547  002326  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24548  002328  EC34  F02D         	call	_ReceiveEvt	;wreg free
 24549  00232C  0900               	iorlw	0
 24550  00232E  B4D8               	btfsc	status,2,c
 24551  002330  D02F               	goto	l983
 24552                           
 24553                           ;mdm_gsm_gprs.c: 313: {
 24554                           ;mdm_gsm_gprs.c: 315: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 24555  002332  CC58  FFE8         	movff	_RxBuffer,wreg
 24556  002336  0A4F               	xorlw	79
 24557  002338  A4D8               	btfss	status,2,c
 24558  00233A  D005               	goto	u12170
 24559  00233C  CC59  FFE8         	movff	_RxBuffer+1,wreg
 24560  002340  0A4B               	xorlw	75
 24561  002342  B4D8               	btfsc	status,2,c
 24562  002344  D00A               	goto	u12190
 24563  002346                     u12170:
 24564  002346  CC59  FFE8         	movff	_RxBuffer+1,wreg
 24565  00234A  0A4F               	xorlw	79
 24566  00234C  A4D8               	btfss	status,2,c
 24567  00234E  0012               	return	
 24568  002350  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 24569  002354  0A4B               	xorlw	75
 24570  002356  A4D8               	btfss	status,2,c
 24571  002358  0012               	return	
 24572  00235A                     u12190:
 24573                           
 24574                           ;mdm_gsm_gprs.c: 316: {
 24575                           ;mdm_gsm_gprs.c: 317: MdmStatus = ModemReady;
 24576  00235A  0E02               	movlw	2
 24577  00235C  0100               	movlb	0	; () banked
 24578  00235E  6FCF               	movwf	_MdmStatus& (0+255),b
 24579                           
 24580                           ; BSR set to: 0
 24581                           ;mdm_gsm_gprs.c: 319: GenerateEvt(&MdmOnOffPulseRequest);
 24582  002360  0EDE               	movlw	low _MdmOnOffPulseRequest
 24583  002362  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24584  002364  0E00               	movlw	high _MdmOnOffPulseRequest
 24585  002366  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24586  002368  ECDA  F02E         	call	_GenerateEvt	;wreg free
 24587                           
 24588                           ;mdm_gsm_gprs.c: 321: OsTmr_StartTimer(&Timeout,1000u);
 24589  00236C  0EEB               	movlw	low CheckModem@Timeout
 24590  00236E  0100               	movlb	0	; () banked
 24591  002370  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24592  002372  0E03               	movlw	high CheckModem@Timeout
 24593  002374  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24594  002376  0EE8               	movlw	232
 24595  002378  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24596  00237A  0E03               	movlw	3
 24597  00237C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24598  00237E  0E00               	movlw	0
 24599  002380  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 24600  002382  0E00               	movlw	0
 24601  002384  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 24602  002386  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 24603                           
 24604                           ;mdm_gsm_gprs.c: 323: CheckMdmSts = MdmCh_Delay;
 24605  00238A  0E04               	movlw	4
 24606  00238C  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24607                           
 24608                           ;mdm_gsm_gprs.c: 324: }
 24609                           ;mdm_gsm_gprs.c: 325: }
 24610  00238E  0012               	return	
 24611  002390                     l983:
 24612                           
 24613                           ;mdm_gsm_gprs.c: 326: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 24614  002390  0EEB               	movlw	low CheckModem@Timeout
 24615  002392  0100               	movlb	0	; () banked
 24616  002394  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 24617  002396  0E03               	movlw	high CheckModem@Timeout
 24618  002398  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 24619  00239A  EC8B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 24620  00239E  06E8               	decf	wreg,f,c
 24621  0023A0  A4D8               	btfss	status,2,c
 24622  0023A2  0012               	return	
 24623                           
 24624                           ;mdm_gsm_gprs.c: 327: {
 24625                           ;mdm_gsm_gprs.c: 329: MdmStatus = ModemOff;
 24626  0023A4  0E00               	movlw	0
 24627  0023A6  0100               	movlb	0	; () banked
 24628  0023A8  6FCF               	movwf	_MdmStatus& (0+255),b
 24629                           
 24630                           ;mdm_gsm_gprs.c: 331: ComChecCompleted = 1u;
 24631  0023AA  0E01               	movlw	1
 24632  0023AC  6E2B               	movwf	_ComChecCompleted,c
 24633                           
 24634                           ;mdm_gsm_gprs.c: 333: CheckMdmSts = MdmCh_Done;
 24635  0023AE  0E05               	movlw	5
 24636  0023B0  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24637                           
 24638                           ; BSR set to: 0
 24639                           ;mdm_gsm_gprs.c: 338: }
 24640                           ;mdm_gsm_gprs.c: 339: break;
 24641                           
 24642                           ; BSR set to: 0
 24643                           
 24644                           ;mdm_gsm_gprs.c: 335: else
 24645                           ;mdm_gsm_gprs.c: 336: {
 24646                           
 24647                           ; BSR set to: 0
 24648                           
 24649                           ;mdm_gsm_gprs.c: 334: }
 24650  0023B2  0012               	return	
 24651  0023B4                     
 24652                           ;mdm_gsm_gprs.c: 343: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 24653                           
 24654                           ; BSR set to: 0
 24655  0023B4  0EEB               	movlw	low CheckModem@Timeout
 24656  0023B6  0100               	movlb	0	; () banked
 24657  0023B8  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 24658  0023BA  0E03               	movlw	high CheckModem@Timeout
 24659  0023BC  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 24660  0023BE  EC8B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 24661  0023C2  06E8               	decf	wreg,f,c
 24662  0023C4  A4D8               	btfss	status,2,c
 24663  0023C6  0012               	return	
 24664                           
 24665                           ;mdm_gsm_gprs.c: 344: {
 24666                           ;mdm_gsm_gprs.c: 346: MdmStatus = ModemOff;
 24667  0023C8  0E00               	movlw	0
 24668  0023CA  0100               	movlb	0	; () banked
 24669  0023CC  6FCF               	movwf	_MdmStatus& (0+255),b
 24670                           
 24671                           ;mdm_gsm_gprs.c: 348: ComChecCompleted = 1u;
 24672  0023CE  0E01               	movlw	1
 24673  0023D0  6E2B               	movwf	_ComChecCompleted,c
 24674                           
 24675                           ;mdm_gsm_gprs.c: 350: CheckMdmSts = MdmCh_Done;
 24676  0023D2  0E05               	movlw	5
 24677  0023D4  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24678                           
 24679                           ; BSR set to: 0
 24680                           ;mdm_gsm_gprs.c: 360: }
 24681                           
 24682                           ; BSR set to: 0
 24683                           ;mdm_gsm_gprs.c: 359: break;
 24684                           
 24685                           ;mdm_gsm_gprs.c: 358: default:
 24686                           
 24687                           ; BSR set to: 0
 24688                           ;mdm_gsm_gprs.c: 356: break;
 24689                           
 24690                           ;mdm_gsm_gprs.c: 354: case MdmCh_Done:
 24691                           
 24692                           ; BSR set to: 0
 24693                           ;mdm_gsm_gprs.c: 351: }
 24694                           ;mdm_gsm_gprs.c: 352: break;
 24695  0023D6  0012               	return	
 24696  0023D8                     l976:
 24697                           
 24698                           ; BSR set to: 0
 24699  0023D8  502A               	movf	CheckModem@CheckMdmSts,w,c
 24700                           
 24701                           ; Switch size 1, requested type "space"
 24702                           ; Number of cases is 6, Range of values is 0 to 5
 24703                           ; switch strategies available:
 24704                           ; Name         Instructions Cycles
 24705                           ; simple_byte           19    10 (average)
 24706                           ;	Chosen strategy is simple_byte
 24707  0023DA  0A00               	xorlw	0	; case 0
 24708  0023DC  B4D8               	btfsc	status,2,c
 24709  0023DE  D766               	goto	l977
 24710  0023E0  0A01               	xorlw	1	; case 1
 24711  0023E2  B4D8               	btfsc	status,2,c
 24712  0023E4  D775               	goto	l979
 24713  0023E6  0A03               	xorlw	3	; case 2
 24714  0023E8  B4D8               	btfsc	status,2,c
 24715  0023EA  D77F               	goto	l981
 24716  0023EC  0A01               	xorlw	1	; case 3
 24717  0023EE  B4D8               	btfsc	status,2,c
 24718  0023F0  D796               	goto	l982
 24719  0023F2  0A07               	xorlw	7	; case 4
 24720  0023F4  B4D8               	btfsc	status,2,c
 24721  0023F6  D7DE               	goto	l992
 24722  0023F8  0A01               	xorlw	1	; case 5
 24723  0023FA  0012               	return	
 24724  0023FC                     __end_of_CheckModem:
 24725                           	opt stack 0
 24726                           tosu	equ	0xFFF
 24727                           tosh	equ	0xFFE
 24728                           tosl	equ	0xFFD
 24729                           pclath	equ	0xFFA
 24730                           tblptru	equ	0xFF8
 24731                           tblptrh	equ	0xFF7
 24732                           tblptrl	equ	0xFF6
 24733                           tablat	equ	0xFF5
 24734                           prodh	equ	0xFF4
 24735                           prodl	equ	0xFF3
 24736                           intcon	equ	0xFF2
 24737                           intcon2	equ	0xFF1
 24738                           intcon3	equ	0xFF0
 24739                           indf0	equ	0xFEF
 24740                           postinc0	equ	0xFEE
 24741                           plusw0	equ	0xFEB
 24742                           fsr0h	equ	0xFEA
 24743                           fsr0l	equ	0xFE9
 24744                           wreg	equ	0xFE8
 24745                           indf1	equ	0xFE7
 24746                           postinc1	equ	0xFE6
 24747                           postdec1	equ	0xFE5
 24748                           plusw1	equ	0xFE3
 24749                           fsr1h	equ	0xFE2
 24750                           fsr1l	equ	0xFE1
 24751                           indf2	equ	0xFDF
 24752                           postinc2	equ	0xFDE
 24753                           postdec2	equ	0xFDD
 24754                           plusw2	equ	0xFDB
 24755                           fsr2h	equ	0xFDA
 24756                           fsr2l	equ	0xFD9
 24757                           status	equ	0xFD8
 24758                           
 24759 ;; *************** function _MdmCntSm *****************
 24760 ;; Defined at:
 24761 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 24762 ;; Parameters:    Size  Location     Type
 24763 ;;		None
 24764 ;; Auto vars:     Size  Location     Type
 24765 ;;		None
 24766 ;; Return value:  Size  Location     Type
 24767 ;;                  1    wreg      void 
 24768 ;; Registers used:
 24769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24770 ;; Tracked objects:
 24771 ;;		On entry : 0/0
 24772 ;;		On exit  : 0/0
 24773 ;;		Unchanged: 0/0
 24774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24779 ;;Total ram usage:        0 bytes
 24780 ;; Hardware stack levels used:    1
 24781 ;; Hardware stack levels required when called:   12
 24782 ;; This function calls:
 24783 ;;		_InitModemInterface
 24784 ;;		_ReceiveEvt
 24785 ;; This function is called by:
 24786 ;;		_Mdm_DrvMainFn
 24787 ;; This function uses a non-reentrant model
 24788 ;;
 24789                           
 24790                           	psect	text113
 24791  0040FA                     __ptext113:
 24792                           	opt stack 0
 24793  0040FA                     _MdmCntSm:
 24794                           	opt stack 15
 24795                           
 24796                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 24797                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 24798                           ;mdm_drv.c: 204: switch (MdmCntState)
 24799                           
 24800                           ;incstack = 0
 24801  0040FA  D045               	goto	l315
 24802  0040FC                     
 24803                           ;mdm_drv.c: 208: InitModemInterface();
 24804  0040FC  EC85  F02F         	call	_InitModemInterface	;wreg free
 24805                           
 24806                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 24807  004100  0E01               	movlw	1
 24808  004102  6E2E               	movwf	MdmCntSm@MdmCntState,c
 24809                           
 24810                           ;mdm_drv.c: 211: break;
 24811  004104  0012               	return	
 24812  004106                     
 24813                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 24814  004106  0EDE               	movlw	low _MdmOnOffPulseRequest
 24815  004108  0100               	movlb	0	; () banked
 24816  00410A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24817  00410C  0E00               	movlw	high _MdmOnOffPulseRequest
 24818  00410E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24819  004110  EC34  F02D         	call	_ReceiveEvt	;wreg free
 24820  004114  0900               	iorlw	0
 24821  004116  B4D8               	btfsc	status,2,c
 24822  004118  D009               	goto	l319
 24823                           
 24824                           ;mdm_drv.c: 216: {
 24825                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 24826  00411A  0E02               	movlw	2
 24827  00411C  6E2E               	movwf	MdmCntSm@MdmCntState,c
 24828                           
 24829                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 24830  00411E  8284               	bsf	3972,1,c	;volatile
 24831                           
 24832                           ;mdm_drv.c: 222: Counter = 0;
 24833  004120  0E00               	movlw	0
 24834  004122  0102               	movlb	2	; () banked
 24835  004124  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 24836  004126  0E00               	movlw	0
 24837  004128  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 24838                           
 24839                           ;mdm_drv.c: 223: }
 24840  00412A  0012               	return	
 24841  00412C                     l319:
 24842                           
 24843                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 24844                           
 24845                           ; BSR set to: 2
 24846  00412C  0E3D               	movlw	low _MdmResetRequest
 24847  00412E  0100               	movlb	0	; () banked
 24848  004130  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24849  004132  0E00               	movlw	high _MdmResetRequest
 24850  004134  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24851  004136  EC34  F02D         	call	_ReceiveEvt	;wreg free
 24852  00413A  0900               	iorlw	0
 24853  00413C  B4D8               	btfsc	status,2,c
 24854  00413E  0012               	return	
 24855                           
 24856                           ;mdm_drv.c: 225: {
 24857                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 24858  004140  0E03               	movlw	3
 24859  004142  6E2E               	movwf	MdmCntSm@MdmCntState,c
 24860                           
 24861                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 24862  004144  8084               	bsf	3972,0,c	;volatile
 24863                           
 24864                           ;mdm_drv.c: 231: Counter = 0;
 24865  004146  0E00               	movlw	0
 24866  004148  0102               	movlb	2	; () banked
 24867  00414A  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 24868  00414C  0E00               	movlw	0
 24869  00414E  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 24870                           
 24871                           ; BSR set to: 2
 24872                           ;mdm_drv.c: 236: }
 24873                           ;mdm_drv.c: 237: break;
 24874                           
 24875                           ; BSR set to: 2
 24876                           
 24877                           ;mdm_drv.c: 233: else
 24878                           ;mdm_drv.c: 234: {
 24879                           
 24880                           ; BSR set to: 2
 24881                           
 24882                           ;mdm_drv.c: 232: }
 24883  004150  0012               	return	
 24884  004152                     
 24885                           ;mdm_drv.c: 241: Counter++;
 24886                           
 24887                           ; BSR set to: 2
 24888  004152  0102               	movlb	2	; () banked
 24889  004154  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 24890  004156  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 24891                           
 24892                           ; BSR set to: 2
 24893                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 24894  004158  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 24895  00415A  E104               	bnz	u12110
 24896  00415C  0E96               	movlw	150
 24897  00415E  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 24898  004160  A0D8               	btfss	status,0,c
 24899  004162  0012               	return	
 24900  004164                     u12110:
 24901                           
 24902                           ; BSR set to: 2
 24903                           ;mdm_drv.c: 244: {
 24904                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 24905  004164  9284               	bcf	3972,1,c	;volatile
 24906                           
 24907                           ; BSR set to: 2
 24908                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 24909  004166  0E01               	movlw	1
 24910  004168  6E2E               	movwf	MdmCntSm@MdmCntState,c
 24911                           
 24912                           ; BSR set to: 2
 24913                           ;mdm_drv.c: 249: }
 24914                           ;mdm_drv.c: 250: break;
 24915  00416A  0012               	return	
 24916  00416C                     
 24917                           ;mdm_drv.c: 254: Counter++;
 24918                           
 24919                           ; BSR set to: 2
 24920  00416C  0102               	movlb	2	; () banked
 24921  00416E  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 24922  004170  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 24923                           
 24924                           ; BSR set to: 2
 24925                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 24926  004172  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 24927  004174  E104               	bnz	u12120
 24928  004176  0E0A               	movlw	10
 24929  004178  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 24930  00417A  A0D8               	btfss	status,0,c
 24931  00417C  0012               	return	
 24932  00417E                     u12120:
 24933                           
 24934                           ; BSR set to: 2
 24935                           ;mdm_drv.c: 257: {
 24936                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 24937  00417E  9084               	bcf	3972,0,c	;volatile
 24938                           
 24939                           ; BSR set to: 2
 24940                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 24941  004180  0E01               	movlw	1
 24942  004182  6E2E               	movwf	MdmCntSm@MdmCntState,c
 24943                           
 24944                           ; BSR set to: 2
 24945                           ;mdm_drv.c: 267: }
 24946                           
 24947                           ; BSR set to: 2
 24948                           ;mdm_drv.c: 266: break;
 24949                           
 24950                           ;mdm_drv.c: 265: default:
 24951                           
 24952                           ; BSR set to: 2
 24953                           ;mdm_drv.c: 262: }
 24954                           ;mdm_drv.c: 263: break;
 24955  004184  0012               	return	
 24956  004186                     l315:
 24957                           
 24958                           ; BSR set to: 2
 24959  004186  502E               	movf	MdmCntSm@MdmCntState,w,c
 24960                           
 24961                           ; Switch size 1, requested type "space"
 24962                           ; Number of cases is 4, Range of values is 0 to 3
 24963                           ; switch strategies available:
 24964                           ; Name         Instructions Cycles
 24965                           ; simple_byte           13     7 (average)
 24966                           ;	Chosen strategy is simple_byte
 24967  004188  0A00               	xorlw	0	; case 0
 24968  00418A  B4D8               	btfsc	status,2,c
 24969  00418C  D7B7               	goto	l316
 24970  00418E  0A01               	xorlw	1	; case 1
 24971  004190  B4D8               	btfsc	status,2,c
 24972  004192  D7B9               	goto	l318
 24973  004194  0A03               	xorlw	3	; case 2
 24974  004196  B4D8               	btfsc	status,2,c
 24975  004198  D7DC               	goto	l323
 24976  00419A  0A01               	xorlw	1	; case 3
 24977  00419C  A4D8               	btfss	status,2,c
 24978  00419E  0012               	return	
 24979  0041A0  D7E5               	goto	l325
 24980  0041A2                     __end_of_MdmCntSm:
 24981                           	opt stack 0
 24982                           tosu	equ	0xFFF
 24983                           tosh	equ	0xFFE
 24984                           tosl	equ	0xFFD
 24985                           pclath	equ	0xFFA
 24986                           tblptru	equ	0xFF8
 24987                           tblptrh	equ	0xFF7
 24988                           tblptrl	equ	0xFF6
 24989                           tablat	equ	0xFF5
 24990                           prodh	equ	0xFF4
 24991                           prodl	equ	0xFF3
 24992                           intcon	equ	0xFF2
 24993                           intcon2	equ	0xFF1
 24994                           intcon3	equ	0xFF0
 24995                           indf0	equ	0xFEF
 24996                           postinc0	equ	0xFEE
 24997                           plusw0	equ	0xFEB
 24998                           fsr0h	equ	0xFEA
 24999                           fsr0l	equ	0xFE9
 25000                           wreg	equ	0xFE8
 25001                           indf1	equ	0xFE7
 25002                           postinc1	equ	0xFE6
 25003                           postdec1	equ	0xFE5
 25004                           plusw1	equ	0xFE3
 25005                           fsr1h	equ	0xFE2
 25006                           fsr1l	equ	0xFE1
 25007                           indf2	equ	0xFDF
 25008                           postinc2	equ	0xFDE
 25009                           postdec2	equ	0xFDD
 25010                           plusw2	equ	0xFDB
 25011                           fsr2h	equ	0xFDA
 25012                           fsr2l	equ	0xFD9
 25013                           status	equ	0xFD8
 25014                           
 25015 ;; *************** function _InitModemInterface *****************
 25016 ;; Defined at:
 25017 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 25018 ;; Parameters:    Size  Location     Type
 25019 ;;		None
 25020 ;; Auto vars:     Size  Location     Type
 25021 ;;		None
 25022 ;; Return value:  Size  Location     Type
 25023 ;;                  1    wreg      void 
 25024 ;; Registers used:
 25025 ;;		None
 25026 ;; Tracked objects:
 25027 ;;		On entry : 0/0
 25028 ;;		On exit  : 0/0
 25029 ;;		Unchanged: 0/0
 25030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25035 ;;Total ram usage:        0 bytes
 25036 ;; Hardware stack levels used:    1
 25037 ;; Hardware stack levels required when called:   11
 25038 ;; This function calls:
 25039 ;;		Nothing
 25040 ;; This function is called by:
 25041 ;;		_MdmCntSm
 25042 ;; This function uses a non-reentrant model
 25043 ;;
 25044                           
 25045                           	psect	text114
 25046  005F0A                     __ptext114:
 25047                           	opt stack 0
 25048  005F0A                     _InitModemInterface:
 25049                           	opt stack 15
 25050                           
 25051                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 25052                           
 25053                           ;incstack = 0
 25054  005F0A  9096               	bcf	3990,0,c	;volatile
 25055                           
 25056                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 25057  005F0C  9296               	bcf	3990,1,c	;volatile
 25058                           
 25059                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 25060  005F0E  8496               	bsf	3990,2,c	;volatile
 25061  005F10  0012               	return		;funcret
 25062  005F12                     __end_of_InitModemInterface:
 25063                           	opt stack 0
 25064                           tosu	equ	0xFFF
 25065                           tosh	equ	0xFFE
 25066                           tosl	equ	0xFFD
 25067                           pclath	equ	0xFFA
 25068                           tblptru	equ	0xFF8
 25069                           tblptrh	equ	0xFF7
 25070                           tblptrl	equ	0xFF6
 25071                           tablat	equ	0xFF5
 25072                           prodh	equ	0xFF4
 25073                           prodl	equ	0xFF3
 25074                           intcon	equ	0xFF2
 25075                           intcon2	equ	0xFF1
 25076                           intcon3	equ	0xFF0
 25077                           indf0	equ	0xFEF
 25078                           postinc0	equ	0xFEE
 25079                           plusw0	equ	0xFEB
 25080                           fsr0h	equ	0xFEA
 25081                           fsr0l	equ	0xFE9
 25082                           wreg	equ	0xFE8
 25083                           indf1	equ	0xFE7
 25084                           postinc1	equ	0xFE6
 25085                           postdec1	equ	0xFE5
 25086                           plusw1	equ	0xFE3
 25087                           fsr1h	equ	0xFE2
 25088                           fsr1l	equ	0xFE1
 25089                           indf2	equ	0xFDF
 25090                           postinc2	equ	0xFDE
 25091                           postdec2	equ	0xFDD
 25092                           plusw2	equ	0xFDB
 25093                           fsr2h	equ	0xFDA
 25094                           fsr2l	equ	0xFD9
 25095                           status	equ	0xFD8
 25096                           
 25097 ;; *************** function _InitGprsNetwork *****************
 25098 ;; Defined at:
 25099 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 25100 ;; Parameters:    Size  Location     Type
 25101 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 25102 ;;		 -> NULL(0), 
 25103 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 25104 ;; Auto vars:     Size  Location     Type
 25105 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 25106 ;;  Index           1   50[BANK1 ] unsigned char 
 25107 ;; Return value:  Size  Location     Type
 25108 ;;                  1    wreg      enum E8905
 25109 ;; Registers used:
 25110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25111 ;; Tracked objects:
 25112 ;;		On entry : 0/0
 25113 ;;		On exit  : 0/0
 25114 ;;		Unchanged: 0/0
 25115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25116 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25117 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25118 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25119 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25120 ;;Total ram usage:       56 bytes
 25121 ;; Hardware stack levels used:    1
 25122 ;; Hardware stack levels required when called:   14
 25123 ;; This function calls:
 25124 ;;		_ClearBuffer
 25125 ;;		_OsTmr_GetTimerStatus
 25126 ;;		_OsTmr_StartTimer
 25127 ;;		_ReceiveEvt
 25128 ;;		_StringCopy
 25129 ;;		_Uart_WriteConstString
 25130 ;;		_Uart_WriteString
 25131 ;; This function is called by:
 25132 ;;		_MdmHttp_MainTask
 25133 ;; This function uses a non-reentrant model
 25134 ;;
 25135                           
 25136                           	psect	text115
 25137  000DC8                     __ptext115:
 25138                           	opt stack 0
 25139  000DC8                     _InitGprsNetwork:
 25140                           	opt stack 13
 25141                           
 25142                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 25143                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 25144                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 25145                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 25146                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 25147                           
 25148                           ;incstack = 0
 25149  000DC8  0E00               	movlw	0
 25150  000DCA  0101               	movlb	1	; () banked
 25151  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 25152                           
 25153                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 25154  000DCE  D154               	goto	l1202
 25155  000DD0                     
 25156                           ; BSR set to: 1
 25157                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 25158                           
 25159                           ; BSR set to: 1
 25160  000DD0  0ED8               	movlw	low _InitNetwork
 25161  000DD2  0100               	movlb	0	; () banked
 25162  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25163  000DD6  0E00               	movlw	high _InitNetwork
 25164  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25165  000DDA  EC34  F02D         	call	_ReceiveEvt	;wreg free
 25166  000DDE  0900               	iorlw	0
 25167  000DE0  B4D8               	btfsc	status,2,c
 25168  000DE2  D166               	goto	l1205
 25169                           
 25170                           ;mdm_gsm_gprs_http.c: 137: {
 25171                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 25172  000DE4  0E01               	movlw	1
 25173  000DE6  D141               	goto	L67
 25174  000DE8                     
 25175                           ; BSR set to: 1
 25176                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 25177                           
 25178                           ; BSR set to: 1
 25179  000DE8  0EB6               	movlw	low STR_8
 25180  000DEA  0100               	movlb	0	; () banked
 25181  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25182  000DEE  0EFE               	movlw	high STR_8
 25183  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25184  000DF2  0E01               	movlw	1
 25185  000DF4  EC02  F02B         	call	_Uart_WriteConstString
 25186                           
 25187                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 25188  000DF8  0E07               	movlw	7
 25189  000DFA  0101               	movlb	1	; () banked
 25190  000DFC  6FEF               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25191                           
 25192                           ; BSR set to: 1
 25193                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 25194  000DFE  0E02               	movlw	2
 25195  000E00  0100               	movlb	0	; () banked
 25196  000E02  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25197                           
 25198                           ; BSR set to: 0
 25199                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 25200  000E04  0EF5               	movlw	low _ConnTimeout
 25201  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25202  000E08  0E02               	movlw	high _ConnTimeout
 25203  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25204  000E0C  0E20               	movlw	32
 25205  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25206  000E10  0E4E               	movlw	78
 25207  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25208  000E14  0E00               	movlw	0
 25209  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25210  000E18  0E00               	movlw	0
 25211  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25212  000E1C  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 25213  000E20  D0C7               	goto	l13292
 25214  000E22                     
 25215                           ; BSR set to: 1
 25216                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 25217                           
 25218                           ; BSR set to: 1
 25219  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 25220  000E24  0100               	movlb	0	; () banked
 25221  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25222  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 25223  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25224  000E2C  0E00               	movlw	0
 25225  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25226  000E30  0E32               	movlw	50
 25227  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25228  000E34  EC56  F02C         	call	_ClearBuffer	;wreg free
 25229                           
 25230                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 25231  000E38  0EEA               	movlw	low STR_9
 25232  000E3A  0100               	movlb	0	; () banked
 25233  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25234  000E3E  0EFE               	movlw	high STR_9
 25235  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25236  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 25237  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25238  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 25239  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25240  000E4A  0E00               	movlw	0
 25241  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 25242  000E4E  0E14               	movlw	20
 25243  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 25244  000E52  ECE6  F026         	call	_StringCopy	;wreg free
 25245                           
 25246                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 25247  000E56  0E00               	movlw	0
 25248  000E58  0101               	movlb	1	; () banked
 25249  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 25250  000E5C  D01C               	goto	l1208
 25251  000E5E                     
 25252                           ; BSR set to: 1
 25253                           ;mdm_gsm_gprs_http.c: 161: {
 25254                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 25255                           
 25256                           ; BSR set to: 1
 25257  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25258  000E60  0D01               	mullw	1
 25259  000E62  50F3               	movf	prodl,w,c
 25260  000E64  0100               	movlb	0	; () banked
 25261  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 25262  000E68  6ED9               	movwf	fsr2l,c
 25263  000E6A  50F4               	movf	prodh,w,c
 25264  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 25265  000E6E  6EDA               	movwf	fsr2h,c
 25266  000E70  0101               	movlb	1	; () banked
 25267  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25268  000E74  0100               	movlb	0	; () banked
 25269  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25270  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25271  000E7A  0E14               	movlw	20
 25272  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25273  000E7E  0E00               	movlw	0
 25274  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25275  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 25276  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25277  000E86  6EE1               	movwf	fsr1l,c
 25278  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 25279  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25280  000E8C  6EE2               	movwf	fsr1h,c
 25281  000E8E  CFDF FFE7          	movff	indf2,indf1
 25282                           
 25283                           ; BSR set to: 0
 25284  000E92  0101               	movlb	1	; () banked
 25285  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 25286  000E96                     l1208:
 25287                           
 25288                           ; BSR set to: 1
 25289                           
 25290                           ; BSR set to: 1
 25291  000E96  0100               	movlb	0	; () banked
 25292  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 25293  000E9A  0101               	movlb	1	; () banked
 25294  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 25295  000E9E  A0D8               	btfss	status,0,c
 25296  000EA0  D7DE               	goto	l1209
 25297                           
 25298                           ; BSR set to: 1
 25299                           ;mdm_gsm_gprs_http.c: 163: }
 25300                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 25301                           
 25302                           ; BSR set to: 1
 25303  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25304  000EA4  0100               	movlb	0	; () banked
 25305  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25306  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25307  000EAA  0E14               	movlw	20
 25308  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25309  000EAE  0E00               	movlw	0
 25310  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25311  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 25312  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25313  000EB6  6ED9               	movwf	fsr2l,c
 25314  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 25315  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25316  000EBC  6EDA               	movwf	fsr2h,c
 25317  000EBE  0E22               	movlw	34
 25318  000EC0  6EDF               	movwf	indf2,c
 25319                           
 25320                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 25321  000EC2  0101               	movlb	1	; () banked
 25322  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25323  000EC6  0100               	movlb	0	; () banked
 25324  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25325  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25326  000ECC  0E15               	movlw	21
 25327  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25328  000ED0  0E00               	movlw	0
 25329  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25330  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 25331  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25332  000ED8  6ED9               	movwf	fsr2l,c
 25333  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 25334  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25335  000EDE  6EDA               	movwf	fsr2h,c
 25336  000EE0  0E0D               	movlw	13
 25337  000EE2  6EDF               	movwf	indf2,c
 25338                           
 25339                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 25340  000EE4  0101               	movlb	1	; () banked
 25341  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25342  000EE8  0100               	movlb	0	; () banked
 25343  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25344  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25345  000EEE  0E16               	movlw	22
 25346  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25347  000EF2  0E00               	movlw	0
 25348  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25349  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 25350  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25351  000EFA  6ED9               	movwf	fsr2l,c
 25352  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 25353  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25354  000F00  6EDA               	movwf	fsr2h,c
 25355  000F02  0E00               	movlw	0
 25356  000F04  6EDF               	movwf	indf2,c
 25357                           
 25358                           ; BSR set to: 0
 25359                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 25360  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 25361  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 25362  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 25363  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 25364  000F0E  0E01               	movlw	1
 25365  000F10  ECC2  F02B         	call	_Uart_WriteString
 25366                           
 25367                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 25368  000F14  0E07               	movlw	7
 25369  000F16  0101               	movlb	1	; () banked
 25370  000F18  6FEF               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25371                           
 25372                           ; BSR set to: 1
 25373                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 25374  000F1A  0E03               	movlw	3
 25375  000F1C  0100               	movlb	0	; () banked
 25376  000F1E  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25377                           
 25378                           ; BSR set to: 0
 25379                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 25380  000F20  0EF5               	movlw	low _ConnTimeout
 25381  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25382  000F24  0E02               	movlw	high _ConnTimeout
 25383  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25384  000F28  0E20               	movlw	32
 25385  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25386  000F2C  0E4E               	movlw	78
 25387  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25388  000F30  0E00               	movlw	0
 25389  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25390  000F34  0E00               	movlw	0
 25391  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25392  000F38  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 25393  000F3C  D039               	goto	l13292
 25394  000F3E                     
 25395                           ; BSR set to: 1
 25396                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 25397                           
 25398                           ; BSR set to: 1
 25399  000F3E  0E57               	movlw	low STR_10
 25400  000F40  0100               	movlb	0	; () banked
 25401  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25402  000F44  0EFF               	movlw	high STR_10
 25403  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25404  000F48  0E01               	movlw	1
 25405  000F4A  EC02  F02B         	call	_Uart_WriteConstString
 25406                           
 25407                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 25408  000F4E  0E07               	movlw	7
 25409  000F50  0101               	movlb	1	; () banked
 25410  000F52  6FEF               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25411                           
 25412                           ; BSR set to: 1
 25413                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 25414  000F54  0E05               	movlw	5
 25415  000F56  0100               	movlb	0	; () banked
 25416  000F58  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25417                           
 25418                           ; BSR set to: 0
 25419                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 25420  000F5A  0EF5               	movlw	low _ConnTimeout
 25421  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25422  000F5E  0E02               	movlw	high _ConnTimeout
 25423  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25424  000F62  0E20               	movlw	32
 25425  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25426  000F66  0E4E               	movlw	78
 25427  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25428  000F6A  0E00               	movlw	0
 25429  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25430  000F6E  0E00               	movlw	0
 25431  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25432  000F72  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 25433  000F76  D01C               	goto	l13292
 25434  000F78                     
 25435                           ; BSR set to: 1
 25436                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 25437                           
 25438                           ; BSR set to: 1
 25439  000F78  0E65               	movlw	low STR_11
 25440  000F7A  0100               	movlb	0	; () banked
 25441  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25442  000F7E  0EFF               	movlw	high STR_11
 25443  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25444  000F82  0E01               	movlw	1
 25445  000F84  EC02  F02B         	call	_Uart_WriteConstString
 25446                           
 25447                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 25448  000F88  0E08               	movlw	8
 25449  000F8A  0101               	movlb	1	; () banked
 25450  000F8C  6FEF               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25451                           
 25452                           ; BSR set to: 1
 25453                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 25454  000F8E  0E05               	movlw	5
 25455  000F90  0100               	movlb	0	; () banked
 25456  000F92  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25457                           
 25458                           ; BSR set to: 0
 25459                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 25460  000F94  0EF5               	movlw	low _ConnTimeout
 25461  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25462  000F98  0E02               	movlw	high _ConnTimeout
 25463  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25464  000F9C  0E20               	movlw	32
 25465  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25466  000FA0  0E4E               	movlw	78
 25467  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25468  000FA4  0E00               	movlw	0
 25469  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25470  000FA8  0E00               	movlw	0
 25471  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25472  000FAC  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 25473  000FB0                     l13292:
 25474                           
 25475                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 25476  000FB0  0E01               	movlw	1
 25477  000FB2  0101               	movlb	1	; () banked
 25478  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 25479                           
 25480                           ;mdm_gsm_gprs_http.c: 201: break;
 25481  000FB6  D07C               	goto	l1205
 25482  000FB8                     
 25483                           ; BSR set to: 1
 25484                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 25485                           
 25486                           ; BSR set to: 1
 25487  000FB8  0E02               	movlw	2
 25488  000FBA  D05A               	goto	L66
 25489  000FBC                     
 25490                           ; BSR set to: 1
 25491                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 25492                           
 25493                           ; BSR set to: 1
 25494  000FBC  0E3C               	movlw	low _NewStringReceived
 25495  000FBE  0100               	movlb	0	; () banked
 25496  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25497  000FC2  0E00               	movlw	high _NewStringReceived
 25498  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25499  000FC6  EC34  F02D         	call	_ReceiveEvt	;wreg free
 25500  000FCA  0900               	iorlw	0
 25501  000FCC  B4D8               	btfsc	status,2,c
 25502  000FCE  D018               	goto	l1215
 25503                           
 25504                           ;mdm_gsm_gprs_http.c: 212: {
 25505                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 25506  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 25507  000FD4  0A4F               	xorlw	79
 25508  000FD6  A4D8               	btfss	status,2,c
 25509  000FD8  D06B               	goto	l1205
 25510  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25511  000FDE  0A4B               	xorlw	75
 25512  000FE0  A4D8               	btfss	status,2,c
 25513  000FE2  D066               	goto	l1205
 25514                           
 25515                           ;mdm_gsm_gprs_http.c: 215: {
 25516                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 25517  000FE4  C0CE  F1EF         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 25518                           
 25519                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 25520  000FE8  0E58               	movlw	low _RxBuffer
 25521  000FEA  0100               	movlb	0	; () banked
 25522  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25523  000FEE  0E0C               	movlw	high _RxBuffer
 25524  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25525  000FF2  0E01               	movlw	1
 25526  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25527  000FF6  0E90               	movlw	144
 25528  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25529  000FFA  EC56  F02C         	call	_ClearBuffer	;wreg free
 25530                           
 25531                           ;mdm_gsm_gprs_http.c: 220: }
 25532                           ;mdm_gsm_gprs_http.c: 221: }
 25533  000FFE  D058               	goto	l1205
 25534  001000                     l1215:
 25535                           
 25536                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 25537  001000  0EF5               	movlw	low _ConnTimeout
 25538  001002  0100               	movlb	0	; () banked
 25539  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25540  001006  0E02               	movlw	high _ConnTimeout
 25541  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25542  00100A  EC8B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 25543  00100E  D029               	goto	L31
 25544  001010                     
 25545                           ; BSR set to: 1
 25546                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 25547                           
 25548                           ; BSR set to: 1
 25549  001010  0E3C               	movlw	low _NewStringReceived
 25550  001012  0100               	movlb	0	; () banked
 25551  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25552  001016  0E00               	movlw	high _NewStringReceived
 25553  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25554  00101A  EC34  F02D         	call	_ReceiveEvt	;wreg free
 25555  00101E  0900               	iorlw	0
 25556  001020  B4D8               	btfsc	status,2,c
 25557  001022  D018               	goto	l1220
 25558                           
 25559                           ;mdm_gsm_gprs_http.c: 232: {
 25560                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 25561  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 25562  001028  0A2B               	xorlw	43
 25563  00102A  A4D8               	btfss	status,2,c
 25564  00102C  D041               	goto	l1205
 25565  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25566  001032  0A53               	xorlw	83
 25567  001034  A4D8               	btfss	status,2,c
 25568  001036  D03C               	goto	l1205
 25569                           
 25570                           ;mdm_gsm_gprs_http.c: 235: {
 25571                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 25572  001038  C0CE  F1EF         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 25573                           
 25574                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 25575  00103C  0E58               	movlw	low _RxBuffer
 25576  00103E  0100               	movlb	0	; () banked
 25577  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25578  001042  0E0C               	movlw	high _RxBuffer
 25579  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25580  001046  0E01               	movlw	1
 25581  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25582  00104A  0E90               	movlw	144
 25583  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25584  00104E  EC56  F02C         	call	_ClearBuffer	;wreg free
 25585                           
 25586                           ;mdm_gsm_gprs_http.c: 240: }
 25587                           ;mdm_gsm_gprs_http.c: 241: }
 25588  001052  D02E               	goto	l1205
 25589  001054                     l1220:
 25590                           
 25591                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 25592  001054  0EF5               	movlw	low _ConnTimeout
 25593  001056  0100               	movlb	0	; () banked
 25594  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25595  00105A  0E02               	movlw	high _ConnTimeout
 25596  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25597  00105E  EC8B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 25598  001062                     L31:
 25599  001062  06E8               	decf	wreg,f,c
 25600  001064  A4D8               	btfss	status,2,c
 25601  001066  D024               	goto	l1205
 25602                           
 25603                           ;mdm_gsm_gprs_http.c: 243: {
 25604                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 25605  001068  0E06               	movlw	6
 25606  00106A                     L67:
 25607  00106A  0101               	movlb	1	; () banked
 25608  00106C  D003               	goto	L30
 25609  00106E                     
 25610                           ; BSR set to: 1
 25611                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 25612                           
 25613                           ; BSR set to: 1
 25614  00106E  0E03               	movlw	3
 25615  001070                     L66:
 25616  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 25617                           
 25618                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 25619  001072  0E00               	movlw	0
 25620  001074                     L30:
 25621  001074  6FEF               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25622                           
 25623                           ; BSR set to: 1
 25624                           ;mdm_gsm_gprs_http.c: 257: }
 25625                           
 25626                           ; BSR set to: 1
 25627                           ;mdm_gsm_gprs_http.c: 256: break;
 25628                           
 25629                           ;mdm_gsm_gprs_http.c: 255: default:
 25630                           
 25631                           ;mdm_gsm_gprs_http.c: 253: break;
 25632  001076  D01C               	goto	l1205
 25633  001078                     l1202:
 25634                           
 25635                           ; BSR set to: 1
 25636                           
 25637                           ; BSR set to: 1
 25638  001078  51EF               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 25639                           
 25640                           ; Switch size 1, requested type "space"
 25641                           ; Number of cases is 9, Range of values is 0 to 8
 25642                           ; switch strategies available:
 25643                           ; Name         Instructions Cycles
 25644                           ; simple_byte           28    15 (average)
 25645                           ;	Chosen strategy is simple_byte
 25646  00107A  0A00               	xorlw	0	; case 0
 25647  00107C  B4D8               	btfsc	status,2,c
 25648  00107E  D6A8               	goto	l1203
 25649  001080  0A01               	xorlw	1	; case 1
 25650  001082  B4D8               	btfsc	status,2,c
 25651  001084  D6B1               	goto	l1206
 25652  001086  0A03               	xorlw	3	; case 2
 25653  001088  B4D8               	btfsc	status,2,c
 25654  00108A  D6CB               	goto	l1207
 25655  00108C  0A01               	xorlw	1	; case 3
 25656  00108E  B4D8               	btfsc	status,2,c
 25657  001090  D756               	goto	l1211
 25658  001092  0A07               	xorlw	7	; case 4
 25659  001094  B4D8               	btfsc	status,2,c
 25660  001096  D770               	goto	l1212
 25661  001098  0A01               	xorlw	1	; case 5
 25662  00109A  B4D8               	btfsc	status,2,c
 25663  00109C  D78D               	goto	l1213
 25664  00109E  0A03               	xorlw	3	; case 6
 25665  0010A0  B4D8               	btfsc	status,2,c
 25666  0010A2  D7E5               	goto	l1224
 25667  0010A4  0A01               	xorlw	1	; case 7
 25668  0010A6  B4D8               	btfsc	status,2,c
 25669  0010A8  D789               	goto	l1214
 25670  0010AA  0A0F               	xorlw	15	; case 8
 25671  0010AC  B4D8               	btfsc	status,2,c
 25672  0010AE  D7B0               	goto	l1219
 25673  0010B0                     l1205:
 25674                           
 25675                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 25676                           
 25677                           ; BSR set to: 1
 25678  0010B0  0101               	movlb	1	; () banked
 25679  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 25680  0010B4  0012               	return	
 25681  0010B6                     __end_of_InitGprsNetwork:
 25682                           	opt stack 0
 25683                           tosu	equ	0xFFF
 25684                           tosh	equ	0xFFE
 25685                           tosl	equ	0xFFD
 25686                           pclath	equ	0xFFA
 25687                           tblptru	equ	0xFF8
 25688                           tblptrh	equ	0xFF7
 25689                           tblptrl	equ	0xFF6
 25690                           tablat	equ	0xFF5
 25691                           prodh	equ	0xFF4
 25692                           prodl	equ	0xFF3
 25693                           intcon	equ	0xFF2
 25694                           intcon2	equ	0xFF1
 25695                           intcon3	equ	0xFF0
 25696                           indf0	equ	0xFEF
 25697                           postinc0	equ	0xFEE
 25698                           plusw0	equ	0xFEB
 25699                           fsr0h	equ	0xFEA
 25700                           fsr0l	equ	0xFE9
 25701                           wreg	equ	0xFE8
 25702                           indf1	equ	0xFE7
 25703                           postinc1	equ	0xFE6
 25704                           postdec1	equ	0xFE5
 25705                           plusw1	equ	0xFE3
 25706                           fsr1h	equ	0xFE2
 25707                           fsr1l	equ	0xFE1
 25708                           indf2	equ	0xFDF
 25709                           postinc2	equ	0xFDE
 25710                           postdec2	equ	0xFDD
 25711                           plusw2	equ	0xFDB
 25712                           fsr2h	equ	0xFDA
 25713                           fsr2l	equ	0xFD9
 25714                           status	equ	0xFD8
 25715                           
 25716 ;; *************** function _HttpGetMethod *****************
 25717 ;; Defined at:
 25718 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 25719 ;; Parameters:    Size  Location     Type
 25720 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 25721 ;;		 -> HttpGetDataLocal(5), 
 25722 ;; Auto vars:     Size  Location     Type
 25723 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 25724 ;;  Index           1  200[BANK1 ] unsigned char 
 25725 ;; Return value:  Size  Location     Type
 25726 ;;                  1    wreg      enum E8905
 25727 ;; Registers used:
 25728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25729 ;; Tracked objects:
 25730 ;;		On entry : 0/0
 25731 ;;		On exit  : 0/0
 25732 ;;		Unchanged: 0/0
 25733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25735 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25736 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25737 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25738 ;;Total ram usage:      207 bytes
 25739 ;; Hardware stack levels used:    1
 25740 ;; Hardware stack levels required when called:   14
 25741 ;; This function calls:
 25742 ;;		_ClearBuffer
 25743 ;;		_OsTmr_GetTimerStatus
 25744 ;;		_OsTmr_StartTimer
 25745 ;;		_ReceiveEvt
 25746 ;;		_StringCopy
 25747 ;;		_Uart_WriteConstString
 25748 ;;		_Uart_WriteString
 25749 ;; This function is called by:
 25750 ;;		_MdmHttp_MainTask
 25751 ;; This function uses a non-reentrant model
 25752 ;;
 25753                           
 25754                           	psect	text116
 25755  0005EC                     __ptext116:
 25756                           	opt stack 0
 25757  0005EC                     _HttpGetMethod:
 25758                           	opt stack 13
 25759                           
 25760                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 25761                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 25762                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 25763                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 25764                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 25765                           
 25766                           ; BSR set to: 1
 25767                           ;incstack = 0
 25768  0005EC  0E00               	movlw	0
 25769  0005EE  0101               	movlb	1	; () banked
 25770  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 25771                           
 25772                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 25773  0005F2  D230               	goto	l1235
 25774  0005F4                     
 25775                           ; BSR set to: 1
 25776                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 25777                           
 25778                           ; BSR set to: 1
 25779  0005F4  0ED7               	movlw	low _GetMethod
 25780  0005F6  0100               	movlb	0	; () banked
 25781  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25782  0005FA  0E00               	movlw	high _GetMethod
 25783  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25784  0005FE  EC34  F02D         	call	_ReceiveEvt	;wreg free
 25785  000602  0900               	iorlw	0
 25786  000604  B4D8               	btfsc	status,2,c
 25787  000606  D257               	goto	l1238
 25788                           
 25789                           ;mdm_gsm_gprs_http.c: 284: {
 25790                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 25791  000608  0E01               	movlw	1
 25792  00060A  D18C               	goto	L33
 25793  00060C                     
 25794                           ; BSR set to: 1
 25795                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 25796                           
 25797                           ; BSR set to: 1
 25798  00060C  0EA9               	movlw	low STR_12
 25799  00060E  0100               	movlb	0	; () banked
 25800  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25801  000612  0EFF               	movlw	high STR_12
 25802  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25803  000616  0E01               	movlw	1
 25804  000618  EC02  F02B         	call	_Uart_WriteConstString
 25805                           
 25806                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 25807  00061C  0E0A               	movlw	10
 25808  00061E  0101               	movlb	1	; () banked
 25809  000620  6FEE               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25810                           
 25811                           ; BSR set to: 1
 25812                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 25813  000622  0E02               	movlw	2
 25814  000624  0100               	movlb	0	; () banked
 25815  000626  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25816                           
 25817                           ; BSR set to: 0
 25818                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 25819  000628  0EF5               	movlw	low _ConnTimeout
 25820  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25821  00062C  0E02               	movlw	high _ConnTimeout
 25822  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25823  000630  0E20               	movlw	32
 25824  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25825  000634  0E4E               	movlw	78
 25826  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25827  000638  0E00               	movlw	0
 25828  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25829  00063C  0E00               	movlw	0
 25830  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25831  000640  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 25832  000644  D1AF               	goto	l13458
 25833  000646                     
 25834                           ; BSR set to: 1
 25835                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 25836                           
 25837                           ; BSR set to: 1
 25838  000646  0E73               	movlw	low STR_13
 25839  000648  0100               	movlb	0	; () banked
 25840  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25841  00064C  0EFF               	movlw	high STR_13
 25842  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25843  000650  0E01               	movlw	1
 25844  000652  EC02  F02B         	call	_Uart_WriteConstString
 25845                           
 25846                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 25847  000656  0E0A               	movlw	10
 25848  000658  0101               	movlb	1	; () banked
 25849  00065A  6FEE               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25850                           
 25851                           ; BSR set to: 1
 25852                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 25853  00065C  0E03               	movlw	3
 25854  00065E  0100               	movlb	0	; () banked
 25855  000660  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25856                           
 25857                           ; BSR set to: 0
 25858                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 25859  000662  0EF5               	movlw	low _ConnTimeout
 25860  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25861  000666  0E02               	movlw	high _ConnTimeout
 25862  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25863  00066A  0E20               	movlw	32
 25864  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25865  00066E  0E4E               	movlw	78
 25866  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25867  000672  0E00               	movlw	0
 25868  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25869  000676  0E00               	movlw	0
 25870  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25871  00067A  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 25872  00067E  D192               	goto	l13458
 25873  000680                     
 25874                           ; BSR set to: 1
 25875                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 25876                           
 25877                           ; BSR set to: 1
 25878  000680  0ED5               	movlw	low STR_14
 25879  000682  0100               	movlb	0	; () banked
 25880  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25881  000686  0EFE               	movlw	high STR_14
 25882  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25883  00068A  0E01               	movlw	1
 25884  00068C  EC02  F02B         	call	_Uart_WriteConstString
 25885                           
 25886                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 25887  000690  0E0A               	movlw	10
 25888  000692  0101               	movlb	1	; () banked
 25889  000694  6FEE               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25890                           
 25891                           ; BSR set to: 1
 25892                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 25893  000696  0E04               	movlw	4
 25894  000698  0100               	movlb	0	; () banked
 25895  00069A  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25896                           
 25897                           ; BSR set to: 0
 25898                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 25899  00069C  0EF5               	movlw	low _ConnTimeout
 25900  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25901  0006A0  0E02               	movlw	high _ConnTimeout
 25902  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25903  0006A4  0E20               	movlw	32
 25904  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25905  0006A8  0E4E               	movlw	78
 25906  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25907  0006AC  0E00               	movlw	0
 25908  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25909  0006B0  0E00               	movlw	0
 25910  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25911  0006B4  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 25912  0006B8  D175               	goto	l13458
 25913  0006BA                     
 25914                           ; BSR set to: 1
 25915                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 25916                           
 25917                           ; BSR set to: 1
 25918  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 25919  0006BC  0100               	movlb	0	; () banked
 25920  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25921  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 25922  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25923  0006C4  0E00               	movlw	0
 25924  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25925  0006C8  0EC8               	movlw	200
 25926  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25927  0006CC  EC56  F02C         	call	_ClearBuffer	;wreg free
 25928                           
 25929                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 25930  0006D0  0E13               	movlw	low STR_15
 25931  0006D2  0100               	movlb	0	; () banked
 25932  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25933  0006D6  0EFF               	movlw	high STR_15
 25934  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25935  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 25936  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25937  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 25938  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25939  0006E2  0E00               	movlw	0
 25940  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 25941  0006E6  0E13               	movlw	19
 25942  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 25943  0006EA  ECE6  F026         	call	_StringCopy	;wreg free
 25944                           
 25945                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 25946  0006EE  0E00               	movlw	0
 25947  0006F0  0101               	movlb	1	; () banked
 25948  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 25949  0006F4  D024               	goto	l1243
 25950  0006F6                     
 25951                           ; BSR set to: 1
 25952                           ;mdm_gsm_gprs_http.c: 332: {
 25953                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 25954                           
 25955                           ; BSR set to: 1
 25956  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 25957  0006F8  0D01               	mullw	1
 25958  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 25959  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 25960  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 25961  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 25962  00070A  50F3               	movf	prodl,w,c
 25963  00070C  0100               	movlb	0	; () banked
 25964  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 25965  000710  6ED9               	movwf	fsr2l,c
 25966  000712  50F4               	movf	prodh,w,c
 25967  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 25968  000716  6EDA               	movwf	fsr2h,c
 25969  000718  0101               	movlb	1	; () banked
 25970  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 25971  00071C  0100               	movlb	0	; () banked
 25972  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 25973  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 25974  000722  0E13               	movlw	19
 25975  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 25976  000726  0E00               	movlw	0
 25977  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 25978  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 25979  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 25980  00072E  6EE1               	movwf	fsr1l,c
 25981  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 25982  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 25983  000734  6EE2               	movwf	fsr1h,c
 25984  000736  CFDF FFE7          	movff	indf2,indf1
 25985                           
 25986                           ; BSR set to: 0
 25987  00073A  0101               	movlb	1	; () banked
 25988  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 25989  00073E                     l1243:
 25990                           
 25991                           ; BSR set to: 1
 25992                           
 25993                           ; BSR set to: 1
 25994  00073E  0100               	movlb	0	; () banked
 25995  000740  EE20 F002          	lfsr	2,2
 25996  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 25997  000746  26D9               	addwf	fsr2l,f,c
 25998  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 25999  00074A  22DA               	addwfc	fsr2h,f,c
 26000  00074C  50DE               	movf	postinc2,w,c
 26001  00074E  0101               	movlb	1	; () banked
 26002  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 26003  000752  A0D8               	btfss	status,0,c
 26004  000754  D7D0               	goto	l1244
 26005                           
 26006                           ; BSR set to: 1
 26007                           ;mdm_gsm_gprs_http.c: 334: }
 26008                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 26009                           
 26010                           ; BSR set to: 1
 26011  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26012  000758  0100               	movlb	0	; () banked
 26013  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 26014  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 26015  00075E  0E13               	movlw	19
 26016  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 26017  000762  0E00               	movlw	0
 26018  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 26019  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 26020  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26021  00076A  6ED9               	movwf	fsr2l,c
 26022  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 26023  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26024  000770  6EDA               	movwf	fsr2h,c
 26025  000772  0E22               	movlw	34
 26026  000774  6EDF               	movwf	indf2,c
 26027                           
 26028                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 26029  000776  0101               	movlb	1	; () banked
 26030  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26031  00077A  0100               	movlb	0	; () banked
 26032  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 26033  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 26034  000780  0E14               	movlw	20
 26035  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 26036  000784  0E00               	movlw	0
 26037  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 26038  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 26039  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26040  00078C  6ED9               	movwf	fsr2l,c
 26041  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 26042  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26043  000792  6EDA               	movwf	fsr2h,c
 26044  000794  0E0D               	movlw	13
 26045  000796  6EDF               	movwf	indf2,c
 26046                           
 26047                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 26048  000798  0101               	movlb	1	; () banked
 26049  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 26050  00079C  0100               	movlb	0	; () banked
 26051  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 26052  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 26053  0007A2  0E15               	movlw	21
 26054  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 26055  0007A6  0E00               	movlw	0
 26056  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 26057  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 26058  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 26059  0007AE  6ED9               	movwf	fsr2l,c
 26060  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 26061  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 26062  0007B4  6EDA               	movwf	fsr2h,c
 26063  0007B6  0E00               	movlw	0
 26064  0007B8  6EDF               	movwf	indf2,c
 26065                           
 26066                           ; BSR set to: 0
 26067                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 26068  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 26069  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 26070  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 26071  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 26072  0007C2  0E01               	movlw	1
 26073  0007C4  ECC2  F02B         	call	_Uart_WriteString
 26074                           
 26075                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 26076  0007C8  0E0A               	movlw	10
 26077  0007CA  0101               	movlb	1	; () banked
 26078  0007CC  6FEE               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26079                           
 26080                           ; BSR set to: 1
 26081                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 26082  0007CE  0E05               	movlw	5
 26083  0007D0  0100               	movlb	0	; () banked
 26084  0007D2  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26085                           
 26086                           ; BSR set to: 0
 26087                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 26088  0007D4  0EF5               	movlw	low _ConnTimeout
 26089  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26090  0007D8  0E02               	movlw	high _ConnTimeout
 26091  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26092  0007DC  0E20               	movlw	32
 26093  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26094  0007E0  0E4E               	movlw	78
 26095  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26096  0007E4  0E00               	movlw	0
 26097  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26098  0007E8  0E00               	movlw	0
 26099  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26100  0007EC  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 26101  0007F0  D0D9               	goto	l13458
 26102  0007F2                     
 26103                           ; BSR set to: 1
 26104                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 26105                           
 26106                           ; BSR set to: 1
 26107  0007F2  0E38               	movlw	low STR_16
 26108  0007F4  0100               	movlb	0	; () banked
 26109  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26110  0007F8  0EFF               	movlw	high STR_16
 26111  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26112  0007FC  0E01               	movlw	1
 26113  0007FE  EC02  F02B         	call	_Uart_WriteConstString
 26114                           
 26115                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 26116  000802  0E0A               	movlw	10
 26117  000804  0101               	movlb	1	; () banked
 26118  000806  6FEE               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26119                           
 26120                           ; BSR set to: 1
 26121                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 26122  000808  0E06               	movlw	6
 26123  00080A  0100               	movlb	0	; () banked
 26124  00080C  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26125                           
 26126                           ; BSR set to: 0
 26127                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 26128  00080E  0EF5               	movlw	low _ConnTimeout
 26129  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26130  000812  0E02               	movlw	high _ConnTimeout
 26131  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26132  000816  0E20               	movlw	32
 26133  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26134  00081A  0E4E               	movlw	78
 26135  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26136  00081E  0E00               	movlw	0
 26137  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26138  000822  0E00               	movlw	0
 26139  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26140  000826  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 26141                           
 26142                           ;mdm_gsm_gprs_http.c: 358: break;
 26143  00082A  D145               	goto	l1238
 26144  00082C                     
 26145                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 26146  00082C  0E07               	movlw	7
 26147  00082E  0101               	movlb	1	; () banked
 26148  000830  6FEE               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26149                           
 26150                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 26151  000832  0E09               	movlw	9
 26152  000834  0100               	movlb	0	; () banked
 26153  000836  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26154                           
 26155                           ; BSR set to: 0
 26156                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 26157  000838  0EF5               	movlw	low _ConnTimeout
 26158  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26159  00083C  0E02               	movlw	high _ConnTimeout
 26160  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26161  000840  0E20               	movlw	32
 26162  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26163  000844  0E4E               	movlw	78
 26164  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26165  000848  0E00               	movlw	0
 26166  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26167  00084C  0E00               	movlw	0
 26168  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26169  000850  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 26170                           
 26171                           ;mdm_gsm_gprs_http.c: 371: break;
 26172  000854  D130               	goto	l1238
 26173  000856                     
 26174                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 26175  000856  0E8F               	movlw	low STR_17
 26176  000858  0100               	movlb	0	; () banked
 26177  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26178  00085C  0EFF               	movlw	high STR_17
 26179  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26180  000860  0E01               	movlw	1
 26181  000862  EC02  F02B         	call	_Uart_WriteConstString
 26182                           
 26183                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 26184  000866  0E0D               	movlw	13
 26185  000868  0101               	movlb	1	; () banked
 26186  00086A  6FEE               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26187                           
 26188                           ; BSR set to: 1
 26189                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 26190  00086C  0E09               	movlw	9
 26191  00086E  0100               	movlb	0	; () banked
 26192  000870  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26193                           
 26194                           ; BSR set to: 0
 26195                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 26196  000872  0EF5               	movlw	low _ConnTimeout
 26197  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26198  000876  0E02               	movlw	high _ConnTimeout
 26199  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26200  00087A  0E20               	movlw	32
 26201  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26202  00087E  0E4E               	movlw	78
 26203  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26204  000882  0E00               	movlw	0
 26205  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26206  000886  0E00               	movlw	0
 26207  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26208  00088A  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 26209  00088E  D08A               	goto	l13458
 26210  000890                     
 26211                           ; BSR set to: 1
 26212                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 26213                           
 26214                           ; BSR set to: 1
 26215  000890  0E9C               	movlw	low STR_18
 26216  000892  0100               	movlb	0	; () banked
 26217  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26218  000896  0EFF               	movlw	high STR_18
 26219  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26220  00089A  0E01               	movlw	1
 26221  00089C  EC02  F02B         	call	_Uart_WriteConstString
 26222                           
 26223                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 26224  0008A0  0E0A               	movlw	10
 26225  0008A2  0101               	movlb	1	; () banked
 26226  0008A4  6FEE               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26227                           
 26228                           ; BSR set to: 1
 26229                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 26230  0008A6  0E0E               	movlw	14
 26231  0008A8  0100               	movlb	0	; () banked
 26232  0008AA  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26233                           
 26234                           ; BSR set to: 0
 26235                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 26236  0008AC  0EF5               	movlw	low _ConnTimeout
 26237  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26238  0008B0  0E02               	movlw	high _ConnTimeout
 26239  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26240  0008B4  0E20               	movlw	32
 26241  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26242  0008B8  0E4E               	movlw	78
 26243  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26244  0008BC  0E00               	movlw	0
 26245  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26246  0008C0  0E00               	movlw	0
 26247  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26248  0008C4  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 26249  0008C8  D06D               	goto	l13458
 26250  0008CA                     
 26251                           ; BSR set to: 1
 26252                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 26253                           
 26254                           ; BSR set to: 1
 26255  0008CA  0E3C               	movlw	low _NewStringReceived
 26256  0008CC  0100               	movlb	0	; () banked
 26257  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26258  0008D0  0E00               	movlw	high _NewStringReceived
 26259  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26260  0008D4  EC34  F02D         	call	_ReceiveEvt	;wreg free
 26261  0008D8  0900               	iorlw	0
 26262  0008DA  B4D8               	btfsc	status,2,c
 26263  0008DC  D018               	goto	l1251
 26264                           
 26265                           ;mdm_gsm_gprs_http.c: 400: {
 26266                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 26267  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 26268  0008E2  0A4F               	xorlw	79
 26269  0008E4  A4D8               	btfss	status,2,c
 26270  0008E6  D0E7               	goto	l1238
 26271  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26272  0008EC  0A4B               	xorlw	75
 26273  0008EE  A4D8               	btfss	status,2,c
 26274  0008F0  D0E2               	goto	l1238
 26275                           
 26276                           ;mdm_gsm_gprs_http.c: 403: {
 26277                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 26278  0008F2  C0CD  F1EE         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26279                           
 26280                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 26281  0008F6  0E58               	movlw	low _RxBuffer
 26282  0008F8  0100               	movlb	0	; () banked
 26283  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26284  0008FC  0E0C               	movlw	high _RxBuffer
 26285  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26286  000900  0E01               	movlw	1
 26287  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26288  000904  0E90               	movlw	144
 26289  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26290  000908  EC56  F02C         	call	_ClearBuffer	;wreg free
 26291                           
 26292                           ;mdm_gsm_gprs_http.c: 408: }
 26293                           ;mdm_gsm_gprs_http.c: 409: }
 26294  00090C  D0D4               	goto	l1238
 26295  00090E                     l1251:
 26296                           
 26297                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26298  00090E  0EF5               	movlw	low _ConnTimeout
 26299  000910  0100               	movlb	0	; () banked
 26300  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26301  000914  0E02               	movlw	high _ConnTimeout
 26302  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26303  000918  EC8B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26304  00091C                     L34:
 26305  00091C  06E8               	decf	wreg,f,c
 26306  00091E  A4D8               	btfss	status,2,c
 26307  000920  D0CA               	goto	l1238
 26308                           
 26309                           ;mdm_gsm_gprs_http.c: 411: {
 26310                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 26311  000922  0E0F               	movlw	15
 26312  000924                     L33:
 26313  000924  0101               	movlb	1	; () banked
 26314  000926  6FEE               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26315                           
 26316                           ; BSR set to: 1
 26317                           ;mdm_gsm_gprs_http.c: 414: }
 26318                           ;mdm_gsm_gprs_http.c: 415: break;
 26319                           
 26320                           ; BSR set to: 1
 26321  000928  D0C6               	goto	l1238
 26322  00092A                     
 26323                           ; BSR set to: 1
 26324                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 26325                           
 26326                           ; BSR set to: 1
 26327  00092A  0E3C               	movlw	low _NewStringReceived
 26328  00092C  0100               	movlb	0	; () banked
 26329  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26330  000930  0E00               	movlw	high _NewStringReceived
 26331  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26332  000934  EC34  F02D         	call	_ReceiveEvt	;wreg free
 26333  000938  0900               	iorlw	0
 26334  00093A  B4D8               	btfsc	status,2,c
 26335  00093C  D018               	goto	l1256
 26336                           
 26337                           ;mdm_gsm_gprs_http.c: 420: {
 26338                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 26339  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 26340  000942  0A2B               	xorlw	43
 26341  000944  A4D8               	btfss	status,2,c
 26342  000946  D0B7               	goto	l1238
 26343  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26344  00094C  0A48               	xorlw	72
 26345  00094E  A4D8               	btfss	status,2,c
 26346  000950  D0B2               	goto	l1238
 26347                           
 26348                           ;mdm_gsm_gprs_http.c: 423: {
 26349                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 26350  000952  C0CD  F1EE         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26351                           
 26352                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 26353  000956  0E58               	movlw	low _RxBuffer
 26354  000958  0100               	movlb	0	; () banked
 26355  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26356  00095C  0E0C               	movlw	high _RxBuffer
 26357  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26358  000960  0E01               	movlw	1
 26359  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26360  000964  0E90               	movlw	144
 26361  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26362  000968  EC56  F02C         	call	_ClearBuffer	;wreg free
 26363                           
 26364                           ;mdm_gsm_gprs_http.c: 428: }
 26365                           ;mdm_gsm_gprs_http.c: 429: }
 26366  00096C  D0A4               	goto	l1238
 26367  00096E                     l1256:
 26368                           
 26369                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26370  00096E  0EF5               	movlw	low _ConnTimeout
 26371  000970  0100               	movlb	0	; () banked
 26372  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26373  000974  0E02               	movlw	high _ConnTimeout
 26374  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26375  000978  EC8B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26376  00097C  D7CF               	goto	L34
 26377  00097E                     
 26378                           ; BSR set to: 1
 26379                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 26380                           
 26381                           ; BSR set to: 1
 26382  00097E  0E0C               	movlw	12
 26383  000980  6FEE               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26384                           
 26385                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 26386  000982  0E05               	movlw	5
 26387  000984  0100               	movlb	0	; () banked
 26388  000986  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26389                           
 26390                           ; BSR set to: 0
 26391                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 26392  000988  0ED5               	movlw	low _ConnWait
 26393  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26394  00098C  0E03               	movlw	high _ConnWait
 26395  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26396  000990  0EE8               	movlw	232
 26397  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26398  000994  0E03               	movlw	3
 26399  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26400  000998  0E00               	movlw	0
 26401  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26402  00099C  0E00               	movlw	0
 26403  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26404  0009A0  EC46  F027         	call	_OsTmr_StartTimer	;wreg free
 26405  0009A4                     l13458:
 26406                           
 26407                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 26408  0009A4  0E01               	movlw	1
 26409  0009A6  0101               	movlb	1	; () banked
 26410  0009A8  D053               	goto	L36
 26411  0009AA                     
 26412                           ; BSR set to: 1
 26413                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 26414                           
 26415                           ; BSR set to: 1
 26416  0009AA  0ED5               	movlw	low _ConnWait
 26417  0009AC  0100               	movlb	0	; () banked
 26418  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26419  0009B0  0E03               	movlw	high _ConnWait
 26420  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26421  0009B4  EC8B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26422  0009B8  06E8               	decf	wreg,f,c
 26423  0009BA  A4D8               	btfss	status,2,c
 26424  0009BC  D07C               	goto	l1238
 26425                           
 26426                           ;mdm_gsm_gprs_http.c: 450: {
 26427                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 26428  0009BE  C0CD  F1EE         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26429                           
 26430                           ;mdm_gsm_gprs_http.c: 453: }
 26431                           ;mdm_gsm_gprs_http.c: 454: break;
 26432  0009C2  D079               	goto	l1238
 26433  0009C4                     
 26434                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 26435  0009C4  0E3C               	movlw	low _NewStringReceived
 26436  0009C6  0100               	movlb	0	; () banked
 26437  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26438  0009CA  0E00               	movlw	high _NewStringReceived
 26439  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26440  0009CE  EC34  F02D         	call	_ReceiveEvt	;wreg free
 26441  0009D2  0900               	iorlw	0
 26442  0009D4  B4D8               	btfsc	status,2,c
 26443  0009D6  D02D               	goto	l1264
 26444                           
 26445                           ;mdm_gsm_gprs_http.c: 459: {
 26446                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 26447  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 26448  0009DC  0A2B               	xorlw	43
 26449  0009DE  A4D8               	btfss	status,2,c
 26450  0009E0  D06A               	goto	l1238
 26451  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26452  0009E6  0A48               	xorlw	72
 26453  0009E8  A4D8               	btfss	status,2,c
 26454  0009EA  D065               	goto	l1238
 26455                           
 26456                           ;mdm_gsm_gprs_http.c: 462: {
 26457                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 26458  0009EC  C0CD  F1EE         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26459                           
 26460                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 26461  0009F0  0E58               	movlw	low _RxBuffer
 26462  0009F2  0100               	movlb	0	; () banked
 26463  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26464  0009F6  0E0C               	movlw	high _RxBuffer
 26465  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26466  0009FA  EE20 F003          	lfsr	2,3
 26467  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 26468  000A00  26D9               	addwf	fsr2l,f,c
 26469  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 26470  000A04  22DA               	addwfc	fsr2h,f,c
 26471  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 26472  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 26473  000A0E  0E01               	movlw	1
 26474  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26475  000A12  0E90               	movlw	144
 26476  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 26477  000A16  ECE6  F026         	call	_StringCopy	;wreg free
 26478                           
 26479                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 26480  000A1A  0E58               	movlw	low _RxBuffer
 26481  000A1C  0100               	movlb	0	; () banked
 26482  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26483  000A20  0E0C               	movlw	high _RxBuffer
 26484  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26485  000A24  0E01               	movlw	1
 26486  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26487  000A28  0E90               	movlw	144
 26488  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26489  000A2C  EC56  F02C         	call	_ClearBuffer	;wreg free
 26490                           
 26491                           ;mdm_gsm_gprs_http.c: 469: }
 26492                           ;mdm_gsm_gprs_http.c: 470: }
 26493  000A30  D042               	goto	l1238
 26494  000A32                     l1264:
 26495                           
 26496                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26497  000A32  0EF5               	movlw	low _ConnTimeout
 26498  000A34  0100               	movlb	0	; () banked
 26499  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26500  000A38  0E02               	movlw	high _ConnTimeout
 26501  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26502  000A3C  EC8B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26503  000A40  D76D               	goto	L34
 26504  000A42                     
 26505                           ; BSR set to: 1
 26506                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 26507                           
 26508                           ; BSR set to: 1
 26509  000A42  0E00               	movlw	0
 26510  000A44  6FEE               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26511                           
 26512                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 26513  000A46  0E02               	movlw	2
 26514  000A48  D003               	goto	L36
 26515  000A4A                     
 26516                           ; BSR set to: 1
 26517                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 26518                           
 26519                           ; BSR set to: 1
 26520  000A4A  0E00               	movlw	0
 26521  000A4C  6FEE               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26522                           
 26523                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 26524  000A4E  0E03               	movlw	3
 26525  000A50                     L36:
 26526  000A50  6FED               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 26527                           
 26528                           ; BSR set to: 1
 26529                           ;mdm_gsm_gprs_http.c: 494: }
 26530                           
 26531                           ; BSR set to: 1
 26532                           ;mdm_gsm_gprs_http.c: 493: break;
 26533                           
 26534                           ;mdm_gsm_gprs_http.c: 492: default:
 26535                           
 26536                           ;mdm_gsm_gprs_http.c: 490: break;
 26537  000A52  D031               	goto	l1238
 26538  000A54                     l1235:
 26539                           
 26540                           ; BSR set to: 1
 26541                           
 26542                           ; BSR set to: 1
 26543  000A54  51EE               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 26544                           
 26545                           ; Switch size 1, requested type "space"
 26546                           ; Number of cases is 16, Range of values is 0 to 15
 26547                           ; switch strategies available:
 26548                           ; Name         Instructions Cycles
 26549                           ; simple_byte           49    25 (average)
 26550                           ;	Chosen strategy is simple_byte
 26551  000A56  0A00               	xorlw	0	; case 0
 26552  000A58  B4D8               	btfsc	status,2,c
 26553  000A5A  D5CC               	goto	l1236
 26554  000A5C  0A01               	xorlw	1	; case 1
 26555  000A5E  B4D8               	btfsc	status,2,c
 26556  000A60  D5D5               	goto	l1239
 26557  000A62  0A03               	xorlw	3	; case 2
 26558  000A64  B4D8               	btfsc	status,2,c
 26559  000A66  D5EF               	goto	l1240
 26560  000A68  0A01               	xorlw	1	; case 3
 26561  000A6A  B4D8               	btfsc	status,2,c
 26562  000A6C  D609               	goto	l1241
 26563  000A6E  0A07               	xorlw	7	; case 4
 26564  000A70  B4D8               	btfsc	status,2,c
 26565  000A72  D623               	goto	l1242
 26566  000A74  0A01               	xorlw	1	; case 5
 26567  000A76  B4D8               	btfsc	status,2,c
 26568  000A78  D6BC               	goto	l1246
 26569  000A7A  0A03               	xorlw	3	; case 6
 26570  000A7C  B4D8               	btfsc	status,2,c
 26571  000A7E  D6D6               	goto	l1247
 26572  000A80  0A01               	xorlw	1	; case 7
 26573  000A82  B4D8               	btfsc	status,2,c
 26574  000A84  D752               	goto	l1255
 26575  000A86  0A0F               	xorlw	15	; case 8
 26576  000A88  B4D8               	btfsc	status,2,c
 26577  000A8A  D6E5               	goto	l1248
 26578  000A8C  0A01               	xorlw	1	; case 9
 26579  000A8E  B4D8               	btfsc	status,2,c
 26580  000A90  D6FF               	goto	l1249
 26581  000A92  0A03               	xorlw	3	; case 10
 26582  000A94  B4D8               	btfsc	status,2,c
 26583  000A96  D719               	goto	l1250
 26584  000A98  0A01               	xorlw	1	; case 11
 26585  000A9A  B4D8               	btfsc	status,2,c
 26586  000A9C  D770               	goto	l1260
 26587  000A9E  0A07               	xorlw	7	; case 12
 26588  000AA0  B4D8               	btfsc	status,2,c
 26589  000AA2  D783               	goto	l1261
 26590  000AA4  0A01               	xorlw	1	; case 13
 26591  000AA6  B4D8               	btfsc	status,2,c
 26592  000AA8  D78D               	goto	l1263
 26593  000AAA  0A03               	xorlw	3	; case 14
 26594  000AAC  B4D8               	btfsc	status,2,c
 26595  000AAE  D7C9               	goto	l1268
 26596  000AB0  0A01               	xorlw	1	; case 15
 26597  000AB2  B4D8               	btfsc	status,2,c
 26598  000AB4  D7CA               	goto	l1269
 26599  000AB6                     l1238:
 26600                           
 26601                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 26602                           
 26603                           ; BSR set to: 1
 26604  000AB6  0101               	movlb	1	; () banked
 26605  000AB8  51ED               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 26606  000ABA  0012               	return	
 26607  000ABC                     __end_of_HttpGetMethod:
 26608                           	opt stack 0
 26609                           tosu	equ	0xFFF
 26610                           tosh	equ	0xFFE
 26611                           tosl	equ	0xFFD
 26612                           pclath	equ	0xFFA
 26613                           tblptru	equ	0xFF8
 26614                           tblptrh	equ	0xFF7
 26615                           tblptrl	equ	0xFF6
 26616                           tablat	equ	0xFF5
 26617                           prodh	equ	0xFF4
 26618                           prodl	equ	0xFF3
 26619                           intcon	equ	0xFF2
 26620                           intcon2	equ	0xFF1
 26621                           intcon3	equ	0xFF0
 26622                           indf0	equ	0xFEF
 26623                           postinc0	equ	0xFEE
 26624                           plusw0	equ	0xFEB
 26625                           fsr0h	equ	0xFEA
 26626                           fsr0l	equ	0xFE9
 26627                           wreg	equ	0xFE8
 26628                           indf1	equ	0xFE7
 26629                           postinc1	equ	0xFE6
 26630                           postdec1	equ	0xFE5
 26631                           plusw1	equ	0xFE3
 26632                           fsr1h	equ	0xFE2
 26633                           fsr1l	equ	0xFE1
 26634                           indf2	equ	0xFDF
 26635                           postinc2	equ	0xFDE
 26636                           postdec2	equ	0xFDD
 26637                           plusw2	equ	0xFDB
 26638                           fsr2h	equ	0xFDA
 26639                           fsr2l	equ	0xFD9
 26640                           status	equ	0xFD8
 26641                           
 26642 ;; *************** function _Uart_WriteString *****************
 26643 ;; Defined at:
 26644 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26645 ;; Parameters:    Size  Location     Type
 26646 ;;  Module          1    wreg     unsigned char 
 26647 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 26648 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 26649 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 26650 ;; Auto vars:     Size  Location     Type
 26651 ;;  Module          1   34[BANK0 ] unsigned char 
 26652 ;; Return value:  Size  Location     Type
 26653 ;;                  1    wreg      void 
 26654 ;; Registers used:
 26655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26656 ;; Tracked objects:
 26657 ;;		On entry : 0/0
 26658 ;;		On exit  : 0/0
 26659 ;;		Unchanged: 0/0
 26660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26661 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26662 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26664 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26665 ;;Total ram usage:        3 bytes
 26666 ;; Hardware stack levels used:    1
 26667 ;; Hardware stack levels required when called:   12
 26668 ;; This function calls:
 26669 ;;		_UartTxBufferStatus
 26670 ;;		_UartWriteByte
 26671 ;; This function is called by:
 26672 ;;		_InitGprsNetwork
 26673 ;;		_HttpGetMethod
 26674 ;;		_Mdm_PinUnlock
 26675 ;;		_Mdm_SetSmsFormat
 26676 ;;		_Mdm_MakePhoneCall
 26677 ;; This function uses a non-reentrant model
 26678 ;;
 26679                           
 26680                           	psect	text117
 26681  005784                     __ptext117:
 26682                           	opt stack 0
 26683  005784                     _Uart_WriteString:
 26684                           	opt stack 14
 26685                           
 26686                           ; BSR set to: 1
 26687                           ;incstack = 0
 26688                           ;Uart_WriteString@Module stored from wreg
 26689  005784  0100               	movlb	0	; () banked
 26690  005786  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 26691                           
 26692                           ;uart_drv.c: 521: while (*StringToWrite)
 26693  005788  D014               	goto	u11380
 26694  00578A                     
 26695                           ;uart_drv.c: 522: {
 26696                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 26697  00578A  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 26698  00578E  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 26699  005792  50DF               	movf	indf2,w,c
 26700  005794  0100               	movlb	0	; () banked
 26701  005796  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 26702  005798  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 26703  00579A  EC5E  F02E         	call	_UartWriteByte
 26704                           
 26705                           ;uart_drv.c: 526: StringToWrite++;
 26706  00579E  0100               	movlb	0	; () banked
 26707  0057A0  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 26708  0057A2  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 26709  0057A4                     
 26710                           ; BSR set to: 0
 26711                           
 26712                           ; BSR set to: 0
 26713  0057A4  0100               	movlb	0	; () banked
 26714  0057A6  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 26715  0057A8  EC9C  F029         	call	_UartTxBufferStatus
 26716  0057AC  06E8               	decf	wreg,f,c
 26717  0057AE  B4D8               	btfsc	status,2,c
 26718  0057B0  D7F9               	goto	l709
 26719  0057B2                     u11380:
 26720  0057B2  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 26721  0057B6  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 26722  0057BA  50DF               	movf	indf2,w,c
 26723  0057BC  B4D8               	btfsc	status,2,c
 26724  0057BE  0012               	return	
 26725  0057C0  D7E4               	goto	l707
 26726  0057C2                     __end_of_Uart_WriteString:
 26727                           	opt stack 0
 26728                           tosu	equ	0xFFF
 26729                           tosh	equ	0xFFE
 26730                           tosl	equ	0xFFD
 26731                           pclath	equ	0xFFA
 26732                           tblptru	equ	0xFF8
 26733                           tblptrh	equ	0xFF7
 26734                           tblptrl	equ	0xFF6
 26735                           tablat	equ	0xFF5
 26736                           prodh	equ	0xFF4
 26737                           prodl	equ	0xFF3
 26738                           intcon	equ	0xFF2
 26739                           intcon2	equ	0xFF1
 26740                           intcon3	equ	0xFF0
 26741                           indf0	equ	0xFEF
 26742                           postinc0	equ	0xFEE
 26743                           plusw0	equ	0xFEB
 26744                           fsr0h	equ	0xFEA
 26745                           fsr0l	equ	0xFE9
 26746                           wreg	equ	0xFE8
 26747                           indf1	equ	0xFE7
 26748                           postinc1	equ	0xFE6
 26749                           postdec1	equ	0xFE5
 26750                           plusw1	equ	0xFE3
 26751                           fsr1h	equ	0xFE2
 26752                           fsr1l	equ	0xFE1
 26753                           indf2	equ	0xFDF
 26754                           postinc2	equ	0xFDE
 26755                           postdec2	equ	0xFDD
 26756                           plusw2	equ	0xFDB
 26757                           fsr2h	equ	0xFDA
 26758                           fsr2l	equ	0xFD9
 26759                           status	equ	0xFD8
 26760                           
 26761 ;; *************** function _Uart_WriteConstString *****************
 26762 ;; Defined at:
 26763 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26764 ;; Parameters:    Size  Location     Type
 26765 ;;  Module          1    wreg     unsigned char 
 26766 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 26767 ;;		 -> STR_29(5), STR_20(14), STR_19(14), STR_18(13), 
 26768 ;;		 -> STR_17(13), STR_16(17), STR_14(21), STR_13(14), 
 26769 ;;		 -> STR_12(13), STR_11(14), STR_10(14), STR_8(31), 
 26770 ;;		 -> STR_7(5), STR_6(5), STR_4(11), STR_3(7), 
 26771 ;;		 -> STR_2(14), STR_1(5), 
 26772 ;; Auto vars:     Size  Location     Type
 26773 ;;  Module          1   34[BANK0 ] unsigned char 
 26774 ;; Return value:  Size  Location     Type
 26775 ;;                  1    wreg      void 
 26776 ;; Registers used:
 26777 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26778 ;; Tracked objects:
 26779 ;;		On entry : 0/0
 26780 ;;		On exit  : 0/0
 26781 ;;		Unchanged: 0/0
 26782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26783 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26784 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26786 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26787 ;;Total ram usage:        3 bytes
 26788 ;; Hardware stack levels used:    1
 26789 ;; Hardware stack levels required when called:   12
 26790 ;; This function calls:
 26791 ;;		_UartTxBufferStatus
 26792 ;;		_UartWriteByte
 26793 ;; This function is called by:
 26794 ;;		_CheckModem
 26795 ;;		_ConfigureModem
 26796 ;;		_GetSmsSm
 26797 ;;		_InitGprsNetwork
 26798 ;;		_HttpGetMethod
 26799 ;;		_initGprsModem
 26800 ;;		_Mdm_HangPhoneCall
 26801 ;;		_Mdm_GetPhoneCall
 26802 ;;		_MdmHttp_SetSsl
 26803 ;; This function uses a non-reentrant model
 26804 ;;
 26805                           
 26806                           	psect	text118
 26807  005604                     __ptext118:
 26808                           	opt stack 0
 26809  005604                     _Uart_WriteConstString:
 26810                           	opt stack 14
 26811                           
 26812                           ;incstack = 0
 26813                           ;Uart_WriteConstString@Module stored from wreg
 26814  005604  0100               	movlb	0	; () banked
 26815  005606  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 26816                           
 26817                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 26818  005608  D015               	goto	u11360
 26819  00560A                     
 26820                           ;uart_drv.c: 500: {
 26821                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 26822  00560A  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 26823  00560E  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 26824  005612                     	if	0	;tblptru may be non-zero
 26825  005612                     	endif
 26826  005612                     	if	0	;tblptru may be non-zero
 26827  005612                     	endif
 26828  005612  0008               	tblrd		*
 26829  005614  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 26830  005618  0100               	movlb	0	; () banked
 26831  00561A  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 26832  00561C  EC5E  F02E         	call	_UartWriteByte
 26833                           
 26834                           ;uart_drv.c: 504: ConstStringToWrite++;
 26835  005620  0100               	movlb	0	; () banked
 26836  005622  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 26837  005624  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 26838  005626                     
 26839                           ; BSR set to: 0
 26840                           
 26841                           ; BSR set to: 0
 26842  005626  0100               	movlb	0	; () banked
 26843  005628  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 26844  00562A  EC9C  F029         	call	_UartTxBufferStatus
 26845  00562E  06E8               	decf	wreg,f,c
 26846  005630  B4D8               	btfsc	status,2,c
 26847  005632  D7F9               	goto	l700
 26848  005634                     u11360:
 26849  005634  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 26850  005638  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 26851  00563C                     	if	0	;tblptru may be non-zero
 26852  00563C                     	endif
 26853  00563C                     	if	0	;tblptru may be non-zero
 26854  00563C                     	endif
 26855  00563C  0008               	tblrd		*
 26856  00563E  50F5               	movf	tablat,w,c
 26857  005640  0900               	iorlw	0
 26858  005642  B4D8               	btfsc	status,2,c
 26859  005644  0012               	return	
 26860  005646  D7E1               	goto	l698
 26861  005648                     __end_of_Uart_WriteConstString:
 26862                           	opt stack 0
 26863                           tosu	equ	0xFFF
 26864                           tosh	equ	0xFFE
 26865                           tosl	equ	0xFFD
 26866                           pclath	equ	0xFFA
 26867                           tblptru	equ	0xFF8
 26868                           tblptrh	equ	0xFF7
 26869                           tblptrl	equ	0xFF6
 26870                           tablat	equ	0xFF5
 26871                           prodh	equ	0xFF4
 26872                           prodl	equ	0xFF3
 26873                           intcon	equ	0xFF2
 26874                           intcon2	equ	0xFF1
 26875                           intcon3	equ	0xFF0
 26876                           indf0	equ	0xFEF
 26877                           postinc0	equ	0xFEE
 26878                           plusw0	equ	0xFEB
 26879                           fsr0h	equ	0xFEA
 26880                           fsr0l	equ	0xFE9
 26881                           wreg	equ	0xFE8
 26882                           indf1	equ	0xFE7
 26883                           postinc1	equ	0xFE6
 26884                           postdec1	equ	0xFE5
 26885                           plusw1	equ	0xFE3
 26886                           fsr1h	equ	0xFE2
 26887                           fsr1l	equ	0xFE1
 26888                           indf2	equ	0xFDF
 26889                           postinc2	equ	0xFDE
 26890                           postdec2	equ	0xFDD
 26891                           plusw2	equ	0xFDB
 26892                           fsr2h	equ	0xFDA
 26893                           fsr2l	equ	0xFD9
 26894                           status	equ	0xFD8
 26895                           
 26896 ;; *************** function _UartWriteByte *****************
 26897 ;; Defined at:
 26898 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26899 ;; Parameters:    Size  Location     Type
 26900 ;;  Module          1    wreg     unsigned char 
 26901 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 26902 ;; Auto vars:     Size  Location     Type
 26903 ;;  Module          1   30[BANK0 ] unsigned char 
 26904 ;; Return value:  Size  Location     Type
 26905 ;;                  1    wreg      void 
 26906 ;; Registers used:
 26907 ;;		wreg, status,2, status,0
 26908 ;; Tracked objects:
 26909 ;;		On entry : 0/0
 26910 ;;		On exit  : 0/0
 26911 ;;		Unchanged: 0/0
 26912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26913 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26916 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26917 ;;Total ram usage:        2 bytes
 26918 ;; Hardware stack levels used:    1
 26919 ;; Hardware stack levels required when called:   11
 26920 ;; This function calls:
 26921 ;;		Nothing
 26922 ;; This function is called by:
 26923 ;;		_Uart_WriteConstString
 26924 ;;		_Uart_WriteString
 26925 ;;		_Uart_WriteStringLen
 26926 ;; This function uses a non-reentrant model
 26927 ;;
 26928                           
 26929                           	psect	text119
 26930  005CBC                     __ptext119:
 26931                           	opt stack 0
 26932  005CBC                     _UartWriteByte:
 26933                           	opt stack 14
 26934                           
 26935                           ;incstack = 0
 26936                           ;UartWriteByte@Module stored from wreg
 26937  005CBC  0100               	movlb	0	; () banked
 26938  005CBE  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 26939                           
 26940                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 26941  005CC0  0100               	movlb	0	; () banked
 26942  005CC2  057E               	decf	UartWriteByte@Module& (0+255),w,b
 26943  005CC4  A4D8               	btfss	status,2,c
 26944  005CC6  D003               	goto	l639
 26945                           
 26946                           ; BSR set to: 0
 26947                           ;uart_drv.c: 176: {
 26948                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 26949  005CC8  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 26950                           
 26951                           ;uart_drv.c: 179: }
 26952  005CCC  0012               	return	
 26953  005CCE                     l639:
 26954                           
 26955                           ; BSR set to: 0
 26956                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 26957                           
 26958                           ; BSR set to: 0
 26959  005CCE  0E02               	movlw	2
 26960  005CD0  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 26961  005CD2  A4D8               	btfss	status,2,c
 26962  005CD4  0012               	return	
 26963                           
 26964                           ; BSR set to: 0
 26965                           ;uart_drv.c: 181: {
 26966                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 26967  005CD6  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 26968                           
 26969                           ; BSR set to: 0
 26970  005CDA  0012               	return	
 26971  005CDC                     __end_of_UartWriteByte:
 26972                           	opt stack 0
 26973                           tosu	equ	0xFFF
 26974                           tosh	equ	0xFFE
 26975                           tosl	equ	0xFFD
 26976                           pclath	equ	0xFFA
 26977                           tblptru	equ	0xFF8
 26978                           tblptrh	equ	0xFF7
 26979                           tblptrl	equ	0xFF6
 26980                           tablat	equ	0xFF5
 26981                           prodh	equ	0xFF4
 26982                           prodl	equ	0xFF3
 26983                           intcon	equ	0xFF2
 26984                           intcon2	equ	0xFF1
 26985                           intcon3	equ	0xFF0
 26986                           indf0	equ	0xFEF
 26987                           postinc0	equ	0xFEE
 26988                           plusw0	equ	0xFEB
 26989                           fsr0h	equ	0xFEA
 26990                           fsr0l	equ	0xFE9
 26991                           wreg	equ	0xFE8
 26992                           indf1	equ	0xFE7
 26993                           postinc1	equ	0xFE6
 26994                           postdec1	equ	0xFE5
 26995                           plusw1	equ	0xFE3
 26996                           fsr1h	equ	0xFE2
 26997                           fsr1l	equ	0xFE1
 26998                           indf2	equ	0xFDF
 26999                           postinc2	equ	0xFDE
 27000                           postdec2	equ	0xFDD
 27001                           plusw2	equ	0xFDB
 27002                           fsr2h	equ	0xFDA
 27003                           fsr2l	equ	0xFD9
 27004                           status	equ	0xFD8
 27005                           
 27006 ;; *************** function _UartTxBufferStatus *****************
 27007 ;; Defined at:
 27008 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27009 ;; Parameters:    Size  Location     Type
 27010 ;;  Module          1    wreg     unsigned char 
 27011 ;; Auto vars:     Size  Location     Type
 27012 ;;  Module          1   30[BANK0 ] unsigned char 
 27013 ;;  TxBufferStat    1   31[BANK0 ] enum E9017
 27014 ;; Return value:  Size  Location     Type
 27015 ;;                  1    wreg      enum E9017
 27016 ;; Registers used:
 27017 ;;		wreg, status,2, status,0
 27018 ;; Tracked objects:
 27019 ;;		On entry : 0/0
 27020 ;;		On exit  : 0/0
 27021 ;;		Unchanged: 0/0
 27022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27024 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27025 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27026 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27027 ;;Total ram usage:        3 bytes
 27028 ;; Hardware stack levels used:    1
 27029 ;; Hardware stack levels required when called:   11
 27030 ;; This function calls:
 27031 ;;		Nothing
 27032 ;; This function is called by:
 27033 ;;		_Uart_WriteConstString
 27034 ;;		_Uart_WriteString
 27035 ;;		_Uart_WriteStringLen
 27036 ;; This function uses a non-reentrant model
 27037 ;;
 27038                           
 27039                           	psect	text120
 27040  005338                     __ptext120:
 27041                           	opt stack 0
 27042  005338                     _UartTxBufferStatus:
 27043                           	opt stack 14
 27044                           
 27045                           ; BSR set to: 0
 27046                           ;incstack = 0
 27047                           ;UartTxBufferStatus@Module stored from wreg
 27048  005338  0100               	movlb	0	; () banked
 27049  00533A  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 27050                           
 27051                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 27052  00533C  0E00               	movlw	0
 27053  00533E  0100               	movlb	0	; () banked
 27054  005340  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 27055                           
 27056                           ; BSR set to: 0
 27057                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 27058  005342  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 27059  005344  A4D8               	btfss	status,2,c
 27060  005346  D00B               	goto	l651
 27061                           
 27062                           ; BSR set to: 0
 27063                           ;uart_drv.c: 228: {
 27064                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 27065  005348  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 27066  00534C  90D8               	bcf	status,0,c
 27067  00534E  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 27068  005350  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 27069  005352  D002               	goto	l652
 27070  005354                     u10730:
 27071                           
 27072                           ; BSR set to: 0
 27073                           ;uart_drv.c: 231: {
 27074                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 27075  005354  0E01               	movlw	1
 27076  005356  D014               	goto	L39
 27077  005358                     l652:
 27078                           
 27079                           ; BSR set to: 0
 27080                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 27081                           
 27082                           ; BSR set to: 0
 27083  005358  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 27084  00535C  D00C               	goto	L68
 27085  00535E                     l651:
 27086                           
 27087                           ; BSR set to: 0
 27088                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 27089                           
 27090                           ; BSR set to: 0
 27091  00535E  0E02               	movlw	2
 27092  005360  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 27093  005362  A4D8               	btfss	status,2,c
 27094  005364  D00E               	goto	l660
 27095                           
 27096                           ; BSR set to: 0
 27097                           ;uart_drv.c: 244: {
 27098                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 27099  005366  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 27100  00536A  90D8               	bcf	status,0,c
 27101  00536C  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 27102  00536E  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 27103  005370  D7F1               	goto	u10730
 27104                           
 27105                           ; BSR set to: 0
 27106                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 27107                           
 27108                           ; BSR set to: 0
 27109                           
 27110                           ;uart_drv.c: 249: }
 27111                           
 27112                           ; BSR set to: 0
 27113                           ;uart_drv.c: 247: {
 27114                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 27115  005372  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 27116  005376                     L68:
 27117  005376  90D8               	bcf	status,0,c
 27118  005378  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 27119  00537A  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 27120  00537C  D002               	goto	l660
 27121                           
 27122                           ; BSR set to: 0
 27123                           ;uart_drv.c: 251: {
 27124                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 27125  00537E  0E02               	movlw	2
 27126  005380                     L39:
 27127  005380  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 27128  005382                     l660:
 27129                           
 27130                           ; BSR set to: 0
 27131                           ;uart_drv.c: 257: }
 27132                           ;uart_drv.c: 258: }
 27133                           ;uart_drv.c: 260: return TxBufferStatus;
 27134                           
 27135                           ; BSR set to: 0
 27136                           
 27137                           ; BSR set to: 0
 27138                           
 27139                           ; BSR set to: 0
 27140                           
 27141                           ; BSR set to: 0
 27142                           
 27143                           ;uart_drv.c: 254: else
 27144                           ;uart_drv.c: 255: {
 27145                           
 27146                           ; BSR set to: 0
 27147  005382  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 27148  005384  0012               	return	
 27149  005386                     __end_of_UartTxBufferStatus:
 27150                           	opt stack 0
 27151                           tosu	equ	0xFFF
 27152                           tosh	equ	0xFFE
 27153                           tosl	equ	0xFFD
 27154                           pclath	equ	0xFFA
 27155                           tblptru	equ	0xFF8
 27156                           tblptrh	equ	0xFF7
 27157                           tblptrl	equ	0xFF6
 27158                           tablat	equ	0xFF5
 27159                           prodh	equ	0xFF4
 27160                           prodl	equ	0xFF3
 27161                           intcon	equ	0xFF2
 27162                           intcon2	equ	0xFF1
 27163                           intcon3	equ	0xFF0
 27164                           indf0	equ	0xFEF
 27165                           postinc0	equ	0xFEE
 27166                           plusw0	equ	0xFEB
 27167                           fsr0h	equ	0xFEA
 27168                           fsr0l	equ	0xFE9
 27169                           wreg	equ	0xFE8
 27170                           indf1	equ	0xFE7
 27171                           postinc1	equ	0xFE6
 27172                           postdec1	equ	0xFE5
 27173                           plusw1	equ	0xFE3
 27174                           fsr1h	equ	0xFE2
 27175                           fsr1l	equ	0xFE1
 27176                           indf2	equ	0xFDF
 27177                           postinc2	equ	0xFDE
 27178                           postdec2	equ	0xFDD
 27179                           plusw2	equ	0xFDB
 27180                           fsr2h	equ	0xFDA
 27181                           fsr2l	equ	0xFD9
 27182                           status	equ	0xFD8
 27183                           
 27184 ;; *************** function _StringCopy *****************
 27185 ;; Defined at:
 27186 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 27187 ;; Parameters:    Size  Location     Type
 27188 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 27189 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 27190 ;;		 -> STR_5(10), Mdm_SmsRx(132), RxBuffer(400), 
 27191 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 27192 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), 
 27193 ;;		 -> SendSmsSm@UartMessage(50), Mdm_SmsRx(132), 
 27194 ;;  Len             2   33[BANK0 ] unsigned short 
 27195 ;; Auto vars:     Size  Location     Type
 27196 ;;  Index           2   37[BANK0 ] unsigned short 
 27197 ;; Return value:  Size  Location     Type
 27198 ;;                  1    wreg      void 
 27199 ;; Registers used:
 27200 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 27201 ;; Tracked objects:
 27202 ;;		On entry : 0/0
 27203 ;;		On exit  : 0/0
 27204 ;;		Unchanged: 0/0
 27205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27206 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27207 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27208 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27209 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27210 ;;Total ram usage:       10 bytes
 27211 ;; Hardware stack levels used:    1
 27212 ;; Hardware stack levels required when called:   11
 27213 ;; This function calls:
 27214 ;;		Nothing
 27215 ;; This function is called by:
 27216 ;;		_GetSmsSm
 27217 ;;		_SendSmsSm
 27218 ;;		_InitGprsNetwork
 27219 ;;		_HttpGetMethod
 27220 ;;		_Mdm_GetSmsData
 27221 ;;		_Mdm_SendSmsData
 27222 ;; This function uses a non-reentrant model
 27223 ;;
 27224                           
 27225                           	psect	text121
 27226  004DCC                     __ptext121:
 27227                           	opt stack 0
 27228  004DCC                     _StringCopy:
 27229                           	opt stack 15
 27230                           
 27231                           ;sf.c: 106: UINT16 Index = 0;
 27232                           
 27233                           ; BSR set to: 0
 27234                           ;incstack = 0
 27235  004DCC  0E00               	movlw	0
 27236  004DCE  0100               	movlb	0	; () banked
 27237  004DD0  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 27238  004DD2  0E00               	movlw	0
 27239  004DD4  6F85               	movwf	StringCopy@Index& (0+255),b
 27240                           
 27241                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 27242  004DD6  0E00               	movlw	0
 27243  004DD8  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 27244  004DDA  0E00               	movlw	0
 27245  004DDC  6F85               	movwf	StringCopy@Index& (0+255),b
 27246  004DDE  D020               	goto	l2204
 27247  004DE0                     
 27248                           ; BSR set to: 0
 27249                           ;sf.c: 110: {
 27250                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 27251                           
 27252                           ; BSR set to: 0
 27253  004DE0  5185               	movf	StringCopy@Index& (0+255),w,b
 27254  004DE2  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 27255  004DE4  6F83               	movwf	??_StringCopy& (0+255),b
 27256  004DE6  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 27257  004DE8  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 27258  004DEA  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 27259  004DEC  C083  FFF6         	movff	??_StringCopy,tblptrl
 27260  004DF0  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 27261  004DF4  6AF8               	clrf	tblptru,c
 27262  004DF6  5185               	movf	StringCopy@Index& (0+255),w,b
 27263  004DF8  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 27264  004DFA  6ED9               	movwf	fsr2l,c
 27265  004DFC  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 27266  004DFE  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 27267  004E00  6EDA               	movwf	fsr2h,c
 27268  004E02  0E0E               	movlw	(high __ramtop+-1)
 27269  004E04  64F7               	cpfsgt	tblptrh,c
 27270  004E06  D003               	bra	u11427
 27271  004E08  0008               	tblrd		*
 27272  004E0A  50F5               	movf	tablat,w,c
 27273  004E0C  D005               	bra	u11420
 27274  004E0E                     u11427:
 27275  004E0E  CFF6 FFE9          	movff	tblptrl,fsr0l
 27276  004E12  CFF7 FFEA          	movff	tblptrh,fsr0h
 27277  004E16  50EF               	movf	indf0,w,c
 27278  004E18                     u11420:
 27279  004E18  6EDF               	movwf	indf2,c
 27280  004E1A  0100               	movlb	0	; () banked
 27281  004E1C  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 27282  004E1E  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 27283  004E20                     l2204:
 27284                           
 27285                           ; BSR set to: 0
 27286                           
 27287                           ; BSR set to: 0
 27288  004E20  5181               	movf	StringCopy@Len& (0+255),w,b
 27289  004E22  5D85               	subwf	StringCopy@Index& (0+255),w,b
 27290  004E24  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 27291  004E26  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 27292  004E28  B0D8               	btfsc	status,0,c
 27293  004E2A  0012               	return	
 27294  004E2C  D7D9               	goto	l2205
 27295  004E2E                     __end_of_StringCopy:
 27296                           	opt stack 0
 27297                           tosu	equ	0xFFF
 27298                           tosh	equ	0xFFE
 27299                           tosl	equ	0xFFD
 27300                           pclath	equ	0xFFA
 27301                           tblptru	equ	0xFF8
 27302                           tblptrh	equ	0xFF7
 27303                           tblptrl	equ	0xFF6
 27304                           tablat	equ	0xFF5
 27305                           prodh	equ	0xFF4
 27306                           prodl	equ	0xFF3
 27307                           intcon	equ	0xFF2
 27308                           intcon2	equ	0xFF1
 27309                           intcon3	equ	0xFF0
 27310                           indf0	equ	0xFEF
 27311                           postinc0	equ	0xFEE
 27312                           plusw0	equ	0xFEB
 27313                           fsr0h	equ	0xFEA
 27314                           fsr0l	equ	0xFE9
 27315                           wreg	equ	0xFE8
 27316                           indf1	equ	0xFE7
 27317                           postinc1	equ	0xFE6
 27318                           postdec1	equ	0xFE5
 27319                           plusw1	equ	0xFE3
 27320                           fsr1h	equ	0xFE2
 27321                           fsr1l	equ	0xFE1
 27322                           indf2	equ	0xFDF
 27323                           postinc2	equ	0xFDE
 27324                           postdec2	equ	0xFDD
 27325                           plusw2	equ	0xFDB
 27326                           fsr2h	equ	0xFDA
 27327                           fsr2l	equ	0xFD9
 27328                           status	equ	0xFD8
 27329                           
 27330 ;; *************** function _OsTmr_StartTimer *****************
 27331 ;; Defined at:
 27332 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27333 ;; Parameters:    Size  Location     Type
 27334 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 27335 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 27336 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 27337 ;;  Timeout         4   35[BANK0 ] unsigned long 
 27338 ;; Auto vars:     Size  Location     Type
 27339 ;;		None
 27340 ;; Return value:  Size  Location     Type
 27341 ;;                  1    wreg      void 
 27342 ;; Registers used:
 27343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27344 ;; Tracked objects:
 27345 ;;		On entry : 0/0
 27346 ;;		On exit  : 0/0
 27347 ;;		Unchanged: 0/0
 27348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27349 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27352 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27353 ;;Total ram usage:        6 bytes
 27354 ;; Hardware stack levels used:    1
 27355 ;; Hardware stack levels required when called:   12
 27356 ;; This function calls:
 27357 ;;		_GetOsTickCounter
 27358 ;; This function is called by:
 27359 ;;		_OsTmr_Wait
 27360 ;;		_CheckModem
 27361 ;;		_SendSmsSm
 27362 ;;		_InitGprsNetwork
 27363 ;;		_HttpGetMethod
 27364 ;;		_Term_MainSm
 27365 ;;		_I2cSlv_QueryI2cData
 27366 ;; This function uses a non-reentrant model
 27367 ;;
 27368                           
 27369                           	psect	text122
 27370  004E8C                     __ptext122:
 27371                           	opt stack 0
 27372  004E8C                     _OsTmr_StartTimer:
 27373                           	opt stack 12
 27374                           
 27375                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 27376                           
 27377                           ; BSR set to: 0
 27378                           ;incstack = 0
 27379  004E8C  0100               	movlb	0	; () banked
 27380  004E8E  EE20 F001          	lfsr	2,1
 27381  004E92  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 27382  004E94  26D9               	addwf	fsr2l,f,c
 27383  004E96  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 27384  004E98  22DA               	addwfc	fsr2h,f,c
 27385  004E9A  0E00               	movlw	0
 27386  004E9C  6EDF               	movwf	indf2,c
 27387                           
 27388                           ; BSR set to: 0
 27389                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 27390  004E9E  EC2F  F02F         	call	_GetOsTickCounter	;wreg free
 27391  004EA2  0100               	movlb	0	; () banked
 27392  004EA4  EE20 F002          	lfsr	2,2
 27393  004EA8  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 27394  004EAA  26D9               	addwf	fsr2l,f,c
 27395  004EAC  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 27396  004EAE  22DA               	addwfc	fsr2h,f,c
 27397  004EB0  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 27398  004EB4  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 27399  004EB8  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 27400  004EBC  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 27401                           
 27402                           ; BSR set to: 0
 27403                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 27404  004EC0  EE20 F006          	lfsr	2,6
 27405  004EC4  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 27406  004EC6  26D9               	addwf	fsr2l,f,c
 27407  004EC8  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 27408  004ECA  22DA               	addwfc	fsr2h,f,c
 27409  004ECC  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 27410  004ED0  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 27411  004ED4  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 27412  004ED8  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 27413                           
 27414                           ; BSR set to: 0
 27415                           ;os_timers.c: 127: Timer->Enabled = 1u;
 27416  004EDC  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 27417  004EE0  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 27418  004EE4  0E01               	movlw	1
 27419  004EE6  6EDF               	movwf	indf2,c
 27420                           
 27421                           ; BSR set to: 0
 27422  004EE8  0012               	return		;funcret
 27423  004EEA                     __end_of_OsTmr_StartTimer:
 27424                           	opt stack 0
 27425                           tosu	equ	0xFFF
 27426                           tosh	equ	0xFFE
 27427                           tosl	equ	0xFFD
 27428                           pclath	equ	0xFFA
 27429                           tblptru	equ	0xFF8
 27430                           tblptrh	equ	0xFF7
 27431                           tblptrl	equ	0xFF6
 27432                           tablat	equ	0xFF5
 27433                           prodh	equ	0xFF4
 27434                           prodl	equ	0xFF3
 27435                           intcon	equ	0xFF2
 27436                           intcon2	equ	0xFF1
 27437                           intcon3	equ	0xFF0
 27438                           indf0	equ	0xFEF
 27439                           postinc0	equ	0xFEE
 27440                           plusw0	equ	0xFEB
 27441                           fsr0h	equ	0xFEA
 27442                           fsr0l	equ	0xFE9
 27443                           wreg	equ	0xFE8
 27444                           indf1	equ	0xFE7
 27445                           postinc1	equ	0xFE6
 27446                           postdec1	equ	0xFE5
 27447                           plusw1	equ	0xFE3
 27448                           fsr1h	equ	0xFE2
 27449                           fsr1l	equ	0xFE1
 27450                           indf2	equ	0xFDF
 27451                           postinc2	equ	0xFDE
 27452                           postdec2	equ	0xFDD
 27453                           plusw2	equ	0xFDB
 27454                           fsr2h	equ	0xFDA
 27455                           fsr2l	equ	0xFD9
 27456                           status	equ	0xFD8
 27457                           
 27458 ;; *************** function _OsTmr_GetTimerStatus *****************
 27459 ;; Defined at:
 27460 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27461 ;; Parameters:    Size  Location     Type
 27462 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 27463 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 27464 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 27465 ;; Auto vars:     Size  Location     Type
 27466 ;;		None
 27467 ;; Return value:  Size  Location     Type
 27468 ;;                  1    wreg      enum E7740
 27469 ;; Registers used:
 27470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27471 ;; Tracked objects:
 27472 ;;		On entry : 0/0
 27473 ;;		On exit  : 0/0
 27474 ;;		Unchanged: 0/0
 27475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27476 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27478 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27479 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27480 ;;Total ram usage:        6 bytes
 27481 ;; Hardware stack levels used:    1
 27482 ;; Hardware stack levels required when called:   13
 27483 ;; This function calls:
 27484 ;;		_GetElapsedTime
 27485 ;; This function is called by:
 27486 ;;		_OsTmr_Wait
 27487 ;;		_CheckModem
 27488 ;;		_SendSmsSm
 27489 ;;		_InitGprsNetwork
 27490 ;;		_HttpGetMethod
 27491 ;;		_Term_MainSm
 27492 ;;		_I2cSlv_QueryI2cData
 27493 ;; This function uses a non-reentrant model
 27494 ;;
 27495                           
 27496                           	psect	text123
 27497  004716                     __ptext123:
 27498                           	opt stack 0
 27499  004716                     _OsTmr_GetTimerStatus:
 27500                           	opt stack 11
 27501                           
 27502                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 27503                           
 27504                           ; BSR set to: 0
 27505                           ;incstack = 0
 27506  004716  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 27507  00471A  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 27508  00471E  04DE               	decf	postinc2,w,c
 27509  004720  A4D8               	btfss	status,2,c
 27510  004722  D030               	goto	l864
 27511                           
 27512                           ;os_timers.c: 197: {
 27513                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 27514  004724  0100               	movlb	0	; () banked
 27515  004726  EE20 F006          	lfsr	2,6
 27516  00472A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27517  00472C  26D9               	addwf	fsr2l,f,c
 27518  00472E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27519  004730  22DA               	addwfc	fsr2h,f,c
 27520  004732  EE10 F002          	lfsr	1,2
 27521  004736  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27522  004738  26E1               	addwf	fsr1l,f,c
 27523  00473A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27524  00473C  22E2               	addwfc	fsr1h,f,c
 27525  00473E  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 27526  004742  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 27527  004746  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 27528  00474A  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 27529  00474E  EC37  F01D         	call	_GetElapsedTime	;wreg free
 27530  004752  50DE               	movf	postinc2,w,c
 27531  004754  0100               	movlb	0	; () banked
 27532  004756  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 27533  004758  50DE               	movf	postinc2,w,c
 27534  00475A  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 27535  00475C  50DE               	movf	postinc2,w,c
 27536  00475E  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 27537  004760  50DE               	movf	postinc2,w,c
 27538  004762  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 27539  004764  A0D8               	btfss	status,0,c
 27540  004766  D017               	goto	l867
 27541                           
 27542                           ; BSR set to: 0
 27543                           ;os_timers.c: 200: {
 27544                           ;os_timers.c: 202: Timer->Enabled = 0u;
 27545  004768  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 27546  00476C  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 27547  004770  0E00               	movlw	0
 27548  004772  6EDF               	movwf	indf2,c
 27549                           
 27550                           ; BSR set to: 0
 27551                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 27552  004774  EE20 F001          	lfsr	2,1
 27553  004778  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27554  00477A  26D9               	addwf	fsr2l,f,c
 27555  00477C  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27556  00477E  22DA               	addwfc	fsr2h,f,c
 27557  004780  0E01               	movlw	1
 27558  004782  D008               	goto	L69
 27559  004784                     l864:
 27560                           
 27561                           ;os_timers.c: 211: else
 27562                           ;os_timers.c: 212: {
 27563                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 27564                           
 27565                           ; BSR set to: 0
 27566  004784  0100               	movlb	0	; () banked
 27567  004786  EE20 F001          	lfsr	2,1
 27568  00478A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27569  00478C  26D9               	addwf	fsr2l,f,c
 27570  00478E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27571  004790  22DA               	addwfc	fsr2h,f,c
 27572  004792  0E02               	movlw	2
 27573  004794                     L69:
 27574  004794  6EDF               	movwf	indf2,c
 27575  004796                     l867:
 27576                           
 27577                           ; BSR set to: 0
 27578                           ;os_timers.c: 215: }
 27579                           ;os_timers.c: 218: return Timer->Status;
 27580  004796  EE20 F001          	lfsr	2,1
 27581  00479A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27582  00479C  26D9               	addwf	fsr2l,f,c
 27583  00479E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27584  0047A0  22DA               	addwfc	fsr2h,f,c
 27585  0047A2  50DF               	movf	indf2,w,c
 27586  0047A4  0012               	return	
 27587  0047A6                     __end_of_OsTmr_GetTimerStatus:
 27588                           	opt stack 0
 27589                           tosu	equ	0xFFF
 27590                           tosh	equ	0xFFE
 27591                           tosl	equ	0xFFD
 27592                           pclath	equ	0xFFA
 27593                           tblptru	equ	0xFF8
 27594                           tblptrh	equ	0xFF7
 27595                           tblptrl	equ	0xFF6
 27596                           tablat	equ	0xFF5
 27597                           prodh	equ	0xFF4
 27598                           prodl	equ	0xFF3
 27599                           intcon	equ	0xFF2
 27600                           intcon2	equ	0xFF1
 27601                           intcon3	equ	0xFF0
 27602                           indf0	equ	0xFEF
 27603                           postinc0	equ	0xFEE
 27604                           plusw0	equ	0xFEB
 27605                           fsr0h	equ	0xFEA
 27606                           fsr0l	equ	0xFE9
 27607                           wreg	equ	0xFE8
 27608                           indf1	equ	0xFE7
 27609                           postinc1	equ	0xFE6
 27610                           postdec1	equ	0xFE5
 27611                           plusw1	equ	0xFE3
 27612                           fsr1h	equ	0xFE2
 27613                           fsr1l	equ	0xFE1
 27614                           indf2	equ	0xFDF
 27615                           postinc2	equ	0xFDE
 27616                           postdec2	equ	0xFDD
 27617                           plusw2	equ	0xFDB
 27618                           fsr2h	equ	0xFDA
 27619                           fsr2l	equ	0xFD9
 27620                           status	equ	0xFD8
 27621                           
 27622 ;; *************** function _GetElapsedTime *****************
 27623 ;; Defined at:
 27624 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27625 ;; Parameters:    Size  Location     Type
 27626 ;;  StartTime       4   33[BANK0 ] unsigned long 
 27627 ;; Auto vars:     Size  Location     Type
 27628 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 27629 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 27630 ;; Return value:  Size  Location     Type
 27631 ;;                  4   33[BANK0 ] unsigned long 
 27632 ;; Registers used:
 27633 ;;		wreg, status,2, status,0, cstack
 27634 ;; Tracked objects:
 27635 ;;		On entry : 0/0
 27636 ;;		On exit  : 0/0
 27637 ;;		Unchanged: 0/0
 27638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27639 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27640 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27641 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27642 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27643 ;;Total ram usage:       20 bytes
 27644 ;; Hardware stack levels used:    1
 27645 ;; Hardware stack levels required when called:   12
 27646 ;; This function calls:
 27647 ;;		_GetOsTickCounter
 27648 ;; This function is called by:
 27649 ;;		_OsTmr_GetTimerStatus
 27650 ;;		_OsTmr_GetRemainingTime
 27651 ;; This function uses a non-reentrant model
 27652 ;;
 27653                           
 27654                           	psect	text124
 27655  003A6E                     __ptext124:
 27656                           	opt stack 0
 27657  003A6E                     _GetElapsedTime:
 27658                           	opt stack 11
 27659                           
 27660                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 27661                           ;os_timers.c: 87: UINT32 TimeValue;
 27662                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 27663                           
 27664                           ; BSR set to: 0
 27665                           ;incstack = 0
 27666  003A6E  EC2F  F02F         	call	_GetOsTickCounter	;wreg free
 27667  003A72  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 27668  003A76  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 27669  003A7A  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 27670  003A7E  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 27671                           
 27672                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 27673  003A82  0100               	movlb	0	; () banked
 27674  003A84  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 27675  003A86  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 27676  003A88  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 27677  003A8A  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 27678  003A8C  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 27679  003A8E  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 27680  003A90  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 27681  003A92  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 27682  003A94  A0D8               	btfss	status,0,c
 27683  003A96  D01D               	goto	l844
 27684                           
 27685                           ; BSR set to: 0
 27686                           ;os_timers.c: 94: {
 27687                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 27688  003A98  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 27689  003A9C  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 27690  003AA0  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 27691  003AA4  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 27692  003AA8  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 27693  003AAA  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 27694  003AAC  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 27695  003AAE  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 27696  003AB0  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 27697  003AB2  0E00               	movlw	0
 27698  003AB4  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 27699  003AB6  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 27700  003AB8  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 27701  003ABA  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 27702  003ABC  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 27703  003ABE  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 27704  003AC0  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 27705  003AC2  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 27706  003AC4  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 27707  003AC6  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 27708  003AC8  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 27709  003ACA  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 27710  003ACC  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 27711  003ACE  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 27712  003AD0  D028               	goto	L40
 27713  003AD2                     l844:
 27714                           
 27715                           ; BSR set to: 0
 27716                           ;os_timers.c: 97: else
 27717                           ;os_timers.c: 98: {
 27718                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 27719                           
 27720                           ; BSR set to: 0
 27721  003AD2  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 27722  003AD6  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 27723  003ADA  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 27724  003ADE  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 27725  003AE2  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 27726  003AE4  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 27727  003AE6  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 27728  003AE8  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 27729  003AEA  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 27730  003AEC  0E00               	movlw	0
 27731  003AEE  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 27732  003AF0  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 27733  003AF2  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 27734  003AF4  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 27735  003AF6  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 27736  003AF8  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 27737  003AFA  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 27738  003AFC  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 27739  003AFE  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 27740  003B00  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 27741  003B02  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 27742  003B04  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 27743  003B06  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 27744  003B08  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 27745  003B0A  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 27746  003B0C  0EFF               	movlw	255
 27747  003B0E  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 27748  003B10  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 27749  003B12  0EFF               	movlw	255
 27750  003B14  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 27751  003B16  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 27752  003B18  0EFF               	movlw	255
 27753  003B1A  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 27754  003B1C  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 27755  003B1E  0EFF               	movlw	255
 27756  003B20  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 27757  003B22                     L40:
 27758  003B22  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 27759                           
 27760                           ; BSR set to: 0
 27761                           ;os_timers.c: 100: }
 27762                           ;os_timers.c: 102: return TimeValue;
 27763                           
 27764                           ; BSR set to: 0
 27765  003B24  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 27766  003B28  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 27767  003B2C  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 27768  003B30  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 27769  003B34  0012               	return	
 27770  003B36                     __end_of_GetElapsedTime:
 27771                           	opt stack 0
 27772                           tosu	equ	0xFFF
 27773                           tosh	equ	0xFFE
 27774                           tosl	equ	0xFFD
 27775                           pclath	equ	0xFFA
 27776                           tblptru	equ	0xFF8
 27777                           tblptrh	equ	0xFF7
 27778                           tblptrl	equ	0xFF6
 27779                           tablat	equ	0xFF5
 27780                           prodh	equ	0xFF4
 27781                           prodl	equ	0xFF3
 27782                           intcon	equ	0xFF2
 27783                           intcon2	equ	0xFF1
 27784                           intcon3	equ	0xFF0
 27785                           indf0	equ	0xFEF
 27786                           postinc0	equ	0xFEE
 27787                           plusw0	equ	0xFEB
 27788                           fsr0h	equ	0xFEA
 27789                           fsr0l	equ	0xFE9
 27790                           wreg	equ	0xFE8
 27791                           indf1	equ	0xFE7
 27792                           postinc1	equ	0xFE6
 27793                           postdec1	equ	0xFE5
 27794                           plusw1	equ	0xFE3
 27795                           fsr1h	equ	0xFE2
 27796                           fsr1l	equ	0xFE1
 27797                           indf2	equ	0xFDF
 27798                           postinc2	equ	0xFDE
 27799                           postdec2	equ	0xFDD
 27800                           plusw2	equ	0xFDB
 27801                           fsr2h	equ	0xFDA
 27802                           fsr2l	equ	0xFD9
 27803                           status	equ	0xFD8
 27804                           
 27805 ;; *************** function _GetOsTickCounter *****************
 27806 ;; Defined at:
 27807 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27808 ;; Parameters:    Size  Location     Type
 27809 ;;		None
 27810 ;; Auto vars:     Size  Location     Type
 27811 ;;		None
 27812 ;; Return value:  Size  Location     Type
 27813 ;;                  4   29[BANK0 ] unsigned long 
 27814 ;; Registers used:
 27815 ;;		None
 27816 ;; Tracked objects:
 27817 ;;		On entry : 0/0
 27818 ;;		On exit  : 0/0
 27819 ;;		Unchanged: 0/0
 27820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27821 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27824 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27825 ;;Total ram usage:        4 bytes
 27826 ;; Hardware stack levels used:    1
 27827 ;; Hardware stack levels required when called:   11
 27828 ;; This function calls:
 27829 ;;		Nothing
 27830 ;; This function is called by:
 27831 ;;		_GetElapsedTime
 27832 ;;		_OsTmr_StartTimer
 27833 ;;		_OsTmr_GetElapsedTime
 27834 ;; This function uses a non-reentrant model
 27835 ;;
 27836                           
 27837                           	psect	text125
 27838  005E5E                     __ptext125:
 27839                           	opt stack 0
 27840  005E5E                     _GetOsTickCounter:
 27841                           	opt stack 12
 27842                           
 27843                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 27844                           
 27845                           ; BSR set to: 0
 27846                           ;incstack = 0
 27847  005E5E  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 27848  005E62  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 27849  005E66  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 27850  005E6A  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 27851  005E6E  0012               	return		;funcret
 27852  005E70                     __end_of_GetOsTickCounter:
 27853                           	opt stack 0
 27854                           tosu	equ	0xFFF
 27855                           tosh	equ	0xFFE
 27856                           tosl	equ	0xFFD
 27857                           pclath	equ	0xFFA
 27858                           tblptru	equ	0xFF8
 27859                           tblptrh	equ	0xFF7
 27860                           tblptrl	equ	0xFF6
 27861                           tablat	equ	0xFF5
 27862                           prodh	equ	0xFF4
 27863                           prodl	equ	0xFF3
 27864                           intcon	equ	0xFF2
 27865                           intcon2	equ	0xFF1
 27866                           intcon3	equ	0xFF0
 27867                           indf0	equ	0xFEF
 27868                           postinc0	equ	0xFEE
 27869                           plusw0	equ	0xFEB
 27870                           fsr0h	equ	0xFEA
 27871                           fsr0l	equ	0xFE9
 27872                           wreg	equ	0xFE8
 27873                           indf1	equ	0xFE7
 27874                           postinc1	equ	0xFE6
 27875                           postdec1	equ	0xFE5
 27876                           plusw1	equ	0xFE3
 27877                           fsr1h	equ	0xFE2
 27878                           fsr1l	equ	0xFE1
 27879                           indf2	equ	0xFDF
 27880                           postinc2	equ	0xFDE
 27881                           postdec2	equ	0xFDD
 27882                           plusw2	equ	0xFDB
 27883                           fsr2h	equ	0xFDA
 27884                           fsr2l	equ	0xFD9
 27885                           status	equ	0xFD8
 27886                           
 27887 ;; *************** function _ClearBuffer *****************
 27888 ;; Defined at:
 27889 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 27890 ;; Parameters:    Size  Location     Type
 27891 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 27892 ;;		 -> GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), RxBuffer(400),
      + 
 27893 ;;  Len             2   31[BANK0 ] unsigned short 
 27894 ;; Auto vars:     Size  Location     Type
 27895 ;;  Index           2   33[BANK0 ] unsigned short 
 27896 ;; Return value:  Size  Location     Type
 27897 ;;                  1    wreg      void 
 27898 ;; Registers used:
 27899 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27900 ;; Tracked objects:
 27901 ;;		On entry : 0/0
 27902 ;;		On exit  : 0/0
 27903 ;;		Unchanged: 0/0
 27904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27905 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27906 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27908 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27909 ;;Total ram usage:        6 bytes
 27910 ;; Hardware stack levels used:    1
 27911 ;; Hardware stack levels required when called:   11
 27912 ;; This function calls:
 27913 ;;		Nothing
 27914 ;; This function is called by:
 27915 ;;		_InitGprsNetwork
 27916 ;;		_HttpGetMethod
 27917 ;;		_GsmGprsTerminal
 27918 ;; This function uses a non-reentrant model
 27919 ;;
 27920                           
 27921                           	psect	text126
 27922  0058AC                     __ptext126:
 27923                           	opt stack 0
 27924  0058AC                     _ClearBuffer:
 27925                           	opt stack 15
 27926                           
 27927                           ;sf.c: 126: UINT16 Index = 0;
 27928                           
 27929                           ;incstack = 0
 27930  0058AC  0E00               	movlw	0
 27931  0058AE  0100               	movlb	0	; () banked
 27932  0058B0  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 27933  0058B2  0E00               	movlw	0
 27934  0058B4  6F81               	movwf	ClearBuffer@Index& (0+255),b
 27935                           
 27936                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 27937  0058B6  0E00               	movlw	0
 27938  0058B8  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 27939  0058BA  0E00               	movlw	0
 27940  0058BC  6F81               	movwf	ClearBuffer@Index& (0+255),b
 27941  0058BE  D00A               	goto	l2210
 27942  0058C0                     
 27943                           ; BSR set to: 0
 27944                           ;sf.c: 130: {
 27945                           ;sf.c: 131: *(Buffer + Index) = 0;
 27946                           
 27947                           ; BSR set to: 0
 27948  0058C0  5181               	movf	ClearBuffer@Index& (0+255),w,b
 27949  0058C2  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 27950  0058C4  6ED9               	movwf	fsr2l,c
 27951  0058C6  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 27952  0058C8  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 27953  0058CA  6EDA               	movwf	fsr2h,c
 27954  0058CC  0E00               	movlw	0
 27955  0058CE  6EDF               	movwf	indf2,c
 27956                           
 27957                           ; BSR set to: 0
 27958  0058D0  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 27959  0058D2  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 27960  0058D4                     l2210:
 27961                           
 27962                           ; BSR set to: 0
 27963                           
 27964                           ; BSR set to: 0
 27965  0058D4  5181               	movf	ClearBuffer@Index& (0+255),w,b
 27966  0058D6  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 27967  0058D8  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 27968  0058DA  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 27969  0058DC  A0D8               	btfss	status,0,c
 27970  0058DE  0012               	return	
 27971  0058E0  D7EF               	goto	l2211
 27972  0058E2                     __end_of_ClearBuffer:
 27973                           	opt stack 0
 27974                           tosu	equ	0xFFF
 27975                           tosh	equ	0xFFE
 27976                           tosl	equ	0xFFD
 27977                           pclath	equ	0xFFA
 27978                           tblptru	equ	0xFF8
 27979                           tblptrh	equ	0xFF7
 27980                           tblptrl	equ	0xFF6
 27981                           tablat	equ	0xFF5
 27982                           prodh	equ	0xFF4
 27983                           prodl	equ	0xFF3
 27984                           intcon	equ	0xFF2
 27985                           intcon2	equ	0xFF1
 27986                           intcon3	equ	0xFF0
 27987                           indf0	equ	0xFEF
 27988                           postinc0	equ	0xFEE
 27989                           plusw0	equ	0xFEB
 27990                           fsr0h	equ	0xFEA
 27991                           fsr0l	equ	0xFE9
 27992                           wreg	equ	0xFE8
 27993                           indf1	equ	0xFE7
 27994                           postinc1	equ	0xFE6
 27995                           postdec1	equ	0xFE5
 27996                           plusw1	equ	0xFE3
 27997                           fsr1h	equ	0xFE2
 27998                           fsr1l	equ	0xFE1
 27999                           indf2	equ	0xFDF
 28000                           postinc2	equ	0xFDE
 28001                           postdec2	equ	0xFDD
 28002                           plusw2	equ	0xFDB
 28003                           fsr2h	equ	0xFDA
 28004                           fsr2l	equ	0xFD9
 28005                           status	equ	0xFD8
 28006                           
 28007 ;; *************** function _LedStateMachine *****************
 28008 ;; Defined at:
 28009 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28010 ;; Parameters:    Size  Location     Type
 28011 ;;  Led             1    wreg     unsigned char 
 28012 ;;  LedSts          2   47[BANK0 ] PTR enum E8934
 28013 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 28014 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 28015 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 28016 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 28017 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 28018 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 28019 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 28020 ;; Auto vars:     Size  Location     Type
 28021 ;;  Led             1   57[BANK0 ] unsigned char 
 28022 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 28023 ;; Return value:  Size  Location     Type
 28024 ;;                  1    wreg      unsigned char 
 28025 ;; Registers used:
 28026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28027 ;; Tracked objects:
 28028 ;;		On entry : 0/0
 28029 ;;		On exit  : 0/0
 28030 ;;		Unchanged: 0/0
 28031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28032 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28033 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28034 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28035 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28036 ;;Total ram usage:       11 bytes
 28037 ;; Hardware stack levels used:    1
 28038 ;; Hardware stack levels required when called:   13
 28039 ;; This function calls:
 28040 ;;		_LedBlinkStateMachine
 28041 ;;		_LedPulseStateMachine
 28042 ;;		_Led_SetLedStatus
 28043 ;; This function is called by:
 28044 ;;		_Led_MainTask
 28045 ;; This function uses a non-reentrant model
 28046 ;;
 28047                           
 28048                           	psect	text127
 28049  0041A2                     __ptext127:
 28050                           	opt stack 0
 28051  0041A2                     _LedStateMachine:
 28052                           	opt stack 14
 28053                           
 28054                           ; BSR set to: 0
 28055                           ;incstack = 0
 28056                           ;LedStateMachine@Led stored from wreg
 28057  0041A2  0100               	movlb	0	; () banked
 28058  0041A4  6F99               	movwf	LedStateMachine@Led& (0+255),b
 28059                           
 28060                           ;led.c: 238: UINT8 LedOutSts = 0u;
 28061  0041A6  0E00               	movlw	0
 28062  0041A8  0100               	movlb	0	; () banked
 28063  0041AA  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28064                           
 28065                           ;led.c: 241: switch (*LedSts)
 28066  0041AC  D037               	goto	l2069
 28067  0041AE                     
 28068                           ; BSR set to: 0
 28069                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 28070                           
 28071                           ; BSR set to: 0
 28072  0041AE  0E00               	movlw	0
 28073  0041B0  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28074                           
 28075                           ; BSR set to: 0
 28076                           ;led.c: 246: *LedOut = ((UINT8)(0));
 28077  0041B2  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 28078  0041B6  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 28079  0041BA  0E00               	movlw	0
 28080  0041BC  D007               	goto	L41
 28081  0041BE                     
 28082                           ; BSR set to: 0
 28083                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 28084                           
 28085                           ; BSR set to: 0
 28086  0041BE  0E01               	movlw	1
 28087  0041C0  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28088                           
 28089                           ; BSR set to: 0
 28090                           ;led.c: 252: *LedOut = ((UINT8)(1));
 28091  0041C2  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 28092  0041C6  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 28093  0041CA  0E01               	movlw	1
 28094  0041CC                     L41:
 28095  0041CC  6EDF               	movwf	indf2,c
 28096                           
 28097                           ;led.c: 253: break;
 28098  0041CE  D03A               	goto	l2071
 28099  0041D0                     
 28100                           ; BSR set to: 0
 28101                           ;led.c: 257: if (*LedOut == 1)
 28102                           
 28103                           ; BSR set to: 0
 28104  0041D0  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 28105  0041D4  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 28106  0041D8  04DE               	decf	postinc2,w,c
 28107  0041DA  A4D8               	btfss	status,2,c
 28108  0041DC  D006               	goto	l2074
 28109                           
 28110                           ; BSR set to: 0
 28111                           ;led.c: 258: {
 28112                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 28113  0041DE  0E00               	movlw	0
 28114  0041E0  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 28115  0041E2  5199               	movf	LedStateMachine@Led& (0+255),w,b
 28116  0041E4  EC05  F02D         	call	_Led_SetLedStatus
 28117                           
 28118                           ;led.c: 261: }
 28119  0041E8  D02D               	goto	l2071
 28120  0041EA                     l2074:
 28121                           
 28122                           ;led.c: 262: else
 28123                           ;led.c: 263: {
 28124                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 28125  0041EA  0E01               	movlw	1
 28126  0041EC  0100               	movlb	0	; () banked
 28127  0041EE  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 28128  0041F0  5199               	movf	LedStateMachine@Led& (0+255),w,b
 28129  0041F2  EC05  F02D         	call	_Led_SetLedStatus
 28130                           
 28131                           ;led.c: 266: }
 28132                           ;led.c: 267: break;
 28133  0041F6  D026               	goto	l2071
 28134  0041F8                     
 28135                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 28136  0041F8  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 28137  0041FC  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 28138  004200  ECFE  F011         	call	_LedBlinkStateMachine	;wreg free
 28139  004204  D008               	goto	L42
 28140  004206                     
 28141                           ; BSR set to: 0
 28142                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 28143                           
 28144                           ; BSR set to: 0
 28145  004206  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 28146  00420A  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 28147  00420E  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 28148  004212  EC32  F018         	call	_LedPulseStateMachine	;wreg free
 28149  004216                     L42:
 28150  004216  0100               	movlb	0	; () banked
 28151  004218  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 28152                           
 28153                           ; BSR set to: 0
 28154                           ;led.c: 281: }
 28155                           
 28156                           ; BSR set to: 0
 28157                           ;led.c: 280: break;
 28158                           
 28159                           ;led.c: 279: default:
 28160                           
 28161                           ;led.c: 277: break;
 28162  00421A  D014               	goto	l2071
 28163  00421C                     l2069:
 28164                           
 28165                           ; BSR set to: 0
 28166                           
 28167                           ; BSR set to: 0
 28168  00421C  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 28169  004220  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 28170  004224  50DF               	movf	indf2,w,c
 28171                           
 28172                           ; Switch size 1, requested type "space"
 28173                           ; Number of cases is 5, Range of values is 0 to 4
 28174                           ; switch strategies available:
 28175                           ; Name         Instructions Cycles
 28176                           ; simple_byte           16     9 (average)
 28177                           ;	Chosen strategy is simple_byte
 28178  004226  0A00               	xorlw	0	; case 0
 28179  004228  B4D8               	btfsc	status,2,c
 28180  00422A  D7C1               	goto	l2070
 28181  00422C  0A01               	xorlw	1	; case 1
 28182  00422E  B4D8               	btfsc	status,2,c
 28183  004230  D7C6               	goto	l2072
 28184  004232  0A03               	xorlw	3	; case 2
 28185  004234  B4D8               	btfsc	status,2,c
 28186  004236  D7CC               	goto	l2073
 28187  004238  0A01               	xorlw	1	; case 3
 28188  00423A  B4D8               	btfsc	status,2,c
 28189  00423C  D7DD               	goto	l2076
 28190  00423E  0A07               	xorlw	7	; case 4
 28191  004240  B4D8               	btfsc	status,2,c
 28192  004242  D7E1               	goto	l2077
 28193  004244                     l2071:
 28194                           
 28195                           ;led.c: 283: return LedOutSts;
 28196                           
 28197                           ; BSR set to: 0
 28198  004244  0100               	movlb	0	; () banked
 28199  004246  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 28200  004248  0012               	return	
 28201  00424A                     __end_of_LedStateMachine:
 28202                           	opt stack 0
 28203                           tosu	equ	0xFFF
 28204                           tosh	equ	0xFFE
 28205                           tosl	equ	0xFFD
 28206                           pclath	equ	0xFFA
 28207                           tblptru	equ	0xFF8
 28208                           tblptrh	equ	0xFF7
 28209                           tblptrl	equ	0xFF6
 28210                           tablat	equ	0xFF5
 28211                           prodh	equ	0xFF4
 28212                           prodl	equ	0xFF3
 28213                           intcon	equ	0xFF2
 28214                           intcon2	equ	0xFF1
 28215                           intcon3	equ	0xFF0
 28216                           indf0	equ	0xFEF
 28217                           postinc0	equ	0xFEE
 28218                           plusw0	equ	0xFEB
 28219                           fsr0h	equ	0xFEA
 28220                           fsr0l	equ	0xFE9
 28221                           wreg	equ	0xFE8
 28222                           indf1	equ	0xFE7
 28223                           postinc1	equ	0xFE6
 28224                           postdec1	equ	0xFE5
 28225                           plusw1	equ	0xFE3
 28226                           fsr1h	equ	0xFE2
 28227                           fsr1l	equ	0xFE1
 28228                           indf2	equ	0xFDF
 28229                           postinc2	equ	0xFDE
 28230                           postdec2	equ	0xFDD
 28231                           plusw2	equ	0xFDB
 28232                           fsr2h	equ	0xFDA
 28233                           fsr2l	equ	0xFD9
 28234                           status	equ	0xFD8
 28235                           
 28236 ;; *************** function _LedPulseStateMachine *****************
 28237 ;; Defined at:
 28238 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28239 ;; Parameters:    Size  Location     Type
 28240 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 28241 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 28242 ;;  Led             1   44[BANK0 ] unsigned char 
 28243 ;; Auto vars:     Size  Location     Type
 28244 ;;		None
 28245 ;; Return value:  Size  Location     Type
 28246 ;;                  1    wreg      unsigned char 
 28247 ;; Registers used:
 28248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28249 ;; Tracked objects:
 28250 ;;		On entry : 0/0
 28251 ;;		On exit  : 0/0
 28252 ;;		Unchanged: 0/0
 28253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28254 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28256 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28257 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28258 ;;Total ram usage:        5 bytes
 28259 ;; Hardware stack levels used:    1
 28260 ;; Hardware stack levels required when called:   12
 28261 ;; This function calls:
 28262 ;;		_Led_SetLedStatus
 28263 ;;		___lwdiv
 28264 ;; This function is called by:
 28265 ;;		_LedStateMachine
 28266 ;; This function uses a non-reentrant model
 28267 ;;
 28268                           
 28269                           	psect	text128
 28270  003064                     __ptext128:
 28271                           	opt stack 0
 28272  003064                     _LedPulseStateMachine:
 28273                           	opt stack 14
 28274                           
 28275                           ;led.c: 185: switch (LedPulse->LedPulseState)
 28276                           
 28277                           ; BSR set to: 0
 28278                           ;incstack = 0
 28279  003064  D05C               	goto	l2059
 28280  003066                     
 28281                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 28282  003066  0100               	movlb	0	; () banked
 28283  003068  EE20 F001          	lfsr	2,1
 28284  00306C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28285  00306E  26D9               	addwf	fsr2l,f,c
 28286  003070  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28287  003072  22DA               	addwfc	fsr2h,f,c
 28288  003074  0E01               	movlw	1
 28289  003076  6EDF               	movwf	indf2,c
 28290                           
 28291                           ; BSR set to: 0
 28292                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 28293  003078  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28294  00307C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28295  003080  0E01               	movlw	1
 28296  003082  D036               	goto	L43
 28297  003084                     
 28298                           ;led.c: 196: LedPulse->LedPulseCounter++;
 28299                           
 28300                           ; BSR set to: 0
 28301  003084  0100               	movlb	0	; () banked
 28302  003086  EE20 F002          	lfsr	2,2
 28303  00308A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28304  00308C  26D9               	addwf	fsr2l,f,c
 28305  00308E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28306  003090  22DA               	addwfc	fsr2h,f,c
 28307  003092  2ADE               	incf	postinc2,f,c
 28308  003094  0E00               	movlw	0
 28309  003096  22DD               	addwfc	postdec2,f,c
 28310                           
 28311                           ; BSR set to: 0
 28312                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 28313  003098  EE20 F004          	lfsr	2,4
 28314  00309C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28315  00309E  26D9               	addwf	fsr2l,f,c
 28316  0030A0  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28317  0030A2  22DA               	addwfc	fsr2h,f,c
 28318  0030A4  CFDE F083          	movff	postinc2,___lwdiv@dividend
 28319  0030A8  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 28320  0030AC  0E00               	movlw	0
 28321  0030AE  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 28322  0030B0  0E32               	movlw	50
 28323  0030B2  6F85               	movwf	___lwdiv@divisor& (0+255),b
 28324  0030B4  ECD1  F028         	call	___lwdiv	;wreg free
 28325  0030B8  0100               	movlb	0	; () banked
 28326  0030BA  EE20 F002          	lfsr	2,2
 28327  0030BE  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28328  0030C0  26D9               	addwf	fsr2l,f,c
 28329  0030C2  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28330  0030C4  22DA               	addwfc	fsr2h,f,c
 28331  0030C6  5183               	movf	?___lwdiv& (0+255),w,b
 28332  0030C8  5CDE               	subwf	postinc2,w,c
 28333  0030CA  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 28334  0030CC  58DE               	subwfb	postinc2,w,c
 28335  0030CE  A0D8               	btfss	status,0,c
 28336  0030D0  D034               	goto	l2061
 28337                           
 28338                           ; BSR set to: 0
 28339                           ;led.c: 199: {
 28340                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 28341  0030D2  EE20 F002          	lfsr	2,2
 28342  0030D6  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28343  0030D8  26D9               	addwf	fsr2l,f,c
 28344  0030DA  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28345  0030DC  22DA               	addwfc	fsr2h,f,c
 28346  0030DE  0E00               	movlw	0
 28347  0030E0  6EDE               	movwf	postinc2,c
 28348  0030E2  0E00               	movlw	0
 28349  0030E4  6EDD               	movwf	postdec2,c
 28350                           
 28351                           ; BSR set to: 0
 28352                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 28353  0030E6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28354  0030EA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28355  0030EE  0E02               	movlw	2
 28356  0030F0                     L43:
 28357  0030F0  6EDF               	movwf	indf2,c
 28358                           
 28359                           ; BSR set to: 0
 28360                           ;led.c: 204: }
 28361                           ;led.c: 205: break;
 28362  0030F2  D023               	goto	l2061
 28363  0030F4                     
 28364                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 28365                           
 28366                           ; BSR set to: 0
 28367  0030F4  0100               	movlb	0	; () banked
 28368  0030F6  EE20 F001          	lfsr	2,1
 28369  0030FA  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28370  0030FC  26D9               	addwf	fsr2l,f,c
 28371  0030FE  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28372  003100  22DA               	addwfc	fsr2h,f,c
 28373  003102  0E00               	movlw	0
 28374  003104  6EDF               	movwf	indf2,c
 28375                           
 28376                           ; BSR set to: 0
 28377                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 28378  003106  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28379  00310A  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28380  00310E  0E00               	movlw	0
 28381  003110  6EDF               	movwf	indf2,c
 28382                           
 28383                           ; BSR set to: 0
 28384                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 28385  003112  0E00               	movlw	0
 28386  003114  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 28387  003116  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 28388  003118  EC05  F02D         	call	_Led_SetLedStatus
 28389                           
 28390                           ;led.c: 218: }
 28391                           
 28392                           ;led.c: 217: break;
 28393                           
 28394                           ;led.c: 216: default:
 28395                           
 28396                           ;led.c: 214: break;
 28397  00311C  D00E               	goto	l2061
 28398  00311E                     l2059:
 28399  00311E  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28400  003122  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28401  003126  50DF               	movf	indf2,w,c
 28402                           
 28403                           ; Switch size 1, requested type "space"
 28404                           ; Number of cases is 3, Range of values is 0 to 2
 28405                           ; switch strategies available:
 28406                           ; Name         Instructions Cycles
 28407                           ; simple_byte           10     6 (average)
 28408                           ;	Chosen strategy is simple_byte
 28409  003128  0A00               	xorlw	0	; case 0
 28410  00312A  B4D8               	btfsc	status,2,c
 28411  00312C  D79C               	goto	l2060
 28412  00312E  0A01               	xorlw	1	; case 1
 28413  003130  B4D8               	btfsc	status,2,c
 28414  003132  D7A8               	goto	l2062
 28415  003134  0A03               	xorlw	3	; case 2
 28416  003136  B4D8               	btfsc	status,2,c
 28417  003138  D7DD               	goto	l2064
 28418  00313A                     l2061:
 28419                           
 28420                           ;led.c: 221: return (LedPulse->LedOutState);
 28421  00313A  0100               	movlb	0	; () banked
 28422  00313C  EE20 F001          	lfsr	2,1
 28423  003140  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28424  003142  26D9               	addwf	fsr2l,f,c
 28425  003144  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28426  003146  22DA               	addwfc	fsr2h,f,c
 28427  003148  50DF               	movf	indf2,w,c
 28428  00314A  0012               	return	
 28429  00314C                     __end_of_LedPulseStateMachine:
 28430                           	opt stack 0
 28431                           tosu	equ	0xFFF
 28432                           tosh	equ	0xFFE
 28433                           tosl	equ	0xFFD
 28434                           pclath	equ	0xFFA
 28435                           tblptru	equ	0xFF8
 28436                           tblptrh	equ	0xFF7
 28437                           tblptrl	equ	0xFF6
 28438                           tablat	equ	0xFF5
 28439                           prodh	equ	0xFF4
 28440                           prodl	equ	0xFF3
 28441                           intcon	equ	0xFF2
 28442                           intcon2	equ	0xFF1
 28443                           intcon3	equ	0xFF0
 28444                           indf0	equ	0xFEF
 28445                           postinc0	equ	0xFEE
 28446                           plusw0	equ	0xFEB
 28447                           fsr0h	equ	0xFEA
 28448                           fsr0l	equ	0xFE9
 28449                           wreg	equ	0xFE8
 28450                           indf1	equ	0xFE7
 28451                           postinc1	equ	0xFE6
 28452                           postdec1	equ	0xFE5
 28453                           plusw1	equ	0xFE3
 28454                           fsr1h	equ	0xFE2
 28455                           fsr1l	equ	0xFE1
 28456                           indf2	equ	0xFDF
 28457                           postinc2	equ	0xFDE
 28458                           postdec2	equ	0xFDD
 28459                           plusw2	equ	0xFDB
 28460                           fsr2h	equ	0xFDA
 28461                           fsr2l	equ	0xFD9
 28462                           status	equ	0xFD8
 28463                           
 28464 ;; *************** function _Led_SetLedStatus *****************
 28465 ;; Defined at:
 28466 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28467 ;; Parameters:    Size  Location     Type
 28468 ;;  Led             1    wreg     unsigned char 
 28469 ;;  LedSts          1   29[BANK0 ] enum E8934
 28470 ;; Auto vars:     Size  Location     Type
 28471 ;;  Led             1   30[BANK0 ] unsigned char 
 28472 ;; Return value:  Size  Location     Type
 28473 ;;                  1    wreg      void 
 28474 ;; Registers used:
 28475 ;;		wreg, status,2, status,0
 28476 ;; Tracked objects:
 28477 ;;		On entry : 0/0
 28478 ;;		On exit  : 0/0
 28479 ;;		Unchanged: 0/0
 28480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28481 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28482 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28484 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28485 ;;Total ram usage:        2 bytes
 28486 ;; Hardware stack levels used:    1
 28487 ;; Hardware stack levels required when called:   11
 28488 ;; This function calls:
 28489 ;;		Nothing
 28490 ;; This function is called by:
 28491 ;;		_LedPulseStateMachine
 28492 ;;		_LedStateMachine
 28493 ;;		_initGprsModem
 28494 ;;		_blinkForSeconds
 28495 ;; This function uses a non-reentrant model
 28496 ;;
 28497                           
 28498                           	psect	text129
 28499  005A0A                     __ptext129:
 28500                           	opt stack 0
 28501  005A0A                     _Led_SetLedStatus:
 28502                           	opt stack 15
 28503                           
 28504                           ; BSR set to: 0
 28505                           ;incstack = 0
 28506                           ;Led_SetLedStatus@Led stored from wreg
 28507  005A0A  0100               	movlb	0	; () banked
 28508  005A0C  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 28509                           
 28510                           ;led.c: 341: switch (Led)
 28511  005A0E  D009               	goto	l2090
 28512  005A10                     l2091:
 28513                           
 28514                           ; BSR set to: 0
 28515                           ;led.c: 344: Led1Sts = LedSts;
 28516  005A10  C07D  F1FC         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 28517                           
 28518                           ;led.c: 345: break;
 28519  005A14  0012               	return	
 28520  005A16                     l2093:
 28521                           
 28522                           ; BSR set to: 0
 28523                           ;led.c: 348: Led2Sts = LedSts;
 28524  005A16  C07D  F1FA         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 28525                           
 28526                           ;led.c: 349: break;
 28527  005A1A  0012               	return	
 28528  005A1C                     l2094:
 28529                           
 28530                           ; BSR set to: 0
 28531                           ;led.c: 352: Led3Sts = LedSts;
 28532  005A1C  C07D  F1F8         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 28533                           
 28534                           ; BSR set to: 0
 28535                           ;led.c: 357: }
 28536                           
 28537                           ; BSR set to: 0
 28538                           ;led.c: 356: break;
 28539                           
 28540                           ;led.c: 355: default:
 28541                           
 28542                           ;led.c: 353: break;
 28543  005A20  0012               	return	
 28544  005A22                     l2090:
 28545                           
 28546                           ; BSR set to: 0
 28547  005A22  0100               	movlb	0	; () banked
 28548  005A24  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 28549                           
 28550                           ; Switch size 1, requested type "space"
 28551                           ; Number of cases is 3, Range of values is 1 to 3
 28552                           ; switch strategies available:
 28553                           ; Name         Instructions Cycles
 28554                           ; simple_byte           10     6 (average)
 28555                           ;	Chosen strategy is simple_byte
 28556  005A26  0A01               	xorlw	1	; case 1
 28557  005A28  B4D8               	btfsc	status,2,c
 28558  005A2A  D7F2               	goto	l2091
 28559  005A2C  0A03               	xorlw	3	; case 2
 28560  005A2E  B4D8               	btfsc	status,2,c
 28561  005A30  D7F2               	goto	l2093
 28562  005A32  0A01               	xorlw	1	; case 3
 28563  005A34  A4D8               	btfss	status,2,c
 28564  005A36  0012               	return	
 28565  005A38  D7F1               	goto	l2094
 28566  005A3A                     __end_of_Led_SetLedStatus:
 28567                           	opt stack 0
 28568                           tosu	equ	0xFFF
 28569                           tosh	equ	0xFFE
 28570                           tosl	equ	0xFFD
 28571                           pclath	equ	0xFFA
 28572                           tblptru	equ	0xFF8
 28573                           tblptrh	equ	0xFF7
 28574                           tblptrl	equ	0xFF6
 28575                           tablat	equ	0xFF5
 28576                           prodh	equ	0xFF4
 28577                           prodl	equ	0xFF3
 28578                           intcon	equ	0xFF2
 28579                           intcon2	equ	0xFF1
 28580                           intcon3	equ	0xFF0
 28581                           indf0	equ	0xFEF
 28582                           postinc0	equ	0xFEE
 28583                           plusw0	equ	0xFEB
 28584                           fsr0h	equ	0xFEA
 28585                           fsr0l	equ	0xFE9
 28586                           wreg	equ	0xFE8
 28587                           indf1	equ	0xFE7
 28588                           postinc1	equ	0xFE6
 28589                           postdec1	equ	0xFE5
 28590                           plusw1	equ	0xFE3
 28591                           fsr1h	equ	0xFE2
 28592                           fsr1l	equ	0xFE1
 28593                           indf2	equ	0xFDF
 28594                           postinc2	equ	0xFDE
 28595                           postdec2	equ	0xFDD
 28596                           plusw2	equ	0xFDB
 28597                           fsr2h	equ	0xFDA
 28598                           fsr2l	equ	0xFD9
 28599                           status	equ	0xFD8
 28600                           
 28601 ;; *************** function _LedBlinkStateMachine *****************
 28602 ;; Defined at:
 28603 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28604 ;; Parameters:    Size  Location     Type
 28605 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 28606 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 28607 ;; Auto vars:     Size  Location     Type
 28608 ;;		None
 28609 ;; Return value:  Size  Location     Type
 28610 ;;                  1    wreg      unsigned char 
 28611 ;; Registers used:
 28612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28613 ;; Tracked objects:
 28614 ;;		On entry : 0/0
 28615 ;;		On exit  : 0/0
 28616 ;;		Unchanged: 0/0
 28617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28618 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28620 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28621 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28622 ;;Total ram usage:        4 bytes
 28623 ;; Hardware stack levels used:    1
 28624 ;; Hardware stack levels required when called:   12
 28625 ;; This function calls:
 28626 ;;		___lwdiv
 28627 ;; This function is called by:
 28628 ;;		_LedStateMachine
 28629 ;; This function uses a non-reentrant model
 28630 ;;
 28631                           
 28632                           	psect	text130
 28633  0023FC                     __ptext130:
 28634                           	opt stack 0
 28635  0023FC                     _LedBlinkStateMachine:
 28636                           	opt stack 14
 28637                           
 28638                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 28639                           
 28640                           ; BSR set to: 0
 28641                           ;incstack = 0
 28642  0023FC  D08F               	goto	l2046
 28643  0023FE                     
 28644                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 28645  0023FE  0100               	movlb	0	; () banked
 28646  002400  EE20 F008          	lfsr	2,8
 28647  002404  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28648  002406  26D9               	addwf	fsr2l,f,c
 28649  002408  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28650  00240A  22DA               	addwfc	fsr2h,f,c
 28651  00240C  EE10 F001          	lfsr	1,1
 28652  002410  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28653  002412  26E1               	addwf	fsr1l,f,c
 28654  002414  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28655  002416  22E2               	addwfc	fsr1h,f,c
 28656  002418  CFDF FFE7          	movff	indf2,indf1
 28657                           
 28658                           ; BSR set to: 0
 28659                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 28660  00241C  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 28661  002420  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 28662  002424  D040               	goto	L44
 28663  002426                     
 28664                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 28665                           
 28666                           ; BSR set to: 0
 28667  002426  0100               	movlb	0	; () banked
 28668  002428  EE20 F002          	lfsr	2,2
 28669  00242C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28670  00242E  26D9               	addwf	fsr2l,f,c
 28671  002430  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28672  002432  22DA               	addwfc	fsr2h,f,c
 28673  002434  2ADE               	incf	postinc2,f,c
 28674  002436  0E00               	movlw	0
 28675  002438  22DD               	addwfc	postdec2,f,c
 28676                           
 28677                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 28678  00243A  EE20 F001          	lfsr	2,1
 28679  00243E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28680  002440  26D9               	addwf	fsr2l,f,c
 28681  002442  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28682  002444  22DA               	addwfc	fsr2h,f,c
 28683  002446  50DF               	movf	indf2,w,c
 28684  002448  A4D8               	btfss	status,2,c
 28685  00244A  D02F               	goto	l2050
 28686                           
 28687                           ; BSR set to: 0
 28688                           ;led.c: 142: {
 28689                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 28690  00244C  EE20 F006          	lfsr	2,6
 28691  002450  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28692  002452  26D9               	addwf	fsr2l,f,c
 28693  002454  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28694  002456  22DA               	addwfc	fsr2h,f,c
 28695  002458  CFDE F083          	movff	postinc2,___lwdiv@dividend
 28696  00245C  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 28697  002460  0E00               	movlw	0
 28698  002462  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 28699  002464  0E32               	movlw	50
 28700  002466  6F85               	movwf	___lwdiv@divisor& (0+255),b
 28701  002468  ECD1  F028         	call	___lwdiv	;wreg free
 28702  00246C  0100               	movlb	0	; () banked
 28703  00246E  EE20 F002          	lfsr	2,2
 28704  002472  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28705  002474  26D9               	addwf	fsr2l,f,c
 28706  002476  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28707  002478  22DA               	addwfc	fsr2h,f,c
 28708  00247A  5183               	movf	?___lwdiv& (0+255),w,b
 28709  00247C  5CDE               	subwf	postinc2,w,c
 28710  00247E  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 28711  002480  58DE               	subwfb	postinc2,w,c
 28712  002482  A0D8               	btfss	status,0,c
 28713  002484  D056               	goto	l2048
 28714                           
 28715                           ; BSR set to: 0
 28716                           ;led.c: 145: {
 28717                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 28718  002486  EE20 F002          	lfsr	2,2
 28719  00248A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28720  00248C  26D9               	addwf	fsr2l,f,c
 28721  00248E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28722  002490  22DA               	addwfc	fsr2h,f,c
 28723  002492  0E00               	movlw	0
 28724  002494  6EDE               	movwf	postinc2,c
 28725  002496  0E00               	movlw	0
 28726  002498  6EDD               	movwf	postdec2,c
 28727                           
 28728                           ;led.c: 149: LedBlink->LedOutState = OnState;
 28729  00249A  EE20 F001          	lfsr	2,1
 28730  00249E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28731  0024A0  26D9               	addwf	fsr2l,f,c
 28732  0024A2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28733  0024A4  22DA               	addwfc	fsr2h,f,c
 28734  0024A6                     L44:
 28735  0024A6  0E01               	movlw	1
 28736  0024A8  D037               	goto	L45
 28737  0024AA                     l2050:
 28738                           
 28739                           ; BSR set to: 0
 28740                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 28741                           
 28742                           ; BSR set to: 0
 28743  0024AA  EE20 F001          	lfsr	2,1
 28744  0024AE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28745  0024B0  26D9               	addwf	fsr2l,f,c
 28746  0024B2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28747  0024B4  22DA               	addwfc	fsr2h,f,c
 28748  0024B6  04DE               	decf	postinc2,w,c
 28749  0024B8  A4D8               	btfss	status,2,c
 28750  0024BA  D03B               	goto	l2048
 28751                           
 28752                           ; BSR set to: 0
 28753                           ;led.c: 153: {
 28754                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 28755  0024BC  EE20 F004          	lfsr	2,4
 28756  0024C0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28757  0024C2  26D9               	addwf	fsr2l,f,c
 28758  0024C4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28759  0024C6  22DA               	addwfc	fsr2h,f,c
 28760  0024C8  CFDE F083          	movff	postinc2,___lwdiv@dividend
 28761  0024CC  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 28762  0024D0  0E00               	movlw	0
 28763  0024D2  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 28764  0024D4  0E32               	movlw	50
 28765  0024D6  6F85               	movwf	___lwdiv@divisor& (0+255),b
 28766  0024D8  ECD1  F028         	call	___lwdiv	;wreg free
 28767  0024DC  0100               	movlb	0	; () banked
 28768  0024DE  EE20 F002          	lfsr	2,2
 28769  0024E2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28770  0024E4  26D9               	addwf	fsr2l,f,c
 28771  0024E6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28772  0024E8  22DA               	addwfc	fsr2h,f,c
 28773  0024EA  5183               	movf	?___lwdiv& (0+255),w,b
 28774  0024EC  5CDE               	subwf	postinc2,w,c
 28775  0024EE  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 28776  0024F0  58DE               	subwfb	postinc2,w,c
 28777  0024F2  A0D8               	btfss	status,0,c
 28778  0024F4  D01E               	goto	l2048
 28779                           
 28780                           ; BSR set to: 0
 28781                           ;led.c: 156: {
 28782                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 28783  0024F6  EE20 F002          	lfsr	2,2
 28784  0024FA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28785  0024FC  26D9               	addwf	fsr2l,f,c
 28786  0024FE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28787  002500  22DA               	addwfc	fsr2h,f,c
 28788  002502  0E00               	movlw	0
 28789  002504  6EDE               	movwf	postinc2,c
 28790  002506  0E00               	movlw	0
 28791  002508  6EDD               	movwf	postdec2,c
 28792                           
 28793                           ;led.c: 160: LedBlink->LedOutState = OffState;
 28794  00250A  EE20 F001          	lfsr	2,1
 28795  00250E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28796  002510  26D9               	addwf	fsr2l,f,c
 28797  002512  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28798  002514  22DA               	addwfc	fsr2h,f,c
 28799  002516  0E00               	movlw	0
 28800  002518                     L45:
 28801  002518  6EDF               	movwf	indf2,c
 28802                           
 28803                           ; BSR set to: 0
 28804                           ;led.c: 167: }
 28805                           
 28806                           ; BSR set to: 0
 28807                           ;led.c: 166: break;
 28808                           
 28809                           ;led.c: 165: default:
 28810                           
 28811                           ; BSR set to: 0
 28812                           ;led.c: 161: }
 28813                           ;led.c: 162: }
 28814                           ;led.c: 163: break;
 28815                           
 28816                           ; BSR set to: 0
 28817                           
 28818                           ; BSR set to: 0
 28819  00251A  D00B               	goto	l2048
 28820  00251C                     l2046:
 28821                           
 28822                           ; BSR set to: 0
 28823  00251C  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 28824  002520  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 28825  002524  50DF               	movf	indf2,w,c
 28826                           
 28827                           ; Switch size 1, requested type "space"
 28828                           ; Number of cases is 2, Range of values is 0 to 1
 28829                           ; switch strategies available:
 28830                           ; Name         Instructions Cycles
 28831                           ; simple_byte            7     4 (average)
 28832                           ;	Chosen strategy is simple_byte
 28833  002526  0A00               	xorlw	0	; case 0
 28834  002528  B4D8               	btfsc	status,2,c
 28835  00252A  D769               	goto	l2047
 28836  00252C  0A01               	xorlw	1	; case 1
 28837  00252E  B4D8               	btfsc	status,2,c
 28838  002530  D77A               	goto	l2049
 28839  002532                     l2048:
 28840                           
 28841                           ;led.c: 170: return (LedBlink->LedOutState);
 28842  002532  0100               	movlb	0	; () banked
 28843  002534  EE20 F001          	lfsr	2,1
 28844  002538  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28845  00253A  26D9               	addwf	fsr2l,f,c
 28846  00253C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28847  00253E  22DA               	addwfc	fsr2h,f,c
 28848  002540  50DF               	movf	indf2,w,c
 28849  002542  0012               	return	
 28850  002544                     __end_of_LedBlinkStateMachine:
 28851                           	opt stack 0
 28852                           tosu	equ	0xFFF
 28853                           tosh	equ	0xFFE
 28854                           tosl	equ	0xFFD
 28855                           pclath	equ	0xFFA
 28856                           tblptru	equ	0xFF8
 28857                           tblptrh	equ	0xFF7
 28858                           tblptrl	equ	0xFF6
 28859                           tablat	equ	0xFF5
 28860                           prodh	equ	0xFF4
 28861                           prodl	equ	0xFF3
 28862                           intcon	equ	0xFF2
 28863                           intcon2	equ	0xFF1
 28864                           intcon3	equ	0xFF0
 28865                           indf0	equ	0xFEF
 28866                           postinc0	equ	0xFEE
 28867                           plusw0	equ	0xFEB
 28868                           fsr0h	equ	0xFEA
 28869                           fsr0l	equ	0xFE9
 28870                           wreg	equ	0xFE8
 28871                           indf1	equ	0xFE7
 28872                           postinc1	equ	0xFE6
 28873                           postdec1	equ	0xFE5
 28874                           plusw1	equ	0xFE3
 28875                           fsr1h	equ	0xFE2
 28876                           fsr1l	equ	0xFE1
 28877                           indf2	equ	0xFDF
 28878                           postinc2	equ	0xFDE
 28879                           postdec2	equ	0xFDD
 28880                           plusw2	equ	0xFDB
 28881                           fsr2h	equ	0xFDA
 28882                           fsr2l	equ	0xFD9
 28883                           status	equ	0xFD8
 28884                           
 28885 ;; *************** function ___lwdiv *****************
 28886 ;; Defined at:
 28887 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 28888 ;; Parameters:    Size  Location     Type
 28889 ;;  dividend        2   35[BANK0 ] unsigned int 
 28890 ;;  divisor         2   37[BANK0 ] unsigned int 
 28891 ;; Auto vars:     Size  Location     Type
 28892 ;;  quotient        2   40[BANK0 ] unsigned int 
 28893 ;;  counter         1   39[BANK0 ] unsigned char 
 28894 ;; Return value:  Size  Location     Type
 28895 ;;                  2   35[BANK0 ] unsigned int 
 28896 ;; Registers used:
 28897 ;;		wreg, status,2, status,0
 28898 ;; Tracked objects:
 28899 ;;		On entry : 0/0
 28900 ;;		On exit  : 0/0
 28901 ;;		Unchanged: 0/0
 28902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28903 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28904 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28906 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28907 ;;Total ram usage:        7 bytes
 28908 ;; Hardware stack levels used:    1
 28909 ;; Hardware stack levels required when called:   11
 28910 ;; This function calls:
 28911 ;;		Nothing
 28912 ;; This function is called by:
 28913 ;;		_LedBlinkStateMachine
 28914 ;;		_LedPulseStateMachine
 28915 ;;		_secondsAppTimer
 28916 ;;		_utoa
 28917 ;; This function uses a non-reentrant model
 28918 ;;
 28919                           
 28920                           	psect	text131
 28921  0051A2                     __ptext131:
 28922                           	opt stack 0
 28923  0051A2                     ___lwdiv:
 28924                           	opt stack 14
 28925                           
 28926                           ; BSR set to: 0
 28927                           ;incstack = 0
 28928  0051A2  0E00               	movlw	0
 28929  0051A4  0100               	movlb	0	; () banked
 28930  0051A6  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 28931  0051A8  0E00               	movlw	0
 28932  0051AA  6F88               	movwf	___lwdiv@quotient& (0+255),b
 28933                           
 28934                           ; BSR set to: 0
 28935  0051AC  5185               	movf	___lwdiv@divisor& (0+255),w,b
 28936  0051AE  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 28937  0051B0  B4D8               	btfsc	status,2,c
 28938  0051B2  D01C               	goto	l3026
 28939                           
 28940                           ; BSR set to: 0
 28941  0051B4  0E01               	movlw	1
 28942  0051B6  6F87               	movwf	___lwdiv@counter& (0+255),b
 28943  0051B8  D004               	goto	l3021
 28944  0051BA                     
 28945                           ; BSR set to: 0
 28946                           
 28947                           ; BSR set to: 0
 28948  0051BA  90D8               	bcf	status,0,c
 28949  0051BC  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 28950  0051BE  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 28951  0051C0  2B87               	incf	___lwdiv@counter& (0+255),f,b
 28952  0051C2                     l3021:
 28953                           
 28954                           ; BSR set to: 0
 28955                           
 28956                           ; BSR set to: 0
 28957  0051C2  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 28958  0051C4  D7FA               	goto	l3022
 28959  0051C6                     u10290:
 28960                           
 28961                           ; BSR set to: 0
 28962                           
 28963                           ; BSR set to: 0
 28964                           
 28965                           ; BSR set to: 0
 28966  0051C6  90D8               	bcf	status,0,c
 28967  0051C8  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 28968  0051CA  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 28969                           
 28970                           ; BSR set to: 0
 28971  0051CC  5185               	movf	___lwdiv@divisor& (0+255),w,b
 28972  0051CE  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 28973  0051D0  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 28974  0051D2  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 28975  0051D4  A0D8               	btfss	status,0,c
 28976  0051D6  D005               	goto	l3025
 28977                           
 28978                           ; BSR set to: 0
 28979  0051D8  5185               	movf	___lwdiv@divisor& (0+255),w,b
 28980  0051DA  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 28981  0051DC  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 28982  0051DE  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 28983                           
 28984                           ; BSR set to: 0
 28985  0051E0  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 28986  0051E2                     l3025:
 28987                           
 28988                           ; BSR set to: 0
 28989                           
 28990                           ; BSR set to: 0
 28991  0051E2  90D8               	bcf	status,0,c
 28992  0051E4  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 28993  0051E6  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 28994                           
 28995                           ; BSR set to: 0
 28996  0051E8  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 28997  0051EA  D7ED               	goto	u10290
 28998  0051EC                     l3026:
 28999                           
 29000                           ; BSR set to: 0
 29001                           
 29002                           ; BSR set to: 0
 29003  0051EC  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 29004  0051F0  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29005                           
 29006                           ; BSR set to: 0
 29007  0051F4  0012               	return		;funcret
 29008  0051F6                     __end_of___lwdiv:
 29009                           	opt stack 0
 29010                           tosu	equ	0xFFF
 29011                           tosh	equ	0xFFE
 29012                           tosl	equ	0xFFD
 29013                           pclath	equ	0xFFA
 29014                           tblptru	equ	0xFF8
 29015                           tblptrh	equ	0xFF7
 29016                           tblptrl	equ	0xFF6
 29017                           tablat	equ	0xFF5
 29018                           prodh	equ	0xFF4
 29019                           prodl	equ	0xFF3
 29020                           intcon	equ	0xFF2
 29021                           intcon2	equ	0xFF1
 29022                           intcon3	equ	0xFF0
 29023                           indf0	equ	0xFEF
 29024                           postinc0	equ	0xFEE
 29025                           plusw0	equ	0xFEB
 29026                           fsr0h	equ	0xFEA
 29027                           fsr0l	equ	0xFE9
 29028                           wreg	equ	0xFE8
 29029                           indf1	equ	0xFE7
 29030                           postinc1	equ	0xFE6
 29031                           postdec1	equ	0xFE5
 29032                           plusw1	equ	0xFE3
 29033                           fsr1h	equ	0xFE2
 29034                           fsr1l	equ	0xFE1
 29035                           indf2	equ	0xFDF
 29036                           postinc2	equ	0xFDE
 29037                           postdec2	equ	0xFDD
 29038                           plusw2	equ	0xFDB
 29039                           fsr2h	equ	0xFDA
 29040                           fsr2l	equ	0xFD9
 29041                           status	equ	0xFD8
 29042                           
 29043 ;; *************** function _OsAlrm_SetOsAlarm *****************
 29044 ;; Defined at:
 29045 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 29046 ;; Parameters:    Size  Location     Type
 29047 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 29048 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 29049 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 29050 ;;		 -> I2cDummyTx(1), 
 29051 ;; Auto vars:     Size  Location     Type
 29052 ;;		None
 29053 ;; Return value:  Size  Location     Type
 29054 ;;                  1    wreg      void 
 29055 ;; Registers used:
 29056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29057 ;; Tracked objects:
 29058 ;;		On entry : 0/0
 29059 ;;		On exit  : 0/0
 29060 ;;		Unchanged: 0/0
 29061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29062 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29065 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29066 ;;Total ram usage:        8 bytes
 29067 ;; Hardware stack levels used:    1
 29068 ;; Hardware stack levels required when called:   12
 29069 ;; This function calls:
 29070 ;;		___wmul
 29071 ;; This function is called by:
 29072 ;;		_I2cSlv_MainTask
 29073 ;; This function uses a non-reentrant model
 29074 ;;
 29075                           
 29076                           	psect	text132
 29077  003B36                     __ptext132:
 29078                           	opt stack 0
 29079  003B36                     _OsAlrm_SetOsAlarm:
 29080                           	opt stack 15
 29081                           
 29082                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 29083                           
 29084                           ; BSR set to: 0
 29085                           ;incstack = 0
 29086  003B36  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29087  003B3A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29088  003B3E  0E00               	movlw	0
 29089  003B40  0100               	movlb	0	; () banked
 29090  003B42  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29091  003B44  0E0B               	movlw	11
 29092  003B46  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29093  003B48  EC8B  F02D         	call	___wmul	;wreg free
 29094  003B4C  0E00               	movlw	low _OsAlarms
 29095  003B4E  0100               	movlb	0	; () banked
 29096  003B50  257D               	addwf	?___wmul& (0+255),w,b
 29097  003B52  6ED9               	movwf	fsr2l,c
 29098  003B54  0E06               	movlw	high _OsAlarms
 29099  003B56  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 29100  003B58  6EDA               	movwf	fsr2h,c
 29101  003B5A  0E01               	movlw	1
 29102  003B5C  6EDF               	movwf	indf2,c
 29103                           
 29104                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 29105  003B5E  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29106  003B62  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29107  003B66  0E00               	movlw	0
 29108  003B68  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29109  003B6A  0E0B               	movlw	11
 29110  003B6C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29111  003B6E  EC8B  F02D         	call	___wmul	;wreg free
 29112  003B72  0E01               	movlw	1
 29113  003B74  0100               	movlb	0	; () banked
 29114  003B76  277D               	addwf	?___wmul& (0+255),f,b
 29115  003B78  0E00               	movlw	0
 29116  003B7A  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 29117  003B7C  0E00               	movlw	low _OsAlarms
 29118  003B7E  257D               	addwf	?___wmul& (0+255),w,b
 29119  003B80  6ED9               	movwf	fsr2l,c
 29120  003B82  0E06               	movlw	high _OsAlarms
 29121  003B84  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 29122  003B86  6EDA               	movwf	fsr2h,c
 29123  003B88  6ADE               	clrf	postinc2,c
 29124  003B8A  6ADE               	clrf	postinc2,c
 29125  003B8C  6ADE               	clrf	postinc2,c
 29126  003B8E  6ADD               	clrf	postdec2,c
 29127                           
 29128                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 29129  003B90  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29130  003B94  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29131  003B98  0E00               	movlw	0
 29132  003B9A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29133  003B9C  0E0B               	movlw	11
 29134  003B9E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29135  003BA0  EC8B  F02D         	call	___wmul	;wreg free
 29136  003BA4  0E05               	movlw	5
 29137  003BA6  0100               	movlb	0	; () banked
 29138  003BA8  277D               	addwf	?___wmul& (0+255),f,b
 29139  003BAA  0E00               	movlw	0
 29140  003BAC  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 29141  003BAE  0E00               	movlw	low _OsAlarms
 29142  003BB0  257D               	addwf	?___wmul& (0+255),w,b
 29143  003BB2  6ED9               	movwf	fsr2l,c
 29144  003BB4  0E06               	movlw	high _OsAlarms
 29145  003BB6  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 29146  003BB8  6EDA               	movwf	fsr2h,c
 29147  003BBA  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 29148  003BBE  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 29149  003BC2  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 29150  003BC6  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 29151                           
 29152                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 29153  003BCA  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 29154  003BCE  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 29155  003BD2  0E00               	movlw	0
 29156  003BD4  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 29157  003BD6  0E0B               	movlw	11
 29158  003BD8  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 29159  003BDA  EC8B  F02D         	call	___wmul	;wreg free
 29160  003BDE  0E09               	movlw	9
 29161  003BE0  0100               	movlb	0	; () banked
 29162  003BE2  277D               	addwf	?___wmul& (0+255),f,b
 29163  003BE4  0E00               	movlw	0
 29164  003BE6  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 29165  003BE8  0E00               	movlw	low _OsAlarms
 29166  003BEA  257D               	addwf	?___wmul& (0+255),w,b
 29167  003BEC  6ED9               	movwf	fsr2l,c
 29168  003BEE  0E06               	movlw	high _OsAlarms
 29169  003BF0  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 29170  003BF2  6EDA               	movwf	fsr2h,c
 29171  003BF4  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 29172  003BF8  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 29173                           
 29174                           ; BSR set to: 0
 29175  003BFC  0012               	return		;funcret
 29176  003BFE                     __end_of_OsAlrm_SetOsAlarm:
 29177                           	opt stack 0
 29178                           tosu	equ	0xFFF
 29179                           tosh	equ	0xFFE
 29180                           tosl	equ	0xFFD
 29181                           pclath	equ	0xFFA
 29182                           tblptru	equ	0xFF8
 29183                           tblptrh	equ	0xFF7
 29184                           tblptrl	equ	0xFF6
 29185                           tablat	equ	0xFF5
 29186                           prodh	equ	0xFF4
 29187                           prodl	equ	0xFF3
 29188                           intcon	equ	0xFF2
 29189                           intcon2	equ	0xFF1
 29190                           intcon3	equ	0xFF0
 29191                           indf0	equ	0xFEF
 29192                           postinc0	equ	0xFEE
 29193                           plusw0	equ	0xFEB
 29194                           fsr0h	equ	0xFEA
 29195                           fsr0l	equ	0xFE9
 29196                           wreg	equ	0xFE8
 29197                           indf1	equ	0xFE7
 29198                           postinc1	equ	0xFE6
 29199                           postdec1	equ	0xFE5
 29200                           plusw1	equ	0xFE3
 29201                           fsr1h	equ	0xFE2
 29202                           fsr1l	equ	0xFE1
 29203                           indf2	equ	0xFDF
 29204                           postinc2	equ	0xFDE
 29205                           postdec2	equ	0xFDD
 29206                           plusw2	equ	0xFDB
 29207                           fsr2h	equ	0xFDA
 29208                           fsr2l	equ	0xFD9
 29209                           status	equ	0xFD8
 29210                           
 29211 ;; *************** function ___wmul *****************
 29212 ;; Defined at:
 29213 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 29214 ;; Parameters:    Size  Location     Type
 29215 ;;  multiplier      2   29[BANK0 ] unsigned int 
 29216 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 29217 ;; Auto vars:     Size  Location     Type
 29218 ;;  product         2   33[BANK0 ] unsigned int 
 29219 ;; Return value:  Size  Location     Type
 29220 ;;                  2   29[BANK0 ] unsigned int 
 29221 ;; Registers used:
 29222 ;;		wreg, status,2, status,0, prodl, prodh
 29223 ;; Tracked objects:
 29224 ;;		On entry : 0/0
 29225 ;;		On exit  : 0/0
 29226 ;;		Unchanged: 0/0
 29227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29228 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29229 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29231 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29232 ;;Total ram usage:        6 bytes
 29233 ;; Hardware stack levels used:    1
 29234 ;; Hardware stack levels required when called:   11
 29235 ;; This function calls:
 29236 ;;		Nothing
 29237 ;; This function is called by:
 29238 ;;		_OsAlrm_SetOsAlarm
 29239 ;;		_secondsAppTimer
 29240 ;;		_atoi
 29241 ;; This function uses a non-reentrant model
 29242 ;;
 29243                           
 29244                           	psect	text133
 29245  005B16                     __ptext133:
 29246                           	opt stack 0
 29247  005B16                     ___wmul:
 29248                           	opt stack 13
 29249                           
 29250                           ; BSR set to: 0
 29251                           ;incstack = 0
 29252  005B16  0100               	movlb	0	; () banked
 29253  005B18  517D               	movf	___wmul@multiplier& (0+255),w,b
 29254  005B1A  037F               	mulwf	___wmul@multiplicand& (0+255),b
 29255  005B1C  CFF3 F081          	movff	prodl,___wmul@product
 29256  005B20  CFF4 F082          	movff	prodh,___wmul@product+1
 29257  005B24  517D               	movf	___wmul@multiplier& (0+255),w,b
 29258  005B26  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 29259  005B28  50F3               	movf	prodl,w,c
 29260  005B2A  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 29261  005B2C  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 29262  005B2E  037F               	mulwf	___wmul@multiplicand& (0+255),b
 29263  005B30  50F3               	movf	prodl,w,c
 29264  005B32  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 29265                           
 29266                           ; BSR set to: 0
 29267  005B34  C081  F07D         	movff	___wmul@product,?___wmul
 29268  005B38  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 29269  005B3C  0012               	return	
 29270  005B3E                     __end_of___wmul:
 29271                           	opt stack 0
 29272                           tosu	equ	0xFFF
 29273                           tosh	equ	0xFFE
 29274                           tosl	equ	0xFFD
 29275                           pclath	equ	0xFFA
 29276                           tblptru	equ	0xFF8
 29277                           tblptrh	equ	0xFF7
 29278                           tblptrl	equ	0xFF6
 29279                           tablat	equ	0xFF5
 29280                           prodh	equ	0xFF4
 29281                           prodl	equ	0xFF3
 29282                           intcon	equ	0xFF2
 29283                           intcon2	equ	0xFF1
 29284                           intcon3	equ	0xFF0
 29285                           indf0	equ	0xFEF
 29286                           postinc0	equ	0xFEE
 29287                           plusw0	equ	0xFEB
 29288                           fsr0h	equ	0xFEA
 29289                           fsr0l	equ	0xFE9
 29290                           wreg	equ	0xFE8
 29291                           indf1	equ	0xFE7
 29292                           postinc1	equ	0xFE6
 29293                           postdec1	equ	0xFE5
 29294                           plusw1	equ	0xFE3
 29295                           fsr1h	equ	0xFE2
 29296                           fsr1l	equ	0xFE1
 29297                           indf2	equ	0xFDF
 29298                           postinc2	equ	0xFDE
 29299                           postdec2	equ	0xFDD
 29300                           plusw2	equ	0xFDB
 29301                           fsr2h	equ	0xFDA
 29302                           fsr2l	equ	0xFD9
 29303                           status	equ	0xFD8
 29304                           
 29305 ;; *************** function _I2c_InitI2cModule *****************
 29306 ;; Defined at:
 29307 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 29308 ;; Parameters:    Size  Location     Type
 29309 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 29310 ;;		 -> I2cConfig(10), 
 29311 ;; Auto vars:     Size  Location     Type
 29312 ;;		None
 29313 ;; Return value:  Size  Location     Type
 29314 ;;                  1    wreg      void 
 29315 ;; Registers used:
 29316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29317 ;; Tracked objects:
 29318 ;;		On entry : 0/0
 29319 ;;		On exit  : 0/0
 29320 ;;		Unchanged: 0/0
 29321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29324 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29325 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29326 ;;Total ram usage:        4 bytes
 29327 ;; Hardware stack levels used:    1
 29328 ;; Hardware stack levels required when called:   13
 29329 ;; This function calls:
 29330 ;;		_SetBaudRate
 29331 ;; This function is called by:
 29332 ;;		_I2cSlv_MainTask
 29333 ;; This function uses a non-reentrant model
 29334 ;;
 29335                           
 29336                           	psect	text134
 29337  004B46                     __ptext134:
 29338                           	opt stack 0
 29339  004B46                     _I2c_InitI2cModule:
 29340                           	opt stack 14
 29341                           
 29342                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 29343                           
 29344                           ; BSR set to: 0
 29345                           ;incstack = 0
 29346  004B46  8295               	bsf	3989,1,c	;volatile
 29347                           
 29348                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 29349  004B48  8095               	bsf	3989,0,c	;volatile
 29350                           
 29351                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 29352  004B4A  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 29353  004B4E  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 29354  004B52  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 29355  004B56  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 29356  004B5A  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 29357  004B5E  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 29358  004B62  0100               	movlb	0	; () banked
 29359  004B64  EE20 F004          	lfsr	2,4
 29360  004B68  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 29361  004B6A  26D9               	addwf	fsr2l,f,c
 29362  004B6C  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 29363  004B6E  22DA               	addwfc	fsr2h,f,c
 29364  004B70  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 29365  004B74  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 29366  004B78  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 29367  004B7C  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 29368  004B80  ECC3  F029         	call	_SetBaudRate	;wreg free
 29369                           
 29370                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 29371  004B84  0100               	movlb	0	; () banked
 29372  004B86  EE20 F008          	lfsr	2,8
 29373  004B8A  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 29374  004B8C  26D9               	addwf	fsr2l,f,c
 29375  004B8E  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 29376  004B90  22DA               	addwfc	fsr2h,f,c
 29377  004B92  50DF               	movf	indf2,w,c
 29378  004B94  1272               	iorwf	3954,f,c	;volatile
 29379                           
 29380                           ; BSR set to: 0
 29381                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 29382  004B96  EE20 F009          	lfsr	2,9
 29383  004B9A  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 29384  004B9C  26D9               	addwf	fsr2l,f,c
 29385  004B9E  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 29386  004BA0  22DA               	addwfc	fsr2h,f,c
 29387  004BA2  50DF               	movf	indf2,w,c
 29388  004BA4  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 29389  004BA6  0E05               	movlw	5
 29390  004BA8  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 29391  004BAA                     u7925:
 29392  004BAA  90D8               	bcf	status,0,c
 29393  004BAC  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 29394  004BAE  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 29395  004BB0  D7FC               	goto	u7925
 29396  004BB2  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 29397  004BB4  1272               	iorwf	3954,f,c	;volatile
 29398                           
 29399                           ; BSR set to: 0
 29400  004BB6  0012               	return		;funcret
 29401  004BB8                     __end_of_I2c_InitI2cModule:
 29402                           	opt stack 0
 29403                           tosu	equ	0xFFF
 29404                           tosh	equ	0xFFE
 29405                           tosl	equ	0xFFD
 29406                           pclath	equ	0xFFA
 29407                           tblptru	equ	0xFF8
 29408                           tblptrh	equ	0xFF7
 29409                           tblptrl	equ	0xFF6
 29410                           tablat	equ	0xFF5
 29411                           prodh	equ	0xFF4
 29412                           prodl	equ	0xFF3
 29413                           intcon	equ	0xFF2
 29414                           intcon2	equ	0xFF1
 29415                           intcon3	equ	0xFF0
 29416                           indf0	equ	0xFEF
 29417                           postinc0	equ	0xFEE
 29418                           plusw0	equ	0xFEB
 29419                           fsr0h	equ	0xFEA
 29420                           fsr0l	equ	0xFE9
 29421                           wreg	equ	0xFE8
 29422                           indf1	equ	0xFE7
 29423                           postinc1	equ	0xFE6
 29424                           postdec1	equ	0xFE5
 29425                           plusw1	equ	0xFE3
 29426                           fsr1h	equ	0xFE2
 29427                           fsr1l	equ	0xFE1
 29428                           indf2	equ	0xFDF
 29429                           postinc2	equ	0xFDE
 29430                           postdec2	equ	0xFDD
 29431                           plusw2	equ	0xFDB
 29432                           fsr2h	equ	0xFDA
 29433                           fsr2l	equ	0xFD9
 29434                           status	equ	0xFD8
 29435                           
 29436 ;; *************** function _SetBaudRate *****************
 29437 ;; Defined at:
 29438 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 29439 ;; Parameters:    Size  Location     Type
 29440 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 29441 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 29442 ;; Auto vars:     Size  Location     Type
 29443 ;;		None
 29444 ;; Return value:  Size  Location     Type
 29445 ;;                  1    wreg      void 
 29446 ;; Registers used:
 29447 ;;		wreg, status,2, status,0, cstack
 29448 ;; Tracked objects:
 29449 ;;		On entry : 0/0
 29450 ;;		On exit  : 0/0
 29451 ;;		Unchanged: 0/0
 29452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29453 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29455 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29456 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29457 ;;Total ram usage:       12 bytes
 29458 ;; Hardware stack levels used:    1
 29459 ;; Hardware stack levels required when called:   12
 29460 ;; This function calls:
 29461 ;;		___lldiv
 29462 ;; This function is called by:
 29463 ;;		_I2c_InitI2cModule
 29464 ;; This function uses a non-reentrant model
 29465 ;;
 29466                           
 29467                           	psect	text135
 29468  005386                     __ptext135:
 29469                           	opt stack 0
 29470  005386                     _SetBaudRate:
 29471                           	opt stack 14
 29472                           
 29473                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 29474                           
 29475                           ; BSR set to: 0
 29476                           ;incstack = 0
 29477  005386  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 29478  00538A  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 29479  00538E  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 29480  005392  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 29481  005396  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 29482  00539A  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 29483  00539E  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 29484  0053A2  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 29485  0053A6  0E02               	movlw	2
 29486  0053A8                     u6885:
 29487  0053A8  90D8               	bcf	status,0,c
 29488  0053AA  0100               	movlb	0	; () banked
 29489  0053AC  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 29490  0053AE  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 29491  0053B0  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 29492  0053B2  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 29493  0053B4  2EE8               	decfsz	wreg,f,c
 29494  0053B6  D7F8               	goto	u6885
 29495  0053B8  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 29496  0053BC  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 29497  0053C0  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 29498  0053C4  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 29499  0053C8  ECE7  F024         	call	___lldiv	;wreg free
 29500  0053CC  0100               	movlb	0	; () banked
 29501  0053CE  0589               	decf	?___lldiv& (0+255),w,b
 29502  0053D0  6E74               	movwf	3956,c	;volatile
 29503                           
 29504                           ; BSR set to: 0
 29505  0053D2  0012               	return		;funcret
 29506  0053D4                     __end_of_SetBaudRate:
 29507                           	opt stack 0
 29508                           tosu	equ	0xFFF
 29509                           tosh	equ	0xFFE
 29510                           tosl	equ	0xFFD
 29511                           pclath	equ	0xFFA
 29512                           tblptru	equ	0xFF8
 29513                           tblptrh	equ	0xFF7
 29514                           tblptrl	equ	0xFF6
 29515                           tablat	equ	0xFF5
 29516                           prodh	equ	0xFF4
 29517                           prodl	equ	0xFF3
 29518                           intcon	equ	0xFF2
 29519                           intcon2	equ	0xFF1
 29520                           intcon3	equ	0xFF0
 29521                           indf0	equ	0xFEF
 29522                           postinc0	equ	0xFEE
 29523                           plusw0	equ	0xFEB
 29524                           fsr0h	equ	0xFEA
 29525                           fsr0l	equ	0xFE9
 29526                           wreg	equ	0xFE8
 29527                           indf1	equ	0xFE7
 29528                           postinc1	equ	0xFE6
 29529                           postdec1	equ	0xFE5
 29530                           plusw1	equ	0xFE3
 29531                           fsr1h	equ	0xFE2
 29532                           fsr1l	equ	0xFE1
 29533                           indf2	equ	0xFDF
 29534                           postinc2	equ	0xFDE
 29535                           postdec2	equ	0xFDD
 29536                           plusw2	equ	0xFDB
 29537                           fsr2h	equ	0xFDA
 29538                           fsr2l	equ	0xFD9
 29539                           status	equ	0xFD8
 29540                           
 29541 ;; *************** function ___lldiv *****************
 29542 ;; Defined at:
 29543 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 29544 ;; Parameters:    Size  Location     Type
 29545 ;;  dividend        4   41[BANK0 ] unsigned long 
 29546 ;;  divisor         4   45[BANK0 ] unsigned long 
 29547 ;; Auto vars:     Size  Location     Type
 29548 ;;  quotient        4   49[BANK0 ] unsigned long 
 29549 ;;  counter         1   53[BANK0 ] unsigned char 
 29550 ;; Return value:  Size  Location     Type
 29551 ;;                  4   41[BANK0 ] unsigned long 
 29552 ;; Registers used:
 29553 ;;		wreg, status,2, status,0
 29554 ;; Tracked objects:
 29555 ;;		On entry : 0/0
 29556 ;;		On exit  : 0/0
 29557 ;;		Unchanged: 0/0
 29558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29559 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29560 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29562 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29563 ;;Total ram usage:       13 bytes
 29564 ;; Hardware stack levels used:    1
 29565 ;; Hardware stack levels required when called:   11
 29566 ;; This function calls:
 29567 ;;		Nothing
 29568 ;; This function is called by:
 29569 ;;		_SetBaudRate
 29570 ;;		_Tmr_TmrBPrSet
 29571 ;;		_SetUartBaudRate
 29572 ;; This function uses a non-reentrant model
 29573 ;;
 29574                           
 29575                           	psect	text136
 29576  0049CE                     __ptext136:
 29577                           	opt stack 0
 29578  0049CE                     ___lldiv:
 29579                           	opt stack 15
 29580                           
 29581                           ; BSR set to: 0
 29582                           ;incstack = 0
 29583  0049CE  0E00               	movlw	0
 29584  0049D0  0100               	movlb	0	; () banked
 29585  0049D2  6F91               	movwf	___lldiv@quotient& (0+255),b
 29586  0049D4  0E00               	movlw	0
 29587  0049D6  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 29588  0049D8  0E00               	movlw	0
 29589  0049DA  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 29590  0049DC  0E00               	movlw	0
 29591  0049DE  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 29592                           
 29593                           ; BSR set to: 0
 29594  0049E0  518D               	movf	___lldiv@divisor& (0+255),w,b
 29595  0049E2  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 29596  0049E4  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 29597  0049E6  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 29598  0049E8  B4D8               	btfsc	status,2,c
 29599  0049EA  D02A               	goto	l2973
 29600                           
 29601                           ; BSR set to: 0
 29602  0049EC  0E01               	movlw	1
 29603  0049EE  6F95               	movwf	___lldiv@counter& (0+255),b
 29604  0049F0  D006               	goto	l2968
 29605  0049F2                     
 29606                           ; BSR set to: 0
 29607                           
 29608                           ; BSR set to: 0
 29609  0049F2  90D8               	bcf	status,0,c
 29610  0049F4  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 29611  0049F6  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 29612  0049F8  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 29613  0049FA  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 29614  0049FC  2B95               	incf	___lldiv@counter& (0+255),f,b
 29615  0049FE                     l2968:
 29616                           
 29617                           ; BSR set to: 0
 29618                           
 29619                           ; BSR set to: 0
 29620  0049FE  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 29621  004A00  D7F8               	goto	l2969
 29622  004A02                     u5920:
 29623                           
 29624                           ; BSR set to: 0
 29625                           
 29626                           ; BSR set to: 0
 29627                           
 29628                           ; BSR set to: 0
 29629  004A02  90D8               	bcf	status,0,c
 29630  004A04  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 29631  004A06  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 29632  004A08  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 29633  004A0A  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 29634                           
 29635                           ; BSR set to: 0
 29636  004A0C  518D               	movf	___lldiv@divisor& (0+255),w,b
 29637  004A0E  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 29638  004A10  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29639  004A12  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 29640  004A14  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29641  004A16  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 29642  004A18  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29643  004A1A  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 29644  004A1C  A0D8               	btfss	status,0,c
 29645  004A1E  D009               	goto	l2972
 29646                           
 29647                           ; BSR set to: 0
 29648  004A20  518D               	movf	___lldiv@divisor& (0+255),w,b
 29649  004A22  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 29650  004A24  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29651  004A26  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 29652  004A28  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29653  004A2A  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 29654  004A2C  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29655  004A2E  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 29656                           
 29657                           ; BSR set to: 0
 29658  004A30  8191               	bsf	___lldiv@quotient& (0+255),0,b
 29659  004A32                     l2972:
 29660                           
 29661                           ; BSR set to: 0
 29662                           
 29663                           ; BSR set to: 0
 29664  004A32  90D8               	bcf	status,0,c
 29665  004A34  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 29666  004A36  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 29667  004A38  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 29668  004A3A  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 29669                           
 29670                           ; BSR set to: 0
 29671  004A3C  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 29672  004A3E  D7E1               	goto	u5920
 29673  004A40                     l2973:
 29674                           
 29675                           ; BSR set to: 0
 29676                           
 29677                           ; BSR set to: 0
 29678  004A40  C091  F089         	movff	___lldiv@quotient,?___lldiv
 29679  004A44  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 29680  004A48  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 29681  004A4C  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 29682                           
 29683                           ; BSR set to: 0
 29684  004A50  0012               	return		;funcret
 29685  004A52                     __end_of___lldiv:
 29686                           	opt stack 0
 29687                           tosu	equ	0xFFF
 29688                           tosh	equ	0xFFE
 29689                           tosl	equ	0xFFD
 29690                           pclath	equ	0xFFA
 29691                           tblptru	equ	0xFF8
 29692                           tblptrh	equ	0xFF7
 29693                           tblptrl	equ	0xFF6
 29694                           tablat	equ	0xFF5
 29695                           prodh	equ	0xFF4
 29696                           prodl	equ	0xFF3
 29697                           intcon	equ	0xFF2
 29698                           intcon2	equ	0xFF1
 29699                           intcon3	equ	0xFF0
 29700                           indf0	equ	0xFEF
 29701                           postinc0	equ	0xFEE
 29702                           plusw0	equ	0xFEB
 29703                           fsr0h	equ	0xFEA
 29704                           fsr0l	equ	0xFE9
 29705                           wreg	equ	0xFE8
 29706                           indf1	equ	0xFE7
 29707                           postinc1	equ	0xFE6
 29708                           postdec1	equ	0xFE5
 29709                           plusw1	equ	0xFE3
 29710                           fsr1h	equ	0xFE2
 29711                           fsr1l	equ	0xFE1
 29712                           indf2	equ	0xFDF
 29713                           postinc2	equ	0xFDE
 29714                           postdec2	equ	0xFDD
 29715                           plusw2	equ	0xFDB
 29716                           fsr2h	equ	0xFDA
 29717                           fsr2l	equ	0xFD9
 29718                           status	equ	0xFD8
 29719                           
 29720 ;; *************** function _I2cSetConfig *****************
 29721 ;; Defined at:
 29722 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 29723 ;; Parameters:    Size  Location     Type
 29724 ;;		None
 29725 ;; Auto vars:     Size  Location     Type
 29726 ;;		None
 29727 ;; Return value:  Size  Location     Type
 29728 ;;                  1    wreg      void 
 29729 ;; Registers used:
 29730 ;;		wreg, status,2
 29731 ;; Tracked objects:
 29732 ;;		On entry : 0/0
 29733 ;;		On exit  : 0/0
 29734 ;;		Unchanged: 0/0
 29735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29740 ;;Total ram usage:        0 bytes
 29741 ;; Hardware stack levels used:    1
 29742 ;; Hardware stack levels required when called:   11
 29743 ;; This function calls:
 29744 ;;		Nothing
 29745 ;; This function is called by:
 29746 ;;		_I2cSlv_MainTask
 29747 ;; This function uses a non-reentrant model
 29748 ;;
 29749                           
 29750                           	psect	text137
 29751  005A96                     __ptext137:
 29752                           	opt stack 0
 29753  005A96                     _I2cSetConfig:
 29754                           	opt stack 16
 29755                           
 29756                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 29757                           
 29758                           ; BSR set to: 0
 29759                           ;incstack = 0
 29760  005A96  0E80               	movlw	128
 29761  005A98  0103               	movlb	3	; () banked
 29762  005A9A  6F51               	movwf	_I2cConfig& (0+255),b
 29763  005A9C  0E1A               	movlw	26
 29764  005A9E  6F52               	movwf	(_I2cConfig+1)& (0+255),b
 29765  005AA0  0E06               	movlw	6
 29766  005AA2  6F53               	movwf	(_I2cConfig+2)& (0+255),b
 29767  005AA4  0E00               	movlw	0
 29768  005AA6  6F54               	movwf	(_I2cConfig+3)& (0+255),b
 29769                           
 29770                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 29771  005AA8  0E00               	movlw	0
 29772  005AAA  6F55               	movwf	(_I2cConfig+4)& (0+255),b
 29773  005AAC  0E6C               	movlw	108
 29774  005AAE  6F56               	movwf	(_I2cConfig+5)& (0+255),b
 29775  005AB0  0EDC               	movlw	220
 29776  005AB2  6F57               	movwf	(_I2cConfig+6)& (0+255),b
 29777  005AB4  0E02               	movlw	2
 29778  005AB6  6F58               	movwf	(_I2cConfig+7)& (0+255),b
 29779                           
 29780                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 29781  005AB8  0E08               	movlw	8
 29782  005ABA  6F59               	movwf	(_I2cConfig+8)& (0+255),b
 29783                           
 29784                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 29785  005ABC  0E01               	movlw	1
 29786  005ABE  6F5A               	movwf	(_I2cConfig+9)& (0+255),b
 29787                           
 29788                           ; BSR set to: 3
 29789  005AC0  0012               	return		;funcret
 29790  005AC2                     __end_of_I2cSetConfig:
 29791                           	opt stack 0
 29792                           tosu	equ	0xFFF
 29793                           tosh	equ	0xFFE
 29794                           tosl	equ	0xFFD
 29795                           pclath	equ	0xFFA
 29796                           tblptru	equ	0xFF8
 29797                           tblptrh	equ	0xFF7
 29798                           tblptrl	equ	0xFF6
 29799                           tablat	equ	0xFF5
 29800                           prodh	equ	0xFF4
 29801                           prodl	equ	0xFF3
 29802                           intcon	equ	0xFF2
 29803                           intcon2	equ	0xFF1
 29804                           intcon3	equ	0xFF0
 29805                           indf0	equ	0xFEF
 29806                           postinc0	equ	0xFEE
 29807                           plusw0	equ	0xFEB
 29808                           fsr0h	equ	0xFEA
 29809                           fsr0l	equ	0xFE9
 29810                           wreg	equ	0xFE8
 29811                           indf1	equ	0xFE7
 29812                           postinc1	equ	0xFE6
 29813                           postdec1	equ	0xFE5
 29814                           plusw1	equ	0xFE3
 29815                           fsr1h	equ	0xFE2
 29816                           fsr1l	equ	0xFE1
 29817                           indf2	equ	0xFDF
 29818                           postinc2	equ	0xFDE
 29819                           postdec2	equ	0xFDD
 29820                           plusw2	equ	0xFDB
 29821                           fsr2h	equ	0xFDA
 29822                           fsr2l	equ	0xFD9
 29823                           status	equ	0xFD8
 29824                           
 29825 ;; *************** function _I2cSendMsgSm *****************
 29826 ;; Defined at:
 29827 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 29828 ;; Parameters:    Size  Location     Type
 29829 ;;		None
 29830 ;; Auto vars:     Size  Location     Type
 29831 ;;		None
 29832 ;; Return value:  Size  Location     Type
 29833 ;;                  1    wreg      void 
 29834 ;; Registers used:
 29835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29836 ;; Tracked objects:
 29837 ;;		On entry : 0/0
 29838 ;;		On exit  : 0/0
 29839 ;;		Unchanged: 0/0
 29840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29845 ;;Total ram usage:        0 bytes
 29846 ;; Hardware stack levels used:    1
 29847 ;; Hardware stack levels required when called:   13
 29848 ;; This function calls:
 29849 ;;		_I2c_ReadData
 29850 ;;		_I2c_WriteData
 29851 ;;		_ReceiveEvt
 29852 ;; This function is called by:
 29853 ;;		_I2cSlv_MainTask
 29854 ;; This function uses a non-reentrant model
 29855 ;;
 29856                           
 29857                           	psect	text138
 29858  003BFE                     __ptext138:
 29859                           	opt stack 0
 29860  003BFE                     _I2cSendMsgSm:
 29861                           	opt stack 14
 29862                           
 29863                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 29864                           ;i2c_slv.c: 122: switch(I2cComState)
 29865                           
 29866                           ; BSR set to: 3
 29867                           ;incstack = 0
 29868  003BFE  D04F               	goto	l1365
 29869  003C00                     
 29870                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 29871  003C00  0ED6               	movlw	low _I2cWriteDataEvt
 29872  003C02  0100               	movlb	0	; () banked
 29873  003C04  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29874  003C06  0E00               	movlw	high _I2cWriteDataEvt
 29875  003C08  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29876  003C0A  EC34  F02D         	call	_ReceiveEvt	;wreg free
 29877  003C0E  0900               	iorlw	0
 29878  003C10  B4D8               	btfsc	status,2,c
 29879  003C12  D007               	goto	l1367
 29880                           
 29881                           ;i2c_slv.c: 127: {
 29882                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 29883  003C14  0E01               	movlw	1
 29884  003C16  0101               	movlb	1	; () banked
 29885  003C18  6FEB               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29886                           
 29887                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 29888  003C1A  0E01               	movlw	1
 29889  003C1C  0100               	movlb	0	; () banked
 29890  003C1E  6FCC               	movwf	_I2cComSts& (0+255),b
 29891                           
 29892                           ;i2c_slv.c: 132: }
 29893  003C20  0012               	return	
 29894  003C22                     l1367:
 29895                           
 29896                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 29897                           
 29898                           ; BSR set to: 0
 29899  003C22  0ED5               	movlw	low _I2cReadDataEvt
 29900  003C24  0100               	movlb	0	; () banked
 29901  003C26  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29902  003C28  0E00               	movlw	high _I2cReadDataEvt
 29903  003C2A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29904  003C2C  EC34  F02D         	call	_ReceiveEvt	;wreg free
 29905  003C30  0900               	iorlw	0
 29906  003C32  B4D8               	btfsc	status,2,c
 29907  003C34  D007               	goto	l1369
 29908                           
 29909                           ;i2c_slv.c: 134: {
 29910                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 29911  003C36  0E02               	movlw	2
 29912  003C38  0101               	movlb	1	; () banked
 29913  003C3A  6FEB               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29914                           
 29915                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 29916  003C3C  0E02               	movlw	2
 29917  003C3E  0100               	movlb	0	; () banked
 29918  003C40  6FCC               	movwf	_I2cComSts& (0+255),b
 29919                           
 29920                           ;i2c_slv.c: 139: }
 29921  003C42  0012               	return	
 29922  003C44                     l1369:
 29923                           
 29924                           ;i2c_slv.c: 140: else
 29925                           ;i2c_slv.c: 141: {
 29926                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 29927                           
 29928                           ; BSR set to: 0
 29929  003C44  0E00               	movlw	0
 29930  003C46  0100               	movlb	0	; () banked
 29931  003C48  6FCC               	movwf	_I2cComSts& (0+255),b
 29932                           
 29933                           ; BSR set to: 0
 29934                           ;i2c_slv.c: 144: }
 29935                           ;i2c_slv.c: 145: break;
 29936                           
 29937                           ; BSR set to: 0
 29938  003C4A  0012               	return	
 29939  003C4C                     
 29940                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 29941                           
 29942                           ; BSR set to: 0
 29943  003C4C  0E9D               	movlw	low _I2cTxPacket
 29944  003C4E  0100               	movlb	0	; () banked
 29945  003C50  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 29946  003C52  0E03               	movlw	high _I2cTxPacket
 29947  003C54  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 29948  003C56  EC99  F00E         	call	_I2c_WriteData	;wreg free
 29949  003C5A  0900               	iorlw	0
 29950  003C5C  B4D8               	btfsc	status,2,c
 29951  003C5E  0012               	return	
 29952                           
 29953                           ;i2c_slv.c: 150: {
 29954                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 29955  003C60  0E03               	movlw	3
 29956  003C62  0101               	movlb	1	; () banked
 29957  003C64  6FEB               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29958                           
 29959                           ; BSR set to: 1
 29960                           ;i2c_slv.c: 153: }
 29961                           ;i2c_slv.c: 154: break;
 29962  003C66  0012               	return	
 29963  003C68                     
 29964                           ; BSR set to: 1
 29965                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 29966                           
 29967                           ; BSR set to: 1
 29968  003C68  0E97               	movlw	low _I2cRxPacket
 29969  003C6A  0100               	movlb	0	; () banked
 29970  003C6C  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 29971  003C6E  0E03               	movlw	high _I2cRxPacket
 29972  003C70  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 29973  003C72  EC50  F00F         	call	_I2c_ReadData	;wreg free
 29974  003C76  0900               	iorlw	0
 29975  003C78  B4D8               	btfsc	status,2,c
 29976  003C7A  0012               	return	
 29977                           
 29978                           ;i2c_slv.c: 159: {
 29979                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 29980  003C7C  0E04               	movlw	4
 29981  003C7E  0101               	movlb	1	; () banked
 29982  003C80  6FEB               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29983                           
 29984                           ; BSR set to: 1
 29985                           ;i2c_slv.c: 162: }
 29986                           ;i2c_slv.c: 164: break;
 29987  003C82  0012               	return	
 29988  003C84                     
 29989                           ; BSR set to: 1
 29990                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 29991                           
 29992                           ; BSR set to: 1
 29993  003C84  0E00               	movlw	0
 29994  003C86  6FEB               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29995                           
 29996                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 29997  003C88  0E00               	movlw	0
 29998  003C8A  0100               	movlb	0	; () banked
 29999  003C8C  6FCC               	movwf	_I2cComSts& (0+255),b
 30000                           
 30001                           ;i2c_slv.c: 171: break;
 30002  003C8E  0012               	return	
 30003  003C90                     
 30004                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 30005                           
 30006                           ; BSR set to: 0
 30007  003C90  0E00               	movlw	0
 30008  003C92  0101               	movlb	1	; () banked
 30009  003C94  6FEB               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30010                           
 30011                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 30012  003C96  0E00               	movlw	0
 30013  003C98  0100               	movlb	0	; () banked
 30014  003C9A  6FCC               	movwf	_I2cComSts& (0+255),b
 30015                           
 30016                           ; BSR set to: 0
 30017                           ;i2c_slv.c: 182: }
 30018                           
 30019                           ; BSR set to: 0
 30020                           ;i2c_slv.c: 181: break;
 30021                           
 30022                           ;i2c_slv.c: 180: default:
 30023                           
 30024                           ;i2c_slv.c: 178: break;
 30025  003C9C  0012               	return	
 30026  003C9E                     l1365:
 30027                           
 30028                           ; BSR set to: 0
 30029  003C9E  0101               	movlb	1	; () banked
 30030  003CA0  51EB               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 30031                           
 30032                           ; Switch size 1, requested type "space"
 30033                           ; Number of cases is 5, Range of values is 0 to 4
 30034                           ; switch strategies available:
 30035                           ; Name         Instructions Cycles
 30036                           ; simple_byte           16     9 (average)
 30037                           ;	Chosen strategy is simple_byte
 30038  003CA2  0A00               	xorlw	0	; case 0
 30039  003CA4  B4D8               	btfsc	status,2,c
 30040  003CA6  D7AC               	goto	l1366
 30041  003CA8  0A01               	xorlw	1	; case 1
 30042  003CAA  B4D8               	btfsc	status,2,c
 30043  003CAC  D7CF               	goto	l1372
 30044  003CAE  0A03               	xorlw	3	; case 2
 30045  003CB0  B4D8               	btfsc	status,2,c
 30046  003CB2  D7DA               	goto	l1374
 30047  003CB4  0A01               	xorlw	1	; case 3
 30048  003CB6  B4D8               	btfsc	status,2,c
 30049  003CB8  D7E5               	goto	l1376
 30050  003CBA  0A07               	xorlw	7	; case 4
 30051  003CBC  A4D8               	btfss	status,2,c
 30052  003CBE  0012               	return	
 30053  003CC0  D7E7               	goto	l1377
 30054  003CC2                     __end_of_I2cSendMsgSm:
 30055                           	opt stack 0
 30056                           tosu	equ	0xFFF
 30057                           tosh	equ	0xFFE
 30058                           tosl	equ	0xFFD
 30059                           pclath	equ	0xFFA
 30060                           tblptru	equ	0xFF8
 30061                           tblptrh	equ	0xFF7
 30062                           tblptrl	equ	0xFF6
 30063                           tablat	equ	0xFF5
 30064                           prodh	equ	0xFF4
 30065                           prodl	equ	0xFF3
 30066                           intcon	equ	0xFF2
 30067                           intcon2	equ	0xFF1
 30068                           intcon3	equ	0xFF0
 30069                           indf0	equ	0xFEF
 30070                           postinc0	equ	0xFEE
 30071                           plusw0	equ	0xFEB
 30072                           fsr0h	equ	0xFEA
 30073                           fsr0l	equ	0xFE9
 30074                           wreg	equ	0xFE8
 30075                           indf1	equ	0xFE7
 30076                           postinc1	equ	0xFE6
 30077                           postdec1	equ	0xFE5
 30078                           plusw1	equ	0xFE3
 30079                           fsr1h	equ	0xFE2
 30080                           fsr1l	equ	0xFE1
 30081                           indf2	equ	0xFDF
 30082                           postinc2	equ	0xFDE
 30083                           postdec2	equ	0xFDD
 30084                           plusw2	equ	0xFDB
 30085                           fsr2h	equ	0xFDA
 30086                           fsr2l	equ	0xFD9
 30087                           status	equ	0xFD8
 30088                           
 30089 ;; *************** function _ReceiveEvt *****************
 30090 ;; Defined at:
 30091 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 30092 ;; Parameters:    Size  Location     Type
 30093 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 30094 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 30095 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 30096 ;;		 -> RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), 
 30097 ;;		 -> NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), ActivateRiDetection(1), 
 30098 ;; Auto vars:     Size  Location     Type
 30099 ;;  EventStatus     1   32[BANK0 ] enum E7727
 30100 ;; Return value:  Size  Location     Type
 30101 ;;                  1    wreg      enum E7699
 30102 ;; Registers used:
 30103 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30104 ;; Tracked objects:
 30105 ;;		On entry : 0/0
 30106 ;;		On exit  : 0/0
 30107 ;;		Unchanged: 0/0
 30108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30111 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30112 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30113 ;;Total ram usage:        4 bytes
 30114 ;; Hardware stack levels used:    1
 30115 ;; Hardware stack levels required when called:   11
 30116 ;; This function calls:
 30117 ;;		Nothing
 30118 ;; This function is called by:
 30119 ;;		_MdmCntSm
 30120 ;;		_CheckModem
 30121 ;;		_ModemEvtParser
 30122 ;;		_GetSmsSm
 30123 ;;		_SendSmsSm
 30124 ;;		_Mdm_IsRinging
 30125 ;;		_InitGprsNetwork
 30126 ;;		_HttpGetMethod
 30127 ;;		_I2cSendMsgSm
 30128 ;;		_I2cSlv_I2cReadMsgSts
 30129 ;;		_RiSm
 30130 ;;		_Mdm_GetSmsData
 30131 ;;		_Mdm_IsSmsReceived
 30132 ;;		_GsmGprsTerminal
 30133 ;; This function uses a non-reentrant model
 30134 ;;
 30135                           
 30136                           	psect	text139
 30137  005A68                     __ptext139:
 30138                           	opt stack 0
 30139  005A68                     _ReceiveEvt:
 30140                           	opt stack 13
 30141                           
 30142                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 30143                           
 30144                           ;incstack = 0
 30145  005A68  0E00               	movlw	0
 30146  005A6A  0100               	movlb	0	; () banked
 30147  005A6C  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 30148                           
 30149                           ; BSR set to: 0
 30150                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 30151  005A6E  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 30152  005A72  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 30153  005A76  0E02               	movlw	2
 30154  005A78  18DE               	xorwf	postinc2,w,c
 30155  005A7A  A4D8               	btfss	status,2,c
 30156  005A7C  D008               	goto	l832
 30157                           
 30158                           ; BSR set to: 0
 30159                           ;os_ser.c: 106: {
 30160                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 30161  005A7E  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 30162  005A82  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 30163  005A86  0E01               	movlw	1
 30164  005A88  6EDF               	movwf	indf2,c
 30165                           
 30166                           ; BSR set to: 0
 30167                           ;os_ser.c: 110: EventStatus = EventReceived;
 30168  005A8A  0E01               	movlw	1
 30169  005A8C  D001               	goto	L46
 30170  005A8E                     l832:
 30171                           
 30172                           ; BSR set to: 0
 30173                           ;os_ser.c: 112: else
 30174                           ;os_ser.c: 113: {
 30175                           ;os_ser.c: 115: EventStatus = EventIdle;
 30176                           
 30177                           ; BSR set to: 0
 30178  005A8E  0E00               	movlw	0
 30179  005A90                     L46:
 30180  005A90  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 30181                           
 30182                           ; BSR set to: 0
 30183                           ;os_ser.c: 116: }
 30184                           ;os_ser.c: 119: return(EventStatus);
 30185  005A92  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 30186  005A94  0012               	return	
 30187  005A96                     __end_of_ReceiveEvt:
 30188                           	opt stack 0
 30189                           tosu	equ	0xFFF
 30190                           tosh	equ	0xFFE
 30191                           tosl	equ	0xFFD
 30192                           pclath	equ	0xFFA
 30193                           tblptru	equ	0xFF8
 30194                           tblptrh	equ	0xFF7
 30195                           tblptrl	equ	0xFF6
 30196                           tablat	equ	0xFF5
 30197                           prodh	equ	0xFF4
 30198                           prodl	equ	0xFF3
 30199                           intcon	equ	0xFF2
 30200                           intcon2	equ	0xFF1
 30201                           intcon3	equ	0xFF0
 30202                           indf0	equ	0xFEF
 30203                           postinc0	equ	0xFEE
 30204                           plusw0	equ	0xFEB
 30205                           fsr0h	equ	0xFEA
 30206                           fsr0l	equ	0xFE9
 30207                           wreg	equ	0xFE8
 30208                           indf1	equ	0xFE7
 30209                           postinc1	equ	0xFE6
 30210                           postdec1	equ	0xFE5
 30211                           plusw1	equ	0xFE3
 30212                           fsr1h	equ	0xFE2
 30213                           fsr1l	equ	0xFE1
 30214                           indf2	equ	0xFDF
 30215                           postinc2	equ	0xFDE
 30216                           postdec2	equ	0xFDD
 30217                           plusw2	equ	0xFDB
 30218                           fsr2h	equ	0xFDA
 30219                           fsr2l	equ	0xFD9
 30220                           status	equ	0xFD8
 30221                           
 30222 ;; *************** function _I2c_WriteData *****************
 30223 ;; Defined at:
 30224 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30225 ;; Parameters:    Size  Location     Type
 30226 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 30227 ;;		 -> I2cTxPacket(5), 
 30228 ;; Auto vars:     Size  Location     Type
 30229 ;;		None
 30230 ;; Return value:  Size  Location     Type
 30231 ;;                  1    wreg      enum E7740
 30232 ;; Registers used:
 30233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30234 ;; Tracked objects:
 30235 ;;		On entry : 0/0
 30236 ;;		On exit  : 0/0
 30237 ;;		Unchanged: 0/0
 30238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30239 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30241 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30242 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30243 ;;Total ram usage:        4 bytes
 30244 ;; Hardware stack levels used:    1
 30245 ;; Hardware stack levels required when called:   12
 30246 ;; This function calls:
 30247 ;;		_CheckAckStatus
 30248 ;;		_CheckTxStatus
 30249 ;;		_StartCondition
 30250 ;;		_StopCondition
 30251 ;;		_WriteByte
 30252 ;; This function is called by:
 30253 ;;		_I2cSendMsgSm
 30254 ;; This function uses a non-reentrant model
 30255 ;;
 30256                           
 30257                           	psect	text140
 30258  001D32                     __ptext140:
 30259                           	opt stack 0
 30260  001D32                     _I2c_WriteData:
 30261                           	opt stack 14
 30262                           
 30263                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 30264                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 30265                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 30266                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 30267                           ;i2c_drv.c: 260: switch (I2cWriteState)
 30268                           
 30269                           ; BSR set to: 0
 30270                           ;incstack = 0
 30271  001D32  D095               	goto	l160
 30272  001D34                     
 30273                           ;i2c_drv.c: 264: StartCondition();
 30274  001D34  EC93  F02F         	call	_StartCondition	;wreg free
 30275                           
 30276                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 30277  001D38  0E00               	movlw	0
 30278  001D3A  6E35               	movwf	I2c_WriteData@WriteStatus,c
 30279                           
 30280                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 30281  001D3C  0E01               	movlw	1
 30282  001D3E  D084               	goto	L53
 30283  001D40                     
 30284                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 30285  001D40  0100               	movlb	0	; () banked
 30286  001D42  EE20 F001          	lfsr	2,1
 30287  001D46  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30288  001D48  26D9               	addwf	fsr2l,f,c
 30289  001D4A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30290  001D4C  22DA               	addwfc	fsr2h,f,c
 30291  001D4E  50DF               	movf	indf2,w,c
 30292  001D50  6F80               	movwf	??_I2c_WriteData& (0+255),b
 30293  001D52  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 30294  001D56  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 30295  001D5A  50DF               	movf	indf2,w,c
 30296  001D5C  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 30297  001D5E  90D8               	bcf	status,0,c
 30298  001D60  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 30299  001D62  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 30300  001D64  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 30301  001D68  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 30302  001D6C  6EDF               	movwf	indf2,c
 30303                           
 30304                           ; BSR set to: 0
 30305                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 30306  001D6E  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 30307  001D72  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 30308  001D76  50DF               	movf	indf2,w,c
 30309  001D78  EC71  F02F         	call	_WriteByte
 30310                           
 30311                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 30312  001D7C  0E02               	movlw	2
 30313  001D7E  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30314  001D80                     
 30315                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 30316  001D80  EC7B  F02F         	call	_CheckTxStatus	;wreg free
 30317  001D84  0900               	iorlw	0
 30318  001D86  A4D8               	btfss	status,2,c
 30319  001D88  D089               	goto	l162
 30320                           
 30321                           ;i2c_drv.c: 282: {
 30322                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 30323  001D8A  0E03               	movlw	3
 30324  001D8C  D01A               	goto	L55
 30325  001D8E                     
 30326                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 30327  001D8E  0100               	movlb	0	; () banked
 30328  001D90  EE20 F002          	lfsr	2,2
 30329  001D94  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30330  001D96  26D9               	addwf	fsr2l,f,c
 30331  001D98  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30332  001D9A  22DA               	addwfc	fsr2h,f,c
 30333  001D9C  CFDE F080          	movff	postinc2,??_I2c_WriteData
 30334  001DA0  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 30335  001DA4  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 30336  001DA8  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 30337  001DAC  50DF               	movf	indf2,w,c
 30338  001DAE  EC71  F02F         	call	_WriteByte
 30339                           
 30340                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 30341  001DB2  0E04               	movlw	4
 30342  001DB4  D049               	goto	L53
 30343  001DB6                     
 30344                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 30345  001DB6  EC7B  F02F         	call	_CheckTxStatus	;wreg free
 30346  001DBA  0900               	iorlw	0
 30347  001DBC  A4D8               	btfss	status,2,c
 30348  001DBE  D06E               	goto	l162
 30349                           
 30350                           ;i2c_drv.c: 300: {
 30351                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 30352  001DC0  0E05               	movlw	5
 30353  001DC2                     L55:
 30354  001DC2  6E37               	movwf	I2c_WriteData@I2cNextState,c
 30355                           
 30356                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 30357  001DC4  0E08               	movlw	8
 30358  001DC6  D040               	goto	L53
 30359  001DC8                     
 30360                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 30361  001DC8  0100               	movlb	0	; () banked
 30362  001DCA  EE20 F004          	lfsr	2,4
 30363  001DCE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30364  001DD0  26D9               	addwf	fsr2l,f,c
 30365  001DD2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30366  001DD4  22DA               	addwfc	fsr2h,f,c
 30367  001DD6  50DF               	movf	indf2,w,c
 30368  001DD8  B4D8               	btfsc	status,2,c
 30369  001DDA  D010               	goto	l170
 30370                           
 30371                           ; BSR set to: 0
 30372                           ;i2c_drv.c: 310: {
 30373                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 30374  001DDC  EE20 F004          	lfsr	2,4
 30375  001DE0  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30376  001DE2  26D9               	addwf	fsr2l,f,c
 30377  001DE4  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30378  001DE6  22DA               	addwfc	fsr2h,f,c
 30379  001DE8  06DF               	decf	indf2,f,c
 30380                           
 30381                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 30382  001DEA  EE20 F002          	lfsr	2,2
 30383  001DEE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30384  001DF0  26D9               	addwf	fsr2l,f,c
 30385  001DF2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30386  001DF4  22DA               	addwfc	fsr2h,f,c
 30387  001DF6  2ADE               	incf	postinc2,f,c
 30388  001DF8  0E00               	movlw	0
 30389  001DFA  22DD               	addwfc	postdec2,f,c
 30390  001DFC                     l170:
 30391                           
 30392                           ; BSR set to: 0
 30393                           ;i2c_drv.c: 315: }
 30394                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 30395  001DFC  EE20 F004          	lfsr	2,4
 30396  001E00  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30397  001E02  26D9               	addwf	fsr2l,f,c
 30398  001E04  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30399  001E06  22DA               	addwfc	fsr2h,f,c
 30400  001E08  50DF               	movf	indf2,w,c
 30401  001E0A  A4D8               	btfss	status,2,c
 30402  001E0C  D002               	goto	l171
 30403                           
 30404                           ; BSR set to: 0
 30405                           ;i2c_drv.c: 319: {
 30406                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 30407  001E0E  0E06               	movlw	6
 30408  001E10  D01B               	goto	L53
 30409  001E12                     l171:
 30410                           
 30411                           ; BSR set to: 0
 30412                           ;i2c_drv.c: 323: else
 30413                           ;i2c_drv.c: 324: {
 30414                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 30415                           
 30416                           ; BSR set to: 0
 30417  001E12  0E03               	movlw	3
 30418  001E14  D019               	goto	L53
 30419  001E16                     
 30420                           ;i2c_drv.c: 332: StopCondition();
 30421                           
 30422                           ; BSR set to: 0
 30423  001E16  EC91  F02F         	call	_StopCondition	;wreg free
 30424                           
 30425                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 30426  001E1A  0E07               	movlw	7
 30427  001E1C  D015               	goto	L53
 30428  001E1E                     
 30429                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 30430  001E1E  0E00               	movlw	0
 30431  001E20  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30432                           
 30433                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 30434  001E22  0E00               	movlw	0
 30435  001E24  6E37               	movwf	I2c_WriteData@I2cNextState,c
 30436                           
 30437                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 30438  001E26  0E02               	movlw	2
 30439  001E28  D018               	goto	L54
 30440  001E2A                     
 30441                           ;i2c_drv.c: 347: TentativeCounter++;
 30442  001E2A  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 30443                           
 30444                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 30445  001E2C  EC80  F02F         	call	_CheckAckStatus	;wreg free
 30446  001E30  0900               	iorlw	0
 30447  001E32  A4D8               	btfss	status,2,c
 30448  001E34  D005               	goto	l176
 30449                           
 30450                           ;i2c_drv.c: 350: {
 30451                           ;i2c_drv.c: 352: TentativeCounter = 0;
 30452  001E36  0E00               	movlw	0
 30453  001E38  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 30454                           
 30455                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 30456  001E3A  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 30457                           
 30458                           ;i2c_drv.c: 355: }
 30459  001E3E  D02E               	goto	l162
 30460  001E40                     l176:
 30461                           
 30462                           ;i2c_drv.c: 356: else
 30463                           ;i2c_drv.c: 357: {
 30464                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 30465  001E40  0E02               	movlw	2
 30466  001E42  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 30467  001E44  D02B               	goto	l162
 30468                           
 30469                           ;i2c_drv.c: 360: {
 30470                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 30471  001E46  0E09               	movlw	9
 30472  001E48                     L53:
 30473  001E48  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30474                           
 30475                           ;i2c_drv.c: 363: }
 30476                           ;i2c_drv.c: 364: }
 30477                           ;i2c_drv.c: 365: break;
 30478  001E4A  D028               	goto	l162
 30479  001E4C                     
 30480                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 30481  001E4C  0E00               	movlw	0
 30482  001E4E  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30483                           
 30484                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 30485  001E50  0E00               	movlw	0
 30486  001E52  6E37               	movwf	I2c_WriteData@I2cNextState,c
 30487                           
 30488                           ;i2c_drv.c: 372: TentativeCounter = 0;
 30489  001E54  0E00               	movlw	0
 30490  001E56  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 30491                           
 30492                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 30493  001E58  0E01               	movlw	1
 30494  001E5A                     L54:
 30495  001E5A  6E35               	movwf	I2c_WriteData@WriteStatus,c
 30496                           
 30497                           ;i2c_drv.c: 379: }
 30498                           
 30499                           ;i2c_drv.c: 378: break;
 30500                           
 30501                           ;i2c_drv.c: 377: default:
 30502                           
 30503                           ;i2c_drv.c: 375: break;
 30504  001E5C  D01F               	goto	l162
 30505  001E5E                     l160:
 30506  001E5E  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 30507                           
 30508                           ; Switch size 1, requested type "space"
 30509                           ; Number of cases is 10, Range of values is 0 to 9
 30510                           ; switch strategies available:
 30511                           ; Name         Instructions Cycles
 30512                           ; simple_byte           31    16 (average)
 30513                           ;	Chosen strategy is simple_byte
 30514  001E60  0A00               	xorlw	0	; case 0
 30515  001E62  B4D8               	btfsc	status,2,c
 30516  001E64  D767               	goto	l161
 30517  001E66  0A01               	xorlw	1	; case 1
 30518  001E68  B4D8               	btfsc	status,2,c
 30519  001E6A  D76A               	goto	l163
 30520  001E6C  0A03               	xorlw	3	; case 2
 30521  001E6E  B4D8               	btfsc	status,2,c
 30522  001E70  D787               	goto	l164
 30523  001E72  0A01               	xorlw	1	; case 3
 30524  001E74  B4D8               	btfsc	status,2,c
 30525  001E76  D78B               	goto	l166
 30526  001E78  0A07               	xorlw	7	; case 4
 30527  001E7A  B4D8               	btfsc	status,2,c
 30528  001E7C  D79C               	goto	l167
 30529  001E7E  0A01               	xorlw	1	; case 5
 30530  001E80  B4D8               	btfsc	status,2,c
 30531  001E82  D7A2               	goto	l169
 30532  001E84  0A03               	xorlw	3	; case 6
 30533  001E86  B4D8               	btfsc	status,2,c
 30534  001E88  D7C6               	goto	l173
 30535  001E8A  0A01               	xorlw	1	; case 7
 30536  001E8C  B4D8               	btfsc	status,2,c
 30537  001E8E  D7C7               	goto	l174
 30538  001E90  0A0F               	xorlw	15	; case 8
 30539  001E92  B4D8               	btfsc	status,2,c
 30540  001E94  D7CA               	goto	l175
 30541  001E96  0A01               	xorlw	1	; case 9
 30542  001E98  B4D8               	btfsc	status,2,c
 30543  001E9A  D7D8               	goto	l179
 30544  001E9C                     l162:
 30545                           
 30546                           ;i2c_drv.c: 382: return WriteStatus;
 30547  001E9C  5035               	movf	I2c_WriteData@WriteStatus,w,c
 30548  001E9E  0012               	return	
 30549  001EA0                     __end_of_I2c_WriteData:
 30550                           	opt stack 0
 30551                           tosu	equ	0xFFF
 30552                           tosh	equ	0xFFE
 30553                           tosl	equ	0xFFD
 30554                           pclath	equ	0xFFA
 30555                           tblptru	equ	0xFF8
 30556                           tblptrh	equ	0xFF7
 30557                           tblptrl	equ	0xFF6
 30558                           tablat	equ	0xFF5
 30559                           prodh	equ	0xFF4
 30560                           prodl	equ	0xFF3
 30561                           intcon	equ	0xFF2
 30562                           intcon2	equ	0xFF1
 30563                           intcon3	equ	0xFF0
 30564                           indf0	equ	0xFEF
 30565                           postinc0	equ	0xFEE
 30566                           plusw0	equ	0xFEB
 30567                           fsr0h	equ	0xFEA
 30568                           fsr0l	equ	0xFE9
 30569                           wreg	equ	0xFE8
 30570                           indf1	equ	0xFE7
 30571                           postinc1	equ	0xFE6
 30572                           postdec1	equ	0xFE5
 30573                           plusw1	equ	0xFE3
 30574                           fsr1h	equ	0xFE2
 30575                           fsr1l	equ	0xFE1
 30576                           indf2	equ	0xFDF
 30577                           postinc2	equ	0xFDE
 30578                           postdec2	equ	0xFDD
 30579                           plusw2	equ	0xFDB
 30580                           fsr2h	equ	0xFDA
 30581                           fsr2l	equ	0xFD9
 30582                           status	equ	0xFD8
 30583                           
 30584 ;; *************** function _I2c_ReadData *****************
 30585 ;; Defined at:
 30586 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30587 ;; Parameters:    Size  Location     Type
 30588 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 30589 ;;		 -> I2cRxPacket(6), 
 30590 ;; Auto vars:     Size  Location     Type
 30591 ;;		None
 30592 ;; Return value:  Size  Location     Type
 30593 ;;                  1    wreg      enum E7787
 30594 ;; Registers used:
 30595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30596 ;; Tracked objects:
 30597 ;;		On entry : 0/0
 30598 ;;		On exit  : 0/0
 30599 ;;		Unchanged: 0/0
 30600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30603 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30604 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30605 ;;Total ram usage:        4 bytes
 30606 ;; Hardware stack levels used:    1
 30607 ;; Hardware stack levels required when called:   12
 30608 ;; This function calls:
 30609 ;;		_CheckAckStatus
 30610 ;;		_CheckTxStatus
 30611 ;;		_EnableReceiver
 30612 ;;		_GenerateEvt
 30613 ;;		_ReadByte
 30614 ;;		_SetAckStatus
 30615 ;;		_StartCondition
 30616 ;;		_StopCondition
 30617 ;;		_WriteByte
 30618 ;; This function is called by:
 30619 ;;		_I2cSendMsgSm
 30620 ;; This function uses a non-reentrant model
 30621 ;;
 30622                           
 30623                           	psect	text141
 30624  001EA0                     __ptext141:
 30625                           	opt stack 0
 30626  001EA0                     _I2c_ReadData:
 30627                           	opt stack 14
 30628                           
 30629                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 30630                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 30631                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 30632                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 30633                           ;i2c_drv.c: 402: switch (I2cReadState)
 30634                           
 30635                           ;incstack = 0
 30636  001EA0  D090               	goto	l192
 30637  001EA2                     
 30638                           ;i2c_drv.c: 406: StartCondition();
 30639  001EA2  EC93  F02F         	call	_StartCondition	;wreg free
 30640                           
 30641                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 30642  001EA6  0E00               	movlw	0
 30643  001EA8  6E31               	movwf	I2c_ReadData@ReadStatus,c
 30644                           
 30645                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 30646  001EAA  0E01               	movlw	1
 30647  001EAC  D083               	goto	L63
 30648  001EAE                     
 30649                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 30650  001EAE  0100               	movlb	0	; () banked
 30651  001EB0  EE20 F001          	lfsr	2,1
 30652  001EB4  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 30653  001EB6  26D9               	addwf	fsr2l,f,c
 30654  001EB8  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 30655  001EBA  22DA               	addwfc	fsr2h,f,c
 30656  001EBC  50DF               	movf	indf2,w,c
 30657  001EBE  6F82               	movwf	??_I2c_ReadData& (0+255),b
 30658  001EC0  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 30659  001EC4  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 30660  001EC8  50DF               	movf	indf2,w,c
 30661  001ECA  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 30662  001ECC  90D8               	bcf	status,0,c
 30663  001ECE  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 30664  001ED0  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 30665  001ED2  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 30666  001ED6  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 30667  001EDA  6EDF               	movwf	indf2,c
 30668                           
 30669                           ; BSR set to: 0
 30670                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 30671  001EDC  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 30672  001EE0  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 30673  001EE4  50DF               	movf	indf2,w,c
 30674  001EE6  EC71  F02F         	call	_WriteByte
 30675                           
 30676                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 30677  001EEA  0E02               	movlw	2
 30678  001EEC  D063               	goto	L63
 30679  001EEE                     
 30680                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 30681  001EEE  EC7B  F02F         	call	_CheckTxStatus	;wreg free
 30682  001EF2  0900               	iorlw	0
 30683  001EF4  A4D8               	btfss	status,2,c
 30684  001EF6  D081               	goto	l194
 30685                           
 30686                           ;i2c_drv.c: 425: {
 30687                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 30688  001EF8  0E03               	movlw	3
 30689  001EFA  D05C               	goto	L63
 30690  001EFC                     
 30691                           ;i2c_drv.c: 433: TentativeCounter++;
 30692  001EFC  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 30693                           
 30694                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 30695  001EFE  EC80  F02F         	call	_CheckAckStatus	;wreg free
 30696  001F02  0900               	iorlw	0
 30697  001F04  A4D8               	btfss	status,2,c
 30698  001F06  D004               	goto	l199
 30699                           
 30700                           ;i2c_drv.c: 436: {
 30701                           ;i2c_drv.c: 438: TentativeCounter = 0;
 30702  001F08  0E00               	movlw	0
 30703  001F0A  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 30704  001F0C                     
 30705                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 30706  001F0C  0E04               	movlw	4
 30707  001F0E  D052               	goto	L63
 30708  001F10                     l199:
 30709                           
 30710                           ;i2c_drv.c: 442: else
 30711                           ;i2c_drv.c: 443: {
 30712                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 30713  001F10  0E02               	movlw	2
 30714  001F12  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 30715  001F14  D072               	goto	l194
 30716                           
 30717                           ;i2c_drv.c: 446: {
 30718                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 30719  001F16  0E08               	movlw	8
 30720  001F18  D04D               	goto	L63
 30721  001F1A                     
 30722                           ;i2c_drv.c: 455: EnableReceiver();
 30723  001F1A  EC95  F02F         	call	_EnableReceiver	;wreg free
 30724                           
 30725                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 30726  001F1E  0E05               	movlw	5
 30727  001F20  D049               	goto	L63
 30728  001F22                     
 30729                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 30730  001F22  EC7B  F02F         	call	_CheckTxStatus	;wreg free
 30731  001F26  0900               	iorlw	0
 30732  001F28  A4D8               	btfss	status,2,c
 30733  001F2A  D067               	goto	l194
 30734                           
 30735                           ;i2c_drv.c: 463: {
 30736                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 30737  001F2C  0100               	movlb	0	; () banked
 30738  001F2E  EE20 F002          	lfsr	2,2
 30739  001F32  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 30740  001F34  26D9               	addwf	fsr2l,f,c
 30741  001F36  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 30742  001F38  22DA               	addwfc	fsr2h,f,c
 30743  001F3A  CFDE F082          	movff	postinc2,??_I2c_ReadData
 30744  001F3E  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 30745  001F42  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 30746  001F46  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 30747  001F4A  EC76  F02F         	call	_ReadByte	;wreg free
 30748  001F4E  6EDF               	movwf	indf2,c
 30749                           
 30750                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 30751  001F50  0100               	movlb	0	; () banked
 30752  001F52  EE20 F002          	lfsr	2,2
 30753  001F56  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 30754  001F58  26D9               	addwf	fsr2l,f,c
 30755  001F5A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 30756  001F5C  22DA               	addwfc	fsr2h,f,c
 30757  001F5E  2ADE               	incf	postinc2,f,c
 30758  001F60  0E00               	movlw	0
 30759  001F62  22DD               	addwfc	postdec2,f,c
 30760                           
 30761                           ; BSR set to: 0
 30762                           ;i2c_drv.c: 469: DataCounter++;
 30763  001F64  2A33               	incf	I2c_ReadData@DataCounter,f,c
 30764                           
 30765                           ; BSR set to: 0
 30766                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 30767  001F66  0E06               	movlw	6
 30768  001F68  D025               	goto	L63
 30769  001F6A                     
 30770                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 30771                           
 30772                           ; BSR set to: 0
 30773  001F6A  0100               	movlb	0	; () banked
 30774  001F6C  EE20 F004          	lfsr	2,4
 30775  001F70  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 30776  001F72  26D9               	addwf	fsr2l,f,c
 30777  001F74  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 30778  001F76  22DA               	addwfc	fsr2h,f,c
 30779  001F78  50DE               	movf	postinc2,w,c
 30780  001F7A  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 30781  001F7C  A0D8               	btfss	status,0,c
 30782  001F7E  D008               	goto	l206
 30783                           
 30784                           ; BSR set to: 0
 30785                           ;i2c_drv.c: 478: {
 30786                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 30787  001F80  0E01               	movlw	1
 30788  001F82  EC1C  F02F         	call	_SetAckStatus
 30789                           
 30790                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 30791  001F86  0E07               	movlw	7
 30792  001F88  6E34               	movwf	I2c_ReadData@I2cReadState,c
 30793                           
 30794                           ;i2c_drv.c: 484: DataCounter = 0;
 30795  001F8A  0E00               	movlw	0
 30796  001F8C  6E33               	movwf	I2c_ReadData@DataCounter,c
 30797                           
 30798                           ;i2c_drv.c: 485: }
 30799  001F8E  D035               	goto	l194
 30800  001F90                     l206:
 30801                           
 30802                           ;i2c_drv.c: 486: else
 30803                           ;i2c_drv.c: 487: {
 30804                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 30805  001F90  0E00               	movlw	0
 30806  001F92  EC1C  F02F         	call	_SetAckStatus
 30807  001F96  D7BA               	goto	L64
 30808  001F98                     
 30809                           ;i2c_drv.c: 497: StopCondition();
 30810  001F98  EC91  F02F         	call	_StopCondition	;wreg free
 30811                           
 30812                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 30813  001F9C  0E02               	movlw	2
 30814  001F9E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 30815                           
 30816                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 30817  001FA0  0E05               	movlw	5
 30818  001FA2  0100               	movlb	0	; () banked
 30819  001FA4  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 30820  001FA6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 30821  001FA8  0E00               	movlw	0
 30822  001FAA  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 30823  001FAC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 30824  001FAE  ECDA  F02E         	call	_GenerateEvt	;wreg free
 30825                           
 30826                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 30827  001FB2  0E00               	movlw	0
 30828  001FB4                     L63:
 30829  001FB4  6E34               	movwf	I2c_ReadData@I2cReadState,c
 30830                           
 30831                           ;i2c_drv.c: 504: break;
 30832  001FB6  D021               	goto	l194
 30833  001FB8                     
 30834                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 30835  001FB8  0E00               	movlw	0
 30836  001FBA  6E34               	movwf	I2c_ReadData@I2cReadState,c
 30837                           
 30838                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 30839  001FBC  0E01               	movlw	1
 30840  001FBE  6E31               	movwf	I2c_ReadData@ReadStatus,c
 30841                           
 30842                           ;i2c_drv.c: 515: }
 30843                           
 30844                           ;i2c_drv.c: 514: break;
 30845                           
 30846                           ;i2c_drv.c: 513: default:
 30847                           
 30848                           ;i2c_drv.c: 511: break;
 30849  001FC0  D01C               	goto	l194
 30850  001FC2                     l192:
 30851  001FC2  5034               	movf	I2c_ReadData@I2cReadState,w,c
 30852                           
 30853                           ; Switch size 1, requested type "space"
 30854                           ; Number of cases is 9, Range of values is 0 to 8
 30855                           ; switch strategies available:
 30856                           ; Name         Instructions Cycles
 30857                           ; simple_byte           28    15 (average)
 30858                           ;	Chosen strategy is simple_byte
 30859  001FC4  0A00               	xorlw	0	; case 0
 30860  001FC6  B4D8               	btfsc	status,2,c
 30861  001FC8  D76C               	goto	l193
 30862  001FCA  0A01               	xorlw	1	; case 1
 30863  001FCC  B4D8               	btfsc	status,2,c
 30864  001FCE  D76F               	goto	l195
 30865  001FD0  0A03               	xorlw	3	; case 2
 30866  001FD2  B4D8               	btfsc	status,2,c
 30867  001FD4  D78C               	goto	l196
 30868  001FD6  0A01               	xorlw	1	; case 3
 30869  001FD8  B4D8               	btfsc	status,2,c
 30870  001FDA  D790               	goto	l198
 30871  001FDC  0A07               	xorlw	7	; case 4
 30872  001FDE  B4D8               	btfsc	status,2,c
 30873  001FE0  D79C               	goto	l202
 30874  001FE2  0A01               	xorlw	1	; case 5
 30875  001FE4  B4D8               	btfsc	status,2,c
 30876  001FE6  D79D               	goto	l203
 30877  001FE8  0A03               	xorlw	3	; case 6
 30878  001FEA  B4D8               	btfsc	status,2,c
 30879  001FEC  D7BE               	goto	l205
 30880  001FEE  0A01               	xorlw	1	; case 7
 30881  001FF0  B4D8               	btfsc	status,2,c
 30882  001FF2  D7D2               	goto	l208
 30883  001FF4  0A0F               	xorlw	15	; case 8
 30884  001FF6  B4D8               	btfsc	status,2,c
 30885  001FF8  D7DF               	goto	l209
 30886  001FFA                     l194:
 30887                           
 30888                           ;i2c_drv.c: 518: return ReadStatus;
 30889  001FFA  5031               	movf	I2c_ReadData@ReadStatus,w,c
 30890  001FFC  0012               	return	
 30891  001FFE                     __end_of_I2c_ReadData:
 30892                           	opt stack 0
 30893                           tosu	equ	0xFFF
 30894                           tosh	equ	0xFFE
 30895                           tosl	equ	0xFFD
 30896                           pclath	equ	0xFFA
 30897                           tblptru	equ	0xFF8
 30898                           tblptrh	equ	0xFF7
 30899                           tblptrl	equ	0xFF6
 30900                           tablat	equ	0xFF5
 30901                           prodh	equ	0xFF4
 30902                           prodl	equ	0xFF3
 30903                           intcon	equ	0xFF2
 30904                           intcon2	equ	0xFF1
 30905                           intcon3	equ	0xFF0
 30906                           indf0	equ	0xFEF
 30907                           postinc0	equ	0xFEE
 30908                           plusw0	equ	0xFEB
 30909                           fsr0h	equ	0xFEA
 30910                           fsr0l	equ	0xFE9
 30911                           wreg	equ	0xFE8
 30912                           indf1	equ	0xFE7
 30913                           postinc1	equ	0xFE6
 30914                           postdec1	equ	0xFE5
 30915                           plusw1	equ	0xFE3
 30916                           fsr1h	equ	0xFE2
 30917                           fsr1l	equ	0xFE1
 30918                           indf2	equ	0xFDF
 30919                           postinc2	equ	0xFDE
 30920                           postdec2	equ	0xFDD
 30921                           plusw2	equ	0xFDB
 30922                           fsr2h	equ	0xFDA
 30923                           fsr2l	equ	0xFD9
 30924                           status	equ	0xFD8
 30925                           
 30926 ;; *************** function _WriteByte *****************
 30927 ;; Defined at:
 30928 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30929 ;; Parameters:    Size  Location     Type
 30930 ;;  Byte            1    wreg     unsigned char 
 30931 ;; Auto vars:     Size  Location     Type
 30932 ;;  Byte            1   29[BANK0 ] unsigned char 
 30933 ;; Return value:  Size  Location     Type
 30934 ;;                  1    wreg      void 
 30935 ;; Registers used:
 30936 ;;		wreg
 30937 ;; Tracked objects:
 30938 ;;		On entry : 0/0
 30939 ;;		On exit  : 0/0
 30940 ;;		Unchanged: 0/0
 30941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30943 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30945 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30946 ;;Total ram usage:        1 bytes
 30947 ;; Hardware stack levels used:    1
 30948 ;; Hardware stack levels required when called:   11
 30949 ;; This function calls:
 30950 ;;		Nothing
 30951 ;; This function is called by:
 30952 ;;		_I2c_WriteData
 30953 ;;		_I2c_ReadData
 30954 ;; This function uses a non-reentrant model
 30955 ;;
 30956                           
 30957                           	psect	text142
 30958  005EE2                     __ptext142:
 30959                           	opt stack 0
 30960  005EE2                     _WriteByte:
 30961                           	opt stack 14
 30962                           
 30963                           ;incstack = 0
 30964                           ;WriteByte@Byte stored from wreg
 30965  005EE2  0100               	movlb	0	; () banked
 30966  005EE4  6F7D               	movwf	WriteByte@Byte& (0+255),b
 30967                           
 30968                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 30969  005EE6  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 30970  005EEA  0012               	return		;funcret
 30971  005EEC                     __end_of_WriteByte:
 30972                           	opt stack 0
 30973                           tosu	equ	0xFFF
 30974                           tosh	equ	0xFFE
 30975                           tosl	equ	0xFFD
 30976                           pclath	equ	0xFFA
 30977                           tblptru	equ	0xFF8
 30978                           tblptrh	equ	0xFF7
 30979                           tblptrl	equ	0xFF6
 30980                           tablat	equ	0xFF5
 30981                           prodh	equ	0xFF4
 30982                           prodl	equ	0xFF3
 30983                           intcon	equ	0xFF2
 30984                           intcon2	equ	0xFF1
 30985                           intcon3	equ	0xFF0
 30986                           indf0	equ	0xFEF
 30987                           postinc0	equ	0xFEE
 30988                           plusw0	equ	0xFEB
 30989                           fsr0h	equ	0xFEA
 30990                           fsr0l	equ	0xFE9
 30991                           wreg	equ	0xFE8
 30992                           indf1	equ	0xFE7
 30993                           postinc1	equ	0xFE6
 30994                           postdec1	equ	0xFE5
 30995                           plusw1	equ	0xFE3
 30996                           fsr1h	equ	0xFE2
 30997                           fsr1l	equ	0xFE1
 30998                           indf2	equ	0xFDF
 30999                           postinc2	equ	0xFDE
 31000                           postdec2	equ	0xFDD
 31001                           plusw2	equ	0xFDB
 31002                           fsr2h	equ	0xFDA
 31003                           fsr2l	equ	0xFD9
 31004                           status	equ	0xFD8
 31005                           
 31006 ;; *************** function _StopCondition *****************
 31007 ;; Defined at:
 31008 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31009 ;; Parameters:    Size  Location     Type
 31010 ;;		None
 31011 ;; Auto vars:     Size  Location     Type
 31012 ;;		None
 31013 ;; Return value:  Size  Location     Type
 31014 ;;                  1    wreg      void 
 31015 ;; Registers used:
 31016 ;;		status,2, status,0
 31017 ;; Tracked objects:
 31018 ;;		On entry : 0/0
 31019 ;;		On exit  : 0/0
 31020 ;;		Unchanged: 0/0
 31021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31026 ;;Total ram usage:        0 bytes
 31027 ;; Hardware stack levels used:    1
 31028 ;; Hardware stack levels required when called:   11
 31029 ;; This function calls:
 31030 ;;		Nothing
 31031 ;; This function is called by:
 31032 ;;		_I2c_WriteData
 31033 ;;		_I2c_ReadData
 31034 ;; This function uses a non-reentrant model
 31035 ;;
 31036                           
 31037                           	psect	text143
 31038  005F22                     __ptext143:
 31039                           	opt stack 0
 31040  005F22                     _StopCondition:
 31041                           	opt stack 14
 31042                           
 31043                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 31044                           
 31045                           ;incstack = 0
 31046  005F22  8471               	bsf	3953,2,c	;volatile
 31047  005F24  0012               	return		;funcret
 31048  005F26                     __end_of_StopCondition:
 31049                           	opt stack 0
 31050                           tosu	equ	0xFFF
 31051                           tosh	equ	0xFFE
 31052                           tosl	equ	0xFFD
 31053                           pclath	equ	0xFFA
 31054                           tblptru	equ	0xFF8
 31055                           tblptrh	equ	0xFF7
 31056                           tblptrl	equ	0xFF6
 31057                           tablat	equ	0xFF5
 31058                           prodh	equ	0xFF4
 31059                           prodl	equ	0xFF3
 31060                           intcon	equ	0xFF2
 31061                           intcon2	equ	0xFF1
 31062                           intcon3	equ	0xFF0
 31063                           indf0	equ	0xFEF
 31064                           postinc0	equ	0xFEE
 31065                           plusw0	equ	0xFEB
 31066                           fsr0h	equ	0xFEA
 31067                           fsr0l	equ	0xFE9
 31068                           wreg	equ	0xFE8
 31069                           indf1	equ	0xFE7
 31070                           postinc1	equ	0xFE6
 31071                           postdec1	equ	0xFE5
 31072                           plusw1	equ	0xFE3
 31073                           fsr1h	equ	0xFE2
 31074                           fsr1l	equ	0xFE1
 31075                           indf2	equ	0xFDF
 31076                           postinc2	equ	0xFDE
 31077                           postdec2	equ	0xFDD
 31078                           plusw2	equ	0xFDB
 31079                           fsr2h	equ	0xFDA
 31080                           fsr2l	equ	0xFD9
 31081                           status	equ	0xFD8
 31082                           
 31083 ;; *************** function _StartCondition *****************
 31084 ;; Defined at:
 31085 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31086 ;; Parameters:    Size  Location     Type
 31087 ;;		None
 31088 ;; Auto vars:     Size  Location     Type
 31089 ;;		None
 31090 ;; Return value:  Size  Location     Type
 31091 ;;                  1    wreg      void 
 31092 ;; Registers used:
 31093 ;;		status,2, status,0
 31094 ;; Tracked objects:
 31095 ;;		On entry : 0/0
 31096 ;;		On exit  : 0/0
 31097 ;;		Unchanged: 0/0
 31098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31103 ;;Total ram usage:        0 bytes
 31104 ;; Hardware stack levels used:    1
 31105 ;; Hardware stack levels required when called:   11
 31106 ;; This function calls:
 31107 ;;		Nothing
 31108 ;; This function is called by:
 31109 ;;		_I2c_WriteData
 31110 ;;		_I2c_ReadData
 31111 ;; This function uses a non-reentrant model
 31112 ;;
 31113                           
 31114                           	psect	text144
 31115  005F26                     __ptext144:
 31116                           	opt stack 0
 31117  005F26                     _StartCondition:
 31118                           	opt stack 14
 31119                           
 31120                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 31121                           
 31122                           ;incstack = 0
 31123  005F26  8071               	bsf	3953,0,c	;volatile
 31124  005F28  0012               	return		;funcret
 31125  005F2A                     __end_of_StartCondition:
 31126                           	opt stack 0
 31127                           tosu	equ	0xFFF
 31128                           tosh	equ	0xFFE
 31129                           tosl	equ	0xFFD
 31130                           pclath	equ	0xFFA
 31131                           tblptru	equ	0xFF8
 31132                           tblptrh	equ	0xFF7
 31133                           tblptrl	equ	0xFF6
 31134                           tablat	equ	0xFF5
 31135                           prodh	equ	0xFF4
 31136                           prodl	equ	0xFF3
 31137                           intcon	equ	0xFF2
 31138                           intcon2	equ	0xFF1
 31139                           intcon3	equ	0xFF0
 31140                           indf0	equ	0xFEF
 31141                           postinc0	equ	0xFEE
 31142                           plusw0	equ	0xFEB
 31143                           fsr0h	equ	0xFEA
 31144                           fsr0l	equ	0xFE9
 31145                           wreg	equ	0xFE8
 31146                           indf1	equ	0xFE7
 31147                           postinc1	equ	0xFE6
 31148                           postdec1	equ	0xFE5
 31149                           plusw1	equ	0xFE3
 31150                           fsr1h	equ	0xFE2
 31151                           fsr1l	equ	0xFE1
 31152                           indf2	equ	0xFDF
 31153                           postinc2	equ	0xFDE
 31154                           postdec2	equ	0xFDD
 31155                           plusw2	equ	0xFDB
 31156                           fsr2h	equ	0xFDA
 31157                           fsr2l	equ	0xFD9
 31158                           status	equ	0xFD8
 31159                           
 31160 ;; *************** function _SetAckStatus *****************
 31161 ;; Defined at:
 31162 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31163 ;; Parameters:    Size  Location     Type
 31164 ;;  AckSts          1    wreg     unsigned char 
 31165 ;; Auto vars:     Size  Location     Type
 31166 ;;  AckSts          1   29[BANK0 ] unsigned char 
 31167 ;; Return value:  Size  Location     Type
 31168 ;;                  1    wreg      void 
 31169 ;; Registers used:
 31170 ;;		wreg
 31171 ;; Tracked objects:
 31172 ;;		On entry : 0/0
 31173 ;;		On exit  : 0/0
 31174 ;;		Unchanged: 0/0
 31175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31177 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31179 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31180 ;;Total ram usage:        1 bytes
 31181 ;; Hardware stack levels used:    1
 31182 ;; Hardware stack levels required when called:   11
 31183 ;; This function calls:
 31184 ;;		Nothing
 31185 ;; This function is called by:
 31186 ;;		_I2c_ReadData
 31187 ;; This function uses a non-reentrant model
 31188 ;;
 31189                           
 31190                           	psect	text145
 31191  005E38                     __ptext145:
 31192                           	opt stack 0
 31193  005E38                     _SetAckStatus:
 31194                           	opt stack 14
 31195                           
 31196                           ;incstack = 0
 31197                           ;SetAckStatus@AckSts stored from wreg
 31198  005E38  0100               	movlb	0	; () banked
 31199  005E3A  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 31200                           
 31201                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 31202  005E3C  0100               	movlb	0	; () banked
 31203  005E3E  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 31204  005E40  D002               	bra	u6095
 31205  005E42  9A71               	bcf	3953,5,c	;volatile
 31206  005E44  D001               	bra	u6096
 31207  005E46                     u6095:
 31208  005E46  8A71               	bsf	3953,5,c	;volatile
 31209  005E48                     u6096:
 31210                           
 31211                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 31212  005E48  8871               	bsf	3953,4,c	;volatile
 31213  005E4A  0012               	return		;funcret
 31214  005E4C                     __end_of_SetAckStatus:
 31215                           	opt stack 0
 31216                           tosu	equ	0xFFF
 31217                           tosh	equ	0xFFE
 31218                           tosl	equ	0xFFD
 31219                           pclath	equ	0xFFA
 31220                           tblptru	equ	0xFF8
 31221                           tblptrh	equ	0xFF7
 31222                           tblptrl	equ	0xFF6
 31223                           tablat	equ	0xFF5
 31224                           prodh	equ	0xFF4
 31225                           prodl	equ	0xFF3
 31226                           intcon	equ	0xFF2
 31227                           intcon2	equ	0xFF1
 31228                           intcon3	equ	0xFF0
 31229                           indf0	equ	0xFEF
 31230                           postinc0	equ	0xFEE
 31231                           plusw0	equ	0xFEB
 31232                           fsr0h	equ	0xFEA
 31233                           fsr0l	equ	0xFE9
 31234                           wreg	equ	0xFE8
 31235                           indf1	equ	0xFE7
 31236                           postinc1	equ	0xFE6
 31237                           postdec1	equ	0xFE5
 31238                           plusw1	equ	0xFE3
 31239                           fsr1h	equ	0xFE2
 31240                           fsr1l	equ	0xFE1
 31241                           indf2	equ	0xFDF
 31242                           postinc2	equ	0xFDE
 31243                           postdec2	equ	0xFDD
 31244                           plusw2	equ	0xFDB
 31245                           fsr2h	equ	0xFDA
 31246                           fsr2l	equ	0xFD9
 31247                           status	equ	0xFD8
 31248                           
 31249 ;; *************** function _ReadByte *****************
 31250 ;; Defined at:
 31251 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31252 ;; Parameters:    Size  Location     Type
 31253 ;;		None
 31254 ;; Auto vars:     Size  Location     Type
 31255 ;;  Byte            1   29[BANK0 ] unsigned char 
 31256 ;; Return value:  Size  Location     Type
 31257 ;;                  1    wreg      unsigned char 
 31258 ;; Registers used:
 31259 ;;		wreg, status,2
 31260 ;; Tracked objects:
 31261 ;;		On entry : 0/0
 31262 ;;		On exit  : 0/0
 31263 ;;		Unchanged: 0/0
 31264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31266 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31268 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31269 ;;Total ram usage:        1 bytes
 31270 ;; Hardware stack levels used:    1
 31271 ;; Hardware stack levels required when called:   11
 31272 ;; This function calls:
 31273 ;;		Nothing
 31274 ;; This function is called by:
 31275 ;;		_I2c_ReadData
 31276 ;; This function uses a non-reentrant model
 31277 ;;
 31278                           
 31279                           	psect	text146
 31280  005EEC                     __ptext146:
 31281                           	opt stack 0
 31282  005EEC                     _ReadByte:
 31283                           	opt stack 14
 31284                           
 31285                           ;i2c_drv.c: 207: UINT8 Byte;
 31286                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 31287                           
 31288                           ;incstack = 0
 31289  005EEC  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 31290                           
 31291                           ;i2c_drv.c: 213: return Byte;
 31292  005EF0  0100               	movlb	0	; () banked
 31293  005EF2  517D               	movf	ReadByte@Byte& (0+255),w,b
 31294  005EF4  0012               	return	
 31295  005EF6                     __end_of_ReadByte:
 31296                           	opt stack 0
 31297                           tosu	equ	0xFFF
 31298                           tosh	equ	0xFFE
 31299                           tosl	equ	0xFFD
 31300                           pclath	equ	0xFFA
 31301                           tblptru	equ	0xFF8
 31302                           tblptrh	equ	0xFF7
 31303                           tblptrl	equ	0xFF6
 31304                           tablat	equ	0xFF5
 31305                           prodh	equ	0xFF4
 31306                           prodl	equ	0xFF3
 31307                           intcon	equ	0xFF2
 31308                           intcon2	equ	0xFF1
 31309                           intcon3	equ	0xFF0
 31310                           indf0	equ	0xFEF
 31311                           postinc0	equ	0xFEE
 31312                           plusw0	equ	0xFEB
 31313                           fsr0h	equ	0xFEA
 31314                           fsr0l	equ	0xFE9
 31315                           wreg	equ	0xFE8
 31316                           indf1	equ	0xFE7
 31317                           postinc1	equ	0xFE6
 31318                           postdec1	equ	0xFE5
 31319                           plusw1	equ	0xFE3
 31320                           fsr1h	equ	0xFE2
 31321                           fsr1l	equ	0xFE1
 31322                           indf2	equ	0xFDF
 31323                           postinc2	equ	0xFDE
 31324                           postdec2	equ	0xFDD
 31325                           plusw2	equ	0xFDB
 31326                           fsr2h	equ	0xFDA
 31327                           fsr2l	equ	0xFD9
 31328                           status	equ	0xFD8
 31329                           
 31330 ;; *************** function _GenerateEvt *****************
 31331 ;; Defined at:
 31332 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 31333 ;; Parameters:    Size  Location     Type
 31334 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 31335 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 31336 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 31337 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 31338 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 31339 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 31340 ;; Auto vars:     Size  Location     Type
 31341 ;;  EventStatus     1   31[BANK0 ] enum E7727
 31342 ;; Return value:  Size  Location     Type
 31343 ;;                  1    wreg      enum E7699
 31344 ;; Registers used:
 31345 ;;		wreg, fsr2l, fsr2h, status,2
 31346 ;; Tracked objects:
 31347 ;;		On entry : 0/0
 31348 ;;		On exit  : 0/0
 31349 ;;		Unchanged: 0/0
 31350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31351 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31352 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31354 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31355 ;;Total ram usage:        3 bytes
 31356 ;; Hardware stack levels used:    1
 31357 ;; Hardware stack levels required when called:   11
 31358 ;; This function calls:
 31359 ;;		Nothing
 31360 ;; This function is called by:
 31361 ;;		_I2c_ReadData
 31362 ;;		_CheckModem
 31363 ;;		_TurnOnModem
 31364 ;;		_ConfigureModem
 31365 ;;		_ModemEvtParser
 31366 ;;		_GetSmsSm
 31367 ;;		_I2cSlv_SendI2cMsg
 31368 ;;		_I2cSlv_ReceiveI2cMsg
 31369 ;;		_RiSm
 31370 ;;		_Mdm_RequestSmsData
 31371 ;;		_Mdm_SendSmsData
 31372 ;;		_MdmHttp_InitGprsNetwork
 31373 ;;		_MdmHttp_GetMethod
 31374 ;;		_Alarm
 31375 ;; This function uses a non-reentrant model
 31376 ;;
 31377                           
 31378                           	psect	text147
 31379  005DB4                     __ptext147:
 31380                           	opt stack 0
 31381  005DB4                     _GenerateEvt:
 31382                           	opt stack 13
 31383                           
 31384                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 31385                           
 31386                           ; BSR set to: 0
 31387                           ;incstack = 0
 31388  005DB4  0E00               	movlw	0
 31389  005DB6  0100               	movlb	0	; () banked
 31390  005DB8  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 31391                           
 31392                           ; BSR set to: 0
 31393                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 31394  005DBA  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 31395  005DBE  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 31396  005DC2  0E02               	movlw	2
 31397  005DC4  6EDF               	movwf	indf2,c
 31398                           
 31399                           ; BSR set to: 0
 31400                           ;os_ser.c: 83: EventStatus = EventSent;
 31401  005DC6  0E02               	movlw	2
 31402  005DC8  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 31403  005DCA  0012               	return	
 31404  005DCC                     __end_of_GenerateEvt:
 31405                           	opt stack 0
 31406                           tosu	equ	0xFFF
 31407                           tosh	equ	0xFFE
 31408                           tosl	equ	0xFFD
 31409                           pclath	equ	0xFFA
 31410                           tblptru	equ	0xFF8
 31411                           tblptrh	equ	0xFF7
 31412                           tblptrl	equ	0xFF6
 31413                           tablat	equ	0xFF5
 31414                           prodh	equ	0xFF4
 31415                           prodl	equ	0xFF3
 31416                           intcon	equ	0xFF2
 31417                           intcon2	equ	0xFF1
 31418                           intcon3	equ	0xFF0
 31419                           indf0	equ	0xFEF
 31420                           postinc0	equ	0xFEE
 31421                           plusw0	equ	0xFEB
 31422                           fsr0h	equ	0xFEA
 31423                           fsr0l	equ	0xFE9
 31424                           wreg	equ	0xFE8
 31425                           indf1	equ	0xFE7
 31426                           postinc1	equ	0xFE6
 31427                           postdec1	equ	0xFE5
 31428                           plusw1	equ	0xFE3
 31429                           fsr1h	equ	0xFE2
 31430                           fsr1l	equ	0xFE1
 31431                           indf2	equ	0xFDF
 31432                           postinc2	equ	0xFDE
 31433                           postdec2	equ	0xFDD
 31434                           plusw2	equ	0xFDB
 31435                           fsr2h	equ	0xFDA
 31436                           fsr2l	equ	0xFD9
 31437                           status	equ	0xFD8
 31438                           
 31439 ;; *************** function _EnableReceiver *****************
 31440 ;; Defined at:
 31441 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31442 ;; Parameters:    Size  Location     Type
 31443 ;;		None
 31444 ;; Auto vars:     Size  Location     Type
 31445 ;;		None
 31446 ;; Return value:  Size  Location     Type
 31447 ;;                  1    wreg      void 
 31448 ;; Registers used:
 31449 ;;		status,2, status,0
 31450 ;; Tracked objects:
 31451 ;;		On entry : 0/0
 31452 ;;		On exit  : 0/0
 31453 ;;		Unchanged: 0/0
 31454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31459 ;;Total ram usage:        0 bytes
 31460 ;; Hardware stack levels used:    1
 31461 ;; Hardware stack levels required when called:   11
 31462 ;; This function calls:
 31463 ;;		Nothing
 31464 ;; This function is called by:
 31465 ;;		_I2c_ReadData
 31466 ;; This function uses a non-reentrant model
 31467 ;;
 31468                           
 31469                           	psect	text148
 31470  005F2A                     __ptext148:
 31471                           	opt stack 0
 31472  005F2A                     _EnableReceiver:
 31473                           	opt stack 14
 31474                           
 31475                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 31476                           
 31477                           ; BSR set to: 0
 31478                           ;incstack = 0
 31479  005F2A  8671               	bsf	3953,3,c	;volatile
 31480  005F2C  0012               	return		;funcret
 31481  005F2E                     __end_of_EnableReceiver:
 31482                           	opt stack 0
 31483                           tosu	equ	0xFFF
 31484                           tosh	equ	0xFFE
 31485                           tosl	equ	0xFFD
 31486                           pclath	equ	0xFFA
 31487                           tblptru	equ	0xFF8
 31488                           tblptrh	equ	0xFF7
 31489                           tblptrl	equ	0xFF6
 31490                           tablat	equ	0xFF5
 31491                           prodh	equ	0xFF4
 31492                           prodl	equ	0xFF3
 31493                           intcon	equ	0xFF2
 31494                           intcon2	equ	0xFF1
 31495                           intcon3	equ	0xFF0
 31496                           indf0	equ	0xFEF
 31497                           postinc0	equ	0xFEE
 31498                           plusw0	equ	0xFEB
 31499                           fsr0h	equ	0xFEA
 31500                           fsr0l	equ	0xFE9
 31501                           wreg	equ	0xFE8
 31502                           indf1	equ	0xFE7
 31503                           postinc1	equ	0xFE6
 31504                           postdec1	equ	0xFE5
 31505                           plusw1	equ	0xFE3
 31506                           fsr1h	equ	0xFE2
 31507                           fsr1l	equ	0xFE1
 31508                           indf2	equ	0xFDF
 31509                           postinc2	equ	0xFDE
 31510                           postdec2	equ	0xFDD
 31511                           plusw2	equ	0xFDB
 31512                           fsr2h	equ	0xFDA
 31513                           fsr2l	equ	0xFD9
 31514                           status	equ	0xFD8
 31515                           
 31516 ;; *************** function _CheckTxStatus *****************
 31517 ;; Defined at:
 31518 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31519 ;; Parameters:    Size  Location     Type
 31520 ;;		None
 31521 ;; Auto vars:     Size  Location     Type
 31522 ;;		None
 31523 ;; Return value:  Size  Location     Type
 31524 ;;                  1    wreg      unsigned char 
 31525 ;; Registers used:
 31526 ;;		wreg, status,2, status,0
 31527 ;; Tracked objects:
 31528 ;;		On entry : 0/0
 31529 ;;		On exit  : 0/0
 31530 ;;		Unchanged: 0/0
 31531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31536 ;;Total ram usage:        0 bytes
 31537 ;; Hardware stack levels used:    1
 31538 ;; Hardware stack levels required when called:   11
 31539 ;; This function calls:
 31540 ;;		Nothing
 31541 ;; This function is called by:
 31542 ;;		_I2c_WriteData
 31543 ;;		_I2c_ReadData
 31544 ;; This function uses a non-reentrant model
 31545 ;;
 31546                           
 31547                           	psect	text149
 31548  005EF6                     __ptext149:
 31549                           	opt stack 0
 31550  005EF6                     _CheckTxStatus:
 31551                           	opt stack 14
 31552                           
 31553                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 31554                           
 31555                           ;incstack = 0
 31556  005EF6  4073               	rrncf	3955,w,c	;volatile
 31557  005EF8  42E8               	rrncf	wreg,f,c
 31558  005EFA  0B3F               	andlw	63
 31559  005EFC  0B01               	andlw	1
 31560  005EFE  0012               	return	
 31561  005F00                     __end_of_CheckTxStatus:
 31562                           	opt stack 0
 31563                           tosu	equ	0xFFF
 31564                           tosh	equ	0xFFE
 31565                           tosl	equ	0xFFD
 31566                           pclath	equ	0xFFA
 31567                           tblptru	equ	0xFF8
 31568                           tblptrh	equ	0xFF7
 31569                           tblptrl	equ	0xFF6
 31570                           tablat	equ	0xFF5
 31571                           prodh	equ	0xFF4
 31572                           prodl	equ	0xFF3
 31573                           intcon	equ	0xFF2
 31574                           intcon2	equ	0xFF1
 31575                           intcon3	equ	0xFF0
 31576                           indf0	equ	0xFEF
 31577                           postinc0	equ	0xFEE
 31578                           plusw0	equ	0xFEB
 31579                           fsr0h	equ	0xFEA
 31580                           fsr0l	equ	0xFE9
 31581                           wreg	equ	0xFE8
 31582                           indf1	equ	0xFE7
 31583                           postinc1	equ	0xFE6
 31584                           postdec1	equ	0xFE5
 31585                           plusw1	equ	0xFE3
 31586                           fsr1h	equ	0xFE2
 31587                           fsr1l	equ	0xFE1
 31588                           indf2	equ	0xFDF
 31589                           postinc2	equ	0xFDE
 31590                           postdec2	equ	0xFDD
 31591                           plusw2	equ	0xFDB
 31592                           fsr2h	equ	0xFDA
 31593                           fsr2l	equ	0xFD9
 31594                           status	equ	0xFD8
 31595                           
 31596 ;; *************** function _CheckAckStatus *****************
 31597 ;; Defined at:
 31598 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31599 ;; Parameters:    Size  Location     Type
 31600 ;;		None
 31601 ;; Auto vars:     Size  Location     Type
 31602 ;;		None
 31603 ;; Return value:  Size  Location     Type
 31604 ;;                  1    wreg      unsigned char 
 31605 ;; Registers used:
 31606 ;;		wreg, status,2, status,0
 31607 ;; Tracked objects:
 31608 ;;		On entry : 0/0
 31609 ;;		On exit  : 0/0
 31610 ;;		Unchanged: 0/0
 31611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31616 ;;Total ram usage:        0 bytes
 31617 ;; Hardware stack levels used:    1
 31618 ;; Hardware stack levels required when called:   11
 31619 ;; This function calls:
 31620 ;;		Nothing
 31621 ;; This function is called by:
 31622 ;;		_I2c_WriteData
 31623 ;;		_I2c_ReadData
 31624 ;; This function uses a non-reentrant model
 31625 ;;
 31626                           
 31627                           	psect	text150
 31628  005F00                     __ptext150:
 31629                           	opt stack 0
 31630  005F00                     _CheckAckStatus:
 31631                           	opt stack 14
 31632                           
 31633                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 31634                           
 31635                           ;incstack = 0
 31636  005F00  4471               	rlncf	3953,w,c	;volatile
 31637  005F02  46E8               	rlncf	wreg,f,c
 31638  005F04  0B03               	andlw	3
 31639  005F06  0B01               	andlw	1
 31640  005F08  0012               	return	
 31641  005F0A                     __end_of_CheckAckStatus:
 31642                           	opt stack 0
 31643                           tosu	equ	0xFFF
 31644                           tosh	equ	0xFFE
 31645                           tosl	equ	0xFFD
 31646                           pclath	equ	0xFFA
 31647                           tblptru	equ	0xFF8
 31648                           tblptrh	equ	0xFF7
 31649                           tblptrl	equ	0xFF6
 31650                           tablat	equ	0xFF5
 31651                           prodh	equ	0xFF4
 31652                           prodl	equ	0xFF3
 31653                           intcon	equ	0xFF2
 31654                           intcon2	equ	0xFF1
 31655                           intcon3	equ	0xFF0
 31656                           indf0	equ	0xFEF
 31657                           postinc0	equ	0xFEE
 31658                           plusw0	equ	0xFEB
 31659                           fsr0h	equ	0xFEA
 31660                           fsr0l	equ	0xFE9
 31661                           wreg	equ	0xFE8
 31662                           indf1	equ	0xFE7
 31663                           postinc1	equ	0xFE6
 31664                           postdec1	equ	0xFE5
 31665                           plusw1	equ	0xFE3
 31666                           fsr1h	equ	0xFE2
 31667                           fsr1l	equ	0xFE1
 31668                           indf2	equ	0xFDF
 31669                           postinc2	equ	0xFDE
 31670                           postdec2	equ	0xFDD
 31671                           plusw2	equ	0xFDB
 31672                           fsr2h	equ	0xFDA
 31673                           fsr2l	equ	0xFD9
 31674                           status	equ	0xFD8
 31675                           
 31676 ;; *************** function _LowPriorityIsr *****************
 31677 ;; Defined at:
 31678 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 31679 ;; Parameters:    Size  Location     Type
 31680 ;;		None
 31681 ;; Auto vars:     Size  Location     Type
 31682 ;;		None
 31683 ;; Return value:  Size  Location     Type
 31684 ;;                  1    wreg      void 
 31685 ;; Registers used:
 31686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31687 ;; Tracked objects:
 31688 ;;		On entry : 0/0
 31689 ;;		On exit  : 0/0
 31690 ;;		Unchanged: 0/0
 31691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31694 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31695 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31696 ;;Total ram usage:       21 bytes
 31697 ;; Hardware stack levels used:    1
 31698 ;; Hardware stack levels required when called:   10
 31699 ;; This function calls:
 31700 ;;		_Tmr_Tmr2Isr
 31701 ;; This function is called by:
 31702 ;;		Interrupt level 1
 31703 ;; This function uses a non-reentrant model
 31704 ;;
 31705                           
 31706                           	psect	intcodelo
 31707  000018                     __pintcodelo:
 31708                           	opt stack 0
 31709  000018                     _LowPriorityIsr:
 31710                           	opt stack 8
 31711                           
 31712                           ;incstack = 0
 31713  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 31714  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 31715  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 31716  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 31717  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 31718  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 31719  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 31720  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 31721  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 31722  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 31723  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 31724  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 31725  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 31726  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 31727  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 31728  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 31729  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 31730  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 31731  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 31732  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 31733  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 31734  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 31735                           
 31736                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 31737  00006E  B29E               	btfsc	3998,1,c	;volatile
 31738                           
 31739                           ;irq.c: 259: {
 31740                           ;irq.c: 261: Tmr_Tmr2Isr();
 31741  000070  ECD6  F02D         	call	_Tmr_Tmr2Isr	;wreg free
 31742  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 31743  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 31744  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 31745  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 31746  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 31747  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 31748  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 31749  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 31750  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 31751  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 31752  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 31753  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 31754  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 31755  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 31756  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 31757  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 31758  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 31759  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 31760  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 31761  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 31762  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 31763  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 31764  0000CA  0010               	retfie	
 31765  0000CC                     __end_of_LowPriorityIsr:
 31766                           	opt stack 0
 31767                           tosu	equ	0xFFF
 31768                           tosh	equ	0xFFE
 31769                           tosl	equ	0xFFD
 31770                           pclatu	equ	0xFFB
 31771                           pclath	equ	0xFFA
 31772                           tblptru	equ	0xFF8
 31773                           tblptrh	equ	0xFF7
 31774                           tblptrl	equ	0xFF6
 31775                           tablat	equ	0xFF5
 31776                           prodh	equ	0xFF4
 31777                           prodl	equ	0xFF3
 31778                           intcon	equ	0xFF2
 31779                           intcon2	equ	0xFF1
 31780                           intcon3	equ	0xFF0
 31781                           indf0	equ	0xFEF
 31782                           postinc0	equ	0xFEE
 31783                           plusw0	equ	0xFEB
 31784                           fsr0h	equ	0xFEA
 31785                           fsr0l	equ	0xFE9
 31786                           wreg	equ	0xFE8
 31787                           indf1	equ	0xFE7
 31788                           postinc1	equ	0xFE6
 31789                           postdec1	equ	0xFE5
 31790                           plusw1	equ	0xFE3
 31791                           fsr1h	equ	0xFE2
 31792                           fsr1l	equ	0xFE1
 31793                           bsr	equ	0xFE0
 31794                           indf2	equ	0xFDF
 31795                           postinc2	equ	0xFDE
 31796                           postdec2	equ	0xFDD
 31797                           plusw2	equ	0xFDB
 31798                           fsr2h	equ	0xFDA
 31799                           fsr2l	equ	0xFD9
 31800                           status	equ	0xFD8
 31801                           
 31802 ;; *************** function _Tmr_Tmr2Isr *****************
 31803 ;; Defined at:
 31804 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 31805 ;; Parameters:    Size  Location     Type
 31806 ;;		None
 31807 ;; Auto vars:     Size  Location     Type
 31808 ;;		None
 31809 ;; Return value:  Size  Location     Type
 31810 ;;                  1    wreg      void 
 31811 ;; Registers used:
 31812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31813 ;; Tracked objects:
 31814 ;;		On entry : 0/0
 31815 ;;		On exit  : 0/0
 31816 ;;		Unchanged: 0/0
 31817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31822 ;;Total ram usage:        0 bytes
 31823 ;; Hardware stack levels used:    1
 31824 ;; Hardware stack levels required when called:    9
 31825 ;; This function calls:
 31826 ;;		Absolute function
 31827 ;;		_Sch_SchmIntService
 31828 ;; This function is called by:
 31829 ;;		_LowPriorityIsr
 31830 ;; This function uses a non-reentrant model
 31831 ;;
 31832                           
 31833                           	psect	text152
 31834  005BAC                     __ptext152:
 31835                           	opt stack 0
 31836  005BAC                     _Tmr_Tmr2Isr:
 31837                           	opt stack 8
 31838                           
 31839                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 31840                           
 31841                           ;incstack = 0
 31842  005BAC  929E               	bcf	3998,1,c	;volatile
 31843                           
 31844                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 31845  005BAE  0101               	movlb	1	; () banked
 31846  005BB0  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 31847  005BB2  11D4               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 31848  005BB4  B4D8               	btfsc	status,2,c
 31849  005BB6  0012               	return	
 31850                           
 31851                           ; BSR set to: 1
 31852                           ;tmr_drv.c: 315: {
 31853                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 31854  005BB8  D801               	call	i1u1350_28
 31855  005BBA  0012               	return	
 31856  005BBC                     i1u1350_28:
 31857  005BBC  0005               	push	
 31858  005BBE  6EFA               	movwf	pclath,c
 31859  005BC0  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 31860  005BC2  6EFD               	movwf	tosl,c
 31861  005BC4  51D4               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 31862  005BC6  6EFE               	movwf	tosh,c
 31863  005BC8  50F8               	movf	tblptru,w,c
 31864  005BCA  6EFF               	movwf	tosu,c
 31865  005BCC  50FA               	movf	pclath,w,c
 31866  005BCE  0012               	return		;indir
 31867  005BD0                     __end_of_Tmr_Tmr2Isr:
 31868                           	opt stack 0
 31869                           tosu	equ	0xFFF
 31870                           tosh	equ	0xFFE
 31871                           tosl	equ	0xFFD
 31872                           pclatu	equ	0xFFB
 31873                           pclath	equ	0xFFA
 31874                           tblptru	equ	0xFF8
 31875                           tblptrh	equ	0xFF7
 31876                           tblptrl	equ	0xFF6
 31877                           tablat	equ	0xFF5
 31878                           prodh	equ	0xFF4
 31879                           prodl	equ	0xFF3
 31880                           intcon	equ	0xFF2
 31881                           intcon2	equ	0xFF1
 31882                           intcon3	equ	0xFF0
 31883                           indf0	equ	0xFEF
 31884                           postinc0	equ	0xFEE
 31885                           plusw0	equ	0xFEB
 31886                           fsr0h	equ	0xFEA
 31887                           fsr0l	equ	0xFE9
 31888                           wreg	equ	0xFE8
 31889                           indf1	equ	0xFE7
 31890                           postinc1	equ	0xFE6
 31891                           postdec1	equ	0xFE5
 31892                           plusw1	equ	0xFE3
 31893                           fsr1h	equ	0xFE2
 31894                           fsr1l	equ	0xFE1
 31895                           bsr	equ	0xFE0
 31896                           indf2	equ	0xFDF
 31897                           postinc2	equ	0xFDE
 31898                           postdec2	equ	0xFDD
 31899                           plusw2	equ	0xFDB
 31900                           fsr2h	equ	0xFDA
 31901                           fsr2l	equ	0xFD9
 31902                           status	equ	0xFD8
 31903                           
 31904 ;; *************** function _Sch_SchmIntService *****************
 31905 ;; Defined at:
 31906 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 31907 ;; Parameters:    Size  Location     Type
 31908 ;;		None
 31909 ;; Auto vars:     Size  Location     Type
 31910 ;;		None
 31911 ;; Return value:  Size  Location     Type
 31912 ;;                  1    wreg      void 
 31913 ;; Registers used:
 31914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31915 ;; Tracked objects:
 31916 ;;		On entry : 0/0
 31917 ;;		On exit  : 0/0
 31918 ;;		Unchanged: 0/0
 31919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31924 ;;Total ram usage:        0 bytes
 31925 ;; Hardware stack levels used:    1
 31926 ;; Hardware stack levels required when called:    8
 31927 ;; This function calls:
 31928 ;;		_OsAlrm_ProcessOsAlarms
 31929 ;;		_UpdateOsCounters
 31930 ;;		_UpdateSchFlag
 31931 ;; This function is called by:
 31932 ;;		_SystemInit
 31933 ;;		_Tmr_Tmr2Isr
 31934 ;; This function uses a non-reentrant model
 31935 ;;
 31936                           
 31937                           	psect	text153
 31938  005EB0                     __ptext153:
 31939                           	opt stack 0
 31940  005EB0                     _Sch_SchmIntService:
 31941                           	opt stack 8
 31942                           
 31943                           ;os_sched.c: 217: UpdateSchFlag();
 31944                           
 31945                           ;incstack = 0
 31946  005EB0  EC8C  F02E         	call	_UpdateSchFlag	;wreg free
 31947                           
 31948                           ;os_sched.c: 219: UpdateOsCounters();
 31949  005EB4  EC48  F02F         	call	_UpdateOsCounters	;wreg free
 31950                           
 31951                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 31952  005EB8  ECAA  F010         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 31953  005EBC  0012               	return		;funcret
 31954  005EBE                     __end_of_Sch_SchmIntService:
 31955                           	opt stack 0
 31956                           tosu	equ	0xFFF
 31957                           tosh	equ	0xFFE
 31958                           tosl	equ	0xFFD
 31959                           pclatu	equ	0xFFB
 31960                           pclath	equ	0xFFA
 31961                           tblptru	equ	0xFF8
 31962                           tblptrh	equ	0xFF7
 31963                           tblptrl	equ	0xFF6
 31964                           tablat	equ	0xFF5
 31965                           prodh	equ	0xFF4
 31966                           prodl	equ	0xFF3
 31967                           intcon	equ	0xFF2
 31968                           intcon2	equ	0xFF1
 31969                           intcon3	equ	0xFF0
 31970                           indf0	equ	0xFEF
 31971                           postinc0	equ	0xFEE
 31972                           plusw0	equ	0xFEB
 31973                           fsr0h	equ	0xFEA
 31974                           fsr0l	equ	0xFE9
 31975                           wreg	equ	0xFE8
 31976                           indf1	equ	0xFE7
 31977                           postinc1	equ	0xFE6
 31978                           postdec1	equ	0xFE5
 31979                           plusw1	equ	0xFE3
 31980                           fsr1h	equ	0xFE2
 31981                           fsr1l	equ	0xFE1
 31982                           bsr	equ	0xFE0
 31983                           indf2	equ	0xFDF
 31984                           postinc2	equ	0xFDE
 31985                           postdec2	equ	0xFDD
 31986                           plusw2	equ	0xFDB
 31987                           fsr2h	equ	0xFDA
 31988                           fsr2l	equ	0xFD9
 31989                           status	equ	0xFD8
 31990                           
 31991 ;; *************** function _UpdateSchFlag *****************
 31992 ;; Defined at:
 31993 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 31994 ;; Parameters:    Size  Location     Type
 31995 ;;		None
 31996 ;; Auto vars:     Size  Location     Type
 31997 ;;		None
 31998 ;; Return value:  Size  Location     Type
 31999 ;;                  1    wreg      void 
 32000 ;; Registers used:
 32001 ;;		wreg, status,2, status,0
 32002 ;; Tracked objects:
 32003 ;;		On entry : 0/0
 32004 ;;		On exit  : 0/0
 32005 ;;		Unchanged: 0/0
 32006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32011 ;;Total ram usage:        0 bytes
 32012 ;; Hardware stack levels used:    1
 32013 ;; Hardware stack levels required when called:    4
 32014 ;; This function calls:
 32015 ;;		Nothing
 32016 ;; This function is called by:
 32017 ;;		_Sch_SchmIntService
 32018 ;; This function uses a non-reentrant model
 32019 ;;
 32020                           
 32021                           	psect	text154
 32022  005D18                     __ptext154:
 32023                           	opt stack 0
 32024  005D18                     _UpdateSchFlag:
 32025                           	opt stack 11
 32026                           
 32027                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 32028                           ;os_sched.c: 138: InterruptCounter++;
 32029                           
 32030                           ;incstack = 0
 32031  005D18  0102               	movlb	2	; () banked
 32032  005D1A  4BDE               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 32033  005D1C  2BDF               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 32034                           
 32035                           ; BSR set to: 2
 32036                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 32037  005D1E  51DE               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 32038  005D20  11DF               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 32039  005D22  B4D8               	btfsc	status,2,c
 32040  005D24  0012               	return	
 32041                           
 32042                           ; BSR set to: 2
 32043                           ;os_sched.c: 141: {
 32044                           ;os_sched.c: 143: InterruptCounter = 0;
 32045  005D26  0E00               	movlw	0
 32046  005D28  6FDF               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 32047  005D2A  0E00               	movlw	0
 32048  005D2C  6FDE               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 32049                           
 32050                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 32051  005D2E  0E00               	movlw	0
 32052  005D30  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 32053  005D32  0012               	return	
 32054  005D34                     __end_of_UpdateSchFlag:
 32055                           	opt stack 0
 32056                           tosu	equ	0xFFF
 32057                           tosh	equ	0xFFE
 32058                           tosl	equ	0xFFD
 32059                           pclatu	equ	0xFFB
 32060                           pclath	equ	0xFFA
 32061                           tblptru	equ	0xFF8
 32062                           tblptrh	equ	0xFF7
 32063                           tblptrl	equ	0xFF6
 32064                           tablat	equ	0xFF5
 32065                           prodh	equ	0xFF4
 32066                           prodl	equ	0xFF3
 32067                           intcon	equ	0xFF2
 32068                           intcon2	equ	0xFF1
 32069                           intcon3	equ	0xFF0
 32070                           indf0	equ	0xFEF
 32071                           postinc0	equ	0xFEE
 32072                           plusw0	equ	0xFEB
 32073                           fsr0h	equ	0xFEA
 32074                           fsr0l	equ	0xFE9
 32075                           wreg	equ	0xFE8
 32076                           indf1	equ	0xFE7
 32077                           postinc1	equ	0xFE6
 32078                           postdec1	equ	0xFE5
 32079                           plusw1	equ	0xFE3
 32080                           fsr1h	equ	0xFE2
 32081                           fsr1l	equ	0xFE1
 32082                           bsr	equ	0xFE0
 32083                           indf2	equ	0xFDF
 32084                           postinc2	equ	0xFDE
 32085                           postdec2	equ	0xFDD
 32086                           plusw2	equ	0xFDB
 32087                           fsr2h	equ	0xFDA
 32088                           fsr2l	equ	0xFD9
 32089                           status	equ	0xFD8
 32090                           
 32091 ;; *************** function _UpdateOsCounters *****************
 32092 ;; Defined at:
 32093 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 32094 ;; Parameters:    Size  Location     Type
 32095 ;;		None
 32096 ;; Auto vars:     Size  Location     Type
 32097 ;;		None
 32098 ;; Return value:  Size  Location     Type
 32099 ;;                  1    wreg      void 
 32100 ;; Registers used:
 32101 ;;		wreg, status,2, status,0
 32102 ;; Tracked objects:
 32103 ;;		On entry : 0/0
 32104 ;;		On exit  : 0/0
 32105 ;;		Unchanged: 0/0
 32106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32111 ;;Total ram usage:        0 bytes
 32112 ;; Hardware stack levels used:    1
 32113 ;; Hardware stack levels required when called:    4
 32114 ;; This function calls:
 32115 ;;		Nothing
 32116 ;; This function is called by:
 32117 ;;		_Sch_SchmIntService
 32118 ;; This function uses a non-reentrant model
 32119 ;;
 32120                           
 32121                           	psect	text155
 32122  005E90                     __ptext155:
 32123                           	opt stack 0
 32124  005E90                     _UpdateOsCounters:
 32125                           	opt stack 11
 32126                           
 32127                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 32128                           
 32129                           ; BSR set to: 2
 32130                           ;incstack = 0
 32131  005E90  0E01               	movlw	1
 32132  005E92  0103               	movlb	3	; () banked
 32133  005E94  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 32134  005E96  0E00               	movlw	0
 32135  005E98  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 32136  005E9A  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 32137  005E9C  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 32138                           
 32139                           ; BSR set to: 3
 32140  005E9E  0012               	return		;funcret
 32141  005EA0                     __end_of_UpdateOsCounters:
 32142                           	opt stack 0
 32143                           tosu	equ	0xFFF
 32144                           tosh	equ	0xFFE
 32145                           tosl	equ	0xFFD
 32146                           pclatu	equ	0xFFB
 32147                           pclath	equ	0xFFA
 32148                           tblptru	equ	0xFF8
 32149                           tblptrh	equ	0xFF7
 32150                           tblptrl	equ	0xFF6
 32151                           tablat	equ	0xFF5
 32152                           prodh	equ	0xFF4
 32153                           prodl	equ	0xFF3
 32154                           intcon	equ	0xFF2
 32155                           intcon2	equ	0xFF1
 32156                           intcon3	equ	0xFF0
 32157                           indf0	equ	0xFEF
 32158                           postinc0	equ	0xFEE
 32159                           plusw0	equ	0xFEB
 32160                           fsr0h	equ	0xFEA
 32161                           fsr0l	equ	0xFE9
 32162                           wreg	equ	0xFE8
 32163                           indf1	equ	0xFE7
 32164                           postinc1	equ	0xFE6
 32165                           postdec1	equ	0xFE5
 32166                           plusw1	equ	0xFE3
 32167                           fsr1h	equ	0xFE2
 32168                           fsr1l	equ	0xFE1
 32169                           bsr	equ	0xFE0
 32170                           indf2	equ	0xFDF
 32171                           postinc2	equ	0xFDE
 32172                           postdec2	equ	0xFDD
 32173                           plusw2	equ	0xFDB
 32174                           fsr2h	equ	0xFDA
 32175                           fsr2l	equ	0xFD9
 32176                           status	equ	0xFD8
 32177                           
 32178 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 32179 ;; Defined at:
 32180 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 32181 ;; Parameters:    Size  Location     Type
 32182 ;;		None
 32183 ;; Auto vars:     Size  Location     Type
 32184 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 32185 ;; Return value:  Size  Location     Type
 32186 ;;                  1    wreg      void 
 32187 ;; Registers used:
 32188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32189 ;; Tracked objects:
 32190 ;;		On entry : 0/0
 32191 ;;		On exit  : 0/0
 32192 ;;		Unchanged: 0/0
 32193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32196 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32197 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32198 ;;Total ram usage:       10 bytes
 32199 ;; Hardware stack levels used:    1
 32200 ;; Hardware stack levels required when called:    7
 32201 ;; This function calls:
 32202 ;;		_I2cDummyTx
 32203 ;;		_OsAlrm_ClearOsAlarm
 32204 ;;		i1___wmul
 32205 ;; This function is called by:
 32206 ;;		_Sch_SchmIntService
 32207 ;; This function uses a non-reentrant model
 32208 ;;
 32209                           
 32210                           	psect	text156
 32211  002154                     __ptext156:
 32212                           	opt stack 0
 32213  002154                     _OsAlrm_ProcessOsAlarms:
 32214                           	opt stack 8
 32215                           
 32216                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 32217                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 32218                           
 32219                           ; BSR set to: 3
 32220                           ;incstack = 0
 32221  002154  0E00               	movlw	0
 32222  002156  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 32223  002158  0E00               	movlw	0
 32224  00215A  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 32225  00215C  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 32226  00215E  E105               	bnz	i1u1329_20
 32227  002160  0E14               	movlw	20
 32228  002162  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 32229  002164  B0D8               	btfsc	status,0,c
 32230  002166  0012               	return	
 32231  002168  D001               	goto	i1l742
 32232  00216A                     i1u1329_20:
 32233  00216A  0012               	return	
 32234  00216C                     i1l742:
 32235                           
 32236                           ;os_alarms.c: 121: {
 32237                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 32238  00216C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32239  002170  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32240  002174  0E00               	movlw	0
 32241  002176  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32242  002178  0E0B               	movlw	11
 32243  00217A  6E1B               	movwf	i1___wmul@multiplicand,c
 32244  00217C  EC9F  F02D         	call	i1___wmul	;wreg free
 32245  002180  0E00               	movlw	low _OsAlarms
 32246  002182  2419               	addwf	?i1___wmul,w,c
 32247  002184  6ED9               	movwf	fsr2l,c
 32248  002186  0E06               	movlw	high _OsAlarms
 32249  002188  201A               	addwfc	?i1___wmul+1,w,c
 32250  00218A  6EDA               	movwf	fsr2h,c
 32251  00218C  04DE               	decf	postinc2,w,c
 32252  00218E  A4D8               	btfss	status,2,c
 32253  002190  D086               	goto	i1u1333_29
 32254                           
 32255                           ;os_alarms.c: 124: {
 32256                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 32257  002192  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32258  002196  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32259  00219A  0E00               	movlw	0
 32260  00219C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32261  00219E  0E0B               	movlw	11
 32262  0021A0  6E1B               	movwf	i1___wmul@multiplicand,c
 32263  0021A2  EC9F  F02D         	call	i1___wmul	;wreg free
 32264  0021A6  0E01               	movlw	1
 32265  0021A8  2619               	addwf	?i1___wmul,f,c
 32266  0021AA  0E00               	movlw	0
 32267  0021AC  221A               	addwfc	?i1___wmul+1,f,c
 32268  0021AE  0E00               	movlw	low _OsAlarms
 32269  0021B0  2419               	addwf	?i1___wmul,w,c
 32270  0021B2  6ED9               	movwf	fsr2l,c
 32271  0021B4  0E06               	movlw	high _OsAlarms
 32272  0021B6  201A               	addwfc	?i1___wmul+1,w,c
 32273  0021B8  6EDA               	movwf	fsr2h,c
 32274  0021BA  2ADE               	incf	postinc2,f,c
 32275  0021BC  0E00               	movlw	0
 32276  0021BE  22DE               	addwfc	postinc2,f,c
 32277  0021C0  22DE               	addwfc	postinc2,f,c
 32278  0021C2  22DE               	addwfc	postinc2,f,c
 32279                           
 32280                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 32281  0021C4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32282  0021C8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32283  0021CC  0E00               	movlw	0
 32284  0021CE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32285  0021D0  0E0B               	movlw	11
 32286  0021D2  6E1B               	movwf	i1___wmul@multiplicand,c
 32287  0021D4  EC9F  F02D         	call	i1___wmul	;wreg free
 32288  0021D8  0E05               	movlw	5
 32289  0021DA  2619               	addwf	?i1___wmul,f,c
 32290  0021DC  0E00               	movlw	0
 32291  0021DE  221A               	addwfc	?i1___wmul+1,f,c
 32292  0021E0  0E00               	movlw	low _OsAlarms
 32293  0021E2  2419               	addwf	?i1___wmul,w,c
 32294  0021E4  6ED9               	movwf	fsr2l,c
 32295  0021E6  0E06               	movlw	high _OsAlarms
 32296  0021E8  201A               	addwfc	?i1___wmul+1,w,c
 32297  0021EA  6EDA               	movwf	fsr2h,c
 32298  0021EC  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32299  0021F0  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32300  0021F4  0E00               	movlw	0
 32301  0021F6  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32302  0021F8  0E0B               	movlw	11
 32303  0021FA  6E1B               	movwf	i1___wmul@multiplicand,c
 32304  0021FC  EC9F  F02D         	call	i1___wmul	;wreg free
 32305  002200  0E01               	movlw	1
 32306  002202  2619               	addwf	?i1___wmul,f,c
 32307  002204  0E00               	movlw	0
 32308  002206  221A               	addwfc	?i1___wmul+1,f,c
 32309  002208  0E00               	movlw	low _OsAlarms
 32310  00220A  2419               	addwf	?i1___wmul,w,c
 32311  00220C  6EE1               	movwf	fsr1l,c
 32312  00220E  0E06               	movlw	high _OsAlarms
 32313  002210  201A               	addwfc	?i1___wmul+1,w,c
 32314  002212  6EE2               	movwf	fsr1h,c
 32315  002214  50DE               	movf	postinc2,w,c
 32316  002216  5CE6               	subwf	postinc1,w,c
 32317  002218  50DE               	movf	postinc2,w,c
 32318  00221A  58E6               	subwfb	postinc1,w,c
 32319  00221C  50DE               	movf	postinc2,w,c
 32320  00221E  58E6               	subwfb	postinc1,w,c
 32321  002220  50DE               	movf	postinc2,w,c
 32322  002222  58E6               	subwfb	postinc1,w,c
 32323  002224  A0D8               	btfss	status,0,c
 32324  002226  D03B               	goto	i1u1333_29
 32325                           
 32326                           ;os_alarms.c: 129: {
 32327                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 32328  002228  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 32329  00222A  EC27  F028         	call	_OsAlrm_ClearOsAlarm
 32330                           
 32331                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 32332  00222E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32333  002232  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32334  002236  0E00               	movlw	0
 32335  002238  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32336  00223A  0E0B               	movlw	11
 32337  00223C  6E1B               	movwf	i1___wmul@multiplicand,c
 32338  00223E  EC9F  F02D         	call	i1___wmul	;wreg free
 32339  002242  0E09               	movlw	9
 32340  002244  2619               	addwf	?i1___wmul,f,c
 32341  002246  0E00               	movlw	0
 32342  002248  221A               	addwfc	?i1___wmul+1,f,c
 32343  00224A  0E00               	movlw	low _OsAlarms
 32344  00224C  2419               	addwf	?i1___wmul,w,c
 32345  00224E  6ED9               	movwf	fsr2l,c
 32346  002250  0E06               	movlw	high _OsAlarms
 32347  002252  201A               	addwfc	?i1___wmul+1,w,c
 32348  002254  6EDA               	movwf	fsr2h,c
 32349  002256  50DE               	movf	postinc2,w,c
 32350  002258  10DE               	iorwf	postinc2,w,c
 32351  00225A  B4D8               	btfsc	status,2,c
 32352  00225C  D020               	goto	i1u1333_29
 32353                           
 32354                           ;os_alarms.c: 134: {
 32355                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 32356  00225E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32357  002262  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32358  002266  0E00               	movlw	0
 32359  002268  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32360  00226A  0E0B               	movlw	11
 32361  00226C  6E1B               	movwf	i1___wmul@multiplicand,c
 32362  00226E  EC9F  F02D         	call	i1___wmul	;wreg free
 32363  002272  0E09               	movlw	9
 32364  002274  2619               	addwf	?i1___wmul,f,c
 32365  002276  0E00               	movlw	0
 32366  002278  221A               	addwfc	?i1___wmul+1,f,c
 32367  00227A  0E00               	movlw	low _OsAlarms
 32368  00227C  2419               	addwf	?i1___wmul,w,c
 32369  00227E  6ED9               	movwf	fsr2l,c
 32370  002280  0E06               	movlw	high _OsAlarms
 32371  002282  201A               	addwfc	?i1___wmul+1,w,c
 32372  002284  6EDA               	movwf	fsr2h,c
 32373  002286  D801               	call	i1u1333_28
 32374  002288  D00A               	goto	i1u1333_29
 32375  00228A                     i1u1333_28:
 32376  00228A  0005               	push	
 32377  00228C  6EFA               	movwf	pclath,c
 32378  00228E  50DE               	movf	postinc2,w,c
 32379  002290  6EFD               	movwf	tosl,c
 32380  002292  50DE               	movf	postinc2,w,c
 32381  002294  6EFE               	movwf	tosh,c
 32382  002296  50F8               	movf	tblptru,w,c
 32383  002298  6EFF               	movwf	tosu,c
 32384  00229A  50FA               	movf	pclath,w,c
 32385  00229C  0012               	return		;indir
 32386  00229E                     i1u1333_29:
 32387  00229E  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 32388  0022A0  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 32389  0022A2  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 32390  0022A4  E101               	bnz	i1l747
 32391  0022A6  D75C               	goto	L65
 32392  0022A8                     i1l747:
 32393  0022A8  0012               	return		;funcret
 32394  0022AA                     __end_of_OsAlrm_ProcessOsAlarms:
 32395                           	opt stack 0
 32396                           tosu	equ	0xFFF
 32397                           tosh	equ	0xFFE
 32398                           tosl	equ	0xFFD
 32399                           pclatu	equ	0xFFB
 32400                           pclath	equ	0xFFA
 32401                           tblptru	equ	0xFF8
 32402                           tblptrh	equ	0xFF7
 32403                           tblptrl	equ	0xFF6
 32404                           tablat	equ	0xFF5
 32405                           prodh	equ	0xFF4
 32406                           prodl	equ	0xFF3
 32407                           intcon	equ	0xFF2
 32408                           intcon2	equ	0xFF1
 32409                           intcon3	equ	0xFF0
 32410                           indf0	equ	0xFEF
 32411                           postinc0	equ	0xFEE
 32412                           plusw0	equ	0xFEB
 32413                           fsr0h	equ	0xFEA
 32414                           fsr0l	equ	0xFE9
 32415                           wreg	equ	0xFE8
 32416                           indf1	equ	0xFE7
 32417                           postinc1	equ	0xFE6
 32418                           postdec1	equ	0xFE5
 32419                           plusw1	equ	0xFE3
 32420                           fsr1h	equ	0xFE2
 32421                           fsr1l	equ	0xFE1
 32422                           bsr	equ	0xFE0
 32423                           indf2	equ	0xFDF
 32424                           postinc2	equ	0xFDE
 32425                           postdec2	equ	0xFDD
 32426                           plusw2	equ	0xFDB
 32427                           fsr2h	equ	0xFDA
 32428                           fsr2l	equ	0xFD9
 32429                           status	equ	0xFD8
 32430                           
 32431 ;; *************** function i1___wmul *****************
 32432 ;; Defined at:
 32433 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 32434 ;; Parameters:    Size  Location     Type
 32435 ;;  multiplier      2   24[COMRAM] unsigned int 
 32436 ;;  multiplicand    2   26[COMRAM] unsigned int 
 32437 ;; Auto vars:     Size  Location     Type
 32438 ;;  __wmul          2   28[COMRAM] unsigned int 
 32439 ;; Return value:  Size  Location     Type
 32440 ;;                  2   24[COMRAM] unsigned int 
 32441 ;; Registers used:
 32442 ;;		wreg, status,2, status,0, prodl, prodh
 32443 ;; Tracked objects:
 32444 ;;		On entry : 0/0
 32445 ;;		On exit  : 0/0
 32446 ;;		Unchanged: 0/0
 32447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32448 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32451 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32452 ;;Total ram usage:        6 bytes
 32453 ;; Hardware stack levels used:    1
 32454 ;; Hardware stack levels required when called:    4
 32455 ;; This function calls:
 32456 ;;		Nothing
 32457 ;; This function is called by:
 32458 ;;		_OsAlrm_ProcessOsAlarms
 32459 ;; This function uses a non-reentrant model
 32460 ;;
 32461                           
 32462                           	psect	text157
 32463  005B3E                     __ptext157:
 32464                           	opt stack 0
 32465  005B3E                     i1___wmul:
 32466                           	opt stack 10
 32467                           
 32468                           ;incstack = 0
 32469  005B3E  5019               	movf	i1___wmul@multiplier,w,c
 32470  005B40  021B               	mulwf	i1___wmul@multiplicand,c
 32471  005B42  CFF3 F01D          	movff	prodl,i1___wmul@product
 32472  005B46  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 32473  005B4A  5019               	movf	i1___wmul@multiplier,w,c
 32474  005B4C  021C               	mulwf	i1___wmul@multiplicand+1,c
 32475  005B4E  50F3               	movf	prodl,w,c
 32476  005B50  261E               	addwf	i1___wmul@product+1,f,c
 32477  005B52  501A               	movf	i1___wmul@multiplier+1,w,c
 32478  005B54  021B               	mulwf	i1___wmul@multiplicand,c
 32479  005B56  50F3               	movf	prodl,w,c
 32480  005B58  261E               	addwf	i1___wmul@product+1,f,c
 32481  005B5A  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 32482  005B5E  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 32483  005B62  0012               	return	
 32484  005B64                     __end_ofi1___wmul:
 32485                           	opt stack 0
 32486                           tosu	equ	0xFFF
 32487                           tosh	equ	0xFFE
 32488                           tosl	equ	0xFFD
 32489                           pclatu	equ	0xFFB
 32490                           pclath	equ	0xFFA
 32491                           tblptru	equ	0xFF8
 32492                           tblptrh	equ	0xFF7
 32493                           tblptrl	equ	0xFF6
 32494                           tablat	equ	0xFF5
 32495                           prodh	equ	0xFF4
 32496                           prodl	equ	0xFF3
 32497                           intcon	equ	0xFF2
 32498                           intcon2	equ	0xFF1
 32499                           intcon3	equ	0xFF0
 32500                           indf0	equ	0xFEF
 32501                           postinc0	equ	0xFEE
 32502                           plusw0	equ	0xFEB
 32503                           fsr0h	equ	0xFEA
 32504                           fsr0l	equ	0xFE9
 32505                           wreg	equ	0xFE8
 32506                           indf1	equ	0xFE7
 32507                           postinc1	equ	0xFE6
 32508                           postdec1	equ	0xFE5
 32509                           plusw1	equ	0xFE3
 32510                           fsr1h	equ	0xFE2
 32511                           fsr1l	equ	0xFE1
 32512                           bsr	equ	0xFE0
 32513                           indf2	equ	0xFDF
 32514                           postinc2	equ	0xFDE
 32515                           postdec2	equ	0xFDD
 32516                           plusw2	equ	0xFDB
 32517                           fsr2h	equ	0xFDA
 32518                           fsr2l	equ	0xFD9
 32519                           status	equ	0xFD8
 32520                           
 32521 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 32522 ;; Defined at:
 32523 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 32524 ;; Parameters:    Size  Location     Type
 32525 ;;  OsAlarmId       1    wreg     unsigned char 
 32526 ;; Auto vars:     Size  Location     Type
 32527 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 32528 ;; Return value:  Size  Location     Type
 32529 ;;                  1    wreg      void 
 32530 ;; Registers used:
 32531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32532 ;; Tracked objects:
 32533 ;;		On entry : 0/0
 32534 ;;		On exit  : 0/0
 32535 ;;		Unchanged: 0/0
 32536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32541 ;;Total ram usage:        1 bytes
 32542 ;; Hardware stack levels used:    1
 32543 ;; Hardware stack levels required when called:    4
 32544 ;; This function calls:
 32545 ;;		Nothing
 32546 ;; This function is called by:
 32547 ;;		_OsAlrm_ProcessOsAlarms
 32548 ;; This function uses a non-reentrant model
 32549 ;;
 32550                           
 32551                           	psect	text158
 32552  00504E                     __ptext158:
 32553                           	opt stack 0
 32554  00504E                     _OsAlrm_ClearOsAlarm:
 32555                           	opt stack 10
 32556                           
 32557                           ;incstack = 0
 32558                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 32559  00504E  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 32560                           
 32561                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 32562  005050  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 32563  005052  0D0B               	mullw	11
 32564  005054  0E00               	movlw	low _OsAlarms
 32565  005056  24F3               	addwf	prodl,w,c
 32566  005058  6ED9               	movwf	fsr2l,c
 32567  00505A  0E06               	movlw	high _OsAlarms
 32568  00505C  20F4               	addwfc	prodh,w,c
 32569  00505E  6EDA               	movwf	fsr2h,c
 32570  005060  0E00               	movlw	0
 32571  005062  6EDF               	movwf	indf2,c
 32572                           
 32573                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 32574  005064  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 32575  005066  0D0B               	mullw	11
 32576  005068  0E01               	movlw	1
 32577  00506A  26F3               	addwf	prodl,f,c
 32578  00506C  0E00               	movlw	0
 32579  00506E  22F4               	addwfc	prodh,f,c
 32580  005070  0E00               	movlw	low _OsAlarms
 32581  005072  24F3               	addwf	prodl,w,c
 32582  005074  6ED9               	movwf	fsr2l,c
 32583  005076  0E06               	movlw	high _OsAlarms
 32584  005078  20F4               	addwfc	prodh,w,c
 32585  00507A  6EDA               	movwf	fsr2h,c
 32586  00507C  6ADE               	clrf	postinc2,c
 32587  00507E  6ADE               	clrf	postinc2,c
 32588  005080  6ADE               	clrf	postinc2,c
 32589  005082  6ADD               	clrf	postdec2,c
 32590                           
 32591                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 32592  005084  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 32593  005086  0D0B               	mullw	11
 32594  005088  0E05               	movlw	5
 32595  00508A  26F3               	addwf	prodl,f,c
 32596  00508C  0E00               	movlw	0
 32597  00508E  22F4               	addwfc	prodh,f,c
 32598  005090  0E00               	movlw	low _OsAlarms
 32599  005092  24F3               	addwf	prodl,w,c
 32600  005094  6ED9               	movwf	fsr2l,c
 32601  005096  0E06               	movlw	high _OsAlarms
 32602  005098  20F4               	addwfc	prodh,w,c
 32603  00509A  6EDA               	movwf	fsr2h,c
 32604  00509C  6ADE               	clrf	postinc2,c
 32605  00509E  6ADE               	clrf	postinc2,c
 32606  0050A0  6ADE               	clrf	postinc2,c
 32607  0050A2  6ADD               	clrf	postdec2,c
 32608  0050A4  0012               	return		;funcret
 32609  0050A6                     __end_of_OsAlrm_ClearOsAlarm:
 32610                           	opt stack 0
 32611                           tosu	equ	0xFFF
 32612                           tosh	equ	0xFFE
 32613                           tosl	equ	0xFFD
 32614                           pclatu	equ	0xFFB
 32615                           pclath	equ	0xFFA
 32616                           tblptru	equ	0xFF8
 32617                           tblptrh	equ	0xFF7
 32618                           tblptrl	equ	0xFF6
 32619                           tablat	equ	0xFF5
 32620                           prodh	equ	0xFF4
 32621                           prodl	equ	0xFF3
 32622                           intcon	equ	0xFF2
 32623                           intcon2	equ	0xFF1
 32624                           intcon3	equ	0xFF0
 32625                           indf0	equ	0xFEF
 32626                           postinc0	equ	0xFEE
 32627                           plusw0	equ	0xFEB
 32628                           fsr0h	equ	0xFEA
 32629                           fsr0l	equ	0xFE9
 32630                           wreg	equ	0xFE8
 32631                           indf1	equ	0xFE7
 32632                           postinc1	equ	0xFE6
 32633                           postdec1	equ	0xFE5
 32634                           plusw1	equ	0xFE3
 32635                           fsr1h	equ	0xFE2
 32636                           fsr1l	equ	0xFE1
 32637                           bsr	equ	0xFE0
 32638                           indf2	equ	0xFDF
 32639                           postinc2	equ	0xFDE
 32640                           postdec2	equ	0xFDD
 32641                           plusw2	equ	0xFDB
 32642                           fsr2h	equ	0xFDA
 32643                           fsr2l	equ	0xFD9
 32644                           status	equ	0xFD8
 32645                           
 32646 ;; *************** function _I2cDummyTx *****************
 32647 ;; Defined at:
 32648 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 32649 ;; Parameters:    Size  Location     Type
 32650 ;;		None
 32651 ;; Auto vars:     Size  Location     Type
 32652 ;;		None
 32653 ;; Return value:  Size  Location     Type
 32654 ;;                  1    wreg      void 
 32655 ;; Registers used:
 32656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32657 ;; Tracked objects:
 32658 ;;		On entry : 0/0
 32659 ;;		On exit  : 0/0
 32660 ;;		Unchanged: 0/0
 32661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32666 ;;Total ram usage:        0 bytes
 32667 ;; Hardware stack levels used:    1
 32668 ;; Hardware stack levels required when called:    6
 32669 ;; This function calls:
 32670 ;;		i1_I2cSlv_SendI2cMsg
 32671 ;; This function is called by:
 32672 ;;		_I2cSlv_MainTask
 32673 ;;		_OsAlrm_ProcessOsAlarms
 32674 ;; This function uses a non-reentrant model
 32675 ;;
 32676                           
 32677                           	psect	text159
 32678  005D34                     __ptext159:
 32679                           	opt stack 0
 32680  005D34                     _I2cDummyTx:
 32681                           	opt stack 8
 32682                           
 32683                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 32684                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 32685                           
 32686                           ;incstack = 0
 32687  005D34  0EFD               	movlw	low I2cDummyTx@DummyBuffer
 32688  005D36  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 32689  005D38  0E01               	movlw	high I2cDummyTx@DummyBuffer
 32690  005D3A  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 32691  005D3C  0E00               	movlw	0
 32692  005D3E  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 32693  005D40  0E01               	movlw	1
 32694  005D42  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 32695  005D44  EC39  F02C         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 32696                           
 32697                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 32698  005D48  0E01               	movlw	1
 32699  005D4A  0101               	movlb	1	; () banked
 32700  005D4C  6FEC               	movwf	_I2cBusStatus& (0+255),b
 32701                           
 32702                           ; BSR set to: 1
 32703  005D4E  0012               	return		;funcret
 32704  005D50                     __end_of_I2cDummyTx:
 32705                           	opt stack 0
 32706                           tosu	equ	0xFFF
 32707                           tosh	equ	0xFFE
 32708                           tosl	equ	0xFFD
 32709                           pclatu	equ	0xFFB
 32710                           pclath	equ	0xFFA
 32711                           tblptru	equ	0xFF8
 32712                           tblptrh	equ	0xFF7
 32713                           tblptrl	equ	0xFF6
 32714                           tablat	equ	0xFF5
 32715                           prodh	equ	0xFF4
 32716                           prodl	equ	0xFF3
 32717                           intcon	equ	0xFF2
 32718                           intcon2	equ	0xFF1
 32719                           intcon3	equ	0xFF0
 32720                           indf0	equ	0xFEF
 32721                           postinc0	equ	0xFEE
 32722                           plusw0	equ	0xFEB
 32723                           fsr0h	equ	0xFEA
 32724                           fsr0l	equ	0xFE9
 32725                           wreg	equ	0xFE8
 32726                           indf1	equ	0xFE7
 32727                           postinc1	equ	0xFE6
 32728                           postdec1	equ	0xFE5
 32729                           plusw1	equ	0xFE3
 32730                           fsr1h	equ	0xFE2
 32731                           fsr1l	equ	0xFE1
 32732                           bsr	equ	0xFE0
 32733                           indf2	equ	0xFDF
 32734                           postinc2	equ	0xFDE
 32735                           postdec2	equ	0xFDD
 32736                           plusw2	equ	0xFDB
 32737                           fsr2h	equ	0xFDA
 32738                           fsr2l	equ	0xFD9
 32739                           status	equ	0xFD8
 32740                           
 32741 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 32742 ;; Defined at:
 32743 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 32744 ;; Parameters:    Size  Location     Type
 32745 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 32746 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 32747 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 32748 ;;  DataLenght      1   30[COMRAM] unsigned char 
 32749 ;; Auto vars:     Size  Location     Type
 32750 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 32751 ;; Return value:  Size  Location     Type
 32752 ;;                  1    wreg      unsigned char 
 32753 ;; Registers used:
 32754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32755 ;; Tracked objects:
 32756 ;;		On entry : 0/0
 32757 ;;		On exit  : 0/0
 32758 ;;		Unchanged: 0/0
 32759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32761 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32763 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32764 ;;Total ram usage:        5 bytes
 32765 ;; Hardware stack levels used:    1
 32766 ;; Hardware stack levels required when called:    5
 32767 ;; This function calls:
 32768 ;;		i1_GenerateEvt
 32769 ;; This function is called by:
 32770 ;;		_I2cDummyTx
 32771 ;; This function uses a non-reentrant model
 32772 ;;
 32773                           
 32774                           	psect	text160
 32775  005872                     __ptext160:
 32776                           	opt stack 0
 32777  005872                     i1_I2cSlv_SendI2cMsg:
 32778                           	opt stack 8
 32779                           
 32780                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 32781                           
 32782                           ; BSR set to: 1
 32783                           ;incstack = 0
 32784  005872  0E00               	movlw	0
 32785  005874  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 32786                           
 32787                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 32788  005876  0100               	movlb	0	; () banked
 32789  005878  05CC               	decf	_I2cComSts& (0+255),w,b
 32790  00587A  B4D8               	btfsc	status,2,c
 32791  00587C  D014               	goto	i1l1395
 32792                           
 32793                           ; BSR set to: 0
 32794                           ;i2c_slv.c: 257: {
 32795                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 32796  00587E  C01E  F39D         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 32797                           
 32798                           ; BSR set to: 0
 32799                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 32800  005882  0E00               	movlw	0
 32801  005884  0103               	movlb	3	; () banked
 32802  005886  6F9E               	movwf	(_I2cTxPacket+1)& (0+255),b
 32803                           
 32804                           ; BSR set to: 3
 32805                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 32806  005888  C01F  F3A1         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 32807                           
 32808                           ; BSR set to: 3
 32809                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 32810  00588C  C01C  F39F         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 32811  005890  C01D  F3A0         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 32812                           
 32813                           ; BSR set to: 3
 32814                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 32815  005894  0ED6               	movlw	low _I2cWriteDataEvt
 32816  005896  6E19               	movwf	i1GenerateEvt@Event,c
 32817  005898  0E00               	movlw	high _I2cWriteDataEvt
 32818  00589A  6E1A               	movwf	i1GenerateEvt@Event+1,c
 32819  00589C  ECFC  F02E         	call	i1_GenerateEvt	;wreg free
 32820                           
 32821                           ;i2c_slv.c: 267: TxSts = 1u;
 32822  0058A0  0E01               	movlw	1
 32823  0058A2  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 32824                           
 32825                           ;i2c_slv.c: 268: }
 32826  0058A4  0012               	return	
 32827  0058A6                     i1l1395:
 32828                           
 32829                           ;i2c_slv.c: 269: else
 32830                           ;i2c_slv.c: 270: {
 32831                           ;i2c_slv.c: 272: TxSts = 0u;
 32832  0058A6  0E00               	movlw	0
 32833  0058A8  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 32834  0058AA  0012               	return	
 32835  0058AC                     __end_ofi1_I2cSlv_SendI2cMsg:
 32836                           	opt stack 0
 32837                           tosu	equ	0xFFF
 32838                           tosh	equ	0xFFE
 32839                           tosl	equ	0xFFD
 32840                           pclatu	equ	0xFFB
 32841                           pclath	equ	0xFFA
 32842                           tblptru	equ	0xFF8
 32843                           tblptrh	equ	0xFF7
 32844                           tblptrl	equ	0xFF6
 32845                           tablat	equ	0xFF5
 32846                           prodh	equ	0xFF4
 32847                           prodl	equ	0xFF3
 32848                           intcon	equ	0xFF2
 32849                           intcon2	equ	0xFF1
 32850                           intcon3	equ	0xFF0
 32851                           indf0	equ	0xFEF
 32852                           postinc0	equ	0xFEE
 32853                           plusw0	equ	0xFEB
 32854                           fsr0h	equ	0xFEA
 32855                           fsr0l	equ	0xFE9
 32856                           wreg	equ	0xFE8
 32857                           indf1	equ	0xFE7
 32858                           postinc1	equ	0xFE6
 32859                           postdec1	equ	0xFE5
 32860                           plusw1	equ	0xFE3
 32861                           fsr1h	equ	0xFE2
 32862                           fsr1l	equ	0xFE1
 32863                           bsr	equ	0xFE0
 32864                           indf2	equ	0xFDF
 32865                           postinc2	equ	0xFDE
 32866                           postdec2	equ	0xFDD
 32867                           plusw2	equ	0xFDB
 32868                           fsr2h	equ	0xFDA
 32869                           fsr2l	equ	0xFD9
 32870                           status	equ	0xFD8
 32871                           
 32872 ;; *************** function i1_GenerateEvt *****************
 32873 ;; Defined at:
 32874 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 32875 ;; Parameters:    Size  Location     Type
 32876 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 32877 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 32878 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 32879 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 32880 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 32881 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 32882 ;; Auto vars:     Size  Location     Type
 32883 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 32884 ;; Return value:  Size  Location     Type
 32885 ;;                  1    wreg      enum E7699
 32886 ;; Registers used:
 32887 ;;		wreg, fsr2l, fsr2h, status,2
 32888 ;; Tracked objects:
 32889 ;;		On entry : 0/0
 32890 ;;		On exit  : 0/0
 32891 ;;		Unchanged: 0/0
 32892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32896 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32897 ;;Total ram usage:        3 bytes
 32898 ;; Hardware stack levels used:    1
 32899 ;; Hardware stack levels required when called:    4
 32900 ;; This function calls:
 32901 ;;		Nothing
 32902 ;; This function is called by:
 32903 ;;		i1_I2cSlv_SendI2cMsg
 32904 ;; This function uses a non-reentrant model
 32905 ;;
 32906                           
 32907                           	psect	text161
 32908  005DF8                     __ptext161:
 32909                           	opt stack 0
 32910  005DF8                     i1_GenerateEvt:
 32911                           	opt stack 8
 32912                           
 32913                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 32914                           
 32915                           ;incstack = 0
 32916  005DF8  0E00               	movlw	0
 32917  005DFA  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 32918                           
 32919                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 32920  005DFC  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 32921  005E00  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 32922  005E04  0E02               	movlw	2
 32923  005E06  6EDF               	movwf	indf2,c
 32924                           
 32925                           ;os_ser.c: 83: EventStatus = EventSent;
 32926  005E08  0E02               	movlw	2
 32927  005E0A  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 32928  005E0C  0012               	return	
 32929  005E0E                     __end_ofi1_GenerateEvt:
 32930                           	opt stack 0
 32931                           tosu	equ	0xFFF
 32932                           tosh	equ	0xFFE
 32933                           tosl	equ	0xFFD
 32934                           pclatu	equ	0xFFB
 32935                           pclath	equ	0xFFA
 32936                           tblptru	equ	0xFF8
 32937                           tblptrh	equ	0xFF7
 32938                           tblptrl	equ	0xFF6
 32939                           tablat	equ	0xFF5
 32940                           prodh	equ	0xFF4
 32941                           prodl	equ	0xFF3
 32942                           intcon	equ	0xFF2
 32943                           intcon2	equ	0xFF1
 32944                           intcon3	equ	0xFF0
 32945                           indf0	equ	0xFEF
 32946                           postinc0	equ	0xFEE
 32947                           plusw0	equ	0xFEB
 32948                           fsr0h	equ	0xFEA
 32949                           fsr0l	equ	0xFE9
 32950                           wreg	equ	0xFE8
 32951                           indf1	equ	0xFE7
 32952                           postinc1	equ	0xFE6
 32953                           postdec1	equ	0xFE5
 32954                           plusw1	equ	0xFE3
 32955                           fsr1h	equ	0xFE2
 32956                           fsr1l	equ	0xFE1
 32957                           bsr	equ	0xFE0
 32958                           indf2	equ	0xFDF
 32959                           postinc2	equ	0xFDE
 32960                           postdec2	equ	0xFDD
 32961                           plusw2	equ	0xFDB
 32962                           fsr2h	equ	0xFDA
 32963                           fsr2l	equ	0xFD9
 32964                           status	equ	0xFD8
 32965                           
 32966 ;; *************** function _HighPriorityIsr *****************
 32967 ;; Defined at:
 32968 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 32969 ;; Parameters:    Size  Location     Type
 32970 ;;		None
 32971 ;; Auto vars:     Size  Location     Type
 32972 ;;		None
 32973 ;; Return value:  Size  Location     Type
 32974 ;;                  1    wreg      void 
 32975 ;; Registers used:
 32976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32977 ;; Tracked objects:
 32978 ;;		On entry : 0/0
 32979 ;;		On exit  : 0/0
 32980 ;;		Unchanged: 0/0
 32981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32984 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32985 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32986 ;;Total ram usage:       18 bytes
 32987 ;; Hardware stack levels used:    1
 32988 ;; Hardware stack levels required when called:    3
 32989 ;; This function calls:
 32990 ;;		_Mcu_Int0Isr
 32991 ;;		_Mcu_Int1Isr
 32992 ;;		_Rtcc_RtcIsr
 32993 ;;		_Uart_Uart1RxIsr
 32994 ;; This function is called by:
 32995 ;;		Interrupt level 2
 32996 ;; This function uses a non-reentrant model
 32997 ;;
 32998                           
 32999                           	psect	intcode
 33000  000008                     __pintcode:
 33001                           	opt stack 0
 33002  000008                     _HighPriorityIsr:
 33003                           	opt stack 8
 33004                           
 33005                           ;incstack = 0
 33006  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 33007  00000A  EFD2  F01F         	goto	int_func
 33008                           tosu	equ	0xFFF
 33009                           tosh	equ	0xFFE
 33010                           tosl	equ	0xFFD
 33011                           pclatu	equ	0xFFB
 33012                           pclath	equ	0xFFA
 33013                           tblptru	equ	0xFF8
 33014                           tblptrh	equ	0xFF7
 33015                           tblptrl	equ	0xFF6
 33016                           tablat	equ	0xFF5
 33017                           prodh	equ	0xFF4
 33018                           prodl	equ	0xFF3
 33019                           intcon	equ	0xFF2
 33020                           intcon2	equ	0xFF1
 33021                           intcon3	equ	0xFF0
 33022                           indf0	equ	0xFEF
 33023                           postinc0	equ	0xFEE
 33024                           plusw0	equ	0xFEB
 33025                           fsr0h	equ	0xFEA
 33026                           fsr0l	equ	0xFE9
 33027                           wreg	equ	0xFE8
 33028                           indf1	equ	0xFE7
 33029                           postinc1	equ	0xFE6
 33030                           postdec1	equ	0xFE5
 33031                           plusw1	equ	0xFE3
 33032                           fsr1h	equ	0xFE2
 33033                           fsr1l	equ	0xFE1
 33034                           bsr	equ	0xFE0
 33035                           indf2	equ	0xFDF
 33036                           postinc2	equ	0xFDE
 33037                           postdec2	equ	0xFDD
 33038                           plusw2	equ	0xFDB
 33039                           fsr2h	equ	0xFDA
 33040                           fsr2l	equ	0xFD9
 33041                           status	equ	0xFD8
 33042                           
 33043                           	psect	intcode_body
 33044  003FA4                     __pintcode_body:
 33045                           	opt stack 8
 33046  003FA4                     int_func:
 33047                           	opt stack 8
 33048  003FA4  CFFA F007          	movff	pclath,??_HighPriorityIsr
 33049  003FA8  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 33050  003FAC  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 33051  003FB0  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 33052  003FB4  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 33053  003FB8  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 33054  003FBC  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 33055  003FC0  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 33056  003FC4  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 33057  003FC8  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 33058  003FCC  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 33059  003FD0  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 33060  003FD4  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 33061  003FD8  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 33062  003FDC  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 33063  003FE0  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 33064  003FE4  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 33065  003FE8  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 33066                           
 33067                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 33068  003FEC  B2F2               	btfsc	intcon,1,c	;volatile
 33069                           
 33070                           ;irq.c: 158: {
 33071                           ;irq.c: 160: Mcu_Int0Isr();
 33072  003FEE  EC9B  F02F         	call	_Mcu_Int0Isr	;wreg free
 33073                           
 33074                           ;irq.c: 161: }
 33075                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 33076  003FF2  B0F0               	btfsc	intcon3,0,c	;volatile
 33077                           
 33078                           ;irq.c: 167: {
 33079                           ;irq.c: 169: Mcu_Int1Isr();
 33080  003FF4  EC99  F02F         	call	_Mcu_Int1Isr	;wreg free
 33081                           
 33082                           ;irq.c: 170: }
 33083                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 33084  003FF8  B0A4               	btfsc	4004,0,c	;volatile
 33085                           
 33086                           ;irq.c: 203: {
 33087                           ;irq.c: 205: Rtcc_RtcIsr();
 33088  003FFA  EC97  F02F         	call	_Rtcc_RtcIsr	;wreg free
 33089                           
 33090                           ;irq.c: 206: }
 33091                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 33092  003FFE  BA9E               	btfsc	3998,5,c	;volatile
 33093                           
 33094                           ;irq.c: 212: {
 33095                           ;irq.c: 214: Uart_Uart1RxIsr();
 33096  004000  EC50  F02F         	call	_Uart_Uart1RxIsr	;wreg free
 33097  004004  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 33098  004008  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 33099  00400C  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 33100  004010  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 33101  004014  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 33102  004018  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 33103  00401C  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 33104  004020  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 33105  004024  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 33106  004028  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 33107  00402C  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 33108  004030  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 33109  004034  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 33110  004038  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 33111  00403C  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 33112  004040  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 33113  004044  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 33114  004048  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 33115  00404C  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 33116  00404E  0011               	retfie		f
 33117  004050                     __end_of_HighPriorityIsr:
 33118                           	opt stack 0
 33119                           tosu	equ	0xFFF
 33120                           tosh	equ	0xFFE
 33121                           tosl	equ	0xFFD
 33122                           pclatu	equ	0xFFB
 33123                           pclath	equ	0xFFA
 33124                           tblptru	equ	0xFF8
 33125                           tblptrh	equ	0xFF7
 33126                           tblptrl	equ	0xFF6
 33127                           tablat	equ	0xFF5
 33128                           prodh	equ	0xFF4
 33129                           prodl	equ	0xFF3
 33130                           intcon	equ	0xFF2
 33131                           intcon2	equ	0xFF1
 33132                           intcon3	equ	0xFF0
 33133                           indf0	equ	0xFEF
 33134                           postinc0	equ	0xFEE
 33135                           plusw0	equ	0xFEB
 33136                           fsr0h	equ	0xFEA
 33137                           fsr0l	equ	0xFE9
 33138                           wreg	equ	0xFE8
 33139                           indf1	equ	0xFE7
 33140                           postinc1	equ	0xFE6
 33141                           postdec1	equ	0xFE5
 33142                           plusw1	equ	0xFE3
 33143                           fsr1h	equ	0xFE2
 33144                           fsr1l	equ	0xFE1
 33145                           bsr	equ	0xFE0
 33146                           indf2	equ	0xFDF
 33147                           postinc2	equ	0xFDE
 33148                           postdec2	equ	0xFDD
 33149                           plusw2	equ	0xFDB
 33150                           fsr2h	equ	0xFDA
 33151                           fsr2l	equ	0xFD9
 33152                           status	equ	0xFD8
 33153                           
 33154 ;; *************** function _Uart_Uart1RxIsr *****************
 33155 ;; Defined at:
 33156 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 33157 ;; Parameters:    Size  Location     Type
 33158 ;;		None
 33159 ;; Auto vars:     Size  Location     Type
 33160 ;;		None
 33161 ;; Return value:  Size  Location     Type
 33162 ;;                  1    wreg      void 
 33163 ;; Registers used:
 33164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33165 ;; Tracked objects:
 33166 ;;		On entry : 0/0
 33167 ;;		On exit  : 0/0
 33168 ;;		Unchanged: 0/0
 33169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33174 ;;Total ram usage:        0 bytes
 33175 ;; Hardware stack levels used:    1
 33176 ;; Hardware stack levels required when called:    2
 33177 ;; This function calls:
 33178 ;;		_Uart_MdmGsmGprsReadService
 33179 ;; This function is called by:
 33180 ;;		_HighPriorityIsr
 33181 ;; This function uses a non-reentrant model
 33182 ;;
 33183                           
 33184                           	psect	text163
 33185  005EA0                     __ptext163:
 33186                           	opt stack 0
 33187  005EA0                     _Uart_Uart1RxIsr:
 33188                           	opt stack 8
 33189                           
 33190                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 33191                           ;uart_drv.c: 590: UartRxData = RCREG1;
 33192                           
 33193                           ;incstack = 0
 33194  005EA0  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 33195                           
 33196                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 33197  005EA4  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 33198  005EA8  0E01               	movlw	1
 33199  005EAA  EC6E  F01C         	call	_Uart_MdmGsmGprsReadService
 33200  005EAE  0012               	return		;funcret
 33201  005EB0                     __end_of_Uart_Uart1RxIsr:
 33202                           	opt stack 0
 33203                           tosu	equ	0xFFF
 33204                           tosh	equ	0xFFE
 33205                           tosl	equ	0xFFD
 33206                           pclatu	equ	0xFFB
 33207                           pclath	equ	0xFFA
 33208                           tblptru	equ	0xFF8
 33209                           tblptrh	equ	0xFF7
 33210                           tblptrl	equ	0xFF6
 33211                           tablat	equ	0xFF5
 33212                           prodh	equ	0xFF4
 33213                           prodl	equ	0xFF3
 33214                           intcon	equ	0xFF2
 33215                           intcon2	equ	0xFF1
 33216                           intcon3	equ	0xFF0
 33217                           indf0	equ	0xFEF
 33218                           postinc0	equ	0xFEE
 33219                           plusw0	equ	0xFEB
 33220                           fsr0h	equ	0xFEA
 33221                           fsr0l	equ	0xFE9
 33222                           wreg	equ	0xFE8
 33223                           indf1	equ	0xFE7
 33224                           postinc1	equ	0xFE6
 33225                           postdec1	equ	0xFE5
 33226                           plusw1	equ	0xFE3
 33227                           fsr1h	equ	0xFE2
 33228                           fsr1l	equ	0xFE1
 33229                           bsr	equ	0xFE0
 33230                           indf2	equ	0xFDF
 33231                           postinc2	equ	0xFDE
 33232                           postdec2	equ	0xFDD
 33233                           plusw2	equ	0xFDB
 33234                           fsr2h	equ	0xFDA
 33235                           fsr2l	equ	0xFD9
 33236                           status	equ	0xFD8
 33237                           
 33238 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 33239 ;; Defined at:
 33240 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 33241 ;; Parameters:    Size  Location     Type
 33242 ;;  Module          1    wreg     unsigned char 
 33243 ;;  UartData        1    3[COMRAM] unsigned char 
 33244 ;; Auto vars:     Size  Location     Type
 33245 ;;  Module          1    0[COMRAM] unsigned char 
 33246 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 33247 ;; Return value:  Size  Location     Type
 33248 ;;                  1    wreg      void 
 33249 ;; Registers used:
 33250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33251 ;; Tracked objects:
 33252 ;;		On entry : 0/0
 33253 ;;		On exit  : 0/0
 33254 ;;		Unchanged: 0/0
 33255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33256 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33259 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33260 ;;Total ram usage:        3 bytes
 33261 ;; Hardware stack levels used:    1
 33262 ;; Hardware stack levels required when called:    1
 33263 ;; This function calls:
 33264 ;;		i2_GenerateEvt
 33265 ;; This function is called by:
 33266 ;;		_Uart_Uart1RxIsr
 33267 ;; This function uses a non-reentrant model
 33268 ;;
 33269                           
 33270                           	psect	text164
 33271  0038DC                     __ptext164:
 33272                           	opt stack 0
 33273  0038DC                     _Uart_MdmGsmGprsReadService:
 33274                           	opt stack 8
 33275                           
 33276                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 33277                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 33278                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 33279                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 33280                           
 33281                           ;incstack = 0
 33282  0038DC  0E00               	movlw	0
 33283  0038DE  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 33284  0038E0  0E00               	movlw	0
 33285  0038E2  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 33286                           
 33287                           ;uart_drv.c: 383: switch (RxState)
 33288  0038E4  D058               	goto	i2l680
 33289  0038E6                     
 33290                           ;uart_drv.c: 387: if (UartData == '\r')
 33291  0038E6  0E0D               	movlw	13
 33292  0038E8  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 33293  0038EA  A4D8               	btfss	status,2,c
 33294  0038EC  D003               	goto	i2l682
 33295                           
 33296                           ;uart_drv.c: 388: {
 33297                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 33298  0038EE  0E01               	movlw	1
 33299  0038F0  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 33300                           
 33301                           ;uart_drv.c: 391: }
 33302  0038F2  0012               	return	
 33303  0038F4                     i2l682:
 33304                           
 33305                           ;uart_drv.c: 392: else
 33306                           ;uart_drv.c: 393: {
 33307                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 33308  0038F4  0E90               	movlw	144
 33309  0038F6  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33310  0038F8  0E01               	movlw	1
 33311  0038FA  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33312  0038FC  B0D8               	btfsc	status,0,c
 33313  0038FE  0012               	return	
 33314                           
 33315                           ;uart_drv.c: 395: {
 33316                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 33317  003900  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 33318  003902  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33319  003904  6ED9               	movwf	fsr2l,c
 33320  003906  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 33321  003908  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33322  00390A  6EDA               	movwf	fsr2h,c
 33323  00390C  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 33324                           
 33325                           ;uart_drv.c: 399: RxCounter++;
 33326  003910  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 33327  003912  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 33328                           
 33329                           ;uart_drv.c: 400: }
 33330                           ;uart_drv.c: 401: }
 33331                           ;uart_drv.c: 402: break;
 33332  003914  0012               	return	
 33333  003916                     
 33334                           ;uart_drv.c: 406: if (UartData == '\n')
 33335  003916  0E0A               	movlw	10
 33336  003918  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 33337  00391A  A4D8               	btfss	status,2,c
 33338  00391C  D035               	goto	i2l688
 33339                           
 33340                           ;uart_drv.c: 407: {
 33341                           ;uart_drv.c: 409: if (RxCounter > 0)
 33342  00391E  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33343  003920  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33344  003922  B4D8               	btfsc	status,2,c
 33345  003924  D031               	goto	i2l688
 33346                           
 33347                           ;uart_drv.c: 410: {
 33348                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 33349  003926  0E00               	movlw	0
 33350  003928  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 33351  00392A  0E00               	movlw	0
 33352  00392C  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 33353  00392E  D010               	goto	i2l689
 33354  003930                     
 33355                           ;uart_drv.c: 413: {
 33356                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 33357  003930  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 33358  003932  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 33359  003934  6ED9               	movwf	fsr2l,c
 33360  003936  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 33361  003938  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 33362  00393A  6EDA               	movwf	fsr2h,c
 33363  00393C  0E58               	movlw	low _RxBuffer
 33364  00393E  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 33365  003940  6EE1               	movwf	fsr1l,c
 33366  003942  0E0C               	movlw	high _RxBuffer
 33367  003944  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 33368  003946  6EE2               	movwf	fsr1h,c
 33369  003948  CFDF FFE7          	movff	indf2,indf1
 33370  00394C  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 33371  00394E  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 33372  003950                     i2l689:
 33373  003950  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33374  003952  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 33375  003954  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33376  003956  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 33377  003958  A0D8               	btfss	status,0,c
 33378  00395A  D7EA               	goto	i2l690
 33379                           
 33380                           ;uart_drv.c: 415: }
 33381                           ;uart_drv.c: 417: RxLen = RxCounter;
 33382  00395C  C023  F0BE         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 33383  003960  C024  F0BF         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 33384                           
 33385                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 33386  003964  0E3C               	movlw	low _NewStringReceived
 33387  003966  6E01               	movwf	i2GenerateEvt@Event,c
 33388  003968  0E00               	movlw	high _NewStringReceived
 33389  00396A  6E02               	movwf	i2GenerateEvt@Event+1,c
 33390  00396C  EC07  F02F         	call	i2_GenerateEvt	;wreg free
 33391                           
 33392                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 33393  003970  0E3B               	movlw	low _NewMdmEvtParserRequest
 33394  003972  6E01               	movwf	i2GenerateEvt@Event,c
 33395  003974  0E00               	movlw	high _NewMdmEvtParserRequest
 33396  003976  6E02               	movwf	i2GenerateEvt@Event+1,c
 33397  003978  EC07  F02F         	call	i2_GenerateEvt	;wreg free
 33398                           
 33399                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 33400  00397C  0E3A               	movlw	low _NewStringMdmTerminal
 33401  00397E  6E01               	movwf	i2GenerateEvt@Event,c
 33402  003980  0E00               	movlw	high _NewStringMdmTerminal
 33403  003982  6E02               	movwf	i2GenerateEvt@Event+1,c
 33404  003984  EC07  F02F         	call	i2_GenerateEvt	;wreg free
 33405  003988                     i2l688:
 33406                           
 33407                           ;uart_drv.c: 427: }
 33408                           ;uart_drv.c: 429: RxState = ReadData;
 33409                           
 33410                           ;uart_drv.c: 424: else
 33411                           ;uart_drv.c: 425: {
 33412                           
 33413                           ;uart_drv.c: 422: }
 33414                           ;uart_drv.c: 423: }
 33415  003988  0E00               	movlw	0
 33416  00398A  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 33417                           
 33418                           ;uart_drv.c: 431: RxCounter = 0;
 33419  00398C  0E00               	movlw	0
 33420  00398E  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 33421  003990  0E00               	movlw	0
 33422  003992  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 33423                           
 33424                           ;uart_drv.c: 436: }
 33425                           
 33426                           ;uart_drv.c: 435: break;
 33427                           
 33428                           ;uart_drv.c: 434: default:
 33429                           
 33430                           ;uart_drv.c: 432: break;
 33431  003994  0012               	return	
 33432  003996                     i2l680:
 33433  003996  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 33434                           
 33435                           ; Switch size 1, requested type "space"
 33436                           ; Number of cases is 2, Range of values is 0 to 1
 33437                           ; switch strategies available:
 33438                           ; Name         Instructions Cycles
 33439                           ; simple_byte            7     4 (average)
 33440                           ;	Chosen strategy is simple_byte
 33441  003998  0A00               	xorlw	0	; case 0
 33442  00399A  B4D8               	btfsc	status,2,c
 33443  00399C  D7A4               	goto	i2l681
 33444  00399E  0A01               	xorlw	1	; case 1
 33445  0039A0  A4D8               	btfss	status,2,c
 33446  0039A2  0012               	return	
 33447  0039A4  D7B8               	goto	i2l686
 33448  0039A6                     __end_of_Uart_MdmGsmGprsReadService:
 33449                           	opt stack 0
 33450                           tosu	equ	0xFFF
 33451                           tosh	equ	0xFFE
 33452                           tosl	equ	0xFFD
 33453                           pclatu	equ	0xFFB
 33454                           pclath	equ	0xFFA
 33455                           tblptru	equ	0xFF8
 33456                           tblptrh	equ	0xFF7
 33457                           tblptrl	equ	0xFF6
 33458                           tablat	equ	0xFF5
 33459                           prodh	equ	0xFF4
 33460                           prodl	equ	0xFF3
 33461                           intcon	equ	0xFF2
 33462                           intcon2	equ	0xFF1
 33463                           intcon3	equ	0xFF0
 33464                           indf0	equ	0xFEF
 33465                           postinc0	equ	0xFEE
 33466                           plusw0	equ	0xFEB
 33467                           fsr0h	equ	0xFEA
 33468                           fsr0l	equ	0xFE9
 33469                           wreg	equ	0xFE8
 33470                           indf1	equ	0xFE7
 33471                           postinc1	equ	0xFE6
 33472                           postdec1	equ	0xFE5
 33473                           plusw1	equ	0xFE3
 33474                           fsr1h	equ	0xFE2
 33475                           fsr1l	equ	0xFE1
 33476                           bsr	equ	0xFE0
 33477                           indf2	equ	0xFDF
 33478                           postinc2	equ	0xFDE
 33479                           postdec2	equ	0xFDD
 33480                           plusw2	equ	0xFDB
 33481                           fsr2h	equ	0xFDA
 33482                           fsr2l	equ	0xFD9
 33483                           status	equ	0xFD8
 33484                           
 33485 ;; *************** function i2_GenerateEvt *****************
 33486 ;; Defined at:
 33487 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 33488 ;; Parameters:    Size  Location     Type
 33489 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 33490 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 33491 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 33492 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 33493 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 33494 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 33495 ;; Auto vars:     Size  Location     Type
 33496 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 33497 ;; Return value:  Size  Location     Type
 33498 ;;                  1    wreg      enum E7699
 33499 ;; Registers used:
 33500 ;;		wreg, fsr2l, fsr2h, status,2
 33501 ;; Tracked objects:
 33502 ;;		On entry : 0/0
 33503 ;;		On exit  : 0/0
 33504 ;;		Unchanged: 0/0
 33505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33509 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33510 ;;Total ram usage:        3 bytes
 33511 ;; Hardware stack levels used:    1
 33512 ;; This function calls:
 33513 ;;		Nothing
 33514 ;; This function is called by:
 33515 ;;		_Uart_MdmGsmGprsReadService
 33516 ;; This function uses a non-reentrant model
 33517 ;;
 33518                           
 33519                           	psect	text165
 33520  005E0E                     __ptext165:
 33521                           	opt stack 0
 33522  005E0E                     i2_GenerateEvt:
 33523                           	opt stack 8
 33524                           
 33525                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 33526                           
 33527                           ;incstack = 0
 33528  005E0E  0E00               	movlw	0
 33529  005E10  6E03               	movwf	i2GenerateEvt@EventStatus,c
 33530                           
 33531                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 33532  005E12  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 33533  005E16  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 33534  005E1A  0E02               	movlw	2
 33535  005E1C  6EDF               	movwf	indf2,c
 33536                           
 33537                           ;os_ser.c: 83: EventStatus = EventSent;
 33538  005E1E  0E02               	movlw	2
 33539  005E20  6E03               	movwf	i2GenerateEvt@EventStatus,c
 33540  005E22  0012               	return	
 33541  005E24                     __end_ofi2_GenerateEvt:
 33542                           	opt stack 0
 33543                           tosu	equ	0xFFF
 33544                           tosh	equ	0xFFE
 33545                           tosl	equ	0xFFD
 33546                           pclatu	equ	0xFFB
 33547                           pclath	equ	0xFFA
 33548                           tblptru	equ	0xFF8
 33549                           tblptrh	equ	0xFF7
 33550                           tblptrl	equ	0xFF6
 33551                           tablat	equ	0xFF5
 33552                           prodh	equ	0xFF4
 33553                           prodl	equ	0xFF3
 33554                           intcon	equ	0xFF2
 33555                           intcon2	equ	0xFF1
 33556                           intcon3	equ	0xFF0
 33557                           indf0	equ	0xFEF
 33558                           postinc0	equ	0xFEE
 33559                           plusw0	equ	0xFEB
 33560                           fsr0h	equ	0xFEA
 33561                           fsr0l	equ	0xFE9
 33562                           wreg	equ	0xFE8
 33563                           indf1	equ	0xFE7
 33564                           postinc1	equ	0xFE6
 33565                           postdec1	equ	0xFE5
 33566                           plusw1	equ	0xFE3
 33567                           fsr1h	equ	0xFE2
 33568                           fsr1l	equ	0xFE1
 33569                           bsr	equ	0xFE0
 33570                           indf2	equ	0xFDF
 33571                           postinc2	equ	0xFDE
 33572                           postdec2	equ	0xFDD
 33573                           plusw2	equ	0xFDB
 33574                           fsr2h	equ	0xFDA
 33575                           fsr2l	equ	0xFD9
 33576                           status	equ	0xFD8
 33577                           
 33578 ;; *************** function _Rtcc_RtcIsr *****************
 33579 ;; Defined at:
 33580 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 33581 ;; Parameters:    Size  Location     Type
 33582 ;;		None
 33583 ;; Auto vars:     Size  Location     Type
 33584 ;;		None
 33585 ;; Return value:  Size  Location     Type
 33586 ;;                  1    wreg      void 
 33587 ;; Registers used:
 33588 ;;		wreg, status,2, status,0
 33589 ;; Tracked objects:
 33590 ;;		On entry : 0/0
 33591 ;;		On exit  : 0/0
 33592 ;;		Unchanged: 0/0
 33593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33598 ;;Total ram usage:        0 bytes
 33599 ;; Hardware stack levels used:    1
 33600 ;; This function calls:
 33601 ;;		Nothing
 33602 ;; This function is called by:
 33603 ;;		_HighPriorityIsr
 33604 ;; This function uses a non-reentrant model
 33605 ;;
 33606                           
 33607                           	psect	text166
 33608  005F2E                     __ptext166:
 33609                           	opt stack 0
 33610  005F2E                     _Rtcc_RtcIsr:
 33611                           	opt stack 10
 33612                           
 33613                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 33614                           
 33615                           ;incstack = 0
 33616  005F2E  90A4               	bcf	4004,0,c	;volatile
 33617  005F30  0012               	return	
 33618  005F32                     __end_of_Rtcc_RtcIsr:
 33619                           	opt stack 0
 33620                           tosu	equ	0xFFF
 33621                           tosh	equ	0xFFE
 33622                           tosl	equ	0xFFD
 33623                           pclatu	equ	0xFFB
 33624                           pclath	equ	0xFFA
 33625                           tblptru	equ	0xFF8
 33626                           tblptrh	equ	0xFF7
 33627                           tblptrl	equ	0xFF6
 33628                           tablat	equ	0xFF5
 33629                           prodh	equ	0xFF4
 33630                           prodl	equ	0xFF3
 33631                           intcon	equ	0xFF2
 33632                           intcon2	equ	0xFF1
 33633                           intcon3	equ	0xFF0
 33634                           indf0	equ	0xFEF
 33635                           postinc0	equ	0xFEE
 33636                           plusw0	equ	0xFEB
 33637                           fsr0h	equ	0xFEA
 33638                           fsr0l	equ	0xFE9
 33639                           wreg	equ	0xFE8
 33640                           indf1	equ	0xFE7
 33641                           postinc1	equ	0xFE6
 33642                           postdec1	equ	0xFE5
 33643                           plusw1	equ	0xFE3
 33644                           fsr1h	equ	0xFE2
 33645                           fsr1l	equ	0xFE1
 33646                           bsr	equ	0xFE0
 33647                           indf2	equ	0xFDF
 33648                           postinc2	equ	0xFDE
 33649                           postdec2	equ	0xFDD
 33650                           plusw2	equ	0xFDB
 33651                           fsr2h	equ	0xFDA
 33652                           fsr2l	equ	0xFD9
 33653                           status	equ	0xFD8
 33654                           
 33655 ;; *************** function _Mcu_Int1Isr *****************
 33656 ;; Defined at:
 33657 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 33658 ;; Parameters:    Size  Location     Type
 33659 ;;		None
 33660 ;; Auto vars:     Size  Location     Type
 33661 ;;		None
 33662 ;; Return value:  Size  Location     Type
 33663 ;;                  1    wreg      void 
 33664 ;; Registers used:
 33665 ;;		wreg, status,2, status,0
 33666 ;; Tracked objects:
 33667 ;;		On entry : 0/0
 33668 ;;		On exit  : 0/0
 33669 ;;		Unchanged: 0/0
 33670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33675 ;;Total ram usage:        0 bytes
 33676 ;; Hardware stack levels used:    1
 33677 ;; This function calls:
 33678 ;;		Nothing
 33679 ;; This function is called by:
 33680 ;;		_HighPriorityIsr
 33681 ;; This function uses a non-reentrant model
 33682 ;;
 33683                           
 33684                           	psect	text167
 33685  005F32                     __ptext167:
 33686                           	opt stack 0
 33687  005F32                     _Mcu_Int1Isr:
 33688                           	opt stack 10
 33689                           
 33690                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 33691                           
 33692                           ;incstack = 0
 33693  005F32  90F0               	bcf	intcon3,0,c	;volatile
 33694  005F34  0012               	return	
 33695  005F36                     __end_of_Mcu_Int1Isr:
 33696                           	opt stack 0
 33697                           tosu	equ	0xFFF
 33698                           tosh	equ	0xFFE
 33699                           tosl	equ	0xFFD
 33700                           pclatu	equ	0xFFB
 33701                           pclath	equ	0xFFA
 33702                           tblptru	equ	0xFF8
 33703                           tblptrh	equ	0xFF7
 33704                           tblptrl	equ	0xFF6
 33705                           tablat	equ	0xFF5
 33706                           prodh	equ	0xFF4
 33707                           prodl	equ	0xFF3
 33708                           intcon	equ	0xFF2
 33709                           intcon2	equ	0xFF1
 33710                           intcon3	equ	0xFF0
 33711                           indf0	equ	0xFEF
 33712                           postinc0	equ	0xFEE
 33713                           plusw0	equ	0xFEB
 33714                           fsr0h	equ	0xFEA
 33715                           fsr0l	equ	0xFE9
 33716                           wreg	equ	0xFE8
 33717                           indf1	equ	0xFE7
 33718                           postinc1	equ	0xFE6
 33719                           postdec1	equ	0xFE5
 33720                           plusw1	equ	0xFE3
 33721                           fsr1h	equ	0xFE2
 33722                           fsr1l	equ	0xFE1
 33723                           bsr	equ	0xFE0
 33724                           indf2	equ	0xFDF
 33725                           postinc2	equ	0xFDE
 33726                           postdec2	equ	0xFDD
 33727                           plusw2	equ	0xFDB
 33728                           fsr2h	equ	0xFDA
 33729                           fsr2l	equ	0xFD9
 33730                           status	equ	0xFD8
 33731                           
 33732 ;; *************** function _Mcu_Int0Isr *****************
 33733 ;; Defined at:
 33734 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 33735 ;; Parameters:    Size  Location     Type
 33736 ;;		None
 33737 ;; Auto vars:     Size  Location     Type
 33738 ;;		None
 33739 ;; Return value:  Size  Location     Type
 33740 ;;                  1    wreg      void 
 33741 ;; Registers used:
 33742 ;;		wreg, status,2, status,0
 33743 ;; Tracked objects:
 33744 ;;		On entry : 0/0
 33745 ;;		On exit  : 0/0
 33746 ;;		Unchanged: 0/0
 33747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33752 ;;Total ram usage:        0 bytes
 33753 ;; Hardware stack levels used:    1
 33754 ;; This function calls:
 33755 ;;		Nothing
 33756 ;; This function is called by:
 33757 ;;		_HighPriorityIsr
 33758 ;; This function uses a non-reentrant model
 33759 ;;
 33760                           
 33761                           	psect	text168
 33762  005F36                     __ptext168:
 33763                           	opt stack 0
 33764  005F36                     _Mcu_Int0Isr:
 33765                           	opt stack 10
 33766                           
 33767                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 33768                           
 33769                           ;incstack = 0
 33770  005F36  92F2               	bcf	intcon,1,c	;volatile
 33771  005F38  0012               	return	
 33772  005F3A                     __end_of_Mcu_Int0Isr:
 33773                           	opt stack 0
 33774                           tosu	equ	0xFFF
 33775                           tosh	equ	0xFFE
 33776                           tosl	equ	0xFFD
 33777                           pclatu	equ	0xFFB
 33778                           pclath	equ	0xFFA
 33779                           tblptru	equ	0xFF8
 33780                           tblptrh	equ	0xFF7
 33781                           tblptrl	equ	0xFF6
 33782                           tablat	equ	0xFF5
 33783                           prodh	equ	0xFF4
 33784                           prodl	equ	0xFF3
 33785                           intcon	equ	0xFF2
 33786                           intcon2	equ	0xFF1
 33787                           intcon3	equ	0xFF0
 33788                           indf0	equ	0xFEF
 33789                           postinc0	equ	0xFEE
 33790                           plusw0	equ	0xFEB
 33791                           fsr0h	equ	0xFEA
 33792                           fsr0l	equ	0xFE9
 33793                           wreg	equ	0xFE8
 33794                           indf1	equ	0xFE7
 33795                           postinc1	equ	0xFE6
 33796                           postdec1	equ	0xFE5
 33797                           plusw1	equ	0xFE3
 33798                           fsr1h	equ	0xFE2
 33799                           fsr1l	equ	0xFE1
 33800                           bsr	equ	0xFE0
 33801                           indf2	equ	0xFDF
 33802                           postinc2	equ	0xFDE
 33803                           postdec2	equ	0xFDD
 33804                           plusw2	equ	0xFDB
 33805                           fsr2h	equ	0xFDA
 33806                           fsr2l	equ	0xFD9
 33807                           status	equ	0xFD8
 33808                           tosu	equ	0xFFF
 33809                           tosh	equ	0xFFE
 33810                           tosl	equ	0xFFD
 33811                           pclatu	equ	0xFFB
 33812                           pclath	equ	0xFFA
 33813                           tblptru	equ	0xFF8
 33814                           tblptrh	equ	0xFF7
 33815                           tblptrl	equ	0xFF6
 33816                           tablat	equ	0xFF5
 33817                           prodh	equ	0xFF4
 33818                           prodl	equ	0xFF3
 33819                           intcon	equ	0xFF2
 33820                           intcon2	equ	0xFF1
 33821                           intcon3	equ	0xFF0
 33822                           indf0	equ	0xFEF
 33823                           postinc0	equ	0xFEE
 33824                           plusw0	equ	0xFEB
 33825                           fsr0h	equ	0xFEA
 33826                           fsr0l	equ	0xFE9
 33827                           wreg	equ	0xFE8
 33828                           indf1	equ	0xFE7
 33829                           postinc1	equ	0xFE6
 33830                           postdec1	equ	0xFE5
 33831                           plusw1	equ	0xFE3
 33832                           fsr1h	equ	0xFE2
 33833                           fsr1l	equ	0xFE1
 33834                           bsr	equ	0xFE0
 33835                           indf2	equ	0xFDF
 33836                           postinc2	equ	0xFDE
 33837                           postdec2	equ	0xFDD
 33838                           plusw2	equ	0xFDB
 33839                           fsr2h	equ	0xFDA
 33840                           fsr2l	equ	0xFD9
 33841                           status	equ	0xFD8
 33842                           
 33843                           	psect	text169
 33844  000000                     __ptext169:
 33845                           	opt stack 0
 33846                           tosu	equ	0xFFF
 33847                           tosh	equ	0xFFE
 33848                           tosl	equ	0xFFD
 33849                           pclatu	equ	0xFFB
 33850                           pclath	equ	0xFFA
 33851                           tblptru	equ	0xFF8
 33852                           tblptrh	equ	0xFF7
 33853                           tblptrl	equ	0xFF6
 33854                           tablat	equ	0xFF5
 33855                           prodh	equ	0xFF4
 33856                           prodl	equ	0xFF3
 33857                           intcon	equ	0xFF2
 33858                           intcon2	equ	0xFF1
 33859                           intcon3	equ	0xFF0
 33860                           indf0	equ	0xFEF
 33861                           postinc0	equ	0xFEE
 33862                           plusw0	equ	0xFEB
 33863                           fsr0h	equ	0xFEA
 33864                           fsr0l	equ	0xFE9
 33865                           wreg	equ	0xFE8
 33866                           indf1	equ	0xFE7
 33867                           postinc1	equ	0xFE6
 33868                           postdec1	equ	0xFE5
 33869                           plusw1	equ	0xFE3
 33870                           fsr1h	equ	0xFE2
 33871                           fsr1l	equ	0xFE1
 33872                           bsr	equ	0xFE0
 33873                           indf2	equ	0xFDF
 33874                           postinc2	equ	0xFDE
 33875                           postdec2	equ	0xFDD
 33876                           plusw2	equ	0xFDB
 33877                           fsr2h	equ	0xFDA
 33878                           fsr2l	equ	0xFD9
 33879                           status	equ	0xFD8
 33880                           
 33881                           	psect	rparam
 33882  0000                     tosu	equ	0xFFF
 33883                           tosh	equ	0xFFE
 33884                           tosl	equ	0xFFD
 33885                           pclatu	equ	0xFFB
 33886                           pclath	equ	0xFFA
 33887                           tblptru	equ	0xFF8
 33888                           tblptrh	equ	0xFF7
 33889                           tblptrl	equ	0xFF6
 33890                           tablat	equ	0xFF5
 33891                           prodh	equ	0xFF4
 33892                           prodl	equ	0xFF3
 33893                           intcon	equ	0xFF2
 33894                           intcon2	equ	0xFF1
 33895                           intcon3	equ	0xFF0
 33896                           indf0	equ	0xFEF
 33897                           postinc0	equ	0xFEE
 33898                           plusw0	equ	0xFEB
 33899                           fsr0h	equ	0xFEA
 33900                           fsr0l	equ	0xFE9
 33901                           wreg	equ	0xFE8
 33902                           indf1	equ	0xFE7
 33903                           postinc1	equ	0xFE6
 33904                           postdec1	equ	0xFE5
 33905                           plusw1	equ	0xFE3
 33906                           fsr1h	equ	0xFE2
 33907                           fsr1l	equ	0xFE1
 33908                           bsr	equ	0xFE0
 33909                           indf2	equ	0xFDF
 33910                           postinc2	equ	0xFDE
 33911                           postdec2	equ	0xFDD
 33912                           plusw2	equ	0xFDB
 33913                           fsr2h	equ	0xFDA
 33914                           fsr2l	equ	0xFD9
 33915                           status	equ	0xFD8
 33916                           
 33917                           	psect	temp
 33918  000042                     btemp:
 33919                           	opt stack 0
 33920  000042                     	ds	1
 33921  0000                     int$flags	set	btemp
 33922  0000                     wtemp6	set	btemp+1
 33923                           tosu	equ	0xFFF
 33924                           tosh	equ	0xFFE
 33925                           tosl	equ	0xFFD
 33926                           pclatu	equ	0xFFB
 33927                           pclath	equ	0xFFA
 33928                           tblptru	equ	0xFF8
 33929                           tblptrh	equ	0xFF7
 33930                           tblptrl	equ	0xFF6
 33931                           tablat	equ	0xFF5
 33932                           prodh	equ	0xFF4
 33933                           prodl	equ	0xFF3
 33934                           intcon	equ	0xFF2
 33935                           intcon2	equ	0xFF1
 33936                           intcon3	equ	0xFF0
 33937                           indf0	equ	0xFEF
 33938                           postinc0	equ	0xFEE
 33939                           plusw0	equ	0xFEB
 33940                           fsr0h	equ	0xFEA
 33941                           fsr0l	equ	0xFE9
 33942                           wreg	equ	0xFE8
 33943                           indf1	equ	0xFE7
 33944                           postinc1	equ	0xFE6
 33945                           postdec1	equ	0xFE5
 33946                           plusw1	equ	0xFE3
 33947                           fsr1h	equ	0xFE2
 33948                           fsr1l	equ	0xFE1
 33949                           bsr	equ	0xFE0
 33950                           indf2	equ	0xFDF
 33951                           postinc2	equ	0xFDE
 33952                           postdec2	equ	0xFDD
 33953                           plusw2	equ	0xFDB
 33954                           fsr2h	equ	0xFDA
 33955                           fsr2l	equ	0xFD9
 33956                           status	equ	0xFD8


Data Sizes:
    Strings     362
    Constant    567
    Data        178
    BSS         2324
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     76     127
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      0     248
    BANK4           192      0     185
    BANK5           256      0     210
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK5[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_30(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    blinkForSeconds@blickTicks	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blickTicks(BANK3[2]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blickTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK5[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK7[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx(BANK7[132]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK7[50]), PhoneNumber(BANK4[20]), 
		 -> SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[132]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 10
		 -> ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8934 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK5[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4602$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4602$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4602$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4602$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK4[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3055$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3045$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3045$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3021$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3021$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3021$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3021$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2517_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2517_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), 
		 -> NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), 
		 -> NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(COMRAM[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_29(CODE[5]), STR_20(CODE[14]), STR_19(CODE[14]), STR_18(CODE[13]), 
		 -> STR_17(CODE[13]), STR_16(CODE[17]), STR_14(CODE[21]), STR_13(CODE[14]), 
		 -> STR_12(CODE[13]), STR_11(CODE[14]), STR_10(CODE[14]), STR_8(CODE[31]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_4(CODE[11]), STR_3(CODE[7]), 
		 -> STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Sch_MainScheduler->_ScheduleTasks
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _MyApp_Task->_blinkForSeconds
    _initGprsModem->_secondsAppTimer
    _blinkForSeconds->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_MainTask->_Uart_InitUartModule
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  540982
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4410
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4032
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    3786
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2368
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  536572
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  268379
                                             71 BANK0      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  268193
                                             71 BANK0      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      22
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   51775
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   47243
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   27130
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     410
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   26491
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   20484
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8054
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      46
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6469
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5915
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2764
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     733
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     400
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     114
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     115
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0      92
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   58418
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   58418
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41208
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3295
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2752
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    7334
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    6426
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    6177
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2610
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2614
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     488
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     321
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     221
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     177
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          17    17      0   28752
                                             54 BANK0     16    16      0
                _Led_SetLedBlinkTime
                      _Mdm_IsRinging
                    _blinkForSeconds
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (4) _initGprsModem                                        0     0      0   14075
                   _Led_SetLedStatus
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (4) _blinkForSeconds                                      3     1      2   11698
                                             51 BANK0      3     1      2
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   10910
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsRinging                                        1     1      0    2635
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     332
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   58689
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2019
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   14533
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      21    21      0    5902
                                             40 BANK0     21    21      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0      69
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _StringCompare                                       11     5      6     960
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   10787
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8214
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3652
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2514
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13582
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2598
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2598
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   37731
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   18902
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   18829
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteConstString                                3     1      2    2543
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (6) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                          10     4      6    3627
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    1797
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    6471
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    6471
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2439
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1     622
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16270
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1375
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1198
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     976
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5459
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2598
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2447
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      23
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2019
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _Mdm_IsRinging
           _ReceiveEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _Mdm_IsRinging
           _ReceiveEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      D2      16       82.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      F8      12       96.9%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      B9      14       96.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      7F       5       79.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     96D       8        0.0%
DATA                 0      0     C8D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 13 15:23:31 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 504E  
                              _USB_SD_Ptr FC55                      __size_of_TurnOnModem 0046  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 5CDC  
                   ?_LedPulseStateMachine 008A                              ___awdiv@sign 0082  
                  I2c_ReadData@ReadPacket 0080                                        bsr 000FE0  
                  ??_LedBlinkStateMachine 008C                             _USBDeviceInit 1FFE  
                     ___wmul@multiplicand 007F                          i1___wmul@product 001D  
                      __size_of_CDCInitEP 006C                        i2GenerateEvt@Event 0001  
                InitSchedTimer@TmrBConfig 00A4                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0083      USER_USB_CALLBACK_EVENT_HANDLER@event 0089  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B                    I2c_ReadData@ReadStatus 0031  
                                     l202 1F1A                                       l203 1F22  
                                     l205 1F6A                                       l206 1F90  
                                     l208 1F98                                       l160 1E5E  
                                     l209 1FB8                                       l161 1D34  
                                     l162 1E9C                                       l170 1DFC  
                                     l171 1E12                                       l163 1D40  
                                     l315 4186                                       l323 4152  
                                     l164 1D80                                       l316 40FC  
                                     l420 4696                                       l500 4546  
                                     l173 1E16                                       l325 416C  
                                     l421 46B6                                       l237 5CE8  
                                     l174 1E1E                                       l166 1D8E  
                                     l318 4106                                       l422 46C2  
             __end_of_USBStdGetDscHandler 2A2E                                       l510 4518  
                                     l502 44D8                                       l175 1E2A  
                                     l167 1DB6                                       l319 412C  
                                     l423 46CE                                       l511 4508  
                                     l503 44C8                                       l192 1FC2  
                                     l176 1E40                                       l416 46E2  
                                     l424 46DA                                       l512 452C  
                                     l504 44EE                                       l520 540E  
                                     l193 1EA2                                       l169 1DC8  
                                     l417 4688                                       l441 17EC  
                                     l513 450C                                       l505 44CC  
                                     l521 53DA                                       l194 1FFA  
                                     l418 4710                                       l442 15F4  
                                     l514 4512                                       l506 44D2  
                                     l530 2F0A                                       l195 1EAE  
                                     l179 1E4C                                       l419 4690  
                                     l523 53F4                                       l531 2F70  
                                     l196 1EEE                                       l700 5626  
                                     l444 163C                                       l532 2F36  
                                     l445 1684                                       l541 5CA6  
                                     l198 1EFC                                       l446 16CC  
                                     l199 1F10                                       l631 2876  
                                     l447 1714                                       l448 175C  
                                     l528 2F76                                       l633 28EE  
                                     l625 2802                                       l449 17A4  
                                     l529 2F62                                       l538 5CAA  
                                     l546 39FE                                       l651 535E  
                                     l707 578A                                       l627 2826  
                                     l715 56BE                                       l539 5CA2  
                                     l547 3A1A                                       l660 5382  
                                     l652 5358                                       l716 5694  
                                     l709 57A4                                       l629 284E  
                                     l718 56AC                                       l639 5CCE  
                                     l832 5A8E                                       l844 3AD2  
                                     l668 0C44                                       _BDT 000400  
                                     l790 5D04                                       l855 4AB4  
                                     l775 2C70                                       l864 4784  
                                     l856 4A5A                                       l857 4ACE  
                                     l698 560A                                       l858 4A8A  
                                     l867 4796                                       l981 22EA  
                                     l982 231E                                       l983 2390  
                                     l976 23D8                                       l992 23B4  
                                     l977 22AC                                       l979 22D0  
                 secondsAppTimer@isCyclic 008C                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                        ?_blinkForSeconds 0093                   __end_of_HighPriorityIsr 4050  
                          ??_Mdm_MainTask 00A2                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 5916                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1BAA  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CB  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 5688  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 22AA  
           ??_Tmr_RegisterTmr2IsrCallback 007F                                      l1003 54E2  
         InitGprsNetwork@GprsNetInitState 01EF                                      l1004 54B0  
                                    l1100 52B0                                      l1021 38B8  
                                    l1101 52C4                                      l1022 3814  
                             RiSm@Counter 02E2                                      l1007 54C8  
                                    l1025 3824                                      l1202 1078  
                                    l1026 385C                                      l1050 2D3A  
                                    l1211 0F3E                                      l1203 0DD0  
                                    l1027 3880                                      l1220 1054  
                                    l1212 0F78                                      l1060 3048  
                                    l1044 2D68                                      l2100 5154  
                                    l1205 10B0                                      l1213 0FB8  
                                    l1029 38A0                                      l1061 2F88  
                                    l1045 2CD2                                      l1214 0FBC  
                                    l1206 0DE8                                      l2102 5166  
                                    l1142 5BA6                                      l1215 1000  
                                    l1207 0E22                                      l1047 2D7C  
                                    l2103 5178                                      l1240 0646  
                                    l1224 106E                                      l1208 0E96  
                                    l1064 2FA2                                      l1048 2D04  
                                    l1400 5682                                      l1241 0680  
                                    l1209 0E5E                                      l1065 2FB8  
                                    l1081 1B80                                      l2050 24AA  
                                    l2210 58D4                                      l1250 08CA  
                                    l1242 06BA                                      l1090 1B1A  
                                    l1082 19FE                                      l2211 58C0  
                                    l1235 0A54                                      l1251 090E  
                                    l1243 073E                                      l1219 1010  
                                    l1091 1B66                                      l2060 3066  
                                    l2204 4E20                                      l1260 097E  
                                    l1244 06F6                                      l1236 05F4  
                                    l1068 2FFE                                      l3021 51C2  
                                    l2061 313A                                      l2205 4DE0  
                                    l1261 09AA                                      l1085 1A1A  
                                    l1405 5C92                                      l3022 51BA  
                                    l2046 251C                                      l2062 3084  
                                    l2070 41AE                                      l1238 0AB6  
                                    l1246 07F2                                      l1086 1AD0  
                                    l2047 23FE                                      l2071 4244  
                                    l1263 09C4                                      l1255 092A  
                                    l1247 082C                                      l1239 060C  
                                    l1087 1AF4                                      l3031 55D8  
                                    l2048 2532                                      l2064 30F4  
                                    l2072 41BE                                      l1264 0A32  
                                    l1256 096E                                      l1248 0856  
                                    l3032 55D0                                      l1600 1BCA  
                                    l3025 51E2                                      l2049 2426  
                                    l2073 41D0                                      l1249 0890  
                                    l1097 52D6                                      l3026 51EC  
                                    l2090 5A22                                      l2074 41EA  
                                    l3210 1874                                      l1098 529A  
                                    l1274 549C                                      l2082 3734  
                                    l2091 5A10                                      l2059 311E  
                                    l3035 55F0                                      l3051 59C6  
                                    l1611 1C6A                                      l1603 1BF2  
                                    l2083 367C                                      l2171 480E  
                                    l1372 3C4C                                      l2076 41F8  
                                    l1268 0A42                                      l3036 55FA  
                                    l3212 18C8                                      l3052 59B4  
                                    l1700 2AE8                                      l1612 1C76  
                                    l1604 1C02                                      l1365 3C9E  
                                    l2093 5A16                                      l2069 421C  
                                    l2077 4206                                      l1269 0A4A  
                                    l3221 1902                                      l3301 57F4  
                                    l2413 131E                                      l3045 5454  
                                    l1621 1D0A                                      l1613 1CA0  
                                    l1605 1C0A                                      l1277 546A  
                                    l2085 368A                                      l1374 3C68  
                                    l1366 3C00                                      l2094 5A1C  
                                    l2510 42AC                                      l2414 10B8  
                                    l1710 320E                                      l3046 5432  
                                    l1614 1CAC                                      l1606 1C20  
                                    l1390 50E2                                      l1367 3C22  
                                    l1631 3D9E                                      l2431 12F8  
                                    l2423 110E                                      l1623 1D28  
                                    l1607 1C2C                                      l1376 3C84  
                                    l2512 42DA                                      l3232 5DB0  
                                    l3224 1914                                      l3208 185C  
                                    l2360 01AE                                      l2416 10DE  
                                    l1720 29AE                                      l1800 335E  
                                    l1616 1CC0                                      l2168 4822  
                                    l1377 3C90                                      l1369 3C44  
                                    l2513 42E8                                      l1633 3DC8  
                                    l3225 1980                                      l3305 5D98  
                                    l2353 05D2                                      l2361 019C  
                                    l2433 1318                                      l2425 112E  
                                    l1801 337C                                      l1609 1C54  
                                    l2169 47A8                                      l2441 5D6C  
                                    l3218 18D8                                      l2354 00E2  
                                    l2418 10FA                                      l1650 378E  
                                    l1626 554C                                      l1722 29B6  
                                    l1730 3E4E                                      l1802 3398  
                                    l2099 518A                                      l1395 577C  
                                    l1635 3E24                                      l3227 19A6  
                                    l3219 18E8                                      l2371 0392  
                                    l2427 114E                                      l1627 555C  
                                    l1811 13F6                                      l1723 2A06  
                                    l1619 1CE6                                      l1387 50E8  
                                    l2524 5332                                      l3228 19E0  
                                    l3252 32D0                                      l2372 0326  
                                    l3180 4F14                                      l1820 14D0  
                                    l1716 2A16                                      l1708 319A  
                                    l1388 50A8                USBConfigureEndpoint@handle 0083  
                                    l2197 5238                                      l3253 3288  
                                    l2373 02B4                                      l2357 0152  
                                    l3181 4F0A                                      l2429 128E  
                                    l1813 143E                                      l1725 2A0E  
                                    l1717 2912                                      l1733 3EDE  
                                    l2461 5BDA                                      l2198 520E  
                                    l1910 4596                                      l3254 32A0  
                                    l3246 3248                                      l2374 0250  
                                    l2358 01E2                                      l2366 01D0  
                                    l1662 4490                                      l1822 1532  
                                    l1814 1440                                      l1734 3E60  
                                    l2438 5D72                                      l2199 5234  
                                    l1911 45C2                                      l3255 32B0  
                                    l3247 3242                                      l2391 045E  
                                    l2383 0402                                      l1823 153E  
                                    l1815 145C                                      l1719 2926  
                                    l1735 3E66                                      l1591 20B0  
                                    l1743 5534                                      l1751 582C  
                                    l2528 5864                                      l1912 459C  
                                    l2392 0578                                      l2384 03D2  
                                    l2376 0304                                      l3192 5718  
                                    l1824 15BA                                      l1808 137E  
                                    l1736 3E86                                      l1656 43DC  
                                    l1672 2E38                                      l1744 5532  
                                    l1752 582A                                      l2560 4924  
                                    l3249 3270                                      l2377 02C6  
                                    l3177 4EFA                                      l3193 5712  
                                    l1681 341C                                      l1817 14EA  
                                    l1809 1384                                      l1729 3EC8  
                                    l3186 595C                                      l3258 330E  
                                    l2394 04B4                                      l2570 35B8  
                                    l3178 4EF4                                      l1690 3492  
                                    l1770 4D5E                                      l1658 43F6  
                                    l2458 5BE0                                      l1907 45E8  
                                    l3187 5952                                      l2395 0478  
                                    l2571 35D2                                      l1683 3426  
                                    l1827 1570                                      l1819 14B2  
                                    l1667 2E0E                                      l1587 2048  
                                    l2459 5BD2                                      l2555 4936  
                                    l3284 5A00                                      l2572 3634  
                                    l1668 2DB6                                      l2556 48EC  
                                    l2389 041E                                      l2581 3654  
                                    l1685 348A                                      l1781 3D5C  
                                    l1829 15C6                                      l1757 4670  
                                    l1589 2070                                      l2750 351E  
                                    l3294 5C2E                                      l2398 0524  
                                    l1950 2614                                      l1942 25AE  
                                    l1686 3450                                      l1758 466A  
                                    l1598 1BD6                                      l2558 4906  
                                    l2399 0570                                      l2575 35D8  
                                    l1943 25B2                                      l1935 255A  
                                    l1791 33B8                                      l1599 1BCC  
                                    l1776 3CF4                                      l1696 2A8A  
                                    l1768 4D10                                      l1792 3328  
                                    l2753 356E                                      l3289 5B0E  
                                    l2577 3620                                      l1953 2666  
                                    l1945 260A                                      l1937 2568  
                                    l1689 34CC                                      l1777 3CFA  
                                    l1697 2A64                                      l2770 4984  
                                    l2754 3530                                      l2578 3602  
                                    l1954 266A                                      l1946 25D2  
                                    l1778 3D76                                      l1890 3F5E  
                                    l1794 3332                                      l2595 4FB0  
                                    l2747 34DC                                      l1939 259C  
                                    l1779 3D3C                                      l1699 2B02  
                                    l1891 3F76                                      l1795 3338  
                                    l2596 4FC4                                      l2780 4AF6  
                                    l2756 35A2                                      l2748 34D6  
                                    l2940 4094                                      l1796 333E  
                                    l2773 49AC                                      l2941 40D6  
                                    l1949 264C                                      l1885 3F80  
                                    l1797 3352                                      l2774 49B6  
                                    l2766 495E                                      l2782 4B0C  
                                    l2934 55A2                                      l1886 3F1A  
                                    l1798 3358                                      l2775 49C4  
                                    l2767 496E                                      l2783 4B04  
                                    l1983 4E3C                                      l1991 4E36  
                                    l1975 5B76                                      l2928 5C72  
                                    l1888 3F32                                      l1976 5B66  
                              _Led1OutSts 01FB                                      l2769 498C  
                                    l1889 3F40                                      l2786 4B24  
                                    l2938 4058                                      l1978 5B6C  
                                    l2787 4B2E                                      l2779 4AEA  
                                    l2972 4A32                                      l2788 4B3C  
                                    l2973 4A40                                      l1989 4E30  
                                    l2968 49FE                                      l2969 49F2  
                                    l9118 58F4                                      l7630 3426  
                                    l8448 5432                                      l8972 469C  
                                    STR_1 FFE5                                      STR_2 FF81  
                                    STR_3 FFDE                                      STR_4 FFC2  
                                    STR_5 FFCD                                      STR_6 FFEF  
                                    STR_7 FFEA                                      STR_8 FEB6  
                                    STR_9 FEEA                                _Led2OutSts 01F9  
                              _Led3OutSts 01F7                                      u5170 3478  
                                    u5330 2978                                      u5340 29A8  
                                    u7005 5DF2                                      u7006 5DF4  
                                    u5190 34BA                                      u5360 29FA  
                                    u5177 346E                                      u5337 296E  
                                    u5347 299E                                      u5197 34B0  
                                    u8005 53E4                                      u8006 53E6  
                                    u6095 5E46                                      u5367 29F0  
                                    u8015 53F0                                      u6096 5E48  
                                    u8016 53F2                                      u8025 53FE  
                                    u8026 5400                                      u8035 540A  
                                    u7180 5244                                      u8036 540C  
                   ??_USBCtrlTrfTxService 007D                                      u5920 4A02  
                                    u9061 4DC2                                      u9311 4800  
                                    _UCFG 000F39                                      u9321 4818  
                                    u6850 4B10                                      _UEP0 000F26  
                                    _UEP1 000F27                                      u6790 4990  
                                    _UEIE 000F37                                      u6885 53A8  
                                    u7925 4BAA                                      u9365 5AD0  
                __size_of_Uart_Uart1RxIsr 0010                                      u9366 5AD2  
                                    u7935 5E5A                                      u9375 5ADC  
                                    u7936 5E5C                                      u9376 5ADE  
                                    u9385 5AE8                                      u9386 5AEA  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u7995 5DDC                                      u7996 5DE0  
                              _AlarmEvent 01F6                            ?_StopCondition 0001  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 031C  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 5F0A  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0032               Led_SetLedBlinkTime@OnTimeMs 007D  
  USBStdFeatureReqHandler@current_ep_data 0094                                      _pDst 02D4  
                    _NewStringMdmTerminal 003A                                      _atoi 34D4  
                                    _main 5ECC                           ??_Mdm_IsRinging 0081  
                                    _itoa 557C                          ?_SetUartBaudRate 0096  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 0314                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0042                                      _utoa 4050  
                                    _xtoi 3232                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 5F12               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 4682               I2cSlv_SendI2cMsg@DataLenght 0083  
                    ??_Mcu_StartSystemPll 007D               __end_of_Uart_WriteStringLen 56C8  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00CC   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 5DCC  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
              __end_of_USBCheckStdRequest 33FC                           _Rtcm_SystemDate 0300  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 5E70  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 0086                            _GetElapsedTime 3A6E  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091                       StringCopy@SourceStr 007D  
             __end_of_OsAlrm_ClearOsAlarm 50A6                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
                     __size_of_I2cDummyTx 001C                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 5784  
                     ??_Rtcc_GetRtccValue 007D                           __end_of_Welcome FDD8  
                       ?_UpdateOsCounters 0001                   Uart_ClearRxBuffer@Index 007D  
                              _GetSmsText 00DA                                     l12106 356A  
                                   l11504 3192                                     l13122 2D34  
                                   l13108 2CCA                                     l11460 59B4  
                                   l12510 2040                                     l10816 5CE8  
                                   l14322 4E56                                     l12538 20A8  
                                   l13292 0FB0                                     l14324 4E86  
                                   l13608 1CB8                                     l13458 09A4  
                                   l12924 42E8                                     l12984 2F76  
                                   l13956 4BC2                                     l13968 2B5C  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 49CE  
                                   STR_10 FF57                                     STR_11 FF65  
                                   STR_12 FFA9                                     STR_20 FF49  
                                   STR_13 FF73                                     STR_21 FE8C  
                                   STR_30 FFD7                                     STR_14 FED5  
                                   STR_15 FF13                                     STR_23 FEFF  
                                   STR_24 FFF4                                     STR_16 FF38  
                                   STR_25 FFF4                                     STR_17 FF8F  
                                   STR_26 FEB3                                     STR_18 FF9C  
                                   STR_27 FF27                                     STR_28 FFB6  
                         __end_of___awmod 4B46                                     STR_29 FFE5  
       __size_of_USBCtrlEPServiceComplete 0100                           __end_of___lldiv 4A52  
                                   ?_utoa 008A                                     u11020 1864  
                                   u10060 31C6                                     u10320 55DC  
                                   u10240 1554                                     u11050 189E  
                                   u12110 4164                                     u11070 18AE  
                                   u12120 417E                                     u11305 0B14  
                                   u10290 51C6                                     u12050 366C  
                                   u11315 0B9E                                     u11420 4E18  
                                   u13100 263C                           ___awdiv@divisor 007F  
                                   u10470 5B0A                                     u13110 2654  
                                   u11335 0C78                                     u11360 5634  
                                   u12320 2D82                                     u10560 57D8  
                                   u11345 0C98                                     u10730 5354  
                                   u12170 2346                                     u10650 284A  
                                   u10490 59F0                    __end_of_USBDeviceTasks 1D32  
                                   u11427 4E0E                                     u11355 0D22  
                                   u12251 2C8E                                     u13107 2632  
                                   u11380 57B2                                     u10580 57E4  
                                   u11460 2064                                     u12261 2CA0  
                                   u12190 235A                                     u10830 4572  
                                   u11295 0AF4                                     ?_xtoi 0083  
                                   u13240 52F8                                     u13080 25FA  
                                   u11490 210C                                     u13087 25F0  
                                   u11930 04BE                                     u13428 4BF4  
                                   u13381 48E2                                     u13429 4C22  
               ?_USBCtrlEPServiceComplete 0001                                     u13468 2C24  
                                   u13469 2C52                                     u11990 4F3C  
                                   u11997 4F32                                     u12990 1D2E  
                         __end_of___lwdiv 51F6                           __end_of___lwmod 5604  
               TurnOnModem@TurnOnMdmState 0029                        ??_UpdateOsCounters 0019  
                                   i1l742 216C                                     i1l747 22A8  
                                   i2l680 3996                                     i2l681 38E6  
                                   i2l690 3930                                     i2l682 38F4  
                                   i2l686 3916                                     i2l688 3988  
                                   i2l689 3950                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03AF  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01EB  
                                   _USTAT 000F64                   __end_of_LedStateMachine 424A  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00BE  
         __end_of_USBCtrlEPAllowDataStage 442A                             _StringCompare 51F6  
                                   _sd000 FE88                                     _sd001 FE41  
                                   _sd002 FE1B            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3746  
                             _ApnLenLocal 01F3                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_isalpha 5A0A  
                         __end_of_isdigit 5C7A                                     atoi@a 0088  
                                   atoi@s 0083                               _ClearBuffer 58AC  
                         __end_of_isspace 5B16                I2c_WriteData@I2cWriteState 0038  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 5C36                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 5B64  
               __end_of_Rtcc_GetRtccValue 4716                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 4C94                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 50A6  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                                   wtemp6 0043                           __end_of_sprintf 367A  
                         __end_of_tolower 5D9C                       __end_of_Mcu_Int0Isr 5F3A  
                     __end_of_Mcu_Int1Isr 5F36                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 5DB4  
                  __end_of_GetElapsedTime 3B36                     __end_of_UartSetConfig 4F9E  
                  __size_of_initGprsModem 0050               Rtcc_SetRtccValue@RtccPtrVal 0088  
                   __end_of_Term_MainTask 5D84                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 3064                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 5AC2  
                          _InitSchedTimer 5A3A                           __initialization 268A  
                        __end_of_MdmCntSm 41A2                      __end_of_I2c_ReadData 1FFE  
                 Rtcc_RtcConfig@RtcConfig 007E                      __end_of_I2cSendMsgSm 3CC2  
                 LedStateMachine@LedPulse 0095                                _MyApp_Task 48C0  
                            __end_of_atoi 35AC                              __end_of_main 5ED8  
                     StringCompare@Result 0085                              __end_of_itoa 55C0  
                  ??_LedPulseStateMachine 008D                     _control_signal_bitmap 01E3  
                            __end_of_utoa 40FA                              __end_of_xtoi 3318  
                __end_of_Rtcm_SetRtccDate 514E                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 007D                          __end_of_ReadByte 5EF6  
                    Term_MainSm@TermDelay 03CA                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE76                 __size_of_USBCtrlEPService 0094  
                                  ??_atoi 0085                                    ??_main 00AC  
            __size_of_Uart_InitUartModule 030C                                    ??_itoa 0099  
                                  ??_utoa 0090                                    ??_xtoi 0085  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                        __end_of_TmrBInit 4558                                _ReceiveEvt 5A68  
        Uart_WriteStringLen@StringToWrite 0080                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                          ?_StringCompare 007D                          __end_of_Terminal 05EC  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 4A52                              _cdc_mem_type 01E4  
                      ??_Mcu_ConfigExtInt 007D                         CheckModem@Timeout 03EB  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00B8                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 39A6                _Uart_MdmGsmGprsReadService 38DC  
              __end_of_UsbDevice_MainTask 5B88                           getsUSBUSART@len 0086  
                   __end_of_UartWriteByte 5CDC                          ??_LowPriorityIsr 0068  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1395 58A6                               _GenerateEvt 5DB4  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                 Uart_Uart1RxIsr@UartRxData 002C  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC5D  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                               _ConnTimeout 02F5  
                __end_of_Rtcc_AlarmConfig 4D00                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 5A68                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 5F2A  
                              _UartConfig 0326                      __end_of_Mdm_MainTask 52E8  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00CA  
                           ??_Term_MainSm 00A7                                    _Relay1 01DE  
                                  _Relay2 01DD                                    _Relay3 01DC  
                                  _Relay4 01DB                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 54AE  
                                  _SmsLen 00D1                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 53D4                                    ___lmul 4F9E  
                    _I2cSlv_ReceiveI2cMsg 5648                        TurnOnModem@Counter 02DC  
                            ?_putUSBUSART 0083                                    ___wmul 5B16  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                                 ??___awmod 0081  
                      __size_of_SendSmsSm 01B8                         ?_Rtcm_GetRtccDate 0081  
                     _Led_SetLedBlinkTime 514E                                 ??___lldiv 0091  
                    __end_of_getsUSBUSART 45EE                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
                       _USBEnableEndpoint 5538           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                                  _memcpy 5420                    __size_of_HttpGetMethod 04D0  
                                  _memset 59AA                                    clear_0 272A  
                                  clear_1 273C                                    clear_2 2748  
                                  clear_3 2754                                    clear_4 2760  
                                  clear_5 276C                                    clear_6 2778  
                                  clear_7 2784                                    clear_8 2790  
                                  clear_9 279C                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02E6                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01F0                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 0026  
                      ?_USBEnableEndpoint 0085                                    _strcat 4EEA  
                                  _strcpy 5948                                    _strlen 5708  
                                  _strtol 181C                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 57FE  
                HttpGetMethod@UartMessage 0100                             _initGprsModem 52E8  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                              _CDCTxService 2544  
                     ModemEvtParser@F9090 04EF                       ModemEvtParser@F9086 03BE  
                     ModemEvtParser@F9088 03B9                       MdmCntSm@MdmCntState 002E  
                            MyApp_Task@on 00A2                          ?_LedStateMachine 008F  
                            __mediumconst FC54                                 ??_isspace 007D  
                  __size_of_CheckTxStatus 000A                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 5F22  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 0039  
                 __end_of_I2cSlv_MainTask 50FA                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 5F36  
                             _Mcu_Int1Isr 5F32                      ?_Led_SetLedBlinkTime 007D  
                               ??_sprintf 0083                                 ??_tolower 007D  
                  __size_of_ScheduleTasks 0122                               _CtrlTrfData 000438  
                               ??_toupper 007D                       ModemEvtParser@Match 009B  
                    _controlTransferState 00C9                     __end_ofi1_GenerateEvt 5E0E  
                   __end_of_Rtcm_MainTask 4834                __size_of_Rtcc_GetRtccValue 0094  
                      _ExtInt1IsrCallback 02E4                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 27BA  
                  Tmr_TmrBPrSet@Prescaler 0098                              __pbssBIGRAMl 0AC8  
                  __end_of_EnableReceiver 5F2E                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 011A               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                __size_of_USBStallHandler 0044                           ?_InitSchedTimer 0001  
              __end_of_UartTxBufferStatus 5386           I2cSlv_QueryI2cData@TimeoutTimer 033B  
                    Terminal@FormatOption 02ED                           __CFG_IOL1WAY$ON 000000  
                              _StringCopy 4DCC                            __pcstackBANK10 0A00  
                   I2cDummyTx@DummyBuffer 01FD                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 0032  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02E0                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 557C  
                             _InitNetwork 00D8                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE8C  
                           __end_of_sd001 FE5F                             __end_of_sd002 FE41  
                            __pidataBANK1 5F3A                              __pidataBANK2 5EBE  
                            __pidataBANK3 56C8                              __pidataBANK4 5E24  
                            __pidataBANK5 5248                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 5604  
                     __size_of_CheckModem 0152                __end_of_Uart_ClearRxBuffer 5916  
           __size_of_USBConfigureEndpoint 0098                  __size_of_InitializeTasks 0070  
                      __end_of_I2cDummyTx 5D50               __end_of_USBCtrlTrfInHandler 3D84  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 007D  
                    StringCompare@String2 007F                        ??_UartSetConfigLow 007D  
                     __end_of_Term_MainSm 135A                     LedStateMachine@LedOut 0091  
                   LedStateMachine@LedSts 008F                        LedStateMachine@Led 0099  
                               ?i1___wmul 0019                            ?_initGprsModem 0001  
                     __end_of_RtccIrqInit 5DF8                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 0083             I2cSlv_QueryI2cData@I2cOpState 01EA  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 0040  
                              _SystemInit 597A                                _cdc_notice 044A  
                   __end_of_Tmr_TmrBPrSet 2F7C                       __end_of_Rtcc_RtcIsr 5F32  
                              _cdc_rx_len 00C2                         __end_of_MsgFormat FD4F  
                              _cdc_tx_len 00C0                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 58AC                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01E5                            ClearBuffer@Len 007F  
                         _secondsAppTimer 424A                                 ?_MdmCntSm 0001  
                   _Irq_InitIntController 5AC2                    _USBStdGetStatusHandler 3E42  
                       __end_of_SendSmsSm 1BAA       Mcu_StartSystemPll@PllStartupCounter 007D  
                          _GprsNetworkSts 01F2                            _Rtcc_RtcConfig 42EC  
                              __pbssBANK0 00AC                                __pbssBANK1 01C9  
                              __pbssBANK2 02C8                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                           _HttpGetMethod 05EC                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 07C4                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 5E24                  __end_of_Uart_WriteString 57C2  
                               ?_ReadByte 0001                         MyApp_Task@Options 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                   __size_of_I2c_ReadData 015E                     __size_of_I2cSendMsgSm 00C4  
                     __end_of_Tmr_Tmr2Isr 5BD0                               _SetBaudRate 5386  
               initGprsModem@modemCounter 03B7               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01F4                               _pBDTEntryIn 00B2  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 2E8E  
                               ?_TmrBInit 007D                             _CheckTxStatus 5EF6  
                           ??_TurnOnModem 0080                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                                 ?_Terminal 0001  
                                 ?___lmul 007D                              _Led_MainTask 367A  
                          _Rtcc_UnlockRtc 5E70                              _I2cBusStatus 01EC  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 2B52                 Uart_InitUartModule@Module 00A1  
                   MyApp_Task@I2cStsReady 01D5                     __end_of_I2c_WriteData 1EA0  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE76                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 45EE                     __end_of_UpdateSchFlag 5D34  
                              _ep_data_in 02D1                           _I2cWriteDataEvt 00D6  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 10B6                                   ?_strcpy 007D  
                                 ?_strlen 007D                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 2B52  
                       __end_of_WriteByte 5EEC                        _USBCheckStdRequest 3318  
                       _configDescriptor1 FDD8                       Wdg_MainTask@Options 0001  
                             _PhoneNumber 04C6               __end_of_USBCtrlTrfTxService 34D4  
                     _USBStdSetCfgHandler 314C                         triggerRelay@F8966 03C8  
                 __size_of_ConfigureModem 00CA                    I2cSlv_QueryI2cData@Ret 01E9  
                         __CFG_WDTPS$2048 000000                              _I2cSetConfig 5A96  
                                 _SPBRGH1 000F7F                                   _SPBRGH2 000F7D  
                  __end_of_Rtcc_RtcConfig 438C                                   _SSP2ADD 000F74  
                              ??_GetSmsSm 0087                                   _SSP2BUF 000F75  
                            _I2c_ReadData 1EA0                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm 3BFE  
                        ?_I2cSlv_MainTask 0001                        GsmGprsTerminal@SMS 01E1  
          __end_of_Pm_DsReleasePinControl 5F18                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 0088                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00DE                  __size_of_blinkForSeconds 003A  
                                 _UIRbits 000F62                     CheckModem@CheckMdmSts 002A  
               __size_of_UpdateOsCounters 0010                                   _Led1Sts 01FC  
                                 _Led2Sts 01FA                                   _Led3Sts 01F8  
              __end_of_Sch_SchmIntService 5EBE                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 0088                             _cdc_trf_state 00C1  
                              ??_ReadByte 007D                       _Uart_InitUartModule 0ABC  
                   __end_of_Mdm_DrvMainFn 5F1E                          _ComChecCompleted 002B  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C8                     __end_of_Mdm_IsRinging 5BAC  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CB  
                   __size_of_getsUSBUSART 0096                                   _RelayB1 01E0  
                                 _RelayB2 01DF                               ?_StringCopy 007D  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 00D5  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 4C28                    __end_of_Rtcc_UnlockRtc 5E80  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 5E4C                               _Term_MainSm 10B6  
 Uart_WriteConstString@ConstStringToWrite 0080                                   _Welcome FD4F  
              __size_of_USBEnableEndpoint 0044                            ?_ScheduleTasks 0001  
                              ??_Terminal 00A2                         _Sch_MainScheduler 5CFA  
                  ?_Uart_WriteConstString 0080                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 5DE2  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 4948  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 4AD4  
                                 ___lldiv 49CE                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                                   ___lwdiv 51A2  
                       ??_USBStallHandler 007D                                   ___lwmod 55C0  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
                      ?_Sch_MainScheduler 0001                           ??_initGprsModem 0093  
                             _Rtcc_RtcIsr 5F2E                      __size_of_putUSBUSART 0022  
                                 __pcinit 268A                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CC  
                     __end_of_TurnOnModem 54F4                           __size_of_memset 0030  
                               _I2cConfig 0351                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FE1B                                   __ramtop 0F00  
                   MyApp_Task@countRelay1 01FE                     MyApp_Task@countRelay2 03C6  
                             Terminal@Len 03AB                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 5ECC                                   __ptext1 597A  
                                 __ptext2 5ED8                                   __ptext3 5F12  
                                 __ptext4 5CDC                                   __ptext5 5D50  
                                 __ptext6 5AC2                                   __ptext7 5A3A  
                                 __ptext8 39A6                                   __ptext9 2E8E  
                                 _inPipes 00AC                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 42EC  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 59DA                                   _isdigit 5C58  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00AC  
                             ?_SystemInit 0001                                   clear_10 27A8  
                                 clear_11 27B4                          ___awmod@dividend 007D  
                       ??_InitializeTasks 00A7                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 01D3       __end_of_Tmr_RegisterTmr2IsrCallback 5EE2  
             _Tmr_RegisterTmr2IsrCallback 5ED8                                   _isspace 5AEC  
                            _Mdm_MainTask 5298                                   _isupper 5C14  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                    Term_MainSm@FwkBuildStr 013A  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 2154  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC5D  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 5BAC  
                                 _sprintf 35AC                                   _tolower 5D84  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 5EA0  
                        _HttpGetDataLocal 03A2                    Term_MainSm@FwkMajorStr 0132  
                          __pintcode_body 3FA4                                   _toupper 5D9C  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 27BA                              _getsUSBUSART 4558  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00D9  
             ?_Uart_MdmGsmGprsReadService 0004             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 007D                    _MainSystemTimebaseFlag 02F4  
           i1I2cSlv_SendI2cMsg@DataLenght 001F                        __end_of_USB_SD_Ptr FC5B  
     Irq_InitIntController@PerInt_LowPInt 007E                                   memcpy@d 0083  
                                 memcpy@n 0081                                   memcpy@s 0085  
                     _pBDTEntryEP0OutNext 00BA                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC54  
                          _ModemEvtParser 2C74                                   int_func 3FA4  
                               i1u1333_28 228A                                 i1u1333_29 229E  
                               i1u1350_28 5BBC                                 i1u1329_20 216A  
                         _USB1msTickCount 0318           _dummy_encapsulated_cmd_response 0376  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
                           MyApp_Task@off 00A0                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 5D18                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 15EE  
                       _Rtcc_SetRtcStatus 5DCC                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 5948                             StringCopy@Len 0081  
                       ?_MdmHttp_MainTask 0001                   _USBCtrlEPAllowDataStage 438C  
                      _UsbDevice_MainTask 5B64                              _Mcu_ClearWdg 5F1E  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0085                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 2D8E  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01ED  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 23FC  
                         _RtccIsrCallback 02E8          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F3             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                _USBStatusStageEnabledFlag1 00C5  
              _USBStatusStageEnabledFlag2 00C4                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 5BF2                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0308  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 5C9C  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 007F  
                        __CFG_CPUDIV$OSC1 000000                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02EA                          _HttpGetMethodSts 01F1  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                      _BothEP0OutUOWNsSet 01E6                           ??_HttpGetMethod 009D  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0037  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 2D8E                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                                 _USTATcopy 00D3  
                   __end_of_StopCondition 5F26                  __size_of_HighPriorityIsr 4048  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 036D  
                               _Led2Blink 0364                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 035B              __end_of_USBTransferOnePacket 3E42  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 0391  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 181C                 __end_of_Rtcc_SetRtcStatus 5DE2  
                               _Led2Pulse 038B                                 _Led3Pulse 0385  
                       _I2cSlv_SendI2cMsg 5746           SetBaudRate@DesiredI2cBusClockHz 0096  
                       ??_blinkForSeconds 0095                           ??_ScheduleTasks 00A7  
                          _Tmr_TmrBConfig 39A6                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 5E5E                         _OsAlrm_SetOsAlarm 3B36  
                    Terminal@TermRxBuffer 0550                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 53D4  
                     __CFG_MSSP7B_EN$MSK7 000000                               _TurnOnModem 54AE  
                            ??_MyApp_Task 0096                      Terminal@TermTxBuffer 0100  
                               _GetMethod 00D7                    _USBCtrlTrfSetupHandler 4834  
                      ?_OsAlrm_SetOsAlarm 0083                     __end_of_USBDeviceInit 2154  
   __end_of_USBIncrement1msInternalTimers 5C14    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 5BF2                            __end_of___lmul 4FF6  
                          _CheckAckStatus 5F00                            __end_of___wmul 5B3E  
                     ??_I2cSlv_SendI2cMsg 0084                    __size_of_UartWriteByte 0020  
                          __end_of_memcpy 5468                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002D                            __end_of_memset 59DA  
                      _UartTxBufferStatus 5338                       ??_OsAlrm_SetOsAlarm 008B  
                        __CFG_DSWDTEN$OFF 000000                              ??_ReceiveEvt 007F  
                       _USBBusIsSuspended 01E7                                 _Mdm_SmsRx 0700  
                        ?_secondsAppTimer 008A                         ??_SetUartBaudRate 0098  
                 __end_of_Uart_Uart1RxIsr 5EB0                                 _MdmStatus 00CF  
                          __end_of_strcat 4F46                            __end_of_strcpy 597A  
                          __end_of_strlen 5746                            __end_of_strtol 19F2  
                     start_initialization 268A                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 3812  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 58E2  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0454                               _cdc_data_tx 0784  
            __end_of_USBConfigureEndpoint 44C2           __end_of_USBStdFeatureReqHandler 15EE  
                               _MsgFormat FC5F                        __end_of_MyApp_Task 4948  
                        _UpdateOsCounters 5E90                           ?_ModemEvtParser 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 00E8  
       __end_of_USBCtrlEPAllowStatusStage 3812                 __end_of_I2cSlv_SendI2cMsg 5784  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 4682                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 5E90  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3A6E                                 _SendSmsSm 19F2  
               __end_of_OsAlrm_SetOsAlarm 3BFE                    __end_of_Tmr_TmrBIrqSet 5420  
                               _TaskTable 0582                                 _RingEvent 00DC  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D2                         __size_of_ReadByte 000A  
                               _RtcConfig 03B3                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 4F46  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 5A96  
                  _pBDTEntryEP0OutCurrent 00BC                             _Term_MainTask 5D6A  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                             _isxdigit$6401 0081  
                  __end_of_CheckAckStatus 5F0A                                  ??___lmul 0085  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2900                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 4AD4                        HttpGetMethod@Index 01C8  
                             __pdataBANK1 01FE                               __pdataBANK2 02F3  
                             __pdataBANK3 03B9                               __pdataBANK4 04E5  
                             __pdataBANK5 0582                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 051C                                  ??_memcpy 0083  
                                ??_memset 0083                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 007D                      ??_Uart_ClearRxBuffer 007D  
     __size_of_Uart_MdmGsmGprsReadService 00CA                                  ??_strcat 0081  
                                ??_strcpy 0081                                  ??_strlen 007F  
                  __size_of_Rtcm_MainTask 008E                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 51A2                    __end_of_ConfigureModem 38DC  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D4  
          __end_of_USBStdGetStatusHandler 3EF4                             WriteByte@Byte 007D  
                      __end_of_TaskNumber FC5F                               __pbssCOMRAM 0023  
                 GetElapsedTime@TimeValue 008D                     __end_of_StringCompare 5248  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
            __size_of_USBCtrlTrfInHandler 00C2                           RiSm@MdmDrvState 002F  
                            _SetAckStatus 5E38                              _isalpha$6391 0081  
                  GenerateEvt@EventStatus 007F                                 _WriteByte 5EE2  
                            _isdigit$6125 007E                      ?_USBStdGetDscHandler 0001  
           UpdateSchFlag@InterruptCounter 02DE                 SetUartBaudRate@UartConfig 0096  
                     _Uart_WriteStringLen 5688       InitGprsNetwork@GprsNetInitNextState 00CE  
                    MyApp_Task@blickTicks 03F6                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 5CBC                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 5838              __end_of_LedBlinkStateMachine 2544  
                             sprintf@flag 0083                           _USBStallHandler 54F4  
                              ?_SendSmsSm 0001                              _pBDTEntryOut 030E  
              __size_of_Rtcc_SetRtccValue 022E                      __size_of_GenerateEvt 0018  
                         ?_Tmr_TmrBConfig 00A0                __size_of_Rtcc_SetRtcStatus 0016  
                        _Mcu_ConfigExtInt 5D50                __end_of_USBCheckCDCRequest 3FA4  
            __size_ofi1_I2cSlv_SendI2cMsg 003A                       _OsAlrm_ClearOsAlarm 504E  
                         ?_Tmr_TmrBIrqSet 007D                   ??_Uart_WriteConstString 0082  
                          ?_UartSetConfig 0001                      __end_of_Tmr_StartTmr 5CBC  
                            ??_StringCopy 0083                          _Led_SetLedStatus 5A0A  
                       ??_HighPriorityIsr 0007                            ?_Term_MainTask 0001  
                        ___lwdiv@dividend 0083                              ?_Term_MainSm 0001  
                    _I2cSlv_I2cReadMsgSts 5C7A                          GenerateEvt@Event 007D  
                  __size_of_Tmr_TmrBPrSet 00EE                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008             Uart_WriteString@StringToWrite 0080  
                           __pmediumconst FC54                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 007E  
                       __size_of_isxdigit 003C                                  ?___awdiv 007D  
                               __ptext100 54AE                                 __ptext101 19F2  
                               __ptext110 4F9E                                 __ptext102 5688  
                               __ptext111 4FF6                                 __ptext103 2C74  
                               __ptext120 5338                                 __ptext112 22AA  
                               __ptext104 58E2                                 __ptext121 4DCC  
                               __ptext113 40FA                                 __ptext105 51F6  
                               __ptext130 23FC                                 __ptext122 4E8C  
                               __ptext114 5F0A                                 __ptext106 2F7C  
                           Terminal@Index 00A6                                 __ptext131 51A2  
                               __ptext123 4716                                 __ptext115 0DC8  
                               __ptext107 3812                                 __ptext140 1D32  
                               __ptext132 3B36                                 __ptext124 3A6E  
                               __ptext116 05EC                                 __ptext108 0ABC  
                               __ptext141 1EA0                                 __ptext133 5B16  
                               __ptext125 5E5E                                 __ptext117 5784  
                               __ptext109 27C8                                 __ptext150 5F00  
                               __ptext142 5EE2                                 __ptext134 4B46  
                               __ptext126 58AC                                 __ptext118 5604  
                               __ptext143 5F22                                 __ptext135 5386  
                               __ptext127 41A2                                 __ptext119 5CBC  
                               __ptext160 5872                                 __ptext152 5BAC  
                               __ptext144 5F26                                 __ptext136 49CE  
                               __ptext128 3064                                 __ptext161 5DF8  
                               __ptext153 5EB0                                 __ptext145 5E38  
                               __ptext137 5A96                                 __ptext129 5A0A  
                               __ptext154 5D18                                 __ptext146 5EEC  
                               __ptext138 3BFE                                 __ptext163 5EA0  
                               __ptext155 5E90                                 __ptext147 5DB4  
                               __ptext139 5A68                                 __ptext164 38DC  
                               __ptext156 2154                                 __ptext148 5F2A  
                               __ptext165 5E0E                                 __ptext157 5B3E  
                               __ptext149 5EF6                                 __ptext166 5F2E  
                               __ptext158 504E                                 __ptext167 5F32  
                               __ptext159 5D34                                 __ptext168 5F36  
                               __ptext169 0000                                  ?___awmod 007D  
                      _Sch_SchmIntService 5EB0                           _InitializeTasks 4BB8  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 0346                          ??_Rtcc_RtcConfig 0080  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 0397  
                     Mdm_MainTask@Options 0001                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 3D84                           ?_ConfigureModem 0001  
                 ??_Irq_InitIntController 007F                      MyApp_Task@isRelay1On 01D8  
                    MyApp_Task@isRelay2On 01D7        Uart_MdmGsmGprsReadService@UartData 0004  
                             _I2cTxBuffer 0440                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 039D            InitializeTasks@ActiveTaskIndex 00A9  
                    __CFG_RTCOSC$T1OSCREF 000000                                  ?_isspace 0001  
                    InitGprsNetwork@Index 0132                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 02EC                           Terminal@Payload 0500  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 4D66  
                              ?_WriteByte 0001                     ??_USBStdGetDscHandler 007D  
                        _Rtcm_GetRtccDate 4D66                ConfigureModem@DelayCounter 02D8  
                      __end_of_StringCopy 4E2E                               _ep_data_out 02CE  
                                _ALRMVALH 000F8F                                  _ALRMVALL 000F8E  
                        ___lwdiv@quotient 0088                              ?_Tmr_Tmr2Isr 0001  
                            _SendSmsEvent 00DD                           Terminal@SwTimer 04DA  
                                ?_sprintf 007D                                  ?_tolower 0001  
               __size_of_Rtcm_SetRtccDate 0054              __size_of_USBCtrlTrfRxService 0124  
           USBConfigureEndpoint@direction 007D                                  ?_toupper 0001  
                                _I2cReady 01DA                            ?_UartWriteByte 007D  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 02DA  
                        _OsTmr_StartTimer 4E8C                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 007D                             i1_GenerateEvt 5DF8  
              __end_of_Mcu_StartSystemPll 5CFA                              _PhoneNumbLen 00D0  
                            _Wdg_MainTask 5BD0                             _Rtcm_MainTask 47A6  
                          ___wmul@product 0081                          SendSmsSm@SwTimer 03E0  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 0028  
         HttpGetMethod@GetMethodNextState 00CD                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 4B46                         _IncomingCallEvent 003F  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 59AA                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0086                                  _UEP0bits 000F26  
           __size_of_I2cSlv_ReceiveI2cMsg 0040                _USBDeferINDataStagePackets 00C3  
                      ?_I2c_InitI2cModule 00A2                     ??_Uart_WriteStringLen 0083  
                                _SSP2CON1 000F72                                  _SSP2CON2 000F71  
             __size_of_USBCheckStdRequest 00E4                      Rtcm_MainTask@Options 0001  
            __end_of_OsTmr_GetTimerStatus 47A6                                  _UCONbits 000F65  
                                _SSP2STAT 000F73                  ModemEvtParser@CompareIdx 009C  
                    _USBConfigureEndpoint 442A          __size_of_USBStdFeatureReqHandler 0294  
                   SetUartBaudRate@Module 0099            __end_of_OsAlrm_ProcessOsAlarms 22AA  
                   ??_OsAlrm_ClearOsAlarm 0019                         ___wmul@multiplier 007D  
                   ?_USBTransferOnePacket 007D                                  i1___wmul 5B3E  
                   __end_of_initGprsModem 5338                       ??_I2c_InitI2cModule 00A4  
               __size_of_Rtcc_AlarmConfig 006C                __end_of_InitModemInterface 5F12  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 0089  
                  __size_of_Mdm_DrvMainFn 0006                              _RemoteWakeup 01E8  
                                _ApnLocal 02D6                            _StartCondition 5F26  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0081  
             HttpGetMethod@GetMethodState 01EE                             _Tmr_TmrBPrSet 2E8E  
                       _NewStringReceived 003C                              _isspace$6394 007E  
                        _UartSetConfigLow 4FF6                                  _GetSmsSm 2F7C  
                 __end_of_USBStallHandler 5538                      Mdm_DrvMainFn@Options 0001  
                         _blinkForSeconds 5838                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03D5                                  _MdmCntSm 40FA  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 269E                                 copy_data1 26BE  
                               copy_data2 26DE                                 copy_data3 2716  
            __end_of_LedPulseStateMachine 314C                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 3232  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 5EEC                             i2_GenerateEvt 5E0E  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                      __end_of_device_dsc FE88                 __end_of_I2c_InitI2cModule 4BB8  
                                _MsgReady FE5F                           ??_Term_MainTask 00A7  
                 __end_of_InitializeTasks 4C28                initGprsModem@isInitialized 01D9  
                 ?_USBCtrlTrfSetupHandler 0001                                _ANCON1bits 000F49  
                                _RxBuffer 0C58                   USBStdGetStatusHandler@p 007E  
                                __Hrparam 0000                                  _TmrBInit 44C2  
                    __size_of_SetBaudRate 004E                              ?_TurnOnModem 0001  
                                _TxBuffer 0322                            _LowPriorityIsr 0018  
                               memcpy@tmp 0087                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DB  
                         _SetUartBaudRate 27C8              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1D32                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 5EA0  
                         MyApp_Task@F8990 03C4                          __size_of___lldiv 0084  
                         MyApp_Task@F8993 03C2                           MyApp_Task@F8996 0320  
                         MyApp_Task@F8999 04E5                         Terminal@SlaveAddr 02EE  
                     OsTmr_Wait@WaitTimer 009B                          __size_of___lwdiv 0054  
                    Tmr_TmrBPrSet@TmrNumb 009B                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                           _UpdateSchFlag 5D18                       __end_of_putUSBUSART 5C58  
                             _line_coding 037E                              _Rtcc_LockRtc 5E80  
                    _LedBlinkStateMachine 23FC                    __end_of_StartCondition 5F2A  
                          ??_CDCTxService 0084                  ??_Pm_DsReleasePinControl 007D  
                  SendSmsSm@SendSms_State 01F5                 Rtcm_GetRtccDate@LocalDate 008A  
                I2c_WriteData@WriteStatus 0035                              _isupper$6397 007E  
                              strcat@from 007F                   I2c_ReadData@DataCounter 0033  
                          ?_Tmr_TmrBPrSet 0096                          ??_ModemEvtParser 0088  
                        _GetOsTickCounter 5E5E                          __size_of_isalpha 0030  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 0188  
                         ___lwdiv@divisor 0085                              Terminal@Addr 03A7  
                ModemEvtParser@RingString 0097                               ??_WriteByte 007D  
                        __size_of_isspace 002A                           ___lwdiv@counter 0087  
                         MyApp_Task@phone 0096                                  __ptext10 53D4  
                                __ptext11 5C9C                                  __ptext20 5B64  
                                __ptext12 44C2                                  __ptext21 5468  
                                __ptext13 5CFA                           ??_UartWriteByte 007E  
                                __ptext30 5916                                  __ptext22 5298  
                                __ptext14 2B52                                  __ptext31 54F4  
                                __ptext23 50A6                                  __ptext15 4BB8  
                                __ptext40 314C                                  __ptext32 5BF2  
                                __ptext24 5F18                                  __ptext16 48C0  
                                __ptext41 3E42                                  __ptext33 1FFE  
                                __ptext25 5BD0                                  __ptext17 5D6A  
                                __ptext50 2A2E                                  __ptext42 2900  
                                __ptext34 45EE                                  __ptext26 5E4C  
                                __ptext18 47A6                                  __ptext51 3746  
                                __ptext43 135A                                  __ptext35 5420  
                                __ptext27 5F1E                                  __ptext19 367A  
                                __ptext60 00D0                                  __ptext52 3CC2  
                                __ptext44 4E2E                                  __ptext36 4834  
                                __ptext28 1BAA                                  __ptext61 3232  
                                __ptext53 33FC                                  __ptext45 3EF4  
                                __ptext37 2D8E                                  __ptext29 57FE  
                                __ptext70 5C36                                  __ptext62 5D84  
                                __ptext54 2544                                  __ptext46 4C28  
                                __ptext38 438C                                  __ptext71 557C  
                                __ptext63 57C2                                  __ptext55 10B6  
                                __ptext47 5538                                  __ptext39 3318  
                                __ptext80 5648                                  __ptext72 4050  
                                __ptext64 181C                                  __ptext56 5708  
                                __ptext48 442A                                  __ptext81 5C7A  
                                __ptext73 55C0                                  __ptext65 5D9C  
                                __ptext57 4EEA                                  __ptext49 4D00  
                                __ptext90 5DCC                                  __ptext82 50FA  
                                __ptext74 4558                                  __ptext66 5AEC  
                                __ptext58 35AC                                  __ptext91 42EC  
                                __ptext83 5E70                                  __ptext75 3D84  
                                __ptext67 59DA                                  __ptext59 59AA  
                                __ptext92 5DE2                                  __ptext84 15EE  
                                __ptext76 34D4                                  __ptext68 5C14  
                                __ptext93 4C94                                  __ptext85 4AD4  
                                __ptext77 5C58                                  __ptext69 5948  
                                __ptext94 52E8                                  __ptext86 4948  
                                __ptext78 4A52                                  __ptext95 5838  
                                __ptext87 5E80                                  __ptext79 5746  
                                __ptext96 424A                                  __ptext88 4D66  
                                __ptext97 5B88                                  __ptext89 4682  
                                __ptext98 514E                                  __ptext99 4F46  
                        __size_of_isupper 0022                                _I2cDummyTx 5D34  
                  Tmr_TmrBIrqSet@Priority 007D                     __end_of_HttpGetMethod 0ABC  
                __size_of_InitGprsNetwork 02EE                              _SSP2CON2bits 000F71  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 007F  
                       _Mmd_RingIndicator 0030                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0019               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 007E  
          __end_of_USBCtrlTrfSetupHandler 48C0                             __size_of_main 000C  
                       ?_USBCtrlEPService 0001                             __size_of_itoa 0044  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 5F00  
                           _Mdm_DrvMainFn 5F18                        ??_USBCtrlEPService 0097  
                                _isxdigit 57C2                             _Mdm_IsRinging 5B88  
                     _USBCtrlTrfInHandler 3CC2                  I2c_ReadData@I2cReadState 0034  
                   __end_of_ScheduleTasks 2C74                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                 blinkForSeconds@blickTicks 0093  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 4D00  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 0085                 _USBCtrlEPAllowStatusStage 3746  
               MyApp_Task@I2cTxBufferTest 00A4                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 00AB                                strtol@sign 0093  
                         Term_MainSm@Data 0494                            _PhoneNumberLen 0324  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 008A  
                 __end_of_blinkForSeconds 5872                      __size_of_Rtcc_RtcIsr 0004  
                     i1_I2cSlv_SendI2cMsg 5872                  __end_of_Mcu_ConfigExtInt 5D6A  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00C6  
                CDCTxService@byte_to_send 0085             I2c_WriteData@TentativeCounter 0036  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                UartWriteByte@ByteToWrite 007D                              _Tmr_StartTmr 5C9C  
                __end_of_Led_SetLedStatus 5A3A                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 007D                                  memcpy@s1 007F  
              I2cSlv_I2cReadMsgSts@Result 0081             USBCtrlTrfTxService@byteToSend 007D  
                           ?_I2cSetConfig 0001                                  itoa@base 0097  
             i1I2cSlv_SendI2cMsg@TxBuffer 001C                             ?_I2c_ReadData 0080  
                           ?_I2cSendMsgSm 0001                                  isalpha@c 0082  
                  __size_of_Mcu_SetWdgSts 0012                                  isdigit@c 007F  
                                memset@p1 007D                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 50FA  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                          ??_Tmr_TmrBIrqSet 007F  
                __size_of_secondsAppTimer 00A2                                  intlevel1 0000  
                                intlevel2 0000                      _OsTmr_GetTimerStatus 4716  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0156  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4E8C  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 4E2E                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                            MyApp_Task@test 01D6  
                 __end_of_SetUartBaudRate 2900                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                  blinkForSeconds@seconds 0095                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 0092                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 5648                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                  __end_of_Rtcm_GetRtccDate 4DCC  
                             _putUSBUSART 5C36                       _USBCtrlTrfRxService 2A2E  
                        ??_ConfigureModem 00A2                    Rtcc_SetRtccValue@Value 0085  
                      _USBWakeFromSuspend 57FE                   _USBStdFeatureReqHandler 135A  
                __end_of_OsTmr_StartTimer 4EEA                      _LedPulseStateMachine 3064  
                      _USBCheckCDCRequest 3EF4                       _USBCtrlTrfTxService 33FC  
                     RtccIrqInit@Priority 007D                                  utoa@base 008E  
                              _RTCCFGbits 000F3F               __size_of_Uart_ClearRxBuffer 0034  
                        _Rtcc_AlarmConfig 4C94                           ??_Tmr_TmrBPrSet 009A  
                                sprintf@c 0086                                  sprintf@f 007F  
                                tolower@c 007D                                  strcat@cp 0081  
                                strcat@to 007D                       ?_USBWakeFromSuspend 0001  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0091  
              InitGprsNetwork@GprsInitSts 01FF                           ___lwmod@divisor 007F  
             GsmGprsTerminal@FirstRecFlag 01E2                     ??_USBCtrlTrfInHandler 007E  
                                strcpy@cp 0081                                  strlen@cp 0081  
                                strcpy@to 007D                 UsbDevice_MainTask@Options 0001  
                   _USBAlternateInterface 02F1                           ___lwmod@counter 0081  
                           ?_Mdm_MainTask 0001                            ??_I2cSetConfig 007D  
          __size_of_Irq_InitIntController 002A                                  toupper@c 007D  
         SetUartBaudRate@BaudRateRegister 009A                       ?_USBCheckCDCRequest 0001  
                        _MdmHttp_MainTask 5468                            ??_I2c_ReadData 0082  
                          ??_I2cSendMsgSm 0084             __end_of_Irq_InitIntController 5AEC  
                   ReceiveEvt@EventStatus 0080              ?_Tmr_RegisterTmr2IsrCallback 007D  
                     USBEnableEndpoint@ep 0088                           _endpoint_number 00C8  
                              _WDTCONbits 000FC0                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                  UartTxBufferStatus@Module 007E  
                   ?_OsTmr_GetTimerStatus 0095             SetUartBaudRate@DivisionFactor 009C  
          I2cSlv_ReceiveI2cMsg@DataLenght 0083                             ??_GenerateEvt 007F  
                         _LedStateMachine 41A2          Uart_MdmGsmGprsReadService@Module 0001  
                         TmrBInit@TmrNumb 0080                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              ??_Uart_MdmGsmGprsReadService 0005  
                           _StopCondition 5F22                     ??i1_I2cSlv_SendI2cMsg 0020  
                  Led_SetLedStatus@LedSts 007D              _USBStatusStageTimeoutCounter 00C7  
                        Mdm_IsRinging@Ret 0081                      ??_USBWakeFromSuspend 0091  
              USBTransferOnePacket@handle 0082                         ??_InitGprsNetwork 009E  
                     __end_of_ClearBuffer 58E2                      __end_of_CDCTxService 268A  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC5B                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 0027                             ?_Mcu_ClearWdg 0001  
                           _Mcu_SetWdgSts 5E4C  
