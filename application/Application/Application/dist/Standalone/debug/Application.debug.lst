

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 27 09:09:23 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	text0,global,reloc=2,class=CODE,delta=1
    38                           	psect	text1,global,reloc=2,class=CODE,delta=1
    39                           	psect	text2,global,reloc=2,class=CODE,delta=1
    40                           	psect	text3,global,reloc=2,class=CODE,delta=1
    41                           	psect	text4,global,reloc=2,class=CODE,delta=1
    42                           	psect	text5,global,reloc=2,class=CODE,delta=1
    43                           	psect	text6,global,reloc=2,class=CODE,delta=1
    44                           	psect	text7,global,reloc=2,class=CODE,delta=1
    45                           	psect	text8,global,reloc=2,class=CODE,delta=1
    46                           	psect	text9,global,reloc=2,class=CODE,delta=1
    47                           	psect	text10,global,reloc=2,class=CODE,delta=1
    48                           	psect	text11,global,reloc=2,class=CODE,delta=1
    49                           	psect	text12,global,reloc=2,class=CODE,delta=1
    50                           	psect	text13,global,reloc=2,class=CODE,delta=1
    51                           	psect	text14,global,reloc=2,class=CODE,delta=1
    52                           	psect	text15,global,reloc=2,class=CODE,delta=1
    53                           	psect	text16,global,reloc=2,class=CODE,delta=1
    54                           	psect	text17,global,reloc=2,class=CODE,delta=1
    55                           	psect	text18,global,reloc=2,class=CODE,delta=1
    56                           	psect	text19,global,reloc=2,class=CODE,delta=1
    57                           	psect	text20,global,reloc=2,class=CODE,delta=1
    58                           	psect	text21,global,reloc=2,class=CODE,delta=1
    59                           	psect	text22,global,reloc=2,class=CODE,delta=1
    60                           	psect	text23,global,reloc=2,class=CODE,delta=1
    61                           	psect	text24,global,reloc=2,class=CODE,delta=1
    62                           	psect	text25,global,reloc=2,class=CODE,delta=1
    63                           	psect	text26,global,reloc=2,class=CODE,delta=1
    64                           	psect	text27,global,reloc=2,class=CODE,delta=1
    65                           	psect	text28,global,reloc=2,class=CODE,delta=1
    66                           	psect	text29,global,reloc=2,class=CODE,delta=1
    67                           	psect	text30,global,reloc=2,class=CODE,delta=1
    68                           	psect	text31,global,reloc=2,class=CODE,delta=1
    69                           	psect	text32,global,reloc=2,class=CODE,delta=1
    70                           	psect	text33,global,reloc=2,class=CODE,delta=1
    71                           	psect	text34,global,reloc=2,class=CODE,delta=1
    72                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text36,global,reloc=2,class=CODE,delta=1
    74                           	psect	text37,global,reloc=2,class=CODE,delta=1
    75                           	psect	text38,global,reloc=2,class=CODE,delta=1
    76                           	psect	text39,global,reloc=2,class=CODE,delta=1
    77                           	psect	text40,global,reloc=2,class=CODE,delta=1
    78                           	psect	text41,global,reloc=2,class=CODE,delta=1
    79                           	psect	text42,global,reloc=2,class=CODE,delta=1
    80                           	psect	text43,global,reloc=2,class=CODE,delta=1
    81                           	psect	text44,global,reloc=2,class=CODE,delta=1
    82                           	psect	text45,global,reloc=2,class=CODE,delta=1
    83                           	psect	text46,global,reloc=2,class=CODE,delta=1
    84                           	psect	text47,global,reloc=2,class=CODE,delta=1
    85                           	psect	text48,global,reloc=2,class=CODE,delta=1
    86                           	psect	text49,global,reloc=2,class=CODE,delta=1
    87                           	psect	text50,global,reloc=2,class=CODE,delta=1
    88                           	psect	text51,global,reloc=2,class=CODE,delta=1
    89                           	psect	text52,global,reloc=2,class=CODE,delta=1
    90                           	psect	text53,global,reloc=2,class=CODE,delta=1
    91                           	psect	text54,global,reloc=2,class=CODE,delta=1
    92                           	psect	text55,global,reloc=2,class=CODE,delta=1
    93                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text58,global,reloc=2,class=CODE,delta=1
    96                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text60,global,reloc=2,class=CODE,delta=1
    98                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text70,global,reloc=2,class=CODE,delta=1
   108                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text74,global,reloc=2,class=CODE,delta=1
   112                           	psect	text75,global,reloc=2,class=CODE,delta=1
   113                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text78,global,reloc=2,class=CODE,delta=1
   116                           	psect	text79,global,reloc=2,class=CODE,delta=1
   117                           	psect	text80,global,reloc=2,class=CODE,delta=1
   118                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text83,global,reloc=2,class=CODE,delta=1
   121                           	psect	text84,global,reloc=2,class=CODE,delta=1
   122                           	psect	text85,global,reloc=2,class=CODE,delta=1
   123                           	psect	text86,global,reloc=2,class=CODE,delta=1
   124                           	psect	text87,global,reloc=2,class=CODE,delta=1
   125                           	psect	text88,global,reloc=2,class=CODE,delta=1
   126                           	psect	text89,global,reloc=2,class=CODE,delta=1
   127                           	psect	text90,global,reloc=2,class=CODE,delta=1
   128                           	psect	text91,global,reloc=2,class=CODE,delta=1
   129                           	psect	text92,global,reloc=2,class=CODE,delta=1
   130                           	psect	text93,global,reloc=2,class=CODE,delta=1
   131                           	psect	text94,global,reloc=2,class=CODE,delta=1
   132                           	psect	text95,global,reloc=2,class=CODE,delta=1
   133                           	psect	text96,global,reloc=2,class=CODE,delta=1
   134                           	psect	text97,global,reloc=2,class=CODE,delta=1
   135                           	psect	text98,global,reloc=2,class=CODE,delta=1
   136                           	psect	text99,global,reloc=2,class=CODE,delta=1
   137                           	psect	text100,global,reloc=2,class=CODE,delta=1
   138                           	psect	text101,global,reloc=2,class=CODE,delta=1
   139                           	psect	text102,global,reloc=2,class=CODE,delta=1
   140                           	psect	text103,global,reloc=2,class=CODE,delta=1
   141                           	psect	text104,global,reloc=2,class=CODE,delta=1
   142                           	psect	text105,global,reloc=2,class=CODE,delta=1
   143                           	psect	text106,global,reloc=2,class=CODE,delta=1
   144                           	psect	text107,global,reloc=2,class=CODE,delta=1
   145                           	psect	text108,global,reloc=2,class=CODE,delta=1
   146                           	psect	text109,global,reloc=2,class=CODE,delta=1
   147                           	psect	text110,global,reloc=2,class=CODE,delta=1
   148                           	psect	text111,global,reloc=2,class=CODE,delta=1
   149                           	psect	text112,global,reloc=2,class=CODE,delta=1
   150                           	psect	text113,global,reloc=2,class=CODE,delta=1
   151                           	psect	text114,global,reloc=2,class=CODE,delta=1
   152                           	psect	text115,global,reloc=2,class=CODE,delta=1
   153                           	psect	text116,global,reloc=2,class=CODE,delta=1
   154                           	psect	text117,global,reloc=2,class=CODE,delta=1
   155                           	psect	text118,global,reloc=2,class=CODE,delta=1
   156                           	psect	text119,global,reloc=2,class=CODE,delta=1
   157                           	psect	text120,global,reloc=2,class=CODE,delta=1
   158                           	psect	text121,global,reloc=2,class=CODE,delta=1
   159                           	psect	text122,global,reloc=2,class=CODE,delta=1
   160                           	psect	text123,global,reloc=2,class=CODE,delta=1
   161                           	psect	text124,global,reloc=2,class=CODE,delta=1
   162                           	psect	text125,global,reloc=2,class=CODE,delta=1
   163                           	psect	text126,global,reloc=2,class=CODE,delta=1
   164                           	psect	text127,global,reloc=2,class=CODE,delta=1
   165                           	psect	text128,global,reloc=2,class=CODE,delta=1
   166                           	psect	text129,global,reloc=2,class=CODE,delta=1
   167                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=1
   168                           	psect	text131,global,reloc=2,class=CODE,delta=1
   169                           	psect	text132,global,reloc=2,class=CODE,delta=1
   170                           	psect	text133,global,reloc=2,class=CODE,delta=1
   171                           	psect	text134,global,reloc=2,class=CODE,delta=1
   172                           	psect	text135,global,reloc=2,class=CODE,delta=1
   173                           	psect	text136,global,reloc=2,class=CODE,delta=1
   174                           	psect	text137,global,reloc=2,class=CODE,delta=1
   175                           	psect	text138,global,reloc=2,class=CODE,delta=1
   176                           	psect	text139,global,reloc=2,class=CODE,delta=1
   177                           	psect	text140,global,reloc=2,class=CODE,delta=1
   178                           	psect	text141,global,reloc=2,class=CODE,delta=1
   179                           	psect	text142,global,reloc=2,class=CODE,delta=1
   180                           	psect	text143,global,reloc=2,class=CODE,delta=1
   181                           	psect	text144,global,reloc=2,class=CODE,delta=1
   182                           	psect	text145,global,reloc=2,class=CODE,delta=1
   183                           	psect	text146,global,reloc=2,class=CODE,delta=1
   184                           	psect	text147,global,reloc=2,class=CODE,delta=1
   185                           	psect	text148,global,reloc=2,class=CODE,delta=1
   186                           	psect	text149,global,reloc=2,class=CODE,delta=1
   187                           	psect	text150,global,reloc=2,class=CODE,delta=1
   188                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   189                           	psect	text152,global,reloc=2,class=CODE,delta=1
   190                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   191                           	psect	text154,global,reloc=2,class=CODE,delta=1
   192                           	psect	text155,global,reloc=2,class=CODE,delta=1
   193                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   194                           	psect	text157,global,reloc=2,class=CODE,delta=1
   195                           	psect	text158,global,reloc=2,class=CODE,delta=1
   196                           	psect	text159,global,reloc=2,class=CODE,delta=1
   197                           	psect	text160,global,reloc=2,class=CODE,delta=1
   198                           	psect	text161,global,reloc=2,class=CODE,delta=1
   199                           	psect	text162,global,reloc=2,class=CODE,delta=1
   200                           	psect	text163,global,reloc=2,class=CODE,delta=1
   201                           	psect	text164,global,reloc=2,class=CODE,delta=1
   202                           	psect	text165,global,reloc=2,class=CODE,delta=1
   203                           	psect	text166,global,reloc=2,class=CODE,delta=1
   204                           	psect	text167,global,reloc=2,class=CODE,delta=1
   205                           	psect	text168,global,reloc=2,class=CODE,delta=1
   206                           	psect	text169,global,reloc=2,class=CODE,delta=1
   207                           	psect	text170,global,reloc=2,class=CODE,delta=1
   208                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   209                           	psect	text172,global,reloc=2,class=CODE,delta=1
   210                           	psect	text173,global,reloc=2,class=CODE,delta=1
   211                           	psect	text174,global,reloc=2,class=CODE,delta=1
   212                           	psect	text175,global,reloc=2,class=CODE,delta=1
   213                           	psect	text176,global,reloc=2,class=CODE,delta=1
   214                           	psect	text177,global,reloc=2,class=CODE,delta=1
   215                           	psect	text178,global,reloc=2,class=CODE,delta=1
   216                           	psect	text179,global,reloc=2,class=CODE,delta=1
   217                           	psect	text180,global,reloc=2,class=CODE,delta=1
   218                           	psect	text181,global,reloc=2,class=CODE,delta=1
   219                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   220                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   221                           	psect	text183,global,reloc=2,class=CODE,delta=1
   222                           	psect	text184,global,reloc=2,class=CODE,delta=1
   223                           	psect	text185,global,reloc=2,class=CODE,delta=1
   224                           	psect	text186,global,reloc=2,class=CODE,delta=1
   225                           	psect	text187,global,reloc=2,class=CODE,delta=1
   226                           	psect	text188,global,reloc=2,class=CODE,delta=1
   227                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   228                           	psect	text189,global,reloc=2,class=CODE,delta=1
   229                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   230                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   231                           	dabs	1,0x400,48,_BDT
   232                           	dabs	1,0x438,8,_CtrlTrfData
   233                           	dabs	1,0x430,8,_SetupPkt
   234  0000                     
   235                           ; Version 1.45
   236                           ; Generated 16/11/2017 GMT
   237                           ; 
   238                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   239                           ; All rights reserved.
   240                           ; 
   241                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   242                           ; 
   243                           ; Redistribution and use in source and binary forms, with or without modification, are
   244                           ; permitted provided that the following conditions are met:
   245                           ; 
   246                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   247                           ;        conditions and the following disclaimer.
   248                           ; 
   249                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   250                           ;        of conditions and the following disclaimer in the documentation and/or other
   251                           ;        materials provided with the distribution.
   252                           ; 
   253                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   254                           ;        software without specific prior written permission.
   255                           ; 
   256                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   257                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   258                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   259                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   260                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   261                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   262                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   263                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   264                           ; 
   265                           ; 
   266                           ; Code-generator required, PIC18F46J50 Definitions
   267                           ; 
   268                           ; SFR Addresses
   269  0000                     
   270                           	psect	idataBANK0
   271  0068F6                     __pidataBANK0:
   272                           	opt stack 0
   273                           
   274                           ;initializer for findEmptySpot@currentPosition
   275  0068F6  10                 	db	16
   276                           
   277                           ;initializer for isNumberInMemory@currentPosition
   278  0068F7  10                 	db	16
   279                           
   280                           	psect	idataBANK1
   281  0068F8                     __pidataBANK1:
   282                           	opt stack 0
   283                           
   284                           ;initializer for _isMemoryEmpty
   285  0068F8  01                 	db	1
   286                           
   287                           ;initializer for InitGprsNetwork@GprsInitSts
   288  0068F9  01                 	db	1
   289                           
   290                           	psect	idataBANK2
   291  00686E                     __pidataBANK2:
   292                           	opt stack 0
   293                           
   294                           ;initializer for Terminal@EchoOption
   295  00686E  01                 	db	1
   296                           
   297                           ;initializer for _MainSystemTimebaseFlag
   298  00686F  01                 	db	1
   299                           
   300                           ;initializer for _ConnTimeout
   301  006870  00                 	db	0
   302  006871  01                 	db	1
   303  006872  0000               	dw	0
   304  006874  0000               	dw	0
   305  006876  0000               	dw	0
   306  006878  0000               	dw	0
   307  00687A  00                 	db	0
   308                           
   309                           	psect	idataBANK3
   310  005FB8                     __pidataBANK3:
   311                           	opt stack 0
   312                           
   313                           ;initializer for ModemEvtParser@F9112
   314  005FB8  2B                 	db	43
   315  005FB9  43                 	db	67
   316  005FBA  4D                 	db	77
   317  005FBB  54                 	db	84
   318  005FBC  49                 	db	73
   319                           
   320                           ;initializer for ModemEvtParser@F9110
   321  005FBD  2B                 	db	43
   322  005FBE  43                 	db	67
   323  005FBF  4C                 	db	76
   324  005FC0  49                 	db	73
   325  005FC1  50                 	db	80
   326                           
   327                           ;initializer for ModemEvtParser@F9108
   328  005FC2  52                 	db	82
   329  005FC3  49                 	db	73
   330  005FC4  4E                 	db	78
   331  005FC5  47                 	db	71
   332                           
   333                           ;initializer for MyApp_Task@F9038
   334  005FC6  63                 	db	99
   335  005FC7  61                 	db	97
   336  005FC8  74                 	db	116
   337                           
   338                           ;initializer for triggerRelay@F9027
   339  005FC9  50                 	db	80
   340  005FCA  00                 	db	0
   341                           
   342                           ;initializer for Term_MainSm@TermDelay
   343  005FCB  01                 	db	1
   344  005FCC  01                 	db	1
   345  005FCD  0000               	dw	0
   346  005FCF  0000               	dw	0
   347  005FD1  0000               	dw	0
   348  005FD3  0000               	dw	0
   349  005FD5  00                 	db	0
   350                           
   351                           ;initializer for _ConnWait
   352  005FD6  00                 	db	0
   353  005FD7  01                 	db	1
   354  005FD8  0000               	dw	0
   355  005FDA  0000               	dw	0
   356  005FDC  0000               	dw	0
   357  005FDE  0000               	dw	0
   358  005FE0  00                 	db	0
   359                           
   360                           ;initializer for SendSmsSm@SwTimer
   361  005FE1  01                 	db	1
   362  005FE2  01                 	db	1
   363  005FE3  0000               	dw	0
   364  005FE5  0000               	dw	0
   365  005FE7  0000               	dw	0
   366  005FE9  0000               	dw	0
   367  005FEB  00                 	db	0
   368                           
   369                           ;initializer for CheckModem@Timeout
   370  005FEC  00                 	db	0
   371  005FED  01                 	db	1
   372  005FEE  0000               	dw	0
   373  005FF0  0000               	dw	0
   374  005FF2  0000               	dw	0
   375  005FF4  0000               	dw	0
   376  005FF6  00                 	db	0
   377                           
   378                           	psect	idataBANK4
   379  006756                     __pidataBANK4:
   380                           	opt stack 0
   381                           
   382                           ;initializer for ModemEvtParser@F9114
   383  006756  43                 	db	67
   384  006757  61                 	db	97
   385  006758  6C                 	db	108
   386  006759  6C                 	db	108
   387  00675A  20                 	db	32
   388  00675B  52                 	db	82
   389  00675C  65                 	db	101
   390  00675D  61                 	db	97
   391  00675E  64                 	db	100
   392  00675F  79                 	db	121
   393                           
   394                           ;initializer for MyApp_Task@receivedNumber
   395  006760  2B                 	db	43
   396  006761  33                 	db	51
   397  006762  39                 	db	57
   398  006763  30                 	db	48
   399  006764  31                 	db	49
   400  006765  32                 	db	50
   401  006766  33                 	db	51
   402  006767  34                 	db	52
   403  006768  35                 	db	53
   404  006769  36                 	db	54
   405  00676A  37                 	db	55
   406  00676B  38                 	db	56
   407  00676C  39                 	db	57
   408                           
   409                           	psect	idataBANK5
   410  005A9C                     __pidataBANK5:
   411                           	opt stack 0
   412                           
   413                           ;initializer for _TaskTable
   414  005A9C  D4                 	db	low _Mdm_DrvMainFn
   415  005A9D  68                 	db	high _Mdm_DrvMainFn
   416  005A9E  00                 	db	0
   417  005A9F  0000               	dw	0
   418  005AA1  000A               	dw	10
   419  005AA3  00                 	db	0
   420  005AA4  54                 	db	low _I2cSlv_MainTask
   421  005AA5  58                 	db	high _I2cSlv_MainTask
   422  005AA6  00                 	db	0
   423  005AA7  0000               	dw	0
   424  005AA9  0001               	dw	1
   425  005AAB  00                 	db	0
   426  005AAC  EC                 	db	low _Mdm_MainTask
   427  005AAD  5A                 	db	high _Mdm_MainTask
   428  005AAE  00                 	db	0
   429  005AAF  0000               	dw	0
   430  005AB1  0001               	dw	1
   431  005AB3  00                 	db	0
   432  005AB4  9E                 	db	low _MdmHttp_MainTask
   433  005AB5  5D                 	db	high _MdmHttp_MainTask
   434  005AB6  00                 	db	0
   435  005AB7  0000               	dw	0
   436  005AB9  0001               	dw	1
   437  005ABB  00                 	db	0
   438  005ABC  76                 	db	low _UsbDevice_MainTask
   439  005ABD  64                 	db	high _UsbDevice_MainTask
   440  005ABE  00                 	db	0
   441  005ABF  0000               	dw	0
   442  005AC1  0001               	dw	1
   443  005AC3  00                 	db	0
   444  005AC4  06                 	db	low _Wdg_MainTask
   445  005AC5  65                 	db	high _Wdg_MainTask
   446  005AC6  00                 	db	0
   447  005AC7  0000               	dw	0
   448  005AC9  0064               	dw	100
   449  005ACB  00                 	db	0
   450  005ACC  DE                 	db	low _Led_MainTask
   451  005ACD  3B                 	db	high _Led_MainTask
   452  005ACE  00                 	db	0
   453  005ACF  0000               	dw	0
   454  005AD1  0032               	dw	50
   455  005AD3  00                 	db	0
   456  005AD4  1C                 	db	low _Rtcm_MainTask
   457  005AD5  4E                 	db	high _Rtcm_MainTask
   458  005AD6  00                 	db	0
   459  005AD7  0000               	dw	0
   460  005AD9  0064               	dw	100
   461  005ADB  00                 	db	0
   462  005ADC  C0                 	db	low _Term_MainTask
   463  005ADD  66                 	db	high _Term_MainTask
   464  005ADE  00                 	db	0
   465  005ADF  0000               	dw	0
   466  005AE1  0001               	dw	1
   467  005AE3  00                 	db	0
   468  005AE4  C8                 	db	low _MyApp_Task
   469  005AE5  0D                 	db	high _MyApp_Task
   470  005AE6  00                 	db	0
   471  005AE7  0000               	dw	0
   472  005AE9  0064               	dw	100
   473  005AEB  00                 	db	0
   474                           
   475                           	psect	mediumconst
   476  00FC10                     __pmediumconst:
   477                           	opt stack 0
   478  00FC10  00                 	db	0
   479  00FC11                     MyApp_Task@F9033:
   480                           	opt stack 0
   481  00FC11  00                 	db	0
   482  00FC12  00                 	db	0
   483  00FC13  00                 	db	0
   484  00FC14  00                 	db	0
   485  00FC15  00                 	db	0
   486  00FC16  00                 	db	0
   487  00FC17  00                 	db	0
   488  00FC18  00                 	db	0
   489  00FC19  00                 	db	0
   490  00FC1A  00                 	db	0
   491  00FC1B  00                 	db	0
   492  00FC1C  00                 	db	0
   493  00FC1D  00                 	db	0
   494  00FC1E                     __end_ofMyApp_Task@F9033:
   495                           	opt stack 0
   496  00FC1E                     _USB_SD_Ptr:
   497                           	opt stack 0
   498  00FC1E  5B                 	db	low _sd000
   499  00FC1F  FE                 	db	high _sd000
   500  00FC20  14                 	db	low _sd001
   501  00FC21  FE                 	db	high _sd001
   502  00FC22  EE                 	db	low _sd002
   503  00FC23  FD                 	db	high _sd002
   504  00FC24                     __end_of_USB_SD_Ptr:
   505                           	opt stack 0
   506  00FC24                     MyApp_Task@F9036:
   507                           	opt stack 0
   508  00FC24  4E                 	db	78
   509  00FC25  55                 	db	85
   510  00FC26  4D                 	db	77
   511  00FC27  2B                 	db	43
   512  00FC28                     __end_ofMyApp_Task@F9036:
   513                           	opt stack 0
   514  00FC28                     parseCommand@F9021:
   515                           	opt stack 0
   516  00FC28  44                 	db	68
   517  00FC29  45                 	db	69
   518  00FC2A  4C                 	db	76
   519  00FC2B                     __end_ofparseCommand@F9021:
   520                           	opt stack 0
   521  00FC2B                     parseCommand@F9019:
   522                           	opt stack 0
   523  00FC2B  41                 	db	65
   524  00FC2C  44                 	db	68
   525  00FC2D  44                 	db	68
   526  00FC2E                     __end_ofparseCommand@F9019:
   527                           	opt stack 0
   528  00FC2E                     _USB_CD_Ptr:
   529                           	opt stack 0
   530  00FC2E  AB                 	db	low _configDescriptor1
   531  00FC2F  FD                 	db	high _configDescriptor1
   532  00FC30                     __end_of_USB_CD_Ptr:
   533                           	opt stack 0
   534  00FC30                     _TaskNumber:
   535                           	opt stack 0
   536  00FC30  000A               	dw	10
   537  00FC32                     __end_of_TaskNumber:
   538                           	opt stack 0
   539  00FC32                     _MsgFormat:
   540                           	opt stack 0
   541  00FC32  48                 	db	72
   542  00FC33  6F                 	db	111
   543  00FC34  73                 	db	115
   544  00FC35  74                 	db	116
   545  00FC36  20                 	db	32
   546  00FC37  6D                 	db	109
   547  00FC38  65                 	db	101
   548  00FC39  73                 	db	115
   549  00FC3A  73                 	db	115
   550  00FC3B  61                 	db	97
   551  00FC3C  67                 	db	103
   552  00FC3D  65                 	db	101
   553  00FC3E  20                 	db	32
   554  00FC3F  66                 	db	102
   555  00FC40  6F                 	db	111
   556  00FC41  72                 	db	114
   557  00FC42  6D                 	db	109
   558  00FC43  61                 	db	97
   559  00FC44  74                 	db	116
   560  00FC45  3A                 	db	58
   561  00FC46  20                 	db	32
   562  00FC47  0D                 	db	13
   563  00FC48  0A                 	db	10
   564  00FC49  5B                 	db	91
   565  00FC4A  6F                 	db	111
   566  00FC4B  70                 	db	112
   567  00FC4C  5F                 	db	95
   568  00FC4D  74                 	db	116
   569  00FC4E  79                 	db	121
   570  00FC4F  70                 	db	112
   571  00FC50  65                 	db	101
   572  00FC51  5D                 	db	93
   573  00FC52  3A                 	db	58
   574  00FC53  5B                 	db	91
   575  00FC54  6F                 	db	111
   576  00FC55  70                 	db	112
   577  00FC56  5D                 	db	93
   578  00FC57  3A                 	db	58
   579  00FC58  5B                 	db	91
   580  00FC59  6C                 	db	108
   581  00FC5A  65                 	db	101
   582  00FC5B  6E                 	db	110
   583  00FC5C  5D                 	db	93
   584  00FC5D  3A                 	db	58
   585  00FC5E  5B                 	db	91
   586  00FC5F  61                 	db	97
   587  00FC60  64                 	db	100
   588  00FC61  64                 	db	100
   589  00FC62  72                 	db	114
   590  00FC63  5D                 	db	93
   591  00FC64  3A                 	db	58
   592  00FC65  5B                 	db	91
   593  00FC66  70                 	db	112
   594  00FC67  61                 	db	97
   595  00FC68  79                 	db	121
   596  00FC69  6C                 	db	108
   597  00FC6A  6F                 	db	111
   598  00FC6B  61                 	db	97
   599  00FC6C  64                 	db	100
   600  00FC6D  5D                 	db	93
   601  00FC6E  0D                 	db	13
   602  00FC6F  0A                 	db	10
   603  00FC70  0D                 	db	13
   604  00FC71  0A                 	db	10
   605  00FC72  5B                 	db	91
   606  00FC73  6F                 	db	111
   607  00FC74  70                 	db	112
   608  00FC75  5F                 	db	95
   609  00FC76  74                 	db	116
   610  00FC77  79                 	db	121
   611  00FC78  70                 	db	112
   612  00FC79  65                 	db	101
   613  00FC7A  5D                 	db	93
   614  00FC7B  20                 	db	32
   615  00FC7C  3D                 	db	61
   616  00FC7D  20                 	db	32
   617  00FC7E  53                 	db	83
   618  00FC7F  4F                 	db	79
   619  00FC80  2C                 	db	44
   620  00FC81  53                 	db	83
   621  00FC82  42                 	db	66
   622  00FC83  0D                 	db	13
   623  00FC84  0A                 	db	10
   624  00FC85  5B                 	db	91
   625  00FC86  6F                 	db	111
   626  00FC87  70                 	db	112
   627  00FC88  5D                 	db	93
   628  00FC89  20                 	db	32
   629  00FC8A  3D                 	db	61
   630  00FC8B  20                 	db	32
   631  00FC8C  52                 	db	82
   632  00FC8D  3A                 	db	58
   633  00FC8E  20                 	db	32
   634  00FC8F  72                 	db	114
   635  00FC90  65                 	db	101
   636  00FC91  61                 	db	97
   637  00FC92  64                 	db	100
   638  00FC93  2C                 	db	44
   639  00FC94  57                 	db	87
   640  00FC95  3A                 	db	58
   641  00FC96  20                 	db	32
   642  00FC97  77                 	db	119
   643  00FC98  72                 	db	114
   644  00FC99  69                 	db	105
   645  00FC9A  74                 	db	116
   646  00FC9B  65                 	db	101
   647  00FC9C  0D                 	db	13
   648  00FC9D  0A                 	db	10
   649  00FC9E  5B                 	db	91
   650  00FC9F  6C                 	db	108
   651  00FCA0  65                 	db	101
   652  00FCA1  6E                 	db	110
   653  00FCA2  5D                 	db	93
   654  00FCA3  20                 	db	32
   655  00FCA4  3D                 	db	61
   656  00FCA5  20                 	db	32
   657  00FCA6  32                 	db	50
   658  00FCA7  20                 	db	32
   659  00FCA8  62                 	db	98
   660  00FCA9  79                 	db	121
   661  00FCAA  74                 	db	116
   662  00FCAB  65                 	db	101
   663  00FCAC  20                 	db	32
   664  00FCAD  41                 	db	65
   665  00FCAE  53                 	db	83
   666  00FCAF  43                 	db	67
   667  00FCB0  49                 	db	73
   668  00FCB1  49                 	db	73
   669  00FCB2  0D                 	db	13
   670  00FCB3  0A                 	db	10
   671  00FCB4  5B                 	db	91
   672  00FCB5  61                 	db	97
   673  00FCB6  64                 	db	100
   674  00FCB7  64                 	db	100
   675  00FCB8  72                 	db	114
   676  00FCB9  5D                 	db	93
   677  00FCBA  20                 	db	32
   678  00FCBB  3D                 	db	61
   679  00FCBC  20                 	db	32
   680  00FCBD  32                 	db	50
   681  00FCBE  20                 	db	32
   682  00FCBF  62                 	db	98
   683  00FCC0  79                 	db	121
   684  00FCC1  74                 	db	116
   685  00FCC2  65                 	db	101
   686  00FCC3  20                 	db	32
   687  00FCC4  41                 	db	65
   688  00FCC5  53                 	db	83
   689  00FCC6  43                 	db	67
   690  00FCC7  49                 	db	73
   691  00FCC8  49                 	db	73
   692  00FCC9  0D                 	db	13
   693  00FCCA  0A                 	db	10
   694  00FCCB  5B                 	db	91
   695  00FCCC  70                 	db	112
   696  00FCCD  61                 	db	97
   697  00FCCE  79                 	db	121
   698  00FCCF  6C                 	db	108
   699  00FCD0  6F                 	db	111
   700  00FCD1  61                 	db	97
   701  00FCD2  64                 	db	100
   702  00FCD3  5D                 	db	93
   703  00FCD4  20                 	db	32
   704  00FCD5  3D                 	db	61
   705  00FCD6  20                 	db	32
   706  00FCD7  6D                 	db	109
   707  00FCD8  61                 	db	97
   708  00FCD9  78                 	db	120
   709  00FCDA  20                 	db	32
   710  00FCDB  32                 	db	50
   711  00FCDC  30                 	db	48
   712  00FCDD  20                 	db	32
   713  00FCDE  62                 	db	98
   714  00FCDF  79                 	db	121
   715  00FCE0  74                 	db	116
   716  00FCE1  65                 	db	101
   717  00FCE2  20                 	db	32
   718  00FCE3  41                 	db	65
   719  00FCE4  53                 	db	83
   720  00FCE5  43                 	db	67
   721  00FCE6  49                 	db	73
   722  00FCE7  49                 	db	73
   723  00FCE8  0D                 	db	13
   724  00FCE9  0A                 	db	10
   725  00FCEA  0D                 	db	13
   726  00FCEB  0A                 	db	10
   727  00FCEC  54                 	db	84
   728  00FCED  65                 	db	101
   729  00FCEE  72                 	db	114
   730  00FCEF  6D                 	db	109
   731  00FCF0  69                 	db	105
   732  00FCF1  6E                 	db	110
   733  00FCF2  61                 	db	97
   734  00FCF3  6C                 	db	108
   735  00FCF4  20                 	db	32
   736  00FCF5  4D                 	db	77
   737  00FCF6  6F                 	db	111
   738  00FCF7  64                 	db	100
   739  00FCF8  65                 	db	101
   740  00FCF9  3A                 	db	58
   741  00FCFA  20                 	db	32
   742  00FCFB  43                 	db	67
   743  00FCFC  4F                 	db	79
   744  00FCFD  4D                 	db	77
   745  00FCFE  4D                 	db	77
   746  00FCFF  41                 	db	65
   747  00FD00  4E                 	db	78
   748  00FD01  44                 	db	68
   749  00FD02  20                 	db	32
   750  00FD03  4D                 	db	77
   751  00FD04  4F                 	db	79
   752  00FD05  44                 	db	68
   753  00FD06  45                 	db	69
   754  00FD07  0D                 	db	13
   755  00FD08  0A                 	db	10
   756  00FD09  4D                 	db	77
   757  00FD0A  6F                 	db	111
   758  00FD0B  64                 	db	100
   759  00FD0C  65                 	db	101
   760  00FD0D  6D                 	db	109
   761  00FD0E  20                 	db	32
   762  00FD0F  54                 	db	84
   763  00FD10  79                 	db	121
   764  00FD11  70                 	db	112
   765  00FD12  65                 	db	101
   766  00FD13  3A                 	db	58
   767  00FD14  20                 	db	32
   768  00FD15  47                 	db	71
   769  00FD16  53                 	db	83
   770  00FD17  4D                 	db	77
   771  00FD18  2F                 	db	47
   772  00FD19  47                 	db	71
   773  00FD1A  50                 	db	80
   774  00FD1B  52                 	db	82
   775  00FD1C  53                 	db	83
   776  00FD1D  0D                 	db	13
   777  00FD1E  0A                 	db	10
   778  00FD1F  0D                 	db	13
   779  00FD20  0A                 	db	10
   780  00FD21  00                 	db	0
   781  00FD22                     __end_of_MsgFormat:
   782                           	opt stack 0
   783  00FD22                     _Welcome:
   784                           	opt stack 0
   785  00FD22  2A                 	db	42
   786  00FD23  2A                 	db	42
   787  00FD24  2A                 	db	42
   788  00FD25  2A                 	db	42
   789  00FD26  2A                 	db	42
   790  00FD27  2A                 	db	42
   791  00FD28  2A                 	db	42
   792  00FD29  2A                 	db	42
   793  00FD2A  2A                 	db	42
   794  00FD2B  2A                 	db	42
   795  00FD2C  2A                 	db	42
   796  00FD2D  2A                 	db	42
   797  00FD2E  2A                 	db	42
   798  00FD2F  2A                 	db	42
   799  00FD30  2A                 	db	42
   800  00FD31  2A                 	db	42
   801  00FD32  2A                 	db	42
   802  00FD33  2A                 	db	42
   803  00FD34  2A                 	db	42
   804  00FD35  2A                 	db	42
   805  00FD36  2A                 	db	42
   806  00FD37  2A                 	db	42
   807  00FD38  2A                 	db	42
   808  00FD39  2A                 	db	42
   809  00FD3A  2A                 	db	42
   810  00FD3B  2A                 	db	42
   811  00FD3C  2A                 	db	42
   812  00FD3D  2A                 	db	42
   813  00FD3E  2A                 	db	42
   814  00FD3F  2A                 	db	42
   815  00FD40  2A                 	db	42
   816  00FD41  2A                 	db	42
   817  00FD42  2A                 	db	42
   818  00FD43  2A                 	db	42
   819  00FD44  2A                 	db	42
   820  00FD45  2A                 	db	42
   821  00FD46  2A                 	db	42
   822  00FD47  2A                 	db	42
   823  00FD48  2A                 	db	42
   824  00FD49  2A                 	db	42
   825  00FD4A  2A                 	db	42
   826  00FD4B  2A                 	db	42
   827  00FD4C  2A                 	db	42
   828  00FD4D  2A                 	db	42
   829  00FD4E  2A                 	db	42
   830  00FD4F  2A                 	db	42
   831  00FD50  2A                 	db	42
   832  00FD51  2A                 	db	42
   833  00FD52  2A                 	db	42
   834  00FD53  0D                 	db	13
   835  00FD54  0A                 	db	10
   836  00FD55  20                 	db	32
   837  00FD56  20                 	db	32
   838  00FD57  20                 	db	32
   839  00FD58  20                 	db	32
   840  00FD59  20                 	db	32
   841  00FD5A  20                 	db	32
   842  00FD5B  20                 	db	32
   843  00FD5C  20                 	db	32
   844  00FD5D  20                 	db	32
   845  00FD5E  20                 	db	32
   846  00FD5F  20                 	db	32
   847  00FD60  20                 	db	32
   848  00FD61  20                 	db	32
   849  00FD62  20                 	db	32
   850  00FD63  20                 	db	32
   851  00FD64  20                 	db	32
   852  00FD65  20                 	db	32
   853  00FD66  20                 	db	32
   854  00FD67  4D                 	db	77
   855  00FD68  45                 	db	69
   856  00FD69  52                 	db	82
   857  00FD6A  43                 	db	67
   858  00FD6B  55                 	db	85
   859  00FD6C  52                 	db	82
   860  00FD6D  59                 	db	89
   861  00FD6E  20                 	db	32
   862  00FD6F  53                 	db	83
   863  00FD70  59                 	db	89
   864  00FD71  53                 	db	83
   865  00FD72  54                 	db	84
   866  00FD73  45                 	db	69
   867  00FD74  4D                 	db	77
   868  00FD75  0D                 	db	13
   869  00FD76  0A                 	db	10
   870  00FD77  2A                 	db	42
   871  00FD78  2A                 	db	42
   872  00FD79  2A                 	db	42
   873  00FD7A  2A                 	db	42
   874  00FD7B  2A                 	db	42
   875  00FD7C  2A                 	db	42
   876  00FD7D  2A                 	db	42
   877  00FD7E  2A                 	db	42
   878  00FD7F  2A                 	db	42
   879  00FD80  2A                 	db	42
   880  00FD81  2A                 	db	42
   881  00FD82  2A                 	db	42
   882  00FD83  2A                 	db	42
   883  00FD84  2A                 	db	42
   884  00FD85  2A                 	db	42
   885  00FD86  2A                 	db	42
   886  00FD87  2A                 	db	42
   887  00FD88  2A                 	db	42
   888  00FD89  2A                 	db	42
   889  00FD8A  2A                 	db	42
   890  00FD8B  2A                 	db	42
   891  00FD8C  2A                 	db	42
   892  00FD8D  2A                 	db	42
   893  00FD8E  2A                 	db	42
   894  00FD8F  2A                 	db	42
   895  00FD90  2A                 	db	42
   896  00FD91  2A                 	db	42
   897  00FD92  2A                 	db	42
   898  00FD93  2A                 	db	42
   899  00FD94  2A                 	db	42
   900  00FD95  2A                 	db	42
   901  00FD96  2A                 	db	42
   902  00FD97  2A                 	db	42
   903  00FD98  2A                 	db	42
   904  00FD99  2A                 	db	42
   905  00FD9A  2A                 	db	42
   906  00FD9B  2A                 	db	42
   907  00FD9C  2A                 	db	42
   908  00FD9D  2A                 	db	42
   909  00FD9E  2A                 	db	42
   910  00FD9F  2A                 	db	42
   911  00FDA0  2A                 	db	42
   912  00FDA1  2A                 	db	42
   913  00FDA2  2A                 	db	42
   914  00FDA3  2A                 	db	42
   915  00FDA4  2A                 	db	42
   916  00FDA5  2A                 	db	42
   917  00FDA6  2A                 	db	42
   918  00FDA7  2A                 	db	42
   919  00FDA8  0D                 	db	13
   920  00FDA9  0A                 	db	10
   921  00FDAA  00                 	db	0
   922  00FDAB                     __end_of_Welcome:
   923                           	opt stack 0
   924  00FDAB                     _configDescriptor1:
   925                           	opt stack 0
   926  00FDAB  09                 	db	9
   927  00FDAC  02                 	db	2
   928  00FDAD  43                 	db	67
   929  00FDAE  00                 	db	0
   930  00FDAF  02                 	db	2
   931  00FDB0  01                 	db	1
   932  00FDB1  00                 	db	0
   933  00FDB2  C0                 	db	192
   934  00FDB3  32                 	db	50
   935  00FDB4  09                 	db	9
   936  00FDB5  04                 	db	4
   937  00FDB6  00                 	db	0
   938  00FDB7  00                 	db	0
   939  00FDB8  01                 	db	1
   940  00FDB9  02                 	db	2
   941  00FDBA  02                 	db	2
   942  00FDBB  01                 	db	1
   943  00FDBC  00                 	db	0
   944  00FDBD  05                 	db	5
   945  00FDBE  24                 	db	36
   946  00FDBF  00                 	db	0
   947  00FDC0  10                 	db	16
   948  00FDC1  01                 	db	1
   949  00FDC2  04                 	db	4
   950  00FDC3  24                 	db	36
   951  00FDC4  02                 	db	2
   952  00FDC5  02                 	db	2
   953  00FDC6  05                 	db	5
   954  00FDC7  24                 	db	36
   955  00FDC8  06                 	db	6
   956  00FDC9  00                 	db	0
   957  00FDCA  01                 	db	1
   958  00FDCB  05                 	db	5
   959  00FDCC  24                 	db	36
   960  00FDCD  01                 	db	1
   961  00FDCE  00                 	db	0
   962  00FDCF  01                 	db	1
   963  00FDD0  07                 	db	7
   964  00FDD1  05                 	db	5
   965  00FDD2  81                 	db	129
   966  00FDD3  03                 	db	3
   967  00FDD4  08                 	db	8
   968  00FDD5  00                 	db	0
   969  00FDD6  02                 	db	2
   970  00FDD7  09                 	db	9
   971  00FDD8  04                 	db	4
   972  00FDD9  01                 	db	1
   973  00FDDA  00                 	db	0
   974  00FDDB  02                 	db	2
   975  00FDDC  0A                 	db	10
   976  00FDDD  00                 	db	0
   977  00FDDE  00                 	db	0
   978  00FDDF  00                 	db	0
   979  00FDE0  07                 	db	7
   980  00FDE1  05                 	db	5
   981  00FDE2  02                 	db	2
   982  00FDE3  02                 	db	2
   983  00FDE4  40                 	db	64
   984  00FDE5  00                 	db	0
   985  00FDE6  00                 	db	0
   986  00FDE7  07                 	db	7
   987  00FDE8  05                 	db	5
   988  00FDE9  82                 	db	130
   989  00FDEA  02                 	db	2
   990  00FDEB  40                 	db	64
   991  00FDEC  00                 	db	0
   992  00FDED  00                 	db	0
   993  00FDEE                     __end_of_configDescriptor1:
   994                           	opt stack 0
   995  00FDEE                     _sd002:
   996                           	opt stack 0
   997  00FDEE  26                 	db	38
   998  00FDEF  03                 	db	3
   999  00FDF0  0054               	dw	84
  1000  00FDF2  0065               	dw	101
  1001  00FDF4  0072               	dw	114
  1002  00FDF6  006D               	dw	109
  1003  00FDF8  0069               	dw	105
  1004  00FDFA  006E               	dw	110
  1005  00FDFC  0061               	dw	97
  1006  00FDFE  006C               	dw	108
  1007  00FE00  0020               	dw	32
  1008  00FE02  0049               	dw	73
  1009  00FE04  006E               	dw	110
  1010  00FE06  0074               	dw	116
  1011  00FE08  0065               	dw	101
  1012  00FE0A  0072               	dw	114
  1013  00FE0C  0066               	dw	102
  1014  00FE0E  0061               	dw	97
  1015  00FE10  0063               	dw	99
  1016  00FE12  0065               	dw	101
  1017  00FE14                     __end_of_sd002:
  1018                           	opt stack 0
  1019  00FE14                     _sd001:
  1020                           	opt stack 0
  1021  00FE14  1E                 	db	30
  1022  00FE15  03                 	db	3
  1023  00FE16  004D               	dw	77
  1024  00FE18  0065               	dw	101
  1025  00FE1A  0072               	dw	114
  1026  00FE1C  0063               	dw	99
  1027  00FE1E  0075               	dw	117
  1028  00FE20  0072               	dw	114
  1029  00FE22  0079               	dw	121
  1030  00FE24  0020               	dw	32
  1031  00FE26  0053               	dw	83
  1032  00FE28  0079               	dw	121
  1033  00FE2A  0073               	dw	115
  1034  00FE2C  0074               	dw	116
  1035  00FE2E  0065               	dw	101
  1036  00FE30  006D               	dw	109
  1037  00FE32                     __end_of_sd001:
  1038                           	opt stack 0
  1039  00FE32                     _MsgReady:
  1040                           	opt stack 0
  1041  00FE32  0D                 	db	13
  1042  00FE33  0A                 	db	10
  1043  00FE34  53                 	db	83
  1044  00FE35  79                 	db	121
  1045  00FE36  73                 	db	115
  1046  00FE37  74                 	db	116
  1047  00FE38  65                 	db	101
  1048  00FE39  6D                 	db	109
  1049  00FE3A  20                 	db	32
  1050  00FE3B  52                 	db	82
  1051  00FE3C  65                 	db	101
  1052  00FE3D  61                 	db	97
  1053  00FE3E  64                 	db	100
  1054  00FE3F  79                 	db	121
  1055  00FE40  2E                 	db	46
  1056  00FE41  2E                 	db	46
  1057  00FE42  2E                 	db	46
  1058  00FE43  20                 	db	32
  1059  00FE44  0D                 	db	13
  1060  00FE45  0A                 	db	10
  1061  00FE46  0D                 	db	13
  1062  00FE47  0A                 	db	10
  1063  00FE48  00                 	db	0
  1064  00FE49                     __end_of_MsgReady:
  1065                           	opt stack 0
  1066  00FE49                     _device_dsc:
  1067                           	opt stack 0
  1068  00FE49  12                 	db	18
  1069  00FE4A  01                 	db	1
  1070  00FE4B  0200               	dw	512
  1071  00FE4D  02                 	db	2
  1072  00FE4E  00                 	db	0
  1073  00FE4F  00                 	db	0
  1074  00FE50  08                 	db	8
  1075  00FE51  04D8               	dw	1240
  1076  00FE53  000A               	dw	10
  1077  00FE55  0100               	dw	256
  1078  00FE57  01                 	db	1
  1079  00FE58  02                 	db	2
  1080  00FE59  00                 	db	0
  1081  00FE5A  01                 	db	1
  1082  00FE5B                     __end_of_device_dsc:
  1083                           	opt stack 0
  1084  00FE5B                     _sd000:
  1085                           	opt stack 0
  1086  00FE5B  04                 	db	4
  1087  00FE5C  03                 	db	3
  1088  00FE5D  0409               	dw	1033
  1089  00FE5F                     __end_of_sd000:
  1090                           	opt stack 0
  1091  0000                     _RPINR1	set	3815
  1092  0000                     _UEP0bits	set	3878
  1093  0000                     _UIEbits	set	3894
  1094  0000                     _UADDR	set	3896
  1095  0000                     _UIE	set	3894
  1096  0000                     _UEIE	set	3895
  1097  0000                     _UCFG	set	3897
  1098  0000                     _RTCCAL	set	3902
  1099  0000                     _PADCFG1bits	set	3900
  1100  0000                     _RTCCFGbits	set	3903
  1101  0000                     _DSCONLbits	set	3916
  1102  0000                     _DSGPR1	set	3919
  1103  0000                     _DSGPR0	set	3918
  1104  0000                     _DSCONHbits	set	3917
  1105  0000                     _ANCON1bits	set	3913
  1106  0000                     _UEP1	set	3879
  1107  0000                     _UEP0	set	3878
  1108  0000                     _T1CONbits	set	4045
  1109  0000                     _PORTDbits	set	3971
  1110  0000                     _USTAT	set	3940
  1111  0000                     _PIR2bits	set	4001
  1112  0000                     _UCON	set	3941
  1113  0000                     _UIRbits	set	3938
  1114  0000                     _UCONbits	set	3941
  1115  0000                     _UIR	set	3938
  1116  0000                     _UEIR	set	3939
  1117  0000                     _PIE2bits	set	4000
  1118  0000                     _BAUDCON2	set	3964
  1119  0000                     _RCSTA2	set	3996
  1120  0000                     _BAUDCON1	set	3966
  1121  0000                     _RCSTA1	set	4012
  1122  0000                     _TRISCbits	set	3988
  1123  0000                     _TXSTA2	set	4008
  1124  0000                     _TXSTA1	set	4013
  1125  0000                     _RCREG2	set	4010
  1126  0000                     _RCREG1	set	4015
  1127  0000                     _TXREG2	set	4009
  1128  0000                     _TXREG1	set	4014
  1129  0000                     _SPBRG2	set	4011
  1130  0000                     _SPBRGH2	set	3965
  1131  0000                     _SPBRG1	set	4016
  1132  0000                     _SPBRGH1	set	3967
  1133  0000                     _PR4	set	3959
  1134  0000                     _PR2	set	4043
  1135  0000                     _PIE1bits	set	3997
  1136  0000                     _IPR1bits	set	3999
  1137  0000                     _T4CONbits	set	3958
  1138  0000                     _T2CONbits	set	4042
  1139  0000                     _ALRMVALL	set	3982
  1140  0000                     _ALRMVALH	set	3983
  1141  0000                     _RTCVALH	set	3993
  1142  0000                     _RTCVALL	set	3992
  1143  0000                     _ALRMRPTbits	set	3984
  1144  0000                     _ALRMCFGbits	set	3985
  1145  0000                     _PIE3bits	set	4003
  1146  0000                     _IPR3bits	set	4005
  1147  0000                     _OSCCONbits	set	4051
  1148  0000                     _PORTEbits	set	3972
  1149  0000                     _TRISEbits	set	3990
  1150  0000                     _WDTCONbits	set	4032
  1151  0000                     _INTCON2bits	set	4081
  1152  0000                     _TRISBbits	set	3987
  1153  0000                     _OSCTUNEbits	set	3995
  1154  0000                     _SSP2CON1	set	3954
  1155  0000                     _TRISDbits	set	3989
  1156  0000                     _SSP2BUF	set	3957
  1157  0000                     _SSP2CON2bits	set	3953
  1158  0000                     _SSP2STAT	set	3955
  1159  0000                     _SSP2CON2	set	3953
  1160  0000                     _SSP2ADD	set	3956
  1161  0000                     _PIR1bits	set	3998
  1162  0000                     _PIR3bits	set	4004
  1163  0000                     _INTCON3bits	set	4080
  1164  0000                     _INTCONbits	set	4082
  1165  0000                     _RCONbits	set	4048
  1166  00FE5F                     STR_21:
  1167  00FE5F  20                 	db	32
  1168  00FE60  4C                 	db	76	;'L'
  1169  00FE61  61                 	db	97	;'a'
  1170  00FE62  7A                 	db	122	;'z'
  1171  00FE63  79                 	db	121	;'y'
  1172  00FE64  20                 	db	32
  1173  00FE65  64                 	db	100	;'d'
  1174  00FE66  65                 	db	101	;'e'
  1175  00FE67  76                 	db	118	;'v'
  1176  00FE68  69                 	db	105	;'i'
  1177  00FE69  63                 	db	99	;'c'
  1178  00FE6A  65                 	db	101	;'e'
  1179  00FE6B  2E                 	db	46
  1180  00FE6C  2E                 	db	46
  1181  00FE6D  2E                 	db	46
  1182  00FE6E  79                 	db	121	;'y'
  1183  00FE6F  6F                 	db	111	;'o'
  1184  00FE70  75                 	db	117	;'u'
  1185  00FE71  27                 	db	39
  1186  00FE72  76                 	db	118	;'v'
  1187  00FE73  65                 	db	101	;'e'
  1188  00FE74  20                 	db	32
  1189  00FE75  62                 	db	98	;'b'
  1190  00FE76  65                 	db	101	;'e'
  1191  00FE77  65                 	db	101	;'e'
  1192  00FE78  6E                 	db	110	;'n'
  1193  00FE79  20                 	db	32
  1194  00FE7A  74                 	db	116	;'t'
  1195  00FE7B  69                 	db	105	;'i'
  1196  00FE7C  6D                 	db	109	;'m'
  1197  00FE7D  65                 	db	101	;'e'
  1198  00FE7E  64                 	db	100	;'d'
  1199  00FE7F  2D                 	db	45
  1200  00FE80  6F                 	db	111	;'o'
  1201  00FE81  75                 	db	117	;'u'
  1202  00FE82  74                 	db	116	;'t'
  1203  00FE83  21                 	db	33
  1204  00FE84  21                 	db	33
  1205  00FE85  21                 	db	33
  1206  00FE86  0D                 	db	13
  1207  00FE87  0A                 	db	10
  1208  00FE88  00                 	db	0
  1209  00FE89                     STR_8:
  1210  00FE89  41                 	db	65	;'A'
  1211  00FE8A  54                 	db	84	;'T'
  1212  00FE8B  2B                 	db	43
  1213  00FE8C  53                 	db	83	;'S'
  1214  00FE8D  41                 	db	65	;'A'
  1215  00FE8E  50                 	db	80	;'P'
  1216  00FE8F  42                 	db	66	;'B'
  1217  00FE90  52                 	db	82	;'R'
  1218  00FE91  3D                 	db	61	;'='
  1219  00FE92  33                 	db	51	;'3'
  1220  00FE93  2C                 	db	44
  1221  00FE94  31                 	db	49	;'1'
  1222  00FE95  2C                 	db	44
  1223  00FE96  22                 	db	34
  1224  00FE97  43                 	db	67	;'C'
  1225  00FE98  6F                 	db	111	;'o'
  1226  00FE99  6E                 	db	110	;'n'
  1227  00FE9A  74                 	db	116	;'t'
  1228  00FE9B  79                 	db	121	;'y'
  1229  00FE9C  70                 	db	112	;'p'
  1230  00FE9D  65                 	db	101	;'e'
  1231  00FE9E  22                 	db	34
  1232  00FE9F  2C                 	db	44
  1233  00FEA0  22                 	db	34
  1234  00FEA1  47                 	db	71	;'G'
  1235  00FEA2  50                 	db	80	;'P'
  1236  00FEA3  52                 	db	82	;'R'
  1237  00FEA4  53                 	db	83	;'S'
  1238  00FEA5  22                 	db	34
  1239  00FEA6  0D                 	db	13
  1240  00FEA7  00                 	db	0
  1241  00FEA8                     STR_14:
  1242  00FEA8  41                 	db	65	;'A'
  1243  00FEA9  54                 	db	84	;'T'
  1244  00FEAA  2B                 	db	43
  1245  00FEAB  48                 	db	72	;'H'
  1246  00FEAC  54                 	db	84	;'T'
  1247  00FEAD  54                 	db	84	;'T'
  1248  00FEAE  50                 	db	80	;'P'
  1249  00FEAF  50                 	db	80	;'P'
  1250  00FEB0  41                 	db	65	;'A'
  1251  00FEB1  52                 	db	82	;'R'
  1252  00FEB2  41                 	db	65	;'A'
  1253  00FEB3  3D                 	db	61	;'='
  1254  00FEB4  22                 	db	34
  1255  00FEB5  43                 	db	67	;'C'
  1256  00FEB6  49                 	db	73	;'I'
  1257  00FEB7  44                 	db	68	;'D'
  1258  00FEB8  22                 	db	34
  1259  00FEB9  2C                 	db	44
  1260  00FEBA  31                 	db	49	;'1'
  1261  00FEBB  0D                 	db	13
  1262  00FEBC  00                 	db	0
  1263  00FEBD                     STR_9:
  1264  00FEBD  41                 	db	65	;'A'
  1265  00FEBE  54                 	db	84	;'T'
  1266  00FEBF  2B                 	db	43
  1267  00FEC0  53                 	db	83	;'S'
  1268  00FEC1  41                 	db	65	;'A'
  1269  00FEC2  50                 	db	80	;'P'
  1270  00FEC3  42                 	db	66	;'B'
  1271  00FEC4  52                 	db	82	;'R'
  1272  00FEC5  3D                 	db	61	;'='
  1273  00FEC6  33                 	db	51	;'3'
  1274  00FEC7  2C                 	db	44
  1275  00FEC8  31                 	db	49	;'1'
  1276  00FEC9  2C                 	db	44
  1277  00FECA  22                 	db	34
  1278  00FECB  41                 	db	65	;'A'
  1279  00FECC  50                 	db	80	;'P'
  1280  00FECD  4E                 	db	78	;'N'
  1281  00FECE  22                 	db	34
  1282  00FECF  2C                 	db	44
  1283  00FED0  22                 	db	34
  1284  00FED1  00                 	db	0
  1285  00FED2                     STR_23:
  1286  00FED2  46                 	db	70	;'F'
  1287  00FED3  72                 	db	114	;'r'
  1288  00FED4  61                 	db	97	;'a'
  1289  00FED5  6D                 	db	109	;'m'
  1290  00FED6  65                 	db	101	;'e'
  1291  00FED7  77                 	db	119	;'w'
  1292  00FED8  6F                 	db	111	;'o'
  1293  00FED9  72                 	db	114	;'r'
  1294  00FEDA  6B                 	db	107	;'k'
  1295  00FEDB  20                 	db	32
  1296  00FEDC  56                 	db	86	;'V'
  1297  00FEDD  65                 	db	101	;'e'
  1298  00FEDE  72                 	db	114	;'r'
  1299  00FEDF  73                 	db	115	;'s'
  1300  00FEE0  69                 	db	105	;'i'
  1301  00FEE1  6F                 	db	111	;'o'
  1302  00FEE2  6E                 	db	110	;'n'
  1303  00FEE3  3A                 	db	58	;':'
  1304  00FEE4  20                 	db	32
  1305  00FEE5  00                 	db	0
  1306  00FEE6                     STR_15:
  1307  00FEE6  41                 	db	65	;'A'
  1308  00FEE7  54                 	db	84	;'T'
  1309  00FEE8  2B                 	db	43
  1310  00FEE9  48                 	db	72	;'H'
  1311  00FEEA  54                 	db	84	;'T'
  1312  00FEEB  54                 	db	84	;'T'
  1313  00FEEC  50                 	db	80	;'P'
  1314  00FEED  50                 	db	80	;'P'
  1315  00FEEE  41                 	db	65	;'A'
  1316  00FEEF  52                 	db	82	;'R'
  1317  00FEF0  41                 	db	65	;'A'
  1318  00FEF1  3D                 	db	61	;'='
  1319  00FEF2  22                 	db	34
  1320  00FEF3  55                 	db	85	;'U'
  1321  00FEF4  52                 	db	82	;'R'
  1322  00FEF5  4C                 	db	76	;'L'
  1323  00FEF6  22                 	db	34
  1324  00FEF7  2C                 	db	44
  1325  00FEF8  22                 	db	34
  1326  00FEF9  00                 	db	0
  1327  00FEFA                     STR_31:
  1328  00FEFA  41                 	db	65	;'A'
  1329  00FEFB  54                 	db	84	;'T'
  1330  00FEFC  2B                 	db	43
  1331  00FEFD  43                 	db	67	;'C'
  1332  00FEFE  4D                 	db	77	;'M'
  1333  00FEFF  47                 	db	71	;'G'
  1334  00FF00  44                 	db	68	;'D'
  1335  00FF01  41                 	db	65	;'A'
  1336  00FF02  3D                 	db	61	;'='
  1337  00FF03  44                 	db	68	;'D'
  1338  00FF04  45                 	db	69	;'E'
  1339  00FF05  4C                 	db	76	;'L'
  1340  00FF06  20                 	db	32
  1341  00FF07  41                 	db	65	;'A'
  1342  00FF08  4C                 	db	76	;'L'
  1343  00FF09  4C                 	db	76	;'L'
  1344  00FF0A  0D                 	db	13
  1345  00FF0B  0A                 	db	10
  1346  00FF0C  00                 	db	0
  1347  00FF0D                     STR_27:
  1348  00FF0D  42                 	db	66	;'B'
  1349  00FF0E  75                 	db	117	;'u'
  1350  00FF0F  69                 	db	105	;'i'
  1351  00FF10  6C                 	db	108	;'l'
  1352  00FF11  64                 	db	100	;'d'
  1353  00FF12  20                 	db	32
  1354  00FF13  44                 	db	68	;'D'
  1355  00FF14  61                 	db	97	;'a'
  1356  00FF15  74                 	db	116	;'t'
  1357  00FF16  65                 	db	101	;'e'
  1358  00FF17  3A                 	db	58	;':'
  1359  00FF18  20                 	db	32
  1360  00FF19  25                 	db	37
  1361  00FF1A  73                 	db	115	;'s'
  1362  00FF1B  0D                 	db	13
  1363  00FF1C  0A                 	db	10
  1364  00FF1D  00                 	db	0
  1365  00FF1E                     STR_16:
  1366  00FF1E  41                 	db	65	;'A'
  1367  00FF1F  54                 	db	84	;'T'
  1368  00FF20  2B                 	db	43
  1369  00FF21  48                 	db	72	;'H'
  1370  00FF22  54                 	db	84	;'T'
  1371  00FF23  54                 	db	84	;'T'
  1372  00FF24  50                 	db	80	;'P'
  1373  00FF25  41                 	db	65	;'A'
  1374  00FF26  43                 	db	67	;'C'
  1375  00FF27  54                 	db	84	;'T'
  1376  00FF28  49                 	db	73	;'I'
  1377  00FF29  4F                 	db	79	;'O'
  1378  00FF2A  4E                 	db	78	;'N'
  1379  00FF2B  3D                 	db	61	;'='
  1380  00FF2C  30                 	db	48	;'0'
  1381  00FF2D  0D                 	db	13
  1382  00FF2E  00                 	db	0
  1383  00FF2F                     STR_29:
  1384  00FF2F  41                 	db	65	;'A'
  1385  00FF30  54                 	db	84	;'T'
  1386  00FF31  2B                 	db	43
  1387  00FF32  43                 	db	67	;'C'
  1388  00FF33  4D                 	db	77	;'M'
  1389  00FF34  47                 	db	71	;'G'
  1390  00FF35  44                 	db	68	;'D'
  1391  00FF36  3D                 	db	61	;'='
  1392  00FF37  31                 	db	49	;'1'
  1393  00FF38  2C                 	db	44
  1394  00FF39  30                 	db	48	;'0'
  1395  00FF3A  0D                 	db	13
  1396  00FF3B  0A                 	db	10
  1397  00FF3C  00                 	db	0
  1398  00FF3D  41                 	db	65	;'A'
  1399  00FF3E  54                 	db	84	;'T'
  1400  00FF3F  2B                 	db	43
  1401  00FF40  48                 	db	72	;'H'
  1402  00FF41  54                 	db	84	;'T'
  1403  00FF42  54                 	db	84	;'T'
  1404  00FF43  50                 	db	80	;'P'
  1405  00FF44  53                 	db	83	;'S'
  1406  00FF45  53                 	db	83	;'S'
  1407  00FF46  4C                 	db	76	;'L'
  1408  00FF47  3D                 	db	61	;'='
  1409  00FF48  30                 	db	48	;'0'
  1410  00FF49  0D                 	db	13
  1411  00FF4A  00                 	db	0
  1412  00FF4B                     STR_10:
  1413  00FF4B  41                 	db	65	;'A'
  1414  00FF4C  54                 	db	84	;'T'
  1415  00FF4D  2B                 	db	43
  1416  00FF4E  53                 	db	83	;'S'
  1417  00FF4F  41                 	db	65	;'A'
  1418  00FF50  50                 	db	80	;'P'
  1419  00FF51  42                 	db	66	;'B'
  1420  00FF52  52                 	db	82	;'R'
  1421  00FF53  3D                 	db	61	;'='
  1422  00FF54  31                 	db	49	;'1'
  1423  00FF55  2C                 	db	44
  1424  00FF56  31                 	db	49	;'1'
  1425  00FF57  0D                 	db	13
  1426  00FF58  00                 	db	0
  1427  00FF59                     STR_11:
  1428  00FF59  41                 	db	65	;'A'
  1429  00FF5A  54                 	db	84	;'T'
  1430  00FF5B  2B                 	db	43
  1431  00FF5C  53                 	db	83	;'S'
  1432  00FF5D  41                 	db	65	;'A'
  1433  00FF5E  50                 	db	80	;'P'
  1434  00FF5F  42                 	db	66	;'B'
  1435  00FF60  52                 	db	82	;'R'
  1436  00FF61  3D                 	db	61	;'='
  1437  00FF62  32                 	db	50	;'2'
  1438  00FF63  2C                 	db	44
  1439  00FF64  31                 	db	49	;'1'
  1440  00FF65  0D                 	db	13
  1441  00FF66  00                 	db	0
  1442  00FF67                     STR_13:
  1443  00FF67  41                 	db	65	;'A'
  1444  00FF68  54                 	db	84	;'T'
  1445  00FF69  2B                 	db	43
  1446  00FF6A  48                 	db	72	;'H'
  1447  00FF6B  54                 	db	84	;'T'
  1448  00FF6C  54                 	db	84	;'T'
  1449  00FF6D  50                 	db	80	;'P'
  1450  00FF6E  53                 	db	83	;'S'
  1451  00FF6F  53                 	db	83	;'S'
  1452  00FF70  4C                 	db	76	;'L'
  1453  00FF71  3D                 	db	61	;'='
  1454  00FF72  31                 	db	49	;'1'
  1455  00FF73  0D                 	db	13
  1456  00FF74  00                 	db	0
  1457  00FF75                     STR_2:
  1458  00FF75  41                 	db	65	;'A'
  1459  00FF76  54                 	db	84	;'T'
  1460  00FF77  2B                 	db	43
  1461  00FF78  49                 	db	73	;'I'
  1462  00FF79  50                 	db	80	;'P'
  1463  00FF7A  52                 	db	82	;'R'
  1464  00FF7B  3D                 	db	61	;'='
  1465  00FF7C  39                 	db	57	;'9'
  1466  00FF7D  36                 	db	54	;'6'
  1467  00FF7E  30                 	db	48	;'0'
  1468  00FF7F  30                 	db	48	;'0'
  1469  00FF80  0D                 	db	13
  1470  00FF81  0A                 	db	10
  1471  00FF82  00                 	db	0
  1472  00FF83                     STR_17:
  1473  00FF83  41                 	db	65	;'A'
  1474  00FF84  54                 	db	84	;'T'
  1475  00FF85  2B                 	db	43
  1476  00FF86  48                 	db	72	;'H'
  1477  00FF87  54                 	db	84	;'T'
  1478  00FF88  54                 	db	84	;'T'
  1479  00FF89  50                 	db	80	;'P'
  1480  00FF8A  52                 	db	82	;'R'
  1481  00FF8B  45                 	db	69	;'E'
  1482  00FF8C  41                 	db	65	;'A'
  1483  00FF8D  44                 	db	68	;'D'
  1484  00FF8E  0D                 	db	13
  1485  00FF8F  00                 	db	0
  1486  00FF90                     STR_18:
  1487  00FF90  41                 	db	65	;'A'
  1488  00FF91  54                 	db	84	;'T'
  1489  00FF92  2B                 	db	43
  1490  00FF93  48                 	db	72	;'H'
  1491  00FF94  54                 	db	84	;'T'
  1492  00FF95  54                 	db	84	;'T'
  1493  00FF96  50                 	db	80	;'P'
  1494  00FF97  54                 	db	84	;'T'
  1495  00FF98  45                 	db	69	;'E'
  1496  00FF99  52                 	db	82	;'R'
  1497  00FF9A  4D                 	db	77	;'M'
  1498  00FF9B  0D                 	db	13
  1499  00FF9C  00                 	db	0
  1500  00FF9D                     STR_12:
  1501  00FF9D  41                 	db	65	;'A'
  1502  00FF9E  54                 	db	84	;'T'
  1503  00FF9F  2B                 	db	43
  1504  00FFA0  48                 	db	72	;'H'
  1505  00FFA1  54                 	db	84	;'T'
  1506  00FFA2  54                 	db	84	;'T'
  1507  00FFA3  50                 	db	80	;'P'
  1508  00FFA4  49                 	db	73	;'I'
  1509  00FFA5  4E                 	db	78	;'N'
  1510  00FFA6  49                 	db	73	;'I'
  1511  00FFA7  54                 	db	84	;'T'
  1512  00FFA8  0D                 	db	13
  1513  00FFA9  00                 	db	0
  1514  00FFAA                     STR_32:
  1515  00FFAA  41                 	db	65	;'A'
  1516  00FFAB  54                 	db	84	;'T'
  1517  00FFAC  2B                 	db	43
  1518  00FFAD  43                 	db	67	;'C'
  1519  00FFAE  4C                 	db	76	;'L'
  1520  00FFAF  49                 	db	73	;'I'
  1521  00FFB0  50                 	db	80	;'P'
  1522  00FFB1  3D                 	db	61	;'='
  1523  00FFB2  31                 	db	49	;'1'
  1524  00FFB3  0D                 	db	13
  1525  00FFB4  0A                 	db	10
  1526  00FFB5  00                 	db	0
  1527  00FFB6                     STR_28:
  1528  00FFB6  4D                 	db	77	;'M'
  1529  00FFB7  61                 	db	97	;'a'
  1530  00FFB8  72                 	db	114	;'r'
  1531  00FFB9  20                 	db	32
  1532  00FFBA  32                 	db	50	;'2'
  1533  00FFBB  37                 	db	55	;'7'
  1534  00FFBC  20                 	db	32
  1535  00FFBD  32                 	db	50	;'2'
  1536  00FFBE  30                 	db	48	;'0'
  1537  00FFBF  32                 	db	50	;'2'
  1538  00FFC0  32                 	db	50	;'2'
  1539  00FFC1  00                 	db	0
  1540  00FFC2                     STR_4:
  1541  00FFC2  41                 	db	65	;'A'
  1542  00FFC3  54                 	db	84	;'T'
  1543  00FFC4  2B                 	db	43
  1544  00FFC5  43                 	db	67	;'C'
  1545  00FFC6  4D                 	db	77	;'M'
  1546  00FFC7  47                 	db	71	;'G'
  1547  00FFC8  52                 	db	82	;'R'
  1548  00FFC9  3D                 	db	61	;'='
  1549  00FFCA  31                 	db	49	;'1'
  1550  00FFCB  0D                 	db	13
  1551  00FFCC  0A                 	db	10
  1552  00FFCD  00                 	db	0
  1553  00FFCE                     STR_5:
  1554  00FFCE  41                 	db	65	;'A'
  1555  00FFCF  54                 	db	84	;'T'
  1556  00FFD0  2B                 	db	43
  1557  00FFD1  43                 	db	67	;'C'
  1558  00FFD2  4D                 	db	77	;'M'
  1559  00FFD3  47                 	db	71	;'G'
  1560  00FFD4  53                 	db	83	;'S'
  1561  00FFD5  3D                 	db	61	;'='
  1562  00FFD6  22                 	db	34
  1563  00FFD7  00                 	db	0
  1564  00FFD8                     STR_33:
  1565  00FFD8  28                 	db	40
  1566  00FFD9  6E                 	db	110	;'n'
  1567  00FFDA  75                 	db	117	;'u'
  1568  00FFDB  6C                 	db	108	;'l'
  1569  00FFDC  6C                 	db	108	;'l'
  1570  00FFDD  29                 	db	41
  1571  00FFDE  00                 	db	0
  1572  00FFDF                     STR_3:
  1573  00FFDF  41                 	db	65	;'A'
  1574  00FFE0  54                 	db	84	;'T'
  1575  00FFE1  45                 	db	69	;'E'
  1576  00FFE2  30                 	db	48	;'0'
  1577  00FFE3  0D                 	db	13
  1578  00FFE4  0A                 	db	10
  1579  00FFE5  00                 	db	0
  1580  00FFE6                     STR_1:
  1581  00FFE6  41                 	db	65	;'A'
  1582  00FFE7  54                 	db	84	;'T'
  1583  00FFE8  0D                 	db	13
  1584  00FFE9  0A                 	db	10
  1585  00FFEA  00                 	db	0
  1586  00FFEB  41                 	db	65	;'A'
  1587  00FFEC  54                 	db	84	;'T'
  1588  00FFED  41                 	db	65	;'A'
  1589  00FFEE  0D                 	db	13
  1590  00FFEF  00                 	db	0
  1591  00FFF0                     STR_6:
  1592  00FFF0  41                 	db	65	;'A'
  1593  00FFF1  54                 	db	84	;'T'
  1594  00FFF2  48                 	db	72	;'H'
  1595  00FFF3  0D                 	db	13
  1596  00FFF4  00                 	db	0
  1597  00FFF5                     STR_24:
  1598  00FFF5  2E                 	db	46
  1599  00FFF6  00                 	db	0
  1600  0000                     
  1601                           ; #config settings
  1602  00FFF7  00                 	db	0	; dummy byte at the end
  1603  0000                     
  1604                           	psect	cinit
  1605  002472                     __pcinit:
  1606                           	opt stack 0
  1607  002472                     start_initialization:
  1608                           	opt stack 0
  1609  002472                     __initialization:
  1610                           	opt stack 0
  1611                           
  1612                           ; Initialize objects allocated to BANK5 (80 bytes)
  1613                           ; load TBLPTR registers with __pidataBANK5
  1614  002472  0E9C               	movlw	low __pidataBANK5
  1615  002474  6EF6               	movwf	tblptrl,c
  1616  002476  0E5A               	movlw	high __pidataBANK5
  1617  002478  6EF7               	movwf	tblptrh,c
  1618  00247A  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1619  00247C  6EF8               	movwf	tblptru,c
  1620  00247E  EE05  F086         	lfsr	0,__pdataBANK5
  1621  002482  EE10 F050          	lfsr	1,80
  1622  002486                     copy_data0:
  1623  002486  0009               	tblrd		*+
  1624  002488  CFF5 FFEE          	movff	tablat,postinc0
  1625  00248C  50E5               	movf	postdec1,w,c
  1626  00248E  50E1               	movf	fsr1l,w,c
  1627  002490  E1FA               	bnz	copy_data0
  1628                           
  1629                           ; Initialize objects allocated to BANK3 (63 bytes)
  1630                           ; load TBLPTR registers with __pidataBANK3
  1631  002492  0EB8               	movlw	low __pidataBANK3
  1632  002494  6EF6               	movwf	tblptrl,c
  1633  002496  0E5F               	movlw	high __pidataBANK3
  1634  002498  6EF7               	movwf	tblptrh,c
  1635  00249A  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1636  00249C  6EF8               	movwf	tblptru,c
  1637  00249E  EE03  F0BC         	lfsr	0,__pdataBANK3
  1638  0024A2  EE10 F03F          	lfsr	1,63
  1639  0024A6                     copy_data1:
  1640  0024A6  0009               	tblrd		*+
  1641  0024A8  CFF5 FFEE          	movff	tablat,postinc0
  1642  0024AC  50E5               	movf	postdec1,w,c
  1643  0024AE  50E1               	movf	fsr1l,w,c
  1644  0024B0  E1FA               	bnz	copy_data1
  1645                           
  1646                           ; Initialize objects allocated to BANK2 (13 bytes)
  1647                           ; load TBLPTR registers with __pidataBANK2
  1648  0024B2  0E6E               	movlw	low __pidataBANK2
  1649  0024B4  6EF6               	movwf	tblptrl,c
  1650  0024B6  0E68               	movlw	high __pidataBANK2
  1651  0024B8  6EF7               	movwf	tblptrh,c
  1652  0024BA  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1653  0024BC  6EF8               	movwf	tblptru,c
  1654  0024BE  EE02  F0F3         	lfsr	0,__pdataBANK2
  1655  0024C2  EE10 F00D          	lfsr	1,13
  1656  0024C6                     copy_data2:
  1657  0024C6  0009               	tblrd		*+
  1658  0024C8  CFF5 FFEE          	movff	tablat,postinc0
  1659  0024CC  50E5               	movf	postdec1,w,c
  1660  0024CE  50E1               	movf	fsr1l,w,c
  1661  0024D0  E1FA               	bnz	copy_data2
  1662                           
  1663                           ; Initialize objects allocated to BANK1 (2 bytes)
  1664                           ; load TBLPTR registers with __pidataBANK1
  1665  0024D2  0EF8               	movlw	low __pidataBANK1
  1666  0024D4  6EF6               	movwf	tblptrl,c
  1667  0024D6  0E68               	movlw	high __pidataBANK1
  1668  0024D8  6EF7               	movwf	tblptrh,c
  1669  0024DA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1670  0024DC  6EF8               	movwf	tblptru,c
  1671  0024DE  0009               	tblrd		*+	;fetch initializer
  1672  0024E0  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1673  0024E4  0009               	tblrd		*+	;fetch initializer
  1674  0024E6  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1675                           
  1676                           ; Initialize objects allocated to BANK4 (23 bytes)
  1677                           ; load TBLPTR registers with __pidataBANK4
  1678  0024EA  0E56               	movlw	low __pidataBANK4
  1679  0024EC  6EF6               	movwf	tblptrl,c
  1680  0024EE  0E67               	movlw	high __pidataBANK4
  1681  0024F0  6EF7               	movwf	tblptrh,c
  1682  0024F2  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1683  0024F4  6EF8               	movwf	tblptru,c
  1684  0024F6  EE04  F0D6         	lfsr	0,__pdataBANK4
  1685  0024FA  EE10 F017          	lfsr	1,23
  1686  0024FE                     copy_data3:
  1687  0024FE  0009               	tblrd		*+
  1688  002500  CFF5 FFEE          	movff	tablat,postinc0
  1689  002504  50E5               	movf	postdec1,w,c
  1690  002506  50E1               	movf	fsr1l,w,c
  1691  002508  E1FA               	bnz	copy_data3
  1692                           
  1693                           ; Initialize objects allocated to BANK0 (2 bytes)
  1694                           ; load TBLPTR registers with __pidataBANK0
  1695  00250A  0EF6               	movlw	low __pidataBANK0
  1696  00250C  6EF6               	movwf	tblptrl,c
  1697  00250E  0E68               	movlw	high __pidataBANK0
  1698  002510  6EF7               	movwf	tblptrh,c
  1699  002512  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1700  002514  6EF8               	movwf	tblptru,c
  1701  002516  0009               	tblrd		*+	;fetch initializer
  1702  002518  CFF5 F0E1          	movff	tablat,__pdataBANK0
  1703  00251C  0009               	tblrd		*+	;fetch initializer
  1704  00251E  CFF5 F0E2          	movff	tablat,__pdataBANK0+1
  1705                           
  1706                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1707  002522  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1708  002526  EE13 F020          	lfsr	1,800
  1709  00252A                     clear_0:
  1710  00252A  6AEE               	clrf	postinc0,c
  1711  00252C  50E5               	movf	postdec1,w,c
  1712  00252E  50E1               	movf	fsr1l,w,c
  1713  002530  E1FC               	bnz	clear_0
  1714  002532  50E2               	movf	fsr1h,w,c
  1715  002534  E1FA               	bnz	clear_0
  1716                           
  1717                           ; Clear objects allocated to BANK9 (200 bytes)
  1718  002536  EE09  F000         	lfsr	0,__pbssBANK9
  1719  00253A  0EC8               	movlw	200
  1720  00253C                     clear_1:
  1721  00253C  6AEE               	clrf	postinc0,c
  1722  00253E  06E8               	decf	wreg,f,c
  1723  002540  E1FD               	bnz	clear_1
  1724                           
  1725                           ; Clear objects allocated to BANK8 (250 bytes)
  1726  002542  EE08  F000         	lfsr	0,__pbssBANK8
  1727  002546  0EFA               	movlw	250
  1728  002548                     clear_2:
  1729  002548  6AEE               	clrf	postinc0,c
  1730  00254A  06E8               	decf	wreg,f,c
  1731  00254C  E1FD               	bnz	clear_2
  1732                           
  1733                           ; Clear objects allocated to BANK7 (246 bytes)
  1734  00254E  EE07  F000         	lfsr	0,__pbssBANK7
  1735  002552  0EF6               	movlw	246
  1736  002554                     clear_3:
  1737  002554  6AEE               	clrf	postinc0,c
  1738  002556  06E8               	decf	wreg,f,c
  1739  002558  E1FD               	bnz	clear_3
  1740                           
  1741                           ; Clear objects allocated to BANK6 (220 bytes)
  1742  00255A  EE06  F000         	lfsr	0,__pbssBANK6
  1743  00255E  0EDC               	movlw	220
  1744  002560                     clear_4:
  1745  002560  6AEE               	clrf	postinc0,c
  1746  002562  06E8               	decf	wreg,f,c
  1747  002564  E1FD               	bnz	clear_4
  1748                           
  1749                           ; Clear objects allocated to BANK5 (134 bytes)
  1750  002566  EE05  F000         	lfsr	0,__pbssBANK5
  1751  00256A  0E86               	movlw	134
  1752  00256C                     clear_5:
  1753  00256C  6AEE               	clrf	postinc0,c
  1754  00256E  06E8               	decf	wreg,f,c
  1755  002570  E1FD               	bnz	clear_5
  1756                           
  1757                           ; Clear objects allocated to BANK3 (188 bytes)
  1758  002572  EE03  F000         	lfsr	0,__pbssBANK3
  1759  002576  0EBC               	movlw	188
  1760  002578                     clear_6:
  1761  002578  6AEE               	clrf	postinc0,c
  1762  00257A  06E8               	decf	wreg,f,c
  1763  00257C  E1FD               	bnz	clear_6
  1764                           
  1765                           ; Clear objects allocated to BANK2 (43 bytes)
  1766  00257E  EE02  F0C8         	lfsr	0,__pbssBANK2
  1767  002582  0E2B               	movlw	43
  1768  002584                     clear_7:
  1769  002584  6AEE               	clrf	postinc0,c
  1770  002586  06E8               	decf	wreg,f,c
  1771  002588  E1FD               	bnz	clear_7
  1772                           
  1773                           ; Clear objects allocated to BANK1 (53 bytes)
  1774  00258A  EE01  F0C9         	lfsr	0,__pbssBANK1
  1775  00258E  0E35               	movlw	53
  1776  002590                     clear_8:
  1777  002590  6AEE               	clrf	postinc0,c
  1778  002592  06E8               	decf	wreg,f,c
  1779  002594  E1FD               	bnz	clear_8
  1780                           
  1781                           ; Clear objects allocated to BANK4 (150 bytes)
  1782  002596  EE04  F040         	lfsr	0,__pbssBANK4
  1783  00259A  0E96               	movlw	150
  1784  00259C                     clear_9:
  1785  00259C  6AEE               	clrf	postinc0,c
  1786  00259E  06E8               	decf	wreg,f,c
  1787  0025A0  E1FD               	bnz	clear_9
  1788                           
  1789                           ; Clear objects allocated to BANK0 (49 bytes)
  1790  0025A2  EE00  F0B0         	lfsr	0,__pbssBANK0
  1791  0025A6  0E31               	movlw	49
  1792  0025A8                     clear_10:
  1793  0025A8  6AEE               	clrf	postinc0,c
  1794  0025AA  06E8               	decf	wreg,f,c
  1795  0025AC  E1FD               	bnz	clear_10
  1796                           
  1797                           ; Clear objects allocated to COMRAM (31 bytes)
  1798  0025AE  EE00  F023         	lfsr	0,__pbssCOMRAM
  1799  0025B2  0E1F               	movlw	31
  1800  0025B4                     clear_11:
  1801  0025B4  6AEE               	clrf	postinc0,c
  1802  0025B6  06E8               	decf	wreg,f,c
  1803  0025B8  E1FD               	bnz	clear_11
  1804  0025BA                     end_of_initialization:
  1805                           	opt stack 0
  1806  0025BA                     __end_of__initialization:
  1807                           	opt stack 0
  1808  0025BA  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1809  0025BC  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1810  0025BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1811  0025C0  6EF8               	movwf	tblptru,c
  1812  0025C2  0100               	movlb	0
  1813  0025C4  EF3E  F034         	goto	_main	;jump to C main() function
  1814                           tblptru	equ	0xFF8
  1815                           tblptrh	equ	0xFF7
  1816                           tblptrl	equ	0xFF6
  1817                           tablat	equ	0xFF5
  1818                           postinc0	equ	0xFEE
  1819                           wreg	equ	0xFE8
  1820                           postdec1	equ	0xFE5
  1821                           fsr1h	equ	0xFE2
  1822                           fsr1l	equ	0xFE1
  1823                           
  1824                           	psect	bssCOMRAM
  1825  000023                     __pbssCOMRAM:
  1826                           	opt stack 0
  1827  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1828                           	opt stack 0
  1829  000023                     	ds	2
  1830  000025                     _USBDeferOUTDataStagePackets:
  1831                           	opt stack 0
  1832  000025                     	ds	1
  1833  000026                     _USBDeferINDataStagePackets:
  1834                           	opt stack 0
  1835  000026                     	ds	1
  1836  000027                     _USBStatusStageEnabledFlag2:
  1837                           	opt stack 0
  1838  000027                     	ds	1
  1839  000028                     _USBStatusStageEnabledFlag1:
  1840                           	opt stack 0
  1841  000028                     	ds	1
  1842  000029                     CheckModem@CheckMdmSts:
  1843                           	opt stack 0
  1844  000029                     	ds	1
  1845  00002A                     _ComChecCompleted:
  1846                           	opt stack 0
  1847  00002A                     	ds	1
  1848  00002B                     Uart_Uart1RxIsr@UartRxData:
  1849                           	opt stack 0
  1850  00002B                     	ds	1
  1851  00002C                     Uart_MdmGsmGprsReadService@RxState:
  1852                           	opt stack 0
  1853  00002C                     	ds	1
  1854  00002D                     MdmCntSm@MdmCntState:
  1855                           	opt stack 0
  1856  00002D                     	ds	1
  1857  00002E                     RiSm@MdmDrvState:
  1858                           	opt stack 0
  1859  00002E                     	ds	1
  1860  00002F                     _Mmd_RingIndicator:
  1861                           	opt stack 0
  1862  00002F                     	ds	1
  1863  000030                     I2c_ReadData@ReadStatus:
  1864                           	opt stack 0
  1865  000030                     	ds	1
  1866  000031                     I2c_ReadData@TentativeCounter:
  1867                           	opt stack 0
  1868  000031                     	ds	1
  1869  000032                     I2c_ReadData@DataCounter:
  1870                           	opt stack 0
  1871  000032                     	ds	1
  1872  000033                     I2c_ReadData@I2cReadState:
  1873                           	opt stack 0
  1874  000033                     	ds	1
  1875  000034                     I2c_WriteData@WriteStatus:
  1876                           	opt stack 0
  1877  000034                     	ds	1
  1878  000035                     I2c_WriteData@TentativeCounter:
  1879                           	opt stack 0
  1880  000035                     	ds	1
  1881  000036                     I2c_WriteData@I2cNextState:
  1882                           	opt stack 0
  1883  000036                     	ds	1
  1884  000037                     I2c_WriteData@I2cWriteState:
  1885                           	opt stack 0
  1886  000037                     	ds	1
  1887  000038                     _memorizedNumbersCount:
  1888                           	opt stack 0
  1889  000038                     	ds	1
  1890  000039                     _MdmStsReady:
  1891                           	opt stack 0
  1892  000039                     	ds	1
  1893  00003A                     _NewStringMdmTerminal:
  1894                           	opt stack 0
  1895  00003A                     	ds	1
  1896  00003B                     _NewMdmEvtParserRequest:
  1897                           	opt stack 0
  1898  00003B                     	ds	1
  1899  00003C                     _NewStringReceived:
  1900                           	opt stack 0
  1901  00003C                     	ds	1
  1902  00003D                     _MdmResetRequest:
  1903                           	opt stack 0
  1904  00003D                     	ds	1
  1905  00003E                     _CallClosedEvent:
  1906                           	opt stack 0
  1907  00003E                     	ds	1
  1908  00003F                     _IncomingCallEvent:
  1909                           	opt stack 0
  1910  00003F                     	ds	1
  1911  000040                     _NewSmsEvent:
  1912                           	opt stack 0
  1913  000040                     	ds	1
  1914  000041                     _ActivateRiDetection:
  1915                           	opt stack 0
  1916  000041                     	ds	1
  1917                           tblptru	equ	0xFF8
  1918                           tblptrh	equ	0xFF7
  1919                           tblptrl	equ	0xFF6
  1920                           tablat	equ	0xFF5
  1921                           postinc0	equ	0xFEE
  1922                           wreg	equ	0xFE8
  1923                           postdec1	equ	0xFE5
  1924                           fsr1h	equ	0xFE2
  1925                           fsr1l	equ	0xFE1
  1926                           
  1927                           	psect	bssBANK0
  1928  0000B0                     __pbssBANK0:
  1929                           	opt stack 0
  1930  0000B0                     _inPipes:
  1931                           	opt stack 0
  1932  0000B0                     	ds	6
  1933  0000B6                     _pBDTEntryIn:
  1934                           	opt stack 0
  1935  0000B6                     	ds	6
  1936  0000BC                     _CDCDataOutHandle:
  1937                           	opt stack 0
  1938  0000BC                     	ds	2
  1939  0000BE                     _pBDTEntryEP0OutNext:
  1940                           	opt stack 0
  1941  0000BE                     	ds	2
  1942  0000C0                     _pBDTEntryEP0OutCurrent:
  1943                           	opt stack 0
  1944  0000C0                     	ds	2
  1945  0000C2                     _RxLen:
  1946                           	opt stack 0
  1947  0000C2                     	ds	2
  1948  0000C4                     _cdc_tx_len:
  1949                           	opt stack 0
  1950  0000C4                     	ds	1
  1951  0000C5                     _cdc_trf_state:
  1952                           	opt stack 0
  1953  0000C5                     	ds	1
  1954  0000C6                     _cdc_rx_len:
  1955                           	opt stack 0
  1956  0000C6                     	ds	1
  1957  0000C7                     _USBDeferStatusStagePacket:
  1958                           	opt stack 0
  1959  0000C7                     	ds	1
  1960  0000C8                     _USBStatusStageTimeoutCounter:
  1961                           	opt stack 0
  1962  0000C8                     	ds	1
  1963  0000C9                     _endpoint_number:
  1964                           	opt stack 0
  1965  0000C9                     	ds	1
  1966  0000CA                     _controlTransferState:
  1967                           	opt stack 0
  1968  0000CA                     	ds	1
  1969  0000CB                     _shortPacketStatus:
  1970                           	opt stack 0
  1971  0000CB                     	ds	1
  1972  0000CC                     _USBDeviceState:
  1973                           	opt stack 0
  1974  0000CC                     	ds	1
  1975  0000CD                     _I2cComSts:
  1976                           	opt stack 0
  1977  0000CD                     	ds	1
  1978  0000CE                     HttpGetMethod@GetMethodNextState:
  1979                           	opt stack 0
  1980  0000CE                     	ds	1
  1981  0000CF                     InitGprsNetwork@GprsNetInitNextState:
  1982                           	opt stack 0
  1983  0000CF                     	ds	1
  1984  0000D0                     _MdmStatus:
  1985                           	opt stack 0
  1986  0000D0                     	ds	1
  1987  0000D1                     _PhoneNumbLen:
  1988                           	opt stack 0
  1989  0000D1                     	ds	1
  1990  0000D2                     _SmsLen:
  1991                           	opt stack 0
  1992  0000D2                     	ds	1
  1993  0000D3                     _SystemState:
  1994                           	opt stack 0
  1995  0000D3                     	ds	1
  1996  0000D4                     _USTATcopy:
  1997                           	opt stack 0
  1998  0000D4                     	ds	1
  1999  0000D5                     _USBActiveConfiguration:
  2000                           	opt stack 0
  2001  0000D5                     	ds	1
  2002  0000D6                     _I2cReadDataEvt:
  2003                           	opt stack 0
  2004  0000D6                     	ds	1
  2005  0000D7                     _I2cWriteDataEvt:
  2006                           	opt stack 0
  2007  0000D7                     	ds	1
  2008  0000D8                     _GetMethod:
  2009                           	opt stack 0
  2010  0000D8                     	ds	1
  2011  0000D9                     _InitNetwork:
  2012                           	opt stack 0
  2013  0000D9                     	ds	1
  2014  0000DA                     _SmsTxtReady:
  2015                           	opt stack 0
  2016  0000DA                     	ds	1
  2017  0000DB                     _GetSmsText:
  2018                           	opt stack 0
  2019  0000DB                     	ds	1
  2020  0000DC                     _SmsEvent:
  2021                           	opt stack 0
  2022  0000DC                     	ds	1
  2023  0000DD                     _ClipEvent:
  2024                           	opt stack 0
  2025  0000DD                     	ds	1
  2026  0000DE                     _RingEvent:
  2027                           	opt stack 0
  2028  0000DE                     	ds	1
  2029  0000DF                     _SendSmsEvent:
  2030                           	opt stack 0
  2031  0000DF                     	ds	1
  2032  0000E0                     _MdmOnOffPulseRequest:
  2033                           	opt stack 0
  2034  0000E0                     	ds	1
  2035                           tblptru	equ	0xFF8
  2036                           tblptrh	equ	0xFF7
  2037                           tblptrl	equ	0xFF6
  2038                           tablat	equ	0xFF5
  2039                           postinc0	equ	0xFEE
  2040                           wreg	equ	0xFE8
  2041                           postdec1	equ	0xFE5
  2042                           fsr1h	equ	0xFE2
  2043                           fsr1l	equ	0xFE1
  2044                           
  2045                           	psect	dataBANK0
  2046  0000E1                     __pdataBANK0:
  2047                           	opt stack 0
  2048  0000E1                     findEmptySpot@currentPosition:
  2049                           	opt stack 0
  2050  0000E1                     	ds	1
  2051  0000E2                     isNumberInMemory@currentPosition:
  2052                           	opt stack 0
  2053  0000E2                     	ds	1
  2054                           tblptru	equ	0xFF8
  2055                           tblptrh	equ	0xFF7
  2056                           tblptrl	equ	0xFF6
  2057                           tablat	equ	0xFF5
  2058                           postinc0	equ	0xFEE
  2059                           wreg	equ	0xFE8
  2060                           postdec1	equ	0xFE5
  2061                           fsr1h	equ	0xFE2
  2062                           fsr1l	equ	0xFE1
  2063                           
  2064                           	psect	bssBANK1
  2065  0001C9                     __pbssBANK1:
  2066                           	opt stack 0
  2067  0001C9                     _outPipes:
  2068                           	opt stack 0
  2069  0001C9                     	ds	8
  2070  0001D1                     _CDCDataInHandle:
  2071                           	opt stack 0
  2072  0001D1                     	ds	2
  2073  0001D3                     initFsm@currentState:
  2074                           	opt stack 0
  2075  0001D3                     	ds	1
  2076  0001D4                     initEeprom@currentState:
  2077                           	opt stack 0
  2078  0001D4                     	ds	1
  2079  0001D5                     initGprsModem@currentState:
  2080                           	opt stack 0
  2081  0001D5                     	ds	1
  2082  0001D6                     MyApp_Task@currentState:
  2083                           	opt stack 0
  2084  0001D6                     	ds	1
  2085  0001D7                     	ds	1
  2086  0001D8                     	ds	1
  2087  0001D9                     	ds	1
  2088  0001DA                     	ds	1
  2089  0001DB                     	ds	1
  2090  0001DC                     GsmGprsTerminal@SMS:
  2091                           	opt stack 0
  2092  0001DC                     	ds	1
  2093  0001DD                     	ds	1
  2094  0001DE                     _control_signal_bitmap:
  2095                           	opt stack 0
  2096  0001DE                     	ds	1
  2097  0001DF                     _cdc_mem_type:
  2098                           	opt stack 0
  2099  0001DF                     	ds	1
  2100  0001E0                     _USBTicksSinceSuspendEnd:
  2101                           	opt stack 0
  2102  0001E0                     	ds	1
  2103  0001E1                     _BothEP0OutUOWNsSet:
  2104                           	opt stack 0
  2105  0001E1                     	ds	1
  2106  0001E2                     _USBBusIsSuspended:
  2107                           	opt stack 0
  2108  0001E2                     	ds	1
  2109  0001E3                     _RemoteWakeup:
  2110                           	opt stack 0
  2111  0001E3                     	ds	1
  2112  0001E4                     I2cSlv_QueryI2cData@Ret:
  2113                           	opt stack 0
  2114  0001E4                     	ds	1
  2115  0001E5                     I2cSlv_QueryI2cData@I2cOpState:
  2116                           	opt stack 0
  2117  0001E5                     	ds	1
  2118  0001E6                     I2cSendMsgSm@I2cComState:
  2119                           	opt stack 0
  2120  0001E6                     	ds	1
  2121  0001E7                     _I2cBusStatus:
  2122                           	opt stack 0
  2123  0001E7                     	ds	1
  2124  0001E8                     HttpGetMethod@GetMOutSts:
  2125                           	opt stack 0
  2126  0001E8                     	ds	1
  2127  0001E9                     HttpGetMethod@GetMethodState:
  2128                           	opt stack 0
  2129  0001E9                     	ds	1
  2130  0001EA                     InitGprsNetwork@GprsNetInitState:
  2131                           	opt stack 0
  2132  0001EA                     	ds	1
  2133  0001EB                     _PostMethod:
  2134                           	opt stack 0
  2135  0001EB                     	ds	1
  2136  0001EC                     _HttpGetMethodSts:
  2137                           	opt stack 0
  2138  0001EC                     	ds	1
  2139  0001ED                     _GprsNetworkSts:
  2140                           	opt stack 0
  2141  0001ED                     	ds	1
  2142  0001EE                     _ApnLenLocal:
  2143                           	opt stack 0
  2144  0001EE                     	ds	1
  2145  0001EF                     SendSmsSm@SendSms_NextState:
  2146                           	opt stack 0
  2147  0001EF                     	ds	1
  2148  0001F0                     SendSmsSm@SendSms_State:
  2149                           	opt stack 0
  2150  0001F0                     	ds	1
  2151  0001F1                     GetSmsSm@GetSmsState:
  2152                           	opt stack 0
  2153  0001F1                     	ds	1
  2154  0001F2                     ConfigureModem@NextState:
  2155                           	opt stack 0
  2156  0001F2                     	ds	1
  2157  0001F3                     ConfigureModem@MdmConfigState:
  2158                           	opt stack 0
  2159  0001F3                     	ds	1
  2160  0001F4                     TurnOnModem@TurnOnMdmState:
  2161                           	opt stack 0
  2162  0001F4                     	ds	1
  2163  0001F5                     _AlarmEvent:
  2164                           	opt stack 0
  2165  0001F5                     	ds	1
  2166  0001F6                     _Led3OutSts:
  2167                           	opt stack 0
  2168  0001F6                     	ds	1
  2169  0001F7                     _Led3Sts:
  2170                           	opt stack 0
  2171  0001F7                     	ds	1
  2172  0001F8                     _Led2OutSts:
  2173                           	opt stack 0
  2174  0001F8                     	ds	1
  2175  0001F9                     _Led2Sts:
  2176                           	opt stack 0
  2177  0001F9                     	ds	1
  2178  0001FA                     _Led1OutSts:
  2179                           	opt stack 0
  2180  0001FA                     	ds	1
  2181  0001FB                     _Led1Sts:
  2182                           	opt stack 0
  2183  0001FB                     	ds	1
  2184  0001FC                     _ReadAddress:
  2185                           	opt stack 0
  2186  0001FC                     	ds	1
  2187  0001FD                     I2cDummyTx@DummyBuffer:
  2188                           	opt stack 0
  2189  0001FD                     	ds	1
  2190                           tblptru	equ	0xFF8
  2191                           tblptrh	equ	0xFF7
  2192                           tblptrl	equ	0xFF6
  2193                           tablat	equ	0xFF5
  2194                           postinc0	equ	0xFEE
  2195                           wreg	equ	0xFE8
  2196                           postdec1	equ	0xFE5
  2197                           fsr1h	equ	0xFE2
  2198                           fsr1l	equ	0xFE1
  2199                           
  2200                           	psect	dataBANK1
  2201  0001FE                     __pdataBANK1:
  2202                           	opt stack 0
  2203  0001FE                     _isMemoryEmpty:
  2204                           	opt stack 0
  2205  0001FE                     	ds	1
  2206  0001FF                     InitGprsNetwork@GprsInitSts:
  2207                           	opt stack 0
  2208  0001FF                     	ds	1
  2209                           tblptru	equ	0xFF8
  2210                           tblptrh	equ	0xFF7
  2211                           tblptrl	equ	0xFF6
  2212                           tablat	equ	0xFF5
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           postdec1	equ	0xFE5
  2216                           fsr1h	equ	0xFE2
  2217                           fsr1l	equ	0xFE1
  2218                           
  2219                           	psect	bssBANK2
  2220  0002C8                     __pbssBANK2:
  2221                           	opt stack 0
  2222  0002C8                     _pCDCDst:
  2223                           	opt stack 0
  2224  0002C8                     	ds	3
  2225  0002CB                     _pCDCSrc:
  2226                           	opt stack 0
  2227  0002CB                     	ds	3
  2228  0002CE                     _ep_data_out:
  2229                           	opt stack 0
  2230  0002CE                     	ds	3
  2231  0002D1                     _ep_data_in:
  2232                           	opt stack 0
  2233  0002D1                     	ds	3
  2234  0002D4                     _pDst:
  2235                           	opt stack 0
  2236  0002D4                     	ds	2
  2237  0002D6                     ConfigureModem@DelayValueMs:
  2238                           	opt stack 0
  2239  0002D6                     	ds	2
  2240  0002D8                     TurnOnModem@Counter:
  2241                           	opt stack 0
  2242  0002D8                     	ds	2
  2243  0002DA                     UpdateSchFlag@InterruptCounter:
  2244                           	opt stack 0
  2245  0002DA                     	ds	2
  2246  0002DC                     MdmCntSm@Counter:
  2247                           	opt stack 0
  2248  0002DC                     	ds	2
  2249  0002DE                     RiSm@Counter:
  2250                           	opt stack 0
  2251  0002DE                     	ds	2
  2252  0002E0                     _ExtInt1IsrCallback:
  2253                           	opt stack 0
  2254  0002E0                     	ds	2
  2255  0002E2                     _ExtInt0IsrCallback:
  2256                           	opt stack 0
  2257  0002E2                     	ds	2
  2258  0002E4                     _RtccIsrCallback:
  2259                           	opt stack 0
  2260  0002E4                     	ds	2
  2261  0002E6                     _Tmr4IsrCallback:
  2262                           	opt stack 0
  2263  0002E6                     	ds	2
  2264  0002E8                     _Tmr2IsrCallback:
  2265                           	opt stack 0
  2266  0002E8                     	ds	2
  2267  0002EA                     	ds	1
  2268  0002EB                     	ds	1
  2269  0002EC                     Term_MainSm@TermMainSmState:
  2270                           	opt stack 0
  2271  0002EC                     	ds	1
  2272  0002ED                     Terminal@FormatOption:
  2273                           	opt stack 0
  2274  0002ED                     	ds	1
  2275  0002EE                     Terminal@SlaveAddr:
  2276                           	opt stack 0
  2277  0002EE                     	ds	1
  2278  0002EF                     Terminal@PackageLen:
  2279                           	opt stack 0
  2280  0002EF                     	ds	1
  2281  0002F0                     Terminal@TermState:
  2282                           	opt stack 0
  2283  0002F0                     	ds	1
  2284  0002F1                     _USBAlternateInterface:
  2285                           	opt stack 0
  2286  0002F1                     	ds	2
  2287                           tblptru	equ	0xFF8
  2288                           tblptrh	equ	0xFF7
  2289                           tblptrl	equ	0xFF6
  2290                           tablat	equ	0xFF5
  2291                           postinc0	equ	0xFEE
  2292                           wreg	equ	0xFE8
  2293                           postdec1	equ	0xFE5
  2294                           fsr1h	equ	0xFE2
  2295                           fsr1l	equ	0xFE1
  2296                           
  2297                           	psect	dataBANK2
  2298  0002F3                     __pdataBANK2:
  2299                           	opt stack 0
  2300  0002F3                     Terminal@EchoOption:
  2301                           	opt stack 0
  2302  0002F3                     	ds	1
  2303  0002F4                     _MainSystemTimebaseFlag:
  2304                           	opt stack 0
  2305  0002F4                     	ds	1
  2306  0002F5                     _ConnTimeout:
  2307                           	opt stack 0
  2308  0002F5                     	ds	11
  2309                           tblptru	equ	0xFF8
  2310                           tblptrh	equ	0xFF7
  2311                           tblptrl	equ	0xFF6
  2312                           tablat	equ	0xFF5
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           fsr1h	equ	0xFE2
  2317                           fsr1l	equ	0xFE1
  2318                           
  2319                           	psect	bssBANK3
  2320  000300                     __pbssBANK3:
  2321                           	opt stack 0
  2322  000300                     _Rtcm_RtccAlarm:
  2323                           	opt stack 0
  2324  000300                     	ds	6
  2325  000306                     _pBDTEntryOut:
  2326                           	opt stack 0
  2327  000306                     	ds	6
  2328  00030C                     _BaudRateGen:
  2329                           	opt stack 0
  2330  00030C                     	ds	4
  2331  000310                     _USB1msTickCount:
  2332                           	opt stack 0
  2333  000310                     	ds	4
  2334  000314                     _OsTmr_OsTickCounter:
  2335                           	opt stack 0
  2336  000314                     	ds	4
  2337  000318                     	ds	2
  2338  00031A                     _UsbMasterPhoneNumberLen:
  2339                           	opt stack 0
  2340  00031A                     	ds	2
  2341  00031C                     _ApnLocal:
  2342                           	opt stack 0
  2343  00031C                     	ds	2
  2344  00031E                     ConfigureModem@DelayCounter:
  2345                           	opt stack 0
  2346  00031E                     	ds	2
  2347  000320                     _UartConfig:
  2348                           	opt stack 0
  2349  000320                     	ds	21
  2350  000335                     _callerNumber:
  2351                           	opt stack 0
  2352  000335                     	ds	13
  2353  000342                     I2cSlv_QueryI2cData@TimeoutTimer:
  2354                           	opt stack 0
  2355  000342                     	ds	11
  2356  00034D                     _I2cConfig:
  2357                           	opt stack 0
  2358  00034D                     	ds	10
  2359  000357                     _Led3Blink:
  2360                           	opt stack 0
  2361  000357                     	ds	9
  2362  000360                     _Led2Blink:
  2363                           	opt stack 0
  2364  000360                     	ds	9
  2365  000369                     _Led1Blink:
  2366                           	opt stack 0
  2367  000369                     	ds	9
  2368  000372                     _dummy_encapsulated_cmd_response:
  2369                           	opt stack 0
  2370  000372                     	ds	8
  2371  00037A                     _line_coding:
  2372                           	opt stack 0
  2373  00037A                     	ds	7
  2374  000381                     _Led3Pulse:
  2375                           	opt stack 0
  2376  000381                     	ds	6
  2377  000387                     _Led2Pulse:
  2378                           	opt stack 0
  2379  000387                     	ds	6
  2380  00038D                     _Led1Pulse:
  2381                           	opt stack 0
  2382  00038D                     	ds	6
  2383  000393                     _I2cRxPacket:
  2384                           	opt stack 0
  2385  000393                     	ds	6
  2386  000399                     _memoryPreamble:
  2387                           	opt stack 0
  2388  000399                     	ds	5
  2389  00039E                     _I2cTxPacket:
  2390                           	opt stack 0
  2391  00039E                     	ds	5
  2392  0003A3                     _HttpGetDataLocal:
  2393                           	opt stack 0
  2394  0003A3                     	ds	5
  2395  0003A8                     Terminal@Addr:
  2396                           	opt stack 0
  2397  0003A8                     	ds	4
  2398  0003AC                     Terminal@Len:
  2399                           	opt stack 0
  2400  0003AC                     	ds	4
  2401  0003B0                     _AlCfg:
  2402                           	opt stack 0
  2403  0003B0                     	ds	4
  2404  0003B4                     _RtcConfig:
  2405                           	opt stack 0
  2406  0003B4                     	ds	4
  2407  0003B8                     _setupCallTicks:
  2408                           	opt stack 0
  2409  0003B8                     	ds	2
  2410  0003BA                     initGprsModem@modemCounter:
  2411                           	opt stack 0
  2412  0003BA                     	ds	2
  2413                           tblptru	equ	0xFF8
  2414                           tblptrh	equ	0xFF7
  2415                           tblptrl	equ	0xFF6
  2416                           tablat	equ	0xFF5
  2417                           postinc0	equ	0xFEE
  2418                           wreg	equ	0xFE8
  2419                           postdec1	equ	0xFE5
  2420                           fsr1h	equ	0xFE2
  2421                           fsr1l	equ	0xFE1
  2422                           
  2423                           	psect	dataBANK3
  2424  0003BC                     __pdataBANK3:
  2425                           	opt stack 0
  2426  0003BC                     ModemEvtParser@F9112:
  2427                           	opt stack 0
  2428  0003BC                     	ds	5
  2429  0003C1                     ModemEvtParser@F9110:
  2430                           	opt stack 0
  2431  0003C1                     	ds	5
  2432  0003C6                     ModemEvtParser@F9108:
  2433                           	opt stack 0
  2434  0003C6                     	ds	4
  2435  0003CA                     MyApp_Task@F9038:
  2436                           	opt stack 0
  2437  0003CA                     	ds	3
  2438  0003CD                     triggerRelay@F9027:
  2439                           	opt stack 0
  2440  0003CD                     	ds	2
  2441  0003CF                     Term_MainSm@TermDelay:
  2442                           	opt stack 0
  2443  0003CF                     	ds	11
  2444  0003DA                     _ConnWait:
  2445                           	opt stack 0
  2446  0003DA                     	ds	11
  2447  0003E5                     SendSmsSm@SwTimer:
  2448                           	opt stack 0
  2449  0003E5                     	ds	11
  2450  0003F0                     CheckModem@Timeout:
  2451                           	opt stack 0
  2452  0003F0                     	ds	11
  2453                           tblptru	equ	0xFF8
  2454                           tblptrh	equ	0xFF7
  2455                           tblptrl	equ	0xFF6
  2456                           tablat	equ	0xFF5
  2457                           postinc0	equ	0xFEE
  2458                           wreg	equ	0xFE8
  2459                           postdec1	equ	0xFE5
  2460                           fsr1h	equ	0xFE2
  2461                           fsr1l	equ	0xFE1
  2462                           
  2463                           	psect	bssBANK4
  2464  000440                     __pbssBANK4:
  2465                           	opt stack 0
  2466  000440                     _UsbMasterPhoneNumber:
  2467                           	opt stack 0
  2468  000440                     	ds	15
  2469  00044F                     	ds	10
  2470  000459                     _cdc_notice:
  2471                           	opt stack 0
  2472  000459                     	ds	10
  2473  000463                     _Rtcm_SystemDate:
  2474                           	opt stack 0
  2475  000463                     	ds	8
  2476  00046B                     Term_MainSm@Data:
  2477                           	opt stack 0
  2478  00046B                     	ds	50
  2479  00049D                     _smsText:
  2480                           	opt stack 0
  2481  00049D                     	ds	20
  2482  0004B1                     _EepromBuffer:
  2483                           	opt stack 0
  2484  0004B1                     	ds	15
  2485  0004C0                     Terminal@SwTimer:
  2486                           	opt stack 0
  2487  0004C0                     	ds	11
  2488  0004CB                     I2cSlv_QueryI2cData@QueryTimer:
  2489                           	opt stack 0
  2490  0004CB                     	ds	11
  2491                           tblptru	equ	0xFF8
  2492                           tblptrh	equ	0xFF7
  2493                           tblptrl	equ	0xFF6
  2494                           tablat	equ	0xFF5
  2495                           postinc0	equ	0xFEE
  2496                           wreg	equ	0xFE8
  2497                           postdec1	equ	0xFE5
  2498                           fsr1h	equ	0xFE2
  2499                           fsr1l	equ	0xFE1
  2500                           
  2501                           	psect	dataBANK4
  2502  0004D6                     __pdataBANK4:
  2503                           	opt stack 0
  2504  0004D6                     ModemEvtParser@F9114:
  2505                           	opt stack 0
  2506  0004D6                     	ds	10
  2507  0004E0                     MyApp_Task@receivedNumber:
  2508                           	opt stack 0
  2509  0004E0                     	ds	13
  2510                           tblptru	equ	0xFF8
  2511                           tblptrh	equ	0xFF7
  2512                           tblptrl	equ	0xFF6
  2513                           tablat	equ	0xFF5
  2514                           postinc0	equ	0xFEE
  2515                           wreg	equ	0xFE8
  2516                           postdec1	equ	0xFE5
  2517                           fsr1h	equ	0xFE2
  2518                           fsr1l	equ	0xFE1
  2519                           
  2520                           	psect	bssBANK5
  2521  000500                     __pbssBANK5:
  2522                           	opt stack 0
  2523  000500                     _cdc_data_rx:
  2524                           	opt stack 0
  2525  000500                     	ds	64
  2526  000540                     Terminal@TermRxBuffer:
  2527                           	opt stack 0
  2528  000540                     	ds	50
  2529  000572                     _PhoneNumber:
  2530                           	opt stack 0
  2531  000572                     	ds	20
  2532                           tblptru	equ	0xFF8
  2533                           tblptrh	equ	0xFF7
  2534                           tblptrl	equ	0xFF6
  2535                           tablat	equ	0xFF5
  2536                           postinc0	equ	0xFEE
  2537                           wreg	equ	0xFE8
  2538                           postdec1	equ	0xFE5
  2539                           fsr1h	equ	0xFE2
  2540                           fsr1l	equ	0xFE1
  2541                           
  2542                           	psect	dataBANK5
  2543  000586                     __pdataBANK5:
  2544                           	opt stack 0
  2545  000586                     _TaskTable:
  2546                           	opt stack 0
  2547  000586                     	ds	80
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           postinc0	equ	0xFEE
  2553                           wreg	equ	0xFE8
  2554                           postdec1	equ	0xFE5
  2555                           fsr1h	equ	0xFE2
  2556                           fsr1l	equ	0xFE1
  2557                           
  2558                           	psect	bssBANK6
  2559  000600                     __pbssBANK6:
  2560                           	opt stack 0
  2561  000600                     _OsAlarms:
  2562                           	opt stack 0
  2563  000600                     	ds	220
  2564                           tblptru	equ	0xFF8
  2565                           tblptrh	equ	0xFF7
  2566                           tblptrl	equ	0xFF6
  2567                           tablat	equ	0xFF5
  2568                           postinc0	equ	0xFEE
  2569                           wreg	equ	0xFE8
  2570                           postdec1	equ	0xFE5
  2571                           fsr1h	equ	0xFE2
  2572                           fsr1l	equ	0xFE1
  2573                           
  2574                           	psect	bssBANK7
  2575  000700                     __pbssBANK7:
  2576                           	opt stack 0
  2577  000700                     _Mdm_SmsRx:
  2578                           	opt stack 0
  2579  000700                     	ds	102
  2580  000766                     Terminal@Payload:
  2581                           	opt stack 0
  2582  000766                     	ds	80
  2583  0007B6                     _cdc_data_tx:
  2584                           	opt stack 0
  2585  0007B6                     	ds	64
  2586                           tblptru	equ	0xFF8
  2587                           tblptrh	equ	0xFF7
  2588                           tblptrl	equ	0xFF6
  2589                           tablat	equ	0xFF5
  2590                           postinc0	equ	0xFEE
  2591                           wreg	equ	0xFE8
  2592                           postdec1	equ	0xFE5
  2593                           fsr1h	equ	0xFE2
  2594                           fsr1l	equ	0xFE1
  2595                           
  2596                           	psect	bssBANK8
  2597  000800                     __pbssBANK8:
  2598                           	opt stack 0
  2599  000800                     GsmGprsTerminal@UsbBuffer:
  2600                           	opt stack 0
  2601  000800                     	ds	200
  2602  0008C8                     _MessageText:
  2603                           	opt stack 0
  2604  0008C8                     	ds	50
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           postinc0	equ	0xFEE
  2610                           wreg	equ	0xFE8
  2611                           postdec1	equ	0xFE5
  2612                           fsr1h	equ	0xFE2
  2613                           fsr1l	equ	0xFE1
  2614                           
  2615                           	psect	bssBANK9
  2616  000900                     __pbssBANK9:
  2617                           	opt stack 0
  2618  000900                     GsmGprsTerminal@UartBuffer:
  2619                           	opt stack 0
  2620  000900                     	ds	200
  2621                           tblptru	equ	0xFF8
  2622                           tblptrh	equ	0xFF7
  2623                           tblptrl	equ	0xFF6
  2624                           tablat	equ	0xFF5
  2625                           postinc0	equ	0xFEE
  2626                           wreg	equ	0xFE8
  2627                           postdec1	equ	0xFE5
  2628                           fsr1h	equ	0xFE2
  2629                           fsr1l	equ	0xFE1
  2630                           
  2631                           	psect	bssBIGRAMl
  2632  000AC8                     __pbssBIGRAMl:
  2633                           	opt stack 0
  2634  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2635                           	opt stack 0
  2636  000AC8                     	ds	400
  2637  000C58                     _RxBuffer:
  2638                           	opt stack 0
  2639  000C58                     	ds	400
  2640                           tblptru	equ	0xFF8
  2641                           tblptrh	equ	0xFF7
  2642                           tblptrl	equ	0xFF6
  2643                           tablat	equ	0xFF5
  2644                           postinc0	equ	0xFEE
  2645                           wreg	equ	0xFE8
  2646                           postdec1	equ	0xFE5
  2647                           fsr1h	equ	0xFE2
  2648                           fsr1l	equ	0xFE1
  2649                           
  2650                           	psect	cstackBANK10
  2651  000A00                     __pcstackBANK10:
  2652                           	opt stack 0
  2653  000A00                     Terminal@UsbRxBuffer:
  2654                           	opt stack 0
  2655                           
  2656                           ; 200 bytes @ 0x0
  2657  000A00                     	ds	200
  2658                           tblptru	equ	0xFF8
  2659                           tblptrh	equ	0xFF7
  2660                           tblptrl	equ	0xFF6
  2661                           tablat	equ	0xFF5
  2662                           postinc0	equ	0xFEE
  2663                           wreg	equ	0xFE8
  2664                           postdec1	equ	0xFE5
  2665                           fsr1h	equ	0xFE2
  2666                           fsr1l	equ	0xFE1
  2667                           
  2668                           	psect	cstackBANK3
  2669  0003FB                     __pcstackBANK3:
  2670                           	opt stack 0
  2671  0003FB                     ??_InitializeTasks:
  2672  0003FB                     ??_ScheduleTasks:
  2673                           
  2674                           ; 1 bytes @ 0x0
  2675  0003FB                     	ds	2
  2676  0003FD                     InitializeTasks@ActiveTaskIndex:
  2677                           	opt stack 0
  2678                           
  2679                           ; 1 bytes @ 0x2
  2680  0003FD                     	ds	2
  2681  0003FF                     ScheduleTasks@ActiveTaskIndex:
  2682                           	opt stack 0
  2683                           
  2684                           ; 1 bytes @ 0x4
  2685  0003FF                     	ds	1
  2686                           tblptru	equ	0xFF8
  2687                           tblptrh	equ	0xFF7
  2688                           tblptrl	equ	0xFF6
  2689                           tablat	equ	0xFF5
  2690                           postinc0	equ	0xFEE
  2691                           wreg	equ	0xFE8
  2692                           postdec1	equ	0xFE5
  2693                           fsr1h	equ	0xFE2
  2694                           fsr1l	equ	0xFE1
  2695                           
  2696                           	psect	cstackBANK2
  2697  000200                     __pcstackBANK2:
  2698                           	opt stack 0
  2699  000200                     Terminal@UsbTxBuffer:
  2700                           	opt stack 0
  2701                           
  2702                           ; 200 bytes @ 0x0
  2703  000200                     	ds	200
  2704                           tblptru	equ	0xFF8
  2705                           tblptrh	equ	0xFF7
  2706                           tblptrl	equ	0xFF6
  2707                           tablat	equ	0xFF5
  2708                           postinc0	equ	0xFEE
  2709                           wreg	equ	0xFE8
  2710                           postdec1	equ	0xFE5
  2711                           fsr1h	equ	0xFE2
  2712                           fsr1l	equ	0xFE1
  2713                           
  2714                           	psect	cstackBANK1
  2715  000100                     __pcstackBANK1:
  2716                           	opt stack 0
  2717  000100                     initEeprom@addressToRead:
  2718                           	opt stack 0
  2719  000100                     isNumberInMemory@phoneNumber:
  2720                           	opt stack 0
  2721  000100                     findEmptySpot@readBuffer:
  2722                           	opt stack 0
  2723  000100                     SendSmsSm@UartMessage:
  2724                           	opt stack 0
  2725  000100                     InitGprsNetwork@UartMessage:
  2726                           	opt stack 0
  2727  000100                     Terminal@TermTxBuffer:
  2728                           	opt stack 0
  2729  000100                     HttpGetMethod@UartMessage:
  2730                           	opt stack 0
  2731                           
  2732                           ; 200 bytes @ 0x0
  2733  000100                     	ds	1
  2734  000101                     initEeprom@memoryOpResult:
  2735                           	opt stack 0
  2736                           
  2737                           ; 1 bytes @ 0x1
  2738  000101                     	ds	1
  2739  000102                     initEeprom@isInitialized:
  2740                           	opt stack 0
  2741  000102                     isNumberInMemory@readBuffer:
  2742                           	opt stack 0
  2743                           
  2744                           ; 13 bytes @ 0x2
  2745  000102                     	ds	1
  2746  000103                     initFsm@isInitialized:
  2747                           	opt stack 0
  2748                           
  2749                           ; 1 bytes @ 0x3
  2750  000103                     	ds	10
  2751  00010D                     findEmptySpot@searchFailed:
  2752                           	opt stack 0
  2753                           
  2754                           ; 1 bytes @ 0xD
  2755  00010D                     	ds	1
  2756  00010E                     findEmptySpot@searchInProgress:
  2757                           	opt stack 0
  2758                           
  2759                           ; 1 bytes @ 0xE
  2760  00010E                     	ds	1
  2761  00010F                     isNumberInMemory@searchInProgress:
  2762                           	opt stack 0
  2763  00010F                     findEmptySpot@positionInMemory:
  2764                           	opt stack 0
  2765                           
  2766                           ; 1 bytes @ 0xF
  2767  00010F                     	ds	1
  2768  000110                     isNumberInMemory@searchFailed:
  2769                           	opt stack 0
  2770  000110                     findEmptySpot@memoryOpResult:
  2771                           	opt stack 0
  2772                           
  2773                           ; 1 bytes @ 0x10
  2774  000110                     	ds	1
  2775  000111                     isNumberInMemory@memoryOpResult:
  2776                           	opt stack 0
  2777                           
  2778                           ; 1 bytes @ 0x11
  2779  000111                     	ds	1
  2780  000112                     isNumberInMemory@positionInMemory:
  2781                           	opt stack 0
  2782                           
  2783                           ; 1 bytes @ 0x12
  2784  000112                     	ds	1
  2785  000113                     ??_MyApp_Task:
  2786                           
  2787                           ; 1 bytes @ 0x13
  2788  000113                     	ds	2
  2789  000115                     MyApp_Task@emptyNumber:
  2790                           	opt stack 0
  2791                           
  2792                           ; 13 bytes @ 0x15
  2793  000115                     	ds	13
  2794  000122                     MyApp_Task@cmpString:
  2795                           	opt stack 0
  2796                           
  2797                           ; 3 bytes @ 0x22
  2798  000122                     	ds	3
  2799  000125                     MyApp_Task@cmdAddNumber:
  2800                           	opt stack 0
  2801                           
  2802                           ; 4 bytes @ 0x25
  2803  000125                     	ds	4
  2804  000129                     MyApp_Task@memoryResult:
  2805                           	opt stack 0
  2806                           
  2807                           ; 1 bytes @ 0x29
  2808  000129                     	ds	1
  2809  00012A                     MyApp_Task@numberInMemory:
  2810                           	opt stack 0
  2811                           
  2812                           ; 1 bytes @ 0x2A
  2813  00012A                     	ds	8
  2814  000132                     InitGprsNetwork@Index:
  2815                           	opt stack 0
  2816  000132                     Term_MainSm@FwkMajorStr:
  2817                           	opt stack 0
  2818                           
  2819                           ; 4 bytes @ 0x32
  2820  000132                     	ds	4
  2821  000136                     Term_MainSm@FwkMinorStr:
  2822                           	opt stack 0
  2823                           
  2824                           ; 4 bytes @ 0x36
  2825  000136                     	ds	4
  2826  00013A                     Term_MainSm@FwkBuildStr:
  2827                           	opt stack 0
  2828                           
  2829                           ; 4 bytes @ 0x3A
  2830  00013A                     	ds	142
  2831  0001C8                     HttpGetMethod@Index:
  2832                           	opt stack 0
  2833                           
  2834                           ; 1 bytes @ 0xC8
  2835  0001C8                     	ds	1
  2836                           tblptru	equ	0xFF8
  2837                           tblptrh	equ	0xFF7
  2838                           tblptrl	equ	0xFF6
  2839                           tablat	equ	0xFF5
  2840                           postinc0	equ	0xFEE
  2841                           wreg	equ	0xFE8
  2842                           postdec1	equ	0xFE5
  2843                           fsr1h	equ	0xFE2
  2844                           fsr1l	equ	0xFE1
  2845                           
  2846                           	psect	cstackBANK0
  2847  000060                     __pcstackBANK0:
  2848                           	opt stack 0
  2849  000060                     
  2850                           ; 1 bytes @ 0x0
  2851  000060                     	ds	8
  2852  000068                     ??_LowPriorityIsr:
  2853                           
  2854                           ; 1 bytes @ 0x8
  2855  000068                     	ds	21
  2856  00007D                     ??_isdigit:
  2857  00007D                     ??_isspace:
  2858  00007D                     ??_isupper:
  2859  00007D                     ??_Rtcc_GetRtccValue:
  2860  00007D                     ??_UartTxBufferStatus:
  2861  00007D                     ??_USBStdGetDscHandler:
  2862  00007D                     ??_USBStdGetStatusHandler:
  2863  00007D                     ?_GetLastInteractionNumber:
  2864                           	opt stack 0
  2865  00007D                     ?_USBTransferOnePacket:
  2866                           	opt stack 0
  2867  00007D                     ?_strlen:
  2868                           	opt stack 0
  2869  00007D                     ?_sprintf:
  2870                           	opt stack 0
  2871  00007D                     ?_initPreamble:
  2872                           	opt stack 0
  2873  00007D                     ?___wmul:
  2874                           	opt stack 0
  2875  00007D                     ?___awdiv:
  2876                           	opt stack 0
  2877  00007D                     ?___awmod:
  2878                           	opt stack 0
  2879  00007D                     ?___lwmod:
  2880                           	opt stack 0
  2881  00007D                     ?_GetOsTickCounter:
  2882                           	opt stack 0
  2883  00007D                     ?___lmul:
  2884                           	opt stack 0
  2885  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2886                           	opt stack 0
  2887  00007D                     SetAckStatus@AckSts:
  2888                           	opt stack 0
  2889  00007D                     WriteByte@Byte:
  2890                           	opt stack 0
  2891  00007D                     ReadByte@Byte:
  2892                           	opt stack 0
  2893  00007D                     Mcu_SetWdgSts@WdgSts:
  2894                           	opt stack 0
  2895  00007D                     RtccIrqInit@Priority:
  2896                           	opt stack 0
  2897  00007D                     Rtcc_SetRtcStatus@Status:
  2898                           	opt stack 0
  2899  00007D                     TmrBInit@Prescaler:
  2900                           	opt stack 0
  2901  00007D                     Tmr_TmrBIrqSet@Priority:
  2902                           	opt stack 0
  2903  00007D                     Tmr_StartTmr@TmrNumb:
  2904                           	opt stack 0
  2905  00007D                     UartWriteByte@ByteToWrite:
  2906                           	opt stack 0
  2907  00007D                     USBTransferOnePacket@dir:
  2908                           	opt stack 0
  2909  00007D                     USBConfigureEndpoint@direction:
  2910                           	opt stack 0
  2911  00007D                     USBCtrlTrfTxService@byteToSend:
  2912                           	opt stack 0
  2913  00007D                     USBCtrlTrfRxService@i:
  2914                           	opt stack 0
  2915  00007D                     Led_SetLedStatus@LedSts:
  2916                           	opt stack 0
  2917  00007D                     toupper@c:
  2918                           	opt stack 0
  2919  00007D                     tolower@c:
  2920                           	opt stack 0
  2921  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2922                           	opt stack 0
  2923  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2924                           	opt stack 0
  2925  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2926                           	opt stack 0
  2927  00007D                     Uart_ClearRxBuffer@Index:
  2928                           	opt stack 0
  2929  00007D                     GenerateEvt@Event:
  2930                           	opt stack 0
  2931  00007D                     ReceiveEvt@Event:
  2932                           	opt stack 0
  2933  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2934                           	opt stack 0
  2935  00007D                     StringCompare@String1:
  2936                           	opt stack 0
  2937  00007D                     ClearBuffer@Buffer:
  2938                           	opt stack 0
  2939  00007D                     isNumberValid@phoneNumber:
  2940                           	opt stack 0
  2941  00007D                     sprintf@sp:
  2942                           	opt stack 0
  2943  00007D                     ___wmul@multiplier:
  2944                           	opt stack 0
  2945  00007D                     ___awdiv@dividend:
  2946                           	opt stack 0
  2947  00007D                     ___awmod@dividend:
  2948                           	opt stack 0
  2949  00007D                     ___lwmod@dividend:
  2950                           	opt stack 0
  2951  00007D                     memcpy@d1:
  2952                           	opt stack 0
  2953  00007D                     memset@p1:
  2954                           	opt stack 0
  2955  00007D                     strcat@to:
  2956                           	opt stack 0
  2957  00007D                     strcpy@to:
  2958                           	opt stack 0
  2959  00007D                     strlen@s:
  2960                           	opt stack 0
  2961  00007D                     ___lmul@multiplier:
  2962                           	opt stack 0
  2963                           
  2964                           ; 4 bytes @ 0x1D
  2965  00007D                     	ds	1
  2966  00007E                     ??_USBConfigureEndpoint:
  2967  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2968                           	opt stack 0
  2969  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2970                           	opt stack 0
  2971  00007E                     TmrBInit@Postscaler:
  2972                           	opt stack 0
  2973  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2974                           	opt stack 0
  2975  00007E                     UartWriteByte@Module:
  2976                           	opt stack 0
  2977  00007E                     UartTxBufferStatus@Module:
  2978                           	opt stack 0
  2979  00007E                     USBCtrlTrfRxService@byteToRead:
  2980                           	opt stack 0
  2981  00007E                     USBCtrlTrfInHandler@lastDTS:
  2982                           	opt stack 0
  2983  00007E                     Led_SetLedStatus@Led:
  2984                           	opt stack 0
  2985  00007E                     _isdigit$6366:
  2986                           	opt stack 0
  2987  00007E                     _isspace$6635:
  2988                           	opt stack 0
  2989  00007E                     _isupper$6638:
  2990                           	opt stack 0
  2991  00007E                     I2c_WriteData@WritePacket:
  2992                           	opt stack 0
  2993  00007E                     Rtcc_RtcConfig@RtcConfig:
  2994                           	opt stack 0
  2995  00007E                     USBTransferOnePacket@data:
  2996                           	opt stack 0
  2997  00007E                     USBStdGetStatusHandler@p:
  2998                           	opt stack 0
  2999                           
  3000                           ; 2 bytes @ 0x1E
  3001  00007E                     	ds	1
  3002  00007F                     ??_strlen:
  3003  00007F                     ??_Rtcc_AlarmConfig:
  3004  00007F                     ??_TmrBInit:
  3005  00007F                     Irq_InitIntController@IntPriorityEn:
  3006                           	opt stack 0
  3007  00007F                     Rtcc_GetRtccValue@RetValue:
  3008                           	opt stack 0
  3009  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  3010                           	opt stack 0
  3011  00007F                     UartTxBufferStatus@TxBufferStatus:
  3012                           	opt stack 0
  3013  00007F                     GenerateEvt@EventStatus:
  3014                           	opt stack 0
  3015  00007F                     isdigit@c:
  3016                           	opt stack 0
  3017  00007F                     isspace@c:
  3018                           	opt stack 0
  3019  00007F                     isupper@c:
  3020                           	opt stack 0
  3021  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  3022                           	opt stack 0
  3023  00007F                     StringCompare@String2:
  3024                           	opt stack 0
  3025  00007F                     ClearBuffer@Len:
  3026                           	opt stack 0
  3027  00007F                     sprintf@f:
  3028                           	opt stack 0
  3029  00007F                     ___wmul@multiplicand:
  3030                           	opt stack 0
  3031  00007F                     ___awdiv@divisor:
  3032                           	opt stack 0
  3033  00007F                     ___awmod@divisor:
  3034                           	opt stack 0
  3035  00007F                     ___lwmod@divisor:
  3036                           	opt stack 0
  3037  00007F                     memcpy@s1:
  3038                           	opt stack 0
  3039  00007F                     memset@c:
  3040                           	opt stack 0
  3041  00007F                     strcat@from:
  3042                           	opt stack 0
  3043  00007F                     strcpy@from:
  3044                           	opt stack 0
  3045                           
  3046                           ; 2 bytes @ 0x1F
  3047  00007F                     	ds	1
  3048  000080                     ??_isalpha:
  3049  000080                     ??_isxdigit:
  3050  000080                     ??_I2c_WriteData:
  3051  000080                     ??_Rtcc_RtcConfig:
  3052  000080                     Rtcc_GetRtccValue@RegValue:
  3053                           	opt stack 0
  3054  000080                     TmrBInit@TmrNumb:
  3055                           	opt stack 0
  3056  000080                     ReceiveEvt@EventStatus:
  3057                           	opt stack 0
  3058  000080                     USBTransferOnePacket@len:
  3059                           	opt stack 0
  3060  000080                     isNumberValid@isNumberOk:
  3061                           	opt stack 0
  3062  000080                     I2c_ReadData@ReadPacket:
  3063                           	opt stack 0
  3064  000080                     Uart_WriteConstString@ConstStringToWrite:
  3065                           	opt stack 0
  3066  000080                     Uart_WriteString@StringToWrite:
  3067                           	opt stack 0
  3068  000080                     Uart_WriteStringLen@StringToWrite:
  3069                           	opt stack 0
  3070  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3071                           	opt stack 0
  3072  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3073                           	opt stack 0
  3074                           
  3075                           ; 2 bytes @ 0x20
  3076  000080                     	ds	1
  3077  000081                     ?_GetElapsedTime:
  3078                           	opt stack 0
  3079  000081                     ?_Rtcm_GetRtccDate:
  3080                           	opt stack 0
  3081  000081                     Mdm_IsSmsReceived@Ret:
  3082                           	opt stack 0
  3083  000081                     Mdm_IsRinging@Ret:
  3084                           	opt stack 0
  3085  000081                     I2cSlv_I2cReadMsgSts@Result:
  3086                           	opt stack 0
  3087  000081                     USBTransferOnePacket@ep:
  3088                           	opt stack 0
  3089  000081                     Led_SetLedBlinkTime@Led:
  3090                           	opt stack 0
  3091  000081                     isNumberValid@i:
  3092                           	opt stack 0
  3093  000081                     ___awdiv@counter:
  3094                           	opt stack 0
  3095  000081                     ___awmod@counter:
  3096                           	opt stack 0
  3097  000081                     ___lwmod@counter:
  3098                           	opt stack 0
  3099  000081                     _isalpha$6632:
  3100                           	opt stack 0
  3101  000081                     _isxdigit$6642:
  3102                           	opt stack 0
  3103  000081                     OsTmr_StartTimer@Timer:
  3104                           	opt stack 0
  3105  000081                     StringCompare@Len:
  3106                           	opt stack 0
  3107  000081                     ClearBuffer@Index:
  3108                           	opt stack 0
  3109  000081                     ___wmul@product:
  3110                           	opt stack 0
  3111  000081                     memcpy@n:
  3112                           	opt stack 0
  3113  000081                     memset@n:
  3114                           	opt stack 0
  3115  000081                     strcat@cp:
  3116                           	opt stack 0
  3117  000081                     strcpy@cp:
  3118                           	opt stack 0
  3119  000081                     strlen@cp:
  3120                           	opt stack 0
  3121  000081                     GetElapsedTime@StartTime:
  3122                           	opt stack 0
  3123  000081                     ___lmul@multiplicand:
  3124                           	opt stack 0
  3125                           
  3126                           ; 4 bytes @ 0x21
  3127  000081                     	ds	1
  3128  000082                     ??_I2c_ReadData:
  3129  000082                     Uart_WriteConstString@Module:
  3130                           	opt stack 0
  3131  000082                     Uart_WriteString@Module:
  3132                           	opt stack 0
  3133  000082                     Uart_WriteStringLen@Len:
  3134                           	opt stack 0
  3135  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3136                           	opt stack 0
  3137  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3138                           	opt stack 0
  3139  000082                     USBConfigureEndpoint@EPNum:
  3140                           	opt stack 0
  3141  000082                     ___awdiv@sign:
  3142                           	opt stack 0
  3143  000082                     ___awmod@sign:
  3144                           	opt stack 0
  3145  000082                     isalpha@c:
  3146                           	opt stack 0
  3147  000082                     isxdigit@c:
  3148                           	opt stack 0
  3149  000082                     USBTransferOnePacket@handle:
  3150                           	opt stack 0
  3151                           
  3152                           ; 2 bytes @ 0x22
  3153  000082                     	ds	1
  3154  000083                     ?_GetCallerNumber:
  3155                           	opt stack 0
  3156  000083                     ?_atoi:
  3157                           	opt stack 0
  3158  000083                     ?_xtoi:
  3159                           	opt stack 0
  3160  000083                     ?___lwdiv:
  3161                           	opt stack 0
  3162  000083                     Uart_WriteStringLen@Index:
  3163                           	opt stack 0
  3164  000083                     Mdm_SetSmsFormat@Index:
  3165                           	opt stack 0
  3166  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3167                           	opt stack 0
  3168  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3169                           	opt stack 0
  3170  000083                     getSetupCall@isCalledReceived:
  3171                           	opt stack 0
  3172  000083                     sprintf@flag:
  3173                           	opt stack 0
  3174  000083                     memcpy@tmp:
  3175                           	opt stack 0
  3176  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3177                           	opt stack 0
  3178  000083                     USBConfigureEndpoint@handle:
  3179                           	opt stack 0
  3180  000083                     putUSBUSART@data:
  3181                           	opt stack 0
  3182  000083                     atoi@s:
  3183                           	opt stack 0
  3184  000083                     ___awdiv@quotient:
  3185                           	opt stack 0
  3186  000083                     ___lwdiv@dividend:
  3187                           	opt stack 0
  3188  000083                     memset@p:
  3189                           	opt stack 0
  3190  000083                     xtoi@s:
  3191                           	opt stack 0
  3192  000083                     OsTmr_StartTimer@Timeout:
  3193                           	opt stack 0
  3194                           
  3195                           ; 4 bytes @ 0x23
  3196  000083                     	ds	1
  3197  000084                     Uart_WriteStringLen@Module:
  3198                           	opt stack 0
  3199  000084                     I2cSlv_SendI2cMsg@TxSts:
  3200                           	opt stack 0
  3201  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3202                           	opt stack 0
  3203  000084                     CDCTxService@i:
  3204                           	opt stack 0
  3205  000084                     getsUSBUSART@buffer:
  3206                           	opt stack 0
  3207  000084                     sprintf@ap:
  3208                           	opt stack 0
  3209  000084                     memcpy@d:
  3210                           	opt stack 0
  3211  000084                     Mdm_SetSmsFormat@UartMessage:
  3212                           	opt stack 0
  3213                           
  3214                           ; 20 bytes @ 0x24
  3215  000084                     	ds	1
  3216  000085                     ??_atoi:
  3217  000085                     ??_xtoi:
  3218  000085                     ??_GetElapsedTime:
  3219  000085                     Rtcc_SetRtccValue@Value:
  3220                           	opt stack 0
  3221  000085                     USBDeviceInit@i:
  3222                           	opt stack 0
  3223  000085                     USBEnableEndpoint@options:
  3224                           	opt stack 0
  3225  000085                     putUSBUSART@length:
  3226                           	opt stack 0
  3227  000085                     CDCTxService@byte_to_send:
  3228                           	opt stack 0
  3229  000085                     StringCompare@Result:
  3230                           	opt stack 0
  3231  000085                     StringCopy@SourceStr:
  3232                           	opt stack 0
  3233  000085                     ___lwdiv@divisor:
  3234                           	opt stack 0
  3235  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3236                           	opt stack 0
  3237  000085                     ___lmul@product:
  3238                           	opt stack 0
  3239                           
  3240                           ; 4 bytes @ 0x25
  3241  000085                     	ds	1
  3242  000086                     ??_Rtcc_SetRtccValue:
  3243  000086                     getsUSBUSART@len:
  3244                           	opt stack 0
  3245  000086                     sprintf@c:
  3246                           	opt stack 0
  3247  000086                     USBEnableEndpoint@p:
  3248                           	opt stack 0
  3249  000086                     StringCompare@Index:
  3250                           	opt stack 0
  3251  000086                     memcpy@s:
  3252                           	opt stack 0
  3253                           
  3254                           ; 2 bytes @ 0x26
  3255  000086                     	ds	1
  3256  000087                     atoi@sign:
  3257                           	opt stack 0
  3258  000087                     ___lwdiv@counter:
  3259                           	opt stack 0
  3260  000087                     xtoi@sign:
  3261                           	opt stack 0
  3262  000087                     StringCopy@DestStr:
  3263                           	opt stack 0
  3264  000087                     sprintf@cp:
  3265                           	opt stack 0
  3266                           
  3267                           ; 2 bytes @ 0x27
  3268  000087                     	ds	1
  3269  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3270                           	opt stack 0
  3271  000088                     USBEnableEndpoint@ep:
  3272                           	opt stack 0
  3273  000088                     parseCommand@text:
  3274                           	opt stack 0
  3275  000088                     atoi@a:
  3276                           	opt stack 0
  3277  000088                     ___lwdiv@quotient:
  3278                           	opt stack 0
  3279  000088                     xtoi@val:
  3280                           	opt stack 0
  3281                           
  3282                           ; 2 bytes @ 0x28
  3283  000088                     	ds	1
  3284  000089                     ??_Rtcm_GetRtccDate:
  3285  000089                     ?_strtol:
  3286                           	opt stack 0
  3287  000089                     ?___lldiv:
  3288                           	opt stack 0
  3289  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3290                           	opt stack 0
  3291  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3292                           	opt stack 0
  3293  000089                     StringCopy@Len:
  3294                           	opt stack 0
  3295  000089                     strtol@s:
  3296                           	opt stack 0
  3297  000089                     ___lldiv@dividend:
  3298                           	opt stack 0
  3299  000089                     Rtcm_SetRtccDate@Date:
  3300                           	opt stack 0
  3301                           
  3302                           ; 8 bytes @ 0x29
  3303  000089                     	ds	1
  3304  00008A                     xtoi@c:
  3305                           	opt stack 0
  3306  00008A                     LedBlinkStateMachine@LedBlink:
  3307                           	opt stack 0
  3308  00008A                     LedPulseStateMachine@LedPulse:
  3309                           	opt stack 0
  3310  00008A                     secondsAppTimer@counter:
  3311                           	opt stack 0
  3312  00008A                     utoa@buf:
  3313                           	opt stack 0
  3314  00008A                     parseCommand@addNumberCmd:
  3315                           	opt stack 0
  3316  00008A                     Rtcm_GetRtccDate@LocalDate:
  3317                           	opt stack 0
  3318                           
  3319                           ; 8 bytes @ 0x2A
  3320  00008A                     	ds	1
  3321  00008B                     ??_StringCopy:
  3322  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3323                           	opt stack 0
  3324  00008B                     strtol@endptr:
  3325                           	opt stack 0
  3326                           
  3327                           ; 2 bytes @ 0x2B
  3328  00008B                     	ds	1
  3329  00008C                     LedPulseStateMachine@Led:
  3330                           	opt stack 0
  3331  00008C                     secondsAppTimer@isCyclic:
  3332                           	opt stack 0
  3333  00008C                     utoa@val:
  3334                           	opt stack 0
  3335                           
  3336                           ; 2 bytes @ 0x2C
  3337  00008C                     	ds	1
  3338  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3339                           	opt stack 0
  3340  00008D                     StringCopy@Index:
  3341                           	opt stack 0
  3342  00008D                     strtol@base:
  3343                           	opt stack 0
  3344  00008D                     parseCommand@deleteNumberCmd:
  3345                           	opt stack 0
  3346  00008D                     GetElapsedTime@TimeValue:
  3347                           	opt stack 0
  3348  00008D                     ___lldiv@divisor:
  3349                           	opt stack 0
  3350                           
  3351                           ; 4 bytes @ 0x2D
  3352  00008D                     	ds	1
  3353  00008E                     utoa@base:
  3354                           	opt stack 0
  3355                           
  3356                           ; 2 bytes @ 0x2E
  3357  00008E                     	ds	1
  3358  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3359  00008F                     ??_strtol:
  3360  00008F                     secondsAppTimer@seconds:
  3361                           	opt stack 0
  3362  00008F                     Mdm_GetSmsData@MessageText:
  3363                           	opt stack 0
  3364  00008F                     Eeprom_Write@WriteBuffer:
  3365                           	opt stack 0
  3366  00008F                     LedStateMachine@LedSts:
  3367                           	opt stack 0
  3368  00008F                     ModemEvtParser@CallReadyString:
  3369                           	opt stack 0
  3370                           
  3371                           ; 10 bytes @ 0x2F
  3372  00008F                     	ds	1
  3373  000090                     parseCommand@state:
  3374                           	opt stack 0
  3375  000090                     secondsAppTimer@isExpired:
  3376                           	opt stack 0
  3377  000090                     utoa@v:
  3378                           	opt stack 0
  3379                           
  3380                           ; 2 bytes @ 0x30
  3381  000090                     	ds	1
  3382  000091                     ??_USBStdFeatureReqHandler:
  3383  000091                     Mdm_GetSmsData@GetSmsStatus:
  3384                           	opt stack 0
  3385  000091                     USBStdSetCfgHandler@i:
  3386                           	opt stack 0
  3387  000091                     Eeprom_Write@DataLength:
  3388                           	opt stack 0
  3389  000091                     LedStateMachine@LedOut:
  3390                           	opt stack 0
  3391  000091                     secondsAppTimer@destinationTicks:
  3392                           	opt stack 0
  3393  000091                     GetElapsedTime@CurrentTimestamp:
  3394                           	opt stack 0
  3395  000091                     ___lldiv@quotient:
  3396                           	opt stack 0
  3397                           
  3398                           ; 4 bytes @ 0x31
  3399  000091                     	ds	1
  3400  000092                     Eeprom_Write@WriteSts:
  3401                           	opt stack 0
  3402  000092                     utoa@c:
  3403                           	opt stack 0
  3404  000092                     USBStdFeatureReqHandler@pUEP:
  3405                           	opt stack 0
  3406                           
  3407                           ; 2 bytes @ 0x32
  3408  000092                     	ds	1
  3409  000093                     Eeprom_Write@MemoryAddress:
  3410                           	opt stack 0
  3411  000093                     waitSetupCall@isCallArrived:
  3412                           	opt stack 0
  3413  000093                     strtol@sign:
  3414                           	opt stack 0
  3415  000093                     LedStateMachine@LedBlink:
  3416                           	opt stack 0
  3417  000093                     itoa@buf:
  3418                           	opt stack 0
  3419                           
  3420                           ; 2 bytes @ 0x33
  3421  000093                     	ds	1
  3422  000094                     USBStdFeatureReqHandler@current_ep_data:
  3423                           	opt stack 0
  3424  000094                     Eeprom_Write@SlaveAddress:
  3425                           	opt stack 0
  3426  000094                     strtol@a:
  3427                           	opt stack 0
  3428                           
  3429                           ; 4 bytes @ 0x34
  3430  000094                     	ds	1
  3431  000095                     Eeprom_Write@CommandLength:
  3432                           	opt stack 0
  3433  000095                     ___lldiv@counter:
  3434                           	opt stack 0
  3435  000095                     OsTmr_GetTimerStatus@Timer:
  3436                           	opt stack 0
  3437  000095                     USBStdFeatureReqHandler@p:
  3438                           	opt stack 0
  3439  000095                     LedStateMachine@LedPulse:
  3440                           	opt stack 0
  3441  000095                     itoa@val:
  3442                           	opt stack 0
  3443                           
  3444                           ; 2 bytes @ 0x35
  3445  000095                     	ds	1
  3446  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3447                           	opt stack 0
  3448  000096                     SetUartBaudRate@UartConfig:
  3449                           	opt stack 0
  3450  000096                     saveNumberInMemory@phoneNumber:
  3451                           	opt stack 0
  3452  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3453                           	opt stack 0
  3454                           
  3455                           ; 4 bytes @ 0x36
  3456  000096                     	ds	1
  3457  000097                     ??_USBCtrlEPService:
  3458  000097                     itoa@base:
  3459                           	opt stack 0
  3460                           
  3461                           ; 2 bytes @ 0x37
  3462  000097                     	ds	1
  3463  000098                     Tmr_TmrBPrSet@Prescaler:
  3464                           	opt stack 0
  3465  000098                     Mdm_SetSmsFormat@TextFormat:
  3466                           	opt stack 0
  3467  000098                     USBDeviceTasks@i:
  3468                           	opt stack 0
  3469  000098                     LedStateMachine@LedOutSts:
  3470                           	opt stack 0
  3471  000098                     saveNumberInMemory@address:
  3472                           	opt stack 0
  3473  000098                     strtol@c:
  3474                           	opt stack 0
  3475                           
  3476                           ; 1 bytes @ 0x38
  3477  000098                     	ds	1
  3478  000099                     Tmr_TmrBPrSet@Postscaler:
  3479                           	opt stack 0
  3480  000099                     SetUartBaudRate@Module:
  3481                           	opt stack 0
  3482  000099                     LedStateMachine@Led:
  3483                           	opt stack 0
  3484  000099                     initGprsModem@isInitialized:
  3485                           	opt stack 0
  3486  000099                     itoa@cp:
  3487                           	opt stack 0
  3488  000099                     ModemEvtParser@ClipString:
  3489                           	opt stack 0
  3490                           
  3491                           ; 5 bytes @ 0x39
  3492  000099                     	ds	1
  3493  00009A                     ??_Led_MainTask:
  3494  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3495                           	opt stack 0
  3496  00009A                     SetUartBaudRate@BaudRateRegister:
  3497                           	opt stack 0
  3498  00009A                     SetBaudRate@McuClockHz:
  3499                           	opt stack 0
  3500                           
  3501                           ; 4 bytes @ 0x3A
  3502  00009A                     	ds	1
  3503  00009B                     ??_SendSmsSm:
  3504  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3505                           	opt stack 0
  3506  00009B                     OsTmr_Wait@WaitTimer:
  3507                           	opt stack 0
  3508  00009B                     InitGprsNetwork@Apn:
  3509                           	opt stack 0
  3510  00009B                     HttpGetMethod@GetData:
  3511                           	opt stack 0
  3512                           
  3513                           ; 2 bytes @ 0x3B
  3514  00009B                     	ds	1
  3515  00009C                     SetUartBaudRate@DivisionFactor:
  3516                           	opt stack 0
  3517  00009C                     Tmr_TmrBPrSet@Divisor:
  3518                           	opt stack 0
  3519                           
  3520                           ; 4 bytes @ 0x3C
  3521  00009C                     	ds	1
  3522  00009D                     ??_HttpGetMethod:
  3523  00009D                     InitGprsNetwork@ApnLen:
  3524                           	opt stack 0
  3525  00009D                     Uart_InitUartModule@UartConfig:
  3526                           	opt stack 0
  3527  00009D                     OsTmr_Wait@DelayMs:
  3528                           	opt stack 0
  3529                           
  3530                           ; 4 bytes @ 0x3D
  3531  00009D                     	ds	1
  3532  00009E                     ??_SetBaudRate:
  3533  00009E                     ??_InitGprsNetwork:
  3534  00009E                     ModemEvtParser@SmsString:
  3535                           	opt stack 0
  3536                           
  3537                           ; 5 bytes @ 0x3E
  3538  00009E                     	ds	1
  3539  00009F                     ??_Uart_InitUartModule:
  3540                           
  3541                           ; 1 bytes @ 0x3F
  3542  00009F                     	ds	1
  3543  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3544                           	opt stack 0
  3545                           
  3546                           ; 2 bytes @ 0x40
  3547  0000A0                     	ds	1
  3548  0000A1                     Uart_InitUartModule@Module:
  3549                           	opt stack 0
  3550  0000A1                     OsTmr_Wait@Ret:
  3551                           	opt stack 0
  3552                           
  3553                           ; 1 bytes @ 0x41
  3554  0000A1                     	ds	1
  3555  0000A2                     ??_Terminal:
  3556  0000A2                     I2c_InitI2cModule@I2cConfig:
  3557                           	opt stack 0
  3558  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3559                           	opt stack 0
  3560                           
  3561                           ; 2 bytes @ 0x42
  3562  0000A2                     	ds	1
  3563  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3564                           	opt stack 0
  3565  0000A3                     ModemEvtParser@RingString:
  3566                           	opt stack 0
  3567                           
  3568                           ; 4 bytes @ 0x43
  3569  0000A3                     	ds	1
  3570  0000A4                     ??_I2c_InitI2cModule:
  3571  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3572                           	opt stack 0
  3573  0000A4                     Terminal@i:
  3574                           	opt stack 0
  3575  0000A4                     InitSchedTimer@TmrBConfig:
  3576                           	opt stack 0
  3577                           
  3578                           ; 7 bytes @ 0x44
  3579  0000A4                     	ds	1
  3580  0000A5                     Terminal@ReceivedBytes:
  3581                           	opt stack 0
  3582  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3583                           	opt stack 0
  3584                           
  3585                           ; 2 bytes @ 0x45
  3586  0000A5                     	ds	1
  3587  0000A6                     Terminal@Index:
  3588                           	opt stack 0
  3589                           
  3590                           ; 1 bytes @ 0x46
  3591  0000A6                     	ds	1
  3592  0000A7                     ModemEvtParser@Match:
  3593                           	opt stack 0
  3594  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3595                           	opt stack 0
  3596                           
  3597                           ; 1 bytes @ 0x47
  3598  0000A7                     	ds	1
  3599  0000A8                     ModemEvtParser@CompareIdx:
  3600                           	opt stack 0
  3601  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3602                           	opt stack 0
  3603                           
  3604                           ; 1 bytes @ 0x48
  3605  0000A8                     	ds	1
  3606  0000A9                     Eeprom_Read@ReadBuffer:
  3607                           	opt stack 0
  3608                           
  3609                           ; 2 bytes @ 0x49
  3610  0000A9                     	ds	2
  3611  0000AB                     Eeprom_Read@DataLength:
  3612                           	opt stack 0
  3613                           
  3614                           ; 1 bytes @ 0x4B
  3615  0000AB                     	ds	1
  3616  0000AC                     Eeprom_Read@MemoryAddress:
  3617                           	opt stack 0
  3618                           
  3619                           ; 1 bytes @ 0x4C
  3620  0000AC                     	ds	1
  3621  0000AD                     Eeprom_Read@SlaveAddress:
  3622                           	opt stack 0
  3623                           
  3624                           ; 1 bytes @ 0x4D
  3625  0000AD                     	ds	1
  3626  0000AE                     Eeprom_Read@ReadSts:
  3627                           	opt stack 0
  3628                           
  3629                           ; 1 bytes @ 0x4E
  3630  0000AE                     	ds	1
  3631  0000AF                     Eeprom_Read@QuerySts:
  3632                           	opt stack 0
  3633                           
  3634                           ; 1 bytes @ 0x4F
  3635  0000AF                     	ds	1
  3636  0000B0                     tblptru	equ	0xFF8
  3637                           tblptrh	equ	0xFF7
  3638                           tblptrl	equ	0xFF6
  3639                           tablat	equ	0xFF5
  3640                           postinc0	equ	0xFEE
  3641                           wreg	equ	0xFE8
  3642                           postdec1	equ	0xFE5
  3643                           fsr1h	equ	0xFE2
  3644                           fsr1l	equ	0xFE1
  3645                           
  3646                           ; 1 bytes @ 0x50
  3647                           
  3648                           	psect	cstackCOMRAM
  3649  000001                     __pcstackCOMRAM:
  3650                           	opt stack 0
  3651  000001                     i2GenerateEvt@Event:
  3652                           	opt stack 0
  3653                           
  3654                           ; 2 bytes @ 0x0
  3655  000001                     	ds	2
  3656  000003                     i2GenerateEvt@EventStatus:
  3657                           	opt stack 0
  3658                           
  3659                           ; 1 bytes @ 0x2
  3660  000003                     	ds	1
  3661  000004                     Uart_MdmGsmGprsReadService@UartData:
  3662                           	opt stack 0
  3663                           
  3664                           ; 1 bytes @ 0x3
  3665  000004                     	ds	1
  3666  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3667                           	opt stack 0
  3668                           
  3669                           ; 2 bytes @ 0x4
  3670  000005                     	ds	2
  3671  000007                     ??_HighPriorityIsr:
  3672                           
  3673                           ; 1 bytes @ 0x6
  3674  000007                     	ds	18
  3675  000019                     ?i1___wmul:
  3676                           	opt stack 0
  3677  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3678                           	opt stack 0
  3679  000019                     i1GenerateEvt@Event:
  3680                           	opt stack 0
  3681  000019                     i1___wmul@multiplier:
  3682                           	opt stack 0
  3683                           
  3684                           ; 2 bytes @ 0x18
  3685  000019                     	ds	2
  3686  00001B                     i1GenerateEvt@EventStatus:
  3687                           	opt stack 0
  3688  00001B                     i1___wmul@multiplicand:
  3689                           	opt stack 0
  3690                           
  3691                           ; 2 bytes @ 0x1A
  3692  00001B                     	ds	1
  3693  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3694                           	opt stack 0
  3695                           
  3696                           ; 2 bytes @ 0x1B
  3697  00001C                     	ds	1
  3698  00001D                     i1___wmul@product:
  3699                           	opt stack 0
  3700                           
  3701                           ; 2 bytes @ 0x1C
  3702  00001D                     	ds	1
  3703  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3704                           	opt stack 0
  3705                           
  3706                           ; 1 bytes @ 0x1D
  3707  00001E                     	ds	1
  3708  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3709                           	opt stack 0
  3710                           
  3711                           ; 1 bytes @ 0x1E
  3712  00001F                     	ds	1
  3713  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3714                           	opt stack 0
  3715                           
  3716                           ; 1 bytes @ 0x1F
  3717  000020                     	ds	1
  3718  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3719                           	opt stack 0
  3720                           
  3721                           ; 2 bytes @ 0x20
  3722  000021                     	ds	2
  3723  000023                     tblptru	equ	0xFF8
  3724                           tblptrh	equ	0xFF7
  3725                           tblptrl	equ	0xFF6
  3726                           tablat	equ	0xFF5
  3727                           postinc0	equ	0xFEE
  3728                           wreg	equ	0xFE8
  3729                           postdec1	equ	0xFE5
  3730                           fsr1h	equ	0xFE2
  3731                           fsr1l	equ	0xFE1
  3732                           
  3733                           ; 1 bytes @ 0x22
  3734 ;;
  3735 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3736 ;;
  3737 ;; *************** function _main *****************
  3738 ;; Defined at:
  3739 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;		None
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;		None
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  2   14[None  ] short 
  3746 ;; Registers used:
  3747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3757 ;;Total ram usage:        0 bytes
  3758 ;; Hardware stack levels required when called:   23
  3759 ;; This function calls:
  3760 ;;		_Sch_MainScheduler
  3761 ;;		_SystemInit
  3762 ;; This function is called by:
  3763 ;;		Startup code after reset
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           	psect	text0
  3768  00687C                     __ptext0:
  3769                           	opt stack 0
  3770  00687C                     _main:
  3771                           	opt stack 8
  3772                           
  3773                           ;main.c: 61: SystemInit();
  3774                           
  3775                           ;incstack = 0
  3776  00687C  EC33  F031         	call	_SystemInit	;wreg free
  3777                           
  3778                           ;main.c: 64: Sch_MainScheduler();
  3779  006880  EC28  F033         	call	_Sch_MainScheduler	;wreg free
  3780                           
  3781                           ;main.c: 67: return 0;
  3782                           ;	Return value of _main is never used
  3783  006884  EF66  F000         	goto	start
  3784  006888                     __end_of_main:
  3785                           	opt stack 0
  3786                           tblptru	equ	0xFF8
  3787                           tblptrh	equ	0xFF7
  3788                           tblptrl	equ	0xFF6
  3789                           tablat	equ	0xFF5
  3790                           postinc0	equ	0xFEE
  3791                           wreg	equ	0xFE8
  3792                           postdec1	equ	0xFE5
  3793                           fsr1h	equ	0xFE2
  3794                           fsr1l	equ	0xFE1
  3795                           
  3796 ;; *************** function _SystemInit *****************
  3797 ;; Defined at:
  3798 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3816 ;;Total ram usage:        0 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:   15
  3819 ;; This function calls:
  3820 ;;		_InitSchedTimer
  3821 ;;		_Irq_InitIntController
  3822 ;;		_Mcu_ConfigExtInt
  3823 ;;		_Mcu_StartSystemPll
  3824 ;;		_Pm_DsReleasePinControl
  3825 ;;		_Tmr_RegisterTmr2IsrCallback
  3826 ;; This function is called by:
  3827 ;;		_main
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text1
  3832  006266                     __ptext1:
  3833                           	opt stack 0
  3834  006266                     _SystemInit:
  3835                           	opt stack 15
  3836                           
  3837                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3838                           
  3839                           ;incstack = 0
  3840  006266  EC67  F034         	call	_Pm_DsReleasePinControl	;wreg free
  3841                           
  3842                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3843  00626A  EC19  F033         	call	_Mcu_StartSystemPll	;wreg free
  3844                           
  3845                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3846  00626E  0E01               	movlw	1
  3847  006270  0100               	movlb	0	; () banked
  3848  006272  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3849  006274  0E01               	movlw	1
  3850  006276  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3851  006278  0E01               	movlw	1
  3852  00627A  ECD7  F031         	call	_Irq_InitIntController
  3853                           
  3854                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3855  00627E  0E60               	movlw	low _Sch_SchmIntService
  3856  006280  0100               	movlb	0	; () banked
  3857  006282  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3858  006284  0E68               	movlw	high _Sch_SchmIntService
  3859  006286  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3860  006288  EC4A  F034         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3861                           
  3862                           ;sys_init.c: 132: InitSchedTimer();
  3863  00628C  EC93  F031         	call	_InitSchedTimer	;wreg free
  3864                           
  3865                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3866  006290  EC53  F033         	call	_Mcu_ConfigExtInt	;wreg free
  3867  006294  0012               	return		;funcret
  3868  006296                     __end_of_SystemInit:
  3869                           	opt stack 0
  3870                           tblptru	equ	0xFF8
  3871                           tblptrh	equ	0xFF7
  3872                           tblptrl	equ	0xFF6
  3873                           tablat	equ	0xFF5
  3874                           postinc0	equ	0xFEE
  3875                           wreg	equ	0xFE8
  3876                           postdec1	equ	0xFE5
  3877                           fsr1h	equ	0xFE2
  3878                           fsr1l	equ	0xFE1
  3879                           
  3880 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3881 ;; Defined at:
  3882 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3885 ;;		 -> Sch_SchmIntService(1), 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;		None
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      void 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3897 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3900 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3901 ;;Total ram usage:        2 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:   11
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_SystemInit
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text2
  3912  006894                     __ptext2:
  3913                           	opt stack 0
  3914  006894                     _Tmr_RegisterTmr2IsrCallback:
  3915                           	opt stack 18
  3916                           
  3917                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3918                           
  3919                           ;incstack = 0
  3920  006894  C07D  F2E8         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3921  006898  C07E  F2E9         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3922  00689C  0012               	return		;funcret
  3923  00689E                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3924                           	opt stack 0
  3925                           tblptru	equ	0xFF8
  3926                           tblptrh	equ	0xFF7
  3927                           tblptrl	equ	0xFF6
  3928                           tablat	equ	0xFF5
  3929                           postinc0	equ	0xFEE
  3930                           wreg	equ	0xFE8
  3931                           postdec1	equ	0xFE5
  3932                           fsr1h	equ	0xFE2
  3933                           fsr1l	equ	0xFE1
  3934                           
  3935 ;; *************** function _Pm_DsReleasePinControl *****************
  3936 ;; Defined at:
  3937 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;		None
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;		None
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      void 
  3944 ;; Registers used:
  3945 ;;		None
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3955 ;;Total ram usage:        0 bytes
  3956 ;; Hardware stack levels used:    1
  3957 ;; Hardware stack levels required when called:   11
  3958 ;; This function calls:
  3959 ;;		Nothing
  3960 ;; This function is called by:
  3961 ;;		_SystemInit
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text3
  3966  0068CE                     __ptext3:
  3967                           	opt stack 0
  3968  0068CE                     _Pm_DsReleasePinControl:
  3969                           	opt stack 18
  3970                           
  3971                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3972                           
  3973                           ;incstack = 0
  3974  0068CE  010F               	movlb	15	; () banked
  3975  0068D0  914C               	bcf	76,0,b	;volatile
  3976                           
  3977                           ; BSR set to: 15
  3978  0068D2  0012               	return		;funcret
  3979  0068D4                     __end_of_Pm_DsReleasePinControl:
  3980                           	opt stack 0
  3981                           tblptru	equ	0xFF8
  3982                           tblptrh	equ	0xFF7
  3983                           tblptrl	equ	0xFF6
  3984                           tablat	equ	0xFF5
  3985                           postinc0	equ	0xFEE
  3986                           wreg	equ	0xFE8
  3987                           postdec1	equ	0xFE5
  3988                           fsr1h	equ	0xFE2
  3989                           fsr1l	equ	0xFE1
  3990                           
  3991 ;; *************** function _Mcu_StartSystemPll *****************
  3992 ;; Defined at:
  3993 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      void 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4008 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4010 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4011 ;;Total ram usage:        2 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; Hardware stack levels required when called:   11
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_SystemInit
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text4
  4022  006632                     __ptext4:
  4023                           	opt stack 0
  4024  006632                     _Mcu_StartSystemPll:
  4025                           	opt stack 18
  4026                           
  4027                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  4028                           
  4029                           ; BSR set to: 15
  4030                           ;incstack = 0
  4031  006632  0E03               	movlw	3
  4032  006634  0100               	movlb	0	; () banked
  4033  006636  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  4034  006638  0EE8               	movlw	232
  4035  00663A  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  4039  00663C  8C9B               	bsf	3995,6,c	;volatile
  4040  00663E                     l11898:
  4041                           
  4042                           ; BSR set to: 0
  4043  00663E  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  4044  006640  A0D8               	btfss	status,0,c
  4045  006642  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  4046  006644  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  4047  006646  E1FB               	bnz	l11898
  4048  006648  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  4049  00664A  B4D8               	btfsc	status,2,c
  4050  00664C  0012               	return	
  4051  00664E  D7F7               	goto	l237
  4052  006650                     __end_of_Mcu_StartSystemPll:
  4053                           	opt stack 0
  4054                           tblptru	equ	0xFF8
  4055                           tblptrh	equ	0xFF7
  4056                           tblptrl	equ	0xFF6
  4057                           tablat	equ	0xFF5
  4058                           postinc0	equ	0xFEE
  4059                           wreg	equ	0xFE8
  4060                           postdec1	equ	0xFE5
  4061                           fsr1h	equ	0xFE2
  4062                           fsr1l	equ	0xFE1
  4063                           status	equ	0xFD8
  4064                           
  4065 ;; *************** function _Mcu_ConfigExtInt *****************
  4066 ;; Defined at:
  4067 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4085 ;;Total ram usage:        0 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:   11
  4088 ;; This function calls:
  4089 ;;		Nothing
  4090 ;; This function is called by:
  4091 ;;		_SystemInit
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text5
  4096  0066A6                     __ptext5:
  4097                           	opt stack 0
  4098  0066A6                     _Mcu_ConfigExtInt:
  4099                           	opt stack 18
  4100                           
  4101                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;incstack = 0
  4105  0066A6  8093               	bsf	3987,0,c	;volatile
  4106                           
  4107                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4108  0066A8  8695               	bsf	3989,3,c	;volatile
  4109                           
  4110                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4111  0066AA  010F               	movlb	15	; () banked
  4112  0066AC  8949               	bsf	73,4,b	;volatile
  4113                           
  4114                           ; BSR set to: 15
  4115                           ;mcu_drv.c: 108: RPINR1 = 20;
  4116  0066AE  0E14               	movlw	20
  4117  0066B0  010E               	movlb	14	; () banked
  4118  0066B2  6FE7               	movwf	231,b	;volatile
  4119                           
  4120                           ; BSR set to: 14
  4121                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4122  0066B4  88F2               	bsf	intcon,4,c	;volatile
  4123                           
  4124                           ; BSR set to: 14
  4125                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4126  0066B6  86F0               	bsf	intcon3,3,c	;volatile
  4127                           
  4128                           ; BSR set to: 14
  4129                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4130  0066B8  8CF0               	bsf	intcon3,6,c	;volatile
  4131                           
  4132                           ; BSR set to: 14
  4133                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4134  0066BA  9CF1               	bcf	intcon2,6,c	;volatile
  4135                           
  4136                           ; BSR set to: 14
  4137                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4138  0066BC  9AF1               	bcf	intcon2,5,c	;volatile
  4139                           
  4140                           ; BSR set to: 14
  4141  0066BE  0012               	return		;funcret
  4142  0066C0                     __end_of_Mcu_ConfigExtInt:
  4143                           	opt stack 0
  4144                           tblptru	equ	0xFF8
  4145                           tblptrh	equ	0xFF7
  4146                           tblptrl	equ	0xFF6
  4147                           tablat	equ	0xFF5
  4148                           intcon	equ	0xFF2
  4149                           intcon2	equ	0xFF1
  4150                           intcon3	equ	0xFF0
  4151                           postinc0	equ	0xFEE
  4152                           wreg	equ	0xFE8
  4153                           postdec1	equ	0xFE5
  4154                           fsr1h	equ	0xFE2
  4155                           fsr1l	equ	0xFE1
  4156                           status	equ	0xFD8
  4157                           
  4158 ;; *************** function _Irq_InitIntController *****************
  4159 ;; Defined at:
  4160 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  IntPriorityE    1    wreg     enum E7720
  4163 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4164 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4176 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4177 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4179 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4180 ;;Total ram usage:        3 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; Hardware stack levels required when called:   11
  4183 ;; This function calls:
  4184 ;;		Nothing
  4185 ;; This function is called by:
  4186 ;;		_SystemInit
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           	psect	text6
  4191  0063AE                     __ptext6:
  4192                           	opt stack 0
  4193  0063AE                     _Irq_InitIntController:
  4194                           	opt stack 18
  4195                           
  4196                           ; BSR set to: 14
  4197                           ;incstack = 0
  4198                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4199  0063AE  0100               	movlb	0	; () banked
  4200  0063B0  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4201                           
  4202                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4203  0063B2  0100               	movlb	0	; () banked
  4204  0063B4  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4205  0063B6  D002               	bra	u10515
  4206  0063B8  9ED0               	bcf	4048,7,c	;volatile
  4207  0063BA  D001               	bra	u10516
  4208  0063BC                     u10515:
  4209  0063BC  8ED0               	bsf	4048,7,c	;volatile
  4210  0063BE                     u10516:
  4211                           
  4212                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4213  0063BE  0100               	movlb	0	; () banked
  4214  0063C0  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4215  0063C2  D002               	bra	u10525
  4216  0063C4  9EF2               	bcf	intcon,7,c	;volatile
  4217  0063C6  D001               	bra	u10526
  4218  0063C8                     u10525:
  4219  0063C8  8EF2               	bsf	intcon,7,c	;volatile
  4220  0063CA                     u10526:
  4221                           
  4222                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4223  0063CA  0100               	movlb	0	; () banked
  4224  0063CC  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4225  0063CE  D002               	bra	u10535
  4226  0063D0  9CF2               	bcf	intcon,6,c	;volatile
  4227  0063D2  D001               	bra	u10536
  4228  0063D4                     u10535:
  4229  0063D4  8CF2               	bsf	intcon,6,c	;volatile
  4230  0063D6                     u10536:
  4231  0063D6  0012               	return		;funcret
  4232  0063D8                     __end_of_Irq_InitIntController:
  4233                           	opt stack 0
  4234                           tblptru	equ	0xFF8
  4235                           tblptrh	equ	0xFF7
  4236                           tblptrl	equ	0xFF6
  4237                           tablat	equ	0xFF5
  4238                           intcon	equ	0xFF2
  4239                           intcon2	equ	0xFF1
  4240                           intcon3	equ	0xFF0
  4241                           postinc0	equ	0xFEE
  4242                           wreg	equ	0xFE8
  4243                           postdec1	equ	0xFE5
  4244                           fsr1h	equ	0xFE2
  4245                           fsr1l	equ	0xFE1
  4246                           status	equ	0xFD8
  4247                           
  4248 ;; *************** function _InitSchedTimer *****************
  4249 ;; Defined at:
  4250 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;		None
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      void 
  4257 ;; Registers used:
  4258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4265 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4267 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4268 ;;Total ram usage:        7 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:   14
  4271 ;; This function calls:
  4272 ;;		_Tmr_TmrBConfig
  4273 ;; This function is called by:
  4274 ;;		_SystemInit
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text7
  4279  006326                     __ptext7:
  4280                           	opt stack 0
  4281  006326                     _InitSchedTimer:
  4282                           	opt stack 15
  4283                           
  4284                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4285                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4286                           
  4287                           ;incstack = 0
  4288  006326  0E04               	movlw	4
  4289  006328  0100               	movlb	0	; () banked
  4290  00632A  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4291                           
  4292                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4293  00632C  0E0C               	movlw	12
  4294  00632E  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4295                           
  4296                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4297  006330  0E00               	movlw	0
  4298  006332  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4299                           
  4300                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4301  006334  0E01               	movlw	1
  4302  006336  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4303                           
  4304                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4305  006338  0E03               	movlw	3
  4306  00633A  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4307  00633C  0EE8               	movlw	232
  4308  00633E  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4309                           
  4310                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4311  006340  0E01               	movlw	1
  4312  006342  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4316  006344  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4317  006346  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4318  006348  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4319  00634A  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4320  00634C  0E02               	movlw	2
  4321  00634E  EC20  F01F         	call	_Tmr_TmrBConfig
  4322  006352  0012               	return		;funcret
  4323  006354                     __end_of_InitSchedTimer:
  4324                           	opt stack 0
  4325                           tblptru	equ	0xFF8
  4326                           tblptrh	equ	0xFF7
  4327                           tblptrl	equ	0xFF6
  4328                           tablat	equ	0xFF5
  4329                           intcon	equ	0xFF2
  4330                           intcon2	equ	0xFF1
  4331                           intcon3	equ	0xFF0
  4332                           postinc0	equ	0xFEE
  4333                           wreg	equ	0xFE8
  4334                           postdec1	equ	0xFE5
  4335                           fsr1h	equ	0xFE2
  4336                           fsr1l	equ	0xFE1
  4337                           status	equ	0xFD8
  4338                           
  4339 ;; *************** function _Tmr_TmrBConfig *****************
  4340 ;; Defined at:
  4341 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  TmrNumb         1    wreg     unsigned char 
  4344 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4345 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      void 
  4350 ;; Registers used:
  4351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4357 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4358 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4359 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4360 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4361 ;;Total ram usage:        4 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:   13
  4364 ;; This function calls:
  4365 ;;		_TmrBInit
  4366 ;;		_Tmr_StartTmr
  4367 ;;		_Tmr_TmrBIrqSet
  4368 ;;		_Tmr_TmrBPrSet
  4369 ;; This function is called by:
  4370 ;;		_InitSchedTimer
  4371 ;;		_InitAuxTimer
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text8
  4376  003E40                     __ptext8:
  4377                           	opt stack 0
  4378  003E40                     _Tmr_TmrBConfig:
  4379                           	opt stack 15
  4380                           
  4381                           ;incstack = 0
  4382                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4383  003E40  0100               	movlb	0	; () banked
  4384  003E42  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4385                           
  4386                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4387  003E44  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4388  003E48  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4389  003E4C  50DF               	movf	indf2,w,c
  4390  003E4E  0100               	movlb	0	; () banked
  4391  003E50  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4392  003E52  EE20 F001          	lfsr	2,1
  4393  003E56  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4394  003E58  26D9               	addwf	fsr2l,f,c
  4395  003E5A  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4396  003E5C  22DA               	addwfc	fsr2h,f,c
  4397  003E5E  50DF               	movf	indf2,w,c
  4398  003E60  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4399  003E62  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4400  003E64  EC54  F025         	call	_TmrBInit
  4401                           
  4402                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4403  003E68  0100               	movlb	0	; () banked
  4404  003E6A  EE20 F002          	lfsr	2,2
  4405  003E6E  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4406  003E70  26D9               	addwf	fsr2l,f,c
  4407  003E72  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4408  003E74  22DA               	addwfc	fsr2h,f,c
  4409  003E76  04DE               	decf	postinc2,w,c
  4410  003E78  A4D8               	btfss	status,2,c
  4411  003E7A  D00E               	goto	l546
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;tmr_drv.c: 277: {
  4415                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4416  003E7C  EE20 F003          	lfsr	2,3
  4417  003E80  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4418  003E82  26D9               	addwf	fsr2l,f,c
  4419  003E84  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4420  003E86  22DA               	addwfc	fsr2h,f,c
  4421  003E88  50DF               	movf	indf2,w,c
  4422  003E8A  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4423  003E8C  0E01               	movlw	1
  4424  003E8E  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4425  003E90  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4426  003E92  EC3B  F02E         	call	_Tmr_TmrBIrqSet
  4427                           
  4428                           ;tmr_drv.c: 280: }
  4429  003E96  D00E               	goto	l547
  4430  003E98                     l546:
  4431                           
  4432                           ;tmr_drv.c: 281: else
  4433                           ;tmr_drv.c: 282: {
  4434                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4435  003E98  0100               	movlb	0	; () banked
  4436  003E9A  EE20 F003          	lfsr	2,3
  4437  003E9E  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4438  003EA0  26D9               	addwf	fsr2l,f,c
  4439  003EA2  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4440  003EA4  22DA               	addwfc	fsr2h,f,c
  4441  003EA6  50DF               	movf	indf2,w,c
  4442  003EA8  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4443  003EAA  0E00               	movlw	0
  4444  003EAC  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4445  003EAE  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4446  003EB0  EC3B  F02E         	call	_Tmr_TmrBIrqSet
  4447  003EB4                     l547:
  4448                           
  4449                           ;tmr_drv.c: 285: }
  4450                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4451  003EB4  0100               	movlb	0	; () banked
  4452  003EB6  EE20 F004          	lfsr	2,4
  4453  003EBA  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4454  003EBC  26D9               	addwf	fsr2l,f,c
  4455  003EBE  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4456  003EC0  22DA               	addwfc	fsr2h,f,c
  4457  003EC2  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4458  003EC6  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4459  003ECA  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4460  003ECE  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4461  003ED2  50DF               	movf	indf2,w,c
  4462  003ED4  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4463  003ED6  EE20 F001          	lfsr	2,1
  4464  003EDA  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4465  003EDC  26D9               	addwf	fsr2l,f,c
  4466  003EDE  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4467  003EE0  22DA               	addwfc	fsr2h,f,c
  4468  003EE2  50DF               	movf	indf2,w,c
  4469  003EE4  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4470  003EE6  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4471  003EE8  EC96  F019         	call	_Tmr_TmrBPrSet
  4472                           
  4473                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4474  003EEC  0100               	movlb	0	; () banked
  4475  003EEE  EE20 F006          	lfsr	2,6
  4476  003EF2  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4477  003EF4  26D9               	addwf	fsr2l,f,c
  4478  003EF6  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4479  003EF8  22DA               	addwfc	fsr2h,f,c
  4480  003EFA  04DE               	decf	postinc2,w,c
  4481  003EFC  A4D8               	btfss	status,2,c
  4482  003EFE  0012               	return	
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;tmr_drv.c: 290: {
  4486                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4487  003F00  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4488  003F02  ECE9  F032         	call	_Tmr_StartTmr
  4489                           
  4490                           ;tmr_drv.c: 293: }
  4491  003F06  0012               	return	
  4492  003F08                     __end_of_Tmr_TmrBConfig:
  4493                           	opt stack 0
  4494                           tblptru	equ	0xFF8
  4495                           tblptrh	equ	0xFF7
  4496                           tblptrl	equ	0xFF6
  4497                           tablat	equ	0xFF5
  4498                           intcon	equ	0xFF2
  4499                           intcon2	equ	0xFF1
  4500                           intcon3	equ	0xFF0
  4501                           postinc0	equ	0xFEE
  4502                           wreg	equ	0xFE8
  4503                           postdec1	equ	0xFE5
  4504                           fsr1h	equ	0xFE2
  4505                           fsr1l	equ	0xFE1
  4506                           indf2	equ	0xFDF
  4507                           postinc2	equ	0xFDE
  4508                           postdec2	equ	0xFDD
  4509                           fsr2h	equ	0xFDA
  4510                           fsr2l	equ	0xFD9
  4511                           status	equ	0xFD8
  4512                           
  4513 ;; *************** function _Tmr_TmrBPrSet *****************
  4514 ;; Defined at:
  4515 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  TmrNumb         1    wreg     unsigned char 
  4518 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4519 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4520 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4523 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4524 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      enum E7736
  4527 ;; Registers used:
  4528 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4534 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4535 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4537 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4538 ;;Total ram usage:       10 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:   12
  4541 ;; This function calls:
  4542 ;;		___lldiv
  4543 ;;		___lmul
  4544 ;; This function is called by:
  4545 ;;		_Tmr_TmrBConfig
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text9
  4550  00332C                     __ptext9:
  4551                           	opt stack 0
  4552  00332C                     _Tmr_TmrBPrSet:
  4553                           	opt stack 15
  4554                           
  4555                           ;incstack = 0
  4556                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4557  00332C  0100               	movlb	0	; () banked
  4558  00332E  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4559                           
  4560                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4561                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4562  003330  0E00               	movlw	0
  4563  003332  0100               	movlb	0	; () banked
  4564  003334  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4565  003336  0E00               	movlw	0
  4566  003338  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4567  00333A  0E00               	movlw	0
  4568  00333C  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4569  00333E  0E00               	movlw	0
  4570  003340  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4574  003342  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4575  003344  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4576  003346  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4577  00334A  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4578  00334E  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4579  003350  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4580  003352  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4581  003356  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4582  00335A  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4583  00335C  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4584  00335E  ECA6  F02B         	call	___lmul	;wreg free
  4585  003362  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4586  003366  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4587  00336A  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4588  00336E  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4589                           
  4590                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4591  003372  0E00               	movlw	0
  4592  003374  0100               	movlb	0	; () banked
  4593  003376  6F89               	movwf	___lldiv@dividend& (0+255),b
  4594  003378  0E1B               	movlw	27
  4595  00337A  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4596  00337C  0EB7               	movlw	183
  4597  00337E  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4598  003380  0E00               	movlw	0
  4599  003382  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4600  003384  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4601  003388  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4602  00338C  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4603  003390  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4604  003394  EC23  F028         	call	___lldiv	;wreg free
  4605  003398  0100               	movlb	0	; () banked
  4606  00339A  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4607  00339C  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4608  00339E  E13A               	bnz	l14858
  4609  0033A0  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4610  0033A2  A0D8               	btfss	status,0,c
  4611  0033A4  D02D               	goto	l529
  4612  0033A6  D036               	goto	l528
  4613  0033A8                     
  4614                           ; BSR set to: 0
  4615                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4616                           
  4617                           ; BSR set to: 0
  4618  0033A8  0E00               	movlw	0
  4619  0033AA  6F89               	movwf	___lldiv@dividend& (0+255),b
  4620  0033AC  0E1B               	movlw	27
  4621  0033AE  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4622  0033B0  0EB7               	movlw	183
  4623  0033B2  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4624  0033B4  0E00               	movlw	0
  4625  0033B6  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4626  0033B8  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4627  0033BC  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4628  0033C0  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4629  0033C4  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4630  0033C8  EC23  F028         	call	___lldiv	;wreg free
  4631  0033CC  0100               	movlb	0	; () banked
  4632  0033CE  5189               	movf	?___lldiv& (0+255),w,b
  4633  0033D0  6ECB               	movwf	4043,c	;volatile
  4634                           
  4635                           ;tmr_drv.c: 210: break;
  4636  0033D2  D01D               	goto	l531
  4637  0033D4                     
  4638                           ; BSR set to: 0
  4639                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4640                           
  4641                           ; BSR set to: 0
  4642  0033D4  0E00               	movlw	0
  4643  0033D6  6F89               	movwf	___lldiv@dividend& (0+255),b
  4644  0033D8  0E1B               	movlw	27
  4645  0033DA  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4646  0033DC  0EB7               	movlw	183
  4647  0033DE  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4648  0033E0  0E00               	movlw	0
  4649  0033E2  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4650  0033E4  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4651  0033E8  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4652  0033EC  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4653  0033F0  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4654  0033F4  EC23  F028         	call	___lldiv	;wreg free
  4655  0033F8  0100               	movlb	0	; () banked
  4656  0033FA  5189               	movf	?___lldiv& (0+255),w,b
  4657  0033FC  6E77               	movwf	3959,c	;volatile
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;tmr_drv.c: 219: }
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;tmr_drv.c: 218: break;
  4664                           
  4665                           ;tmr_drv.c: 217: default:
  4666                           
  4667                           ;tmr_drv.c: 215: break;
  4668  0033FE  D007               	goto	l531
  4669  003400                     l529:
  4670                           
  4671                           ; BSR set to: 0
  4672                           
  4673                           ; BSR set to: 0
  4674  003400  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4675                           
  4676                           ; Switch size 1, requested type "space"
  4677                           ; Number of cases is 2, Range of values is 2 to 4
  4678                           ; switch strategies available:
  4679                           ; Name         Instructions Cycles
  4680                           ; simple_byte            7     4 (average)
  4681                           ;	Chosen strategy is simple_byte
  4682  003402  0A02               	xorlw	2	; case 2
  4683  003404  B4D8               	btfsc	status,2,c
  4684  003406  D7D0               	goto	l530
  4685  003408  0A06               	xorlw	6	; case 4
  4686  00340A  B4D8               	btfsc	status,2,c
  4687  00340C  D7E3               	goto	l532
  4688  00340E                     l531:
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4692                           
  4693                           ; BSR set to: 0
  4694  00340E  0E00               	movlw	0
  4695  003410  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4696                           
  4697                           ;tmr_drv.c: 223: }
  4698  003412  0012               	return	
  4699  003414                     l528:
  4700  003414                     l14858:
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;tmr_drv.c: 224: else
  4704                           ;tmr_drv.c: 225: {
  4705                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4706  003414  0E01               	movlw	1
  4707  003416  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4708                           
  4709                           ; BSR set to: 0
  4710  003418  0012               	return	
  4711  00341A                     __end_of_Tmr_TmrBPrSet:
  4712                           	opt stack 0
  4713                           tblptru	equ	0xFF8
  4714                           tblptrh	equ	0xFF7
  4715                           tblptrl	equ	0xFF6
  4716                           tablat	equ	0xFF5
  4717                           prodh	equ	0xFF4
  4718                           prodl	equ	0xFF3
  4719                           intcon	equ	0xFF2
  4720                           intcon2	equ	0xFF1
  4721                           intcon3	equ	0xFF0
  4722                           postinc0	equ	0xFEE
  4723                           wreg	equ	0xFE8
  4724                           postdec1	equ	0xFE5
  4725                           fsr1h	equ	0xFE2
  4726                           fsr1l	equ	0xFE1
  4727                           indf2	equ	0xFDF
  4728                           postinc2	equ	0xFDE
  4729                           postdec2	equ	0xFDD
  4730                           fsr2h	equ	0xFDA
  4731                           fsr2l	equ	0xFD9
  4732                           status	equ	0xFD8
  4733                           
  4734 ;; *************** function _Tmr_TmrBIrqSet *****************
  4735 ;; Defined at:
  4736 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  TmrNumb         1    wreg     unsigned char 
  4739 ;;  Priority        1   29[BANK0 ] enum E7716
  4740 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4752 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4753 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4755 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4756 ;;Total ram usage:        3 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:   11
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_Tmr_TmrBConfig
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text10
  4767  005C76                     __ptext10:
  4768                           	opt stack 0
  4769  005C76                     _Tmr_TmrBIrqSet:
  4770                           	opt stack 16
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;incstack = 0
  4774                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4775  005C76  0100               	movlb	0	; () banked
  4776  005C78  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4777                           
  4778                           ;tmr_drv.c: 156: switch (TmrNumb)
  4779  005C7A  D01A               	goto	l520
  4780  005C7C                     l521:
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4784  005C7C  929E               	bcf	3998,1,c	;volatile
  4785                           
  4786                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4787  005C7E  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4788  005C80  D002               	bra	u8785
  4789  005C82  929F               	bcf	3999,1,c	;volatile
  4790  005C84  D001               	bra	u8786
  4791  005C86                     u8785:
  4792  005C86  829F               	bsf	3999,1,c	;volatile
  4793  005C88                     u8786:
  4794                           
  4795                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4796  005C88  0100               	movlb	0	; () banked
  4797  005C8A  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4798  005C8C  D002               	bra	u8795
  4799  005C8E  929D               	bcf	3997,1,c	;volatile
  4800  005C90  D001               	bra	u8796
  4801  005C92                     u8795:
  4802  005C92  829D               	bsf	3997,1,c	;volatile
  4803  005C94                     u8796:
  4804                           
  4805                           ;tmr_drv.c: 165: break;
  4806  005C94  0012               	return	
  4807  005C96                     l523:
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4811  005C96  96A4               	bcf	4004,3,c	;volatile
  4812                           
  4813                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4814  005C98  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4815  005C9A  D002               	bra	u8805
  4816  005C9C  96A5               	bcf	4005,3,c	;volatile
  4817  005C9E  D001               	bra	u8806
  4818  005CA0                     u8805:
  4819  005CA0  86A5               	bsf	4005,3,c	;volatile
  4820  005CA2                     u8806:
  4821                           
  4822                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4823  005CA2  0100               	movlb	0	; () banked
  4824  005CA4  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4825  005CA6  D002               	bra	u8815
  4826  005CA8  96A3               	bcf	4003,3,c	;volatile
  4827  005CAA  D001               	bra	u8816
  4828  005CAC                     u8815:
  4829  005CAC  86A3               	bsf	4003,3,c	;volatile
  4830  005CAE                     u8816:
  4831                           
  4832                           ;tmr_drv.c: 178: }
  4833                           
  4834                           ;tmr_drv.c: 177: break;
  4835                           
  4836                           ;tmr_drv.c: 176: default:
  4837                           
  4838                           ;tmr_drv.c: 174: break;
  4839  005CAE  0012               	return	
  4840  005CB0                     l520:
  4841  005CB0  0100               	movlb	0	; () banked
  4842  005CB2  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4843                           
  4844                           ; Switch size 1, requested type "space"
  4845                           ; Number of cases is 2, Range of values is 2 to 4
  4846                           ; switch strategies available:
  4847                           ; Name         Instructions Cycles
  4848                           ; simple_byte            7     4 (average)
  4849                           ;	Chosen strategy is simple_byte
  4850  005CB4  0A02               	xorlw	2	; case 2
  4851  005CB6  B4D8               	btfsc	status,2,c
  4852  005CB8  D7E1               	goto	l521
  4853  005CBA  0A06               	xorlw	6	; case 4
  4854  005CBC  A4D8               	btfss	status,2,c
  4855  005CBE  0012               	return	
  4856  005CC0  D7EA               	goto	l523
  4857  005CC2                     __end_of_Tmr_TmrBIrqSet:
  4858                           	opt stack 0
  4859                           tblptru	equ	0xFF8
  4860                           tblptrh	equ	0xFF7
  4861                           tblptrl	equ	0xFF6
  4862                           tablat	equ	0xFF5
  4863                           prodh	equ	0xFF4
  4864                           prodl	equ	0xFF3
  4865                           intcon	equ	0xFF2
  4866                           intcon2	equ	0xFF1
  4867                           intcon3	equ	0xFF0
  4868                           postinc0	equ	0xFEE
  4869                           wreg	equ	0xFE8
  4870                           postdec1	equ	0xFE5
  4871                           fsr1h	equ	0xFE2
  4872                           fsr1l	equ	0xFE1
  4873                           indf2	equ	0xFDF
  4874                           postinc2	equ	0xFDE
  4875                           postdec2	equ	0xFDD
  4876                           fsr2h	equ	0xFDA
  4877                           fsr2l	equ	0xFD9
  4878                           status	equ	0xFD8
  4879                           
  4880 ;; *************** function _Tmr_StartTmr *****************
  4881 ;; Defined at:
  4882 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;  TmrNumb         1    wreg     unsigned char 
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  1    wreg      void 
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, status,0
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4897 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4899 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4900 ;;Total ram usage:        1 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:   11
  4903 ;; This function calls:
  4904 ;;		Nothing
  4905 ;; This function is called by:
  4906 ;;		_Tmr_TmrBConfig
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text11
  4911  0065D2                     __ptext11:
  4912                           	opt stack 0
  4913  0065D2                     _Tmr_StartTmr:
  4914                           	opt stack 16
  4915                           
  4916                           ;incstack = 0
  4917                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4918  0065D2  0100               	movlb	0	; () banked
  4919  0065D4  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4920                           
  4921                           ;tmr_drv.c: 245: switch (TmrNumb)
  4922  0065D6  D004               	goto	l538
  4923  0065D8                     l539:
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4927  0065D8  84CA               	bsf	4042,2,c	;volatile
  4928                           
  4929                           ;tmr_drv.c: 250: break;
  4930  0065DA  0012               	return	
  4931  0065DC                     l541:
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4935  0065DC  8476               	bsf	3958,2,c	;volatile
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;tmr_drv.c: 259: }
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;tmr_drv.c: 258: break;
  4942                           
  4943                           ;tmr_drv.c: 257: default:
  4944                           
  4945                           ;tmr_drv.c: 255: break;
  4946  0065DE  0012               	return	
  4947  0065E0                     l538:
  4948                           
  4949                           ; BSR set to: 0
  4950  0065E0  0100               	movlb	0	; () banked
  4951  0065E2  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4952                           
  4953                           ; Switch size 1, requested type "space"
  4954                           ; Number of cases is 2, Range of values is 2 to 4
  4955                           ; switch strategies available:
  4956                           ; Name         Instructions Cycles
  4957                           ; simple_byte            7     4 (average)
  4958                           ;	Chosen strategy is simple_byte
  4959  0065E4  0A02               	xorlw	2	; case 2
  4960  0065E6  B4D8               	btfsc	status,2,c
  4961  0065E8  D7F7               	goto	l539
  4962  0065EA  0A06               	xorlw	6	; case 4
  4963  0065EC  A4D8               	btfss	status,2,c
  4964  0065EE  0012               	return	
  4965  0065F0  D7F5               	goto	l541
  4966  0065F2                     __end_of_Tmr_StartTmr:
  4967                           	opt stack 0
  4968                           tblptru	equ	0xFF8
  4969                           tblptrh	equ	0xFF7
  4970                           tblptrl	equ	0xFF6
  4971                           tablat	equ	0xFF5
  4972                           prodh	equ	0xFF4
  4973                           prodl	equ	0xFF3
  4974                           intcon	equ	0xFF2
  4975                           intcon2	equ	0xFF1
  4976                           intcon3	equ	0xFF0
  4977                           postinc0	equ	0xFEE
  4978                           wreg	equ	0xFE8
  4979                           postdec1	equ	0xFE5
  4980                           fsr1h	equ	0xFE2
  4981                           fsr1l	equ	0xFE1
  4982                           indf2	equ	0xFDF
  4983                           postinc2	equ	0xFDE
  4984                           postdec2	equ	0xFDD
  4985                           fsr2h	equ	0xFDA
  4986                           fsr2l	equ	0xFD9
  4987                           status	equ	0xFD8
  4988                           
  4989 ;; *************** function _TmrBInit *****************
  4990 ;; Defined at:
  4991 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  TmrNumb         1    wreg     unsigned char 
  4994 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4995 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5007 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5008 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5009 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5010 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5011 ;;Total ram usage:        4 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:   11
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_Tmr_TmrBConfig
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text12
  5022  004AA8                     __ptext12:
  5023                           	opt stack 0
  5024  004AA8                     _TmrBInit:
  5025                           	opt stack 16
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;incstack = 0
  5029                           ;TmrBInit@TmrNumb stored from wreg
  5030  004AA8  0100               	movlb	0	; () banked
  5031  004AAA  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  5032                           
  5033                           ;tmr_drv.c: 75: switch (TmrNumb)
  5034  004AAC  D03F               	goto	l500
  5035  004AAE                     l503:
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5039  004AAE  90CA               	bcf	4042,0,c	;volatile
  5040  004AB0  D001               	goto	L1
  5041  004AB2                     l505:
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5045  004AB2  80CA               	bsf	4042,0,c	;volatile
  5046  004AB4                     L1:
  5047                           
  5048                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5049  004AB4  92CA               	bcf	4042,1,c	;volatile
  5050                           
  5051                           ;tmr_drv.c: 91: break;
  5052  004AB6  D00E               	goto	l504
  5053  004AB8                     l506:
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  5057  004AB8  80CA               	bsf	4042,0,c	;volatile
  5058                           
  5059                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5060  004ABA  82CA               	bsf	4042,1,c	;volatile
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;tmr_drv.c: 100: }
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;tmr_drv.c: 99: break;
  5067                           
  5068                           ;tmr_drv.c: 98: default:
  5069                           
  5070                           ;tmr_drv.c: 96: break;
  5071  004ABC  D00B               	goto	l504
  5072  004ABE                     
  5073                           ; BSR set to: 0
  5074  004ABE  0100               	movlb	0	; () banked
  5075  004AC0  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5076                           
  5077                           ; Switch size 1, requested type "space"
  5078                           ; Number of cases is 3, Range of values is 1 to 16
  5079                           ; switch strategies available:
  5080                           ; Name         Instructions Cycles
  5081                           ; simple_byte           10     6 (average)
  5082                           ;	Chosen strategy is simple_byte
  5083  004AC2  0A01               	xorlw	1	; case 1
  5084  004AC4  B4D8               	btfsc	status,2,c
  5085  004AC6  D7F3               	goto	l503
  5086  004AC8  0A05               	xorlw	5	; case 4
  5087  004ACA  B4D8               	btfsc	status,2,c
  5088  004ACC  D7F2               	goto	l505
  5089  004ACE  0A14               	xorlw	20	; case 16
  5090  004AD0  B4D8               	btfsc	status,2,c
  5091  004AD2  D7F2               	goto	l506
  5092  004AD4                     l504:
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5096                           
  5097                           ; BSR set to: 0
  5098  004AD4  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5099  004AD8  0EFF               	movlw	255
  5100  004ADA  277F               	addwf	??_TmrBInit& (0+255),f,b
  5101  004ADC  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5102  004ADE  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5103  004AE0  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5104  004AE2  50CA               	movf	4042,w,c	;volatile
  5105  004AE4  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5106  004AE6  0B87               	andlw	-121
  5107  004AE8  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5108  004AEA  6ECA               	movwf	4042,c	;volatile
  5109                           
  5110                           ;tmr_drv.c: 104: break;
  5111  004AEC  0012               	return	
  5112  004AEE                     l511:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5116  004AEE  9076               	bcf	3958,0,c	;volatile
  5117  004AF0  D001               	goto	L2
  5118  004AF2                     l513:
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5122  004AF2  8076               	bsf	3958,0,c	;volatile
  5123  004AF4                     L2:
  5124                           
  5125                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5126  004AF4  9276               	bcf	3958,1,c	;volatile
  5127                           
  5128                           ;tmr_drv.c: 120: break;
  5129  004AF6  D00D               	goto	l512
  5130  004AF8                     l514:
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5134  004AF8  8076               	bsf	3958,0,c	;volatile
  5135                           
  5136                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5137  004AFA  8276               	bsf	3958,1,c	;volatile
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;tmr_drv.c: 129: }
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;tmr_drv.c: 128: break;
  5144                           
  5145                           ;tmr_drv.c: 127: default:
  5146                           
  5147                           ;tmr_drv.c: 125: break;
  5148  004AFC  D00A               	goto	l512
  5149  004AFE                     
  5150                           ; BSR set to: 0
  5151                           
  5152                           ; BSR set to: 0
  5153  004AFE  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5154                           
  5155                           ; Switch size 1, requested type "space"
  5156                           ; Number of cases is 3, Range of values is 1 to 16
  5157                           ; switch strategies available:
  5158                           ; Name         Instructions Cycles
  5159                           ; simple_byte           10     6 (average)
  5160                           ;	Chosen strategy is simple_byte
  5161  004B00  0A01               	xorlw	1	; case 1
  5162  004B02  B4D8               	btfsc	status,2,c
  5163  004B04  D7F4               	goto	l511
  5164  004B06  0A05               	xorlw	5	; case 4
  5165  004B08  B4D8               	btfsc	status,2,c
  5166  004B0A  D7F3               	goto	l513
  5167  004B0C  0A14               	xorlw	20	; case 16
  5168  004B0E  B4D8               	btfsc	status,2,c
  5169  004B10  D7F3               	goto	l514
  5170  004B12                     l512:
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5174                           
  5175                           ; BSR set to: 0
  5176  004B12  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5177  004B16  0EFF               	movlw	255
  5178  004B18  277F               	addwf	??_TmrBInit& (0+255),f,b
  5179  004B1A  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5180  004B1C  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5181  004B1E  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5182  004B20  5076               	movf	3958,w,c	;volatile
  5183  004B22  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5184  004B24  0B87               	andlw	-121
  5185  004B26  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5186  004B28  6E76               	movwf	3958,c	;volatile
  5187                           
  5188                           ; BSR set to: 0
  5189                           ;tmr_drv.c: 137: }
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;tmr_drv.c: 136: break;
  5193                           
  5194                           ;tmr_drv.c: 135: default:
  5195                           
  5196                           ;tmr_drv.c: 133: break;
  5197  004B2A  0012               	return	
  5198  004B2C                     l500:
  5199                           
  5200                           ; BSR set to: 0
  5201  004B2C  0100               	movlb	0	; () banked
  5202  004B2E  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5203                           
  5204                           ; Switch size 1, requested type "space"
  5205                           ; Number of cases is 2, Range of values is 2 to 4
  5206                           ; switch strategies available:
  5207                           ; Name         Instructions Cycles
  5208                           ; simple_byte            7     4 (average)
  5209                           ;	Chosen strategy is simple_byte
  5210  004B30  0A02               	xorlw	2	; case 2
  5211  004B32  B4D8               	btfsc	status,2,c
  5212  004B34  D7C4               	goto	l502
  5213  004B36  0A06               	xorlw	6	; case 4
  5214  004B38  A4D8               	btfss	status,2,c
  5215  004B3A  0012               	return	
  5216  004B3C  D7E0               	goto	l510
  5217  004B3E                     __end_of_TmrBInit:
  5218                           	opt stack 0
  5219                           tblptru	equ	0xFF8
  5220                           tblptrh	equ	0xFF7
  5221                           tblptrl	equ	0xFF6
  5222                           tablat	equ	0xFF5
  5223                           prodh	equ	0xFF4
  5224                           prodl	equ	0xFF3
  5225                           intcon	equ	0xFF2
  5226                           intcon2	equ	0xFF1
  5227                           intcon3	equ	0xFF0
  5228                           postinc0	equ	0xFEE
  5229                           wreg	equ	0xFE8
  5230                           postdec1	equ	0xFE5
  5231                           fsr1h	equ	0xFE2
  5232                           fsr1l	equ	0xFE1
  5233                           indf2	equ	0xFDF
  5234                           postinc2	equ	0xFDE
  5235                           postdec2	equ	0xFDD
  5236                           fsr2h	equ	0xFDA
  5237                           fsr2l	equ	0xFD9
  5238                           status	equ	0xFD8
  5239                           
  5240 ;; *************** function _Sch_MainScheduler *****************
  5241 ;; Defined at:
  5242 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;		None
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;		None
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5260 ;;Total ram usage:        0 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:   22
  5263 ;; This function calls:
  5264 ;;		_InitializeTasks
  5265 ;;		_ScheduleTasks
  5266 ;; This function is called by:
  5267 ;;		_main
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text13
  5272  006650                     __ptext13:
  5273                           	opt stack 0
  5274  006650                     _Sch_MainScheduler:
  5275                           	opt stack 8
  5276                           
  5277                           ;os_sched.c: 178: InitializeTasks();
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;incstack = 0
  5281  006650  EC18  F029         	call	_InitializeTasks	;wreg free
  5282                           
  5283                           ;os_sched.c: 180: SystemState = RunningState;
  5284  006654  0E01               	movlw	1
  5285  006656  0100               	movlb	0	; () banked
  5286  006658  6FD3               	movwf	_SystemState& (0+255),b
  5287  00665A                     
  5288                           ;os_sched.c: 188: {
  5289                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5290                           
  5291                           ; BSR set to: 0
  5292  00665A  0102               	movlb	2	; () banked
  5293  00665C  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5294  00665E  A4D8               	btfss	status,2,c
  5295  006660  D7FC               	goto	l790
  5296                           
  5297                           ; BSR set to: 2
  5298                           ;os_sched.c: 191: {
  5299                           ;os_sched.c: 196: ScheduleTasks();
  5300  006662  EC86  F018         	call	_ScheduleTasks	;wreg free
  5301                           
  5302                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5303  006666  0E01               	movlw	1
  5304  006668  0102               	movlb	2	; () banked
  5305  00666A  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5306                           
  5307                           ; BSR set to: 2
  5308                           
  5309                           ; BSR set to: 2
  5310  00666C  D7F6               	goto	l790
  5311  00666E                     __end_of_Sch_MainScheduler:
  5312                           	opt stack 0
  5313                           tblptru	equ	0xFF8
  5314                           tblptrh	equ	0xFF7
  5315                           tblptrl	equ	0xFF6
  5316                           tablat	equ	0xFF5
  5317                           prodh	equ	0xFF4
  5318                           prodl	equ	0xFF3
  5319                           intcon	equ	0xFF2
  5320                           intcon2	equ	0xFF1
  5321                           intcon3	equ	0xFF0
  5322                           postinc0	equ	0xFEE
  5323                           wreg	equ	0xFE8
  5324                           postdec1	equ	0xFE5
  5325                           fsr1h	equ	0xFE2
  5326                           fsr1l	equ	0xFE1
  5327                           indf2	equ	0xFDF
  5328                           postinc2	equ	0xFDE
  5329                           postdec2	equ	0xFDD
  5330                           fsr2h	equ	0xFDA
  5331                           fsr2l	equ	0xFD9
  5332                           status	equ	0xFD8
  5333                           
  5334 ;; *************** function _ScheduleTasks *****************
  5335 ;; Defined at:
  5336 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;		None
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  ActiveTaskIn    1    4[BANK3 ] unsigned char 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5351 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5352 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0
  5353 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0
  5354 ;;Total ram usage:        5 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:   21
  5357 ;; This function calls:
  5358 ;;		_I2cSlv_MainTask
  5359 ;;		_Led_MainTask
  5360 ;;		_MdmHttp_MainTask
  5361 ;;		_Mdm_DrvMainFn
  5362 ;;		_Mdm_MainTask
  5363 ;;		_MyApp_Task
  5364 ;;		_Rtcm_MainTask
  5365 ;;		_Term_MainTask
  5366 ;;		_UsbDevice_MainTask
  5367 ;;		_Wdg_MainTask
  5368 ;; This function is called by:
  5369 ;;		_Sch_MainScheduler
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text14
  5374  00310C                     __ptext14:
  5375                           	opt stack 0
  5376  00310C                     _ScheduleTasks:
  5377                           	opt stack 8
  5378                           
  5379                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5380                           
  5381                           ; BSR set to: 2
  5382                           ;incstack = 0
  5383  00310C  0E00               	movlw	0
  5384  00310E  0103               	movlb	3	; () banked
  5385  003110  6FFF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5386                           
  5387                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5388  003112  0E00               	movlw	0
  5389  003114  6FFF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5390  003116                     l16146:
  5391                           
  5392                           ; BSR set to: 3
  5393  003116  0E30               	movlw	low _TaskNumber
  5394  003118  6EF6               	movwf	tblptrl,c
  5395  00311A                     	if	1	;There is more than 1 active tblptr byte
  5396  00311A  0EFC               	movlw	high _TaskNumber
  5397  00311C  6EF7               	movwf	tblptrh,c
  5398  00311E                     	endif
  5399  00311E                     	if	0	;There are less than 3 active tblptr bytes
  5400  00311E                     	endif
  5401  00311E  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5402  003120  6FFB               	movwf	??_ScheduleTasks& (0+255),b
  5403  003122  6BFC               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5404  003124  0009               	tblrd		*+
  5405  003126  50F5               	movf	tablat,w,c
  5406  003128  5DFB               	subwf	??_ScheduleTasks& (0+255),w,b
  5407  00312A  0009               	tblrd		*+
  5408  00312C  50F5               	movf	tablat,w,c
  5409  00312E  59FC               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5410  003130  B0D8               	btfsc	status,0,c
  5411  003132  0012               	return	
  5412                           
  5413                           ; BSR set to: 3
  5414                           ;os_sched.c: 106: {
  5415                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5416                           
  5417                           ; BSR set to: 3
  5418                           
  5419                           ; BSR set to: 3
  5420  003134  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5421  003136  0D08               	mullw	8
  5422  003138  0E03               	movlw	3
  5423  00313A  26F3               	addwf	prodl,f,c
  5424  00313C  0E00               	movlw	0
  5425  00313E  22F4               	addwfc	prodh,f,c
  5426  003140  0E86               	movlw	low _TaskTable
  5427  003142  24F3               	addwf	prodl,w,c
  5428  003144  6ED9               	movwf	fsr2l,c
  5429  003146  0E05               	movlw	high _TaskTable
  5430  003148  20F4               	addwfc	prodh,w,c
  5431  00314A  6EDA               	movwf	fsr2h,c
  5432  00314C  2ADE               	incf	postinc2,f,c
  5433  00314E  0E00               	movlw	0
  5434  003150  22DD               	addwfc	postdec2,f,c
  5435                           
  5436                           ; BSR set to: 3
  5437                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5438  003152  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5439  003154  0D08               	mullw	8
  5440  003156  0E05               	movlw	5
  5441  003158  26F3               	addwf	prodl,f,c
  5442  00315A  0E00               	movlw	0
  5443  00315C  22F4               	addwfc	prodh,f,c
  5444  00315E  0E86               	movlw	low _TaskTable
  5445  003160  24F3               	addwf	prodl,w,c
  5446  003162  6ED9               	movwf	fsr2l,c
  5447  003164  0E05               	movlw	high _TaskTable
  5448  003166  20F4               	addwfc	prodh,w,c
  5449  003168  6EDA               	movwf	fsr2h,c
  5450  00316A  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5451  00316C  0D08               	mullw	8
  5452  00316E  0E03               	movlw	3
  5453  003170  26F3               	addwf	prodl,f,c
  5454  003172  0E00               	movlw	0
  5455  003174  22F4               	addwfc	prodh,f,c
  5456  003176  0E86               	movlw	low _TaskTable
  5457  003178  24F3               	addwf	prodl,w,c
  5458  00317A  6EE1               	movwf	fsr1l,c
  5459  00317C  0E05               	movlw	high _TaskTable
  5460  00317E  20F4               	addwfc	prodh,w,c
  5461  003180  6EE2               	movwf	fsr1h,c
  5462  003182  50DE               	movf	postinc2,w,c
  5463  003184  5CE6               	subwf	postinc1,w,c
  5464  003186  50DE               	movf	postinc2,w,c
  5465  003188  58E6               	subwfb	postinc1,w,c
  5466  00318A  A0D8               	btfss	status,0,c
  5467  00318C  D04E               	goto	l775
  5468                           
  5469                           ; BSR set to: 3
  5470                           ;os_sched.c: 111: {
  5471                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5472  00318E  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5473  003190  0D08               	mullw	8
  5474  003192  0E03               	movlw	3
  5475  003194  26F3               	addwf	prodl,f,c
  5476  003196  0E00               	movlw	0
  5477  003198  22F4               	addwfc	prodh,f,c
  5478  00319A  0E86               	movlw	low _TaskTable
  5479  00319C  24F3               	addwf	prodl,w,c
  5480  00319E  6ED9               	movwf	fsr2l,c
  5481  0031A0  0E05               	movlw	high _TaskTable
  5482  0031A2  20F4               	addwfc	prodh,w,c
  5483  0031A4  6EDA               	movwf	fsr2h,c
  5484  0031A6  0E00               	movlw	0
  5485  0031A8  6EDE               	movwf	postinc2,c
  5486  0031AA  0E00               	movlw	0
  5487  0031AC  6EDD               	movwf	postdec2,c
  5488                           
  5489                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5490  0031AE  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5491  0031B0  0D08               	mullw	8
  5492  0031B2  0E02               	movlw	2
  5493  0031B4  26F3               	addwf	prodl,f,c
  5494  0031B6  0E00               	movlw	0
  5495  0031B8  22F4               	addwfc	prodh,f,c
  5496  0031BA  0E86               	movlw	low _TaskTable
  5497  0031BC  24F3               	addwf	prodl,w,c
  5498  0031BE  6ED9               	movwf	fsr2l,c
  5499  0031C0  0E05               	movlw	high _TaskTable
  5500  0031C2  20F4               	addwfc	prodh,w,c
  5501  0031C4  6EDA               	movwf	fsr2h,c
  5502  0031C6  0E01               	movlw	1
  5503  0031C8  6EDF               	movwf	indf2,c
  5504                           
  5505                           ; BSR set to: 3
  5506                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5507  0031CA  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5508  0031CC  0D08               	mullw	8
  5509  0031CE  0E86               	movlw	low _TaskTable
  5510  0031D0  24F3               	addwf	prodl,w,c
  5511  0031D2  6ED9               	movwf	fsr2l,c
  5512  0031D4  0E05               	movlw	high _TaskTable
  5513  0031D6  20F4               	addwfc	prodh,w,c
  5514  0031D8  6EDA               	movwf	fsr2h,c
  5515  0031DA  D801               	call	u16048
  5516  0031DC  D017               	goto	u16049
  5517  0031DE                     u16048:
  5518  0031DE  0005               	push	
  5519  0031E0  6EFA               	movwf	pclath,c
  5520  0031E2  50DE               	movf	postinc2,w,c
  5521  0031E4  6EFD               	movwf	tosl,c
  5522  0031E6  50DE               	movf	postinc2,w,c
  5523  0031E8  6EFE               	movwf	tosh,c
  5524  0031EA  50F8               	movf	tblptru,w,c
  5525  0031EC  6EFF               	movwf	tosu,c
  5526  0031EE  50FA               	movf	pclath,w,c
  5527  0031F0  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5528  0031F2  0D08               	mullw	8
  5529  0031F4  0E07               	movlw	7
  5530  0031F6  26F3               	addwf	prodl,f,c
  5531  0031F8  0E00               	movlw	0
  5532  0031FA  22F4               	addwfc	prodh,f,c
  5533  0031FC  0E86               	movlw	low _TaskTable
  5534  0031FE  24F3               	addwf	prodl,w,c
  5535  003200  6ED9               	movwf	fsr2l,c
  5536  003202  0E05               	movlw	high _TaskTable
  5537  003204  20F4               	addwfc	prodh,w,c
  5538  003206  6EDA               	movwf	fsr2h,c
  5539  003208  50DF               	movf	indf2,w,c
  5540  00320A  0012               	return		;indir
  5541  00320C                     u16049:
  5542                           
  5543                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5544  00320C  0103               	movlb	3	; () banked
  5545  00320E  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5546  003210  0D08               	mullw	8
  5547  003212  0E02               	movlw	2
  5548  003214  26F3               	addwf	prodl,f,c
  5549  003216  0E00               	movlw	0
  5550  003218  22F4               	addwfc	prodh,f,c
  5551  00321A  0E86               	movlw	low _TaskTable
  5552  00321C  24F3               	addwf	prodl,w,c
  5553  00321E  6ED9               	movwf	fsr2l,c
  5554  003220  0E05               	movlw	high _TaskTable
  5555  003222  20F4               	addwfc	prodh,w,c
  5556  003224  6EDA               	movwf	fsr2h,c
  5557  003226  0E00               	movlw	0
  5558  003228  6EDF               	movwf	indf2,c
  5559  00322A                     l775:
  5560                           
  5561                           ; BSR set to: 3
  5562                           
  5563                           ; BSR set to: 3
  5564                           
  5565                           ;os_sched.c: 117: else
  5566                           ;os_sched.c: 118: {
  5567                           
  5568                           ; BSR set to: 3
  5569  00322A  2BFF               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5570  00322C  D774               	goto	l16146
  5571  00322E                     __end_of_ScheduleTasks:
  5572                           	opt stack 0
  5573                           tosu	equ	0xFFF
  5574                           tosh	equ	0xFFE
  5575                           tosl	equ	0xFFD
  5576                           pclath	equ	0xFFA
  5577                           tblptru	equ	0xFF8
  5578                           tblptrh	equ	0xFF7
  5579                           tblptrl	equ	0xFF6
  5580                           tablat	equ	0xFF5
  5581                           prodh	equ	0xFF4
  5582                           prodl	equ	0xFF3
  5583                           intcon	equ	0xFF2
  5584                           intcon2	equ	0xFF1
  5585                           intcon3	equ	0xFF0
  5586                           postinc0	equ	0xFEE
  5587                           wreg	equ	0xFE8
  5588                           postinc1	equ	0xFE6
  5589                           postdec1	equ	0xFE5
  5590                           fsr1h	equ	0xFE2
  5591                           fsr1l	equ	0xFE1
  5592                           indf2	equ	0xFDF
  5593                           postinc2	equ	0xFDE
  5594                           postdec2	equ	0xFDD
  5595                           fsr2h	equ	0xFDA
  5596                           fsr2l	equ	0xFD9
  5597                           status	equ	0xFD8
  5598                           
  5599 ;; *************** function _InitializeTasks *****************
  5600 ;; Defined at:
  5601 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;		None
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  ActiveTaskIn    1    2[BANK3 ] unsigned char 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  1    wreg      void 
  5608 ;; Registers used:
  5609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5616 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5617 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  5618 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0
  5619 ;;Total ram usage:        3 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:   21
  5622 ;; This function calls:
  5623 ;;		_I2cSlv_MainTask
  5624 ;;		_Led_MainTask
  5625 ;;		_MdmHttp_MainTask
  5626 ;;		_Mdm_DrvMainFn
  5627 ;;		_Mdm_MainTask
  5628 ;;		_MyApp_Task
  5629 ;;		_Rtcm_MainTask
  5630 ;;		_Term_MainTask
  5631 ;;		_UsbDevice_MainTask
  5632 ;;		_Wdg_MainTask
  5633 ;; This function is called by:
  5634 ;;		_Sch_MainScheduler
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           	psect	text15
  5639  005230                     __ptext15:
  5640                           	opt stack 0
  5641  005230                     _InitializeTasks:
  5642                           	opt stack 8
  5643                           
  5644                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5645                           
  5646                           ; BSR set to: 3
  5647                           ;incstack = 0
  5648  005230  0E00               	movlw	0
  5649  005232  0103               	movlb	3	; () banked
  5650  005234  6FFD               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5651                           
  5652                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5653  005236  0E00               	movlw	0
  5654  005238  6FFD               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5655  00523A                     l16134:
  5656                           
  5657                           ; BSR set to: 3
  5658  00523A  0E30               	movlw	low _TaskNumber
  5659  00523C  6EF6               	movwf	tblptrl,c
  5660  00523E                     	if	1	;There is more than 1 active tblptr byte
  5661  00523E  0EFC               	movlw	high _TaskNumber
  5662  005240  6EF7               	movwf	tblptrh,c
  5663  005242                     	endif
  5664  005242                     	if	0	;There are less than 3 active tblptr bytes
  5665  005242                     	endif
  5666  005242  51FD               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5667  005244  6FFB               	movwf	??_InitializeTasks& (0+255),b
  5668  005246  6BFC               	clrf	(??_InitializeTasks+1)& (0+255),b
  5669  005248  0009               	tblrd		*+
  5670  00524A  50F5               	movf	tablat,w,c
  5671  00524C  5DFB               	subwf	??_InitializeTasks& (0+255),w,b
  5672  00524E  0009               	tblrd		*+
  5673  005250  50F5               	movf	tablat,w,c
  5674  005252  59FC               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5675  005254  B0D8               	btfsc	status,0,c
  5676  005256  0012               	return	
  5677                           
  5678                           ; BSR set to: 3
  5679                           ;os_sched.c: 86: {
  5680                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5681                           
  5682                           ; BSR set to: 3
  5683                           
  5684                           ; BSR set to: 3
  5685  005258  51FD               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5686  00525A  0D08               	mullw	8
  5687  00525C  0E86               	movlw	low _TaskTable
  5688  00525E  24F3               	addwf	prodl,w,c
  5689  005260  6ED9               	movwf	fsr2l,c
  5690  005262  0E05               	movlw	high _TaskTable
  5691  005264  20F4               	addwfc	prodh,w,c
  5692  005266  6EDA               	movwf	fsr2h,c
  5693  005268  D801               	call	u16008
  5694  00526A  D017               	goto	u16009
  5695  00526C                     u16008:
  5696  00526C  0005               	push	
  5697  00526E  6EFA               	movwf	pclath,c
  5698  005270  50DE               	movf	postinc2,w,c
  5699  005272  6EFD               	movwf	tosl,c
  5700  005274  50DE               	movf	postinc2,w,c
  5701  005276  6EFE               	movwf	tosh,c
  5702  005278  50F8               	movf	tblptru,w,c
  5703  00527A  6EFF               	movwf	tosu,c
  5704  00527C  50FA               	movf	pclath,w,c
  5705  00527E  51FD               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5706  005280  0D08               	mullw	8
  5707  005282  0E07               	movlw	7
  5708  005284  26F3               	addwf	prodl,f,c
  5709  005286  0E00               	movlw	0
  5710  005288  22F4               	addwfc	prodh,f,c
  5711  00528A  0E86               	movlw	low _TaskTable
  5712  00528C  24F3               	addwf	prodl,w,c
  5713  00528E  6ED9               	movwf	fsr2l,c
  5714  005290  0E05               	movlw	high _TaskTable
  5715  005292  20F4               	addwfc	prodh,w,c
  5716  005294  6EDA               	movwf	fsr2h,c
  5717  005296  50DF               	movf	indf2,w,c
  5718  005298  0012               	return		;indir
  5719  00529A                     u16009:
  5720  00529A  0103               	movlb	3	; () banked
  5721  00529C  2BFD               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5722  00529E  D7CD               	goto	l16134
  5723  0052A0                     __end_of_InitializeTasks:
  5724                           	opt stack 0
  5725                           tosu	equ	0xFFF
  5726                           tosh	equ	0xFFE
  5727                           tosl	equ	0xFFD
  5728                           pclath	equ	0xFFA
  5729                           tblptru	equ	0xFF8
  5730                           tblptrh	equ	0xFF7
  5731                           tblptrl	equ	0xFF6
  5732                           tablat	equ	0xFF5
  5733                           prodh	equ	0xFF4
  5734                           prodl	equ	0xFF3
  5735                           intcon	equ	0xFF2
  5736                           intcon2	equ	0xFF1
  5737                           intcon3	equ	0xFF0
  5738                           postinc0	equ	0xFEE
  5739                           wreg	equ	0xFE8
  5740                           postinc1	equ	0xFE6
  5741                           postdec1	equ	0xFE5
  5742                           fsr1h	equ	0xFE2
  5743                           fsr1l	equ	0xFE1
  5744                           indf2	equ	0xFDF
  5745                           postinc2	equ	0xFDE
  5746                           postdec2	equ	0xFDD
  5747                           fsr2h	equ	0xFDA
  5748                           fsr2l	equ	0xFD9
  5749                           status	equ	0xFD8
  5750                           
  5751 ;; *************** function _MyApp_Task *****************
  5752 ;; Defined at:
  5753 ;;		line 140 in file "../Source/c/04_App/app.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  Options         1    wreg     unsigned char 
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;  Options         1    0[COMRAM] unsigned char 
  5758 ;;  emptyNumber    13   21[BANK1 ] const unsigned char [13]
  5759 ;;  cmdAddNumber    4   37[BANK1 ] const unsigned char [4]
  5760 ;;  cmpString       3   34[BANK1 ] unsigned char [3]
  5761 ;;  numberInMemo    1   42[BANK1 ] unsigned char 
  5762 ;;  memoryResult    1   41[BANK1 ] enum E8114
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1    wreg      void 
  5765 ;; Registers used:
  5766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5773 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5774 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5775 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5776 ;;Total ram usage:       24 bytes
  5777 ;; Hardware stack levels used:    1
  5778 ;; Hardware stack levels required when called:   19
  5779 ;; This function calls:
  5780 ;;		_GetCallerNumber
  5781 ;;		_GetLastInteractionNumber
  5782 ;;		_Led_SetLedBlinkTime
  5783 ;;		_Led_SetLedStatus
  5784 ;;		_Mdm_GetSmsData
  5785 ;;		_Mdm_HangPhoneCall
  5786 ;;		_Mdm_IsRinging
  5787 ;;		_Mdm_IsSmsReceived
  5788 ;;		_Mdm_RequestSmsData
  5789 ;;		_StringCompare
  5790 ;;		_StringCopy
  5791 ;;		_Uart_WriteConstString
  5792 ;;		_findEmptySpot
  5793 ;;		_initFsm
  5794 ;;		_initMemorizedNumbersCount
  5795 ;;		_isNumberInMemory
  5796 ;;		_parseCommand
  5797 ;;		_saveNumberInMemory
  5798 ;;		_waitSetupCall
  5799 ;; This function is called by:
  5800 ;;		_InitializeTasks
  5801 ;;		_ScheduleTasks
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           	psect	text16
  5806  000DC8                     __ptext16:
  5807                           	opt stack 0
  5808  000DC8                     _MyApp_Task:
  5809                           	opt stack 9
  5810                           
  5811                           ;app.c: 142: const uint8_t emptyNumber[((UINT8)(13))] = {0};
  5812                           
  5813                           ; BSR set to: 3
  5814                           ;incstack = 0
  5815  000DC8  0E11               	movlw	low MyApp_Task@F9033
  5816  000DCA  6EF6               	movwf	tblptrl,c
  5817  000DCC                     	if	1	;There is more than 1 active tblptr byte
  5818  000DCC  0EFC               	movlw	high MyApp_Task@F9033
  5819  000DCE  6EF7               	movwf	tblptrh,c
  5820  000DD0                     	endif
  5821  000DD0                     	if	0	;There are less than 3 active tblptr bytes
  5822  000DD0                     	endif
  5823  000DD0  EE21  F015         	lfsr	2,MyApp_Task@emptyNumber
  5824  000DD4  0E0C               	movlw	12
  5825  000DD6                     u15770:
  5826  000DD6  0009               	tblrd		*+
  5827  000DD8  CFF5 FFDE          	movff	tablat,postinc2
  5828  000DDC  06E8               	decf	wreg,f,c
  5829  000DDE  E2FB               	bc	u15770
  5830                           
  5831                           ;app.c: 143: static UINT8 receivedNumber[] = {'+', '3', '9', '0', '1', '2', '3', '4', '5
      +                          ', '6', '7', '8', '9'};
  5832                           ;app.c: 148: const uint8_t cmdAddNumber[] = {'N', 'U', 'M', '+'};
  5833  000DE0  0E24               	movlw	low MyApp_Task@F9036
  5834  000DE2  6EF6               	movwf	tblptrl,c
  5835  000DE4                     	if	1	;There is more than 1 active tblptr byte
  5836  000DE4  0EFC               	movlw	high MyApp_Task@F9036
  5837  000DE6  6EF7               	movwf	tblptrh,c
  5838  000DE8                     	endif
  5839  000DE8                     	if	0	;There are less than 3 active tblptr bytes
  5840  000DE8                     	endif
  5841  000DE8  0009               	tblrd		*+
  5842  000DEA  CFF5 F125          	movff	tablat,MyApp_Task@cmdAddNumber
  5843  000DEE  0009               	tblrd		*+
  5844  000DF0  CFF5 F126          	movff	tablat,MyApp_Task@cmdAddNumber+1
  5845  000DF4  0009               	tblrd		*+
  5846  000DF6  CFF5 F127          	movff	tablat,MyApp_Task@cmdAddNumber+2
  5847  000DFA  000A               	tblrd		*-
  5848  000DFC  CFF5 F128          	movff	tablat,MyApp_Task@cmdAddNumber+3
  5849                           
  5850                           ;app.c: 149: uint8_t cmpString[] = {'c', 'a', 't'};
  5851  000E00  C3CA  F122         	movff	MyApp_Task@F9038,MyApp_Task@cmpString
  5852  000E04  C3CB  F123         	movff	MyApp_Task@F9038+1,MyApp_Task@cmpString+1
  5853  000E08  C3CC  F124         	movff	MyApp_Task@F9038+2,MyApp_Task@cmpString+2
  5854                           
  5855                           ;app.c: 151: static gateFsmStates currentState = GATE_INIT;
  5856                           ;app.c: 152: I2cOpStsType memoryResult = OP_COMPLETE;
  5857  000E0C  0E01               	movlw	1
  5858  000E0E  0101               	movlb	1	; () banked
  5859  000E10  6F29               	movwf	MyApp_Task@memoryResult& (0+255),b
  5860                           
  5861                           ; BSR set to: 1
  5862                           ;app.c: 153: uint8_t numberInMemory = 0;
  5863  000E12  0E00               	movlw	0
  5864  000E14  6F2A               	movwf	MyApp_Task@numberInMemory& (0+255),b
  5865                           
  5866                           ;app.c: 155: switch (SystemState)
  5867  000E16  D148               	goto	l2607
  5868  000E18                     
  5869                           ;app.c: 160: Led_SetLedBlinkTime(1u,100,900);
  5870                           
  5871                           ; BSR set to: 1
  5872  000E18  0E00               	movlw	0
  5873  000E1A  0100               	movlb	0	; () banked
  5874  000E1C  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5875  000E1E  0E64               	movlw	100
  5876  000E20  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5877  000E22  0E03               	movlw	3
  5878  000E24  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5879  000E26  0E84               	movlw	132
  5880  000E28  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5881  000E2A  0E01               	movlw	1
  5882  000E2C  ECA8  F02C         	call	_Led_SetLedBlinkTime
  5883                           
  5884                           ;app.c: 161: break;
  5885  000E30  0012               	return	
  5886  000E32                     
  5887                           ;app.c: 168: if (initFsm())
  5888  000E32  ECAB  F02E         	call	_initFsm	;wreg free
  5889  000E36  0900               	iorlw	0
  5890  000E38  B4D8               	btfsc	status,2,c
  5891  000E3A  0012               	return	
  5892                           
  5893                           ;app.c: 169: {
  5894                           ;app.c: 170: if (isMemoryEmpty)
  5895  000E3C  0101               	movlb	1	; () banked
  5896  000E3E  51FE               	movf	_isMemoryEmpty& (0+255),w,b
  5897  000E40  B4D8               	btfsc	status,2,c
  5898  000E42  D036               	goto	l2614
  5899                           
  5900                           ; BSR set to: 1
  5901                           ;app.c: 171: {
  5902                           ;app.c: 172: if (waitSetupCall())
  5903  000E44  ECC6  F02D         	call	_waitSetupCall	;wreg free
  5904  000E48  0900               	iorlw	0
  5905  000E4A  B4D8               	btfsc	status,2,c
  5906  000E4C  D003               	goto	l2615
  5907                           
  5908                           ;app.c: 173: {
  5909                           ;app.c: 174: currentState = GATE_SAVE_FIRST_MASTER;
  5910  000E4E  0E01               	movlw	1
  5911  000E50  0101               	movlb	1	; () banked
  5912  000E52  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5913  000E54                     l2615:
  5914                           
  5915                           ;app.c: 175: }
  5916                           ;app.c: 176: if (Mdm_IsSmsReceived())
  5917                           
  5918                           ; BSR set to: 1
  5919  000E54  EC5F  F032         	call	_Mdm_IsSmsReceived	;wreg free
  5920  000E58  0900               	iorlw	0
  5921  000E5A  A4D8               	btfss	status,2,c
  5922                           
  5923                           ;app.c: 177: {
  5924                           ;app.c: 178: Mdm_RequestSmsData();
  5925  000E5C  EC18  F034         	call	_Mdm_RequestSmsData	;wreg free
  5926                           
  5927                           ;app.c: 179: }
  5928                           ;app.c: 180: if (Mdm_GetSmsData(smsText) == SmsDataReady)
  5929  000E60  0E9D               	movlw	low _smsText
  5930  000E62  0100               	movlb	0	; () banked
  5931  000E64  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  5932  000E66  0E04               	movlw	high _smsText
  5933  000E68  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  5934  000E6A  ECF0  F029         	call	_Mdm_GetSmsData	;wreg free
  5935  000E6E  06E8               	decf	wreg,f,c
  5936  000E70  A4D8               	btfss	status,2,c
  5937  000E72  0012               	return	
  5938                           
  5939                           ;app.c: 181: {
  5940                           ;app.c: 182: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  5941  000E74  0E2F               	movlw	low STR_29
  5942  000E76  0100               	movlb	0	; () banked
  5943  000E78  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  5944  000E7A  0EFF               	movlw	high STR_29
  5945  000E7C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  5946  000E7E  0E01               	movlw	1
  5947  000E80  EC7A  F02F         	call	_Uart_WriteConstString
  5948                           
  5949                           ;app.c: 183: if (StringCompare(smsText, cmdAddNumber, sizeof(cmdAddNumber)))
  5950  000E84  0E9D               	movlw	low _smsText
  5951  000E86  0100               	movlb	0	; () banked
  5952  000E88  6F7D               	movwf	StringCompare@String1& (0+255),b
  5953  000E8A  0E04               	movlw	high _smsText
  5954  000E8C  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
  5955  000E8E  0E25               	movlw	low MyApp_Task@cmdAddNumber
  5956  000E90  6F7F               	movwf	StringCompare@String2& (0+255),b
  5957  000E92  0E01               	movlw	high MyApp_Task@cmdAddNumber
  5958  000E94  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
  5959  000E96  0E00               	movlw	0
  5960  000E98  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
  5961  000E9A  0E04               	movlw	4
  5962  000E9C  6F81               	movwf	StringCompare@Len& (0+255),b
  5963  000E9E  EC25  F02D         	call	_StringCompare	;wreg free
  5964  000EA2  0900               	iorlw	0
  5965  000EA4  B4D8               	btfsc	status,2,c
  5966  000EA6  0012               	return	
  5967                           
  5968                           ;app.c: 184: {
  5969                           ;app.c: 185: currentState = GATE_SAVE_FIRST_MASTER;
  5970  000EA8  0E01               	movlw	1
  5971  000EAA  0101               	movlb	1	; () banked
  5972  000EAC  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5973                           
  5974                           ; BSR set to: 1
  5975                           ;app.c: 186: }
  5976                           ;app.c: 187: }
  5977                           ;app.c: 188: }
  5978                           
  5979                           ; BSR set to: 1
  5980  000EAE  0012               	return	
  5981  000EB0                     l2614:
  5982                           
  5983                           ; BSR set to: 1
  5984                           ;app.c: 189: else
  5985                           ;app.c: 190: {
  5986                           ;app.c: 191: Led_SetLedStatus(1u, LED_STS_ON);
  5987                           
  5988                           ; BSR set to: 1
  5989  000EB0  0E01               	movlw	1
  5990  000EB2  0100               	movlb	0	; () banked
  5991  000EB4  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  5992  000EB6  0E01               	movlw	1
  5993  000EB8  EC7B  F031         	call	_Led_SetLedStatus
  5994                           
  5995                           ;app.c: 192: currentState = GATE_WAIT_EVENT;
  5996  000EBC  0E03               	movlw	3
  5997  000EBE  0101               	movlb	1	; () banked
  5998  000EC0  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5999                           
  6000                           ; BSR set to: 1
  6001                           ;app.c: 193: }
  6002                           ;app.c: 194: }
  6003                           ;app.c: 195: break;
  6004                           
  6005                           ; BSR set to: 1
  6006  000EC2  0012               	return	
  6007  000EC4                     
  6008                           ; BSR set to: 1
  6009                           ;app.c: 198: saveNumberInMemory(16, GetCallerNumber());
  6010                           
  6011                           ; BSR set to: 1
  6012  000EC4  ECB1  F030         	call	_GetCallerNumber	;wreg free
  6013  000EC8  C083  F096         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
  6014  000ECC  C084  F097         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
  6015  000ED0  0E10               	movlw	16
  6016  000ED2  EC6D  F033         	call	_saveNumberInMemory
  6017                           
  6018                           ;app.c: 199: currentState = GATE_UPDATE_NUMBERS_COUNT;
  6019  000ED6  0E02               	movlw	2
  6020  000ED8  0101               	movlb	1	; () banked
  6021  000EDA  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6022                           
  6023                           ;app.c: 200: break;
  6024  000EDC  0012               	return	
  6025  000EDE                     
  6026                           ; BSR set to: 1
  6027                           ;app.c: 203: initMemorizedNumbersCount();
  6028                           
  6029                           ; BSR set to: 1
  6030  000EDE  EC7A  F033         	call	_initMemorizedNumbersCount	;wreg free
  6031                           
  6032                           ;app.c: 204: Led_SetLedStatus(1u, LED_STS_ON);
  6033  000EE2  0E01               	movlw	1
  6034  000EE4  0100               	movlb	0	; () banked
  6035  000EE6  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  6036  000EE8  0E01               	movlw	1
  6037  000EEA  EC7B  F031         	call	_Led_SetLedStatus
  6038                           
  6039                           ;app.c: 205: currentState = GATE_WAIT_EVENT;
  6040  000EEE  0E03               	movlw	3
  6041  000EF0  0101               	movlb	1	; () banked
  6042  000EF2  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6043                           
  6044                           ;app.c: 206: break;
  6045  000EF4  0012               	return	
  6046  000EF6                     
  6047                           ; BSR set to: 1
  6048                           ;app.c: 209: if (Mdm_IsSmsReceived())
  6049                           
  6050                           ; BSR set to: 1
  6051  000EF6  EC5F  F032         	call	_Mdm_IsSmsReceived	;wreg free
  6052  000EFA  0900               	iorlw	0
  6053  000EFC  A4D8               	btfss	status,2,c
  6054                           
  6055                           ;app.c: 210: {
  6056                           ;app.c: 211: Mdm_RequestSmsData();
  6057  000EFE  EC18  F034         	call	_Mdm_RequestSmsData	;wreg free
  6058                           
  6059                           ;app.c: 212: }
  6060                           ;app.c: 213: if (Mdm_GetSmsData(smsText) == SmsDataReady)
  6061  000F02  0E9D               	movlw	low _smsText
  6062  000F04  0100               	movlb	0	; () banked
  6063  000F06  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  6064  000F08  0E04               	movlw	high _smsText
  6065  000F0A  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  6066  000F0C  ECF0  F029         	call	_Mdm_GetSmsData	;wreg free
  6067  000F10  06E8               	decf	wreg,f,c
  6068  000F12  A4D8               	btfss	status,2,c
  6069  000F14  D022               	goto	l2625
  6070                           
  6071                           ;app.c: 214: {
  6072                           ;app.c: 215: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  6073  000F16  0E2F               	movlw	low STR_29
  6074  000F18  0100               	movlb	0	; () banked
  6075  000F1A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  6076  000F1C  0EFF               	movlw	high STR_29
  6077  000F1E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  6078  000F20  0E01               	movlw	1
  6079  000F22  EC7A  F02F         	call	_Uart_WriteConstString
  6080                           
  6081                           ;app.c: 216: currentState = parseCommand(smsText);
  6082  000F26  0E9D               	movlw	low _smsText
  6083  000F28  0100               	movlb	0	; () banked
  6084  000F2A  6F88               	movwf	parseCommand@text& (0+255),b
  6085  000F2C  0E04               	movlw	high _smsText
  6086  000F2E  6F89               	movwf	(parseCommand@text+1)& (0+255),b
  6087  000F30  EC1F  F022         	call	_parseCommand	;wreg free
  6088  000F34  0101               	movlb	1	; () banked
  6089  000F36  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6090                           
  6091                           ; BSR set to: 1
  6092                           ;app.c: 217: StringCopy(GetLastInteractionNumber(), receivedNumber, ((UINT8)(13)));
  6093  000F38  EC44  F034         	call	_GetLastInteractionNumber	;wreg free
  6094  000F3C  C07D  F085         	movff	?_GetLastInteractionNumber,StringCopy@SourceStr
  6095  000F40  C07E  F086         	movff	?_GetLastInteractionNumber+1,StringCopy@SourceStr+1
  6096  000F44  0EE0               	movlw	low MyApp_Task@receivedNumber
  6097  000F46  0100               	movlb	0	; () banked
  6098  000F48  6F87               	movwf	StringCopy@DestStr& (0+255),b
  6099  000F4A  0E04               	movlw	high MyApp_Task@receivedNumber
  6100  000F4C  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
  6101  000F4E  0E00               	movlw	0
  6102  000F50  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
  6103  000F52  0E0D               	movlw	13
  6104  000F54  6F89               	movwf	StringCopy@Len& (0+255),b
  6105  000F56  ECBD  F02A         	call	_StringCopy	;wreg free
  6106  000F5A                     l2625:
  6107                           
  6108                           ;app.c: 218: }
  6109                           ;app.c: 219: if (Mdm_IsRinging())
  6110  000F5A  EC4D  F032         	call	_Mdm_IsRinging	;wreg free
  6111  000F5E  0900               	iorlw	0
  6112  000F60  B4D8               	btfsc	status,2,c
  6113  000F62  0012               	return	
  6114                           
  6115                           ;app.c: 220: {
  6116                           ;app.c: 221: Mdm_HangPhoneCall();
  6117  000F64  ECF6  F033         	call	_Mdm_HangPhoneCall	;wreg free
  6118                           
  6119                           ;app.c: 222: currentState = GATE_TRIGGER_CMD;
  6120  000F68  0E07               	movlw	7
  6121  000F6A  0101               	movlb	1	; () banked
  6122  000F6C  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6123                           
  6124                           ; BSR set to: 1
  6125                           ;app.c: 223: StringCopy(GetCallerNumber(), receivedNumber, ((UINT8)(13)));
  6126  000F6E  ECB1  F030         	call	_GetCallerNumber	;wreg free
  6127  000F72  C083  F085         	movff	?_GetCallerNumber,StringCopy@SourceStr
  6128  000F76  C084  F086         	movff	?_GetCallerNumber+1,StringCopy@SourceStr+1
  6129  000F7A  0EE0               	movlw	low MyApp_Task@receivedNumber
  6130  000F7C  0100               	movlb	0	; () banked
  6131  000F7E  6F87               	movwf	StringCopy@DestStr& (0+255),b
  6132  000F80  0E04               	movlw	high MyApp_Task@receivedNumber
  6133  000F82  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
  6134  000F84  0E00               	movlw	0
  6135  000F86  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
  6136  000F88  0E0D               	movlw	13
  6137  000F8A  6F89               	movwf	StringCopy@Len& (0+255),b
  6138  000F8C  ECBD  F02A         	call	_StringCopy	;wreg free
  6139                           
  6140                           ;app.c: 224: }
  6141                           ;app.c: 225: break;
  6142  000F90  0012               	return	
  6143  000F92                     
  6144                           ;app.c: 228: numberInMemory = isNumberInMemory(receivedNumber);
  6145  000F92  0EE0               	movlw	low MyApp_Task@receivedNumber
  6146  000F94  0101               	movlb	1	; () banked
  6147  000F96  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
  6148  000F98  0E04               	movlw	high MyApp_Task@receivedNumber
  6149  000F9A  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
  6150  000F9C  ECB9  F024         	call	_isNumberInMemory	;wreg free
  6151  000FA0  0101               	movlb	1	; () banked
  6152  000FA2  6F2A               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6153                           
  6154                           ; BSR set to: 1
  6155                           ;app.c: 229: if (numberInMemory == 1)
  6156  000FA4  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6157  000FA6  A4D8               	btfss	status,2,c
  6158  000FA8  D003               	goto	l2628
  6159                           
  6160                           ; BSR set to: 1
  6161                           ;app.c: 230: {
  6162                           ;app.c: 231: currentState = GATE_WAIT_EVENT;
  6163  000FAA  0E03               	movlw	3
  6164  000FAC  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6165                           
  6166                           ;app.c: 232: }
  6167  000FAE  0012               	return	
  6168  000FB0                     l2628:
  6169                           
  6170                           ; BSR set to: 1
  6171                           ;app.c: 233: else if (numberInMemory != 0 && numberInMemory != 1)
  6172                           
  6173                           ; BSR set to: 1
  6174  000FB0  512A               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6175  000FB2  B4D8               	btfsc	status,2,c
  6176  000FB4  0012               	return	
  6177                           
  6178                           ; BSR set to: 1
  6179  000FB6  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6180  000FB8  B4D8               	btfsc	status,2,c
  6181  000FBA  0012               	return	
  6182                           
  6183                           ; BSR set to: 1
  6184                           ;app.c: 234: {
  6185                           ;app.c: 235: currentState = GATE_SAVE_NEW;
  6186  000FBC  0E05               	movlw	5
  6187  000FBE  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6188                           
  6189                           ; BSR set to: 1
  6190                           ;app.c: 236: }
  6191                           ;app.c: 237: break;
  6192                           
  6193                           ; BSR set to: 1
  6194  000FC0  0012               	return	
  6195  000FC2                     
  6196                           ; BSR set to: 1
  6197                           ;app.c: 240: numberInMemory = findEmptySpot();
  6198                           
  6199                           ; BSR set to: 1
  6200  000FC2  ECBC  F029         	call	_findEmptySpot	;wreg free
  6201  000FC6  0101               	movlb	1	; () banked
  6202  000FC8  6F2A               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6203                           
  6204                           ; BSR set to: 1
  6205                           ;app.c: 241: if (numberInMemory == 1)
  6206  000FCA  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6207  000FCC  A4D8               	btfss	status,2,c
  6208  000FCE  D003               	goto	l2632
  6209                           
  6210                           ; BSR set to: 1
  6211                           ;app.c: 242: {
  6212                           ;app.c: 243: currentState = GATE_WAIT_EVENT;
  6213  000FD0  0E03               	movlw	3
  6214  000FD2  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6215                           
  6216                           ;app.c: 244: }
  6217  000FD4  0012               	return	
  6218  000FD6                     l2632:
  6219                           
  6220                           ; BSR set to: 1
  6221                           ;app.c: 245: else if (numberInMemory != 0 && numberInMemory != 1)
  6222                           
  6223                           ; BSR set to: 1
  6224  000FD6  512A               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6225  000FD8  B4D8               	btfsc	status,2,c
  6226  000FDA  0012               	return	
  6227                           
  6228                           ; BSR set to: 1
  6229  000FDC  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6230  000FDE  B4D8               	btfsc	status,2,c
  6231  000FE0  0012               	return	
  6232                           
  6233                           ; BSR set to: 1
  6234                           ;app.c: 246: {
  6235                           ;app.c: 247: saveNumberInMemory(smsText + 3, numberInMemory);
  6236  000FE2  512A               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6237  000FE4  6F13               	movwf	??_MyApp_Task& (0+255),b
  6238  000FE6  6B14               	clrf	(??_MyApp_Task+1)& (0+255),b
  6239  000FE8  C113  F096         	movff	??_MyApp_Task,saveNumberInMemory@phoneNumber
  6240  000FEC  C114  F097         	movff	??_MyApp_Task+1,saveNumberInMemory@phoneNumber+1
  6241  000FF0  0E9D               	movlw	_smsText& (0+255)
  6242  000FF2  0F03               	addlw	3
  6243  000FF4  EC6D  F033         	call	_saveNumberInMemory
  6244                           
  6245                           ;app.c: 248: currentState = GATE_WAIT_EVENT;
  6246  000FF8  0E03               	movlw	3
  6247  000FFA  0101               	movlb	1	; () banked
  6248  000FFC  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6249                           
  6250                           ; BSR set to: 1
  6251                           ;app.c: 249: }
  6252                           ;app.c: 250: break;
  6253                           
  6254                           ; BSR set to: 1
  6255  000FFE  0012               	return	
  6256  001000                     
  6257                           ; BSR set to: 1
  6258                           ;app.c: 253: numberInMemory = isNumberInMemory(receivedNumber);
  6259                           
  6260                           ; BSR set to: 1
  6261  001000  0EE0               	movlw	low MyApp_Task@receivedNumber
  6262  001002  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
  6263  001004  0E04               	movlw	high MyApp_Task@receivedNumber
  6264  001006  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
  6265  001008  ECB9  F024         	call	_isNumberInMemory	;wreg free
  6266  00100C  0101               	movlb	1	; () banked
  6267  00100E  6F2A               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6268                           
  6269                           ; BSR set to: 1
  6270                           ;app.c: 254: if (numberInMemory == 1)
  6271  001010  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6272  001012  A4D8               	btfss	status,2,c
  6273  001014  D003               	goto	l2636
  6274                           
  6275                           ; BSR set to: 1
  6276                           ;app.c: 255: {
  6277                           ;app.c: 256: currentState = GATE_WAIT_EVENT;
  6278  001016  0E03               	movlw	3
  6279  001018  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6280                           
  6281                           ;app.c: 257: }
  6282  00101A  0012               	return	
  6283  00101C                     l2636:
  6284                           
  6285                           ; BSR set to: 1
  6286                           ;app.c: 258: else if (numberInMemory != 0 && numberInMemory != 1)
  6287                           
  6288                           ; BSR set to: 1
  6289  00101C  512A               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6290  00101E  B4D8               	btfsc	status,2,c
  6291  001020  0012               	return	
  6292                           
  6293                           ; BSR set to: 1
  6294  001022  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6295  001024  B4D8               	btfsc	status,2,c
  6296  001026  0012               	return	
  6297                           
  6298                           ; BSR set to: 1
  6299                           ;app.c: 259: {
  6300                           ;app.c: 260: saveNumberInMemory(numberInMemory, emptyNumber);
  6301  001028  0E15               	movlw	low MyApp_Task@emptyNumber
  6302  00102A  0100               	movlb	0	; () banked
  6303  00102C  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
  6304  00102E  0E01               	movlw	high MyApp_Task@emptyNumber
  6305  001030  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
  6306  001032  0101               	movlb	1	; () banked
  6307  001034  512A               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6308  001036  EC6D  F033         	call	_saveNumberInMemory
  6309                           
  6310                           ;app.c: 261: currentState = GATE_WAIT_EVENT;
  6311  00103A  0E03               	movlw	3
  6312  00103C  0101               	movlb	1	; () banked
  6313  00103E  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6314                           
  6315                           ; BSR set to: 1
  6316                           ;app.c: 262: }
  6317                           ;app.c: 263: break;
  6318                           
  6319                           ; BSR set to: 1
  6320  001040  0012               	return	
  6321  001042                     
  6322                           ; BSR set to: 1
  6323                           ;app.c: 266: numberInMemory = isNumberInMemory(receivedNumber);
  6324                           
  6325                           ; BSR set to: 1
  6326  001042  0EE0               	movlw	low MyApp_Task@receivedNumber
  6327  001044  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
  6328  001046  0E04               	movlw	high MyApp_Task@receivedNumber
  6329  001048  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
  6330  00104A  ECB9  F024         	call	_isNumberInMemory	;wreg free
  6331  00104E  0101               	movlb	1	; () banked
  6332  001050  6F2A               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6333                           
  6334                           ; BSR set to: 1
  6335                           ;app.c: 267: if (numberInMemory == 1)
  6336  001052  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6337  001054  A4D8               	btfss	status,2,c
  6338  001056  D003               	goto	l2640
  6339                           
  6340                           ; BSR set to: 1
  6341                           ;app.c: 268: {
  6342                           ;app.c: 269: currentState = GATE_WAIT_EVENT;
  6343  001058  0E03               	movlw	3
  6344  00105A  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6345                           
  6346                           ;app.c: 270: }
  6347  00105C  0012               	return	
  6348  00105E                     l2640:
  6349                           
  6350                           ; BSR set to: 1
  6351                           ;app.c: 271: else if (numberInMemory != 0 && numberInMemory != 1)
  6352                           
  6353                           ; BSR set to: 1
  6354  00105E  512A               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6355  001060  B4D8               	btfsc	status,2,c
  6356  001062  0012               	return	
  6357                           
  6358                           ; BSR set to: 1
  6359  001064  052A               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6360  001066  B4D8               	btfsc	status,2,c
  6361  001068  0012               	return	
  6362                           
  6363                           ; BSR set to: 1
  6364                           ;app.c: 272: {
  6365                           ;app.c: 273: currentState = GATE_ACTIVATE_RELAY;
  6366  00106A  0E08               	movlw	8
  6367  00106C  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6368                           
  6369                           ; BSR set to: 1
  6370                           ;app.c: 281: }
  6371                           
  6372                           ; BSR set to: 1
  6373                           ;app.c: 280: break;
  6374                           
  6375                           ;app.c: 279: default:
  6376                           
  6377                           ; BSR set to: 1
  6378                           ;app.c: 277: break;
  6379                           
  6380                           ;app.c: 274: }
  6381                           ;app.c: 276: case GATE_ACTIVATE_RELAY:
  6382                           
  6383                           ; BSR set to: 1
  6384                           
  6385                           ; BSR set to: 1
  6386  00106E  0012               	return	
  6387  001070                     
  6388                           ; BSR set to: 1
  6389  001070  0101               	movlb	1	; () banked
  6390  001072  51D6               	movf	MyApp_Task@currentState& (0+255),w,b
  6391                           
  6392                           ; Switch size 1, requested type "space"
  6393                           ; Number of cases is 9, Range of values is 0 to 8
  6394                           ; switch strategies available:
  6395                           ; Name         Instructions Cycles
  6396                           ; simple_byte           28    15 (average)
  6397                           ;	Chosen strategy is simple_byte
  6398  001074  0A00               	xorlw	0	; case 0
  6399  001076  B4D8               	btfsc	status,2,c
  6400  001078  D6DC               	goto	l2612
  6401  00107A  0A01               	xorlw	1	; case 1
  6402  00107C  B4D8               	btfsc	status,2,c
  6403  00107E  D722               	goto	l2621
  6404  001080  0A03               	xorlw	3	; case 2
  6405  001082  B4D8               	btfsc	status,2,c
  6406  001084  D72C               	goto	l2622
  6407  001086  0A01               	xorlw	1	; case 3
  6408  001088  B4D8               	btfsc	status,2,c
  6409  00108A  D735               	goto	l2623
  6410  00108C  0A07               	xorlw	7	; case 4
  6411  00108E  B4D8               	btfsc	status,2,c
  6412  001090  D780               	goto	l2627
  6413  001092  0A01               	xorlw	1	; case 5
  6414  001094  B4D8               	btfsc	status,2,c
  6415  001096  D795               	goto	l2631
  6416  001098  0A03               	xorlw	3	; case 6
  6417  00109A  B4D8               	btfsc	status,2,c
  6418  00109C  D7B1               	goto	l2635
  6419  00109E  0A01               	xorlw	1	; case 7
  6420  0010A0  B4D8               	btfsc	status,2,c
  6421  0010A2  D7CF               	goto	l2639
  6422  0010A4  0A0F               	xorlw	15	; case 8
  6423                           
  6424                           ; BSR set to: 1
  6425                           ;app.c: 287: }
  6426                           
  6427                           ; BSR set to: 1
  6428                           ;app.c: 286: break;
  6429                           
  6430                           ;app.c: 285: default:
  6431                           
  6432                           ; BSR set to: 1
  6433                           ;app.c: 282: break;
  6434  0010A6  0012               	return	
  6435  0010A8                     l2607:
  6436                           
  6437                           ; BSR set to: 1
  6438                           
  6439                           ; BSR set to: 1
  6440  0010A8  0100               	movlb	0	; () banked
  6441  0010AA  51D3               	movf	_SystemState& (0+255),w,b
  6442                           
  6443                           ; Switch size 1, requested type "space"
  6444                           ; Number of cases is 2, Range of values is 0 to 1
  6445                           ; switch strategies available:
  6446                           ; Name         Instructions Cycles
  6447                           ; simple_byte            7     4 (average)
  6448                           ;	Chosen strategy is simple_byte
  6449  0010AC  0A00               	xorlw	0	; case 0
  6450  0010AE  B4D8               	btfsc	status,2,c
  6451  0010B0  D6B3               	goto	l2608
  6452  0010B2  0A01               	xorlw	1	; case 1
  6453  0010B4  A4D8               	btfss	status,2,c
  6454  0010B6  0012               	return	
  6455  0010B8  D7DB               	goto	l2611
  6456  0010BA                     __end_of_MyApp_Task:
  6457                           	opt stack 0
  6458                           tosu	equ	0xFFF
  6459                           tosh	equ	0xFFE
  6460                           tosl	equ	0xFFD
  6461                           pclath	equ	0xFFA
  6462                           tblptru	equ	0xFF8
  6463                           tblptrh	equ	0xFF7
  6464                           tblptrl	equ	0xFF6
  6465                           tablat	equ	0xFF5
  6466                           prodh	equ	0xFF4
  6467                           prodl	equ	0xFF3
  6468                           intcon	equ	0xFF2
  6469                           intcon2	equ	0xFF1
  6470                           intcon3	equ	0xFF0
  6471                           postinc0	equ	0xFEE
  6472                           wreg	equ	0xFE8
  6473                           postinc1	equ	0xFE6
  6474                           postdec1	equ	0xFE5
  6475                           fsr1h	equ	0xFE2
  6476                           fsr1l	equ	0xFE1
  6477                           indf2	equ	0xFDF
  6478                           postinc2	equ	0xFDE
  6479                           postdec2	equ	0xFDD
  6480                           fsr2h	equ	0xFDA
  6481                           fsr2l	equ	0xFD9
  6482                           status	equ	0xFD8
  6483                           
  6484 ;; *************** function _Term_MainTask *****************
  6485 ;; Defined at:
  6486 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  Options         1    wreg     unsigned char 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  Options         1    0[COMRAM] unsigned char 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1    wreg      void 
  6493 ;; Registers used:
  6494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6504 ;;Total ram usage:        0 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:   17
  6507 ;; This function calls:
  6508 ;;		_Term_MainSm
  6509 ;; This function is called by:
  6510 ;;		_InitializeTasks
  6511 ;;		_ScheduleTasks
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text17
  6516  0066C0                     __ptext17:
  6517                           	opt stack 0
  6518  0066C0                     _Term_MainTask:
  6519                           	opt stack 11
  6520                           
  6521                           ;term.c: 847: switch (SystemState)
  6522                           
  6523                           ;incstack = 0
  6524  0066C0  D003               	goto	l2481
  6525  0066C2                     
  6526                           ;term.c: 858: Term_MainSm();
  6527  0066C2  ECD4  F009         	call	_Term_MainSm	;wreg free
  6528                           
  6529                           ;term.c: 865: }
  6530                           
  6531                           ;term.c: 864: break;
  6532                           
  6533                           ;term.c: 863: default:
  6534                           
  6535                           ;term.c: 860: break;
  6536  0066C6  0012               	return	
  6537  0066C8                     l2481:
  6538  0066C8  0100               	movlb	0	; () banked
  6539  0066CA  51D3               	movf	_SystemState& (0+255),w,b
  6540                           
  6541                           ; Switch size 1, requested type "space"
  6542                           ; Number of cases is 2, Range of values is 0 to 1
  6543                           ; switch strategies available:
  6544                           ; Name         Instructions Cycles
  6545                           ; simple_byte            7     4 (average)
  6546                           ;	Chosen strategy is simple_byte
  6547  0066CC  0A00               	xorlw	0	; case 0
  6548  0066CE  B4D8               	btfsc	status,2,c
  6549  0066D0  0012               	return	
  6550  0066D2  0A01               	xorlw	1	; case 1
  6551  0066D4  A4D8               	btfss	status,2,c
  6552  0066D6  0012               	return	
  6553  0066D8  D7F4               	goto	l2484
  6554  0066DA                     __end_of_Term_MainTask:
  6555                           	opt stack 0
  6556                           tosu	equ	0xFFF
  6557                           tosh	equ	0xFFE
  6558                           tosl	equ	0xFFD
  6559                           pclath	equ	0xFFA
  6560                           tblptru	equ	0xFF8
  6561                           tblptrh	equ	0xFF7
  6562                           tblptrl	equ	0xFF6
  6563                           tablat	equ	0xFF5
  6564                           prodh	equ	0xFF4
  6565                           prodl	equ	0xFF3
  6566                           intcon	equ	0xFF2
  6567                           intcon2	equ	0xFF1
  6568                           intcon3	equ	0xFF0
  6569                           postinc0	equ	0xFEE
  6570                           wreg	equ	0xFE8
  6571                           postinc1	equ	0xFE6
  6572                           postdec1	equ	0xFE5
  6573                           fsr1h	equ	0xFE2
  6574                           fsr1l	equ	0xFE1
  6575                           indf2	equ	0xFDF
  6576                           postinc2	equ	0xFDE
  6577                           postdec2	equ	0xFDD
  6578                           fsr2h	equ	0xFDA
  6579                           fsr2l	equ	0xFD9
  6580                           status	equ	0xFD8
  6581                           
  6582 ;; *************** function _Rtcm_MainTask *****************
  6583 ;; Defined at:
  6584 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  Options         1    wreg     unsigned char 
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;  Options         1    0[COMRAM] unsigned char 
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  1    wreg      void 
  6591 ;; Registers used:
  6592 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6602 ;;Total ram usage:        0 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:   14
  6605 ;; This function calls:
  6606 ;;		_Rtcc_AlarmConfig
  6607 ;;		_Rtcc_LockRtc
  6608 ;;		_Rtcc_RtcConfig
  6609 ;;		_Rtcc_SetRtcStatus
  6610 ;;		_Rtcc_UnlockRtc
  6611 ;;		_Rtcm_GetRtccDate
  6612 ;;		_Rtcm_SetRtccDate
  6613 ;; This function is called by:
  6614 ;;		_InitializeTasks
  6615 ;;		_ScheduleTasks
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619                           	psect	text18
  6620  004E1C                     __ptext18:
  6621                           	opt stack 0
  6622  004E1C                     _Rtcm_MainTask:
  6623                           	opt stack 14
  6624                           
  6625                           ;rtcm.c: 101: switch (SystemState)
  6626                           
  6627                           ;incstack = 0
  6628  004E1C  D03D               	goto	l2211
  6629  004E1E                     l2212:
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6633  004E1E  86CD               	bsf	4045,3,c	;volatile
  6634                           
  6635                           ; BSR set to: 0
  6636                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6637  004E20  0E00               	movlw	0
  6638  004E22  0103               	movlb	3	; () banked
  6639  004E24  6FB4               	movwf	_RtcConfig& (0+255),b
  6640                           
  6641                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6642  004E26  0E00               	movlw	0
  6643  004E28  6FB5               	movwf	(_RtcConfig+1)& (0+255),b
  6644                           
  6645                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6646  004E2A  0E01               	movlw	1
  6647  004E2C  6FB6               	movwf	(_RtcConfig+2)& (0+255),b
  6648                           
  6649                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6650  004E2E  0E01               	movlw	1
  6651  004E30  6FB7               	movwf	(_RtcConfig+3)& (0+255),b
  6652                           
  6653                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6654  004E32  0E01               	movlw	1
  6655  004E34  6FB0               	movwf	_AlCfg& (0+255),b
  6656                           
  6657                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6658  004E36  0E01               	movlw	1
  6659  004E38  6FB1               	movwf	(_AlCfg+1)& (0+255),b
  6660                           
  6661                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6662  004E3A  0E01               	movlw	1
  6663  004E3C  6FB2               	movwf	(_AlCfg+2)& (0+255),b
  6664                           
  6665                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6666  004E3E  0E00               	movlw	0
  6667  004E40  6FB3               	movwf	(_AlCfg+3)& (0+255),b
  6668                           
  6669                           ; BSR set to: 3
  6670                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6671  004E42  EC08  F034         	call	_Rtcc_UnlockRtc	;wreg free
  6672                           
  6673                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6674  004E46  0EB4               	movlw	low _RtcConfig
  6675  004E48  0100               	movlb	0	; () banked
  6676  004E4A  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6677  004E4C  0E03               	movlw	high _RtcConfig
  6678  004E4E  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6679  004E50  EC1A  F024         	call	_Rtcc_RtcConfig	;wreg free
  6680                           
  6681                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6682  004E54  0EB0               	movlw	low _AlCfg
  6683  004E56  0100               	movlb	0	; () banked
  6684  004E58  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6685  004E5A  0E03               	movlw	high _AlCfg
  6686  004E5C  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6687  004E5E  EC86  F029         	call	_Rtcc_AlarmConfig	;wreg free
  6688                           
  6689                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6690  004E62  0E01               	movlw	1
  6691  004E64  ECB7  F033         	call	_Rtcc_SetRtcStatus
  6692                           
  6693                           ;rtcm.c: 127: Rtcc_LockRtc();
  6694  004E68  EC10  F034         	call	_Rtcc_LockRtc	;wreg free
  6695                           
  6696                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6697  004E6C  EE24  F063         	lfsr	2,_Rtcm_SystemDate
  6698  004E70  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6699  004E74  0E07               	movlw	7
  6700  004E76                     u15751:
  6701  004E76  CFDB FFEB          	movff	plusw2,plusw0
  6702  004E7A  06E8               	decf	wreg,f,c
  6703  004E7C  E2FC               	bc	u15751
  6704  004E7E  EC54  F02C         	call	_Rtcm_SetRtccDate	;wreg free
  6705                           
  6706                           ;rtcm.c: 154: break;
  6707  004E82  0012               	return	
  6708  004E84                     
  6709                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6710  004E84  EC57  F02A         	call	_Rtcm_GetRtccDate	;wreg free
  6711  004E88  EE24  F063         	lfsr	2,_Rtcm_SystemDate
  6712  004E8C  0E07               	movlw	7
  6713  004E8E                     u15761:
  6714  004E8E  CFEB FFDB          	movff	plusw0,plusw2
  6715  004E92  06E8               	decf	wreg,f,c
  6716  004E94  E2FC               	bc	u15761
  6717                           
  6718                           ;rtcm.c: 165: }
  6719                           
  6720                           ;rtcm.c: 164: break;
  6721                           
  6722                           ;rtcm.c: 163: default:
  6723                           
  6724                           ;rtcm.c: 160: break;
  6725  004E96  0012               	return	
  6726  004E98                     l2211:
  6727  004E98  0100               	movlb	0	; () banked
  6728  004E9A  51D3               	movf	_SystemState& (0+255),w,b
  6729                           
  6730                           ; Switch size 1, requested type "space"
  6731                           ; Number of cases is 2, Range of values is 0 to 1
  6732                           ; switch strategies available:
  6733                           ; Name         Instructions Cycles
  6734                           ; simple_byte            7     4 (average)
  6735                           ;	Chosen strategy is simple_byte
  6736  004E9C  0A00               	xorlw	0	; case 0
  6737  004E9E  B4D8               	btfsc	status,2,c
  6738  004EA0  D7BE               	goto	l2212
  6739  004EA2  0A01               	xorlw	1	; case 1
  6740  004EA4  A4D8               	btfss	status,2,c
  6741  004EA6  0012               	return	
  6742  004EA8  D7ED               	goto	l2214
  6743  004EAA                     __end_of_Rtcm_MainTask:
  6744                           	opt stack 0
  6745                           tosu	equ	0xFFF
  6746                           tosh	equ	0xFFE
  6747                           tosl	equ	0xFFD
  6748                           pclath	equ	0xFFA
  6749                           tblptru	equ	0xFF8
  6750                           tblptrh	equ	0xFF7
  6751                           tblptrl	equ	0xFF6
  6752                           tablat	equ	0xFF5
  6753                           prodh	equ	0xFF4
  6754                           prodl	equ	0xFF3
  6755                           intcon	equ	0xFF2
  6756                           intcon2	equ	0xFF1
  6757                           intcon3	equ	0xFF0
  6758                           postinc0	equ	0xFEE
  6759                           plusw0	equ	0xFEB
  6760                           wreg	equ	0xFE8
  6761                           postinc1	equ	0xFE6
  6762                           postdec1	equ	0xFE5
  6763                           fsr1h	equ	0xFE2
  6764                           fsr1l	equ	0xFE1
  6765                           indf2	equ	0xFDF
  6766                           postinc2	equ	0xFDE
  6767                           postdec2	equ	0xFDD
  6768                           plusw2	equ	0xFDB
  6769                           fsr2h	equ	0xFDA
  6770                           fsr2l	equ	0xFD9
  6771                           status	equ	0xFD8
  6772                           
  6773 ;; *************** function _Led_MainTask *****************
  6774 ;; Defined at:
  6775 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  Options         1    wreg     unsigned char 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  Options         1    0[COMRAM] unsigned char 
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1    wreg      void 
  6782 ;; Registers used:
  6783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6791 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6792 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6793 ;;Total ram usage:        1 bytes
  6794 ;; Hardware stack levels used:    1
  6795 ;; Hardware stack levels required when called:   14
  6796 ;; This function calls:
  6797 ;;		_LedStateMachine
  6798 ;; This function is called by:
  6799 ;;		_InitializeTasks
  6800 ;;		_ScheduleTasks
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text19
  6805  003BDE                     __ptext19:
  6806                           	opt stack 0
  6807  003BDE                     _Led_MainTask:
  6808                           	opt stack 14
  6809                           
  6810                           ;led.c: 300: switch (SystemState)
  6811                           
  6812                           ;incstack = 0
  6813  003BDE  D05C               	goto	l2125
  6814  003BE0                     l2126:
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6818  003BE0  9895               	bcf	3989,4,c	;volatile
  6819                           
  6820                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6821  003BE2  9A95               	bcf	3989,5,c	;volatile
  6822                           
  6823                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6824  003BE4  9C95               	bcf	3989,6,c	;volatile
  6825                           
  6826                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6827  003BE6  9883               	bcf	3971,4,c	;volatile
  6828                           
  6829                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6830  003BE8  9A83               	bcf	3971,5,c	;volatile
  6831                           
  6832                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6833  003BEA  9C83               	bcf	3971,6,c	;volatile
  6834                           
  6835                           ;led.c: 311: break;
  6836  003BEC  0012               	return	
  6837  003BEE                     
  6838                           ; BSR set to: 0
  6839                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6840                           
  6841                           ; BSR set to: 0
  6842  003BEE  0EFB               	movlw	low _Led1Sts
  6843  003BF0  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6844  003BF2  0E01               	movlw	high _Led1Sts
  6845  003BF4  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6846  003BF6  0EFA               	movlw	low _Led1OutSts
  6847  003BF8  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6848  003BFA  0E01               	movlw	high _Led1OutSts
  6849  003BFC  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6850  003BFE  0E69               	movlw	low _Led1Blink
  6851  003C00  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6852  003C02  0E03               	movlw	high _Led1Blink
  6853  003C04  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6854  003C06  0E8D               	movlw	low _Led1Pulse
  6855  003C08  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6856  003C0A  0E03               	movlw	high _Led1Pulse
  6857  003C0C  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6858  003C0E  0E01               	movlw	1
  6859  003C10  EC75  F023         	call	_LedStateMachine
  6860  003C14  0100               	movlb	0	; () banked
  6861  003C16  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6862  003C18  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6863  003C1A  5083               	movf	3971,w,c	;volatile
  6864  003C1C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6865  003C1E  0BEF               	andlw	-17
  6866  003C20  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6867  003C22  6E83               	movwf	3971,c	;volatile
  6868                           
  6869                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6870  003C24  0EF9               	movlw	low _Led2Sts
  6871  003C26  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6872  003C28  0E01               	movlw	high _Led2Sts
  6873  003C2A  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6874  003C2C  0EF8               	movlw	low _Led2OutSts
  6875  003C2E  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6876  003C30  0E01               	movlw	high _Led2OutSts
  6877  003C32  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6878  003C34  0E60               	movlw	low _Led2Blink
  6879  003C36  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6880  003C38  0E03               	movlw	high _Led2Blink
  6881  003C3A  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6882  003C3C  0E87               	movlw	low _Led2Pulse
  6883  003C3E  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6884  003C40  0E03               	movlw	high _Led2Pulse
  6885  003C42  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6886  003C44  0E02               	movlw	2
  6887  003C46  EC75  F023         	call	_LedStateMachine
  6888  003C4A  0100               	movlb	0	; () banked
  6889  003C4C  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6890  003C4E  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6891  003C50  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6892  003C52  5083               	movf	3971,w,c	;volatile
  6893  003C54  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6894  003C56  0BDF               	andlw	-33
  6895  003C58  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6896  003C5A  6E83               	movwf	3971,c	;volatile
  6897                           
  6898                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6899  003C5C  0EF7               	movlw	low _Led3Sts
  6900  003C5E  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6901  003C60  0E01               	movlw	high _Led3Sts
  6902  003C62  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6903  003C64  0EF6               	movlw	low _Led3OutSts
  6904  003C66  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6905  003C68  0E01               	movlw	high _Led3OutSts
  6906  003C6A  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6907  003C6C  0E57               	movlw	low _Led3Blink
  6908  003C6E  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6909  003C70  0E03               	movlw	high _Led3Blink
  6910  003C72  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6911  003C74  0E81               	movlw	low _Led3Pulse
  6912  003C76  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6913  003C78  0E03               	movlw	high _Led3Pulse
  6914  003C7A  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6915  003C7C  0E03               	movlw	3
  6916  003C7E  EC75  F023         	call	_LedStateMachine
  6917  003C82  0100               	movlb	0	; () banked
  6918  003C84  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6919  003C86  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6920  003C88  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6921  003C8A  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6922  003C8C  5083               	movf	3971,w,c	;volatile
  6923  003C8E  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6924  003C90  0BBF               	andlw	-65
  6925  003C92  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6926  003C94  6E83               	movwf	3971,c	;volatile
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;led.c: 326: }
  6930                           
  6931                           ; BSR set to: 0
  6932                           ;led.c: 325: break;
  6933                           
  6934                           ;led.c: 324: default:
  6935                           
  6936                           ;led.c: 321: break;
  6937  003C96  0012               	return	
  6938  003C98                     l2125:
  6939                           
  6940                           ; BSR set to: 0
  6941  003C98  0100               	movlb	0	; () banked
  6942  003C9A  51D3               	movf	_SystemState& (0+255),w,b
  6943                           
  6944                           ; Switch size 1, requested type "space"
  6945                           ; Number of cases is 2, Range of values is 0 to 1
  6946                           ; switch strategies available:
  6947                           ; Name         Instructions Cycles
  6948                           ; simple_byte            7     4 (average)
  6949                           ;	Chosen strategy is simple_byte
  6950  003C9C  0A00               	xorlw	0	; case 0
  6951  003C9E  B4D8               	btfsc	status,2,c
  6952  003CA0  D79F               	goto	l2126
  6953  003CA2  0A01               	xorlw	1	; case 1
  6954  003CA4  A4D8               	btfss	status,2,c
  6955  003CA6  0012               	return	
  6956  003CA8  D7A2               	goto	l2128
  6957  003CAA                     __end_of_Led_MainTask:
  6958                           	opt stack 0
  6959                           tosu	equ	0xFFF
  6960                           tosh	equ	0xFFE
  6961                           tosl	equ	0xFFD
  6962                           pclath	equ	0xFFA
  6963                           tblptru	equ	0xFF8
  6964                           tblptrh	equ	0xFF7
  6965                           tblptrl	equ	0xFF6
  6966                           tablat	equ	0xFF5
  6967                           prodh	equ	0xFF4
  6968                           prodl	equ	0xFF3
  6969                           intcon	equ	0xFF2
  6970                           intcon2	equ	0xFF1
  6971                           intcon3	equ	0xFF0
  6972                           postinc0	equ	0xFEE
  6973                           plusw0	equ	0xFEB
  6974                           wreg	equ	0xFE8
  6975                           postinc1	equ	0xFE6
  6976                           postdec1	equ	0xFE5
  6977                           fsr1h	equ	0xFE2
  6978                           fsr1l	equ	0xFE1
  6979                           indf2	equ	0xFDF
  6980                           postinc2	equ	0xFDE
  6981                           postdec2	equ	0xFDD
  6982                           plusw2	equ	0xFDB
  6983                           fsr2h	equ	0xFDA
  6984                           fsr2l	equ	0xFD9
  6985                           status	equ	0xFD8
  6986                           
  6987 ;; *************** function _UsbDevice_MainTask *****************
  6988 ;; Defined at:
  6989 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;  Options         1    wreg     unsigned char 
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;  Options         1    0[COMRAM] unsigned char 
  6994 ;; Return value:  Size  Location     Type
  6995 ;;                  1    wreg      void 
  6996 ;; Registers used:
  6997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6998 ;; Tracked objects:
  6999 ;;		On entry : 0/0
  7000 ;;		On exit  : 0/0
  7001 ;;		Unchanged: 0/0
  7002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7007 ;;Total ram usage:        0 bytes
  7008 ;; Hardware stack levels used:    1
  7009 ;; Hardware stack levels required when called:   20
  7010 ;; This function calls:
  7011 ;;		_CDCTxService
  7012 ;;		_USBDeviceInit
  7013 ;;		_USBDeviceTasks
  7014 ;; This function is called by:
  7015 ;;		_InitializeTasks
  7016 ;;		_ScheduleTasks
  7017 ;; This function uses a non-reentrant model
  7018 ;;
  7019                           
  7020                           	psect	text20
  7021  006476                     __ptext20:
  7022                           	opt stack 0
  7023  006476                     _UsbDevice_MainTask:
  7024                           	opt stack 8
  7025                           
  7026                           ;usb_device_mgr.c: 74: switch (SystemState)
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;incstack = 0
  7030  006476  D008               	goto	l1992
  7031  006478                     
  7032                           ;usb_device_mgr.c: 79: USBDeviceInit();
  7033  006478  EC8F  F013         	call	_USBDeviceInit	;wreg free
  7034                           
  7035                           ;usb_device_mgr.c: 80: ;
  7036                           ;usb_device_mgr.c: 81: break;
  7037  00647C  0012               	return	
  7038  00647E                     
  7039                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  7040  00647E  EC4E  F00F         	call	_USBDeviceTasks	;wreg free
  7041                           
  7042                           ;usb_device_mgr.c: 90: CDCTxService();
  7043  006482  EC85  F015         	call	_CDCTxService	;wreg free
  7044                           
  7045                           ;usb_device_mgr.c: 101: }
  7046                           
  7047                           ;usb_device_mgr.c: 100: break;
  7048                           
  7049                           ;usb_device_mgr.c: 99: default:
  7050                           
  7051                           ;usb_device_mgr.c: 96: break;
  7052  006486  0012               	return	
  7053  006488                     l1992:
  7054  006488  0100               	movlb	0	; () banked
  7055  00648A  51D3               	movf	_SystemState& (0+255),w,b
  7056                           
  7057                           ; Switch size 1, requested type "space"
  7058                           ; Number of cases is 2, Range of values is 0 to 1
  7059                           ; switch strategies available:
  7060                           ; Name         Instructions Cycles
  7061                           ; simple_byte            7     4 (average)
  7062                           ;	Chosen strategy is simple_byte
  7063  00648C  0A00               	xorlw	0	; case 0
  7064  00648E  B4D8               	btfsc	status,2,c
  7065  006490  D7F3               	goto	l1993
  7066  006492  0A01               	xorlw	1	; case 1
  7067  006494  A4D8               	btfss	status,2,c
  7068  006496  0012               	return	
  7069  006498  D7F2               	goto	l1995
  7070  00649A                     __end_of_UsbDevice_MainTask:
  7071                           	opt stack 0
  7072                           tosu	equ	0xFFF
  7073                           tosh	equ	0xFFE
  7074                           tosl	equ	0xFFD
  7075                           pclath	equ	0xFFA
  7076                           tblptru	equ	0xFF8
  7077                           tblptrh	equ	0xFF7
  7078                           tblptrl	equ	0xFF6
  7079                           tablat	equ	0xFF5
  7080                           prodh	equ	0xFF4
  7081                           prodl	equ	0xFF3
  7082                           intcon	equ	0xFF2
  7083                           intcon2	equ	0xFF1
  7084                           intcon3	equ	0xFF0
  7085                           postinc0	equ	0xFEE
  7086                           plusw0	equ	0xFEB
  7087                           wreg	equ	0xFE8
  7088                           postinc1	equ	0xFE6
  7089                           postdec1	equ	0xFE5
  7090                           fsr1h	equ	0xFE2
  7091                           fsr1l	equ	0xFE1
  7092                           indf2	equ	0xFDF
  7093                           postinc2	equ	0xFDE
  7094                           postdec2	equ	0xFDD
  7095                           plusw2	equ	0xFDB
  7096                           fsr2h	equ	0xFDA
  7097                           fsr2l	equ	0xFD9
  7098                           status	equ	0xFD8
  7099                           
  7100 ;; *************** function _MdmHttp_MainTask *****************
  7101 ;; Defined at:
  7102 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  Options         1    wreg     unsigned char 
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;  Options         1    0[COMRAM] unsigned char 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  1    wreg      void 
  7109 ;; Registers used:
  7110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7120 ;;Total ram usage:        0 bytes
  7121 ;; Hardware stack levels used:    1
  7122 ;; Hardware stack levels required when called:   15
  7123 ;; This function calls:
  7124 ;;		_HttpGetMethod
  7125 ;;		_InitGprsNetwork
  7126 ;; This function is called by:
  7127 ;;		_InitializeTasks
  7128 ;;		_ScheduleTasks
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           	psect	text21
  7133  005D9E                     __ptext21:
  7134                           	opt stack 0
  7135  005D9E                     _MdmHttp_MainTask:
  7136                           	opt stack 13
  7137                           
  7138                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  7139                           
  7140                           ;incstack = 0
  7141  005D9E  D019               	goto	l1291
  7142  005DA0                     
  7143                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  7144  005DA0  0E03               	movlw	3
  7145  005DA2  0100               	movlb	0	; () banked
  7146  005DA4  19D0               	xorwf	_MdmStatus& (0+255),w,b
  7147  005DA6  A4D8               	btfss	status,2,c
  7148  005DA8  0012               	return	
  7149                           
  7150                           ; BSR set to: 0
  7151                           ;mdm_gsm_gprs_http.c: 570: {
  7152                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  7153  005DAA  C31C  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  7154  005DAE  C31D  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  7155  005DB2  C1EE  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  7156  005DB6  EC5D  F008         	call	_InitGprsNetwork	;wreg free
  7157  005DBA  0101               	movlb	1	; () banked
  7158  005DBC  6FED               	movwf	_GprsNetworkSts& (0+255),b
  7159                           
  7160                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  7161  005DBE  0EA3               	movlw	low _HttpGetDataLocal
  7162  005DC0  0100               	movlb	0	; () banked
  7163  005DC2  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  7164  005DC4  0E03               	movlw	high _HttpGetDataLocal
  7165  005DC6  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  7166  005DC8  ECF6  F002         	call	_HttpGetMethod	;wreg free
  7167  005DCC  0101               	movlb	1	; () banked
  7168  005DCE  6FEC               	movwf	_HttpGetMethodSts& (0+255),b
  7169                           
  7170                           ; BSR set to: 1
  7171                           ;mdm_gsm_gprs_http.c: 581: }
  7172                           
  7173                           ; BSR set to: 1
  7174                           ;mdm_gsm_gprs_http.c: 580: break;
  7175                           
  7176                           ;mdm_gsm_gprs_http.c: 579: default:
  7177                           
  7178                           ; BSR set to: 1
  7179                           ;mdm_gsm_gprs_http.c: 575: }
  7180                           ;mdm_gsm_gprs_http.c: 576: break;
  7181  005DD0  0012               	return	
  7182  005DD2                     l1291:
  7183                           
  7184                           ; BSR set to: 1
  7185  005DD2  0100               	movlb	0	; () banked
  7186  005DD4  51D3               	movf	_SystemState& (0+255),w,b
  7187                           
  7188                           ; Switch size 1, requested type "space"
  7189                           ; Number of cases is 2, Range of values is 0 to 1
  7190                           ; switch strategies available:
  7191                           ; Name         Instructions Cycles
  7192                           ; simple_byte            7     4 (average)
  7193                           ;	Chosen strategy is simple_byte
  7194  005DD6  0A00               	xorlw	0	; case 0
  7195  005DD8  B4D8               	btfsc	status,2,c
  7196  005DDA  0012               	return	
  7197  005DDC  0A01               	xorlw	1	; case 1
  7198  005DDE  A4D8               	btfss	status,2,c
  7199  005DE0  0012               	return	
  7200  005DE2  D7DE               	goto	l1294
  7201  005DE4                     __end_of_MdmHttp_MainTask:
  7202                           	opt stack 0
  7203                           tosu	equ	0xFFF
  7204                           tosh	equ	0xFFE
  7205                           tosl	equ	0xFFD
  7206                           pclath	equ	0xFFA
  7207                           tblptru	equ	0xFF8
  7208                           tblptrh	equ	0xFF7
  7209                           tblptrl	equ	0xFF6
  7210                           tablat	equ	0xFF5
  7211                           prodh	equ	0xFF4
  7212                           prodl	equ	0xFF3
  7213                           intcon	equ	0xFF2
  7214                           intcon2	equ	0xFF1
  7215                           intcon3	equ	0xFF0
  7216                           postinc0	equ	0xFEE
  7217                           plusw0	equ	0xFEB
  7218                           wreg	equ	0xFE8
  7219                           postinc1	equ	0xFE6
  7220                           postdec1	equ	0xFE5
  7221                           fsr1h	equ	0xFE2
  7222                           fsr1l	equ	0xFE1
  7223                           indf2	equ	0xFDF
  7224                           postinc2	equ	0xFDE
  7225                           postdec2	equ	0xFDD
  7226                           plusw2	equ	0xFDB
  7227                           fsr2h	equ	0xFDA
  7228                           fsr2l	equ	0xFD9
  7229                           status	equ	0xFD8
  7230                           
  7231 ;; *************** function _Mdm_MainTask *****************
  7232 ;; Defined at:
  7233 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  Options         1    wreg     unsigned char 
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;  Options         1    0[COMRAM] unsigned char 
  7238 ;; Return value:  Size  Location     Type
  7239 ;;                  1    wreg      void 
  7240 ;; Registers used:
  7241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7242 ;; Tracked objects:
  7243 ;;		On entry : 0/0
  7244 ;;		On exit  : 0/0
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7251 ;;Total ram usage:        0 bytes
  7252 ;; Hardware stack levels used:    1
  7253 ;; Hardware stack levels required when called:   15
  7254 ;; This function calls:
  7255 ;;		_CheckModem
  7256 ;;		_ConfigureModem
  7257 ;;		_GetSmsSm
  7258 ;;		_ModemEvtParser
  7259 ;;		_SendSmsSm
  7260 ;;		_TurnOnModem
  7261 ;;		_UartSetConfig
  7262 ;;		_Uart_InitUartModule
  7263 ;; This function is called by:
  7264 ;;		_InitializeTasks
  7265 ;;		_ScheduleTasks
  7266 ;; This function uses a non-reentrant model
  7267 ;;
  7268                           
  7269                           	psect	text22
  7270  005AEC                     __ptext22:
  7271                           	opt stack 0
  7272  005AEC                     _Mdm_MainTask:
  7273                           	opt stack 13
  7274                           
  7275                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  7276                           
  7277                           ;incstack = 0
  7278  005AEC  D01E               	goto	l1107
  7279  005AEE                     
  7280                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  7281  005AEE  EC7A  F02B         	call	_UartSetConfig	;wreg free
  7282                           
  7283                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  7284  005AF2  0E20               	movlw	low _UartConfig
  7285  005AF4  0100               	movlb	0	; () banked
  7286  005AF6  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  7287  005AF8  0E03               	movlw	high _UartConfig
  7288  005AFA  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  7289  005AFC  0E01               	movlw	1
  7290  005AFE  EC5E  F005         	call	_Uart_InitUartModule
  7291                           
  7292                           ;mdm_gsm_gprs.c: 764: break;
  7293  005B02  0012               	return	
  7294  005B04                     
  7295                           ;mdm_gsm_gprs.c: 769: CheckModem();
  7296  005B04  EC38  F014         	call	_CheckModem	;wreg free
  7297                           
  7298                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  7299  005B08  042A               	decf	_ComChecCompleted,w,c
  7300  005B0A  A4D8               	btfss	status,2,c
  7301  005B0C  D005               	goto	l1111
  7302  005B0E  0100               	movlb	0	; () banked
  7303  005B10  51D0               	movf	_MdmStatus& (0+255),w,b
  7304  005B12  B4D8               	btfsc	status,2,c
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;mdm_gsm_gprs.c: 772: {
  7308                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  7309  005B14  EC61  F02E         	call	_TurnOnModem	;wreg free
  7310  005B18                     l1111:
  7311                           
  7312                           ;mdm_gsm_gprs.c: 775: }
  7313                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  7314  005B18  ECD9  F01B         	call	_ConfigureModem	;wreg free
  7315                           
  7316                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  7317  005B1C  EC12  F010         	call	_ModemEvtParser	;wreg free
  7318                           
  7319                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  7320  005B20  ECC4  F016         	call	_GetSmsSm	;wreg free
  7321                           
  7322                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  7323  005B24  EC72  F00E         	call	_SendSmsSm	;wreg free
  7324                           
  7325                           ;mdm_gsm_gprs.c: 789: }
  7326                           
  7327                           ;mdm_gsm_gprs.c: 788: break;
  7328                           
  7329                           ;mdm_gsm_gprs.c: 787: default:
  7330                           
  7331                           ;mdm_gsm_gprs.c: 784: break;
  7332  005B28  0012               	return	
  7333  005B2A                     l1107:
  7334  005B2A  0100               	movlb	0	; () banked
  7335  005B2C  51D3               	movf	_SystemState& (0+255),w,b
  7336                           
  7337                           ; Switch size 1, requested type "space"
  7338                           ; Number of cases is 2, Range of values is 0 to 1
  7339                           ; switch strategies available:
  7340                           ; Name         Instructions Cycles
  7341                           ; simple_byte            7     4 (average)
  7342                           ;	Chosen strategy is simple_byte
  7343  005B2E  0A00               	xorlw	0	; case 0
  7344  005B30  B4D8               	btfsc	status,2,c
  7345  005B32  D7DD               	goto	l1108
  7346  005B34  0A01               	xorlw	1	; case 1
  7347  005B36  A4D8               	btfss	status,2,c
  7348  005B38  0012               	return	
  7349  005B3A  D7E4               	goto	l1110
  7350  005B3C                     __end_of_Mdm_MainTask:
  7351                           	opt stack 0
  7352                           tosu	equ	0xFFF
  7353                           tosh	equ	0xFFE
  7354                           tosl	equ	0xFFD
  7355                           pclath	equ	0xFFA
  7356                           tblptru	equ	0xFF8
  7357                           tblptrh	equ	0xFF7
  7358                           tblptrl	equ	0xFF6
  7359                           tablat	equ	0xFF5
  7360                           prodh	equ	0xFF4
  7361                           prodl	equ	0xFF3
  7362                           intcon	equ	0xFF2
  7363                           intcon2	equ	0xFF1
  7364                           intcon3	equ	0xFF0
  7365                           postinc0	equ	0xFEE
  7366                           plusw0	equ	0xFEB
  7367                           wreg	equ	0xFE8
  7368                           postinc1	equ	0xFE6
  7369                           postdec1	equ	0xFE5
  7370                           fsr1h	equ	0xFE2
  7371                           fsr1l	equ	0xFE1
  7372                           indf2	equ	0xFDF
  7373                           postinc2	equ	0xFDE
  7374                           postdec2	equ	0xFDD
  7375                           plusw2	equ	0xFDB
  7376                           fsr2h	equ	0xFDA
  7377                           fsr2l	equ	0xFD9
  7378                           status	equ	0xFD8
  7379                           
  7380 ;; *************** function _I2cSlv_MainTask *****************
  7381 ;; Defined at:
  7382 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;  Options         1    wreg     unsigned char 
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;  Options         1    0[COMRAM] unsigned char 
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  1    wreg      void 
  7389 ;; Registers used:
  7390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7400 ;;Total ram usage:        0 bytes
  7401 ;; Hardware stack levels used:    1
  7402 ;; Hardware stack levels required when called:   14
  7403 ;; This function calls:
  7404 ;;		_I2cSendMsgSm
  7405 ;;		_I2cSetConfig
  7406 ;;		_I2c_InitI2cModule
  7407 ;;		_OsAlrm_SetOsAlarm
  7408 ;; This function is called by:
  7409 ;;		_InitializeTasks
  7410 ;;		_ScheduleTasks
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text23
  7415  005854                     __ptext23:
  7416                           	opt stack 0
  7417  005854                     _I2cSlv_MainTask:
  7418                           	opt stack 14
  7419                           
  7420                           ;i2c_slv.c: 217: switch (SystemState)
  7421                           
  7422                           ;incstack = 0
  7423  005854  D020               	goto	l1404
  7424  005856                     
  7425                           ;i2c_slv.c: 222: I2cSetConfig();
  7426  005856  ECC1  F031         	call	_I2cSetConfig	;wreg free
  7427                           
  7428                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  7429  00585A  0E4D               	movlw	low _I2cConfig
  7430  00585C  0100               	movlb	0	; () banked
  7431  00585E  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  7432  005860  0E03               	movlw	high _I2cConfig
  7433  005862  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  7434  005864  ECDF  F028         	call	_I2c_InitI2cModule	;wreg free
  7435                           
  7436                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  7437  005868  0E00               	movlw	0
  7438  00586A  0100               	movlb	0	; () banked
  7439  00586C  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7440  00586E  0E00               	movlw	0
  7441  005870  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7442  005872  0E32               	movlw	50
  7443  005874  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7444  005876  0E00               	movlw	0
  7445  005878  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7446  00587A  0E00               	movlw	0
  7447  00587C  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7448  00587E  0E00               	movlw	0
  7449  005880  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7450  005882  0E8A               	movlw	low _I2cDummyTx
  7451  005884  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7452  005886  0E66               	movlw	high _I2cDummyTx
  7453  005888  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7454  00588A  ECE8  F01F         	call	_OsAlrm_SetOsAlarm	;wreg free
  7455                           
  7456                           ;i2c_slv.c: 227: break;
  7457  00588E  0012               	return	
  7458  005890                     
  7459                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7460  005890  EC4C  F020         	call	_I2cSendMsgSm	;wreg free
  7461                           
  7462                           ;i2c_slv.c: 238: }
  7463                           
  7464                           ;i2c_slv.c: 237: break;
  7465                           
  7466                           ;i2c_slv.c: 236: default:
  7467                           
  7468                           ;i2c_slv.c: 233: break;
  7469  005894  0012               	return	
  7470  005896                     l1404:
  7471  005896  0100               	movlb	0	; () banked
  7472  005898  51D3               	movf	_SystemState& (0+255),w,b
  7473                           
  7474                           ; Switch size 1, requested type "space"
  7475                           ; Number of cases is 2, Range of values is 0 to 1
  7476                           ; switch strategies available:
  7477                           ; Name         Instructions Cycles
  7478                           ; simple_byte            7     4 (average)
  7479                           ;	Chosen strategy is simple_byte
  7480  00589A  0A00               	xorlw	0	; case 0
  7481  00589C  B4D8               	btfsc	status,2,c
  7482  00589E  D7DB               	goto	l1405
  7483  0058A0  0A01               	xorlw	1	; case 1
  7484  0058A2  A4D8               	btfss	status,2,c
  7485  0058A4  0012               	return	
  7486  0058A6  D7F4               	goto	l1407
  7487  0058A8                     __end_of_I2cSlv_MainTask:
  7488                           	opt stack 0
  7489                           tosu	equ	0xFFF
  7490                           tosh	equ	0xFFE
  7491                           tosl	equ	0xFFD
  7492                           pclath	equ	0xFFA
  7493                           tblptru	equ	0xFF8
  7494                           tblptrh	equ	0xFF7
  7495                           tblptrl	equ	0xFF6
  7496                           tablat	equ	0xFF5
  7497                           prodh	equ	0xFF4
  7498                           prodl	equ	0xFF3
  7499                           intcon	equ	0xFF2
  7500                           intcon2	equ	0xFF1
  7501                           intcon3	equ	0xFF0
  7502                           postinc0	equ	0xFEE
  7503                           plusw0	equ	0xFEB
  7504                           wreg	equ	0xFE8
  7505                           postinc1	equ	0xFE6
  7506                           postdec1	equ	0xFE5
  7507                           fsr1h	equ	0xFE2
  7508                           fsr1l	equ	0xFE1
  7509                           indf2	equ	0xFDF
  7510                           postinc2	equ	0xFDE
  7511                           postdec2	equ	0xFDD
  7512                           plusw2	equ	0xFDB
  7513                           fsr2h	equ	0xFDA
  7514                           fsr2l	equ	0xFD9
  7515                           status	equ	0xFD8
  7516                           
  7517 ;; *************** function _Mdm_DrvMainFn *****************
  7518 ;; Defined at:
  7519 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;  Options         1    wreg     unsigned char 
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;  Options         1    0[COMRAM] unsigned char 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  1    wreg      void 
  7526 ;; Registers used:
  7527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7537 ;;Total ram usage:        0 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; Hardware stack levels required when called:   13
  7540 ;; This function calls:
  7541 ;;		_MdmCntSm
  7542 ;; This function is called by:
  7543 ;;		_InitializeTasks
  7544 ;;		_ScheduleTasks
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           	psect	text24
  7549  0068D4                     __ptext24:
  7550                           	opt stack 0
  7551  0068D4                     _Mdm_DrvMainFn:
  7552                           	opt stack 15
  7553                           
  7554                           ;mdm_drv.c: 307: MdmCntSm();
  7555                           
  7556                           ;incstack = 0
  7557  0068D4  EC21  F023         	call	_MdmCntSm	;wreg free
  7558  0068D8  0012               	return		;funcret
  7559  0068DA                     __end_of_Mdm_DrvMainFn:
  7560                           	opt stack 0
  7561                           tosu	equ	0xFFF
  7562                           tosh	equ	0xFFE
  7563                           tosl	equ	0xFFD
  7564                           pclath	equ	0xFFA
  7565                           tblptru	equ	0xFF8
  7566                           tblptrh	equ	0xFF7
  7567                           tblptrl	equ	0xFF6
  7568                           tablat	equ	0xFF5
  7569                           prodh	equ	0xFF4
  7570                           prodl	equ	0xFF3
  7571                           intcon	equ	0xFF2
  7572                           intcon2	equ	0xFF1
  7573                           intcon3	equ	0xFF0
  7574                           postinc0	equ	0xFEE
  7575                           plusw0	equ	0xFEB
  7576                           wreg	equ	0xFE8
  7577                           postinc1	equ	0xFE6
  7578                           postdec1	equ	0xFE5
  7579                           fsr1h	equ	0xFE2
  7580                           fsr1l	equ	0xFE1
  7581                           indf2	equ	0xFDF
  7582                           postinc2	equ	0xFDE
  7583                           postdec2	equ	0xFDD
  7584                           plusw2	equ	0xFDB
  7585                           fsr2h	equ	0xFDA
  7586                           fsr2l	equ	0xFD9
  7587                           status	equ	0xFD8
  7588                           
  7589 ;; *************** function _Wdg_MainTask *****************
  7590 ;; Defined at:
  7591 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;  Options         1    wreg     unsigned char 
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;  Options         1    0[COMRAM] unsigned char 
  7596 ;; Return value:  Size  Location     Type
  7597 ;;                  1    wreg      void 
  7598 ;; Registers used:
  7599 ;;		wreg, status,2, status,0, cstack
  7600 ;; Tracked objects:
  7601 ;;		On entry : 0/0
  7602 ;;		On exit  : 0/0
  7603 ;;		Unchanged: 0/0
  7604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7609 ;;Total ram usage:        0 bytes
  7610 ;; Hardware stack levels used:    1
  7611 ;; Hardware stack levels required when called:   12
  7612 ;; This function calls:
  7613 ;;		_Mcu_ClearWdg
  7614 ;;		_Mcu_SetWdgSts
  7615 ;; This function is called by:
  7616 ;;		_InitializeTasks
  7617 ;;		_ScheduleTasks
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           	psect	text25
  7622  006506                     __ptext25:
  7623                           	opt stack 0
  7624  006506                     _Wdg_MainTask:
  7625                           	opt stack 16
  7626                           
  7627                           ;wdg.c: 75: switch (SystemState)
  7628                           
  7629                           ;incstack = 0
  7630  006506  D007               	goto	l2501
  7631  006508                     
  7632                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7633  006508  0E01               	movlw	1
  7634  00650A  ECED  F033         	call	_Mcu_SetWdgSts
  7635                           
  7636                           ;wdg.c: 81: break;
  7637  00650E  0012               	return	
  7638  006510                     
  7639                           ;wdg.c: 86: Mcu_ClearWdg();
  7640  006510  EC6D  F034         	call	_Mcu_ClearWdg	;wreg free
  7641                           
  7642                           ;wdg.c: 92: }
  7643                           
  7644                           ;wdg.c: 91: break;
  7645                           
  7646                           ;wdg.c: 90: default:
  7647                           
  7648                           ;wdg.c: 87: break;
  7649  006514  0012               	return	
  7650  006516                     l2501:
  7651  006516  0100               	movlb	0	; () banked
  7652  006518  51D3               	movf	_SystemState& (0+255),w,b
  7653                           
  7654                           ; Switch size 1, requested type "space"
  7655                           ; Number of cases is 2, Range of values is 0 to 1
  7656                           ; switch strategies available:
  7657                           ; Name         Instructions Cycles
  7658                           ; simple_byte            7     4 (average)
  7659                           ;	Chosen strategy is simple_byte
  7660  00651A  0A00               	xorlw	0	; case 0
  7661  00651C  B4D8               	btfsc	status,2,c
  7662  00651E  D7F4               	goto	l2502
  7663  006520  0A01               	xorlw	1	; case 1
  7664  006522  A4D8               	btfss	status,2,c
  7665  006524  0012               	return	
  7666  006526  D7F4               	goto	l2504
  7667  006528                     __end_of_Wdg_MainTask:
  7668                           	opt stack 0
  7669                           tosu	equ	0xFFF
  7670                           tosh	equ	0xFFE
  7671                           tosl	equ	0xFFD
  7672                           pclath	equ	0xFFA
  7673                           tblptru	equ	0xFF8
  7674                           tblptrh	equ	0xFF7
  7675                           tblptrl	equ	0xFF6
  7676                           tablat	equ	0xFF5
  7677                           prodh	equ	0xFF4
  7678                           prodl	equ	0xFF3
  7679                           intcon	equ	0xFF2
  7680                           intcon2	equ	0xFF1
  7681                           intcon3	equ	0xFF0
  7682                           postinc0	equ	0xFEE
  7683                           plusw0	equ	0xFEB
  7684                           wreg	equ	0xFE8
  7685                           postinc1	equ	0xFE6
  7686                           postdec1	equ	0xFE5
  7687                           fsr1h	equ	0xFE2
  7688                           fsr1l	equ	0xFE1
  7689                           indf2	equ	0xFDF
  7690                           postinc2	equ	0xFDE
  7691                           postdec2	equ	0xFDD
  7692                           plusw2	equ	0xFDB
  7693                           fsr2h	equ	0xFDA
  7694                           fsr2l	equ	0xFD9
  7695                           status	equ	0xFD8
  7696                           
  7697 ;; *************** function _Mcu_SetWdgSts *****************
  7698 ;; Defined at:
  7699 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;  WdgSts          1    wreg     unsigned char 
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  1    wreg      void 
  7706 ;; Registers used:
  7707 ;;		wreg
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7714 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7716 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7717 ;;Total ram usage:        1 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:   11
  7720 ;; This function calls:
  7721 ;;		Nothing
  7722 ;; This function is called by:
  7723 ;;		_Wdg_MainTask
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           	psect	text26
  7728  0067DA                     __ptext26:
  7729                           	opt stack 0
  7730  0067DA                     _Mcu_SetWdgSts:
  7731                           	opt stack 16
  7732                           
  7733                           ;incstack = 0
  7734                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7735  0067DA  0100               	movlb	0	; () banked
  7736  0067DC  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7737                           
  7738                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7739  0067DE  0100               	movlb	0	; () banked
  7740  0067E0  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7741  0067E2  D002               	bra	u14245
  7742  0067E4  90C0               	bcf	4032,0,c	;volatile
  7743  0067E6  D001               	bra	u14246
  7744  0067E8                     u14245:
  7745  0067E8  80C0               	bsf	4032,0,c	;volatile
  7746  0067EA                     u14246:
  7747  0067EA  0012               	return		;funcret
  7748  0067EC                     __end_of_Mcu_SetWdgSts:
  7749                           	opt stack 0
  7750                           tosu	equ	0xFFF
  7751                           tosh	equ	0xFFE
  7752                           tosl	equ	0xFFD
  7753                           pclath	equ	0xFFA
  7754                           tblptru	equ	0xFF8
  7755                           tblptrh	equ	0xFF7
  7756                           tblptrl	equ	0xFF6
  7757                           tablat	equ	0xFF5
  7758                           prodh	equ	0xFF4
  7759                           prodl	equ	0xFF3
  7760                           intcon	equ	0xFF2
  7761                           intcon2	equ	0xFF1
  7762                           intcon3	equ	0xFF0
  7763                           postinc0	equ	0xFEE
  7764                           plusw0	equ	0xFEB
  7765                           wreg	equ	0xFE8
  7766                           postinc1	equ	0xFE6
  7767                           postdec1	equ	0xFE5
  7768                           fsr1h	equ	0xFE2
  7769                           fsr1l	equ	0xFE1
  7770                           indf2	equ	0xFDF
  7771                           postinc2	equ	0xFDE
  7772                           postdec2	equ	0xFDD
  7773                           plusw2	equ	0xFDB
  7774                           fsr2h	equ	0xFDA
  7775                           fsr2l	equ	0xFD9
  7776                           status	equ	0xFD8
  7777                           
  7778 ;; *************** function _Mcu_ClearWdg *****************
  7779 ;; Defined at:
  7780 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;		None
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;		None
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  1    wreg      void 
  7787 ;; Registers used:
  7788 ;;		None
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7798 ;;Total ram usage:        0 bytes
  7799 ;; Hardware stack levels used:    1
  7800 ;; Hardware stack levels required when called:   11
  7801 ;; This function calls:
  7802 ;;		Nothing
  7803 ;; This function is called by:
  7804 ;;		_Wdg_MainTask
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text27
  7809  0068DA                     __ptext27:
  7810                           	opt stack 0
  7811  0068DA                     _Mcu_ClearWdg:
  7812                           	opt stack 16
  7813                           
  7814                           ;incstack = 0
  7815  0068DA  0004               	clrwdt		;# 
  7816  0068DC  0012               	return		;funcret
  7817  0068DE                     __end_of_Mcu_ClearWdg:
  7818                           	opt stack 0
  7819                           tosu	equ	0xFFF
  7820                           tosh	equ	0xFFE
  7821                           tosl	equ	0xFFD
  7822                           pclath	equ	0xFFA
  7823                           tblptru	equ	0xFF8
  7824                           tblptrh	equ	0xFF7
  7825                           tblptrl	equ	0xFF6
  7826                           tablat	equ	0xFF5
  7827                           prodh	equ	0xFF4
  7828                           prodl	equ	0xFF3
  7829                           intcon	equ	0xFF2
  7830                           intcon2	equ	0xFF1
  7831                           intcon3	equ	0xFF0
  7832                           postinc0	equ	0xFEE
  7833                           plusw0	equ	0xFEB
  7834                           wreg	equ	0xFE8
  7835                           postinc1	equ	0xFE6
  7836                           postdec1	equ	0xFE5
  7837                           fsr1h	equ	0xFE2
  7838                           fsr1l	equ	0xFE1
  7839                           indf2	equ	0xFDF
  7840                           postinc2	equ	0xFDE
  7841                           postdec2	equ	0xFDD
  7842                           plusw2	equ	0xFDB
  7843                           fsr2h	equ	0xFDA
  7844                           fsr2l	equ	0xFD9
  7845                           status	equ	0xFD8
  7846                           
  7847 ;; *************** function _USBDeviceTasks *****************
  7848 ;; Defined at:
  7849 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;		None
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;  i               1   56[BANK0 ] unsigned char 
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  1    wreg      void 
  7856 ;; Registers used:
  7857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7864 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7866 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7867 ;;Total ram usage:        1 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:   19
  7870 ;; This function calls:
  7871 ;;		_USBCtrlEPAllowStatusStage
  7872 ;;		_USBCtrlEPService
  7873 ;;		_USBDeviceInit
  7874 ;;		_USBIncrement1msInternalTimers
  7875 ;;		_USBStallHandler
  7876 ;;		_USBSuspend
  7877 ;;		_USBWakeFromSuspend
  7878 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7879 ;; This function is called by:
  7880 ;;		_UsbDevice_MainTask
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text28
  7885  001E9C                     __ptext28:
  7886                           	opt stack 0
  7887  001E9C                     _USBDeviceTasks:
  7888                           	opt stack 8
  7889                           
  7890                           ;usb_device.c: 562: }
  7891                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7892                           
  7893                           ; BSR set to: 0
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;usb_device.c: 561: return;
  7897                           
  7898                           ; BSR set to: 0
  7899                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7900                           
  7901                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7902                           
  7903                           ;usb_device.c: 529: UIE = 0;
  7904                           
  7905                           ;usb_device.c: 524: {
  7906                           ;usb_device.c: 526: UCON = 0;
  7907                           
  7908                           ;usb_device.c: 497: uint8_t i;
  7909                           ;usb_device.c: 523: if (1 != 1)
  7910                           
  7911                           ;incstack = 0
  7912  001E9C  0100               	movlb	0	; () banked
  7913  001E9E  51CC               	movf	_USBDeviceState& (0+255),w,b
  7914  001EA0  A4D8               	btfss	status,2,c
  7915  001EA2  D012               	goto	l1615
  7916                           
  7917                           ; BSR set to: 0
  7918                           ;usb_device.c: 585: {
  7919                           ;usb_device.c: 587: UCON = 0;
  7920  001EA4  0E00               	movlw	0
  7921  001EA6  6E65               	movwf	3941,c	;volatile
  7922                           
  7923                           ;usb_device.c: 590: UIE = 0;
  7924  001EA8  0E00               	movlw	0
  7925  001EAA  010F               	movlb	15	; () banked
  7926  001EAC  6F36               	movwf	54,b	;volatile
  7927                           
  7928                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7929  001EAE  0E16               	movlw	22
  7930  001EB0  6F39               	movwf	57,b	;volatile
  7931  001EB2  0E9F               	movlw	159
  7932  001EB4  6F37               	movwf	55,b	;volatile
  7933  001EB6  0E7B               	movlw	123
  7934  001EB8  6F36               	movwf	54,b	;volatile
  7935                           
  7936                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7937  001EBA  D001               	goto	l1616
  7938  001EBC                     l1617:
  7939  001EBC  8665               	bsf	3941,3,c	;volatile
  7940  001EBE                     l1616:
  7941  001EBE  A665               	btfss	3941,3,c	;volatile
  7942  001EC0  D7FD               	goto	l1617
  7943                           
  7944                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7945  001EC2  0E01               	movlw	1
  7946  001EC4  0100               	movlb	0	; () banked
  7947  001EC6  6FCC               	movwf	_USBDeviceState& (0+255),b
  7948  001EC8                     l1615:
  7949                           
  7950                           ; BSR set to: 0
  7951                           ;usb_device.c: 605: }
  7952                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7953                           
  7954                           ; BSR set to: 0
  7955  001EC8  05CC               	decf	_USBDeviceState& (0+255),w,b
  7956  001ECA  B4D8               	btfsc	status,2,c
  7957                           
  7958                           ; BSR set to: 0
  7959                           ;usb_device.c: 609: {
  7960                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7961  001ECC  BA65               	btfsc	3941,5,c	;volatile
  7962  001ECE  D00A               	goto	l1620
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;usb_device.c: 620: {
  7966                           ;usb_device.c: 626: {UIR = 0;};
  7967  001ED0  0E00               	movlw	0
  7968  001ED2  6E62               	movwf	3938,c	;volatile
  7969                           
  7970                           ;usb_device.c: 630: UIE=0;
  7971  001ED4  0E00               	movlw	0
  7972  001ED6  010F               	movlb	15	; () banked
  7973  001ED8  6F36               	movwf	54,b	;volatile
  7974                           
  7975                           ; BSR set to: 15
  7976                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7977  001EDA  8136               	bsf	54,0,b	;volatile
  7978                           
  7979                           ; BSR set to: 15
  7980                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7981  001EDC  8936               	bsf	54,4,b	;volatile
  7982                           
  7983                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7984  001EDE  0E02               	movlw	2
  7985  001EE0  0100               	movlb	0	; () banked
  7986  001EE2  6FCC               	movwf	_USBDeviceState& (0+255),b
  7987  001EE4                     l1620:
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;usb_device.c: 635: }
  7991                           ;usb_device.c: 636: }
  7992                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7993                           
  7994                           ; BSR set to: 0
  7995                           
  7996                           ; BSR set to: 0
  7997  001EE4  A462               	btfss	3938,2,c	;volatile
  7998  001EE6  D006               	goto	l1621
  7999                           
  8000                           ; BSR set to: 0
  8001  001EE8  010F               	movlb	15	; () banked
  8002  001EEA  A536               	btfss	54,2,b	;volatile
  8003  001EEC  D003               	goto	l1621
  8004                           
  8005                           ; BSR set to: 15
  8006                           ;usb_device.c: 653: {
  8007                           ;usb_device.c: 654: (UIR &= 0xFB);
  8008  001EEE  9462               	bcf	3938,2,c	;volatile
  8009                           
  8010                           ; BSR set to: 15
  8011                           ;usb_device.c: 658: USBWakeFromSuspend();
  8012  001EF0  EC77  F030         	call	_USBWakeFromSuspend	;wreg free
  8013  001EF4                     l1621:
  8014                           
  8015                           ;usb_device.c: 660: }
  8016                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  8017  001EF4  A265               	btfss	3941,1,c	;volatile
  8018  001EF6  D002               	goto	l1622
  8019                           
  8020                           ;usb_device.c: 666: {
  8021                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  8022  001EF8  98A1               	bcf	4001,4,c	;volatile
  8023                           
  8024                           ;usb_device.c: 668: return;
  8025  001EFA  0012               	return	
  8026  001EFC                     l1622:
  8027                           
  8028                           ;usb_device.c: 669: }
  8029                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  8030  001EFC  A062               	btfss	3938,0,c	;volatile
  8031  001EFE  D009               	goto	l1623
  8032  001F00  010F               	movlb	15	; () banked
  8033  001F02  A136               	btfss	54,0,b	;volatile
  8034  001F04  D006               	goto	l1623
  8035                           
  8036                           ; BSR set to: 15
  8037                           ;usb_device.c: 682: {
  8038                           ;usb_device.c: 683: USBDeviceInit();
  8039  001F06  EC8F  F013         	call	_USBDeviceInit	;wreg free
  8040                           
  8041                           ;usb_device.c: 687: ;
  8042                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  8043  001F0A  0E04               	movlw	4
  8044  001F0C  0100               	movlb	0	; () banked
  8045  001F0E  6FCC               	movwf	_USBDeviceState& (0+255),b
  8046                           
  8047                           ; BSR set to: 0
  8048                           ;usb_device.c: 699: (UIR &= 0xFE);
  8049  001F10  9062               	bcf	3938,0,c	;volatile
  8050  001F12                     l1623:
  8051                           
  8052                           ;usb_device.c: 700: }
  8053                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  8054                           
  8055                           ; BSR set to: 0
  8056  001F12  A862               	btfss	3938,4,c	;volatile
  8057  001F14  D004               	goto	l1624
  8058  001F16  010F               	movlb	15	; () banked
  8059  001F18  B936               	btfsc	54,4,b	;volatile
  8060                           
  8061                           ; BSR set to: 15
  8062                           ;usb_device.c: 706: {
  8063                           ;usb_device.c: 712: USBSuspend();
  8064  001F1A  EC01  F031         	call	_USBSuspend	;wreg free
  8065  001F1E                     l1624:
  8066                           
  8067                           ;usb_device.c: 714: }
  8068                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  8069  001F1E  AC62               	btfss	3938,6,c	;volatile
  8070  001F20  D01D               	goto	l1628
  8071                           
  8072                           ;usb_device.c: 727: {
  8073                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  8074  001F22  010F               	movlb	15	; () banked
  8075  001F24  AD36               	btfss	54,6,b	;volatile
  8076  001F26  D00F               	goto	l1626
  8077                           
  8078                           ; BSR set to: 15
  8079                           ;usb_device.c: 730: {
  8080                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  8081  001F28  0E00               	movlw	0
  8082  001F2A  0100               	movlb	0	; () banked
  8083  001F2C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8084  001F2E  0E73               	movlw	115
  8085  001F30  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8086  001F32  0E00               	movlw	0
  8087  001F34  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8088  001F36  0E00               	movlw	0
  8089  001F38  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8090  001F3A  0E00               	movlw	0
  8091  001F3C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8092  001F3E  0E01               	movlw	1
  8093  001F40  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8094  001F42  ECEE  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8095  001F46                     l1626:
  8096                           
  8097                           ;usb_device.c: 732: }
  8098                           ;usb_device.c: 733: (UIR &= 0xBF);
  8099  001F46  9C62               	bcf	3938,6,c	;volatile
  8100                           
  8101                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  8102  001F48  EC94  F032         	call	_USBIncrement1msInternalTimers	;wreg free
  8103                           
  8104                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  8105  001F4C  0100               	movlb	0	; () banked
  8106  001F4E  51C8               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  8107  001F50  A4D8               	btfss	status,2,c
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;usb_device.c: 754: {
  8111                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  8112  001F52  07C8               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  8113                           
  8114                           ; BSR set to: 0
  8115                           ;usb_device.c: 756: }
  8116                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  8117                           
  8118                           ; BSR set to: 0
  8119  001F54  51C8               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  8120  001F56  B4D8               	btfsc	status,2,c
  8121                           
  8122                           ; BSR set to: 0
  8123                           ;usb_device.c: 763: {
  8124                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  8125  001F58  EC55  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8126  001F5C                     l1628:
  8127                           
  8128                           ;usb_device.c: 765: }
  8129                           ;usb_device.c: 767: }
  8130                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  8131  001F5C  AA62               	btfss	3938,5,c	;volatile
  8132  001F5E  D004               	goto	l1629
  8133  001F60  010F               	movlb	15	; () banked
  8134  001F62  BB36               	btfsc	54,5,b	;volatile
  8135                           
  8136                           ; BSR set to: 15
  8137                           ;usb_device.c: 770: {
  8138                           ;usb_device.c: 771: USBStallHandler();
  8139  001F64  ECF2  F02E         	call	_USBStallHandler	;wreg free
  8140  001F68                     l1629:
  8141                           
  8142                           ;usb_device.c: 772: }
  8143                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  8144  001F68  A262               	btfss	3938,1,c	;volatile
  8145  001F6A  D013               	goto	l1630
  8146  001F6C  010F               	movlb	15	; () banked
  8147  001F6E  A336               	btfss	54,1,b	;volatile
  8148  001F70  D010               	goto	l1630
  8149                           
  8150                           ; BSR set to: 15
  8151                           ;usb_device.c: 775: {
  8152                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  8153  001F72  0E7F               	movlw	127
  8154  001F74  0100               	movlb	0	; () banked
  8155  001F76  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8156  001F78  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8157  001F7A  0E00               	movlw	0
  8158  001F7C  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8159  001F7E  0E00               	movlw	0
  8160  001F80  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8161  001F82  0E00               	movlw	0
  8162  001F84  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8163  001F86  0E01               	movlw	1
  8164  001F88  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8165  001F8A  ECEE  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8166                           
  8167                           ;usb_device.c: 777: {UEIR = 0;};
  8168  001F8E  0E00               	movlw	0
  8169  001F90  6E63               	movwf	3939,c	;volatile
  8170  001F92                     l1630:
  8171                           
  8172                           ;usb_device.c: 785: }
  8173                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  8174  001F92  0E04               	movlw	4
  8175  001F94  0100               	movlb	0	; () banked
  8176  001F96  61CC               	cpfslt	_USBDeviceState& (0+255),b
  8177  001F98  D002               	goto	l1631
  8178                           
  8179                           ; BSR set to: 0
  8180                           ;usb_device.c: 793: {
  8181                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  8182  001F9A  98A1               	bcf	4001,4,c	;volatile
  8183                           
  8184                           ;usb_device.c: 795: return;
  8185  001F9C  0012               	return	
  8186  001F9E                     l1631:
  8187                           
  8188                           ; BSR set to: 0
  8189                           ;usb_device.c: 796: }
  8190                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  8191  001F9E  010F               	movlb	15	; () banked
  8192  001FA0  A736               	btfss	54,3,b	;volatile
  8193  001FA2  D03E               	goto	u15230
  8194                           
  8195                           ; BSR set to: 15
  8196                           ;usb_device.c: 802: {
  8197                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  8198  001FA4  0E00               	movlw	0
  8199  001FA6  0100               	movlb	0	; () banked
  8200  001FA8  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  8201  001FAA                     l15528:
  8202                           
  8203                           ; BSR set to: 0
  8204  001FAA  0E03               	movlw	3
  8205  001FAC  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  8206  001FAE  D001               	goto	l1633
  8207  001FB0  D037               	goto	u15230
  8208  001FB2                     l1633:
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;usb_device.c: 804: {
  8212                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  8213  001FB2  A662               	btfss	3938,3,c	;volatile
  8214  001FB4  D035               	goto	u15230
  8215                           
  8216                           ; BSR set to: 0
  8217                           ;usb_device.c: 806: {
  8218                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  8219  001FB6  CF64 F0D4          	movff	3940,_USTATcopy	;volatile
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  8223  001FBA  31D4               	rrcf	_USTATcopy& (0+255),w,b
  8224  001FBC  32E8               	rrcf	wreg,f,c
  8225  001FBE  32E8               	rrcf	wreg,f,c
  8226  001FC0  0B0F               	andlw	15
  8227  001FC2  6FC9               	movwf	_endpoint_number& (0+255),b
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;usb_device.c: 811: (UIR &= 0xF7);
  8231  001FC4  9662               	bcf	3938,3,c	;volatile
  8232                           
  8233                           ; BSR set to: 0
  8234                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  8235  001FC6  B5D4               	btfsc	_USTATcopy& (0+255),2,b
  8236  001FC8  D007               	goto	l1636
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;usb_device.c: 817: {
  8240                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  8241  001FCA  51C9               	movf	_endpoint_number& (0+255),w,b
  8242  001FCC  0D01               	mullw	1
  8243  001FCE  0ECE               	movlw	low _ep_data_out
  8244  001FD0  24F3               	addwf	prodl,w,c
  8245  001FD2  6ED9               	movwf	fsr2l,c
  8246  001FD4  0E02               	movlw	high _ep_data_out
  8247  001FD6  D007               	goto	L3
  8248  001FD8                     l1636:
  8249                           
  8250                           ;usb_device.c: 820: else
  8251                           ;usb_device.c: 821: {
  8252                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  8253                           
  8254                           ; BSR set to: 2
  8255  001FD8  0100               	movlb	0	; () banked
  8256  001FDA  51C9               	movf	_endpoint_number& (0+255),w,b
  8257  001FDC  0D01               	mullw	1
  8258  001FDE  0ED1               	movlw	low _ep_data_in
  8259  001FE0  24F3               	addwf	prodl,w,c
  8260  001FE2  6ED9               	movwf	fsr2l,c
  8261  001FE4  0E02               	movlw	high _ep_data_in
  8262  001FE6                     L3:
  8263  001FE6  20F4               	addwfc	prodh,w,c
  8264  001FE8  6EDA               	movwf	fsr2h,c
  8265  001FEA  0102               	movlb	2	; () banked
  8266  001FEC  70DF               	btg	indf2,0,c
  8267                           
  8268                           ; BSR set to: 2
  8269                           ;usb_device.c: 823: }
  8270                           ;usb_device.c: 828: if(endpoint_number == 0)
  8271                           
  8272                           ; BSR set to: 2
  8273  001FEE  0100               	movlb	0	; () banked
  8274  001FF0  51C9               	movf	_endpoint_number& (0+255),w,b
  8275  001FF2  A4D8               	btfss	status,2,c
  8276  001FF4  D003               	goto	l1638
  8277                           
  8278                           ; BSR set to: 0
  8279                           ;usb_device.c: 829: {
  8280                           ;usb_device.c: 830: USBCtrlEPService();
  8281  001FF6  ECEA  F025         	call	_USBCtrlEPService	;wreg free
  8282                           
  8283                           ;usb_device.c: 831: }
  8284  001FFA  D00F               	goto	l1640
  8285  001FFC                     l1638:
  8286                           
  8287                           ;usb_device.c: 832: else
  8288                           ;usb_device.c: 833: {
  8289                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  8290  001FFC  0E00               	movlw	0
  8291  001FFE  0100               	movlb	0	; () banked
  8292  002000  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8293  002002  0E72               	movlw	114
  8294  002004  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8295  002006  0ED4               	movlw	low _USTATcopy
  8296  002008  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8297  00200A  0E00               	movlw	high _USTATcopy
  8298  00200C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8299  00200E  0E00               	movlw	0
  8300  002010  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8301  002012  0E00               	movlw	0
  8302  002014  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8303  002016  ECEE  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8304  00201A                     l1640:
  8305  00201A  0100               	movlb	0	; () banked
  8306  00201C  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  8307  00201E  D7C5               	goto	l15528
  8308  002020                     u15230:
  8309                           
  8310                           ;usb_device.c: 840: }
  8311                           ;usb_device.c: 841: }
  8312                           ;usb_device.c: 842: }
  8313                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  8314                           
  8315                           ; BSR set to: 0
  8316  002020  98A1               	bcf	4001,4,c	;volatile
  8317  002022  0012               	return		;funcret
  8318  002024                     __end_of_USBDeviceTasks:
  8319                           	opt stack 0
  8320                           tosu	equ	0xFFF
  8321                           tosh	equ	0xFFE
  8322                           tosl	equ	0xFFD
  8323                           pclath	equ	0xFFA
  8324                           tblptru	equ	0xFF8
  8325                           tblptrh	equ	0xFF7
  8326                           tblptrl	equ	0xFF6
  8327                           tablat	equ	0xFF5
  8328                           prodh	equ	0xFF4
  8329                           prodl	equ	0xFF3
  8330                           intcon	equ	0xFF2
  8331                           intcon2	equ	0xFF1
  8332                           intcon3	equ	0xFF0
  8333                           postinc0	equ	0xFEE
  8334                           plusw0	equ	0xFEB
  8335                           wreg	equ	0xFE8
  8336                           postinc1	equ	0xFE6
  8337                           postdec1	equ	0xFE5
  8338                           fsr1h	equ	0xFE2
  8339                           fsr1l	equ	0xFE1
  8340                           indf2	equ	0xFDF
  8341                           postinc2	equ	0xFDE
  8342                           postdec2	equ	0xFDD
  8343                           plusw2	equ	0xFDB
  8344                           fsr2h	equ	0xFDA
  8345                           fsr2l	equ	0xFD9
  8346                           status	equ	0xFD8
  8347                           
  8348 ;; *************** function _USBWakeFromSuspend *****************
  8349 ;; Defined at:
  8350 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;		None
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;		None
  8355 ;; Return value:  Size  Location     Type
  8356 ;;                  1    wreg      void 
  8357 ;; Registers used:
  8358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8359 ;; Tracked objects:
  8360 ;;		On entry : 0/0
  8361 ;;		On exit  : 0/0
  8362 ;;		Unchanged: 0/0
  8363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8368 ;;Total ram usage:        0 bytes
  8369 ;; Hardware stack levels used:    1
  8370 ;; Hardware stack levels required when called:   15
  8371 ;; This function calls:
  8372 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8373 ;; This function is called by:
  8374 ;;		_USBDeviceTasks
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           	psect	text29
  8379  0060EE                     __ptext29:
  8380                           	opt stack 0
  8381  0060EE                     _USBWakeFromSuspend:
  8382                           	opt stack 11
  8383                           
  8384                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  8385                           
  8386                           ;incstack = 0
  8387  0060EE  0E00               	movlw	0
  8388  0060F0  0101               	movlb	1	; () banked
  8389  0060F2  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8390                           
  8391                           ; BSR set to: 1
  8392                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  8393  0060F4  0E00               	movlw	0
  8394  0060F6  0100               	movlb	0	; () banked
  8395  0060F8  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8396  0060FA  0E74               	movlw	116
  8397  0060FC  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8398  0060FE  0E00               	movlw	0
  8399  006100  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8400  006102  0E00               	movlw	0
  8401  006104  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8402  006106  0E00               	movlw	0
  8403  006108  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8404  00610A  0E00               	movlw	0
  8405  00610C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8406  00610E  ECEE  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8407                           
  8408                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  8409  006112  9265               	bcf	3941,1,c	;volatile
  8410                           
  8411                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  8412  006114  010F               	movlb	15	; () banked
  8413  006116  9536               	bcf	54,2,b	;volatile
  8414                           
  8415                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  8416  006118  D001               	goto	l1768
  8417  00611A                     
  8418                           ;usb_device.c: 2361: {
  8419                           ;usb_device.c: 2362: (UIR &= 0xFB);
  8420                           
  8421                           ; BSR set to: 15
  8422  00611A  9462               	bcf	3938,2,c	;volatile
  8423  00611C                     l1768:
  8424  00611C  B462               	btfsc	3938,2,c	;volatile
  8425  00611E  D7FD               	goto	l1769
  8426                           
  8427                           ;usb_device.c: 2363: }
  8428                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  8429  006120  0E00               	movlw	0
  8430  006122  0101               	movlb	1	; () banked
  8431  006124  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8432                           
  8433                           ; BSR set to: 1
  8434  006126  0012               	return		;funcret
  8435  006128                     __end_of_USBWakeFromSuspend:
  8436                           	opt stack 0
  8437                           tosu	equ	0xFFF
  8438                           tosh	equ	0xFFE
  8439                           tosl	equ	0xFFD
  8440                           pclath	equ	0xFFA
  8441                           tblptru	equ	0xFF8
  8442                           tblptrh	equ	0xFF7
  8443                           tblptrl	equ	0xFF6
  8444                           tablat	equ	0xFF5
  8445                           prodh	equ	0xFF4
  8446                           prodl	equ	0xFF3
  8447                           intcon	equ	0xFF2
  8448                           intcon2	equ	0xFF1
  8449                           intcon3	equ	0xFF0
  8450                           postinc0	equ	0xFEE
  8451                           plusw0	equ	0xFEB
  8452                           wreg	equ	0xFE8
  8453                           postinc1	equ	0xFE6
  8454                           postdec1	equ	0xFE5
  8455                           fsr1h	equ	0xFE2
  8456                           fsr1l	equ	0xFE1
  8457                           indf2	equ	0xFDF
  8458                           postinc2	equ	0xFDE
  8459                           postdec2	equ	0xFDD
  8460                           plusw2	equ	0xFDB
  8461                           fsr2h	equ	0xFDA
  8462                           fsr2l	equ	0xFD9
  8463                           status	equ	0xFD8
  8464                           
  8465 ;; *************** function _USBSuspend *****************
  8466 ;; Defined at:
  8467 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;		None
  8470 ;; Auto vars:     Size  Location     Type
  8471 ;;		None
  8472 ;; Return value:  Size  Location     Type
  8473 ;;                  1    wreg      void 
  8474 ;; Registers used:
  8475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8476 ;; Tracked objects:
  8477 ;;		On entry : 0/0
  8478 ;;		On exit  : 0/0
  8479 ;;		Unchanged: 0/0
  8480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8485 ;;Total ram usage:        0 bytes
  8486 ;; Hardware stack levels used:    1
  8487 ;; Hardware stack levels required when called:   15
  8488 ;; This function calls:
  8489 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8490 ;; This function is called by:
  8491 ;;		_USBDeviceTasks
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           	psect	text30
  8496  006202                     __ptext30:
  8497                           	opt stack 0
  8498  006202                     _USBSuspend:
  8499                           	opt stack 11
  8500                           
  8501                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8502                           
  8503                           ; BSR set to: 1
  8504                           ;incstack = 0
  8505  006202  010F               	movlb	15	; () banked
  8506  006204  8536               	bsf	54,2,b	;volatile
  8507                           
  8508                           ; BSR set to: 15
  8509                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8510  006206  9862               	bcf	3938,4,c	;volatile
  8511                           
  8512                           ; BSR set to: 15
  8513                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8514  006208  8265               	bsf	3941,1,c	;volatile
  8515                           
  8516                           ; BSR set to: 15
  8517                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8518  00620A  0E01               	movlw	1
  8519  00620C  0101               	movlb	1	; () banked
  8520  00620E  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8521                           
  8522                           ; BSR set to: 1
  8523                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8524  006210  0E00               	movlw	0
  8525  006212  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8526                           
  8527                           ; BSR set to: 1
  8528                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8529  006214  0E00               	movlw	0
  8530  006216  0100               	movlb	0	; () banked
  8531  006218  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8532  00621A  0E75               	movlw	117
  8533  00621C  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8534  00621E  0E00               	movlw	0
  8535  006220  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8536  006222  0E00               	movlw	0
  8537  006224  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8538  006226  0E00               	movlw	0
  8539  006228  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8540  00622A  0E00               	movlw	0
  8541  00622C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8542  00622E  ECEE  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8543  006232  0012               	return		;funcret
  8544  006234                     __end_of_USBSuspend:
  8545                           	opt stack 0
  8546                           tosu	equ	0xFFF
  8547                           tosh	equ	0xFFE
  8548                           tosl	equ	0xFFD
  8549                           pclath	equ	0xFFA
  8550                           tblptru	equ	0xFF8
  8551                           tblptrh	equ	0xFF7
  8552                           tblptrl	equ	0xFF6
  8553                           tablat	equ	0xFF5
  8554                           prodh	equ	0xFF4
  8555                           prodl	equ	0xFF3
  8556                           intcon	equ	0xFF2
  8557                           intcon2	equ	0xFF1
  8558                           intcon3	equ	0xFF0
  8559                           postinc0	equ	0xFEE
  8560                           plusw0	equ	0xFEB
  8561                           wreg	equ	0xFE8
  8562                           postinc1	equ	0xFE6
  8563                           postdec1	equ	0xFE5
  8564                           fsr1h	equ	0xFE2
  8565                           fsr1l	equ	0xFE1
  8566                           indf2	equ	0xFDF
  8567                           postinc2	equ	0xFDE
  8568                           postdec2	equ	0xFDD
  8569                           plusw2	equ	0xFDB
  8570                           fsr2h	equ	0xFDA
  8571                           fsr2l	equ	0xFD9
  8572                           status	equ	0xFD8
  8573                           
  8574 ;; *************** function _USBStallHandler *****************
  8575 ;; Defined at:
  8576 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;		None
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;		None
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  1    wreg      void 
  8583 ;; Registers used:
  8584 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8592 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8593 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8594 ;;Total ram usage:        1 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; Hardware stack levels required when called:   11
  8597 ;; This function calls:
  8598 ;;		Nothing
  8599 ;; This function is called by:
  8600 ;;		_USBDeviceTasks
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           	psect	text31
  8605  005DE4                     __ptext31:
  8606                           	opt stack 0
  8607  005DE4                     _USBStallHandler:
  8608                           	opt stack 15
  8609                           
  8610                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8611                           
  8612                           ;incstack = 0
  8613  005DE4  010F               	movlb	15	; () banked
  8614  005DE6  A126               	btfss	38,0,b	;volatile
  8615  005DE8  D01D               	goto	l1760
  8616                           
  8617                           ; BSR set to: 15
  8618                           ;usb_device.c: 2233: {
  8619                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8620  005DEA  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8621  005DEE  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8622  005DF2  0E80               	movlw	128
  8623  005DF4  18DE               	xorwf	postinc2,w,c
  8624  005DF6  A4D8               	btfss	status,2,c
  8625  005DF8  D014               	goto	l1761
  8626                           
  8627                           ; BSR set to: 15
  8628  005DFA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8629  005DFE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8630  005E02  0E84               	movlw	132
  8631  005E04  18DE               	xorwf	postinc2,w,c
  8632  005E06  A4D8               	btfss	status,2,c
  8633  005E08  D00C               	goto	l1761
  8634                           
  8635                           ; BSR set to: 15
  8636                           ;usb_device.c: 2236: {
  8637                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8638  005E0A  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8639  005E0E  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8640  005E12  0E0C               	movlw	12
  8641  005E14  6EDF               	movwf	indf2,c
  8642                           
  8643                           ; BSR set to: 15
  8644                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8645  005E16  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8646  005E1A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8647  005E1E  0E00               	movlw	0
  8648  005E20  8EDB               	bsf	plusw2,7,c
  8649  005E22                     l1761:
  8650                           
  8651                           ; BSR set to: 15
  8652                           ;usb_device.c: 2240: }
  8653                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8654                           
  8655                           ; BSR set to: 15
  8656  005E22  9126               	bcf	38,0,b	;volatile
  8657  005E24                     l1760:
  8658                           
  8659                           ; BSR set to: 15
  8660                           ;usb_device.c: 2242: }
  8661                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8662  005E24  9A62               	bcf	3938,5,c	;volatile
  8663                           
  8664                           ; BSR set to: 15
  8665  005E26  0012               	return		;funcret
  8666  005E28                     __end_of_USBStallHandler:
  8667                           	opt stack 0
  8668                           tosu	equ	0xFFF
  8669                           tosh	equ	0xFFE
  8670                           tosl	equ	0xFFD
  8671                           pclath	equ	0xFFA
  8672                           tblptru	equ	0xFF8
  8673                           tblptrh	equ	0xFF7
  8674                           tblptrl	equ	0xFF6
  8675                           tablat	equ	0xFF5
  8676                           prodh	equ	0xFF4
  8677                           prodl	equ	0xFF3
  8678                           intcon	equ	0xFF2
  8679                           intcon2	equ	0xFF1
  8680                           intcon3	equ	0xFF0
  8681                           postinc0	equ	0xFEE
  8682                           plusw0	equ	0xFEB
  8683                           wreg	equ	0xFE8
  8684                           postinc1	equ	0xFE6
  8685                           postdec1	equ	0xFE5
  8686                           fsr1h	equ	0xFE2
  8687                           fsr1l	equ	0xFE1
  8688                           indf2	equ	0xFDF
  8689                           postinc2	equ	0xFDE
  8690                           postdec2	equ	0xFDD
  8691                           plusw2	equ	0xFDB
  8692                           fsr2h	equ	0xFDA
  8693                           fsr2l	equ	0xFD9
  8694                           status	equ	0xFD8
  8695                           
  8696 ;; *************** function _USBIncrement1msInternalTimers *****************
  8697 ;; Defined at:
  8698 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8699 ;; Parameters:    Size  Location     Type
  8700 ;;		None
  8701 ;; Auto vars:     Size  Location     Type
  8702 ;;		None
  8703 ;; Return value:  Size  Location     Type
  8704 ;;                  1    wreg      void 
  8705 ;; Registers used:
  8706 ;;		wreg, status,2, status,0
  8707 ;; Tracked objects:
  8708 ;;		On entry : 0/0
  8709 ;;		On exit  : 0/0
  8710 ;;		Unchanged: 0/0
  8711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8716 ;;Total ram usage:        0 bytes
  8717 ;; Hardware stack levels used:    1
  8718 ;; Hardware stack levels required when called:   11
  8719 ;; This function calls:
  8720 ;;		Nothing
  8721 ;; This function is called by:
  8722 ;;		_USBDeviceTasks
  8723 ;; This function uses a non-reentrant model
  8724 ;;
  8725                           
  8726                           	psect	text32
  8727  006528                     __ptext32:
  8728                           	opt stack 0
  8729  006528                     _USBIncrement1msInternalTimers:
  8730                           	opt stack 15
  8731                           
  8732                           ;usb_device.c: 3050: USB1msTickCount++;
  8733                           
  8734                           ; BSR set to: 15
  8735                           ;incstack = 0
  8736  006528  0E01               	movlw	1
  8737  00652A  0103               	movlb	3	; () banked
  8738  00652C  2710               	addwf	_USB1msTickCount& (0+255),f,b
  8739  00652E  0E00               	movlw	0
  8740  006530  2311               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8741  006532  2312               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8742  006534  2313               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8743                           
  8744                           ; BSR set to: 3
  8745                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8746  006536  0101               	movlb	1	; () banked
  8747  006538  51E2               	movf	_USBBusIsSuspended& (0+255),w,b
  8748  00653A  A4D8               	btfss	status,2,c
  8749  00653C  0012               	return	
  8750                           
  8751                           ; BSR set to: 1
  8752                           ;usb_device.c: 3052: {
  8753                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8754  00653E  2BE0               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8755                           
  8756                           ; BSR set to: 1
  8757                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8758  006540  51E0               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8759  006542  A4D8               	btfss	status,2,c
  8760  006544  0012               	return	
  8761                           
  8762                           ; BSR set to: 1
  8763                           ;usb_device.c: 3056: {
  8764                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8765  006546  69E0               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8766                           
  8767                           ; BSR set to: 1
  8768  006548  0012               	return	
  8769  00654A                     __end_of_USBIncrement1msInternalTimers:
  8770                           	opt stack 0
  8771                           tosu	equ	0xFFF
  8772                           tosh	equ	0xFFE
  8773                           tosl	equ	0xFFD
  8774                           pclath	equ	0xFFA
  8775                           tblptru	equ	0xFF8
  8776                           tblptrh	equ	0xFF7
  8777                           tblptrl	equ	0xFF6
  8778                           tablat	equ	0xFF5
  8779                           prodh	equ	0xFF4
  8780                           prodl	equ	0xFF3
  8781                           intcon	equ	0xFF2
  8782                           intcon2	equ	0xFF1
  8783                           intcon3	equ	0xFF0
  8784                           postinc0	equ	0xFEE
  8785                           plusw0	equ	0xFEB
  8786                           wreg	equ	0xFE8
  8787                           postinc1	equ	0xFE6
  8788                           postdec1	equ	0xFE5
  8789                           fsr1h	equ	0xFE2
  8790                           fsr1l	equ	0xFE1
  8791                           indf2	equ	0xFDF
  8792                           postinc2	equ	0xFDE
  8793                           postdec2	equ	0xFDD
  8794                           plusw2	equ	0xFDB
  8795                           fsr2h	equ	0xFDA
  8796                           fsr2l	equ	0xFD9
  8797                           status	equ	0xFD8
  8798                           
  8799 ;; *************** function _USBDeviceInit *****************
  8800 ;; Defined at:
  8801 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;  i               1   37[BANK0 ] unsigned char 
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      void 
  8808 ;; Registers used:
  8809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8816 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8818 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8819 ;;Total ram usage:        1 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; Hardware stack levels required when called:   12
  8822 ;; This function calls:
  8823 ;;		_memset
  8824 ;; This function is called by:
  8825 ;;		_USBDeviceTasks
  8826 ;;		_UsbDevice_MainTask
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           	psect	text33
  8831  00271E                     __ptext33:
  8832                           	opt stack 0
  8833  00271E                     _USBDeviceInit:
  8834                           	opt stack 14
  8835                           
  8836                           ;usb_device.c: 297: uint8_t i;
  8837                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8838                           
  8839                           ; BSR set to: 1
  8840                           ;incstack = 0
  8841  00271E  98A0               	bcf	4000,4,c	;volatile
  8842                           
  8843                           ;usb_device.c: 303: ;
  8844                           ;usb_device.c: 306: {UEIR = 0;};
  8845  002720  0E00               	movlw	0
  8846  002722  6E63               	movwf	3939,c	;volatile
  8847                           
  8848                           ;usb_device.c: 309: {UIR = 0;};
  8849  002724  0E00               	movlw	0
  8850  002726  6E62               	movwf	3938,c	;volatile
  8851                           
  8852                           ;usb_device.c: 312: UEP0 = 0;
  8853  002728  0E00               	movlw	0
  8854  00272A  010F               	movlb	15	; () banked
  8855  00272C  6F26               	movwf	38,b	;volatile
  8856                           
  8857                           ; BSR set to: 15
  8858                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8859  00272E  0E27               	movlw	39
  8860  002730  0100               	movlb	0	; () banked
  8861  002732  6F7D               	movwf	memset@p1& (0+255),b
  8862  002734  0E0F               	movlw	15
  8863  002736  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8864  002738  0E00               	movlw	0
  8865  00273A  6F80               	movwf	(memset@c+1)& (0+255),b
  8866  00273C  0E00               	movlw	0
  8867  00273E  6F7F               	movwf	memset@c& (0+255),b
  8868  002740  0E00               	movlw	0
  8869  002742  6F82               	movwf	(memset@n+1)& (0+255),b
  8870  002744  0E02               	movlw	2
  8871  002746  6F81               	movwf	memset@n& (0+255),b
  8872  002748  EC4B  F031         	call	_memset	;wreg free
  8873                           
  8874                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8875  00274C  0E16               	movlw	22
  8876  00274E  010F               	movlb	15	; () banked
  8877  002750  6F39               	movwf	57,b	;volatile
  8878                           
  8879                           ; BSR set to: 15
  8880  002752  0E9F               	movlw	159
  8881  002754  6F37               	movwf	55,b	;volatile
  8882                           
  8883                           ; BSR set to: 15
  8884  002756  0E7B               	movlw	123
  8885  002758  6F36               	movwf	54,b	;volatile
  8886                           
  8887                           ; BSR set to: 15
  8888                           ;usb_device.c: 319: ;
  8889                           ;usb_device.c: 322: ;
  8890                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8891  00275A  0E00               	movlw	0
  8892  00275C  0100               	movlb	0	; () banked
  8893  00275E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8894  002760                     l14244:
  8895                           
  8896                           ; BSR set to: 0
  8897  002760  0E0B               	movlw	11
  8898  002762  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8899  002764  D001               	goto	l1604
  8900  002766  D00E               	goto	u13430
  8901  002768                     l1604:
  8902                           
  8903                           ; BSR set to: 0
  8904                           ;usb_device.c: 326: {
  8905                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8906                           
  8907                           ; BSR set to: 0
  8908  002768  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8909  00276A  0D04               	mullw	4
  8910  00276C  0E00               	movlw	0
  8911  00276E  24F3               	addwf	prodl,w,c
  8912  002770  6ED9               	movwf	fsr2l,c
  8913  002772  0E04               	movlw	4
  8914  002774  20F4               	addwfc	prodh,w,c
  8915  002776  6EDA               	movwf	fsr2h,c
  8916  002778  6ADE               	clrf	postinc2,c
  8917  00277A  6ADE               	clrf	postinc2,c
  8918  00277C  6ADE               	clrf	postinc2,c
  8919  00277E  6ADD               	clrf	postdec2,c
  8920                           
  8921                           ; BSR set to: 0
  8922  002780  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8923  002782  D7EE               	goto	l14244
  8924  002784                     u13430:
  8925                           
  8926                           ; BSR set to: 0
  8927                           ;usb_device.c: 328: }
  8928                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8929  002784  8C65               	bsf	3941,6,c	;volatile
  8930                           
  8931                           ; BSR set to: 0
  8932                           ;usb_device.c: 334: UADDR = 0x00;
  8933  002786  0E00               	movlw	0
  8934  002788  010F               	movlb	15	; () banked
  8935  00278A  6F38               	movwf	56,b	;volatile
  8936                           
  8937                           ; BSR set to: 15
  8938                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8939  00278C  9865               	bcf	3941,4,c	;volatile
  8940                           
  8941                           ; BSR set to: 15
  8942                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8943  00278E  9C65               	bcf	3941,6,c	;volatile
  8944  002790                     
  8945                           ;usb_device.c: 344: {
  8946                           ;usb_device.c: 345: (UIR &= 0xF7);
  8947                           
  8948                           ; BSR set to: 15
  8949  002790  9662               	bcf	3938,3,c	;volatile
  8950                           
  8951                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8952  002792  0E00               	movlw	0
  8953  002794  0100               	movlb	0	; () banked
  8954  002796  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8958  002798  0E00               	movlw	0
  8959  00279A  0101               	movlb	1	; () banked
  8960  00279C  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8961                           
  8962                           ; BSR set to: 1
  8963                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8964  00279E  0E00               	movlw	0
  8965  0027A0  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8966  0027A2  0E00               	movlw	0
  8967  0027A4  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8968                           
  8969                           ; BSR set to: 1
  8970                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8971  0027A6  B662               	btfsc	3938,3,c	;volatile
  8972  0027A8  D7F3               	goto	l1606
  8973                           
  8974                           ; BSR set to: 1
  8975                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8976                           
  8977                           ; BSR set to: 1
  8978  0027AA  0E01               	movlw	1
  8979  0027AC  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8980                           
  8981                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8982  0027AE  0E01               	movlw	1
  8983  0027B0  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8984                           
  8985                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8986  0027B2  0E00               	movlw	0
  8987  0027B4  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8988                           
  8989                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8990  0027B6  0E00               	movlw	0
  8991  0027B8  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8992                           
  8993                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8994  0027BA  0E00               	movlw	0
  8995  0027BC  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8996                           
  8997                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8998  0027BE  0E00               	movlw	0
  8999  0027C0  0100               	movlb	0	; () banked
  9000  0027C2  6F85               	movwf	USBDeviceInit@i& (0+255),b
  9001  0027C4                     l14272:
  9002                           
  9003                           ; BSR set to: 0
  9004  0027C4  0E02               	movlw	2
  9005  0027C6  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  9006  0027C8  D001               	goto	l1608
  9007  0027CA  D02E               	goto	u13460
  9008  0027CC                     l1608:
  9009                           
  9010                           ; BSR set to: 0
  9011                           ;usb_device.c: 364: {
  9012                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  9013                           
  9014                           ; BSR set to: 0
  9015  0027CC  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9016  0027CE  0D02               	mullw	2
  9017  0027D0  0EB6               	movlw	low _pBDTEntryIn
  9018  0027D2  24F3               	addwf	prodl,w,c
  9019  0027D4  6ED9               	movwf	fsr2l,c
  9020  0027D6  0E00               	movlw	high _pBDTEntryIn
  9021  0027D8  20F4               	addwfc	prodh,w,c
  9022  0027DA  6EDA               	movwf	fsr2h,c
  9023  0027DC  0E00               	movlw	0
  9024  0027DE  6EDE               	movwf	postinc2,c
  9025  0027E0  0E00               	movlw	0
  9026  0027E2  6EDD               	movwf	postdec2,c
  9027                           
  9028                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  9029  0027E4  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9030  0027E6  0D02               	mullw	2
  9031  0027E8  0E06               	movlw	low _pBDTEntryOut
  9032  0027EA  24F3               	addwf	prodl,w,c
  9033  0027EC  6ED9               	movwf	fsr2l,c
  9034  0027EE  0E03               	movlw	high _pBDTEntryOut
  9035  0027F0  20F4               	addwfc	prodh,w,c
  9036  0027F2  6EDA               	movwf	fsr2h,c
  9037  0027F4  0E00               	movlw	0
  9038  0027F6  6EDE               	movwf	postinc2,c
  9039  0027F8  0E00               	movlw	0
  9040  0027FA  6EDD               	movwf	postdec2,c
  9041                           
  9042                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  9043  0027FC  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9044  0027FE  0D01               	mullw	1
  9045  002800  0ED1               	movlw	low _ep_data_in
  9046  002802  24F3               	addwf	prodl,w,c
  9047  002804  6ED9               	movwf	fsr2l,c
  9048  002806  0E02               	movlw	high _ep_data_in
  9049  002808  20F4               	addwfc	prodh,w,c
  9050  00280A  6EDA               	movwf	fsr2h,c
  9051  00280C  0E00               	movlw	0
  9052  00280E  6EDF               	movwf	indf2,c
  9053                           
  9054                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  9055  002810  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9056  002812  0D01               	mullw	1
  9057  002814  0ECE               	movlw	low _ep_data_out
  9058  002816  24F3               	addwf	prodl,w,c
  9059  002818  6ED9               	movwf	fsr2l,c
  9060  00281A  0E02               	movlw	high _ep_data_out
  9061  00281C  20F4               	addwfc	prodh,w,c
  9062  00281E  6EDA               	movwf	fsr2h,c
  9063  002820  0E00               	movlw	0
  9064  002822  6EDF               	movwf	indf2,c
  9065                           
  9066                           ; BSR set to: 0
  9067  002824  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  9068  002826  D7CE               	goto	l14272
  9069  002828                     u13460:
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;usb_device.c: 369: }
  9073                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9074                           
  9075                           ; BSR set to: 0
  9076  002828  0E08               	movlw	8
  9077  00282A  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  9078  00282C  0E04               	movlw	4
  9079  00282E  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  9083  002830  0E16               	movlw	22
  9084  002832  010F               	movlb	15	; () banked
  9085  002834  6F26               	movwf	38,b	;volatile
  9086                           
  9087                           ; BSR set to: 15
  9088                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  9089  002836  0E04               	movlw	4
  9090  002838  0104               	movlb	4	; () banked
  9091  00283A  6F03               	movwf	3,b	;volatile
  9092  00283C  0E30               	movlw	48
  9093  00283E  6F02               	movwf	2,b	;volatile
  9094                           
  9095                           ; BSR set to: 4
  9096                           ;usb_device.c: 377: BDT[0].CNT = 8;
  9097  002840  0E08               	movlw	8
  9098  002842  6F01               	movwf	1,b	;volatile
  9099                           
  9100                           ; BSR set to: 4
  9101                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  9102  002844  0E04               	movlw	4
  9103  002846  6F00               	movwf	0,b	;volatile
  9104                           
  9105                           ; BSR set to: 4
  9106                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  9107  002848  8F00               	bsf	0,7,b	;volatile
  9108                           
  9109                           ; BSR set to: 4
  9110                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  9111  00284A  0E00               	movlw	0
  9112  00284C  0100               	movlb	0	; () banked
  9113  00284E  6FD5               	movwf	_USBActiveConfiguration& (0+255),b
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;usb_device.c: 384: USB1msTickCount = 0;
  9117  002850  0E00               	movlw	0
  9118  002852  0103               	movlb	3	; () banked
  9119  002854  6F10               	movwf	_USB1msTickCount& (0+255),b
  9120  002856  0E00               	movlw	0
  9121  002858  6F11               	movwf	(_USB1msTickCount+1)& (0+255),b
  9122  00285A  0E00               	movlw	0
  9123  00285C  6F12               	movwf	(_USB1msTickCount+2)& (0+255),b
  9124  00285E  0E00               	movlw	0
  9125  002860  6F13               	movwf	(_USB1msTickCount+3)& (0+255),b
  9126                           
  9127                           ; BSR set to: 3
  9128                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  9129  002862  0E00               	movlw	0
  9130  002864  0101               	movlb	1	; () banked
  9131  002866  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  9132                           
  9133                           ; BSR set to: 1
  9134                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  9135  002868  0E00               	movlw	0
  9136  00286A  0100               	movlb	0	; () banked
  9137  00286C  6FCC               	movwf	_USBDeviceState& (0+255),b
  9138                           
  9139                           ; BSR set to: 0
  9140  00286E  0012               	return		;funcret
  9141  002870                     __end_of_USBDeviceInit:
  9142                           	opt stack 0
  9143                           tosu	equ	0xFFF
  9144                           tosh	equ	0xFFE
  9145                           tosl	equ	0xFFD
  9146                           pclath	equ	0xFFA
  9147                           tblptru	equ	0xFF8
  9148                           tblptrh	equ	0xFF7
  9149                           tblptrl	equ	0xFF6
  9150                           tablat	equ	0xFF5
  9151                           prodh	equ	0xFF4
  9152                           prodl	equ	0xFF3
  9153                           intcon	equ	0xFF2
  9154                           intcon2	equ	0xFF1
  9155                           intcon3	equ	0xFF0
  9156                           postinc0	equ	0xFEE
  9157                           plusw0	equ	0xFEB
  9158                           wreg	equ	0xFE8
  9159                           postinc1	equ	0xFE6
  9160                           postdec1	equ	0xFE5
  9161                           fsr1h	equ	0xFE2
  9162                           fsr1l	equ	0xFE1
  9163                           indf2	equ	0xFDF
  9164                           postinc2	equ	0xFDE
  9165                           postdec2	equ	0xFDD
  9166                           plusw2	equ	0xFDB
  9167                           fsr2h	equ	0xFDA
  9168                           fsr2l	equ	0xFD9
  9169                           status	equ	0xFD8
  9170                           
  9171 ;; *************** function _USBCtrlEPService *****************
  9172 ;; Defined at:
  9173 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;		None
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;		None
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  1    wreg      void 
  9180 ;; Registers used:
  9181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9189 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9190 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9191 ;;Total ram usage:        1 bytes
  9192 ;; Hardware stack levels used:    1
  9193 ;; Hardware stack levels required when called:   18
  9194 ;; This function calls:
  9195 ;;		_USBCtrlTrfInHandler
  9196 ;;		_USBCtrlTrfOutHandler
  9197 ;;		_USBCtrlTrfSetupHandler
  9198 ;;		_memcpy
  9199 ;; This function is called by:
  9200 ;;		_USBDeviceTasks
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           	psect	text34
  9205  004BD4                     __ptext34:
  9206                           	opt stack 0
  9207  004BD4                     _USBCtrlEPService:
  9208                           	opt stack 8
  9209                           
  9210                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;incstack = 0
  9214  004BD4  0E2D               	movlw	45
  9215  004BD6  0100               	movlb	0	; () banked
  9216  004BD8  6FC8               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  9217                           
  9218                           ; BSR set to: 0
  9219                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  9220  004BDA  C0D4  F097         	movff	_USTATcopy,??_USBCtrlEPService
  9221  004BDE  0EFD               	movlw	253
  9222  004BE0  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  9223  004BE2  A4D8               	btfss	status,2,c
  9224  004BE4  D038               	goto	l1774
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;usb_device.c: 2401: {
  9228                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  9229  004BE6  C0D4  F097         	movff	_USTATcopy,??_USBCtrlEPService
  9230  004BEA  90D8               	bcf	status,0,c
  9231  004BEC  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  9232  004BEE  0E3F               	movlw	63
  9233  004BF0  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  9234  004BF2  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  9235  004BF4  0D04               	mullw	4
  9236  004BF6  0E00               	movlw	0
  9237  004BF8  24F3               	addwf	prodl,w,c
  9238  004BFA  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9239  004BFC  0E04               	movlw	4
  9240  004BFE  20F4               	addwfc	prodh,w,c
  9241  004C00  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9245  004C02  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9246  004C06  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  9250  004C0A  0E04               	movlw	4
  9251  004C0C  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  9252                           
  9253                           ; BSR set to: 0
  9254                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  9255  004C0E  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  9256  004C12  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  9257  004C16  30DF               	rrcf	223,w,c
  9258  004C18  32E8               	rrcf	wreg,f,c
  9259  004C1A  0B0F               	andlw	15
  9260  004C1C  0A0D               	xorlw	13
  9261  004C1E  A4D8               	btfss	status,2,c
  9262  004C20  D017               	goto	l1775
  9263                           
  9264                           ; BSR set to: 0
  9265                           ;usb_device.c: 2418: {
  9266                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  9267  004C22  0E30               	movlw	48
  9268  004C24  6F7D               	movwf	memcpy@d1& (0+255),b
  9269  004C26  0E04               	movlw	4
  9270  004C28  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  9271  004C2A  EE20 F002          	lfsr	2,2
  9272  004C2E  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  9273  004C30  26D9               	addwf	fsr2l,f,c
  9274  004C32  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  9275  004C34  22DA               	addwfc	fsr2h,f,c
  9276  004C36  CFDE F07F          	movff	postinc2,memcpy@s1
  9277  004C3A  CFDD F080          	movff	postdec2,memcpy@s1+1
  9278  004C3E  0E00               	movlw	0
  9279  004C40  6F82               	movwf	(memcpy@n+1)& (0+255),b
  9280  004C42  0E08               	movlw	8
  9281  004C44  6F81               	movwf	memcpy@n& (0+255),b
  9282  004C46  EC87  F02E         	call	_memcpy	;wreg free
  9283                           
  9284                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  9285  004C4A  EC55  F027         	call	_USBCtrlTrfSetupHandler	;wreg free
  9286                           
  9287                           ;usb_device.c: 2427: }
  9288  004C4E  0012               	return	
  9289  004C50                     l1775:
  9290                           
  9291                           ;usb_device.c: 2428: else
  9292                           ;usb_device.c: 2429: {
  9293                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  9294  004C50  EC24  F02A         	call	_USBCtrlTrfOutHandler	;wreg free
  9295                           
  9296                           ;usb_device.c: 2432: }
  9297                           ;usb_device.c: 2433: }
  9298  004C54  0012               	return	
  9299  004C56                     l1774:
  9300                           
  9301                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  9302  004C56  0100               	movlb	0	; () banked
  9303  004C58  51D4               	movf	_USTATcopy& (0+255),w,b
  9304  004C5A  0BFD               	andlw	253
  9305  004C5C  0A04               	xorlw	4
  9306  004C5E  A4D8               	btfss	status,2,c
  9307  004C60  0012               	return	
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;usb_device.c: 2435: {
  9311                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  9312  004C62  ECAE  F020         	call	_USBCtrlTrfInHandler	;wreg free
  9313  004C66  0012               	return	
  9314  004C68                     __end_of_USBCtrlEPService:
  9315                           	opt stack 0
  9316                           tosu	equ	0xFFF
  9317                           tosh	equ	0xFFE
  9318                           tosl	equ	0xFFD
  9319                           pclath	equ	0xFFA
  9320                           tblptru	equ	0xFF8
  9321                           tblptrh	equ	0xFF7
  9322                           tblptrl	equ	0xFF6
  9323                           tablat	equ	0xFF5
  9324                           prodh	equ	0xFF4
  9325                           prodl	equ	0xFF3
  9326                           intcon	equ	0xFF2
  9327                           intcon2	equ	0xFF1
  9328                           intcon3	equ	0xFF0
  9329                           postinc0	equ	0xFEE
  9330                           plusw0	equ	0xFEB
  9331                           wreg	equ	0xFE8
  9332                           postinc1	equ	0xFE6
  9333                           postdec1	equ	0xFE5
  9334                           fsr1h	equ	0xFE2
  9335                           fsr1l	equ	0xFE1
  9336                           indf2	equ	0xFDF
  9337                           postinc2	equ	0xFDE
  9338                           postdec2	equ	0xFDD
  9339                           plusw2	equ	0xFDB
  9340                           fsr2h	equ	0xFDA
  9341                           fsr2l	equ	0xFD9
  9342                           status	equ	0xFD8
  9343                           
  9344 ;; *************** function _memcpy *****************
  9345 ;; Defined at:
  9346 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  9347 ;; Parameters:    Size  Location     Type
  9348 ;;  d1              2   29[BANK0 ] PTR void 
  9349 ;;		 -> SetupPkt(8), 
  9350 ;;  s1              2   31[BANK0 ] PTR const void 
  9351 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9352 ;;  n               2   33[BANK0 ] unsigned int 
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  9355 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9356 ;;  d               2   36[BANK0 ] PTR unsigned char 
  9357 ;;		 -> SetupPkt(8), 
  9358 ;;  tmp             1   35[BANK0 ] unsigned char 
  9359 ;; Return value:  Size  Location     Type
  9360 ;;                  2   29[BANK0 ] PTR void 
  9361 ;; Registers used:
  9362 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9363 ;; Tracked objects:
  9364 ;;		On entry : 0/0
  9365 ;;		On exit  : 0/0
  9366 ;;		Unchanged: 0/0
  9367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9368 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9369 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9371 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9372 ;;Total ram usage:       11 bytes
  9373 ;; Hardware stack levels used:    1
  9374 ;; Hardware stack levels required when called:   11
  9375 ;; This function calls:
  9376 ;;		Nothing
  9377 ;; This function is called by:
  9378 ;;		_USBCtrlEPService
  9379 ;; This function uses a non-reentrant model
  9380 ;;
  9381                           
  9382                           	psect	text35
  9383  005D0E                     __ptext35:
  9384                           	opt stack 0
  9385  005D0E                     _memcpy:
  9386                           	opt stack 14
  9387                           
  9388                           ;incstack = 0
  9389  005D0E  C07F  F086         	movff	memcpy@s1,memcpy@s
  9390  005D12  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  9391  005D16  C07D  F084         	movff	memcpy@d1,memcpy@d
  9392  005D1A  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  9393  005D1E  D011               	goto	l3299
  9394  005D20                     l13516:
  9395  005D20  C086  FFD9         	movff	memcpy@s,fsr2l
  9396  005D24  C087  FFDA         	movff	memcpy@s+1,fsr2h
  9397  005D28  50DF               	movf	indf2,w,c
  9398  005D2A  0100               	movlb	0	; () banked
  9399  005D2C  6F83               	movwf	memcpy@tmp& (0+255),b
  9400                           
  9401                           ; BSR set to: 0
  9402  005D2E  4B86               	infsnz	memcpy@s& (0+255),f,b
  9403  005D30  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  9404                           
  9405                           ; BSR set to: 0
  9406  005D32  C084  FFD9         	movff	memcpy@d,fsr2l
  9407  005D36  C085  FFDA         	movff	memcpy@d+1,fsr2h
  9408  005D3A  C083  FFDF         	movff	memcpy@tmp,indf2
  9409                           
  9410                           ; BSR set to: 0
  9411  005D3E  4B84               	infsnz	memcpy@d& (0+255),f,b
  9412  005D40  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  9413  005D42                     l3299:
  9414                           
  9415                           ; BSR set to: 0
  9416  005D42  0100               	movlb	0	; () banked
  9417  005D44  0781               	decf	memcpy@n& (0+255),f,b
  9418  005D46  A0D8               	btfss	status,0,c
  9419  005D48  0782               	decf	(memcpy@n+1)& (0+255),f,b
  9420  005D4A  2981               	incf	memcpy@n& (0+255),w,b
  9421  005D4C  E1E9               	bnz	l13516
  9422  005D4E  2982               	incf	(memcpy@n+1)& (0+255),w,b
  9423  005D50  B4D8               	btfsc	status,2,c
  9424  005D52  0012               	return	
  9425  005D54  D7E5               	goto	l3300
  9426  005D56                     __end_of_memcpy:
  9427                           	opt stack 0
  9428                           tosu	equ	0xFFF
  9429                           tosh	equ	0xFFE
  9430                           tosl	equ	0xFFD
  9431                           pclath	equ	0xFFA
  9432                           tblptru	equ	0xFF8
  9433                           tblptrh	equ	0xFF7
  9434                           tblptrl	equ	0xFF6
  9435                           tablat	equ	0xFF5
  9436                           prodh	equ	0xFF4
  9437                           prodl	equ	0xFF3
  9438                           intcon	equ	0xFF2
  9439                           intcon2	equ	0xFF1
  9440                           intcon3	equ	0xFF0
  9441                           postinc0	equ	0xFEE
  9442                           plusw0	equ	0xFEB
  9443                           wreg	equ	0xFE8
  9444                           postinc1	equ	0xFE6
  9445                           postdec1	equ	0xFE5
  9446                           fsr1h	equ	0xFE2
  9447                           fsr1l	equ	0xFE1
  9448                           indf2	equ	0xFDF
  9449                           postinc2	equ	0xFDE
  9450                           postdec2	equ	0xFDD
  9451                           plusw2	equ	0xFDB
  9452                           fsr2h	equ	0xFDA
  9453                           fsr2l	equ	0xFD9
  9454                           status	equ	0xFD8
  9455                           
  9456 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9457 ;; Defined at:
  9458 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9459 ;; Parameters:    Size  Location     Type
  9460 ;;		None
  9461 ;; Auto vars:     Size  Location     Type
  9462 ;;		None
  9463 ;; Return value:  Size  Location     Type
  9464 ;;                  1    wreg      void 
  9465 ;; Registers used:
  9466 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9467 ;; Tracked objects:
  9468 ;;		On entry : 0/0
  9469 ;;		On exit  : 0/0
  9470 ;;		Unchanged: 0/0
  9471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9476 ;;Total ram usage:        0 bytes
  9477 ;; Hardware stack levels used:    1
  9478 ;; Hardware stack levels required when called:   17
  9479 ;; This function calls:
  9480 ;;		_USBCheckStdRequest
  9481 ;;		_USBCtrlEPServiceComplete
  9482 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9483 ;; This function is called by:
  9484 ;;		_USBCtrlEPService
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           	psect	text36
  9489  004EAA                     __ptext36:
  9490                           	opt stack 0
  9491  004EAA                     _USBCtrlTrfSetupHandler:
  9492                           	opt stack 8
  9493                           
  9494                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9495                           
  9496                           ; BSR set to: 0
  9497                           ;incstack = 0
  9498  004EAA  0E00               	movlw	0
  9499  004EAC  0100               	movlb	0	; () banked
  9500  004EAE  6FCB               	movwf	_shortPacketStatus& (0+255),b
  9501                           
  9502                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9503  004EB0  0E00               	movlw	0
  9504  004EB2  6FC7               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9505                           
  9506                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9507  004EB4  0E00               	movlw	0
  9508  004EB6  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9509                           
  9510                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9511  004EB8  0E00               	movlw	0
  9512  004EBA  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9513                           
  9514                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9515  004EBC  0E00               	movlw	0
  9516  004EBE  0101               	movlb	1	; () banked
  9517  004EC0  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9518                           
  9519                           ;usb_device.c: 2493: controlTransferState = 0;
  9520  004EC2  0E00               	movlw	0
  9521  004EC4  0100               	movlb	0	; () banked
  9522  004EC6  6FCA               	movwf	_controlTransferState& (0+255),b
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9526  004EC8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9527  004ECC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9528  004ED0  0E7F               	movlw	127
  9529  004ED2  16DF               	andwf	indf2,f,c
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9533  004ED4  0E04               	movlw	4
  9534  004ED6  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9538  004ED8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9539  004EDC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9540  004EE0  0E7F               	movlw	127
  9541  004EE2  16DF               	andwf	indf2,f,c
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9545  004EE4  0E04               	movlw	4
  9546  004EE6  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9547                           
  9548                           ; BSR set to: 0
  9549                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9550  004EE8  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9551  004EEC  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9552  004EF0  0E7F               	movlw	127
  9553  004EF2  16DF               	andwf	indf2,f,c
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9557  004EF4  0E00               	movlw	0
  9558  004EF6  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9562  004EF8  0E00               	movlw	0
  9563  004EFA  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9564  004EFC  0E00               	movlw	0
  9565  004EFE  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9566                           
  9567                           ; BSR set to: 0
  9568                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9569  004F00  0E00               	movlw	0
  9570  004F02  0101               	movlb	1	; () banked
  9571  004F04  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9572                           
  9573                           ; BSR set to: 1
  9574                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9575  004F06  0E00               	movlw	0
  9576  004F08  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9577  004F0A  0E00               	movlw	0
  9578  004F0C  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9579                           
  9580                           ; BSR set to: 1
  9581                           ;usb_device.c: 2517: USBCheckStdRequest();
  9582  004F0E  EC67  F01B         	call	_USBCheckStdRequest	;wreg free
  9583                           
  9584                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9585  004F12  0E00               	movlw	0
  9586  004F14  0100               	movlb	0	; () banked
  9587  004F16  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9588  004F18  0E03               	movlw	3
  9589  004F1A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9590  004F1C  0E00               	movlw	0
  9591  004F1E  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9592  004F20  0E00               	movlw	0
  9593  004F22  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9594  004F24  0E00               	movlw	0
  9595  004F26  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9596  004F28  0E00               	movlw	0
  9597  004F2A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9598  004F2C  ECEE  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9599                           
  9600                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9601  004F30  EC17  F019         	call	_USBCtrlEPServiceComplete	;wreg free
  9602  004F34  0012               	return		;funcret
  9603  004F36                     __end_of_USBCtrlTrfSetupHandler:
  9604                           	opt stack 0
  9605                           tosu	equ	0xFFF
  9606                           tosh	equ	0xFFE
  9607                           tosl	equ	0xFFD
  9608                           pclath	equ	0xFFA
  9609                           tblptru	equ	0xFF8
  9610                           tblptrh	equ	0xFF7
  9611                           tblptrl	equ	0xFF6
  9612                           tablat	equ	0xFF5
  9613                           prodh	equ	0xFF4
  9614                           prodl	equ	0xFF3
  9615                           intcon	equ	0xFF2
  9616                           intcon2	equ	0xFF1
  9617                           intcon3	equ	0xFF0
  9618                           postinc0	equ	0xFEE
  9619                           plusw0	equ	0xFEB
  9620                           wreg	equ	0xFE8
  9621                           postinc1	equ	0xFE6
  9622                           postdec1	equ	0xFE5
  9623                           fsr1h	equ	0xFE2
  9624                           fsr1l	equ	0xFE1
  9625                           indf2	equ	0xFDF
  9626                           postinc2	equ	0xFDE
  9627                           postdec2	equ	0xFDD
  9628                           plusw2	equ	0xFDB
  9629                           fsr2h	equ	0xFDA
  9630                           fsr2l	equ	0xFD9
  9631                           status	equ	0xFD8
  9632                           
  9633 ;; *************** function _USBCtrlEPServiceComplete *****************
  9634 ;; Defined at:
  9635 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;		None
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;		None
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  1    wreg      void 
  9642 ;; Registers used:
  9643 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9653 ;;Total ram usage:        0 bytes
  9654 ;; Hardware stack levels used:    1
  9655 ;; Hardware stack levels required when called:   13
  9656 ;; This function calls:
  9657 ;;		_USBCtrlEPAllowDataStage
  9658 ;;		_USBCtrlEPAllowStatusStage
  9659 ;; This function is called by:
  9660 ;;		_USBCtrlTrfSetupHandler
  9661 ;; This function uses a non-reentrant model
  9662 ;;
  9663                           
  9664                           	psect	text37
  9665  00322E                     __ptext37:
  9666                           	opt stack 0
  9667  00322E                     _USBCtrlEPServiceComplete:
  9668                           	opt stack 11
  9669                           
  9670                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9671                           
  9672                           ;incstack = 0
  9673  00322E  9865               	bcf	3941,4,c	;volatile
  9674                           
  9675                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9676  003230  0100               	movlb	0	; () banked
  9677  003232  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9678  003234  D03B               	goto	l1684
  9679                           
  9680                           ; BSR set to: 0
  9681                           ;usb_device.c: 1647: {
  9682                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9683  003236  0101               	movlb	1	; () banked
  9684  003238  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9685  00323A  D00C               	goto	l1685
  9686                           
  9687                           ; BSR set to: 1
  9688                           ;usb_device.c: 1649: {
  9689                           ;usb_device.c: 1650: controlTransferState = 2;
  9690  00323C  0E02               	movlw	2
  9691  00323E  0100               	movlb	0	; () banked
  9692  003240  6FCA               	movwf	_controlTransferState& (0+255),b
  9693                           
  9694                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9695  003242  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9696  003244  B4D8               	btfsc	status,2,c
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;usb_device.c: 1662: {
  9700                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9701  003246  EC6A  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9702                           
  9703                           ;usb_device.c: 1664: }
  9704                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9705  00324A  0E00               	movlw	0
  9706  00324C  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9707                           
  9708                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9709  00324E  0E00               	movlw	0
  9710  003250  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9711                           
  9712                           ;usb_device.c: 1670: }
  9713  003252  0012               	return	
  9714  003254                     l1685:
  9715                           
  9716                           ;usb_device.c: 1671: else
  9717                           ;usb_device.c: 1672: {
  9718                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9719  003254  0100               	movlb	0	; () banked
  9720  003256  EE20 F001          	lfsr	2,1
  9721  00325A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9722  00325C  26D9               	addwf	fsr2l,f,c
  9723  00325E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9724  003260  22DA               	addwfc	fsr2h,f,c
  9725  003262  0E08               	movlw	8
  9726  003264  6EDF               	movwf	indf2,c
  9727                           
  9728                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9729  003266  EE20 F002          	lfsr	2,2
  9730  00326A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9731  00326C  26D9               	addwf	fsr2l,f,c
  9732  00326E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9733  003270  22DA               	addwfc	fsr2h,f,c
  9734  003272  0E30               	movlw	48
  9735  003274  6EDE               	movwf	postinc2,c
  9736  003276  0E04               	movlw	4
  9737  003278  6EDD               	movwf	postdec2,c
  9738                           
  9739                           ; BSR set to: 0
  9740                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9741  00327A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9742  00327E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9743  003282  0E0C               	movlw	12
  9744  003284  6EDF               	movwf	indf2,c
  9745                           
  9746                           ; BSR set to: 0
  9747                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9748  003286  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9749  00328A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9750  00328E  0E00               	movlw	0
  9751  003290  8EDB               	bsf	plusw2,7,c
  9752                           
  9753                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9754  003292  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9755  003296  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9756  00329A  0E04               	movlw	4
  9757  00329C  6EDF               	movwf	indf2,c
  9758                           
  9759                           ; BSR set to: 0
  9760                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9761  00329E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9762  0032A2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9763  0032A6  0E00               	movlw	0
  9764  0032A8  8EDB               	bsf	plusw2,7,c
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;usb_device.c: 1683: }
  9768                           ;usb_device.c: 1684: }
  9769  0032AA  0012               	return	
  9770  0032AC                     l1684:
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;usb_device.c: 1685: else
  9774                           ;usb_device.c: 1686: {
  9775                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9776  0032AC  0104               	movlb	4	; () banked
  9777  0032AE  AF30               	btfss	48,7,b	;volatile
  9778  0032B0  D012               	goto	l1689
  9779                           
  9780                           ; BSR set to: 4
  9781                           ;usb_device.c: 1688: {
  9782                           ;usb_device.c: 1689: controlTransferState = 1;
  9783  0032B2  0E01               	movlw	1
  9784  0032B4  0100               	movlb	0	; () banked
  9785  0032B6  6FCA               	movwf	_controlTransferState& (0+255),b
  9786                           
  9787                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9788  0032B8  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9789  0032BA  B4D8               	btfsc	status,2,c
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;usb_device.c: 1704: {
  9793                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9794  0032BC  EC6A  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9795                           
  9796                           ;usb_device.c: 1706: }
  9797                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9798  0032C0  0E00               	movlw	0
  9799  0032C2  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9800                           
  9801                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9802  0032C4  0E00               	movlw	0
  9803  0032C6  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9804                           
  9805                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9806  0032C8  0100               	movlb	0	; () banked
  9807  0032CA  51C7               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9808  0032CC  A4D8               	btfss	status,2,c
  9809  0032CE  0012               	return	
  9810                           
  9811                           ; BSR set to: 0
  9812                           ;usb_device.c: 1731: {
  9813                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9814  0032D0  EC55  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9815                           
  9816                           ;usb_device.c: 1733: }
  9817                           ;usb_device.c: 1734: }
  9818  0032D4  0012               	return	
  9819  0032D6                     l1689:
  9820                           
  9821                           ;usb_device.c: 1735: else
  9822                           ;usb_device.c: 1736: {
  9823                           ;usb_device.c: 1747: controlTransferState = 2;
  9824  0032D6  0E02               	movlw	2
  9825  0032D8  0100               	movlb	0	; () banked
  9826  0032DA  6FCA               	movwf	_controlTransferState& (0+255),b
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9830  0032DC  EE20 F001          	lfsr	2,1
  9831  0032E0  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9832  0032E2  26D9               	addwf	fsr2l,f,c
  9833  0032E4  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9834  0032E6  22DA               	addwfc	fsr2h,f,c
  9835  0032E8  0E08               	movlw	8
  9836  0032EA  6EDF               	movwf	indf2,c
  9837                           
  9838                           ; BSR set to: 0
  9839                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9840  0032EC  EE20 F002          	lfsr	2,2
  9841  0032F0  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9842  0032F2  26D9               	addwf	fsr2l,f,c
  9843  0032F4  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9844  0032F6  22DA               	addwfc	fsr2h,f,c
  9845  0032F8  0E30               	movlw	48
  9846  0032FA  6EDE               	movwf	postinc2,c
  9847  0032FC  0E04               	movlw	4
  9848  0032FE  6EDD               	movwf	postdec2,c
  9849                           
  9850                           ; BSR set to: 0
  9851                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9852  003300  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9853  003304  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9854  003308  0E04               	movlw	4
  9855  00330A  6EDF               	movwf	indf2,c
  9856                           
  9857                           ; BSR set to: 0
  9858                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9859  00330C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9860  003310  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9861  003314  0E00               	movlw	0
  9862  003316  8EDB               	bsf	plusw2,7,c
  9863                           
  9864                           ; BSR set to: 0
  9865                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9866  003318  0E00               	movlw	0
  9867  00331A  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9871  00331C  0E00               	movlw	0
  9872  00331E  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9873                           
  9874                           ; BSR set to: 0
  9875                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9876  003320  51C7               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9877  003322  A4D8               	btfss	status,2,c
  9878  003324  0012               	return	
  9879                           
  9880                           ; BSR set to: 0
  9881                           ;usb_device.c: 1759: {
  9882                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9883  003326  EC55  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9884  00332A  0012               	return	
  9885  00332C                     __end_of_USBCtrlEPServiceComplete:
  9886                           	opt stack 0
  9887                           tosu	equ	0xFFF
  9888                           tosh	equ	0xFFE
  9889                           tosl	equ	0xFFD
  9890                           pclath	equ	0xFFA
  9891                           tblptru	equ	0xFF8
  9892                           tblptrh	equ	0xFF7
  9893                           tblptrl	equ	0xFF6
  9894                           tablat	equ	0xFF5
  9895                           prodh	equ	0xFF4
  9896                           prodl	equ	0xFF3
  9897                           intcon	equ	0xFF2
  9898                           intcon2	equ	0xFF1
  9899                           intcon3	equ	0xFF0
  9900                           postinc0	equ	0xFEE
  9901                           plusw0	equ	0xFEB
  9902                           wreg	equ	0xFE8
  9903                           postinc1	equ	0xFE6
  9904                           postdec1	equ	0xFE5
  9905                           fsr1h	equ	0xFE2
  9906                           fsr1l	equ	0xFE1
  9907                           indf2	equ	0xFDF
  9908                           postinc2	equ	0xFDE
  9909                           postdec2	equ	0xFDD
  9910                           plusw2	equ	0xFDB
  9911                           fsr2h	equ	0xFDA
  9912                           fsr2l	equ	0xFD9
  9913                           status	equ	0xFD8
  9914                           
  9915 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9916 ;; Defined at:
  9917 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9918 ;; Parameters:    Size  Location     Type
  9919 ;;		None
  9920 ;; Auto vars:     Size  Location     Type
  9921 ;;		None
  9922 ;; Return value:  Size  Location     Type
  9923 ;;                  1    wreg      void 
  9924 ;; Registers used:
  9925 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9926 ;; Tracked objects:
  9927 ;;		On entry : 0/0
  9928 ;;		On exit  : 0/0
  9929 ;;		Unchanged: 0/0
  9930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9935 ;;Total ram usage:        0 bytes
  9936 ;; Hardware stack levels used:    1
  9937 ;; Hardware stack levels required when called:   12
  9938 ;; This function calls:
  9939 ;;		_USBCtrlTrfTxService
  9940 ;; This function is called by:
  9941 ;;		_USBCtrlEPServiceComplete
  9942 ;; This function uses a non-reentrant model
  9943 ;;
  9944                           
  9945                           	psect	text38
  9946  0048D4                     __ptext38:
  9947                           	opt stack 0
  9948  0048D4                     _USBCtrlEPAllowDataStage:
  9949                           	opt stack 11
  9950                           
  9951                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9952                           
  9953                           ;incstack = 0
  9954  0048D4  0E00               	movlw	0
  9955  0048D6  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9956                           
  9957                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9958  0048D8  0E00               	movlw	0
  9959  0048DA  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9960                           
  9961                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9962  0048DC  0E02               	movlw	2
  9963  0048DE  0100               	movlb	0	; () banked
  9964  0048E0  19CA               	xorwf	_controlTransferState& (0+255),w,b
  9965  0048E2  A4D8               	btfss	status,2,c
  9966  0048E4  D01F               	goto	l1673
  9967                           
  9968                           ; BSR set to: 0
  9969                           ;usb_device.c: 1512: {
  9970                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9971  0048E6  EE20 F001          	lfsr	2,1
  9972  0048EA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9973  0048EC  26D9               	addwf	fsr2l,f,c
  9974  0048EE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9975  0048F0  22DA               	addwfc	fsr2h,f,c
  9976  0048F2  0E08               	movlw	8
  9977  0048F4  6EDF               	movwf	indf2,c
  9978                           
  9979                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9980  0048F6  EE20 F002          	lfsr	2,2
  9981  0048FA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9982  0048FC  26D9               	addwf	fsr2l,f,c
  9983  0048FE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9984  004900  22DA               	addwfc	fsr2h,f,c
  9985  004902  0E38               	movlw	56
  9986  004904  6EDE               	movwf	postinc2,c
  9987  004906  0E04               	movlw	4
  9988  004908  6EDD               	movwf	postdec2,c
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9992  00490A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9993  00490E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9994  004912  0E48               	movlw	72
  9995  004914  6EDF               	movwf	indf2,c
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9999  004916  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10000  00491A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10001  00491E  0E00               	movlw	0
 10002  004920  8EDB               	bsf	plusw2,7,c
 10003                           
 10004                           ;usb_device.c: 1518: }
 10005  004922  0012               	return	
 10006  004924                     l1673:
 10007                           
 10008                           ; BSR set to: 0
 10009                           ;usb_device.c: 1519: else
 10010                           ;usb_device.c: 1520: {
 10011                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 10012                           
 10013                           ; BSR set to: 0
 10014  004924  51B4               	movf	(_inPipes+4)& (0+255),w,b
 10015  004926  0104               	movlb	4	; () banked
 10016  004928  5D36               	subwf	54,w,b	;volatile
 10017  00492A  0100               	movlb	0	; () banked
 10018  00492C  51B5               	movf	(_inPipes+5)& (0+255),w,b
 10019  00492E  0104               	movlb	4	; () banked
 10020  004930  5937               	subwfb	55,w,b	;volatile
 10021  004932  B0D8               	btfsc	status,0,c
 10022  004934  D004               	goto	l1675
 10023                           
 10024                           ; BSR set to: 4
 10025                           ;usb_device.c: 1524: {
 10026                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
 10027  004936  C436 F0B4          	movff	1078,_inPipes+4	;volatile
 10028  00493A  C437 F0B5          	movff	1079,_inPipes+5	;volatile
 10029  00493E                     l1675:
 10030                           
 10031                           ; BSR set to: 4
 10032                           ;usb_device.c: 1526: }
 10033                           ;usb_device.c: 1527: USBCtrlTrfTxService();
 10034                           
 10035                           ; BSR set to: 4
 10036  00493E  EC47  F01C         	call	_USBCtrlTrfTxService	;wreg free
 10037                           
 10038                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 10039  004942  0100               	movlb	0	; () banked
 10040  004944  EE20 F002          	lfsr	2,2
 10041  004948  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 10042  00494A  26D9               	addwf	fsr2l,f,c
 10043  00494C  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 10044  00494E  22DA               	addwfc	fsr2h,f,c
 10045  004950  0E38               	movlw	56
 10046  004952  6EDE               	movwf	postinc2,c
 10047  004954  0E04               	movlw	4
 10048  004956  6EDD               	movwf	postdec2,c
 10049                           
 10050                           ; BSR set to: 0
 10051                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10052  004958  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 10053  00495C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10054  004960  0E48               	movlw	72
 10055  004962  6EDF               	movwf	indf2,c
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10059  004964  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 10060  004968  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10061  00496C  0E00               	movlw	0
 10062  00496E  8EDB               	bsf	plusw2,7,c
 10063  004970  0012               	return	
 10064  004972                     __end_of_USBCtrlEPAllowDataStage:
 10065                           	opt stack 0
 10066                           tosu	equ	0xFFF
 10067                           tosh	equ	0xFFE
 10068                           tosl	equ	0xFFD
 10069                           pclath	equ	0xFFA
 10070                           tblptru	equ	0xFF8
 10071                           tblptrh	equ	0xFF7
 10072                           tblptrl	equ	0xFF6
 10073                           tablat	equ	0xFF5
 10074                           prodh	equ	0xFF4
 10075                           prodl	equ	0xFF3
 10076                           intcon	equ	0xFF2
 10077                           intcon2	equ	0xFF1
 10078                           intcon3	equ	0xFF0
 10079                           postinc0	equ	0xFEE
 10080                           plusw0	equ	0xFEB
 10081                           wreg	equ	0xFE8
 10082                           postinc1	equ	0xFE6
 10083                           postdec1	equ	0xFE5
 10084                           fsr1h	equ	0xFE2
 10085                           fsr1l	equ	0xFE1
 10086                           indf2	equ	0xFDF
 10087                           postinc2	equ	0xFDE
 10088                           postdec2	equ	0xFDD
 10089                           plusw2	equ	0xFDB
 10090                           fsr2h	equ	0xFDA
 10091                           fsr2l	equ	0xFD9
 10092                           status	equ	0xFD8
 10093                           
 10094 ;; *************** function _USBCheckStdRequest *****************
 10095 ;; Defined at:
 10096 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;		None
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;		None
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  1    wreg      void 
 10103 ;; Registers used:
 10104 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10114 ;;Total ram usage:        0 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:   16
 10117 ;; This function calls:
 10118 ;;		_USBStdFeatureReqHandler
 10119 ;;		_USBStdGetDscHandler
 10120 ;;		_USBStdGetStatusHandler
 10121 ;;		_USBStdSetCfgHandler
 10122 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10123 ;; This function is called by:
 10124 ;;		_USBCtrlTrfSetupHandler
 10125 ;; This function uses a non-reentrant model
 10126 ;;
 10127                           
 10128                           	psect	text39
 10129  0036CE                     __ptext39:
 10130                           	opt stack 0
 10131  0036CE                     _USBCheckStdRequest:
 10132                           	opt stack 8
 10133                           
 10134                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
 10135                           
 10136                           ; BSR set to: 0
 10137                           ;incstack = 0
 10138  0036CE  0104               	movlb	4	; () banked
 10139  0036D0  3930               	swapf	48,w,b	;volatile
 10140  0036D2  32E8               	rrcf	wreg,f,c
 10141  0036D4  0B03               	andlw	3
 10142  0036D6  0900               	iorlw	0
 10143  0036D8  A4D8               	btfss	status,2,c
 10144  0036DA  0012               	return	
 10145  0036DC  D048               	goto	l1808
 10146  0036DE                     l1809:
 10147                           
 10148                           ; BSR set to: 4
 10149                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 10150  0036DE  0100               	movlb	0	; () banked
 10151  0036E0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10152                           
 10153                           ; BSR set to: 0
 10154                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
 10155  0036E2  0E08               	movlw	8
 10156  0036E4  6FCC               	movwf	_USBDeviceState& (0+255),b
 10157                           
 10158                           ;usb_device.c: 2713: break;
 10159  0036E6  0012               	return	
 10160  0036E8                     
 10161                           ;usb_device.c: 2715: USBStdGetDscHandler();
 10162                           
 10163                           ; BSR set to: 0
 10164  0036E8  EC5D  F017         	call	_USBStdGetDscHandler	;wreg free
 10165                           
 10166                           ;usb_device.c: 2716: break;
 10167  0036EC  0012               	return	
 10168  0036EE                     
 10169                           ;usb_device.c: 2718: USBStdSetCfgHandler();
 10170  0036EE  EC81  F01A         	call	_USBStdSetCfgHandler	;wreg free
 10171                           
 10172                           ;usb_device.c: 2719: break;
 10173  0036F2  0012               	return	
 10174  0036F4                     
 10175                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 10176  0036F4  0ED5               	movlw	low _USBActiveConfiguration
 10177  0036F6  0100               	movlb	0	; () banked
 10178  0036F8  6FB0               	movwf	_inPipes& (0+255),b
 10179  0036FA  0E00               	movlw	high _USBActiveConfiguration
 10180  0036FC  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10181                           
 10182                           ; BSR set to: 0
 10183                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10184  0036FE  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10185                           
 10186                           ; BSR set to: 0
 10187                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
 10188  003700  0E01               	movlw	1
 10189  003702  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10190                           
 10191                           ; BSR set to: 0
 10192                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
 10193  003704  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10194                           
 10195                           ;usb_device.c: 2725: break;
 10196  003706  0012               	return	
 10197  003708                     
 10198                           ;usb_device.c: 2727: USBStdGetStatusHandler();
 10199                           
 10200                           ; BSR set to: 0
 10201  003708  EC6E  F021         	call	_USBStdGetStatusHandler	;wreg free
 10202                           
 10203                           ;usb_device.c: 2728: break;
 10204  00370C  0012               	return	
 10205  00370E                     
 10206                           ;usb_device.c: 2730: case 3:
 10207                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
 10208  00370E  EC26  F00B         	call	_USBStdFeatureReqHandler	;wreg free
 10209                           
 10210                           ;usb_device.c: 2732: break;
 10211  003712  0012               	return	
 10212  003714                     
 10213                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 10214  003714  0104               	movlb	4	; () banked
 10215  003716  5134               	movf	52,w,b	;volatile
 10216  003718  0D01               	mullw	1
 10217  00371A  0EF1               	movlw	low _USBAlternateInterface
 10218  00371C  24F3               	addwf	prodl,w,c
 10219  00371E  0100               	movlb	0	; () banked
 10220  003720  6FB0               	movwf	_inPipes& (0+255),b
 10221  003722  0E02               	movlw	high _USBAlternateInterface
 10222  003724  20F4               	addwfc	prodh,w,c
 10223  003726  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10227  003728  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10228                           
 10229                           ; BSR set to: 0
 10230                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
 10231  00372A  0E01               	movlw	1
 10232  00372C  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
 10236  00372E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10237                           
 10238                           ;usb_device.c: 2738: break;
 10239  003730  0012               	return	
 10240  003732                     l1818:
 10241                           
 10242                           ; BSR set to: 4
 10243                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
 10244  003732  0100               	movlb	0	; () banked
 10245  003734  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10246                           
 10247                           ; BSR set to: 0
 10248                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 10249  003736  0104               	movlb	4	; () banked
 10250  003738  5134               	movf	52,w,b	;volatile
 10251  00373A  0D01               	mullw	1
 10252  00373C  0EF1               	movlw	low _USBAlternateInterface
 10253  00373E  24F3               	addwf	prodl,w,c
 10254  003740  6ED9               	movwf	fsr2l,c
 10255  003742  0E02               	movlw	high _USBAlternateInterface
 10256  003744  20F4               	addwfc	prodh,w,c
 10257  003746  6EDA               	movwf	fsr2h,c
 10258  003748  C432 FFDF          	movff	1074,indf2	;volatile
 10259                           
 10260                           ;usb_device.c: 2742: break;
 10261  00374C  0012               	return	
 10262  00374E                     
 10263                           ; BSR set to: 4
 10264                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 10265                           
 10266                           ; BSR set to: 4
 10267  00374E  0E00               	movlw	0
 10268  003750  0100               	movlb	0	; () banked
 10269  003752  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10270  003754  0E02               	movlw	2
 10271  003756  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10272  003758  0E00               	movlw	0
 10273  00375A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10274  00375C  0E00               	movlw	0
 10275  00375E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10276  003760  0E00               	movlw	0
 10277  003762  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10278  003764  0E00               	movlw	0
 10279  003766  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10280  003768  ECEE  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10281                           
 10282                           ;usb_device.c: 2749: }
 10283                           
 10284                           ;usb_device.c: 2748: break;
 10285                           
 10286                           ;usb_device.c: 2747: default:
 10287                           
 10288                           ;usb_device.c: 2746: case 12:
 10289                           
 10290                           ;usb_device.c: 2745: break;
 10291  00376C  0012               	return	
 10292  00376E                     l1808:
 10293  00376E  0104               	movlb	4	; () banked
 10294  003770  5131               	movf	49,w,b	;volatile
 10295                           
 10296                           ; Switch size 1, requested type "space"
 10297                           ; Number of cases is 11, Range of values is 0 to 12
 10298                           ; switch strategies available:
 10299                           ; Name         Instructions Cycles
 10300                           ; simple_byte           34    18 (average)
 10301                           ;	Chosen strategy is simple_byte
 10302  003772  0A00               	xorlw	0	; case 0
 10303  003774  B4D8               	btfsc	status,2,c
 10304  003776  D7C8               	goto	l1814
 10305  003778  0A01               	xorlw	1	; case 1
 10306  00377A  B4D8               	btfsc	status,2,c
 10307  00377C  D7C8               	goto	l1815
 10308  00377E  0A02               	xorlw	2	; case 3
 10309  003780  B4D8               	btfsc	status,2,c
 10310  003782  D7C5               	goto	l1815
 10311  003784  0A06               	xorlw	6	; case 5
 10312  003786  B4D8               	btfsc	status,2,c
 10313  003788  D7AA               	goto	l1809
 10314  00378A  0A03               	xorlw	3	; case 6
 10315  00378C  B4D8               	btfsc	status,2,c
 10316  00378E  D7AC               	goto	l1811
 10317  003790  0A01               	xorlw	1	; case 7
 10318  003792  B4D8               	btfsc	status,2,c
 10319  003794  D7DC               	goto	l1819
 10320  003796  0A0F               	xorlw	15	; case 8
 10321  003798  B4D8               	btfsc	status,2,c
 10322  00379A  D7AC               	goto	l1813
 10323  00379C  0A01               	xorlw	1	; case 9
 10324  00379E  B4D8               	btfsc	status,2,c
 10325  0037A0  D7A6               	goto	l1812
 10326  0037A2  0A03               	xorlw	3	; case 10
 10327  0037A4  B4D8               	btfsc	status,2,c
 10328  0037A6  D7B6               	goto	l1817
 10329  0037A8  0A01               	xorlw	1	; case 11
 10330  0037AA  B4D8               	btfsc	status,2,c
 10331  0037AC  D7C2               	goto	l1818
 10332  0037AE  0A07               	xorlw	7	; case 12
 10333  0037B0  0012               	return	
 10334  0037B2                     __end_of_USBCheckStdRequest:
 10335                           	opt stack 0
 10336                           tosu	equ	0xFFF
 10337                           tosh	equ	0xFFE
 10338                           tosl	equ	0xFFD
 10339                           pclath	equ	0xFFA
 10340                           tblptru	equ	0xFF8
 10341                           tblptrh	equ	0xFF7
 10342                           tblptrl	equ	0xFF6
 10343                           tablat	equ	0xFF5
 10344                           prodh	equ	0xFF4
 10345                           prodl	equ	0xFF3
 10346                           intcon	equ	0xFF2
 10347                           intcon2	equ	0xFF1
 10348                           intcon3	equ	0xFF0
 10349                           postinc0	equ	0xFEE
 10350                           plusw0	equ	0xFEB
 10351                           wreg	equ	0xFE8
 10352                           postinc1	equ	0xFE6
 10353                           postdec1	equ	0xFE5
 10354                           fsr1h	equ	0xFE2
 10355                           fsr1l	equ	0xFE1
 10356                           indf2	equ	0xFDF
 10357                           postinc2	equ	0xFDE
 10358                           postdec2	equ	0xFDD
 10359                           plusw2	equ	0xFDB
 10360                           fsr2h	equ	0xFDA
 10361                           fsr2l	equ	0xFD9
 10362                           status	equ	0xFD8
 10363                           
 10364 ;; *************** function _USBStdSetCfgHandler *****************
 10365 ;; Defined at:
 10366 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;		None
 10369 ;; Auto vars:     Size  Location     Type
 10370 ;;  i               1   49[BANK0 ] unsigned char 
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  1    wreg      void 
 10373 ;; Registers used:
 10374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10375 ;; Tracked objects:
 10376 ;;		On entry : 0/0
 10377 ;;		On exit  : 0/0
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10381 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10383 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10384 ;;Total ram usage:        1 bytes
 10385 ;; Hardware stack levels used:    1
 10386 ;; Hardware stack levels required when called:   15
 10387 ;; This function calls:
 10388 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10389 ;;		_memset
 10390 ;; This function is called by:
 10391 ;;		_USBCheckStdRequest
 10392 ;; This function uses a non-reentrant model
 10393 ;;
 10394                           
 10395                           	psect	text40
 10396  003502                     __ptext40:
 10397                           	opt stack 0
 10398  003502                     _USBStdSetCfgHandler:
 10399                           	opt stack 8
 10400                           
 10401                           ;usb_device.c: 1988: uint8_t i;
 10402                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
 10403                           
 10404                           ;incstack = 0
 10405  003502  0100               	movlb	0	; () banked
 10406  003504  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10407                           
 10408                           ; BSR set to: 0
 10409                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
 10410  003506  0E27               	movlw	39
 10411  003508  6F7D               	movwf	memset@p1& (0+255),b
 10412  00350A  0E0F               	movlw	15
 10413  00350C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10414  00350E  0E00               	movlw	0
 10415  003510  6F80               	movwf	(memset@c+1)& (0+255),b
 10416  003512  0E00               	movlw	0
 10417  003514  6F7F               	movwf	memset@c& (0+255),b
 10418  003516  0E00               	movlw	0
 10419  003518  6F82               	movwf	(memset@n+1)& (0+255),b
 10420  00351A  0E02               	movlw	2
 10421  00351C  6F81               	movwf	memset@n& (0+255),b
 10422  00351E  EC4B  F031         	call	_memset	;wreg free
 10423                           
 10424                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 10425  003522  0E00               	movlw	0
 10426  003524  0100               	movlb	0	; () banked
 10427  003526  6F7D               	movwf	memset@p1& (0+255),b
 10428  003528  0E04               	movlw	4
 10429  00352A  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10430  00352C  0E00               	movlw	0
 10431  00352E  6F80               	movwf	(memset@c+1)& (0+255),b
 10432  003530  0E00               	movlw	0
 10433  003532  6F7F               	movwf	memset@c& (0+255),b
 10434  003534  0E00               	movlw	0
 10435  003536  6F82               	movwf	(memset@n+1)& (0+255),b
 10436  003538  0E30               	movlw	48
 10437  00353A  6F81               	movwf	memset@n& (0+255),b
 10438  00353C  EC4B  F031         	call	_memset	;wreg free
 10439                           
 10440                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10441  003540  8C65               	bsf	3941,6,c	;volatile
 10442                           
 10443                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
 10444  003542  0E00               	movlw	0
 10445  003544  0100               	movlb	0	; () banked
 10446  003546  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10447  003548                     l12864:
 10448                           
 10449                           ; BSR set to: 0
 10450  003548  0E02               	movlw	2
 10451  00354A  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10452  00354C  D001               	goto	l1725
 10453  00354E  D016               	goto	u11540
 10454  003550                     l1725:
 10455                           
 10456                           ; BSR set to: 0
 10457                           ;usb_device.c: 2006: {
 10458                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10459                           
 10460                           ; BSR set to: 0
 10461  003550  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10462  003552  0D01               	mullw	1
 10463  003554  0ED1               	movlw	low _ep_data_in
 10464  003556  24F3               	addwf	prodl,w,c
 10465  003558  6ED9               	movwf	fsr2l,c
 10466  00355A  0E02               	movlw	high _ep_data_in
 10467  00355C  20F4               	addwfc	prodh,w,c
 10468  00355E  6EDA               	movwf	fsr2h,c
 10469  003560  0E00               	movlw	0
 10470  003562  6EDF               	movwf	indf2,c
 10471                           
 10472                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10473  003564  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10474  003566  0D01               	mullw	1
 10475  003568  0ECE               	movlw	low _ep_data_out
 10476  00356A  24F3               	addwf	prodl,w,c
 10477  00356C  6ED9               	movwf	fsr2l,c
 10478  00356E  0E02               	movlw	high _ep_data_out
 10479  003570  20F4               	addwfc	prodh,w,c
 10480  003572  6EDA               	movwf	fsr2h,c
 10481  003574  0E00               	movlw	0
 10482  003576  6EDF               	movwf	indf2,c
 10483                           
 10484                           ; BSR set to: 0
 10485  003578  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10486  00357A  D7E6               	goto	l12864
 10487  00357C                     u11540:
 10488                           
 10489                           ; BSR set to: 0
 10490                           ;usb_device.c: 2009: }
 10491                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10492                           
 10493                           ; BSR set to: 0
 10494  00357C  0EF1               	movlw	low _USBAlternateInterface
 10495  00357E  6F7D               	movwf	memset@p1& (0+255),b
 10496  003580  0E02               	movlw	high _USBAlternateInterface
 10497  003582  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10498  003584  0E00               	movlw	0
 10499  003586  6F80               	movwf	(memset@c+1)& (0+255),b
 10500  003588  0E00               	movlw	0
 10501  00358A  6F7F               	movwf	memset@c& (0+255),b
 10502  00358C  0E00               	movlw	0
 10503  00358E  6F82               	movwf	(memset@n+1)& (0+255),b
 10504  003590  0E02               	movlw	2
 10505  003592  6F81               	movwf	memset@n& (0+255),b
 10506  003594  EC4B  F031         	call	_memset	;wreg free
 10507                           
 10508                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10509  003598  9C65               	bcf	3941,6,c	;volatile
 10510                           
 10511                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10512  00359A  0E08               	movlw	8
 10513  00359C  0100               	movlb	0	; () banked
 10514  00359E  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10515  0035A0  0E04               	movlw	4
 10516  0035A2  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10517                           
 10518                           ; BSR set to: 0
 10519                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10520  0035A4  0E00               	movlw	0
 10521  0035A6  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10522  0035A8  0E04               	movlw	4
 10523  0035AA  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10524                           
 10525                           ; BSR set to: 0
 10526                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10527  0035AC  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10528  0035B0  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10529                           
 10530                           ; BSR set to: 0
 10531                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10532  0035B4  C432 F0D5          	movff	1074,_USBActiveConfiguration	;volatile
 10533                           
 10534                           ; BSR set to: 0
 10535                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10536  0035B8  51D5               	movf	_USBActiveConfiguration& (0+255),w,b
 10537  0035BA  A4D8               	btfss	status,2,c
 10538  0035BC  D003               	goto	l1727
 10539                           
 10540                           ; BSR set to: 0
 10541                           ;usb_device.c: 2028: {
 10542                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10543  0035BE  0E10               	movlw	16
 10544  0035C0  6FCC               	movwf	_USBDeviceState& (0+255),b
 10545                           
 10546                           ;usb_device.c: 2031: }
 10547  0035C2  0012               	return	
 10548  0035C4                     l1727:
 10549                           
 10550                           ; BSR set to: 0
 10551                           ;usb_device.c: 2032: else
 10552                           ;usb_device.c: 2033: {
 10553                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10554                           
 10555                           ; BSR set to: 0
 10556  0035C4  0E00               	movlw	0
 10557  0035C6  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10558  0035C8  0E01               	movlw	1
 10559  0035CA  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10560  0035CC  0ED5               	movlw	low _USBActiveConfiguration
 10561  0035CE  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10562  0035D0  0E00               	movlw	high _USBActiveConfiguration
 10563  0035D2  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10564  0035D4  0E00               	movlw	0
 10565  0035D6  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10566  0035D8  0E01               	movlw	1
 10567  0035DA  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10568  0035DC  ECEE  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10569                           
 10570                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10571  0035E0  0E20               	movlw	32
 10572  0035E2  0100               	movlb	0	; () banked
 10573  0035E4  6FCC               	movwf	_USBDeviceState& (0+255),b
 10574  0035E6  0012               	return	
 10575  0035E8                     __end_of_USBStdSetCfgHandler:
 10576                           	opt stack 0
 10577                           tosu	equ	0xFFF
 10578                           tosh	equ	0xFFE
 10579                           tosl	equ	0xFFD
 10580                           pclath	equ	0xFFA
 10581                           tblptru	equ	0xFF8
 10582                           tblptrh	equ	0xFF7
 10583                           tblptrl	equ	0xFF6
 10584                           tablat	equ	0xFF5
 10585                           prodh	equ	0xFF4
 10586                           prodl	equ	0xFF3
 10587                           intcon	equ	0xFF2
 10588                           intcon2	equ	0xFF1
 10589                           intcon3	equ	0xFF0
 10590                           postinc0	equ	0xFEE
 10591                           plusw0	equ	0xFEB
 10592                           wreg	equ	0xFE8
 10593                           postinc1	equ	0xFE6
 10594                           postdec1	equ	0xFE5
 10595                           fsr1h	equ	0xFE2
 10596                           fsr1l	equ	0xFE1
 10597                           indf2	equ	0xFDF
 10598                           postinc2	equ	0xFDE
 10599                           postdec2	equ	0xFDD
 10600                           plusw2	equ	0xFDB
 10601                           fsr2h	equ	0xFDA
 10602                           fsr2l	equ	0xFD9
 10603                           status	equ	0xFD8
 10604                           
 10605 ;; *************** function _USBStdGetStatusHandler *****************
 10606 ;; Defined at:
 10607 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10608 ;; Parameters:    Size  Location     Type
 10609 ;;		None
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10612 ;;		 -> NULL(0), BDT(48), 
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  1    wreg      void 
 10615 ;; Registers used:
 10616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10617 ;; Tracked objects:
 10618 ;;		On entry : 0/0
 10619 ;;		On exit  : 0/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10623 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10624 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10625 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10626 ;;Total ram usage:        3 bytes
 10627 ;; Hardware stack levels used:    1
 10628 ;; Hardware stack levels required when called:   11
 10629 ;; This function calls:
 10630 ;;		Nothing
 10631 ;; This function is called by:
 10632 ;;		_USBCheckStdRequest
 10633 ;; This function uses a non-reentrant model
 10634 ;;
 10635                           
 10636                           	psect	text41
 10637  0042DC                     __ptext41:
 10638                           	opt stack 0
 10639  0042DC                     _USBStdGetStatusHandler:
 10640                           	opt stack 12
 10641                           
 10642                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;incstack = 0
 10646  0042DC  0E00               	movlw	0
 10647  0042DE  0104               	movlb	4	; () banked
 10648  0042E0  6F38               	movwf	56,b	;volatile
 10649                           
 10650                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10651  0042E2  0E00               	movlw	0
 10652  0042E4  6F39               	movwf	57,b	;volatile
 10653                           
 10654                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10655  0042E6  D03D               	goto	l1746
 10656  0042E8                     l1747:
 10657                           
 10658                           ; BSR set to: 4
 10659                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10660  0042E8  0100               	movlb	0	; () banked
 10661  0042EA  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10662                           
 10663                           ;usb_device.c: 2163: }
 10664                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10665                           
 10666                           ; BSR set to: 4
 10667                           
 10668                           ; BSR set to: 0
 10669                           ;usb_device.c: 2161: {
 10670                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10671                           
 10672                           ;usb_device.c: 2160: if(0 == 1)
 10673  0042EC  0101               	movlb	1	; () banked
 10674  0042EE  05E3               	decf	_RemoteWakeup& (0+255),w,b
 10675  0042F0  A4D8               	btfss	status,2,c
 10676  0042F2  D042               	goto	l1750
 10677                           
 10678                           ; BSR set to: 1
 10679                           ;usb_device.c: 2166: {
 10680                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10681  0042F4  0104               	movlb	4	; () banked
 10682  0042F6  8338               	bsf	56,1,b	;volatile
 10683                           
 10684                           ; BSR set to: 4
 10685                           ;usb_device.c: 2168: }
 10686                           ;usb_device.c: 2169: break;
 10687  0042F8  D03F               	goto	l1750
 10688  0042FA                     l1751:
 10689                           
 10690                           ; BSR set to: 4
 10691                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10692  0042FA  0100               	movlb	0	; () banked
 10693  0042FC  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10694                           
 10695                           ;usb_device.c: 2172: break;
 10696  0042FE  D03C               	goto	l1750
 10697  004300                     l1752:
 10698                           
 10699                           ; BSR set to: 4
 10700                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10701  004300  0100               	movlb	0	; () banked
 10702  004302  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10703                           
 10704                           ;usb_device.c: 2178: {
 10705                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10706                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10707  004304  0104               	movlb	4	; () banked
 10708  004306  BF34               	btfsc	52,7,b	;volatile
 10709  004308  D00B               	goto	l1753
 10710                           
 10711                           ; BSR set to: 4
 10712                           ;usb_device.c: 2182: {
 10713                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10714  00430A  5134               	movf	52,w,b	;volatile
 10715  00430C  0B0F               	andlw	15
 10716  00430E  0100               	movlb	0	; () banked
 10717  004310  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10718  004312  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10719  004314  0D02               	mullw	2
 10720  004316  0E06               	movlw	low _pBDTEntryOut
 10721  004318  24F3               	addwf	prodl,w,c
 10722  00431A  6ED9               	movwf	fsr2l,c
 10723  00431C  0E03               	movlw	high _pBDTEntryOut
 10724  00431E  D00B               	goto	L4
 10725  004320                     l1753:
 10726                           
 10727                           ;usb_device.c: 2185: else
 10728                           ;usb_device.c: 2186: {
 10729                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10730                           
 10731                           ; BSR set to: 0
 10732  004320  0104               	movlb	4	; () banked
 10733  004322  5134               	movf	52,w,b	;volatile
 10734  004324  0B0F               	andlw	15
 10735  004326  0100               	movlb	0	; () banked
 10736  004328  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10737  00432A  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10738  00432C  0D02               	mullw	2
 10739  00432E  0EB6               	movlw	low _pBDTEntryIn
 10740  004330  24F3               	addwf	prodl,w,c
 10741  004332  6ED9               	movwf	fsr2l,c
 10742  004334  0E00               	movlw	high _pBDTEntryIn
 10743  004336                     L4:
 10744  004336  20F4               	addwfc	prodh,w,c
 10745  004338  6EDA               	movwf	fsr2h,c
 10746  00433A  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10747  00433E  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;usb_device.c: 2188: }
 10751                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10752                           
 10753                           ; BSR set to: 0
 10754  004342  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10755  004346  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10756  00434A  AEDF               	btfss	indf2,7,c
 10757  00434C  D015               	goto	l1750
 10758                           
 10759                           ; BSR set to: 0
 10760  00434E  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10761  004352  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10762  004356  A4DF               	btfss	indf2,2,c
 10763  004358  D00F               	goto	l1750
 10764                           
 10765                           ; BSR set to: 0
 10766                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10767  00435A  0E01               	movlw	1
 10768  00435C  0104               	movlb	4	; () banked
 10769  00435E  6F38               	movwf	56,b	;volatile
 10770                           
 10771                           ; BSR set to: 4
 10772                           ;usb_device.c: 2193: }
 10773                           ;usb_device.c: 2194: }
 10774                           
 10775                           ; BSR set to: 4
 10776                           ;usb_device.c: 2192: break;
 10777  004360  D00B               	goto	l1750
 10778  004362                     l1746:
 10779                           
 10780                           ; BSR set to: 4
 10781                           
 10782                           ; BSR set to: 4
 10783  004362  5130               	movf	48,w,b	;volatile
 10784  004364  0B1F               	andlw	31
 10785                           
 10786                           ; Switch size 1, requested type "space"
 10787                           ; Number of cases is 3, Range of values is 0 to 2
 10788                           ; switch strategies available:
 10789                           ; Name         Instructions Cycles
 10790                           ; simple_byte           10     6 (average)
 10791                           ;	Chosen strategy is simple_byte
 10792  004366  0A00               	xorlw	0	; case 0
 10793  004368  B4D8               	btfsc	status,2,c
 10794  00436A  D7BE               	goto	l1747
 10795  00436C  0A01               	xorlw	1	; case 1
 10796  00436E  B4D8               	btfsc	status,2,c
 10797  004370  D7C4               	goto	l1751
 10798  004372  0A03               	xorlw	3	; case 2
 10799  004374  B4D8               	btfsc	status,2,c
 10800  004376  D7C4               	goto	l1752
 10801  004378                     l1750:
 10802                           
 10803                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10804  004378  0100               	movlb	0	; () banked
 10805  00437A  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10806  00437C  0012               	return	
 10807                           
 10808                           ; BSR set to: 0
 10809                           ;usb_device.c: 2197: {
 10810                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10811  00437E  0E38               	movlw	56
 10812  004380  6FB0               	movwf	_inPipes& (0+255),b
 10813  004382  0E04               	movlw	4
 10814  004384  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10815                           
 10816                           ; BSR set to: 0
 10817                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10818  004386  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10819                           
 10820                           ; BSR set to: 0
 10821                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10822  004388  0E02               	movlw	2
 10823  00438A  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10824  00438C  0012               	return	
 10825  00438E                     __end_of_USBStdGetStatusHandler:
 10826                           	opt stack 0
 10827                           tosu	equ	0xFFF
 10828                           tosh	equ	0xFFE
 10829                           tosl	equ	0xFFD
 10830                           pclath	equ	0xFFA
 10831                           tblptru	equ	0xFF8
 10832                           tblptrh	equ	0xFF7
 10833                           tblptrl	equ	0xFF6
 10834                           tablat	equ	0xFF5
 10835                           prodh	equ	0xFF4
 10836                           prodl	equ	0xFF3
 10837                           intcon	equ	0xFF2
 10838                           intcon2	equ	0xFF1
 10839                           intcon3	equ	0xFF0
 10840                           postinc0	equ	0xFEE
 10841                           plusw0	equ	0xFEB
 10842                           wreg	equ	0xFE8
 10843                           postinc1	equ	0xFE6
 10844                           postdec1	equ	0xFE5
 10845                           fsr1h	equ	0xFE2
 10846                           fsr1l	equ	0xFE1
 10847                           indf2	equ	0xFDF
 10848                           postinc2	equ	0xFDE
 10849                           postdec2	equ	0xFDD
 10850                           plusw2	equ	0xFDB
 10851                           fsr2h	equ	0xFDA
 10852                           fsr2l	equ	0xFD9
 10853                           status	equ	0xFD8
 10854                           
 10855 ;; *************** function _USBStdGetDscHandler *****************
 10856 ;; Defined at:
 10857 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10858 ;; Parameters:    Size  Location     Type
 10859 ;;		None
 10860 ;; Auto vars:     Size  Location     Type
 10861 ;;		None
 10862 ;; Return value:  Size  Location     Type
 10863 ;;                  1    wreg      void 
 10864 ;; Registers used:
 10865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10866 ;; Tracked objects:
 10867 ;;		On entry : 0/0
 10868 ;;		On exit  : 0/0
 10869 ;;		Unchanged: 0/0
 10870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10873 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10874 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10875 ;;Total ram usage:        2 bytes
 10876 ;; Hardware stack levels used:    1
 10877 ;; Hardware stack levels required when called:   11
 10878 ;; This function calls:
 10879 ;;		Nothing
 10880 ;; This function is called by:
 10881 ;;		_USBCheckStdRequest
 10882 ;; This function uses a non-reentrant model
 10883 ;;
 10884                           
 10885                           	psect	text42
 10886  002EBA                     __ptext42:
 10887                           	opt stack 0
 10888  002EBA                     _USBStdGetDscHandler:
 10889                           	opt stack 12
 10890                           
 10891                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;incstack = 0
 10895  002EBA  0E80               	movlw	128
 10896  002EBC  0104               	movlb	4	; () banked
 10897  002EBE  1930               	xorwf	48,w,b	;volatile
 10898  002EC0  A4D8               	btfss	status,2,c
 10899  002EC2  0012               	return	
 10900                           
 10901                           ; BSR set to: 4
 10902                           ;usb_device.c: 2064: {
 10903                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10904  002EC4  0EC0               	movlw	192
 10905  002EC6  0100               	movlb	0	; () banked
 10906  002EC8  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10907                           
 10908                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10909  002ECA  D082               	goto	l1733
 10910  002ECC                     
 10911                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10912                           
 10913                           ; BSR set to: 0
 10914  002ECC  0E49               	movlw	low _device_dsc
 10915  002ECE  0100               	movlb	0	; () banked
 10916  002ED0  6FB0               	movwf	_inPipes& (0+255),b
 10917  002ED2  0EFE               	movlw	high _device_dsc
 10918  002ED4  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10919                           
 10920                           ; BSR set to: 0
 10921                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10922  002ED6  0E00               	movlw	0
 10923  002ED8  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10924  002EDA  0E12               	movlw	18
 10925  002EDC  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10926                           
 10927                           ;usb_device.c: 2076: break;
 10928  002EDE  0012               	return	
 10929  002EE0                     
 10930                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10931                           
 10932                           ; BSR set to: 0
 10933  002EE0  0104               	movlb	4	; () banked
 10934  002EE2  5132               	movf	50,w,b	;volatile
 10935  002EE4  A4D8               	btfss	status,2,c
 10936  002EE6  D040               	goto	l1737
 10937                           
 10938                           ; BSR set to: 4
 10939                           ;usb_device.c: 2082: {
 10940                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10941  002EE8  5132               	movf	50,w,b	;volatile
 10942  002EEA  0D02               	mullw	2
 10943  002EEC  0E2E               	movlw	low _USB_CD_Ptr
 10944  002EEE  24F3               	addwf	prodl,w,c
 10945  002EF0  6EF6               	movwf	tblptrl,c
 10946  002EF2  0EFC               	movlw	high _USB_CD_Ptr
 10947  002EF4  20F4               	addwfc	prodh,w,c
 10948  002EF6  6EF7               	movwf	tblptrh,c
 10949  002EF8                     	if	0	;There are less than 3 active tblptr bytes
 10950  002EF8                     	endif
 10951  002EF8  0009               	tblrd		*+
 10952  002EFA  CFF5 F0B0          	movff	tablat,_inPipes
 10953  002EFE  000A               	tblrd		*-
 10954  002F00  CFF5 F0B1          	movff	tablat,_inPipes+1
 10955                           
 10956                           ; BSR set to: 4
 10957                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10958  002F04  0E02               	movlw	2
 10959  002F06  0100               	movlb	0	; () banked
 10960  002F08  25B0               	addwf	_inPipes& (0+255),w,b
 10961  002F0A  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10962  002F0C  0E00               	movlw	0
 10963  002F0E  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10964  002F10  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10965  002F12  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10966  002F16  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10967  002F1A  6AF8               	clrf	tblptru,c
 10968  002F1C  0E0E               	movlw	(high __ramtop+-1)
 10969  002F1E  64F7               	cpfsgt	tblptrh,c
 10970  002F20  D003               	bra	u11587
 10971  002F22  0008               	tblrd		*
 10972  002F24  50F5               	movf	tablat,w,c
 10973  002F26  D005               	bra	u11580
 10974  002F28                     u11587:
 10975  002F28  CFF6 FFE9          	movff	tblptrl,fsr0l
 10976  002F2C  CFF7 FFEA          	movff	tblptrh,fsr0h
 10977  002F30  50EF               	movf	indf0,w,c
 10978  002F32                     u11580:
 10979  002F32  0100               	movlb	0	; () banked
 10980  002F34  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10981                           
 10982                           ; BSR set to: 0
 10983                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10984  002F36  0E03               	movlw	3
 10985  002F38  25B0               	addwf	_inPipes& (0+255),w,b
 10986  002F3A  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10987  002F3C  0E00               	movlw	0
 10988  002F3E  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10989  002F40  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10990  002F42  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10991  002F46  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10992  002F4A  6AF8               	clrf	tblptru,c
 10993  002F4C  0E0E               	movlw	(high __ramtop+-1)
 10994  002F4E  64F7               	cpfsgt	tblptrh,c
 10995  002F50  D003               	bra	u11597
 10996  002F52  0008               	tblrd		*
 10997  002F54  50F5               	movf	tablat,w,c
 10998  002F56  D005               	bra	u11590
 10999  002F58                     u11597:
 11000  002F58  CFF6 FFE9          	movff	tblptrl,fsr0l
 11001  002F5C  CFF7 FFEA          	movff	tblptrh,fsr0h
 11002  002F60  50EF               	movf	indf0,w,c
 11003  002F62                     u11590:
 11004  002F62  0100               	movlb	0	; () banked
 11005  002F64  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11006                           
 11007                           ;usb_device.c: 2094: }
 11008  002F66  0012               	return	
 11009  002F68                     l1737:
 11010                           
 11011                           ;usb_device.c: 2095: else
 11012                           ;usb_device.c: 2096: {
 11013                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 11014                           
 11015                           ; BSR set to: 0
 11016  002F68  0E00               	movlw	0
 11017  002F6A  0100               	movlb	0	; () banked
 11018  002F6C  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11019                           
 11020                           ; BSR set to: 0
 11021                           ;usb_device.c: 2098: }
 11022                           ;usb_device.c: 2099: break;
 11023  002F6E  0012               	return	
 11024  002F70                     
 11025                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 11026                           
 11027                           ; BSR set to: 0
 11028  002F70  0E03               	movlw	3
 11029  002F72  0104               	movlb	4	; () banked
 11030  002F74  6132               	cpfslt	50,b	;volatile
 11031  002F76  D024               	goto	l1740
 11032                           
 11033                           ; BSR set to: 4
 11034                           ;usb_device.c: 2105: {
 11035                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 11036  002F78  5132               	movf	50,w,b	;volatile
 11037  002F7A  0D02               	mullw	2
 11038  002F7C  0E1E               	movlw	low _USB_SD_Ptr
 11039  002F7E  24F3               	addwf	prodl,w,c
 11040  002F80  6EF6               	movwf	tblptrl,c
 11041  002F82  0EFC               	movlw	high _USB_SD_Ptr
 11042  002F84  20F4               	addwfc	prodh,w,c
 11043  002F86  6EF7               	movwf	tblptrh,c
 11044  002F88                     	if	0	;There are less than 3 active tblptr bytes
 11045  002F88                     	endif
 11046  002F88  0009               	tblrd		*+
 11047  002F8A  CFF5 F0B0          	movff	tablat,_inPipes
 11048  002F8E  000A               	tblrd		*-
 11049  002F90  CFF5 F0B1          	movff	tablat,_inPipes+1
 11050                           
 11051                           ; BSR set to: 4
 11052                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 11053  002F94  C0B0  FFF6         	movff	_inPipes,tblptrl
 11054  002F98  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 11055  002F9C  6AF8               	clrf	tblptru,c
 11056  002F9E  0E0E               	movlw	(high __ramtop+-1)
 11057  002FA0  64F7               	cpfsgt	tblptrh,c
 11058  002FA2  D003               	bra	u11617
 11059  002FA4  0008               	tblrd		*
 11060  002FA6  50F5               	movf	tablat,w,c
 11061  002FA8  D005               	bra	u11610
 11062  002FAA                     u11617:
 11063  002FAA  CFF6 FFE9          	movff	tblptrl,fsr0l
 11064  002FAE  CFF7 FFEA          	movff	tblptrh,fsr0h
 11065  002FB2  50EF               	movf	indf0,w,c
 11066  002FB4                     u11610:
 11067  002FB4  0100               	movlb	0	; () banked
 11068  002FB6  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 11069  002FB8  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 11070  002FBA  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11071  002FBC  6BB5               	clrf	(_inPipes+5)& (0+255),b
 11072                           
 11073                           ;usb_device.c: 2110: }
 11074  002FBE  0012               	return	
 11075  002FC0                     l1740:
 11076                           
 11077                           ;usb_device.c: 2120: else
 11078                           ;usb_device.c: 2121: {
 11079                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 11080                           
 11081                           ; BSR set to: 0
 11082  002FC0  0E00               	movlw	0
 11083  002FC2  0100               	movlb	0	; () banked
 11084  002FC4  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11085                           
 11086                           ; BSR set to: 0
 11087                           ;usb_device.c: 2123: }
 11088                           ;usb_device.c: 2124: break;
 11089  002FC6  0012               	return	
 11090  002FC8                     
 11091                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 11092                           
 11093                           ; BSR set to: 0
 11094  002FC8  0E00               	movlw	0
 11095  002FCA  0100               	movlb	0	; () banked
 11096  002FCC  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11097                           
 11098                           ; BSR set to: 0
 11099                           ;usb_device.c: 2128: }
 11100                           
 11101                           ;usb_device.c: 2127: break;
 11102  002FCE  0012               	return	
 11103  002FD0                     l1733:
 11104                           
 11105                           ; BSR set to: 0
 11106                           
 11107                           ; BSR set to: 0
 11108  002FD0  0104               	movlb	4	; () banked
 11109  002FD2  5133               	movf	51,w,b	;volatile
 11110                           
 11111                           ; Switch size 1, requested type "space"
 11112                           ; Number of cases is 3, Range of values is 1 to 3
 11113                           ; switch strategies available:
 11114                           ; Name         Instructions Cycles
 11115                           ; simple_byte           10     6 (average)
 11116                           ;	Chosen strategy is simple_byte
 11117  002FD4  0A01               	xorlw	1	; case 1
 11118  002FD6  B4D8               	btfsc	status,2,c
 11119  002FD8  D779               	goto	l1734
 11120  002FDA  0A03               	xorlw	3	; case 2
 11121  002FDC  B4D8               	btfsc	status,2,c
 11122  002FDE  D780               	goto	l1736
 11123  002FE0  0A01               	xorlw	1	; case 3
 11124  002FE2  B4D8               	btfsc	status,2,c
 11125  002FE4  D7C5               	goto	l1739
 11126  002FE6  D7F0               	goto	l1742
 11127  002FE8                     __end_of_USBStdGetDscHandler:
 11128                           	opt stack 0
 11129                           tosu	equ	0xFFF
 11130                           tosh	equ	0xFFE
 11131                           tosl	equ	0xFFD
 11132                           pclath	equ	0xFFA
 11133                           tblptru	equ	0xFF8
 11134                           tblptrh	equ	0xFF7
 11135                           tblptrl	equ	0xFF6
 11136                           tablat	equ	0xFF5
 11137                           prodh	equ	0xFF4
 11138                           prodl	equ	0xFF3
 11139                           intcon	equ	0xFF2
 11140                           intcon2	equ	0xFF1
 11141                           intcon3	equ	0xFF0
 11142                           indf0	equ	0xFEF
 11143                           postinc0	equ	0xFEE
 11144                           plusw0	equ	0xFEB
 11145                           fsr0h	equ	0xFEA
 11146                           fsr0l	equ	0xFE9
 11147                           wreg	equ	0xFE8
 11148                           postinc1	equ	0xFE6
 11149                           postdec1	equ	0xFE5
 11150                           fsr1h	equ	0xFE2
 11151                           fsr1l	equ	0xFE1
 11152                           indf2	equ	0xFDF
 11153                           postinc2	equ	0xFDE
 11154                           postdec2	equ	0xFDD
 11155                           plusw2	equ	0xFDB
 11156                           fsr2h	equ	0xFDA
 11157                           fsr2l	equ	0xFD9
 11158                           status	equ	0xFD8
 11159                           
 11160 ;; *************** function _USBStdFeatureReqHandler *****************
 11161 ;; Defined at:
 11162 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11163 ;; Parameters:    Size  Location     Type
 11164 ;;		None
 11165 ;; Auto vars:     Size  Location     Type
 11166 ;;  p               2   53[BANK0 ] PTR struct __BDT
 11167 ;;		 -> NULL(0), BDT(48), 
 11168 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 11169 ;;		 -> UEP0(1), 
 11170 ;;  current_ep_d    1   52[BANK0 ] struct .
 11171 ;; Return value:  Size  Location     Type
 11172 ;;                  1    wreg      void 
 11173 ;; Registers used:
 11174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11175 ;; Tracked objects:
 11176 ;;		On entry : 0/0
 11177 ;;		On exit  : 0/0
 11178 ;;		Unchanged: 0/0
 11179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11181 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11182 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11183 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11184 ;;Total ram usage:        6 bytes
 11185 ;; Hardware stack levels used:    1
 11186 ;; Hardware stack levels required when called:   15
 11187 ;; This function calls:
 11188 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11189 ;; This function is called by:
 11190 ;;		_USBCheckStdRequest
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           	psect	text43
 11195  00164C                     __ptext43:
 11196                           	opt stack 0
 11197  00164C                     _USBStdFeatureReqHandler:
 11198                           	opt stack 8
 11199                           
 11200                           ;usb_device.c: 2773: BDT_ENTRY *p;
 11201                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 11202                           ;usb_device.c: 2778: unsigned char* pUEP;
 11203                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 11204                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 11205                           
 11206                           ;incstack = 0
 11207  00164C  0104               	movlb	4	; () banked
 11208  00164E  0532               	decf	50,w,b	;volatile
 11209  001650  A4D8               	btfss	status,2,c
 11210  001652  D011               	goto	l1826
 11211                           
 11212                           ; BSR set to: 4
 11213  001654  5130               	movf	48,w,b	;volatile
 11214  001656  0B1F               	andlw	31
 11215  001658  0900               	iorlw	0
 11216  00165A  A4D8               	btfss	status,2,c
 11217  00165C  D00C               	goto	l1826
 11218                           
 11219                           ; BSR set to: 4
 11220                           ;usb_device.c: 2818: {
 11221                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 11222  00165E  0100               	movlb	0	; () banked
 11223  001660  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 11227  001662  0E03               	movlw	3
 11228  001664  0104               	movlb	4	; () banked
 11229  001666  1931               	xorwf	49,w,b	;volatile
 11230  001668  A4D8               	btfss	status,2,c
 11231  00166A  D002               	goto	l1825
 11232                           
 11233                           ; BSR set to: 4
 11234                           ;usb_device.c: 2821: RemoteWakeup = 1;
 11235  00166C  0E01               	movlw	1
 11236  00166E  D001               	goto	L5
 11237  001670                     l1825:
 11238                           
 11239                           ;usb_device.c: 2822: else
 11240                           ;usb_device.c: 2823: RemoteWakeup = 0;
 11241                           
 11242                           ; BSR set to: 1
 11243  001670  0E00               	movlw	0
 11244  001672                     L5:
 11245  001672  0101               	movlb	1	; () banked
 11246  001674  6FE3               	movwf	_RemoteWakeup& (0+255),b
 11247  001676                     l1826:
 11248                           
 11249                           ;usb_device.c: 2824: }
 11250                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 11251                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 11252                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 11253                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 11254                           
 11255                           ; BSR set to: 1
 11256  001676  0104               	movlb	4	; () banked
 11257  001678  5132               	movf	50,w,b	;volatile
 11258  00167A  A4D8               	btfss	status,2,c
 11259  00167C  0012               	return	
 11260                           
 11261                           ; BSR set to: 4
 11262  00167E  5130               	movf	48,w,b	;volatile
 11263  001680  0B1F               	andlw	31
 11264  001682  0A02               	xorlw	2
 11265  001684  A4D8               	btfss	status,2,c
 11266  001686  0012               	return	
 11267                           
 11268                           ; BSR set to: 4
 11269  001688  5134               	movf	52,w,b	;volatile
 11270  00168A  0B0F               	andlw	15
 11271  00168C  0900               	iorlw	0
 11272  00168E  B4D8               	btfsc	status,2,c
 11273  001690  0012               	return	
 11274                           
 11275                           ; BSR set to: 4
 11276  001692  5134               	movf	52,w,b	;volatile
 11277  001694  0B0F               	andlw	15
 11278  001696  0100               	movlb	0	; () banked
 11279  001698  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11280  00169A  0E03               	movlw	3
 11281  00169C  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 11282  00169E  0012               	return	
 11283                           
 11284                           ; BSR set to: 0
 11285  0016A0  0E20               	movlw	32
 11286  0016A2  19CC               	xorwf	_USBDeviceState& (0+255),w,b
 11287  0016A4  A4D8               	btfss	status,2,c
 11288  0016A6  0012               	return	
 11289                           
 11290                           ; BSR set to: 0
 11291                           ;usb_device.c: 2831: {
 11292                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 11293  0016A8  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11294                           
 11295                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 11296  0016AA  0104               	movlb	4	; () banked
 11297  0016AC  BF34               	btfsc	52,7,b	;volatile
 11298  0016AE  D01C               	goto	l1828
 11299                           
 11300                           ; BSR set to: 4
 11301                           ;usb_device.c: 2838: {
 11302                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11303  0016B0  5134               	movf	52,w,b	;volatile
 11304  0016B2  0B0F               	andlw	15
 11305  0016B4  0100               	movlb	0	; () banked
 11306  0016B6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11307  0016B8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11308  0016BA  0D02               	mullw	2
 11309  0016BC  0E06               	movlw	low _pBDTEntryOut
 11310  0016BE  24F3               	addwf	prodl,w,c
 11311  0016C0  6ED9               	movwf	fsr2l,c
 11312  0016C2  0E03               	movlw	high _pBDTEntryOut
 11313  0016C4  20F4               	addwfc	prodh,w,c
 11314  0016C6  6EDA               	movwf	fsr2h,c
 11315  0016C8  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11316  0016CC  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11317                           
 11318                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 11319  0016D0  0104               	movlb	4	; () banked
 11320  0016D2  5134               	movf	52,w,b	;volatile
 11321  0016D4  0B0F               	andlw	15
 11322  0016D6  0100               	movlb	0	; () banked
 11323  0016D8  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11324  0016DA  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11325  0016DC  0D01               	mullw	1
 11326  0016DE  0ECE               	movlw	low _ep_data_out
 11327  0016E0  24F3               	addwf	prodl,w,c
 11328  0016E2  6ED9               	movwf	fsr2l,c
 11329  0016E4  0E02               	movlw	high _ep_data_out
 11330  0016E6  D01C               	goto	L6
 11331  0016E8                     l1828:
 11332                           
 11333                           ;usb_device.c: 2842: else
 11334                           ;usb_device.c: 2843: {
 11335                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11336                           
 11337                           ; BSR set to: 0
 11338  0016E8  0104               	movlb	4	; () banked
 11339  0016EA  5134               	movf	52,w,b	;volatile
 11340  0016EC  0B0F               	andlw	15
 11341  0016EE  0100               	movlb	0	; () banked
 11342  0016F0  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11343  0016F2  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11344  0016F4  0D02               	mullw	2
 11345  0016F6  0EB6               	movlw	low _pBDTEntryIn
 11346  0016F8  24F3               	addwf	prodl,w,c
 11347  0016FA  6ED9               	movwf	fsr2l,c
 11348  0016FC  0E00               	movlw	high _pBDTEntryIn
 11349  0016FE  20F4               	addwfc	prodh,w,c
 11350  001700  6EDA               	movwf	fsr2h,c
 11351  001702  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11352  001706  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11353                           
 11354                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 11355  00170A  0104               	movlb	4	; () banked
 11356  00170C  5134               	movf	52,w,b	;volatile
 11357  00170E  0B0F               	andlw	15
 11358  001710  0100               	movlb	0	; () banked
 11359  001712  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11360  001714  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11361  001716  0D01               	mullw	1
 11362  001718  0ED1               	movlw	low _ep_data_in
 11363  00171A  24F3               	addwf	prodl,w,c
 11364  00171C  6ED9               	movwf	fsr2l,c
 11365  00171E  0E02               	movlw	high _ep_data_in
 11366  001720                     L6:
 11367  001720  20F4               	addwfc	prodh,w,c
 11368  001722  6EDA               	movwf	fsr2h,c
 11369  001724  50DF               	movf	indf2,w,c
 11370  001726  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;usb_device.c: 2846: }
 11374                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 11375                           
 11376                           ; BSR set to: 0
 11377  001728  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 11378  00172A  D002               	goto	l1830
 11379                           
 11380                           ; BSR set to: 0
 11381                           ;usb_device.c: 2853: {
 11382                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 11383  00172C  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 11384                           
 11385                           ;usb_device.c: 2855: }
 11386  00172E  D001               	goto	l1831
 11387  001730                     l1830:
 11388                           
 11389                           ; BSR set to: 0
 11390                           ;usb_device.c: 2856: else
 11391                           ;usb_device.c: 2857: {
 11392                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 11393                           
 11394                           ; BSR set to: 0
 11395  001730  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 11396  001732                     l1831:
 11397                           
 11398                           ; BSR set to: 0
 11399                           ;usb_device.c: 2859: }
 11400                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 11401                           
 11402                           ; BSR set to: 0
 11403  001732  0104               	movlb	4	; () banked
 11404  001734  BF34               	btfsc	52,7,b	;volatile
 11405  001736  D00B               	goto	l1832
 11406                           
 11407                           ; BSR set to: 4
 11408                           ;usb_device.c: 2865: {
 11409                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11410  001738  5134               	movf	52,w,b	;volatile
 11411  00173A  0B0F               	andlw	15
 11412  00173C  0100               	movlb	0	; () banked
 11413  00173E  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11414  001740  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11415  001742  0D02               	mullw	2
 11416  001744  0E06               	movlw	low _pBDTEntryOut
 11417  001746  24F3               	addwf	prodl,w,c
 11418  001748  6ED9               	movwf	fsr2l,c
 11419  00174A  0E03               	movlw	high _pBDTEntryOut
 11420  00174C  D00B               	goto	L7
 11421  00174E                     l1832:
 11422                           
 11423                           ;usb_device.c: 2868: else
 11424                           ;usb_device.c: 2869: {
 11425                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11426                           
 11427                           ; BSR set to: 0
 11428  00174E  0104               	movlb	4	; () banked
 11429  001750  5134               	movf	52,w,b	;volatile
 11430  001752  0B0F               	andlw	15
 11431  001754  0100               	movlb	0	; () banked
 11432  001756  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11433  001758  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11434  00175A  0D02               	mullw	2
 11435  00175C  0EB6               	movlw	low _pBDTEntryIn
 11436  00175E  24F3               	addwf	prodl,w,c
 11437  001760  6ED9               	movwf	fsr2l,c
 11438  001762  0E00               	movlw	high _pBDTEntryIn
 11439  001764                     L7:
 11440  001764  20F4               	addwfc	prodh,w,c
 11441  001766  6EDA               	movwf	fsr2h,c
 11442  001768  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11443  00176C  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11444                           
 11445                           ; BSR set to: 0
 11446                           ;usb_device.c: 2871: }
 11447                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11448                           
 11449                           ; BSR set to: 0
 11450  001770  0E03               	movlw	3
 11451  001772  0104               	movlb	4	; () banked
 11452  001774  1931               	xorwf	49,w,b	;volatile
 11453  001776  A4D8               	btfss	status,2,c
 11454  001778  D031               	goto	l1834
 11455                           
 11456                           ; BSR set to: 4
 11457                           ;usb_device.c: 2875: {
 11458                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11459  00177A  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11460  00177E  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11461  001782  0100               	movlb	0	; () banked
 11462  001784  AEDF               	btfss	indf2,7,c
 11463  001786  D01D               	goto	l1837
 11464                           
 11465                           ; BSR set to: 0
 11466                           ;usb_device.c: 2877: {
 11467                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11468  001788  0104               	movlb	4	; () banked
 11469  00178A  BF34               	btfsc	52,7,b	;volatile
 11470  00178C  D00B               	goto	l1836
 11471                           
 11472                           ; BSR set to: 4
 11473                           ;usb_device.c: 2881: {
 11474                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11475  00178E  5134               	movf	52,w,b	;volatile
 11476  001790  0B0F               	andlw	15
 11477  001792  0100               	movlb	0	; () banked
 11478  001794  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11479  001796  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11480  001798  0D01               	mullw	1
 11481  00179A  0ECE               	movlw	low _ep_data_out
 11482  00179C  24F3               	addwf	prodl,w,c
 11483  00179E  6ED9               	movwf	fsr2l,c
 11484  0017A0  0E02               	movlw	high _ep_data_out
 11485  0017A2  D00B               	goto	L8
 11486  0017A4                     l1836:
 11487                           
 11488                           ;usb_device.c: 2884: else
 11489                           ;usb_device.c: 2885: {
 11490                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11491                           
 11492                           ; BSR set to: 2
 11493  0017A4  0104               	movlb	4	; () banked
 11494  0017A6  5134               	movf	52,w,b	;volatile
 11495  0017A8  0B0F               	andlw	15
 11496  0017AA  0100               	movlb	0	; () banked
 11497  0017AC  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11498  0017AE  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11499  0017B0  0D01               	mullw	1
 11500  0017B2  0ED1               	movlw	low _ep_data_in
 11501  0017B4  24F3               	addwf	prodl,w,c
 11502  0017B6  6ED9               	movwf	fsr2l,c
 11503  0017B8  0E02               	movlw	high _ep_data_in
 11504  0017BA                     L8:
 11505  0017BA  20F4               	addwfc	prodh,w,c
 11506  0017BC  6EDA               	movwf	fsr2h,c
 11507  0017BE  0102               	movlb	2	; () banked
 11508  0017C0  82DF               	bsf	indf2,1,c
 11509  0017C2                     l1837:
 11510                           
 11511                           ;usb_device.c: 2887: }
 11512                           ;usb_device.c: 2888: }
 11513                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11514                           
 11515                           ; BSR set to: 2
 11516                           
 11517                           ; BSR set to: 2
 11518  0017C2  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11519  0017C6  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11520  0017CA  0E00               	movlw	0
 11521  0017CC  84DB               	bsf	plusw2,2,c
 11522                           
 11523                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11524  0017CE  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11525  0017D2  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11526  0017D6  0E00               	movlw	0
 11527  0017D8  8EDB               	bsf	plusw2,7,c
 11528                           
 11529                           ;usb_device.c: 2893: }
 11530  0017DA  0012               	return	
 11531  0017DC                     l1834:
 11532                           
 11533                           ;usb_device.c: 2894: else
 11534                           ;usb_device.c: 2895: {
 11535                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11536  0017DC  0E04               	movlw	4
 11537  0017DE  0100               	movlb	0	; () banked
 11538  0017E0  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11539                           
 11540                           ; BSR set to: 0
 11541                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11542  0017E2  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11543  0017E6  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11544  0017EA  AEDF               	btfss	indf2,7,c
 11545  0017EC  D01B               	goto	l1839
 11546                           
 11547                           ; BSR set to: 0
 11548                           ;usb_device.c: 2902: {
 11549                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11550  0017EE  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11551  0017F2  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11552  0017F6  0E7F               	movlw	127
 11553  0017F8  16DF               	andwf	indf2,f,c
 11554                           
 11555                           ; BSR set to: 0
 11556                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11557  0017FA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11558  0017FE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11559  001802  0E00               	movlw	0
 11560  001804  8CDB               	bsf	plusw2,6,c
 11561                           
 11562                           ; BSR set to: 0
 11563                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11564  001806  0E00               	movlw	0
 11565  001808  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11566  00180A  0E05               	movlw	5
 11567  00180C  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11568  00180E  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11569  001812  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11570  001816  0E00               	movlw	0
 11571  001818  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11572  00181A  0E02               	movlw	2
 11573  00181C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11574  00181E  ECEE  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11575                           
 11576                           ;usb_device.c: 2908: }
 11577  001822  D006               	goto	l1840
 11578  001824                     l1839:
 11579                           
 11580                           ;usb_device.c: 2909: else
 11581                           ;usb_device.c: 2910: {
 11582                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11583  001824  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11584  001828  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11585  00182C  0E00               	movlw	0
 11586  00182E  8CDB               	bsf	plusw2,6,c
 11587  001830                     l1840:
 11588                           
 11589                           ;usb_device.c: 2913: }
 11590                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11591  001830  0E04               	movlw	4
 11592  001832  0100               	movlb	0	; () banked
 11593  001834  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11594                           
 11595                           ; BSR set to: 0
 11596                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11597  001836  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11598  001838  D006               	goto	u11830
 11599                           
 11600                           ; BSR set to: 0
 11601  00183A  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11602  00183E  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11603  001842  AEDF               	btfss	indf2,7,c
 11604  001844  D033               	goto	l1841
 11605  001846                     u11830:
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;usb_device.c: 2924: {
 11609                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11610  001846  0104               	movlb	4	; () banked
 11611  001848  BF34               	btfsc	52,7,b	;volatile
 11612  00184A  D00B               	goto	l1844
 11613                           
 11614                           ; BSR set to: 4
 11615                           ;usb_device.c: 2926: {
 11616                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11617  00184C  5134               	movf	52,w,b	;volatile
 11618  00184E  0B0F               	andlw	15
 11619  001850  0100               	movlb	0	; () banked
 11620  001852  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11621  001854  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11622  001856  0D01               	mullw	1
 11623  001858  0ECE               	movlw	low _ep_data_out
 11624  00185A  24F3               	addwf	prodl,w,c
 11625  00185C  6ED9               	movwf	fsr2l,c
 11626  00185E  0E02               	movlw	high _ep_data_out
 11627  001860  D00B               	goto	L9
 11628  001862                     l1844:
 11629                           
 11630                           ;usb_device.c: 2929: else
 11631                           ;usb_device.c: 2930: {
 11632                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11633                           
 11634                           ; BSR set to: 2
 11635  001862  0104               	movlb	4	; () banked
 11636  001864  5134               	movf	52,w,b	;volatile
 11637  001866  0B0F               	andlw	15
 11638  001868  0100               	movlb	0	; () banked
 11639  00186A  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11640  00186C  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11641  00186E  0D01               	mullw	1
 11642  001870  0ED1               	movlw	low _ep_data_in
 11643  001872  24F3               	addwf	prodl,w,c
 11644  001874  6ED9               	movwf	fsr2l,c
 11645  001876  0E02               	movlw	high _ep_data_in
 11646  001878                     L9:
 11647  001878  20F4               	addwfc	prodh,w,c
 11648  00187A  6EDA               	movwf	fsr2h,c
 11649  00187C  0102               	movlb	2	; () banked
 11650  00187E  92DF               	bcf	indf2,1,c
 11651                           
 11652                           ; BSR set to: 2
 11653                           ;usb_device.c: 2932: }
 11654                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11655                           
 11656                           ; BSR set to: 2
 11657  001880  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11658  001884  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11659  001888  0E3B               	movlw	59
 11660  00188A  16DF               	andwf	indf2,f,c
 11661                           
 11662                           ; BSR set to: 2
 11663                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11664  00188C  0E00               	movlw	0
 11665  00188E  0100               	movlb	0	; () banked
 11666  001890  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11667  001892  0E05               	movlw	5
 11668  001894  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11669  001896  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11670  00189A  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11671  00189E  0E00               	movlw	0
 11672  0018A0  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11673  0018A2  0E02               	movlw	2
 11674  0018A4  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11675  0018A6  ECEE  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11676                           
 11677                           ;usb_device.c: 2938: }
 11678  0018AA  D006               	goto	l1846
 11679  0018AC                     l1841:
 11680                           
 11681                           ;usb_device.c: 2939: else
 11682                           ;usb_device.c: 2940: {
 11683                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11684  0018AC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11685  0018B0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11686  0018B4  0E3B               	movlw	59
 11687  0018B6  16DF               	andwf	indf2,f,c
 11688  0018B8                     l1846:
 11689                           
 11690                           ;usb_device.c: 2943: }
 11691                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11692  0018B8  0104               	movlb	4	; () banked
 11693  0018BA  5134               	movf	52,w,b	;volatile
 11694  0018BC  0B0F               	andlw	15
 11695  0018BE  0100               	movlb	0	; () banked
 11696  0018C0  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11697  0018C2  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11698  0018C4  0D01               	mullw	1
 11699  0018C6  0E26               	movlw	38
 11700  0018C8  24F3               	addwf	prodl,w,c
 11701  0018CA  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11702  0018CC  0E0F               	movlw	15
 11703  0018CE  20F4               	addwfc	prodh,w,c
 11704  0018D0  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11705                           
 11706                           ; BSR set to: 0
 11707                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11708  0018D2  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11709  0018D6  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11710  0018DA  0EFE               	movlw	254
 11711  0018DC  16DF               	andwf	indf2,f,c
 11712                           
 11713                           ; BSR set to: 0
 11714  0018DE  0012               	return	
 11715  0018E0                     __end_of_USBStdFeatureReqHandler:
 11716                           	opt stack 0
 11717                           tosu	equ	0xFFF
 11718                           tosh	equ	0xFFE
 11719                           tosl	equ	0xFFD
 11720                           pclath	equ	0xFFA
 11721                           tblptru	equ	0xFF8
 11722                           tblptrh	equ	0xFF7
 11723                           tblptrl	equ	0xFF6
 11724                           tablat	equ	0xFF5
 11725                           prodh	equ	0xFF4
 11726                           prodl	equ	0xFF3
 11727                           intcon	equ	0xFF2
 11728                           intcon2	equ	0xFF1
 11729                           intcon3	equ	0xFF0
 11730                           indf0	equ	0xFEF
 11731                           postinc0	equ	0xFEE
 11732                           plusw0	equ	0xFEB
 11733                           fsr0h	equ	0xFEA
 11734                           fsr0l	equ	0xFE9
 11735                           wreg	equ	0xFE8
 11736                           postinc1	equ	0xFE6
 11737                           postdec1	equ	0xFE5
 11738                           fsr1h	equ	0xFE2
 11739                           fsr1l	equ	0xFE1
 11740                           indf2	equ	0xFDF
 11741                           postinc2	equ	0xFDE
 11742                           postdec2	equ	0xFDD
 11743                           plusw2	equ	0xFDB
 11744                           fsr2h	equ	0xFDA
 11745                           fsr2l	equ	0xFD9
 11746                           status	equ	0xFD8
 11747                           
 11748 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11749 ;; Defined at:
 11750 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;  event           2   41[BANK0 ] enum E8364
 11753 ;;  pdata           2   43[BANK0 ] PTR void 
 11754 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11755 ;;  size            2   45[BANK0 ] unsigned int 
 11756 ;; Auto vars:     Size  Location     Type
 11757 ;;		None
 11758 ;; Return value:  Size  Location     Type
 11759 ;;                  1    wreg      unsigned char 
 11760 ;; Registers used:
 11761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11762 ;; Tracked objects:
 11763 ;;		On entry : 0/0
 11764 ;;		On exit  : 0/0
 11765 ;;		Unchanged: 0/0
 11766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11767 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11769 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11770 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11771 ;;Total ram usage:        8 bytes
 11772 ;; Hardware stack levels used:    1
 11773 ;; Hardware stack levels required when called:   14
 11774 ;; This function calls:
 11775 ;;		_CDCInitEP
 11776 ;;		_USBCheckCDCRequest
 11777 ;; This function is called by:
 11778 ;;		_USBDeviceTasks
 11779 ;;		_USBStdSetCfgHandler
 11780 ;;		_USBSuspend
 11781 ;;		_USBWakeFromSuspend
 11782 ;;		_USBCtrlTrfSetupHandler
 11783 ;;		_USBCheckStdRequest
 11784 ;;		_USBStdFeatureReqHandler
 11785 ;; This function uses a non-reentrant model
 11786 ;;
 11787                           
 11788                           	psect	text44
 11789  0055DC                     __ptext44:
 11790                           	opt stack 0
 11791  0055DC                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11792                           	opt stack 12
 11793                           
 11794                           ;usb_device_mgr.c: 106: switch( (int) event )
 11795                           
 11796                           ;incstack = 0
 11797  0055DC  D006               	goto	l2000
 11798  0055DE                     
 11799                           ;usb_device_mgr.c: 134: CDCInitEP();
 11800  0055DE  EC50  F029         	call	_CDCInitEP	;wreg free
 11801                           
 11802                           ;usb_device_mgr.c: 142: break;
 11803                           
 11804                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11805                           
 11806                           ;usb_device_mgr.c: 139: break;
 11807  0055E2  0012               	return	
 11808  0055E4                     
 11809                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11810  0055E4  ECC7  F021         	call	_USBCheckCDCRequest	;wreg free
 11811                           
 11812                           ;usb_device_mgr.c: 163: }
 11813                           
 11814                           ;usb_device_mgr.c: 162: break;
 11815                           
 11816                           ;usb_device_mgr.c: 161: default:
 11817                           
 11818                           ;usb_device_mgr.c: 159: break;
 11819                           
 11820                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11821                           
 11822                           ;usb_device_mgr.c: 156: break;
 11823                           
 11824                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11825                           
 11826                           ;usb_device_mgr.c: 153: break;
 11827  0055E8  0012               	return	
 11828  0055EA                     l2000:
 11829  0055EA  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11830  0055EE  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11831                           
 11832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11833                           ; Switch size 1, requested type "space"
 11834                           ; Number of cases is 2, Range of values is 0 to 127
 11835                           ; switch strategies available:
 11836                           ; Name         Instructions Cycles
 11837                           ; simple_byte            7     4 (average)
 11838                           ;	Chosen strategy is simple_byte
 11839  0055F2  0100               	movlb	0	; () banked
 11840  0055F4  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11841  0055F6  0A00               	xorlw	0	; case 0
 11842  0055F8  B4D8               	btfsc	status,2,c
 11843  0055FA  D004               	goto	l16500
 11844  0055FC  0A7F               	xorlw	127	; case 127
 11845  0055FE  A4D8               	btfss	status,2,c
 11846  005600  0012               	return	
 11847  005602  D018               	goto	l16502
 11848  005604                     l16500:
 11849                           
 11850                           ; BSR set to: 0
 11851                           ; Switch size 1, requested type "space"
 11852                           ; Number of cases is 8, Range of values is 1 to 117
 11853                           ; switch strategies available:
 11854                           ; Name         Instructions Cycles
 11855                           ; simple_byte           25    13 (average)
 11856                           ;	Chosen strategy is simple_byte
 11857  005604  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11858  005606  0A01               	xorlw	1	; case 1
 11859  005608  B4D8               	btfsc	status,2,c
 11860  00560A  D7E9               	goto	l2006
 11861  00560C  0A03               	xorlw	3	; case 2
 11862  00560E  B4D8               	btfsc	status,2,c
 11863  005610  0012               	return	
 11864  005612  0A01               	xorlw	1	; case 3
 11865  005614  B4D8               	btfsc	status,2,c
 11866  005616  D7E6               	goto	l2008
 11867  005618  0A06               	xorlw	6	; case 5
 11868  00561A  B4D8               	btfsc	status,2,c
 11869  00561C  0012               	return	
 11870  00561E  0A77               	xorlw	119	; case 114
 11871  005620  B4D8               	btfsc	status,2,c
 11872  005622  0012               	return	
 11873  005624  0A01               	xorlw	1	; case 115
 11874  005626  B4D8               	btfsc	status,2,c
 11875  005628  0012               	return	
 11876  00562A  0A07               	xorlw	7	; case 116
 11877  00562C  B4D8               	btfsc	status,2,c
 11878  00562E  0012               	return	
 11879  005630  0A01               	xorlw	1	; case 117
 11880  005632  0012               	return	
 11881  005634                     l16502:
 11882                           
 11883                           ; BSR set to: 0
 11884                           ; Switch size 1, requested type "space"
 11885                           ; Number of cases is 1, Range of values is 255 to 255
 11886                           ; switch strategies available:
 11887                           ; Name         Instructions Cycles
 11888                           ; simple_byte            4     3 (average)
 11889                           ;	Chosen strategy is simple_byte
 11890  005634  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11891  005636  0AFF               	xorlw	255	; case 255
 11892  005638  0012               	return	
 11893  00563A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11894                           	opt stack 0
 11895                           tosu	equ	0xFFF
 11896                           tosh	equ	0xFFE
 11897                           tosl	equ	0xFFD
 11898                           pclath	equ	0xFFA
 11899                           tblptru	equ	0xFF8
 11900                           tblptrh	equ	0xFF7
 11901                           tblptrl	equ	0xFF6
 11902                           tablat	equ	0xFF5
 11903                           prodh	equ	0xFF4
 11904                           prodl	equ	0xFF3
 11905                           intcon	equ	0xFF2
 11906                           intcon2	equ	0xFF1
 11907                           intcon3	equ	0xFF0
 11908                           indf0	equ	0xFEF
 11909                           postinc0	equ	0xFEE
 11910                           plusw0	equ	0xFEB
 11911                           fsr0h	equ	0xFEA
 11912                           fsr0l	equ	0xFE9
 11913                           wreg	equ	0xFE8
 11914                           postinc1	equ	0xFE6
 11915                           postdec1	equ	0xFE5
 11916                           fsr1h	equ	0xFE2
 11917                           fsr1l	equ	0xFE1
 11918                           indf2	equ	0xFDF
 11919                           postinc2	equ	0xFDE
 11920                           postdec2	equ	0xFDD
 11921                           plusw2	equ	0xFDB
 11922                           fsr2h	equ	0xFDA
 11923                           fsr2l	equ	0xFD9
 11924                           status	equ	0xFD8
 11925                           
 11926 ;; *************** function _USBCheckCDCRequest *****************
 11927 ;; Defined at:
 11928 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11929 ;; Parameters:    Size  Location     Type
 11930 ;;		None
 11931 ;; Auto vars:     Size  Location     Type
 11932 ;;		None
 11933 ;; Return value:  Size  Location     Type
 11934 ;;                  1    wreg      void 
 11935 ;; Registers used:
 11936 ;;		wreg, status,2, status,0
 11937 ;; Tracked objects:
 11938 ;;		On entry : 0/0
 11939 ;;		On exit  : 0/0
 11940 ;;		Unchanged: 0/0
 11941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11946 ;;Total ram usage:        0 bytes
 11947 ;; Hardware stack levels used:    1
 11948 ;; Hardware stack levels required when called:   11
 11949 ;; This function calls:
 11950 ;;		Nothing
 11951 ;; This function is called by:
 11952 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11953 ;; This function uses a non-reentrant model
 11954 ;;
 11955                           
 11956                           	psect	text45
 11957  00438E                     __ptext45:
 11958                           	opt stack 0
 11959  00438E                     _USBCheckCDCRequest:
 11960                           	opt stack 14
 11961                           
 11962                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11963                           
 11964                           ;incstack = 0
 11965  00438E  0104               	movlb	4	; () banked
 11966  004390  5130               	movf	48,w,b	;volatile
 11967  004392  0B1F               	andlw	31
 11968  004394  06E8               	decf	wreg,f,c
 11969  004396  A4D8               	btfss	status,2,c
 11970  004398  0012               	return	
 11971                           
 11972                           ; BSR set to: 4
 11973                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11974                           
 11975                           ; BSR set to: 4
 11976                           
 11977                           ; BSR set to: 4
 11978  00439A  3930               	swapf	48,w,b	;volatile
 11979  00439C  32E8               	rrcf	wreg,f,c
 11980  00439E  0B03               	andlw	3
 11981  0043A0  06E8               	decf	wreg,f,c
 11982  0043A2  A4D8               	btfss	status,2,c
 11983  0043A4  0012               	return	
 11984                           
 11985                           ; BSR set to: 4
 11986                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11987                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11988                           
 11989                           ; BSR set to: 4
 11990                           
 11991                           ; BSR set to: 4
 11992  0043A6  5134               	movf	52,w,b	;volatile
 11993  0043A8  B4D8               	btfsc	status,2,c
 11994  0043AA  D037               	goto	l1902
 11995                           
 11996                           ; BSR set to: 4
 11997  0043AC  0534               	decf	52,w,b	;volatile
 11998  0043AE  A4D8               	btfss	status,2,c
 11999  0043B0  0012               	return	
 12000  0043B2  D033               	goto	l1902
 12001  0043B4                     
 12002                           ; BSR set to: 4
 12003                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12004                           
 12005                           ; BSR set to: 4
 12006  0043B4  0E72               	movlw	low _dummy_encapsulated_cmd_response
 12007  0043B6  0100               	movlb	0	; () banked
 12008  0043B8  6FB0               	movwf	_inPipes& (0+255),b
 12009  0043BA  0E03               	movlw	high _dummy_encapsulated_cmd_response
 12010  0043BC  6FB1               	movwf	(_inPipes+1)& (0+255),b
 12011                           
 12012                           ; BSR set to: 0
 12013                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 12014  0043BE  0E00               	movlw	0
 12015  0043C0  6FB5               	movwf	(_inPipes+5)& (0+255),b
 12016  0043C2  0E08               	movlw	8
 12017  0043C4  6FB4               	movwf	(_inPipes+4)& (0+255),b
 12018                           
 12019                           ; BSR set to: 0
 12020                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12021  0043C6  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 12022                           
 12023                           ; BSR set to: 0
 12024                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 12025  0043C8  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 12026                           
 12027                           ;usb_device_cdc.c: 178: break;
 12028  0043CA  0012               	return	
 12029  0043CC                     
 12030                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12031                           
 12032                           ; BSR set to: 0
 12033  0043CC  0E72               	movlw	low _dummy_encapsulated_cmd_response
 12034  0043CE  0100               	movlb	0	; () banked
 12035  0043D0  6FB0               	movwf	_inPipes& (0+255),b
 12036  0043D2  0E03               	movlw	high _dummy_encapsulated_cmd_response
 12037  0043D4  6FB1               	movwf	(_inPipes+1)& (0+255),b
 12038                           
 12039                           ; BSR set to: 0
 12040                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 12041  0043D6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 12042                           
 12043                           ;usb_device_cdc.c: 183: break;
 12044  0043D8  0012               	return	
 12045  0043DA                     l1906:
 12046                           
 12047                           ; BSR set to: 4
 12048                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 12049  0043DA  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 12050  0043DE  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 12051                           
 12052                           ; BSR set to: 4
 12053                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 12054  0043E2  0E7A               	movlw	low _line_coding
 12055  0043E4  0101               	movlb	1	; () banked
 12056  0043E6  6FC9               	movwf	_outPipes& (0+255),b
 12057  0043E8  0E03               	movlw	high _line_coding
 12058  0043EA  6FCA               	movwf	(_outPipes+1)& (0+255),b
 12059                           
 12060                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 12061  0043EC  0E00               	movlw	0
 12062  0043EE  6FCF               	movwf	(_outPipes+6)& (0+255),b
 12063  0043F0  0E00               	movlw	0
 12064  0043F2  6FD0               	movwf	(_outPipes+7)& (0+255),b
 12065                           
 12066                           ; BSR set to: 1
 12067                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 12068  0043F4  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 12069                           
 12070                           ;usb_device_cdc.c: 192: break;
 12071  0043F6  0012               	return	
 12072  0043F8                     
 12073                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 12074                           
 12075                           ; BSR set to: 1
 12076  0043F8  0E7A               	movlw	low _line_coding
 12077  0043FA  0100               	movlb	0	; () banked
 12078  0043FC  6FB0               	movwf	_inPipes& (0+255),b
 12079  0043FE  0E03               	movlw	high _line_coding
 12080  004400  6FB1               	movwf	(_inPipes+1)& (0+255),b
 12081                           
 12082                           ; BSR set to: 0
 12083  004402  0E00               	movlw	0
 12084  004404  6FB5               	movwf	(_inPipes+5)& (0+255),b
 12085  004406  0E07               	movlw	7
 12086  004408  6FB4               	movwf	(_inPipes+4)& (0+255),b
 12087                           
 12088                           ; BSR set to: 0
 12089  00440A  0EC1               	movlw	193
 12090  00440C  6FB3               	movwf	(_inPipes+3)& (0+255),b
 12091                           
 12092                           ;usb_device_cdc.c: 199: break;
 12093  00440E  0012               	return	
 12094  004410                     l1908:
 12095                           
 12096                           ; BSR set to: 4
 12097                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 12098  004410  C432 F1DE          	movff	1074,_control_signal_bitmap	;volatile
 12099                           
 12100                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 12101  004414  0100               	movlb	0	; () banked
 12102  004416  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 12103                           
 12104                           ; BSR set to: 0
 12105                           ;usb_device_cdc.c: 261: }
 12106                           
 12107                           ; BSR set to: 0
 12108                           ;usb_device_cdc.c: 260: break;
 12109                           
 12110                           ;usb_device_cdc.c: 259: default:
 12111                           
 12112                           ;usb_device_cdc.c: 235: break;
 12113  004418  0012               	return	
 12114  00441A                     l1902:
 12115                           
 12116                           ; BSR set to: 0
 12117  00441A  0104               	movlb	4	; () banked
 12118  00441C  5131               	movf	49,w,b	;volatile
 12119                           
 12120                           ; Switch size 1, requested type "space"
 12121                           ; Number of cases is 5, Range of values is 0 to 34
 12122                           ; switch strategies available:
 12123                           ; Name         Instructions Cycles
 12124                           ; simple_byte           16     9 (average)
 12125                           ;	Chosen strategy is simple_byte
 12126  00441E  0A00               	xorlw	0	; case 0
 12127  004420  B4D8               	btfsc	status,2,c
 12128  004422  D7C8               	goto	l1903
 12129  004424  0A01               	xorlw	1	; case 1
 12130  004426  B4D8               	btfsc	status,2,c
 12131  004428  D7D1               	goto	l1905
 12132  00442A  0A21               	xorlw	33	; case 32
 12133  00442C  B4D8               	btfsc	status,2,c
 12134  00442E  D7D5               	goto	l1906
 12135  004430  0A01               	xorlw	1	; case 33
 12136  004432  B4D8               	btfsc	status,2,c
 12137  004434  D7E1               	goto	l1907
 12138  004436  0A03               	xorlw	3	; case 34
 12139  004438  A4D8               	btfss	status,2,c
 12140  00443A  0012               	return	
 12141  00443C  D7E9               	goto	l1908
 12142  00443E                     __end_of_USBCheckCDCRequest:
 12143                           	opt stack 0
 12144                           tosu	equ	0xFFF
 12145                           tosh	equ	0xFFE
 12146                           tosl	equ	0xFFD
 12147                           pclath	equ	0xFFA
 12148                           tblptru	equ	0xFF8
 12149                           tblptrh	equ	0xFF7
 12150                           tblptrl	equ	0xFF6
 12151                           tablat	equ	0xFF5
 12152                           prodh	equ	0xFF4
 12153                           prodl	equ	0xFF3
 12154                           intcon	equ	0xFF2
 12155                           intcon2	equ	0xFF1
 12156                           intcon3	equ	0xFF0
 12157                           indf0	equ	0xFEF
 12158                           postinc0	equ	0xFEE
 12159                           plusw0	equ	0xFEB
 12160                           fsr0h	equ	0xFEA
 12161                           fsr0l	equ	0xFE9
 12162                           wreg	equ	0xFE8
 12163                           postinc1	equ	0xFE6
 12164                           postdec1	equ	0xFE5
 12165                           fsr1h	equ	0xFE2
 12166                           fsr1l	equ	0xFE1
 12167                           indf2	equ	0xFDF
 12168                           postinc2	equ	0xFDE
 12169                           postdec2	equ	0xFDD
 12170                           plusw2	equ	0xFDB
 12171                           fsr2h	equ	0xFDA
 12172                           fsr2l	equ	0xFD9
 12173                           status	equ	0xFD8
 12174                           
 12175 ;; *************** function _CDCInitEP *****************
 12176 ;; Defined at:
 12177 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;		None
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;		None
 12182 ;; Return value:  Size  Location     Type
 12183 ;;                  1    wreg      void 
 12184 ;; Registers used:
 12185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12186 ;; Tracked objects:
 12187 ;;		On entry : 0/0
 12188 ;;		On exit  : 0/0
 12189 ;;		Unchanged: 0/0
 12190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12195 ;;Total ram usage:        0 bytes
 12196 ;; Hardware stack levels used:    1
 12197 ;; Hardware stack levels required when called:   13
 12198 ;; This function calls:
 12199 ;;		_USBEnableEndpoint
 12200 ;;		_USBTransferOnePacket
 12201 ;; This function is called by:
 12202 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12203 ;; This function uses a non-reentrant model
 12204 ;;
 12205                           
 12206                           	psect	text46
 12207  0052A0                     __ptext46:
 12208                           	opt stack 0
 12209  0052A0                     _CDCInitEP:
 12210                           	opt stack 12
 12211                           
 12212                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 12213                           
 12214                           ;incstack = 0
 12215  0052A0  0E80               	movlw	128
 12216  0052A2  0103               	movlb	3	; () banked
 12217  0052A4  6F7A               	movwf	_line_coding& (0+255),b
 12218  0052A6  0E25               	movlw	37
 12219  0052A8  6F7B               	movwf	(_line_coding+1)& (0+255),b
 12220  0052AA  0E00               	movlw	0
 12221  0052AC  6F7C               	movwf	(_line_coding+2)& (0+255),b
 12222  0052AE  0E00               	movlw	0
 12223  0052B0  6F7D               	movwf	(_line_coding+3)& (0+255),b
 12224                           
 12225                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 12226  0052B2  0E00               	movlw	0
 12227  0052B4  6F7E               	movwf	(_line_coding+4)& (0+255),b
 12228                           
 12229                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 12230  0052B6  0E00               	movlw	0
 12231  0052B8  6F7F               	movwf	(_line_coding+5)& (0+255),b
 12232                           
 12233                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 12234  0052BA  0E08               	movlw	8
 12235  0052BC  6F80               	movwf	(_line_coding+6)& (0+255),b
 12236                           
 12237                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 12238  0052BE  0E00               	movlw	0
 12239  0052C0  0100               	movlb	0	; () banked
 12240  0052C2  6FC6               	movwf	_cdc_rx_len& (0+255),b
 12241                           
 12242                           ; BSR set to: 0
 12243                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 12244  0052C4  0E1A               	movlw	26
 12245  0052C6  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 12246  0052C8  0E01               	movlw	1
 12247  0052CA  EC14  F02F         	call	_USBEnableEndpoint
 12248                           
 12249                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 12250  0052CE  0E1E               	movlw	30
 12251  0052D0  0100               	movlb	0	; () banked
 12252  0052D2  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 12253  0052D4  0E02               	movlw	2
 12254  0052D6  EC14  F02F         	call	_USBEnableEndpoint
 12255                           
 12256                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 12257  0052DA  0E00               	movlw	0
 12258  0052DC  0100               	movlb	0	; () banked
 12259  0052DE  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 12260  0052E0  0E00               	movlw	low _cdc_data_rx
 12261  0052E2  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 12262  0052E4  0E05               	movlw	high _cdc_data_rx
 12263  0052E6  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12264  0052E8  0E40               	movlw	64
 12265  0052EA  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 12266  0052EC  0E02               	movlw	2
 12267  0052EE  EC0F  F021         	call	_USBTransferOnePacket
 12268  0052F2  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 12269  0052F6  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 12270                           
 12271                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 12272  0052FA  0E00               	movlw	0
 12273  0052FC  0101               	movlb	1	; () banked
 12274  0052FE  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 12275  005300  0E00               	movlw	0
 12276  005302  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 12277                           
 12278                           ; BSR set to: 1
 12279                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 12280  005304  0E00               	movlw	0
 12281  005306  0100               	movlb	0	; () banked
 12282  005308  6FC5               	movwf	_cdc_trf_state& (0+255),b
 12283                           
 12284                           ; BSR set to: 0
 12285  00530A  0012               	return		;funcret
 12286  00530C                     __end_of_CDCInitEP:
 12287                           	opt stack 0
 12288                           tosu	equ	0xFFF
 12289                           tosh	equ	0xFFE
 12290                           tosl	equ	0xFFD
 12291                           pclath	equ	0xFFA
 12292                           tblptru	equ	0xFF8
 12293                           tblptrh	equ	0xFF7
 12294                           tblptrl	equ	0xFF6
 12295                           tablat	equ	0xFF5
 12296                           prodh	equ	0xFF4
 12297                           prodl	equ	0xFF3
 12298                           intcon	equ	0xFF2
 12299                           intcon2	equ	0xFF1
 12300                           intcon3	equ	0xFF0
 12301                           indf0	equ	0xFEF
 12302                           postinc0	equ	0xFEE
 12303                           plusw0	equ	0xFEB
 12304                           fsr0h	equ	0xFEA
 12305                           fsr0l	equ	0xFE9
 12306                           wreg	equ	0xFE8
 12307                           postinc1	equ	0xFE6
 12308                           postdec1	equ	0xFE5
 12309                           fsr1h	equ	0xFE2
 12310                           fsr1l	equ	0xFE1
 12311                           indf2	equ	0xFDF
 12312                           postinc2	equ	0xFDE
 12313                           postdec2	equ	0xFDD
 12314                           plusw2	equ	0xFDB
 12315                           fsr2h	equ	0xFDA
 12316                           fsr2l	equ	0xFD9
 12317                           status	equ	0xFD8
 12318                           
 12319 ;; *************** function _USBEnableEndpoint *****************
 12320 ;; Defined at:
 12321 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12322 ;; Parameters:    Size  Location     Type
 12323 ;;  ep              1    wreg     unsigned char 
 12324 ;;  options         1   37[BANK0 ] unsigned char 
 12325 ;; Auto vars:     Size  Location     Type
 12326 ;;  ep              1   40[BANK0 ] unsigned char 
 12327 ;;  p               2   38[BANK0 ] PTR unsigned char 
 12328 ;;		 -> UEP0(1), 
 12329 ;; Return value:  Size  Location     Type
 12330 ;;                  1    wreg      void 
 12331 ;; Registers used:
 12332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12333 ;; Tracked objects:
 12334 ;;		On entry : 0/0
 12335 ;;		On exit  : 0/0
 12336 ;;		Unchanged: 0/0
 12337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12338 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12339 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12341 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12342 ;;Total ram usage:        4 bytes
 12343 ;; Hardware stack levels used:    1
 12344 ;; Hardware stack levels required when called:   12
 12345 ;; This function calls:
 12346 ;;		_USBConfigureEndpoint
 12347 ;; This function is called by:
 12348 ;;		_CDCInitEP
 12349 ;; This function uses a non-reentrant model
 12350 ;;
 12351                           
 12352                           	psect	text47
 12353  005E28                     __ptext47:
 12354                           	opt stack 0
 12355  005E28                     _USBEnableEndpoint:
 12356                           	opt stack 12
 12357                           
 12358                           ; BSR set to: 0
 12359                           ;incstack = 0
 12360                           ;USBEnableEndpoint@ep stored from wreg
 12361  005E28  0100               	movlb	0	; () banked
 12362  005E2A  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 12363                           
 12364                           ;usb_device.c: 898: unsigned char* p;
 12365                           ;usb_device.c: 902: if(options & 0x04)
 12366  005E2C  0100               	movlb	0	; () banked
 12367  005E2E  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 12368  005E30  D005               	goto	l1643
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;usb_device.c: 903: {
 12372                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 12373  005E32  0E00               	movlw	0
 12374  005E34  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12375  005E36  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12376  005E38  EC08  F025         	call	_USBConfigureEndpoint
 12377  005E3C                     l1643:
 12378                           
 12379                           ;usb_device.c: 905: }
 12380                           ;usb_device.c: 906: if(options & 0x02)
 12381  005E3C  0100               	movlb	0	; () banked
 12382  005E3E  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 12383  005E40  D005               	goto	l1644
 12384                           
 12385                           ; BSR set to: 0
 12386                           ;usb_device.c: 907: {
 12387                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 12388  005E42  0E01               	movlw	1
 12389  005E44  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12390  005E46  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12391  005E48  EC08  F025         	call	_USBConfigureEndpoint
 12392  005E4C                     l1644:
 12393                           
 12394                           ;usb_device.c: 909: }
 12395                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 12396  005E4C  0100               	movlb	0	; () banked
 12397  005E4E  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12398  005E50  0D01               	mullw	1
 12399  005E52  0E26               	movlw	38
 12400  005E54  24F3               	addwf	prodl,w,c
 12401  005E56  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 12402  005E58  0E0F               	movlw	15
 12403  005E5A  20F4               	addwfc	prodh,w,c
 12404  005E5C  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 12405                           
 12406                           ; BSR set to: 0
 12407                           ;usb_device.c: 919: *p = options;
 12408  005E5E  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 12409  005E62  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 12410  005E66  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 12411                           
 12412                           ; BSR set to: 0
 12413  005E6A  0012               	return		;funcret
 12414  005E6C                     __end_of_USBEnableEndpoint:
 12415                           	opt stack 0
 12416                           tosu	equ	0xFFF
 12417                           tosh	equ	0xFFE
 12418                           tosl	equ	0xFFD
 12419                           pclath	equ	0xFFA
 12420                           tblptru	equ	0xFF8
 12421                           tblptrh	equ	0xFF7
 12422                           tblptrl	equ	0xFF6
 12423                           tablat	equ	0xFF5
 12424                           prodh	equ	0xFF4
 12425                           prodl	equ	0xFF3
 12426                           intcon	equ	0xFF2
 12427                           intcon2	equ	0xFF1
 12428                           intcon3	equ	0xFF0
 12429                           indf0	equ	0xFEF
 12430                           postinc0	equ	0xFEE
 12431                           plusw0	equ	0xFEB
 12432                           fsr0h	equ	0xFEA
 12433                           fsr0l	equ	0xFE9
 12434                           wreg	equ	0xFE8
 12435                           postinc1	equ	0xFE6
 12436                           postdec1	equ	0xFE5
 12437                           fsr1h	equ	0xFE2
 12438                           fsr1l	equ	0xFE1
 12439                           indf2	equ	0xFDF
 12440                           postinc2	equ	0xFDE
 12441                           postdec2	equ	0xFDD
 12442                           plusw2	equ	0xFDB
 12443                           fsr2h	equ	0xFDA
 12444                           fsr2l	equ	0xFD9
 12445                           status	equ	0xFD8
 12446                           
 12447 ;; *************** function _USBConfigureEndpoint *****************
 12448 ;; Defined at:
 12449 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12450 ;; Parameters:    Size  Location     Type
 12451 ;;  EPNum           1    wreg     unsigned char 
 12452 ;;  direction       1   29[BANK0 ] unsigned char 
 12453 ;; Auto vars:     Size  Location     Type
 12454 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12455 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12456 ;;		 -> BDT(48), 
 12457 ;; Return value:  Size  Location     Type
 12458 ;;                  1    wreg      void 
 12459 ;; Registers used:
 12460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12461 ;; Tracked objects:
 12462 ;;		On entry : 0/0
 12463 ;;		On exit  : 0/0
 12464 ;;		Unchanged: 0/0
 12465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12466 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12467 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12468 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12469 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12470 ;;Total ram usage:        8 bytes
 12471 ;; Hardware stack levels used:    1
 12472 ;; Hardware stack levels required when called:   11
 12473 ;; This function calls:
 12474 ;;		Nothing
 12475 ;; This function is called by:
 12476 ;;		_USBEnableEndpoint
 12477 ;; This function uses a non-reentrant model
 12478 ;;
 12479                           
 12480                           	psect	text48
 12481  004A10                     __ptext48:
 12482                           	opt stack 0
 12483  004A10                     _USBConfigureEndpoint:
 12484                           	opt stack 12
 12485                           
 12486                           ; BSR set to: 0
 12487                           ;incstack = 0
 12488                           ;USBConfigureEndpoint@EPNum stored from wreg
 12489  004A10  0100               	movlb	0	; () banked
 12490  004A12  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12491                           
 12492                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12493                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12494  004A14  0E00               	movlw	0
 12495  004A16  0100               	movlb	0	; () banked
 12496  004A18  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12497  004A1A  0E04               	movlw	4
 12498  004A1C  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12502  004A1E  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12503  004A20  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12504  004A22  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12505  004A24  90D8               	bcf	status,0,c
 12506  004A26  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12507  004A28  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12508  004A2A  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12509  004A2C  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12510  004A2E  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12511  004A30  90D8               	bcf	status,0,c
 12512  004A32  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12513  004A34  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12514  004A36  90D8               	bcf	status,0,c
 12515  004A38  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12516  004A3A  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12517  004A3C  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12518  004A3E  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12519  004A40  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12520  004A42  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12521  004A44  90D8               	bcf	status,0,c
 12522  004A46  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12523  004A48  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12524  004A4A  90D8               	bcf	status,0,c
 12525  004A4C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12526  004A4E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12527  004A50  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12528  004A52  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12529  004A54  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12530  004A56  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12531                           
 12532                           ; BSR set to: 0
 12533                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12534  004A58  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12535  004A5C  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12536  004A60  9EDF               	bcf	indf2,7,c
 12537                           
 12538                           ; BSR set to: 0
 12539                           ;usb_device.c: 1575: if(direction == 0)
 12540  004A62  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12541  004A64  A4D8               	btfss	status,2,c
 12542  004A66  D007               	goto	l1679
 12543                           
 12544                           ; BSR set to: 0
 12545                           ;usb_device.c: 1576: {
 12546                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12547  004A68  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12548  004A6A  0D02               	mullw	2
 12549  004A6C  0E06               	movlw	low _pBDTEntryOut
 12550  004A6E  24F3               	addwf	prodl,w,c
 12551  004A70  6ED9               	movwf	fsr2l,c
 12552  004A72  0E03               	movlw	high _pBDTEntryOut
 12553  004A74  D006               	goto	L10
 12554  004A76                     l1679:
 12555                           
 12556                           ; BSR set to: 0
 12557                           ;usb_device.c: 1579: else
 12558                           ;usb_device.c: 1580: {
 12559                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12560                           
 12561                           ; BSR set to: 0
 12562  004A76  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12563  004A78  0D02               	mullw	2
 12564  004A7A  0EB6               	movlw	low _pBDTEntryIn
 12565  004A7C  24F3               	addwf	prodl,w,c
 12566  004A7E  6ED9               	movwf	fsr2l,c
 12567  004A80  0E00               	movlw	high _pBDTEntryIn
 12568  004A82                     L10:
 12569  004A82  20F4               	addwfc	prodh,w,c
 12570  004A84  6EDA               	movwf	fsr2h,c
 12571  004A86  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12572  004A8A  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;usb_device.c: 1582: }
 12576                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12577                           
 12578                           ; BSR set to: 0
 12579  004A8E  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12580  004A92  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12581  004A96  9CDF               	bcf	indf2,6,c
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12585  004A98  EE20 F004          	lfsr	2,4
 12586  004A9C  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12587  004A9E  26D9               	addwf	fsr2l,f,c
 12588  004AA0  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12589  004AA2  22DA               	addwfc	fsr2h,f,c
 12590  004AA4  8CDF               	bsf	indf2,6,c
 12591                           
 12592                           ; BSR set to: 0
 12593  004AA6  0012               	return		;funcret
 12594  004AA8                     __end_of_USBConfigureEndpoint:
 12595                           	opt stack 0
 12596                           tosu	equ	0xFFF
 12597                           tosh	equ	0xFFE
 12598                           tosl	equ	0xFFD
 12599                           pclath	equ	0xFFA
 12600                           tblptru	equ	0xFF8
 12601                           tblptrh	equ	0xFF7
 12602                           tblptrl	equ	0xFF6
 12603                           tablat	equ	0xFF5
 12604                           prodh	equ	0xFF4
 12605                           prodl	equ	0xFF3
 12606                           intcon	equ	0xFF2
 12607                           intcon2	equ	0xFF1
 12608                           intcon3	equ	0xFF0
 12609                           indf0	equ	0xFEF
 12610                           postinc0	equ	0xFEE
 12611                           plusw0	equ	0xFEB
 12612                           fsr0h	equ	0xFEA
 12613                           fsr0l	equ	0xFE9
 12614                           wreg	equ	0xFE8
 12615                           postinc1	equ	0xFE6
 12616                           postdec1	equ	0xFE5
 12617                           fsr1h	equ	0xFE2
 12618                           fsr1l	equ	0xFE1
 12619                           indf2	equ	0xFDF
 12620                           postinc2	equ	0xFDE
 12621                           postdec2	equ	0xFDD
 12622                           plusw2	equ	0xFDB
 12623                           fsr2h	equ	0xFDA
 12624                           fsr2l	equ	0xFD9
 12625                           status	equ	0xFD8
 12626                           
 12627 ;; *************** function _USBCtrlTrfOutHandler *****************
 12628 ;; Defined at:
 12629 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12630 ;; Parameters:    Size  Location     Type
 12631 ;;		None
 12632 ;; Auto vars:     Size  Location     Type
 12633 ;;		None
 12634 ;; Return value:  Size  Location     Type
 12635 ;;                  1    wreg      void 
 12636 ;; Registers used:
 12637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12638 ;; Tracked objects:
 12639 ;;		On entry : 0/0
 12640 ;;		On exit  : 0/0
 12641 ;;		Unchanged: 0/0
 12642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12647 ;;Total ram usage:        0 bytes
 12648 ;; Hardware stack levels used:    1
 12649 ;; Hardware stack levels required when called:   13
 12650 ;; This function calls:
 12651 ;;		_USBCtrlTrfRxService
 12652 ;; This function is called by:
 12653 ;;		_USBCtrlEPService
 12654 ;; This function uses a non-reentrant model
 12655 ;;
 12656                           
 12657                           	psect	text49
 12658  005448                     __ptext49:
 12659                           	opt stack 0
 12660  005448                     _USBCtrlTrfOutHandler:
 12661                           	opt stack 12
 12662                           
 12663                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;incstack = 0
 12667  005448  0E02               	movlw	2
 12668  00544A  0100               	movlb	0	; () banked
 12669  00544C  19CA               	xorwf	_controlTransferState& (0+255),w,b
 12670  00544E  A4D8               	btfss	status,2,c
 12671  005450  D003               	goto	l1785
 12672                           
 12673                           ; BSR set to: 0
 12674                           ;usb_device.c: 2558: {
 12675                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12676  005452  ECF4  F017         	call	_USBCtrlTrfRxService	;wreg free
 12677                           
 12678                           ;usb_device.c: 2560: }
 12679  005456  0012               	return	
 12680  005458                     l1785:
 12681                           
 12682                           ;usb_device.c: 2561: else
 12683                           ;usb_device.c: 2562: {
 12684                           ;usb_device.c: 2565: controlTransferState = 0;
 12685  005458  0E00               	movlw	0
 12686  00545A  0100               	movlb	0	; () banked
 12687  00545C  6FCA               	movwf	_controlTransferState& (0+255),b
 12688                           
 12689                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12690  00545E  0101               	movlb	1	; () banked
 12691  005460  51E1               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12692  005462  A4D8               	btfss	status,2,c
 12693  005464  D020               	goto	l1787
 12694                           
 12695                           ; BSR set to: 1
 12696                           ;usb_device.c: 2573: {
 12697                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12698  005466  0100               	movlb	0	; () banked
 12699  005468  EE20 F001          	lfsr	2,1
 12700  00546C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12701  00546E  26D9               	addwf	fsr2l,f,c
 12702  005470  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12703  005472  22DA               	addwfc	fsr2h,f,c
 12704  005474  0E08               	movlw	8
 12705  005476  6EDF               	movwf	indf2,c
 12706                           
 12707                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12708  005478  EE20 F002          	lfsr	2,2
 12709  00547C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12710  00547E  26D9               	addwf	fsr2l,f,c
 12711  005480  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12712  005482  22DA               	addwfc	fsr2h,f,c
 12713  005484  0E30               	movlw	48
 12714  005486  6EDE               	movwf	postinc2,c
 12715  005488  0E04               	movlw	4
 12716  00548A  6EDD               	movwf	postdec2,c
 12717                           
 12718                           ; BSR set to: 0
 12719                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12720  00548C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12721  005490  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12722  005494  0E0C               	movlw	12
 12723  005496  6EDF               	movwf	indf2,c
 12724                           
 12725                           ; BSR set to: 0
 12726                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12727  005498  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12728  00549C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12729  0054A0  0E00               	movlw	0
 12730  0054A2  8EDB               	bsf	plusw2,7,c
 12731                           
 12732                           ;usb_device.c: 2578: }
 12733  0054A4  0012               	return	
 12734  0054A6                     l1787:
 12735                           
 12736                           ;usb_device.c: 2579: else
 12737                           ;usb_device.c: 2580: {
 12738                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12739                           
 12740                           ; BSR set to: 0
 12741  0054A6  0E00               	movlw	0
 12742  0054A8  0101               	movlb	1	; () banked
 12743  0054AA  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12744                           
 12745                           ; BSR set to: 1
 12746  0054AC  0012               	return	
 12747  0054AE                     __end_of_USBCtrlTrfOutHandler:
 12748                           	opt stack 0
 12749                           tosu	equ	0xFFF
 12750                           tosh	equ	0xFFE
 12751                           tosl	equ	0xFFD
 12752                           pclath	equ	0xFFA
 12753                           tblptru	equ	0xFF8
 12754                           tblptrh	equ	0xFF7
 12755                           tblptrl	equ	0xFF6
 12756                           tablat	equ	0xFF5
 12757                           prodh	equ	0xFF4
 12758                           prodl	equ	0xFF3
 12759                           intcon	equ	0xFF2
 12760                           intcon2	equ	0xFF1
 12761                           intcon3	equ	0xFF0
 12762                           indf0	equ	0xFEF
 12763                           postinc0	equ	0xFEE
 12764                           plusw0	equ	0xFEB
 12765                           fsr0h	equ	0xFEA
 12766                           fsr0l	equ	0xFE9
 12767                           wreg	equ	0xFE8
 12768                           postinc1	equ	0xFE6
 12769                           postdec1	equ	0xFE5
 12770                           fsr1h	equ	0xFE2
 12771                           fsr1l	equ	0xFE1
 12772                           indf2	equ	0xFDF
 12773                           postinc2	equ	0xFDE
 12774                           postdec2	equ	0xFDD
 12775                           plusw2	equ	0xFDB
 12776                           fsr2h	equ	0xFDA
 12777                           fsr2l	equ	0xFD9
 12778                           status	equ	0xFD8
 12779                           
 12780 ;; *************** function _USBCtrlTrfRxService *****************
 12781 ;; Defined at:
 12782 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12783 ;; Parameters:    Size  Location     Type
 12784 ;;		None
 12785 ;; Auto vars:     Size  Location     Type
 12786 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12787 ;;  i               1   29[BANK0 ] unsigned char 
 12788 ;; Return value:  Size  Location     Type
 12789 ;;                  1    wreg      void 
 12790 ;; Registers used:
 12791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12792 ;; Tracked objects:
 12793 ;;		On entry : 0/0
 12794 ;;		On exit  : 0/0
 12795 ;;		Unchanged: 0/0
 12796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12798 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12800 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12801 ;;Total ram usage:        2 bytes
 12802 ;; Hardware stack levels used:    1
 12803 ;; Hardware stack levels required when called:   12
 12804 ;; This function calls:
 12805 ;;		_USBCtrlEPAllowStatusStage
 12806 ;; This function is called by:
 12807 ;;		_USBCtrlTrfOutHandler
 12808 ;; This function uses a non-reentrant model
 12809 ;;
 12810                           
 12811                           	psect	text50
 12812  002FE8                     __ptext50:
 12813                           	opt stack 0
 12814  002FE8                     _USBCtrlTrfRxService:
 12815                           	opt stack 12
 12816                           
 12817                           ;usb_device.c: 1872: uint8_t byteToRead;
 12818                           ;usb_device.c: 1873: uint8_t i;
 12819                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12820                           
 12821                           ;incstack = 0
 12822  002FE8  0100               	movlb	0	; () banked
 12823  002FEA  EE20 F001          	lfsr	2,1
 12824  002FEE  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12825  002FF0  26D9               	addwf	fsr2l,f,c
 12826  002FF2  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12827  002FF4  22DA               	addwfc	fsr2h,f,c
 12828  002FF6  50DF               	movf	indf2,w,c
 12829  002FF8  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12830                           
 12831                           ; BSR set to: 0
 12832                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12833  002FFA  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12834  002FFC  0101               	movlb	1	; () banked
 12835  002FFE  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12836  003000  0E00               	movlw	0
 12837  003002  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12838  003004  A0D8               	btfss	status,0,c
 12839                           
 12840                           ; BSR set to: 1
 12841                           ;usb_device.c: 1884: {
 12842                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12843  003006  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12844                           
 12845                           ; BSR set to: 1
 12846                           ;usb_device.c: 1886: }
 12847                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12848                           
 12849                           ; BSR set to: 1
 12850  00300A  0100               	movlb	0	; () banked
 12851  00300C  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12852  00300E  0101               	movlb	1	; () banked
 12853  003010  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12854  003012  0E00               	movlw	0
 12855  003014  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12856                           
 12857                           ; BSR set to: 1
 12858                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12859  003016  0E00               	movlw	0
 12860  003018  0100               	movlb	0	; () banked
 12861  00301A  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12862  00301C  D013               	goto	l1713
 12863  00301E                     
 12864                           ; BSR set to: 0
 12865                           ;usb_device.c: 1893: {
 12866                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12867                           
 12868                           ; BSR set to: 0
 12869  00301E  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12870  003020  0D01               	mullw	1
 12871  003022  0E38               	movlw	56
 12872  003024  24F3               	addwf	prodl,w,c
 12873  003026  6ED9               	movwf	fsr2l,c
 12874  003028  0E04               	movlw	4
 12875  00302A  20F4               	addwfc	prodh,w,c
 12876  00302C  6EDA               	movwf	fsr2h,c
 12877  00302E  C1C9  FFE1         	movff	_outPipes,fsr1l
 12878  003032  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12879  003036  CFDF FFE7          	movff	indf2,indf1
 12880                           
 12881                           ; BSR set to: 0
 12882  00303A  0101               	movlb	1	; () banked
 12883  00303C  4BC9               	infsnz	_outPipes& (0+255),f,b
 12884  00303E  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12885                           
 12886                           ; BSR set to: 1
 12887  003040  0100               	movlb	0	; () banked
 12888  003042  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12889  003044                     l1713:
 12890                           
 12891                           ; BSR set to: 0
 12892                           
 12893                           ; BSR set to: 0
 12894  003044  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12895  003046  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12896  003048  A0D8               	btfss	status,0,c
 12897  00304A  D7E9               	goto	l1714
 12898                           
 12899                           ; BSR set to: 0
 12900                           ;usb_device.c: 1895: }
 12901                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12902                           
 12903                           ; BSR set to: 0
 12904  00304C  0101               	movlb	1	; () banked
 12905  00304E  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12906  003050  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12907  003052  B4D8               	btfsc	status,2,c
 12908  003054  D033               	goto	l1716
 12909                           
 12910                           ; BSR set to: 1
 12911                           ;usb_device.c: 1900: {
 12912                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12913  003056  0100               	movlb	0	; () banked
 12914  003058  EE20 F001          	lfsr	2,1
 12915  00305C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12916  00305E  26D9               	addwf	fsr2l,f,c
 12917  003060  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12918  003062  22DA               	addwfc	fsr2h,f,c
 12919  003064  0E08               	movlw	8
 12920  003066  6EDF               	movwf	indf2,c
 12921                           
 12922                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12923  003068  EE20 F002          	lfsr	2,2
 12924  00306C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12925  00306E  26D9               	addwf	fsr2l,f,c
 12926  003070  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12927  003072  22DA               	addwfc	fsr2h,f,c
 12928  003074  0E38               	movlw	56
 12929  003076  6EDE               	movwf	postinc2,c
 12930  003078  0E04               	movlw	4
 12931  00307A  6EDD               	movwf	postdec2,c
 12932                           
 12933                           ; BSR set to: 0
 12934                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12935  00307C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12936  003080  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12937  003084  BCDF               	btfsc	indf2,6,c
 12938  003086  D00D               	goto	l1717
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;usb_device.c: 1904: {
 12942                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12943  003088  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12944  00308C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12945  003090  0E48               	movlw	72
 12946  003092  6EDF               	movwf	indf2,c
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12950  003094  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12951  003098  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12952  00309C  0E00               	movlw	0
 12953  00309E  8EDB               	bsf	plusw2,7,c
 12954                           
 12955                           ;usb_device.c: 1907: }
 12956  0030A0  0012               	return	
 12957  0030A2                     l1717:
 12958                           
 12959                           ; BSR set to: 0
 12960                           ;usb_device.c: 1908: else
 12961                           ;usb_device.c: 1909: {
 12962                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12963                           
 12964                           ; BSR set to: 0
 12965  0030A2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12966  0030A6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12967  0030AA  0E08               	movlw	8
 12968  0030AC  6EDF               	movwf	indf2,c
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12972  0030AE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12973  0030B2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12974  0030B6  0E00               	movlw	0
 12975  0030B8  8EDB               	bsf	plusw2,7,c
 12976                           
 12977                           ; BSR set to: 0
 12978                           ;usb_device.c: 1912: }
 12979                           ;usb_device.c: 1913: }
 12980  0030BA  0012               	return	
 12981  0030BC                     l1716:
 12982                           
 12983                           ;usb_device.c: 1914: else
 12984                           ;usb_device.c: 1915: {
 12985                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12986                           
 12987                           ; BSR set to: 0
 12988  0030BC  0100               	movlb	0	; () banked
 12989  0030BE  EE20 F001          	lfsr	2,1
 12990  0030C2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12991  0030C4  26D9               	addwf	fsr2l,f,c
 12992  0030C6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12993  0030C8  22DA               	addwfc	fsr2h,f,c
 12994  0030CA  0E08               	movlw	8
 12995  0030CC  6EDF               	movwf	indf2,c
 12996                           
 12997                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12998  0030CE  EE20 F002          	lfsr	2,2
 12999  0030D2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13000  0030D4  26D9               	addwf	fsr2l,f,c
 13001  0030D6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13002  0030D8  22DA               	addwfc	fsr2h,f,c
 13003  0030DA  0E30               	movlw	48
 13004  0030DC  6EDE               	movwf	postinc2,c
 13005  0030DE  0E04               	movlw	4
 13006  0030E0  6EDD               	movwf	postdec2,c
 13007                           
 13008                           ; BSR set to: 0
 13009                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13010  0030E2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13011  0030E6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13012  0030EA  0E04               	movlw	4
 13013  0030EC  6EDF               	movwf	indf2,c
 13014                           
 13015                           ; BSR set to: 0
 13016                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13017  0030EE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13018  0030F2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13019  0030F6  0E00               	movlw	0
 13020  0030F8  8EDB               	bsf	plusw2,7,c
 13021                           
 13022                           ; BSR set to: 0
 13023                           ;usb_device.c: 1944: }
 13024                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 13025                           
 13026                           ; BSR set to: 0
 13027  0030FA  0101               	movlb	1	; () banked
 13028  0030FC  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13029                           
 13030                           ; BSR set to: 1
 13031                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 13032  0030FE  0100               	movlb	0	; () banked
 13033  003100  51C7               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 13034  003102  A4D8               	btfss	status,2,c
 13035  003104  0012               	return	
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;usb_device.c: 1960: {
 13039                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 13040  003106  EC55  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13041  00310A  0012               	return	
 13042  00310C                     __end_of_USBCtrlTrfRxService:
 13043                           	opt stack 0
 13044                           tosu	equ	0xFFF
 13045                           tosh	equ	0xFFE
 13046                           tosl	equ	0xFFD
 13047                           pclath	equ	0xFFA
 13048                           tblptru	equ	0xFF8
 13049                           tblptrh	equ	0xFF7
 13050                           tblptrl	equ	0xFF6
 13051                           tablat	equ	0xFF5
 13052                           prodh	equ	0xFF4
 13053                           prodl	equ	0xFF3
 13054                           intcon	equ	0xFF2
 13055                           intcon2	equ	0xFF1
 13056                           intcon3	equ	0xFF0
 13057                           indf0	equ	0xFEF
 13058                           postinc0	equ	0xFEE
 13059                           plusw0	equ	0xFEB
 13060                           fsr0h	equ	0xFEA
 13061                           fsr0l	equ	0xFE9
 13062                           wreg	equ	0xFE8
 13063                           indf1	equ	0xFE7
 13064                           postinc1	equ	0xFE6
 13065                           postdec1	equ	0xFE5
 13066                           fsr1h	equ	0xFE2
 13067                           fsr1l	equ	0xFE1
 13068                           indf2	equ	0xFDF
 13069                           postinc2	equ	0xFDE
 13070                           postdec2	equ	0xFDD
 13071                           plusw2	equ	0xFDB
 13072                           fsr2h	equ	0xFDA
 13073                           fsr2l	equ	0xFD9
 13074                           status	equ	0xFD8
 13075                           
 13076 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 13077 ;; Defined at:
 13078 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13079 ;; Parameters:    Size  Location     Type
 13080 ;;		None
 13081 ;; Auto vars:     Size  Location     Type
 13082 ;;		None
 13083 ;; Return value:  Size  Location     Type
 13084 ;;                  1    wreg      void 
 13085 ;; Registers used:
 13086 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13087 ;; Tracked objects:
 13088 ;;		On entry : 0/0
 13089 ;;		On exit  : 0/0
 13090 ;;		Unchanged: 0/0
 13091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13096 ;;Total ram usage:        0 bytes
 13097 ;; Hardware stack levels used:    1
 13098 ;; Hardware stack levels required when called:   11
 13099 ;; This function calls:
 13100 ;;		Nothing
 13101 ;; This function is called by:
 13102 ;;		_USBDeviceTasks
 13103 ;;		_USBCtrlEPServiceComplete
 13104 ;;		_USBCtrlTrfRxService
 13105 ;; This function uses a non-reentrant model
 13106 ;;
 13107                           
 13108                           	psect	text51
 13109  003CAA                     __ptext51:
 13110                           	opt stack 0
 13111  003CAA                     _USBCtrlEPAllowStatusStage:
 13112                           	opt stack 12
 13113                           
 13114                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 13115                           
 13116                           ;incstack = 0
 13117  003CAA  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 13118  003CAC  A4D8               	btfss	status,2,c
 13119  003CAE  0012               	return	
 13120                           
 13121                           ;usb_device.c: 1442: {
 13122                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 13123  003CB0  0E01               	movlw	1
 13124  003CB2  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13125                           
 13126                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 13127  003CB4  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 13128  003CB6  A4D8               	btfss	status,2,c
 13129  003CB8  0012               	return	
 13130                           
 13131                           ;usb_device.c: 1445: {
 13132                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 13133  003CBA  0E01               	movlw	1
 13134  003CBC  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13135                           
 13136                           ;usb_device.c: 1450: if(controlTransferState == 2)
 13137  003CBE  0E02               	movlw	2
 13138  003CC0  0100               	movlb	0	; () banked
 13139  003CC2  19CA               	xorwf	_controlTransferState& (0+255),w,b
 13140  003CC4  A4D8               	btfss	status,2,c
 13141  003CC6  D015               	goto	l1667
 13142                           
 13143                           ; BSR set to: 0
 13144                           ;usb_device.c: 1451: {
 13145                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 13146  003CC8  EE20 F001          	lfsr	2,1
 13147  003CCC  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13148  003CCE  26D9               	addwf	fsr2l,f,c
 13149  003CD0  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13150  003CD2  22DA               	addwfc	fsr2h,f,c
 13151  003CD4  0E00               	movlw	0
 13152  003CD6  6EDF               	movwf	indf2,c
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13156  003CD8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13157  003CDC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13158  003CE0  0E48               	movlw	72
 13159  003CE2  6EDF               	movwf	indf2,c
 13160                           
 13161                           ; BSR set to: 0
 13162                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13163  003CE4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13164  003CE8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13165  003CEC  0E00               	movlw	0
 13166  003CEE  8EDB               	bsf	plusw2,7,c
 13167                           
 13168                           ;usb_device.c: 1455: }
 13169  003CF0  0012               	return	
 13170  003CF2                     l1667:
 13171                           
 13172                           ; BSR set to: 0
 13173                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 13174                           
 13175                           ; BSR set to: 0
 13176  003CF2  05CA               	decf	_controlTransferState& (0+255),w,b
 13177  003CF4  A4D8               	btfss	status,2,c
 13178  003CF6  0012               	return	
 13179                           
 13180                           ; BSR set to: 0
 13181                           ;usb_device.c: 1457: {
 13182                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 13183  003CF8  0E00               	movlw	0
 13184  003CFA  0101               	movlb	1	; () banked
 13185  003CFC  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13186                           
 13187                           ; BSR set to: 1
 13188                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 13189  003CFE  0100               	movlb	0	; () banked
 13190  003D00  EE20 F001          	lfsr	2,1
 13191  003D04  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13192  003D06  26D9               	addwf	fsr2l,f,c
 13193  003D08  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13194  003D0A  22DA               	addwfc	fsr2h,f,c
 13195  003D0C  0E08               	movlw	8
 13196  003D0E  6EDF               	movwf	indf2,c
 13197                           
 13198                           ; BSR set to: 0
 13199                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 13200  003D10  EE20 F002          	lfsr	2,2
 13201  003D14  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13202  003D16  26D9               	addwf	fsr2l,f,c
 13203  003D18  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13204  003D1A  22DA               	addwfc	fsr2h,f,c
 13205  003D1C  0E30               	movlw	48
 13206  003D1E  6EDE               	movwf	postinc2,c
 13207  003D20  0E04               	movlw	4
 13208  003D22  6EDD               	movwf	postdec2,c
 13209                           
 13210                           ; BSR set to: 0
 13211                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 13212  003D24  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13213  003D28  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13214  003D2C  0E04               	movlw	4
 13215  003D2E  6EDF               	movwf	indf2,c
 13216                           
 13217                           ; BSR set to: 0
 13218                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 13219  003D30  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13220  003D34  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13221  003D38  0E00               	movlw	0
 13222  003D3A  8EDB               	bsf	plusw2,7,c
 13223                           
 13224                           ; BSR set to: 0
 13225                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 13226  003D3C  0E01               	movlw	1
 13227  003D3E  0101               	movlb	1	; () banked
 13228  003D40  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13229                           
 13230                           ; BSR set to: 1
 13231                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 13232  003D42  0100               	movlb	0	; () banked
 13233  003D44  EE20 F001          	lfsr	2,1
 13234  003D48  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13235  003D4A  26D9               	addwf	fsr2l,f,c
 13236  003D4C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13237  003D4E  22DA               	addwfc	fsr2h,f,c
 13238  003D50  0E08               	movlw	8
 13239  003D52  6EDF               	movwf	indf2,c
 13240                           
 13241                           ; BSR set to: 0
 13242                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13243  003D54  EE20 F002          	lfsr	2,2
 13244  003D58  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13245  003D5A  26D9               	addwf	fsr2l,f,c
 13246  003D5C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13247  003D5E  22DA               	addwfc	fsr2h,f,c
 13248  003D60  0E30               	movlw	48
 13249  003D62  6EDE               	movwf	postinc2,c
 13250  003D64  0E04               	movlw	4
 13251  003D66  6EDD               	movwf	postdec2,c
 13252                           
 13253                           ; BSR set to: 0
 13254                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 13255  003D68  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13256  003D6C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13257  003D70  0E80               	movlw	128
 13258  003D72  6EDF               	movwf	indf2,c
 13259                           
 13260                           ; BSR set to: 0
 13261                           
 13262                           ; BSR set to: 0
 13263                           
 13264                           ; BSR set to: 0
 13265  003D74  0012               	return	
 13266  003D76                     __end_of_USBCtrlEPAllowStatusStage:
 13267                           	opt stack 0
 13268                           tosu	equ	0xFFF
 13269                           tosh	equ	0xFFE
 13270                           tosl	equ	0xFFD
 13271                           pclath	equ	0xFFA
 13272                           tblptru	equ	0xFF8
 13273                           tblptrh	equ	0xFF7
 13274                           tblptrl	equ	0xFF6
 13275                           tablat	equ	0xFF5
 13276                           prodh	equ	0xFF4
 13277                           prodl	equ	0xFF3
 13278                           intcon	equ	0xFF2
 13279                           intcon2	equ	0xFF1
 13280                           intcon3	equ	0xFF0
 13281                           indf0	equ	0xFEF
 13282                           postinc0	equ	0xFEE
 13283                           plusw0	equ	0xFEB
 13284                           fsr0h	equ	0xFEA
 13285                           fsr0l	equ	0xFE9
 13286                           wreg	equ	0xFE8
 13287                           indf1	equ	0xFE7
 13288                           postinc1	equ	0xFE6
 13289                           postdec1	equ	0xFE5
 13290                           fsr1h	equ	0xFE2
 13291                           fsr1l	equ	0xFE1
 13292                           indf2	equ	0xFDF
 13293                           postinc2	equ	0xFDE
 13294                           postdec2	equ	0xFDD
 13295                           plusw2	equ	0xFDB
 13296                           fsr2h	equ	0xFDA
 13297                           fsr2l	equ	0xFD9
 13298                           status	equ	0xFD8
 13299                           
 13300 ;; *************** function _USBCtrlTrfInHandler *****************
 13301 ;; Defined at:
 13302 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13303 ;; Parameters:    Size  Location     Type
 13304 ;;		None
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 13307 ;; Return value:  Size  Location     Type
 13308 ;;                  1    wreg      void 
 13309 ;; Registers used:
 13310 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13311 ;; Tracked objects:
 13312 ;;		On entry : 0/0
 13313 ;;		On exit  : 0/0
 13314 ;;		Unchanged: 0/0
 13315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13317 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13319 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13320 ;;Total ram usage:        1 bytes
 13321 ;; Hardware stack levels used:    1
 13322 ;; Hardware stack levels required when called:   12
 13323 ;; This function calls:
 13324 ;;		_USBCtrlTrfTxService
 13325 ;; This function is called by:
 13326 ;;		_USBCtrlEPService
 13327 ;; This function uses a non-reentrant model
 13328 ;;
 13329                           
 13330                           	psect	text52
 13331  00415C                     __ptext52:
 13332                           	opt stack 0
 13333  00415C                     _USBCtrlTrfInHandler:
 13334                           	opt stack 13
 13335                           
 13336                           ;usb_device.c: 2611: uint8_t lastDTS;
 13337                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 13338                           
 13339                           ;incstack = 0
 13340  00415C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13341  004160  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13342  004164  0100               	movlb	0	; () banked
 13343  004166  0E00               	movlw	0
 13344  004168  BCDF               	btfsc	indf2,6,c
 13345  00416A  0E01               	movlw	1
 13346  00416C  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 13347                           
 13348                           ; BSR set to: 0
 13349                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 13350  00416E  0E04               	movlw	4
 13351  004170  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 13352                           
 13353                           ; BSR set to: 0
 13354                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 13355  004172  0E08               	movlw	8
 13356  004174  19CC               	xorwf	_USBDeviceState& (0+255),w,b
 13357  004176  A4D8               	btfss	status,2,c
 13358  004178  D00D               	goto	l1794
 13359                           
 13360                           ; BSR set to: 0
 13361                           ;usb_device.c: 2622: {
 13362                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 13363  00417A  0104               	movlb	4	; () banked
 13364  00417C  5132               	movf	50,w,b	;volatile
 13365  00417E  0B7F               	andlw	127
 13366  004180  010F               	movlb	15	; () banked
 13367  004182  6F38               	movwf	56,b	;volatile
 13368                           
 13369                           ; BSR set to: 15
 13370                           ;usb_device.c: 2624: if(UADDR != 0u)
 13371  004184  5138               	movf	56,w,b	;volatile
 13372  004186  B4D8               	btfsc	status,2,c
 13373  004188  D002               	goto	l1793
 13374                           
 13375                           ; BSR set to: 15
 13376                           ;usb_device.c: 2625: {
 13377                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 13378  00418A  0E10               	movlw	16
 13379  00418C  D001               	goto	L11
 13380  00418E                     l1793:
 13381                           
 13382                           ;usb_device.c: 2628: else
 13383                           ;usb_device.c: 2629: {
 13384                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 13385                           
 13386                           ; BSR set to: 0
 13387  00418E  0E04               	movlw	4
 13388  004190                     L11:
 13389  004190  0100               	movlb	0	; () banked
 13390  004192  6FCC               	movwf	_USBDeviceState& (0+255),b
 13391  004194                     l1794:
 13392                           
 13393                           ; BSR set to: 0
 13394                           ;usb_device.c: 2631: }
 13395                           ;usb_device.c: 2632: }
 13396                           ;usb_device.c: 2635: if(controlTransferState == 1)
 13397                           
 13398                           ; BSR set to: 0
 13399                           
 13400                           ; BSR set to: 0
 13401  004194  05CA               	decf	_controlTransferState& (0+255),w,b
 13402  004196  A4D8               	btfss	status,2,c
 13403  004198  D03B               	goto	l1795
 13404                           
 13405                           ; BSR set to: 0
 13406                           ;usb_device.c: 2636: {
 13407                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 13408  00419A  EE20 F002          	lfsr	2,2
 13409  00419E  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13410  0041A0  26D9               	addwf	fsr2l,f,c
 13411  0041A2  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13412  0041A4  22DA               	addwfc	fsr2h,f,c
 13413  0041A6  0E38               	movlw	56
 13414  0041A8  6EDE               	movwf	postinc2,c
 13415  0041AA  0E04               	movlw	4
 13416  0041AC  6EDD               	movwf	postdec2,c
 13417                           
 13418                           ; BSR set to: 0
 13419                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 13420  0041AE  EC47  F01C         	call	_USBCtrlTrfTxService	;wreg free
 13421                           
 13422                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 13423  0041B2  0E02               	movlw	2
 13424  0041B4  0100               	movlb	0	; () banked
 13425  0041B6  19CB               	xorwf	_shortPacketStatus& (0+255),w,b
 13426  0041B8  A4D8               	btfss	status,2,c
 13427  0041BA  D00D               	goto	l1796
 13428                           
 13429                           ; BSR set to: 0
 13430                           ;usb_device.c: 2645: {
 13431                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 13432  0041BC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13433  0041C0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13434  0041C4  0E04               	movlw	4
 13435  0041C6  6EDF               	movwf	indf2,c
 13436                           
 13437                           ; BSR set to: 0
 13438                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13439  0041C8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13440  0041CC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13441  0041D0  0E00               	movlw	0
 13442  0041D2  8EDB               	bsf	plusw2,7,c
 13443                           
 13444                           ;usb_device.c: 2650: }
 13445  0041D4  0012               	return	
 13446  0041D6                     l1796:
 13447                           
 13448                           ; BSR set to: 0
 13449                           ;usb_device.c: 2651: else
 13450                           ;usb_device.c: 2652: {
 13451                           ;usb_device.c: 2653: if(lastDTS == 0)
 13452                           
 13453                           ; BSR set to: 0
 13454  0041D6  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13455  0041D8  A4D8               	btfss	status,2,c
 13456  0041DA  D00D               	goto	l1798
 13457                           
 13458                           ; BSR set to: 0
 13459                           ;usb_device.c: 2654: {
 13460                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13461  0041DC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13462  0041E0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13463  0041E4  0E48               	movlw	72
 13464  0041E6  6EDF               	movwf	indf2,c
 13465                           
 13466                           ; BSR set to: 0
 13467                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13468  0041E8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13469  0041EC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13470  0041F0  0E00               	movlw	0
 13471  0041F2  8EDB               	bsf	plusw2,7,c
 13472                           
 13473                           ;usb_device.c: 2657: }
 13474  0041F4  0012               	return	
 13475  0041F6                     l1798:
 13476                           
 13477                           ; BSR set to: 0
 13478                           ;usb_device.c: 2658: else
 13479                           ;usb_device.c: 2659: {
 13480                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13481                           
 13482                           ; BSR set to: 0
 13483  0041F6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13484  0041FA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13485  0041FE  0E08               	movlw	8
 13486  004200  6EDF               	movwf	indf2,c
 13487                           
 13488                           ; BSR set to: 0
 13489                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13490  004202  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13491  004206  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13492  00420A  0E00               	movlw	0
 13493  00420C  8EDB               	bsf	plusw2,7,c
 13494                           
 13495                           ; BSR set to: 0
 13496                           ;usb_device.c: 2662: }
 13497                           ;usb_device.c: 2663: }
 13498                           ;usb_device.c: 2664: }
 13499                           
 13500                           ; BSR set to: 0
 13501  00420E  0012               	return	
 13502  004210                     l1795:
 13503                           
 13504                           ; BSR set to: 0
 13505                           ;usb_device.c: 2665: else
 13506                           ;usb_device.c: 2666: {
 13507                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13508  004210  0101               	movlb	1	; () banked
 13509  004212  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13510                           
 13511                           ; BSR set to: 1
 13512                           ;usb_device.c: 2675: }
 13513                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13514                           
 13515                           ; BSR set to: 1
 13516  004214  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13517                           
 13518                           ; BSR set to: 1
 13519                           ;usb_device.c: 2677: }
 13520                           ;usb_device.c: 2679: controlTransferState = 0;
 13521                           
 13522                           ; BSR set to: 1
 13523  004216  0E00               	movlw	0
 13524  004218  0100               	movlb	0	; () banked
 13525  00421A  6FCA               	movwf	_controlTransferState& (0+255),b
 13526  00421C  0012               	return	
 13527  00421E                     __end_of_USBCtrlTrfInHandler:
 13528                           	opt stack 0
 13529                           tosu	equ	0xFFF
 13530                           tosh	equ	0xFFE
 13531                           tosl	equ	0xFFD
 13532                           pclath	equ	0xFFA
 13533                           tblptru	equ	0xFF8
 13534                           tblptrh	equ	0xFF7
 13535                           tblptrl	equ	0xFF6
 13536                           tablat	equ	0xFF5
 13537                           prodh	equ	0xFF4
 13538                           prodl	equ	0xFF3
 13539                           intcon	equ	0xFF2
 13540                           intcon2	equ	0xFF1
 13541                           intcon3	equ	0xFF0
 13542                           indf0	equ	0xFEF
 13543                           postinc0	equ	0xFEE
 13544                           plusw0	equ	0xFEB
 13545                           fsr0h	equ	0xFEA
 13546                           fsr0l	equ	0xFE9
 13547                           wreg	equ	0xFE8
 13548                           indf1	equ	0xFE7
 13549                           postinc1	equ	0xFE6
 13550                           postdec1	equ	0xFE5
 13551                           fsr1h	equ	0xFE2
 13552                           fsr1l	equ	0xFE1
 13553                           indf2	equ	0xFDF
 13554                           postinc2	equ	0xFDE
 13555                           postdec2	equ	0xFDD
 13556                           plusw2	equ	0xFDB
 13557                           fsr2h	equ	0xFDA
 13558                           fsr2l	equ	0xFD9
 13559                           status	equ	0xFD8
 13560                           
 13561 ;; *************** function _USBCtrlTrfTxService *****************
 13562 ;; Defined at:
 13563 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13564 ;; Parameters:    Size  Location     Type
 13565 ;;		None
 13566 ;; Auto vars:     Size  Location     Type
 13567 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13568 ;; Return value:  Size  Location     Type
 13569 ;;                  1    wreg      void 
 13570 ;; Registers used:
 13571 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13572 ;; Tracked objects:
 13573 ;;		On entry : 0/0
 13574 ;;		On exit  : 0/0
 13575 ;;		Unchanged: 0/0
 13576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13578 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13580 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13581 ;;Total ram usage:        1 bytes
 13582 ;; Hardware stack levels used:    1
 13583 ;; Hardware stack levels required when called:   11
 13584 ;; This function calls:
 13585 ;;		Nothing
 13586 ;; This function is called by:
 13587 ;;		_USBCtrlEPAllowDataStage
 13588 ;;		_USBCtrlTrfInHandler
 13589 ;; This function uses a non-reentrant model
 13590 ;;
 13591                           
 13592                           	psect	text53
 13593  00388E                     __ptext53:
 13594                           	opt stack 0
 13595  00388E                     _USBCtrlTrfTxService:
 13596                           	opt stack 11
 13597                           
 13598                           ;usb_device.c: 1791: uint8_t byteToSend;
 13599                           ;usb_device.c: 1795: byteToSend = 8;
 13600                           
 13601                           ; BSR set to: 0
 13602                           ;incstack = 0
 13603  00388E  0E08               	movlw	8
 13604  003890  0100               	movlb	0	; () banked
 13605  003892  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13606                           
 13607                           ; BSR set to: 0
 13608                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13609  003894  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13610  003896  E110               	bnz	l12668
 13611  003898  0E08               	movlw	8
 13612  00389A  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13613  00389C  B0D8               	btfsc	status,0,c
 13614  00389E  D00C               	goto	l1700
 13615                           
 13616                           ; BSR set to: 0
 13617                           ;usb_device.c: 1797: {
 13618                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13619  0038A0  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13620                           
 13621                           ; BSR set to: 0
 13622                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13623  0038A4  51CB               	movf	_shortPacketStatus& (0+255),w,b
 13624  0038A6  A4D8               	btfss	status,2,c
 13625  0038A8  D002               	goto	l1698
 13626                           
 13627                           ; BSR set to: 0
 13628                           ;usb_device.c: 1806: {
 13629                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13630  0038AA  0E01               	movlw	1
 13631  0038AC  D004               	goto	L12
 13632  0038AE                     l1698:
 13633                           
 13634                           ; BSR set to: 0
 13635                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13636                           
 13637                           ; BSR set to: 0
 13638  0038AE  05CB               	decf	_shortPacketStatus& (0+255),w,b
 13639  0038B0  A4D8               	btfss	status,2,c
 13640  0038B2  D002               	goto	l1700
 13641                           
 13642                           ; BSR set to: 0
 13643                           ;usb_device.c: 1810: {
 13644                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13645  0038B4  0E02               	movlw	2
 13646  0038B6                     L12:
 13647  0038B6  6FCB               	movwf	_shortPacketStatus& (0+255),b
 13648  0038B8                     l1700:
 13649  0038B8                     l12668:
 13650                           
 13651                           ; BSR set to: 0
 13652                           ;usb_device.c: 1812: }
 13653                           ;usb_device.c: 1813: }
 13654                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13655  0038B8  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13656  0038BA  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13657  0038BC  0E00               	movlw	0
 13658  0038BE  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13659                           
 13660                           ; BSR set to: 0
 13661                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13662  0038C0  EE20 F001          	lfsr	2,1
 13663  0038C4  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13664  0038C6  26D9               	addwf	fsr2l,f,c
 13665  0038C8  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13666  0038CA  22DA               	addwfc	fsr2h,f,c
 13667  0038CC  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13668                           
 13669                           ; BSR set to: 0
 13670                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13671  0038D0  0E38               	movlw	56
 13672  0038D2  0102               	movlb	2	; () banked
 13673  0038D4  6FD4               	movwf	_pDst& (0+255),b
 13674  0038D6  0E04               	movlw	4
 13675  0038D8  6FD5               	movwf	(_pDst+1)& (0+255),b
 13676                           
 13677                           ; BSR set to: 2
 13678                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13679  0038DA  0100               	movlb	0	; () banked
 13680  0038DC  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13681  0038DE  D01E               	goto	l1702
 13682  0038E0  D03E               	goto	l1706
 13683  0038E2                     
 13684                           ; BSR set to: 0
 13685                           ;usb_device.c: 1830: {
 13686                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13687                           
 13688                           ; BSR set to: 0
 13689  0038E2  C0B0  FFF6         	movff	_inPipes,tblptrl
 13690  0038E6  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13691  0038EA  6AF8               	clrf	tblptru,c
 13692  0038EC  C2D4  FFD9         	movff	_pDst,fsr2l
 13693  0038F0  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13694  0038F4  0E0E               	movlw	(high __ramtop+-1)
 13695  0038F6  64F7               	cpfsgt	tblptrh,c
 13696  0038F8  D003               	bra	u11317
 13697  0038FA  0008               	tblrd		*
 13698  0038FC  50F5               	movf	tablat,w,c
 13699  0038FE  D005               	bra	u11310
 13700  003900                     u11317:
 13701  003900  CFF6 FFE9          	movff	tblptrl,fsr0l
 13702  003904  CFF7 FFEA          	movff	tblptrh,fsr0h
 13703  003908  50EF               	movf	indf0,w,c
 13704  00390A                     u11310:
 13705  00390A  6EDF               	movwf	indf2,c
 13706  00390C  0100               	movlb	0	; () banked
 13707  00390E  4BB0               	infsnz	_inPipes& (0+255),f,b
 13708  003910  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13709                           
 13710                           ; BSR set to: 0
 13711  003912  0102               	movlb	2	; () banked
 13712  003914  4BD4               	infsnz	_pDst& (0+255),f,b
 13713  003916  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13714                           
 13715                           ; BSR set to: 2
 13716                           ;usb_device.c: 1832: byteToSend--;
 13717  003918  0100               	movlb	0	; () banked
 13718  00391A  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13719  00391C                     l1702:
 13720                           
 13721                           ; BSR set to: 0
 13722                           
 13723                           ; BSR set to: 0
 13724  00391C  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13725  00391E  B4D8               	btfsc	status,2,c
 13726  003920  0012               	return	
 13727  003922  D7DF               	goto	l1703
 13728  003924                     
 13729                           ; BSR set to: 0
 13730                           ;usb_device.c: 1838: {
 13731                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13732                           
 13733                           ; BSR set to: 0
 13734  003924  C0B0  FFF6         	movff	_inPipes,tblptrl
 13735  003928  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13736  00392C  6AF8               	clrf	tblptru,c
 13737  00392E  C2D4  FFD9         	movff	_pDst,fsr2l
 13738  003932  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13739  003936  0E0E               	movlw	(high __ramtop+-1)
 13740  003938  64F7               	cpfsgt	tblptrh,c
 13741  00393A  D003               	bra	u11337
 13742  00393C  0008               	tblrd		*
 13743  00393E  50F5               	movf	tablat,w,c
 13744  003940  D005               	bra	u11330
 13745  003942                     u11337:
 13746  003942  CFF6 FFE9          	movff	tblptrl,fsr0l
 13747  003946  CFF7 FFEA          	movff	tblptrh,fsr0h
 13748  00394A  50EF               	movf	indf0,w,c
 13749  00394C                     u11330:
 13750  00394C  6EDF               	movwf	indf2,c
 13751  00394E  0100               	movlb	0	; () banked
 13752  003950  4BB0               	infsnz	_inPipes& (0+255),f,b
 13753  003952  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13754                           
 13755                           ; BSR set to: 0
 13756  003954  0102               	movlb	2	; () banked
 13757  003956  4BD4               	infsnz	_pDst& (0+255),f,b
 13758  003958  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13759                           
 13760                           ; BSR set to: 2
 13761                           ;usb_device.c: 1840: byteToSend--;
 13762  00395A  0100               	movlb	0	; () banked
 13763  00395C  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13764  00395E                     l1706:
 13765                           
 13766                           ; BSR set to: 0
 13767                           
 13768                           ; BSR set to: 0
 13769  00395E  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13770  003960  B4D8               	btfsc	status,2,c
 13771  003962  0012               	return	
 13772  003964  D7DF               	goto	l1707
 13773  003966                     __end_of_USBCtrlTrfTxService:
 13774                           	opt stack 0
 13775                           tosu	equ	0xFFF
 13776                           tosh	equ	0xFFE
 13777                           tosl	equ	0xFFD
 13778                           pclath	equ	0xFFA
 13779                           tblptru	equ	0xFF8
 13780                           tblptrh	equ	0xFF7
 13781                           tblptrl	equ	0xFF6
 13782                           tablat	equ	0xFF5
 13783                           prodh	equ	0xFF4
 13784                           prodl	equ	0xFF3
 13785                           intcon	equ	0xFF2
 13786                           intcon2	equ	0xFF1
 13787                           intcon3	equ	0xFF0
 13788                           indf0	equ	0xFEF
 13789                           postinc0	equ	0xFEE
 13790                           plusw0	equ	0xFEB
 13791                           fsr0h	equ	0xFEA
 13792                           fsr0l	equ	0xFE9
 13793                           wreg	equ	0xFE8
 13794                           indf1	equ	0xFE7
 13795                           postinc1	equ	0xFE6
 13796                           postdec1	equ	0xFE5
 13797                           fsr1h	equ	0xFE2
 13798                           fsr1l	equ	0xFE1
 13799                           indf2	equ	0xFDF
 13800                           postinc2	equ	0xFDE
 13801                           postdec2	equ	0xFDD
 13802                           plusw2	equ	0xFDB
 13803                           fsr2h	equ	0xFDA
 13804                           fsr2l	equ	0xFD9
 13805                           status	equ	0xFD8
 13806                           
 13807 ;; *************** function _CDCTxService *****************
 13808 ;; Defined at:
 13809 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13810 ;; Parameters:    Size  Location     Type
 13811 ;;		None
 13812 ;; Auto vars:     Size  Location     Type
 13813 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13814 ;;  i               1   36[BANK0 ] unsigned char 
 13815 ;; Return value:  Size  Location     Type
 13816 ;;                  1    wreg      void 
 13817 ;; Registers used:
 13818 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13819 ;; Tracked objects:
 13820 ;;		On entry : 0/0
 13821 ;;		On exit  : 0/0
 13822 ;;		Unchanged: 0/0
 13823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13825 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13827 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13828 ;;Total ram usage:        2 bytes
 13829 ;; Hardware stack levels used:    1
 13830 ;; Hardware stack levels required when called:   12
 13831 ;; This function calls:
 13832 ;;		_USBTransferOnePacket
 13833 ;; This function is called by:
 13834 ;;		_UsbDevice_MainTask
 13835 ;; This function uses a non-reentrant model
 13836 ;;
 13837                           
 13838                           	psect	text54
 13839  002B0A                     __ptext54:
 13840                           	opt stack 0
 13841  002B0A                     _CDCTxService:
 13842                           	opt stack 15
 13843                           
 13844                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13845                           ;usb_device_cdc.c: 842: uint8_t i;
 13846                           ;usb_device_cdc.c: 844: ;
 13847                           ;usb_device_cdc.c: 846: {};
 13848                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13849                           
 13850                           ; BSR set to: 0
 13851                           ;incstack = 0
 13852  002B0A  0101               	movlb	1	; () banked
 13853  002B0C  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13854  002B0E  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13855  002B10  B4D8               	btfsc	status,2,c
 13856  002B12  D006               	goto	l1952
 13857                           
 13858                           ; BSR set to: 1
 13859  002B14  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13860  002B18  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13861  002B1C  BEDF               	btfsc	indf2,7,c
 13862  002B1E  0012               	return	
 13863  002B20                     l1952:
 13864                           
 13865                           ; BSR set to: 1
 13866                           ;usb_device_cdc.c: 852: }
 13867                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13868                           
 13869                           ; BSR set to: 1
 13870  002B20  0E03               	movlw	3
 13871  002B22  0100               	movlb	0	; () banked
 13872  002B24  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13873  002B26  A4D8               	btfss	status,2,c
 13874  002B28  D002               	goto	l1954
 13875                           
 13876                           ; BSR set to: 0
 13877                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13878  002B2A  0E00               	movlw	0
 13879  002B2C  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13880  002B2E                     l1954:
 13881                           
 13882                           ; BSR set to: 0
 13883                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13884  002B2E  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13885  002B30  B4D8               	btfsc	status,2,c
 13886  002B32  0012               	return	
 13887                           
 13888                           ; BSR set to: 0
 13889                           ;usb_device_cdc.c: 869: }
 13890                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13891                           
 13892                           ; BSR set to: 0
 13893                           
 13894                           ; BSR set to: 0
 13895                           ;usb_device_cdc.c: 866: {
 13896                           ;usb_device_cdc.c: 867: ;
 13897                           ;usb_device_cdc.c: 868: return;
 13898  002B34  0E02               	movlw	2
 13899  002B36  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13900  002B38  A4D8               	btfss	status,2,c
 13901  002B3A  D013               	goto	l1956
 13902                           
 13903                           ; BSR set to: 0
 13904                           ;usb_device_cdc.c: 875: {
 13905                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13906  002B3C  0E01               	movlw	1
 13907  002B3E  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13908  002B40  0E00               	movlw	0
 13909  002B42  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13910  002B44  0E00               	movlw	0
 13911  002B46  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13912  002B48  0E00               	movlw	0
 13913  002B4A  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13914  002B4C  0E02               	movlw	2
 13915  002B4E  EC0F  F021         	call	_USBTransferOnePacket
 13916  002B52  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13917  002B56  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13918                           
 13919                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13920  002B5A  0E03               	movlw	3
 13921  002B5C  0100               	movlb	0	; () banked
 13922  002B5E  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13923                           
 13924                           ;usb_device_cdc.c: 879: }
 13925  002B60  0012               	return	
 13926  002B62                     l1956:
 13927                           
 13928                           ; BSR set to: 0
 13929                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13930                           
 13931                           ; BSR set to: 0
 13932  002B62  05C5               	decf	_cdc_trf_state& (0+255),w,b
 13933  002B64  A4D8               	btfss	status,2,c
 13934  002B66  0012               	return	
 13935                           
 13936                           ; BSR set to: 0
 13937                           ;usb_device_cdc.c: 881: {
 13938                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13939  002B68  0E40               	movlw	64
 13940  002B6A  65C4               	cpfsgt	_cdc_tx_len& (0+255),b
 13941  002B6C  D003               	goto	l1959
 13942                           
 13943                           ; BSR set to: 0
 13944                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13945  002B6E  0E40               	movlw	64
 13946  002B70  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13947  002B72  D002               	goto	l1960
 13948  002B74                     l1959:
 13949                           
 13950                           ; BSR set to: 0
 13951                           ;usb_device_cdc.c: 887: else
 13952                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13953  002B74  C0C4  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13954  002B78                     l1960:
 13955                           
 13956                           ; BSR set to: 0
 13957                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13958                           
 13959                           ; BSR set to: 0
 13960  002B78  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13961  002B7A  0800               	sublw	0
 13962  002B7C  25C4               	addwf	_cdc_tx_len& (0+255),w,b
 13963  002B7E  6FC4               	movwf	_cdc_tx_len& (0+255),b
 13964                           
 13965                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13966  002B80  0EB6               	movlw	low _cdc_data_tx
 13967  002B82  0102               	movlb	2	; () banked
 13968  002B84  6FC8               	movwf	_pCDCDst& (0+255),b
 13969  002B86  0E07               	movlw	high _cdc_data_tx
 13970  002B88  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13971                           
 13972                           ; BSR set to: 2
 13973                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13974  002B8A  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13975                           
 13976                           ; BSR set to: 2
 13977                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13978  002B8E  0101               	movlb	1	; () banked
 13979  002B90  51DF               	movf	_cdc_mem_type& (0+255),w,b
 13980  002B92  B4D8               	btfsc	status,2,c
 13981  002B94  D01D               	goto	l1962
 13982  002B96  D03D               	goto	l1966
 13983  002B98                     
 13984                           ;usb_device_cdc.c: 901: {
 13985                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13986                           
 13987                           ; BSR set to: 1
 13988  002B98  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13989  002B9C  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13990  002BA0  6AF8               	clrf	tblptru,c
 13991  002BA2  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13992  002BA6  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13993  002BAA  0E0E               	movlw	(high __ramtop+-1)
 13994  002BAC  64F7               	cpfsgt	tblptrh,c
 13995  002BAE  D003               	bra	u15327
 13996  002BB0  0008               	tblrd		*
 13997  002BB2  50F5               	movf	tablat,w,c
 13998  002BB4  D005               	bra	u15320
 13999  002BB6                     u15327:
 14000  002BB6  CFF6 FFE9          	movff	tblptrl,fsr0l
 14001  002BBA  CFF7 FFEA          	movff	tblptrh,fsr0h
 14002  002BBE  50EF               	movf	indf0,w,c
 14003  002BC0                     u15320:
 14004  002BC0  6EDF               	movwf	indf2,c
 14005                           
 14006                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 14007  002BC2  0102               	movlb	2	; () banked
 14008  002BC4  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 14009  002BC6  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 14010                           
 14011                           ; BSR set to: 2
 14012                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 14013  002BC8  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 14014  002BCA  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 14015                           
 14016                           ; BSR set to: 2
 14017                           ;usb_device_cdc.c: 905: i--;
 14018  002BCC  0100               	movlb	0	; () banked
 14019  002BCE  0784               	decf	CDCTxService@i& (0+255),f,b
 14020  002BD0                     l1962:
 14021                           
 14022                           ; BSR set to: 0
 14023  002BD0  0100               	movlb	0	; () banked
 14024  002BD2  5184               	movf	CDCTxService@i& (0+255),w,b
 14025  002BD4  B4D8               	btfsc	status,2,c
 14026  002BD6  D021               	goto	u15350
 14027  002BD8  D7DF               	goto	l1963
 14028  002BDA                     
 14029                           ; BSR set to: 0
 14030                           ;usb_device_cdc.c: 911: {
 14031                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 14032                           
 14033                           ; BSR set to: 0
 14034  002BDA  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 14035  002BDE  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 14036  002BE2  6AF8               	clrf	tblptru,c
 14037  002BE4  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 14038  002BE8  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 14039  002BEC  0E0E               	movlw	(high __ramtop+-1)
 14040  002BEE  64F7               	cpfsgt	tblptrh,c
 14041  002BF0  D003               	bra	u15347
 14042  002BF2  0008               	tblrd		*
 14043  002BF4  50F5               	movf	tablat,w,c
 14044  002BF6  D005               	bra	u15340
 14045  002BF8                     u15347:
 14046  002BF8  CFF6 FFE9          	movff	tblptrl,fsr0l
 14047  002BFC  CFF7 FFEA          	movff	tblptrh,fsr0h
 14048  002C00  50EF               	movf	indf0,w,c
 14049  002C02                     u15340:
 14050  002C02  6EDF               	movwf	indf2,c
 14051                           
 14052                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 14053  002C04  0102               	movlb	2	; () banked
 14054  002C06  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 14055  002C08  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 14056                           
 14057                           ; BSR set to: 2
 14058                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 14059  002C0A  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 14060  002C0C  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 14061                           
 14062                           ; BSR set to: 2
 14063                           ;usb_device_cdc.c: 915: i--;
 14064  002C0E  0100               	movlb	0	; () banked
 14065  002C10  0784               	decf	CDCTxService@i& (0+255),f,b
 14066  002C12                     l1966:
 14067                           
 14068                           ; BSR set to: 0
 14069  002C12  0100               	movlb	0	; () banked
 14070  002C14  5184               	movf	CDCTxService@i& (0+255),w,b
 14071  002C16  A4D8               	btfss	status,2,c
 14072  002C18  D7E0               	goto	l1967
 14073  002C1A                     u15350:
 14074                           
 14075                           ; BSR set to: 0
 14076                           ;usb_device_cdc.c: 916: }
 14077                           ;usb_device_cdc.c: 917: }
 14078                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 14079                           
 14080                           ; BSR set to: 0
 14081                           
 14082                           ; BSR set to: 0
 14083  002C1A  51C4               	movf	_cdc_tx_len& (0+255),w,b
 14084  002C1C  A4D8               	btfss	status,2,c
 14085  002C1E  D008               	goto	l1971
 14086                           
 14087                           ; BSR set to: 0
 14088                           ;usb_device_cdc.c: 924: {
 14089                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 14090  002C20  0E40               	movlw	64
 14091  002C22  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 14092  002C24  A4D8               	btfss	status,2,c
 14093  002C26  D002               	goto	l1970
 14094                           
 14095                           ; BSR set to: 0
 14096                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 14097  002C28  0E02               	movlw	2
 14098  002C2A  D001               	goto	L13
 14099  002C2C                     l1970:
 14100                           
 14101                           ; BSR set to: 0
 14102                           ;usb_device_cdc.c: 927: else
 14103                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 14104                           
 14105                           ; BSR set to: 0
 14106  002C2C  0E03               	movlw	3
 14107  002C2E                     L13:
 14108  002C2E  6FC5               	movwf	_cdc_trf_state& (0+255),b
 14109  002C30                     l1971:
 14110                           
 14111                           ; BSR set to: 0
 14112                           ;usb_device_cdc.c: 929: }
 14113                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 14114                           
 14115                           ; BSR set to: 0
 14116                           
 14117                           ; BSR set to: 0
 14118  002C30  0E01               	movlw	1
 14119  002C32  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 14120  002C34  0EB6               	movlw	low _cdc_data_tx
 14121  002C36  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 14122  002C38  0E07               	movlw	high _cdc_data_tx
 14123  002C3A  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 14124  002C3C  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 14125  002C40  0E02               	movlw	2
 14126  002C42  EC0F  F021         	call	_USBTransferOnePacket
 14127  002C46  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 14128  002C4A  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 14129  002C4E  0012               	return	
 14130  002C50                     __end_of_CDCTxService:
 14131                           	opt stack 0
 14132                           tosu	equ	0xFFF
 14133                           tosh	equ	0xFFE
 14134                           tosl	equ	0xFFD
 14135                           pclath	equ	0xFFA
 14136                           tblptru	equ	0xFF8
 14137                           tblptrh	equ	0xFF7
 14138                           tblptrl	equ	0xFF6
 14139                           tablat	equ	0xFF5
 14140                           prodh	equ	0xFF4
 14141                           prodl	equ	0xFF3
 14142                           intcon	equ	0xFF2
 14143                           intcon2	equ	0xFF1
 14144                           intcon3	equ	0xFF0
 14145                           indf0	equ	0xFEF
 14146                           postinc0	equ	0xFEE
 14147                           plusw0	equ	0xFEB
 14148                           fsr0h	equ	0xFEA
 14149                           fsr0l	equ	0xFE9
 14150                           wreg	equ	0xFE8
 14151                           indf1	equ	0xFE7
 14152                           postinc1	equ	0xFE6
 14153                           postdec1	equ	0xFE5
 14154                           fsr1h	equ	0xFE2
 14155                           fsr1l	equ	0xFE1
 14156                           indf2	equ	0xFDF
 14157                           postinc2	equ	0xFDE
 14158                           postdec2	equ	0xFDD
 14159                           plusw2	equ	0xFDB
 14160                           fsr2h	equ	0xFDA
 14161                           fsr2l	equ	0xFD9
 14162                           status	equ	0xFD8
 14163                           
 14164 ;; *************** function _Term_MainSm *****************
 14165 ;; Defined at:
 14166 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14167 ;; Parameters:    Size  Location     Type
 14168 ;;		None
 14169 ;; Auto vars:     Size  Location     Type
 14170 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 14171 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 14172 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 14173 ;;  FwkBuildYear    4    0        unsigned char [4]
 14174 ;;  FwkBuildMont    4    0        unsigned char [4]
 14175 ;;  FwkBuildDayS    4    0        unsigned char [4]
 14176 ;; Return value:  Size  Location     Type
 14177 ;;                  1    wreg      void 
 14178 ;; Registers used:
 14179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14180 ;; Tracked objects:
 14181 ;;		On entry : 0/0
 14182 ;;		On exit  : 0/0
 14183 ;;		Unchanged: 0/0
 14184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14186 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14188 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14189 ;;Total ram usage:       12 bytes
 14190 ;; Hardware stack levels used:    1
 14191 ;; Hardware stack levels required when called:   16
 14192 ;; This function calls:
 14193 ;;		_OsTmr_GetTimerStatus
 14194 ;;		_OsTmr_StartTimer
 14195 ;;		_Terminal
 14196 ;;		_memset
 14197 ;;		_putUSBUSART
 14198 ;;		_sprintf
 14199 ;;		_strcat
 14200 ;;		_strcpy
 14201 ;;		_strlen
 14202 ;;		_utoa
 14203 ;; This function is called by:
 14204 ;;		_Term_MainTask
 14205 ;; This function uses a non-reentrant model
 14206 ;;
 14207                           
 14208                           	psect	text55
 14209  0013A8                     __ptext55:
 14210                           	opt stack 0
 14211  0013A8                     _Term_MainSm:
 14212                           	opt stack 11
 14213                           
 14214                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 14215                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 14216                           ;term.c: 711: static UINT8 Data[50];
 14217                           ;term.c: 712: UINT8 FwkMajorStr[4];
 14218                           ;term.c: 713: UINT8 FwkMinorStr[4];
 14219                           ;term.c: 714: UINT8 FwkBuildStr[4];
 14220                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 14221                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 14222                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 14223                           ;term.c: 719: switch (TermMainSmState)
 14224                           
 14225                           ;incstack = 0
 14226  0013A8  D133               	goto	l2456
 14227  0013AA                     
 14228                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 14229  0013AA  0ECF               	movlw	low Term_MainSm@TermDelay
 14230  0013AC  0100               	movlb	0	; () banked
 14231  0013AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 14232  0013B0  0E03               	movlw	high Term_MainSm@TermDelay
 14233  0013B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 14234  0013B4  0ED0               	movlw	208
 14235  0013B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 14236  0013B8  0E07               	movlw	7
 14237  0013BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 14238  0013BC  0E00               	movlw	0
 14239  0013BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 14240  0013C0  0E00               	movlw	0
 14241  0013C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 14242  0013C4  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 14243                           
 14244                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 14245  0013C8  0E01               	movlw	1
 14246  0013CA  0102               	movlb	2	; () banked
 14247  0013CC  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14248                           
 14249                           ;term.c: 726: break;
 14250  0013CE  0012               	return	
 14251  0013D0                     
 14252                           ; BSR set to: 2
 14253                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 14254                           
 14255                           ; BSR set to: 2
 14256  0013D0  0ECF               	movlw	low Term_MainSm@TermDelay
 14257  0013D2  0100               	movlb	0	; () banked
 14258  0013D4  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 14259  0013D6  0E03               	movlw	high Term_MainSm@TermDelay
 14260  0013D8  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 14261  0013DA  ECC6  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 14262  0013DE  06E8               	decf	wreg,f,c
 14263  0013E0  A4D8               	btfss	status,2,c
 14264  0013E2  0012               	return	
 14265                           
 14266                           ;term.c: 731: {
 14267                           ;term.c: 733: TermMainSmState = Term_InitState;
 14268  0013E4  0E02               	movlw	2
 14269  0013E6  0102               	movlb	2	; () banked
 14270  0013E8  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14271                           
 14272                           ; BSR set to: 2
 14273                           ;term.c: 734: }
 14274                           ;term.c: 735: break;
 14275  0013EA  0012               	return	
 14276  0013EC                     
 14277                           ; BSR set to: 2
 14278                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 14279                           
 14280                           ; BSR set to: 2
 14281  0013EC  0E1F               	movlw	31
 14282  0013EE  0100               	movlb	0	; () banked
 14283  0013F0  65CC               	cpfsgt	_USBDeviceState& (0+255),b
 14284  0013F2  0012               	return	
 14285                           
 14286                           ; BSR set to: 0
 14287  0013F4  B265               	btfsc	3941,1,c	;volatile
 14288  0013F6  0012               	return	
 14289                           
 14290                           ; BSR set to: 0
 14291                           ;term.c: 743: else
 14292                           ;term.c: 744: {
 14293                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 14294                           
 14295                           ; BSR set to: 0
 14296                           
 14297                           ; BSR set to: 0
 14298                           ;term.c: 740: {
 14299                           ;term.c: 742: }
 14300  0013F8  0E03               	movlw	3
 14301  0013FA  0102               	movlb	2	; () banked
 14302  0013FC  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14303                           
 14304                           ; BSR set to: 2
 14305                           ;term.c: 747: }
 14306                           ;term.c: 748: break;
 14307  0013FE  0012               	return	
 14308  001400                     
 14309                           ; BSR set to: 2
 14310                           ;term.c: 752: if((cdc_trf_state == 0))
 14311                           
 14312                           ; BSR set to: 2
 14313  001400  0100               	movlb	0	; () banked
 14314  001402  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14315  001404  A4D8               	btfss	status,2,c
 14316  001406  0012               	return	
 14317                           
 14318                           ; BSR set to: 0
 14319                           ;term.c: 753: {
 14320                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 14321  001408  0E22               	movlw	low _Welcome
 14322  00140A  6F83               	movwf	putUSBUSART@data& (0+255),b
 14323  00140C  0EFD               	movlw	high _Welcome
 14324  00140E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14325  001410  0E88               	movlw	136
 14326  001412  6F85               	movwf	putUSBUSART@length& (0+255),b
 14327  001414  ECB6  F032         	call	_putUSBUSART	;wreg free
 14328                           
 14329                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 14330  001418  0E04               	movlw	4
 14331  00141A  0102               	movlb	2	; () banked
 14332  00141C  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14333                           
 14334                           ; BSR set to: 2
 14335                           ;term.c: 758: }
 14336                           ;term.c: 759: break;
 14337  00141E  0012               	return	
 14338  001420                     
 14339                           ; BSR set to: 2
 14340                           ;term.c: 763: if((cdc_trf_state == 0))
 14341                           
 14342                           ; BSR set to: 2
 14343  001420  0100               	movlb	0	; () banked
 14344  001422  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14345  001424  A4D8               	btfss	status,2,c
 14346  001426  0012               	return	
 14347                           
 14348                           ; BSR set to: 0
 14349                           ;term.c: 764: {
 14350                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 14351  001428  0E32               	movlw	low _MsgFormat
 14352  00142A  6F83               	movwf	putUSBUSART@data& (0+255),b
 14353  00142C  0EFC               	movlw	high _MsgFormat
 14354  00142E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14355  001430  0EEF               	movlw	239
 14356  001432  6F85               	movwf	putUSBUSART@length& (0+255),b
 14357  001434  ECB6  F032         	call	_putUSBUSART	;wreg free
 14358                           
 14359                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 14360  001438  0E05               	movlw	5
 14361  00143A  0102               	movlb	2	; () banked
 14362  00143C  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14363                           
 14364                           ; BSR set to: 2
 14365                           ;term.c: 769: }
 14366                           ;term.c: 770: break;
 14367  00143E  0012               	return	
 14368  001440                     
 14369                           ; BSR set to: 2
 14370                           ;term.c: 774: if((cdc_trf_state == 0))
 14371                           
 14372                           ; BSR set to: 2
 14373  001440  0100               	movlb	0	; () banked
 14374  001442  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14375  001444  A4D8               	btfss	status,2,c
 14376  001446  0012               	return	
 14377                           
 14378                           ; BSR set to: 0
 14379                           ;term.c: 775: {
 14380                           ;term.c: 777: memset(Data,0,50);
 14381  001448  0E6B               	movlw	low Term_MainSm@Data
 14382  00144A  6F7D               	movwf	memset@p1& (0+255),b
 14383  00144C  0E04               	movlw	high Term_MainSm@Data
 14384  00144E  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14385  001450  0E00               	movlw	0
 14386  001452  6F80               	movwf	(memset@c+1)& (0+255),b
 14387  001454  0E00               	movlw	0
 14388  001456  6F7F               	movwf	memset@c& (0+255),b
 14389  001458  0E00               	movlw	0
 14390  00145A  6F82               	movwf	(memset@n+1)& (0+255),b
 14391  00145C  0E32               	movlw	50
 14392  00145E  6F81               	movwf	memset@n& (0+255),b
 14393  001460  EC4B  F031         	call	_memset	;wreg free
 14394                           
 14395                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 14396  001464  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14397  001466  0100               	movlb	0	; () banked
 14398  001468  6F8A               	movwf	utoa@buf& (0+255),b
 14399  00146A  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14400  00146C  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14401  00146E  0E00               	movlw	0
 14402  001470  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14403  001472  0E01               	movlw	1
 14404  001474  6F8C               	movwf	utoa@val& (0+255),b
 14405  001476  0E00               	movlw	0
 14406  001478  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14407  00147A  0E0A               	movlw	10
 14408  00147C  6F8E               	movwf	utoa@base& (0+255),b
 14409  00147E  ECCC  F022         	call	_utoa	;wreg free
 14410                           
 14411                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 14412  001482  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14413  001484  0100               	movlb	0	; () banked
 14414  001486  6F8A               	movwf	utoa@buf& (0+255),b
 14415  001488  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14416  00148A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14417  00148C  0E00               	movlw	0
 14418  00148E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14419  001490  0E02               	movlw	2
 14420  001492  6F8C               	movwf	utoa@val& (0+255),b
 14421  001494  0E00               	movlw	0
 14422  001496  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14423  001498  0E0A               	movlw	10
 14424  00149A  6F8E               	movwf	utoa@base& (0+255),b
 14425  00149C  ECCC  F022         	call	_utoa	;wreg free
 14426                           
 14427                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 14428  0014A0  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14429  0014A2  0100               	movlb	0	; () banked
 14430  0014A4  6F8A               	movwf	utoa@buf& (0+255),b
 14431  0014A6  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14432  0014A8  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14433  0014AA  0E00               	movlw	0
 14434  0014AC  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14435  0014AE  0E00               	movlw	0
 14436  0014B0  6F8C               	movwf	utoa@val& (0+255),b
 14437  0014B2  0E00               	movlw	0
 14438  0014B4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14439  0014B6  0E0A               	movlw	10
 14440  0014B8  6F8E               	movwf	utoa@base& (0+255),b
 14441  0014BA  ECCC  F022         	call	_utoa	;wreg free
 14442                           
 14443                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 14444  0014BE  0E6B               	movlw	low Term_MainSm@Data
 14445  0014C0  0100               	movlb	0	; () banked
 14446  0014C2  6F7D               	movwf	strcpy@to& (0+255),b
 14447  0014C4  0E04               	movlw	high Term_MainSm@Data
 14448  0014C6  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14449  0014C8  0ED2               	movlw	low STR_23
 14450  0014CA  6F7F               	movwf	strcpy@from& (0+255),b
 14451  0014CC  0EFE               	movlw	high STR_23
 14452  0014CE  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14453  0014D0  EC1A  F031         	call	_strcpy	;wreg free
 14454                           
 14455                           ;term.c: 783: strcat(Data,FwkMajorStr);
 14456  0014D4  0E6B               	movlw	low Term_MainSm@Data
 14457  0014D6  0100               	movlb	0	; () banked
 14458  0014D8  6F7D               	movwf	strcat@to& (0+255),b
 14459  0014DA  0E04               	movlw	high Term_MainSm@Data
 14460  0014DC  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14461  0014DE  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14462  0014E0  6F7F               	movwf	strcat@from& (0+255),b
 14463  0014E2  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14464  0014E4  6F80               	movwf	(strcat@from+1)& (0+255),b
 14465  0014E6  EC4C  F02B         	call	_strcat	;wreg free
 14466                           
 14467                           ;term.c: 784: strcat(Data,".");
 14468  0014EA  0E6B               	movlw	low Term_MainSm@Data
 14469  0014EC  0100               	movlb	0	; () banked
 14470  0014EE  6F7D               	movwf	strcat@to& (0+255),b
 14471  0014F0  0E04               	movlw	high Term_MainSm@Data
 14472  0014F2  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14473  0014F4  0EF5               	movlw	low STR_24
 14474  0014F6  6F7F               	movwf	strcat@from& (0+255),b
 14475  0014F8  0EFF               	movlw	high STR_24
 14476  0014FA  6F80               	movwf	(strcat@from+1)& (0+255),b
 14477  0014FC  EC4C  F02B         	call	_strcat	;wreg free
 14478                           
 14479                           ;term.c: 785: strcat(Data,FwkMinorStr);
 14480  001500  0E6B               	movlw	low Term_MainSm@Data
 14481  001502  0100               	movlb	0	; () banked
 14482  001504  6F7D               	movwf	strcat@to& (0+255),b
 14483  001506  0E04               	movlw	high Term_MainSm@Data
 14484  001508  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14485  00150A  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14486  00150C  6F7F               	movwf	strcat@from& (0+255),b
 14487  00150E  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14488  001510  6F80               	movwf	(strcat@from+1)& (0+255),b
 14489  001512  EC4C  F02B         	call	_strcat	;wreg free
 14490                           
 14491                           ;term.c: 786: strcat(Data,".");
 14492  001516  0E6B               	movlw	low Term_MainSm@Data
 14493  001518  0100               	movlb	0	; () banked
 14494  00151A  6F7D               	movwf	strcat@to& (0+255),b
 14495  00151C  0E04               	movlw	high Term_MainSm@Data
 14496  00151E  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14497  001520  0EF5               	movlw	low STR_24
 14498  001522  6F7F               	movwf	strcat@from& (0+255),b
 14499  001524  0EFF               	movlw	high STR_24
 14500  001526  6F80               	movwf	(strcat@from+1)& (0+255),b
 14501  001528  EC4C  F02B         	call	_strcat	;wreg free
 14502                           
 14503                           ;term.c: 787: strcat(Data,FwkBuildStr);
 14504  00152C  0E6B               	movlw	low Term_MainSm@Data
 14505  00152E  0100               	movlb	0	; () banked
 14506  001530  6F7D               	movwf	strcat@to& (0+255),b
 14507  001532  0E04               	movlw	high Term_MainSm@Data
 14508  001534  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14509  001536  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14510  001538  6F7F               	movwf	strcat@from& (0+255),b
 14511  00153A  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14512  00153C  6F80               	movwf	(strcat@from+1)& (0+255),b
 14513  00153E  EC4C  F02B         	call	_strcat	;wreg free
 14514                           
 14515                           ;term.c: 788: strcat(Data,"\r\n");
 14516  001542  0E6B               	movlw	low Term_MainSm@Data
 14517  001544  0100               	movlb	0	; () banked
 14518  001546  6F7D               	movwf	strcat@to& (0+255),b
 14519  001548  0E04               	movlw	high Term_MainSm@Data
 14520  00154A  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14521  00154C  0E86               	movlw	low (STR_21+39)
 14522  00154E  6F7F               	movwf	strcat@from& (0+255),b
 14523  001550  0EFE               	movlw	high (STR_21+39)
 14524  001552  6F80               	movwf	(strcat@from+1)& (0+255),b
 14525  001554  EC4C  F02B         	call	_strcat	;wreg free
 14526                           
 14527                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 14528  001558  0E6B               	movlw	low Term_MainSm@Data
 14529  00155A  0100               	movlb	0	; () banked
 14530  00155C  6F83               	movwf	putUSBUSART@data& (0+255),b
 14531  00155E  0E04               	movlw	high Term_MainSm@Data
 14532  001560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14533  001562  0E6B               	movlw	low Term_MainSm@Data
 14534  001564  6F7D               	movwf	strlen@s& (0+255),b
 14535  001566  0E04               	movlw	high Term_MainSm@Data
 14536  001568  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14537  00156A  ECFC  F02F         	call	_strlen	;wreg free
 14538  00156E  0100               	movlb	0	; () banked
 14539  001570  517D               	movf	?_strlen& (0+255),w,b
 14540  001572  6F85               	movwf	putUSBUSART@length& (0+255),b
 14541  001574  ECB6  F032         	call	_putUSBUSART	;wreg free
 14542                           
 14543                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 14544  001578  0E06               	movlw	6
 14545  00157A  0102               	movlb	2	; () banked
 14546  00157C  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14547                           
 14548                           ; BSR set to: 2
 14549                           ;term.c: 793: }
 14550                           ;term.c: 794: break;
 14551  00157E  0012               	return	
 14552  001580                     
 14553                           ; BSR set to: 2
 14554                           ;term.c: 798: if((cdc_trf_state == 0))
 14555                           
 14556                           ; BSR set to: 2
 14557  001580  0100               	movlb	0	; () banked
 14558  001582  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14559  001584  A4D8               	btfss	status,2,c
 14560  001586  0012               	return	
 14561                           
 14562                           ; BSR set to: 0
 14563                           ;term.c: 799: {
 14564                           ;term.c: 801: memset(Data,0,50);
 14565  001588  0E6B               	movlw	low Term_MainSm@Data
 14566  00158A  6F7D               	movwf	memset@p1& (0+255),b
 14567  00158C  0E04               	movlw	high Term_MainSm@Data
 14568  00158E  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14569  001590  0E00               	movlw	0
 14570  001592  6F80               	movwf	(memset@c+1)& (0+255),b
 14571  001594  0E00               	movlw	0
 14572  001596  6F7F               	movwf	memset@c& (0+255),b
 14573  001598  0E00               	movlw	0
 14574  00159A  6F82               	movwf	(memset@n+1)& (0+255),b
 14575  00159C  0E32               	movlw	50
 14576  00159E  6F81               	movwf	memset@n& (0+255),b
 14577  0015A0  EC4B  F031         	call	_memset	;wreg free
 14578                           
 14579                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 27 2022");
 14580  0015A4  0E6B               	movlw	low Term_MainSm@Data
 14581  0015A6  0100               	movlb	0	; () banked
 14582  0015A8  6F7D               	movwf	sprintf@sp& (0+255),b
 14583  0015AA  0E04               	movlw	high Term_MainSm@Data
 14584  0015AC  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14585  0015AE  0E0D               	movlw	low STR_27
 14586  0015B0  6F7F               	movwf	sprintf@f& (0+255),b
 14587  0015B2  0EFF               	movlw	high STR_27
 14588  0015B4  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14589  0015B6  0EB6               	movlw	low STR_28
 14590  0015B8  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14591  0015BA  0EFF               	movlw	high STR_28
 14592  0015BC  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14593  0015BE  EC88  F01D         	call	_sprintf	;wreg free
 14594                           
 14595                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14596  0015C2  0E6B               	movlw	low Term_MainSm@Data
 14597  0015C4  0100               	movlb	0	; () banked
 14598  0015C6  6F83               	movwf	putUSBUSART@data& (0+255),b
 14599  0015C8  0E04               	movlw	high Term_MainSm@Data
 14600  0015CA  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14601  0015CC  0E6B               	movlw	low Term_MainSm@Data
 14602  0015CE  6F7D               	movwf	strlen@s& (0+255),b
 14603  0015D0  0E04               	movlw	high Term_MainSm@Data
 14604  0015D2  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14605  0015D4  ECFC  F02F         	call	_strlen	;wreg free
 14606  0015D8  0100               	movlb	0	; () banked
 14607  0015DA  517D               	movf	?_strlen& (0+255),w,b
 14608  0015DC  6F85               	movwf	putUSBUSART@length& (0+255),b
 14609  0015DE  ECB6  F032         	call	_putUSBUSART	;wreg free
 14610                           
 14611                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14612  0015E2  0E07               	movlw	7
 14613  0015E4  0102               	movlb	2	; () banked
 14614  0015E6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14615                           
 14616                           ; BSR set to: 2
 14617                           ;term.c: 808: }
 14618                           ;term.c: 809: break;
 14619  0015E8  0012               	return	
 14620  0015EA                     
 14621                           ; BSR set to: 2
 14622                           ;term.c: 813: if((cdc_trf_state == 0))
 14623                           
 14624                           ; BSR set to: 2
 14625  0015EA  0100               	movlb	0	; () banked
 14626  0015EC  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14627  0015EE  A4D8               	btfss	status,2,c
 14628  0015F0  0012               	return	
 14629                           
 14630                           ; BSR set to: 0
 14631                           ;term.c: 814: {
 14632                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14633  0015F2  0E32               	movlw	low _MsgReady
 14634  0015F4  6F83               	movwf	putUSBUSART@data& (0+255),b
 14635  0015F6  0EFE               	movlw	high _MsgReady
 14636  0015F8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14637  0015FA  0E16               	movlw	22
 14638  0015FC  6F85               	movwf	putUSBUSART@length& (0+255),b
 14639  0015FE  ECB6  F032         	call	_putUSBUSART	;wreg free
 14640                           
 14641                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14642  001602  0E08               	movlw	8
 14643  001604  0102               	movlb	2	; () banked
 14644  001606  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14645                           
 14646                           ; BSR set to: 2
 14647                           ;term.c: 819: }
 14648                           ;term.c: 820: break;
 14649  001608  0012               	return	
 14650  00160A                     
 14651                           ; BSR set to: 2
 14652                           ;term.c: 824: Terminal();
 14653                           
 14654                           ; BSR set to: 2
 14655  00160A  EC68  F000         	call	_Terminal	;wreg free
 14656                           
 14657                           ;term.c: 829: }
 14658                           
 14659                           ;term.c: 828: break;
 14660                           
 14661                           ;term.c: 827: default:
 14662                           
 14663                           ;term.c: 825: break;
 14664  00160E  0012               	return	
 14665  001610                     l2456:
 14666  001610  0102               	movlb	2	; () banked
 14667  001612  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14668                           
 14669                           ; Switch size 1, requested type "space"
 14670                           ; Number of cases is 9, Range of values is 0 to 8
 14671                           ; switch strategies available:
 14672                           ; Name         Instructions Cycles
 14673                           ; simple_byte           28    15 (average)
 14674                           ;	Chosen strategy is simple_byte
 14675  001614  0A00               	xorlw	0	; case 0
 14676  001616  B4D8               	btfsc	status,2,c
 14677  001618  D6C8               	goto	l2457
 14678  00161A  0A01               	xorlw	1	; case 1
 14679  00161C  B4D8               	btfsc	status,2,c
 14680  00161E  D6D8               	goto	l2459
 14681  001620  0A03               	xorlw	3	; case 2
 14682  001622  B4D8               	btfsc	status,2,c
 14683  001624  D6E3               	goto	l2461
 14684  001626  0A01               	xorlw	1	; case 3
 14685  001628  B4D8               	btfsc	status,2,c
 14686  00162A  D6EA               	goto	l2466
 14687  00162C  0A07               	xorlw	7	; case 4
 14688  00162E  B4D8               	btfsc	status,2,c
 14689  001630  D6F7               	goto	l2468
 14690  001632  0A01               	xorlw	1	; case 5
 14691  001634  B4D8               	btfsc	status,2,c
 14692  001636  D704               	goto	l2470
 14693  001638  0A03               	xorlw	3	; case 6
 14694  00163A  B4D8               	btfsc	status,2,c
 14695  00163C  D7A1               	goto	l2472
 14696  00163E  0A01               	xorlw	1	; case 7
 14697  001640  B4D8               	btfsc	status,2,c
 14698  001642  D7D3               	goto	l2474
 14699  001644  0A0F               	xorlw	15	; case 8
 14700  001646  A4D8               	btfss	status,2,c
 14701  001648  0012               	return	
 14702  00164A  D7DF               	goto	l2476
 14703  00164C                     __end_of_Term_MainSm:
 14704                           	opt stack 0
 14705                           tosu	equ	0xFFF
 14706                           tosh	equ	0xFFE
 14707                           tosl	equ	0xFFD
 14708                           pclath	equ	0xFFA
 14709                           tblptru	equ	0xFF8
 14710                           tblptrh	equ	0xFF7
 14711                           tblptrl	equ	0xFF6
 14712                           tablat	equ	0xFF5
 14713                           prodh	equ	0xFF4
 14714                           prodl	equ	0xFF3
 14715                           intcon	equ	0xFF2
 14716                           intcon2	equ	0xFF1
 14717                           intcon3	equ	0xFF0
 14718                           indf0	equ	0xFEF
 14719                           postinc0	equ	0xFEE
 14720                           plusw0	equ	0xFEB
 14721                           fsr0h	equ	0xFEA
 14722                           fsr0l	equ	0xFE9
 14723                           wreg	equ	0xFE8
 14724                           indf1	equ	0xFE7
 14725                           postinc1	equ	0xFE6
 14726                           postdec1	equ	0xFE5
 14727                           fsr1h	equ	0xFE2
 14728                           fsr1l	equ	0xFE1
 14729                           indf2	equ	0xFDF
 14730                           postinc2	equ	0xFDE
 14731                           postdec2	equ	0xFDD
 14732                           plusw2	equ	0xFDB
 14733                           fsr2h	equ	0xFDA
 14734                           fsr2l	equ	0xFD9
 14735                           status	equ	0xFD8
 14736                           
 14737 ;; *************** function _strlen *****************
 14738 ;; Defined at:
 14739 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14740 ;; Parameters:    Size  Location     Type
 14741 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14742 ;;		 -> Term_MainSm@Data(50), 
 14743 ;; Auto vars:     Size  Location     Type
 14744 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14745 ;;		 -> Term_MainSm@Data(50), 
 14746 ;; Return value:  Size  Location     Type
 14747 ;;                  2   29[BANK0 ] unsigned int 
 14748 ;; Registers used:
 14749 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14750 ;; Tracked objects:
 14751 ;;		On entry : 0/0
 14752 ;;		On exit  : 0/0
 14753 ;;		Unchanged: 0/0
 14754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14755 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14756 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14757 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14758 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14759 ;;Total ram usage:        6 bytes
 14760 ;; Hardware stack levels used:    1
 14761 ;; Hardware stack levels required when called:   11
 14762 ;; This function calls:
 14763 ;;		Nothing
 14764 ;; This function is called by:
 14765 ;;		_Term_MainSm
 14766 ;; This function uses a non-reentrant model
 14767 ;;
 14768                           
 14769                           	psect	text56
 14770  005FF8                     __ptext56:
 14771                           	opt stack 0
 14772  005FF8                     _strlen:
 14773                           	opt stack 15
 14774                           
 14775                           ;incstack = 0
 14776  005FF8  C07D  F081         	movff	strlen@s,strlen@cp
 14777  005FFC  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14778  006000  D003               	goto	l3446
 14779  006002  0100               	movlb	0	; () banked
 14780  006004  4B81               	infsnz	strlen@cp& (0+255),f,b
 14781  006006  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14782  006008                     l3446:
 14783                           
 14784                           ; BSR set to: 0
 14785  006008  C081  FFD9         	movff	strlen@cp,fsr2l
 14786  00600C  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14787  006010  50DF               	movf	indf2,w,c
 14788  006012  A4D8               	btfss	status,2,c
 14789  006014  D7F6               	goto	l3447
 14790  006016  C07D  F07F         	movff	strlen@s,??_strlen
 14791  00601A  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14792  00601E  0100               	movlb	0	; () banked
 14793  006020  1F7F               	comf	??_strlen& (0+255),f,b
 14794  006022  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14795  006024  4B7F               	infsnz	??_strlen& (0+255),f,b
 14796  006026  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14797  006028  5181               	movf	strlen@cp& (0+255),w,b
 14798  00602A  257F               	addwf	??_strlen& (0+255),w,b
 14799  00602C  6F7D               	movwf	?_strlen& (0+255),b
 14800  00602E  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14801  006030  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14802  006032  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14803  006034  0012               	return	
 14804  006036                     __end_of_strlen:
 14805                           	opt stack 0
 14806                           tosu	equ	0xFFF
 14807                           tosh	equ	0xFFE
 14808                           tosl	equ	0xFFD
 14809                           pclath	equ	0xFFA
 14810                           tblptru	equ	0xFF8
 14811                           tblptrh	equ	0xFF7
 14812                           tblptrl	equ	0xFF6
 14813                           tablat	equ	0xFF5
 14814                           prodh	equ	0xFF4
 14815                           prodl	equ	0xFF3
 14816                           intcon	equ	0xFF2
 14817                           intcon2	equ	0xFF1
 14818                           intcon3	equ	0xFF0
 14819                           indf0	equ	0xFEF
 14820                           postinc0	equ	0xFEE
 14821                           plusw0	equ	0xFEB
 14822                           fsr0h	equ	0xFEA
 14823                           fsr0l	equ	0xFE9
 14824                           wreg	equ	0xFE8
 14825                           indf1	equ	0xFE7
 14826                           postinc1	equ	0xFE6
 14827                           postdec1	equ	0xFE5
 14828                           fsr1h	equ	0xFE2
 14829                           fsr1l	equ	0xFE1
 14830                           indf2	equ	0xFDF
 14831                           postinc2	equ	0xFDE
 14832                           postdec2	equ	0xFDD
 14833                           plusw2	equ	0xFDB
 14834                           fsr2h	equ	0xFDA
 14835                           fsr2l	equ	0xFD9
 14836                           status	equ	0xFD8
 14837                           
 14838 ;; *************** function _strcat *****************
 14839 ;; Defined at:
 14840 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14841 ;; Parameters:    Size  Location     Type
 14842 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14843 ;;		 -> Term_MainSm@Data(50), 
 14844 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14845 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14846 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14847 ;; Auto vars:     Size  Location     Type
 14848 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14849 ;;		 -> Term_MainSm@Data(50), 
 14850 ;; Return value:  Size  Location     Type
 14851 ;;                  2   29[BANK0 ] PTR unsigned char 
 14852 ;; Registers used:
 14853 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14854 ;; Tracked objects:
 14855 ;;		On entry : 0/0
 14856 ;;		On exit  : 0/0
 14857 ;;		Unchanged: 0/0
 14858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14859 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14860 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14862 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14863 ;;Total ram usage:        6 bytes
 14864 ;; Hardware stack levels used:    1
 14865 ;; Hardware stack levels required when called:   11
 14866 ;; This function calls:
 14867 ;;		Nothing
 14868 ;; This function is called by:
 14869 ;;		_Term_MainSm
 14870 ;; This function uses a non-reentrant model
 14871 ;;
 14872                           
 14873                           	psect	text57
 14874  005698                     __ptext57:
 14875                           	opt stack 0
 14876  005698                     _strcat:
 14877                           	opt stack 15
 14878                           
 14879                           ; BSR set to: 0
 14880                           ;incstack = 0
 14881  005698  C07D  F081         	movff	strcat@to,strcat@cp
 14882  00569C  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14883  0056A0  D003               	goto	l3431
 14884  0056A2  0100               	movlb	0	; () banked
 14885  0056A4  4B81               	infsnz	strcat@cp& (0+255),f,b
 14886  0056A6  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14887  0056A8                     l3431:
 14888                           
 14889                           ; BSR set to: 0
 14890  0056A8  C081  FFD9         	movff	strcat@cp,fsr2l
 14891  0056AC  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14892  0056B0  50DF               	movf	indf2,w,c
 14893  0056B2  B4D8               	btfsc	status,2,c
 14894  0056B4  D006               	goto	l3434
 14895  0056B6  D7F5               	goto	l3432
 14896  0056B8  0100               	movlb	0	; () banked
 14897  0056BA  4B81               	infsnz	strcat@cp& (0+255),f,b
 14898  0056BC  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14899  0056BE  4B7F               	infsnz	strcat@from& (0+255),f,b
 14900  0056C0  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14901  0056C2                     l3434:
 14902                           
 14903                           ; BSR set to: 0
 14904  0056C2  C07F  FFF6         	movff	strcat@from,tblptrl
 14905  0056C6  C080  FFF7         	movff	strcat@from+1,tblptrh
 14906  0056CA  6AF8               	clrf	tblptru,c
 14907  0056CC  C081  FFD9         	movff	strcat@cp,fsr2l
 14908  0056D0  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14909  0056D4  0E0E               	movlw	(high __ramtop+-1)
 14910  0056D6  64F7               	cpfsgt	tblptrh,c
 14911  0056D8  D003               	bra	u14027
 14912  0056DA  0008               	tblrd		*
 14913  0056DC  50F5               	movf	tablat,w,c
 14914  0056DE  D005               	bra	u14020
 14915  0056E0                     u14027:
 14916  0056E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 14917  0056E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 14918  0056E8  50EF               	movf	indf0,w,c
 14919  0056EA                     u14020:
 14920  0056EA  6EDF               	movwf	indf2,c
 14921  0056EC  50DF               	movf	indf2,w,c
 14922  0056EE  B4D8               	btfsc	status,2,c
 14923  0056F0  0012               	return	
 14924  0056F2  D7E2               	goto	l3435
 14925  0056F4                     __end_of_strcat:
 14926                           	opt stack 0
 14927                           tosu	equ	0xFFF
 14928                           tosh	equ	0xFFE
 14929                           tosl	equ	0xFFD
 14930                           pclath	equ	0xFFA
 14931                           tblptru	equ	0xFF8
 14932                           tblptrh	equ	0xFF7
 14933                           tblptrl	equ	0xFF6
 14934                           tablat	equ	0xFF5
 14935                           prodh	equ	0xFF4
 14936                           prodl	equ	0xFF3
 14937                           intcon	equ	0xFF2
 14938                           intcon2	equ	0xFF1
 14939                           intcon3	equ	0xFF0
 14940                           indf0	equ	0xFEF
 14941                           postinc0	equ	0xFEE
 14942                           plusw0	equ	0xFEB
 14943                           fsr0h	equ	0xFEA
 14944                           fsr0l	equ	0xFE9
 14945                           wreg	equ	0xFE8
 14946                           indf1	equ	0xFE7
 14947                           postinc1	equ	0xFE6
 14948                           postdec1	equ	0xFE5
 14949                           fsr1h	equ	0xFE2
 14950                           fsr1l	equ	0xFE1
 14951                           indf2	equ	0xFDF
 14952                           postinc2	equ	0xFDE
 14953                           postdec2	equ	0xFDD
 14954                           plusw2	equ	0xFDB
 14955                           fsr2h	equ	0xFDA
 14956                           fsr2l	equ	0xFD9
 14957                           status	equ	0xFD8
 14958                           
 14959 ;; *************** function _sprintf *****************
 14960 ;; Defined at:
 14961 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14962 ;; Parameters:    Size  Location     Type
 14963 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14964 ;;		 -> Term_MainSm@Data(50), 
 14965 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14966 ;;		 -> STR_27(17), 
 14967 ;; Auto vars:     Size  Location     Type
 14968 ;;  tmpval          4    0        struct .
 14969 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14970 ;;		 -> STR_33(7), STR_28(12), 
 14971 ;;  ap              2   36[BANK0 ] PTR void [1]
 14972 ;;		 -> ?_sprintf(2), 
 14973 ;;  len             2    0        unsigned int 
 14974 ;;  val             2    0        unsigned int 
 14975 ;;  c               1   38[BANK0 ] char 
 14976 ;;  flag            1   35[BANK0 ] unsigned char 
 14977 ;;  prec            1    0        char 
 14978 ;; Return value:  Size  Location     Type
 14979 ;;                  2   29[BANK0 ] int 
 14980 ;; Registers used:
 14981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14982 ;; Tracked objects:
 14983 ;;		On entry : 0/0
 14984 ;;		On exit  : 0/0
 14985 ;;		Unchanged: 0/0
 14986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14987 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14988 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14990 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14991 ;;Total ram usage:       12 bytes
 14992 ;; Hardware stack levels used:    1
 14993 ;; Hardware stack levels required when called:   11
 14994 ;; This function calls:
 14995 ;;		Nothing
 14996 ;; This function is called by:
 14997 ;;		_Term_MainSm
 14998 ;; This function uses a non-reentrant model
 14999 ;;
 15000                           
 15001                           	psect	text58
 15002  003B10                     __ptext58:
 15003                           	opt stack 0
 15004  003B10                     _sprintf:
 15005                           	opt stack 15
 15006                           
 15007                           ;doprnt.c: 494: va_list ap;
 15008                           ;doprnt.c: 499: signed char c;
 15009                           ;doprnt.c: 506: signed char prec;
 15010                           ;doprnt.c: 508: unsigned char flag;
 15011                           ;doprnt.c: 523: union {
 15012                           ;doprnt.c: 524: unsigned long vd;
 15013                           ;doprnt.c: 525: double integ;
 15014                           ;doprnt.c: 526: } tmpval;
 15015                           ;doprnt.c: 528: unsigned int val;
 15016                           ;doprnt.c: 529: unsigned len;
 15017                           ;doprnt.c: 530: const char * cp;
 15018                           ;doprnt.c: 533: *ap = __va_start();
 15019                           
 15020                           ;incstack = 0
 15021  003B10  0E81               	movlw	low (?_sprintf+4)
 15022  003B12  0100               	movlb	0	; () banked
 15023  003B14  6F84               	movwf	sprintf@ap& (0+255),b
 15024  003B16  0E00               	movlw	high (?_sprintf+4)
 15025  003B18  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 15026                           
 15027                           ;doprnt.c: 536: while(c = *f++) {
 15028  003B1A  D04E               	goto	l2835
 15029  003B1C                     
 15030                           ; BSR set to: 0
 15031                           ;doprnt.c: 538: if(c != '%')
 15032                           
 15033                           ; BSR set to: 0
 15034  003B1C  0E25               	movlw	37
 15035  003B1E  1986               	xorwf	sprintf@c& (0+255),w,b
 15036  003B20  B4D8               	btfsc	status,2,c
 15037  003B22  D009               	goto	l2825
 15038                           
 15039                           ; BSR set to: 0
 15040                           ;doprnt.c: 540: {
 15041                           ;doprnt.c: 541: ((*sp++ = (c)));
 15042  003B24  C07D  FFD9         	movff	sprintf@sp,fsr2l
 15043  003B28  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 15044  003B2C  C086  FFDF         	movff	sprintf@c,indf2
 15045                           
 15046                           ; BSR set to: 0
 15047  003B30  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 15048  003B32  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 15049                           
 15050                           ;doprnt.c: 542: continue;
 15051  003B34  D041               	goto	l2835
 15052  003B36                     l2825:
 15053                           
 15054                           ; BSR set to: 0
 15055                           ;doprnt.c: 543: }
 15056                           ;doprnt.c: 548: flag = 0;
 15057                           
 15058                           ; BSR set to: 0
 15059  003B36  0E00               	movlw	0
 15060  003B38  6F83               	movwf	sprintf@flag& (0+255),b
 15061                           
 15062                           ;doprnt.c: 635: switch(c = *f++) {
 15063  003B3A  D02E               	goto	l2826
 15064  003B3C                     
 15065                           ; BSR set to: 0
 15066                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 15067                           
 15068                           ; BSR set to: 0
 15069  003B3C  C084  FFD9         	movff	sprintf@ap,fsr2l
 15070  003B40  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 15071  003B44  CFDE F087          	movff	postinc2,sprintf@cp
 15072  003B48  CFDD F088          	movff	postdec2,sprintf@cp+1
 15073                           
 15074                           ; BSR set to: 0
 15075  003B4C  0E02               	movlw	2
 15076  003B4E  2784               	addwf	sprintf@ap& (0+255),f,b
 15077  003B50  0E00               	movlw	0
 15078  003B52  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 15079                           
 15080                           ; BSR set to: 0
 15081                           ;doprnt.c: 740: if(!cp)
 15082  003B54  5187               	movf	sprintf@cp& (0+255),w,b
 15083  003B56  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 15084  003B58  A4D8               	btfss	status,2,c
 15085  003B5A  D014               	goto	l2831
 15086                           
 15087                           ; BSR set to: 0
 15088                           ;doprnt.c: 741: cp = "(null)";
 15089  003B5C  0ED8               	movlw	low STR_33
 15090  003B5E  6F87               	movwf	sprintf@cp& (0+255),b
 15091  003B60  0EFF               	movlw	high STR_33
 15092  003B62  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 15093                           
 15094                           ; BSR set to: 0
 15095                           ;doprnt.c: 777: while(*cp)
 15096  003B64  D00F               	goto	l2831
 15097  003B66                     
 15098                           ; BSR set to: 0
 15099                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 15100                           
 15101                           ; BSR set to: 0
 15102  003B66  C087  FFF6         	movff	sprintf@cp,tblptrl
 15103  003B6A  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 15104  003B6E                     	if	0	;tblptru may be non-zero
 15105  003B6E                     	endif
 15106  003B6E                     	if	0	;tblptru may be non-zero
 15107  003B6E                     	endif
 15108  003B6E  C07D  FFD9         	movff	sprintf@sp,fsr2l
 15109  003B72  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 15110  003B76  0008               	tblrd		*
 15111  003B78  CFF5 FFDF          	movff	tablat,indf2
 15112                           
 15113                           ; BSR set to: 0
 15114  003B7C  4B87               	infsnz	sprintf@cp& (0+255),f,b
 15115  003B7E  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 15116                           
 15117                           ; BSR set to: 0
 15118  003B80  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 15119  003B82  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 15120  003B84                     l2831:
 15121                           
 15122                           ; BSR set to: 0
 15123                           
 15124                           ; BSR set to: 0
 15125  003B84  C087  FFF6         	movff	sprintf@cp,tblptrl
 15126  003B88  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 15127  003B8C                     	if	0	;tblptru may be non-zero
 15128  003B8C                     	endif
 15129  003B8C                     	if	0	;tblptru may be non-zero
 15130  003B8C                     	endif
 15131  003B8C  0008               	tblrd		*
 15132  003B8E  50F5               	movf	tablat,w,c
 15133  003B90  0900               	iorlw	0
 15134  003B92  B4D8               	btfsc	status,2,c
 15135  003B94  D011               	goto	l2835
 15136  003B96  D7E7               	goto	l2832
 15137  003B98                     l2826:
 15138                           
 15139                           ; BSR set to: 0
 15140                           
 15141                           ; BSR set to: 0
 15142  003B98  C07F  FFF6         	movff	sprintf@f,tblptrl
 15143  003B9C  C080  FFF7         	movff	sprintf@f+1,tblptrh
 15144  003BA0  4B7F               	infsnz	sprintf@f& (0+255),f,b
 15145  003BA2  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 15146  003BA4                     	if	0	;tblptru may be non-zero
 15147  003BA4                     	endif
 15148  003BA4                     	if	0	;tblptru may be non-zero
 15149  003BA4                     	endif
 15150  003BA4  0008               	tblrd		*
 15151  003BA6  CFF5 F086          	movff	tablat,sprintf@c
 15152  003BAA  5186               	movf	sprintf@c& (0+255),w,b
 15153                           
 15154                           ; Switch size 1, requested type "space"
 15155                           ; Number of cases is 2, Range of values is 0 to 115
 15156                           ; switch strategies available:
 15157                           ; Name         Instructions Cycles
 15158                           ; simple_byte            7     4 (average)
 15159                           ;	Chosen strategy is simple_byte
 15160  003BAC  0A00               	xorlw	0	; case 0
 15161  003BAE  B4D8               	btfsc	status,2,c
 15162  003BB0  D00F               	goto	u14080
 15163  003BB2  0A73               	xorlw	115	; case 115
 15164  003BB4  B4D8               	btfsc	status,2,c
 15165  003BB6  D7C2               	goto	l2829
 15166  003BB8                     l2835:
 15167                           
 15168                           ; BSR set to: 0
 15169                           
 15170                           ; BSR set to: 0
 15171                           
 15172                           ;doprnt.c: 1422: {
 15173                           
 15174                           ; BSR set to: 0
 15175  003BB8  C07F  FFF6         	movff	sprintf@f,tblptrl
 15176  003BBC  C080  FFF7         	movff	sprintf@f+1,tblptrh
 15177  003BC0  4B7F               	infsnz	sprintf@f& (0+255),f,b
 15178  003BC2  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 15179  003BC4                     	if	0	;tblptru may be non-zero
 15180  003BC4                     	endif
 15181  003BC4                     	if	0	;tblptru may be non-zero
 15182  003BC4                     	endif
 15183  003BC4  0008               	tblrd		*
 15184  003BC6  CFF5 F086          	movff	tablat,sprintf@c
 15185  003BCA  5186               	movf	sprintf@c& (0+255),w,b
 15186  003BCC  A4D8               	btfss	status,2,c
 15187  003BCE  D7A6               	goto	l2824
 15188  003BD0                     u14080:
 15189                           
 15190                           ; BSR set to: 0
 15191                           ;doprnt.c: 1538: *sp = 0;
 15192                           
 15193                           ; BSR set to: 0
 15194                           
 15195                           ;doprnt.c: 1469: }
 15196                           ;doprnt.c: 1533: }
 15197                           ;doprnt.c: 1535: alldone:
 15198                           
 15199                           ; BSR set to: 0
 15200  003BD0  C07D  FFD9         	movff	sprintf@sp,fsr2l
 15201  003BD4  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 15202  003BD8  0E00               	movlw	0
 15203  003BDA  6EDF               	movwf	indf2,c
 15204  003BDC  0012               	return	
 15205  003BDE                     __end_of_sprintf:
 15206                           	opt stack 0
 15207                           tosu	equ	0xFFF
 15208                           tosh	equ	0xFFE
 15209                           tosl	equ	0xFFD
 15210                           pclath	equ	0xFFA
 15211                           tblptru	equ	0xFF8
 15212                           tblptrh	equ	0xFF7
 15213                           tblptrl	equ	0xFF6
 15214                           tablat	equ	0xFF5
 15215                           prodh	equ	0xFF4
 15216                           prodl	equ	0xFF3
 15217                           intcon	equ	0xFF2
 15218                           intcon2	equ	0xFF1
 15219                           intcon3	equ	0xFF0
 15220                           indf0	equ	0xFEF
 15221                           postinc0	equ	0xFEE
 15222                           plusw0	equ	0xFEB
 15223                           fsr0h	equ	0xFEA
 15224                           fsr0l	equ	0xFE9
 15225                           wreg	equ	0xFE8
 15226                           indf1	equ	0xFE7
 15227                           postinc1	equ	0xFE6
 15228                           postdec1	equ	0xFE5
 15229                           fsr1h	equ	0xFE2
 15230                           fsr1l	equ	0xFE1
 15231                           indf2	equ	0xFDF
 15232                           postinc2	equ	0xFDE
 15233                           postdec2	equ	0xFDD
 15234                           plusw2	equ	0xFDB
 15235                           fsr2h	equ	0xFDA
 15236                           fsr2l	equ	0xFD9
 15237                           status	equ	0xFD8
 15238                           
 15239 ;; *************** function _memset *****************
 15240 ;; Defined at:
 15241 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 15242 ;; Parameters:    Size  Location     Type
 15243 ;;  p1              2   29[BANK0 ] PTR void 
 15244 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 15245 ;;  c               2   31[BANK0 ] int 
 15246 ;;  n               2   33[BANK0 ] unsigned int 
 15247 ;; Auto vars:     Size  Location     Type
 15248 ;;  p               2   35[BANK0 ] PTR unsigned char 
 15249 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 15250 ;; Return value:  Size  Location     Type
 15251 ;;                  2   29[BANK0 ] PTR void 
 15252 ;; Registers used:
 15253 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15254 ;; Tracked objects:
 15255 ;;		On entry : 0/0
 15256 ;;		On exit  : 0/0
 15257 ;;		Unchanged: 0/0
 15258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15259 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15260 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15262 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15263 ;;Total ram usage:        8 bytes
 15264 ;; Hardware stack levels used:    1
 15265 ;; Hardware stack levels required when called:   11
 15266 ;; This function calls:
 15267 ;;		Nothing
 15268 ;; This function is called by:
 15269 ;;		_USBDeviceInit
 15270 ;;		_USBStdSetCfgHandler
 15271 ;;		_Term_MainSm
 15272 ;; This function uses a non-reentrant model
 15273 ;;
 15274                           
 15275                           	psect	text59
 15276  006296                     __ptext59:
 15277                           	opt stack 0
 15278  006296                     _memset:
 15279                           	opt stack 14
 15280                           
 15281                           ; BSR set to: 0
 15282                           ;incstack = 0
 15283  006296  C07D  F083         	movff	memset@p1,memset@p
 15284  00629A  C07E  F084         	movff	memset@p1+1,memset@p+1
 15285  00629E  D009               	goto	l3305
 15286  0062A0                     l12630:
 15287  0062A0  C083  FFD9         	movff	memset@p,fsr2l
 15288  0062A4  C084  FFDA         	movff	memset@p+1,fsr2h
 15289  0062A8  C07F  FFDF         	movff	memset@c,indf2
 15290  0062AC  0100               	movlb	0	; () banked
 15291  0062AE  4B83               	infsnz	memset@p& (0+255),f,b
 15292  0062B0  2B84               	incf	(memset@p+1)& (0+255),f,b
 15293  0062B2                     l3305:
 15294                           
 15295                           ; BSR set to: 0
 15296  0062B2  0100               	movlb	0	; () banked
 15297  0062B4  0781               	decf	memset@n& (0+255),f,b
 15298  0062B6  A0D8               	btfss	status,0,c
 15299  0062B8  0782               	decf	(memset@n+1)& (0+255),f,b
 15300  0062BA  2981               	incf	memset@n& (0+255),w,b
 15301  0062BC  E1F1               	bnz	l12630
 15302  0062BE  2982               	incf	(memset@n+1)& (0+255),w,b
 15303  0062C0  B4D8               	btfsc	status,2,c
 15304  0062C2  0012               	return	
 15305  0062C4  D7ED               	goto	l3306
 15306  0062C6                     __end_of_memset:
 15307                           	opt stack 0
 15308                           tosu	equ	0xFFF
 15309                           tosh	equ	0xFFE
 15310                           tosl	equ	0xFFD
 15311                           pclath	equ	0xFFA
 15312                           tblptru	equ	0xFF8
 15313                           tblptrh	equ	0xFF7
 15314                           tblptrl	equ	0xFF6
 15315                           tablat	equ	0xFF5
 15316                           prodh	equ	0xFF4
 15317                           prodl	equ	0xFF3
 15318                           intcon	equ	0xFF2
 15319                           intcon2	equ	0xFF1
 15320                           intcon3	equ	0xFF0
 15321                           indf0	equ	0xFEF
 15322                           postinc0	equ	0xFEE
 15323                           plusw0	equ	0xFEB
 15324                           fsr0h	equ	0xFEA
 15325                           fsr0l	equ	0xFE9
 15326                           wreg	equ	0xFE8
 15327                           indf1	equ	0xFE7
 15328                           postinc1	equ	0xFE6
 15329                           postdec1	equ	0xFE5
 15330                           fsr1h	equ	0xFE2
 15331                           fsr1l	equ	0xFE1
 15332                           indf2	equ	0xFDF
 15333                           postinc2	equ	0xFDE
 15334                           postdec2	equ	0xFDD
 15335                           plusw2	equ	0xFDB
 15336                           fsr2h	equ	0xFDA
 15337                           fsr2l	equ	0xFD9
 15338                           status	equ	0xFD8
 15339                           
 15340 ;; *************** function _Terminal *****************
 15341 ;; Defined at:
 15342 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 15343 ;; Parameters:    Size  Location     Type
 15344 ;;		None
 15345 ;; Auto vars:     Size  Location     Type
 15346 ;;  i               1   68[BANK0 ] unsigned char 
 15347 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 15348 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 15349 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 15350 ;;  Index           1   70[BANK0 ] unsigned char 
 15351 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 15352 ;; Return value:  Size  Location     Type
 15353 ;;                  1    wreg      void 
 15354 ;; Registers used:
 15355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15356 ;; Tracked objects:
 15357 ;;		On entry : 0/0
 15358 ;;		On exit  : 0/0
 15359 ;;		Unchanged: 0/0
 15360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15362 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15363 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15364 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15365 ;;Total ram usage:      455 bytes
 15366 ;; Hardware stack levels used:    1
 15367 ;; Hardware stack levels required when called:   15
 15368 ;; This function calls:
 15369 ;;		_I2cSlv_I2cReadMsgSts
 15370 ;;		_I2cSlv_ReceiveI2cMsg
 15371 ;;		_I2cSlv_SendI2cMsg
 15372 ;;		_OsTmr_Wait
 15373 ;;		_atoi
 15374 ;;		_getsUSBUSART
 15375 ;;		_itoa
 15376 ;;		_putUSBUSART
 15377 ;;		_strcpy
 15378 ;;		_strtol
 15379 ;;		_xtoi
 15380 ;; This function is called by:
 15381 ;;		_Term_MainSm
 15382 ;; This function uses a non-reentrant model
 15383 ;;
 15384                           
 15385                           	psect	text60
 15386  0000D0                     __ptext60:
 15387                           	opt stack 0
 15388  0000D0                     _Terminal:
 15389                           	opt stack 11
 15390                           
 15391                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 15392                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 15393                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 15394                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 15395                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 15396                           ;term.c: 435: UINT8 Index;
 15397                           ;term.c: 436: static UINT8 Len[4];
 15398                           ;term.c: 437: static UINT8 PackageLen;
 15399                           ;term.c: 438: static UINT8 Addr[4];
 15400                           ;term.c: 439: static UINT8 SlaveAddr;
 15401                           ;term.c: 440: static PayloadType Payload[20u];
 15402                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 15403                           
 15404                           ; BSR set to: 0
 15405                           ;incstack = 0
 15406  0000D0  0E00               	movlw	0
 15407  0000D2  0100               	movlb	0	; () banked
 15408  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15409                           
 15410                           ; BSR set to: 0
 15411                           ;term.c: 443: static UINT8 FormatOption = 0u;
 15412                           ;term.c: 444: static UINT8 EchoOption = 1u;
 15413                           ;term.c: 445: static SwTimerType SwTimer;
 15414                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 15415  0000D6  0E1F               	movlw	31
 15416  0000D8  65CC               	cpfsgt	_USBDeviceState& (0+255),b
 15417  0000DA  0012               	return	
 15418                           
 15419                           ; BSR set to: 0
 15420  0000DC  B265               	btfsc	3941,1,c	;volatile
 15421  0000DE  0012               	return	
 15422  0000E0  D278               	goto	l2396
 15423  0000E2                     
 15424                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 15425                           
 15426                           ; BSR set to: 0
 15427  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 15428  0000E4  0100               	movlb	0	; () banked
 15429  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 15430  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 15431  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15432  0000EC  0EC8               	movlw	200
 15433  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 15434  0000F0  EC9F  F025         	call	_getsUSBUSART	;wreg free
 15435  0000F4  0100               	movlb	0	; () banked
 15436  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15437                           
 15438                           ; BSR set to: 0
 15439                           ;term.c: 458: if (ReceivedBytes > 0)
 15440  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15441  0000FA  B4D8               	btfsc	status,2,c
 15442  0000FC  0012               	return	
 15443                           
 15444                           ; BSR set to: 0
 15445                           ;term.c: 459: {
 15446                           ;term.c: 461: if (EchoOption == 1u)
 15447  0000FE  0102               	movlb	2	; () banked
 15448  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 15449  000102  A4D8               	btfss	status,2,c
 15450  000104  D026               	goto	l2400
 15451                           
 15452                           ; BSR set to: 2
 15453                           ;term.c: 462: {
 15454                           ;term.c: 464: if((cdc_trf_state == 0))
 15455  000106  0100               	movlb	0	; () banked
 15456  000108  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15457  00010A  A4D8               	btfss	status,2,c
 15458  00010C  D022               	goto	l2400
 15459                           
 15460                           ; BSR set to: 0
 15461                           ;term.c: 465: {
 15462                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 15463  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15464  000110  0D01               	mullw	1
 15465  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15466  000114  24F3               	addwf	prodl,w,c
 15467  000116  6ED9               	movwf	fsr2l,c
 15468  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15469  00011A  20F4               	addwfc	prodh,w,c
 15470  00011C  6EDA               	movwf	fsr2h,c
 15471  00011E  0E0D               	movlw	13
 15472  000120  6EDF               	movwf	indf2,c
 15473                           
 15474                           ; BSR set to: 0
 15475                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15476  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15477  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15478  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15479  000128  0E01               	movlw	1
 15480  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15481  00012C  0E00               	movlw	0
 15482  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15483  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15484  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15485  000134  6ED9               	movwf	fsr2l,c
 15486  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15487  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15488  00013A  6EDA               	movwf	fsr2h,c
 15489  00013C  0E0A               	movlw	10
 15490  00013E  6EDF               	movwf	indf2,c
 15491                           
 15492                           ; BSR set to: 0
 15493                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15494  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15495  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15496  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15497  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15498  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15499  00014A  0F02               	addlw	2
 15500  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15501  00014E  ECB6  F032         	call	_putUSBUSART	;wreg free
 15502  000152                     l2400:
 15503                           
 15504                           ;term.c: 469: }
 15505                           ;term.c: 470: }
 15506                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 15507                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 15508                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15509  000152  0E53               	movlw	83
 15510  000154  010A               	movlb	10	; () banked
 15511  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15512  000158  A4D8               	btfss	status,2,c
 15513  00015A  D043               	goto	l2401
 15514                           
 15515                           ; BSR set to: 10
 15516  00015C  0E4F               	movlw	79
 15517  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15518  000160  A4D8               	btfss	status,2,c
 15519  000162  D03F               	goto	l2401
 15520                           
 15521                           ; BSR set to: 10
 15522  000164  0E3A               	movlw	58
 15523  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15524  000168  A4D8               	btfss	status,2,c
 15525  00016A  D03B               	goto	l2401
 15526                           
 15527                           ; BSR set to: 10
 15528                           ;term.c: 476: {
 15529                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15530  00016C  0E47               	movlw	71
 15531  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15532  000170  A4D8               	btfss	status,2,c
 15533  000172  0012               	return	
 15534                           
 15535                           ; BSR set to: 10
 15536  000174  0E3A               	movlw	58
 15537  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15538  000178  A4D8               	btfss	status,2,c
 15539  00017A  0012               	return	
 15540                           
 15541                           ; BSR set to: 10
 15542                           ;term.c: 479: {
 15543                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15544  00017C  0E44               	movlw	68
 15545  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15546  000180  A4D8               	btfss	status,2,c
 15547  000182  D015               	goto	l2403
 15548                           
 15549                           ; BSR set to: 10
 15550  000184  0E46               	movlw	70
 15551  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15552  000188  A4D8               	btfss	status,2,c
 15553  00018A  D011               	goto	l2403
 15554                           
 15555                           ; BSR set to: 10
 15556                           ;term.c: 482: {
 15557                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15558  00018C  0E41               	movlw	65
 15559  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15560  000190  A4D8               	btfss	status,2,c
 15561  000192  D004               	goto	l2404
 15562                           
 15563                           ; BSR set to: 10
 15564                           ;term.c: 484: {
 15565                           ;term.c: 485: FormatOption = 1u;
 15566  000194  0E01               	movlw	1
 15567  000196  0102               	movlb	2	; () banked
 15568  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15569                           
 15570                           ;term.c: 486: }
 15571  00019A  0012               	return	
 15572  00019C                     l2404:
 15573                           
 15574                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15575                           
 15576                           ; BSR set to: 2
 15577  00019C  0E42               	movlw	66
 15578  00019E  010A               	movlb	10	; () banked
 15579  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15580  0001A2  A4D8               	btfss	status,2,c
 15581  0001A4  0012               	return	
 15582                           
 15583                           ; BSR set to: 10
 15584                           ;term.c: 488: {
 15585                           ;term.c: 489: FormatOption = 0u;
 15586  0001A6  0E00               	movlw	0
 15587  0001A8  0102               	movlb	2	; () banked
 15588  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15589                           
 15590                           ; BSR set to: 2
 15591                           ;term.c: 490: }
 15592                           ;term.c: 491: }
 15593                           
 15594                           ; BSR set to: 2
 15595  0001AC  0012               	return	
 15596  0001AE                     l2403:
 15597                           
 15598                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15599                           
 15600                           ; BSR set to: 2
 15601  0001AE  0E45               	movlw	69
 15602  0001B0  010A               	movlb	10	; () banked
 15603  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15604  0001B4  A4D8               	btfss	status,2,c
 15605  0001B6  0012               	return	
 15606                           
 15607                           ; BSR set to: 10
 15608  0001B8  0E4D               	movlw	77
 15609  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15610  0001BC  A4D8               	btfss	status,2,c
 15611  0001BE  0012               	return	
 15612                           
 15613                           ; BSR set to: 10
 15614                           ;term.c: 494: {
 15615                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15616  0001C0  0E31               	movlw	49
 15617  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15618  0001C4  A4D8               	btfss	status,2,c
 15619  0001C6  D004               	goto	l2409
 15620                           
 15621                           ; BSR set to: 10
 15622                           ;term.c: 496: {
 15623                           ;term.c: 497: EchoOption = 1u;
 15624  0001C8  0E01               	movlw	1
 15625  0001CA  0102               	movlb	2	; () banked
 15626  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15627                           
 15628                           ;term.c: 498: }
 15629  0001CE  0012               	return	
 15630  0001D0                     l2409:
 15631                           
 15632                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15633                           
 15634                           ; BSR set to: 2
 15635  0001D0  0E30               	movlw	48
 15636  0001D2  010A               	movlb	10	; () banked
 15637  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15638  0001D6  A4D8               	btfss	status,2,c
 15639  0001D8  0012               	return	
 15640                           
 15641                           ; BSR set to: 10
 15642                           ;term.c: 500: {
 15643                           ;term.c: 501: EchoOption = 0u;
 15644  0001DA  0E00               	movlw	0
 15645  0001DC  0102               	movlb	2	; () banked
 15646  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15647                           
 15648                           ; BSR set to: 2
 15649                           ;term.c: 507: }
 15650                           ;term.c: 508: }
 15651                           ;term.c: 509: }
 15652                           
 15653                           ; BSR set to: 2
 15654                           
 15655                           ; BSR set to: 2
 15656                           
 15657                           ;term.c: 504: else
 15658                           ;term.c: 505: {
 15659                           
 15660                           ; BSR set to: 2
 15661                           
 15662                           ; BSR set to: 2
 15663                           ;term.c: 502: }
 15664                           ;term.c: 503: }
 15665                           
 15666                           ; BSR set to: 2
 15667  0001E0  0012               	return	
 15668  0001E2                     l2401:
 15669                           
 15670                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15671                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15672                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15673                           
 15674                           ; BSR set to: 2
 15675  0001E2  0E53               	movlw	83
 15676  0001E4  010A               	movlb	10	; () banked
 15677  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15678  0001E8  A4D8               	btfss	status,2,c
 15679  0001EA  D0D3               	goto	l2414
 15680                           
 15681                           ; BSR set to: 10
 15682  0001EC  0E42               	movlw	66
 15683  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15684  0001F0  A4D8               	btfss	status,2,c
 15685  0001F2  D0CF               	goto	l2414
 15686                           
 15687                           ; BSR set to: 10
 15688  0001F4  0E3A               	movlw	58
 15689  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15690  0001F8  A4D8               	btfss	status,2,c
 15691  0001FA  D0CB               	goto	l2414
 15692                           
 15693                           ; BSR set to: 10
 15694                           ;term.c: 513: {
 15695                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15696  0001FC  0E57               	movlw	87
 15697  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15698  000200  A4D8               	btfss	status,2,c
 15699  000202  D091               	goto	l2415
 15700                           
 15701                           ; BSR set to: 10
 15702  000204  0E3A               	movlw	58
 15703  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15704  000208  A4D8               	btfss	status,2,c
 15705  00020A  D08D               	goto	l2415
 15706                           
 15707                           ; BSR set to: 10
 15708                           ;term.c: 515: {
 15709                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15710  00020C  CA05  F3AC         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15711                           
 15712                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15713  000210  CA06  F3AD         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15714                           
 15715                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15716  000214  CA08  F3A8         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15717                           
 15718                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15719  000218  CA09  F3A9         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15720                           
 15721                           ; BSR set to: 10
 15722                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15723  00021C  0EAC               	movlw	low Terminal@Len
 15724  00021E  0100               	movlb	0	; () banked
 15725  000220  6F83               	movwf	atoi@s& (0+255),b
 15726  000222  0E03               	movlw	high Terminal@Len
 15727  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15728  000226  ECB3  F01C         	call	_atoi	;wreg free
 15729  00022A  0100               	movlb	0	; () banked
 15730  00022C  5183               	movf	?_atoi& (0+255),w,b
 15731  00022E  0102               	movlb	2	; () banked
 15732  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15733                           
 15734                           ; BSR set to: 2
 15735                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15736  000232  0EA8               	movlw	low Terminal@Addr
 15737  000234  0100               	movlb	0	; () banked
 15738  000236  6F83               	movwf	xtoi@s& (0+255),b
 15739  000238  0E03               	movlw	high Terminal@Addr
 15740  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15741  00023C  ECF4  F01A         	call	_xtoi	;wreg free
 15742  000240  0100               	movlb	0	; () banked
 15743  000242  5183               	movf	?_xtoi& (0+255),w,b
 15744  000244  0102               	movlb	2	; () banked
 15745  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15746                           
 15747                           ; BSR set to: 2
 15748                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15749  000248  0E00               	movlw	0
 15750  00024A  0100               	movlb	0	; () banked
 15751  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15752  00024E  D032               	goto	l2416
 15753  000250                     
 15754                           ;term.c: 527: {
 15755                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15756                           
 15757                           ; BSR set to: 0
 15758  000250  0100               	movlb	0	; () banked
 15759  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15760  000254  0D02               	mullw	2
 15761  000256  0E0B               	movlw	11
 15762  000258  26F3               	addwf	prodl,f,c
 15763  00025A  0E00               	movlw	0
 15764  00025C  22F4               	addwfc	prodh,f,c
 15765  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15766  000260  24F3               	addwf	prodl,w,c
 15767  000262  6ED9               	movwf	fsr2l,c
 15768  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15769  000266  20F4               	addwfc	prodh,w,c
 15770  000268  6EDA               	movwf	fsr2h,c
 15771  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15772  00026C  0D04               	mullw	4
 15773  00026E  0E66               	movlw	low Terminal@Payload
 15774  000270  24F3               	addwf	prodl,w,c
 15775  000272  6EE1               	movwf	fsr1l,c
 15776  000274  0E07               	movlw	high Terminal@Payload
 15777  000276  20F4               	addwfc	prodh,w,c
 15778  000278  6EE2               	movwf	fsr1h,c
 15779  00027A  CFDF FFE7          	movff	indf2,indf1
 15780                           
 15781                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15782  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15783  000280  0D02               	mullw	2
 15784  000282  0E0C               	movlw	12
 15785  000284  26F3               	addwf	prodl,f,c
 15786  000286  0E00               	movlw	0
 15787  000288  22F4               	addwfc	prodh,f,c
 15788  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15789  00028C  24F3               	addwf	prodl,w,c
 15790  00028E  6ED9               	movwf	fsr2l,c
 15791  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15792  000292  20F4               	addwfc	prodh,w,c
 15793  000294  6EDA               	movwf	fsr2h,c
 15794  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15795  000298  0D04               	mullw	4
 15796  00029A  0E01               	movlw	1
 15797  00029C  26F3               	addwf	prodl,f,c
 15798  00029E  0E00               	movlw	0
 15799  0002A0  22F4               	addwfc	prodh,f,c
 15800  0002A2  0E66               	movlw	low Terminal@Payload
 15801  0002A4  24F3               	addwf	prodl,w,c
 15802  0002A6  6EE1               	movwf	fsr1l,c
 15803  0002A8  0E07               	movlw	high Terminal@Payload
 15804  0002AA  20F4               	addwfc	prodh,w,c
 15805  0002AC  6EE2               	movwf	fsr1h,c
 15806  0002AE  CFDF FFE7          	movff	indf2,indf1
 15807                           
 15808                           ; BSR set to: 0
 15809  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15810  0002B4                     l2416:
 15811                           
 15812                           ; BSR set to: 0
 15813                           
 15814                           ; BSR set to: 0
 15815  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15816  0002B6  0102               	movlb	2	; () banked
 15817  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15818  0002BA  B0D8               	btfsc	status,0,c
 15819  0002BC  D7C9               	goto	l2417
 15820                           
 15821                           ; BSR set to: 2
 15822                           ;term.c: 530: }
 15823                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15824                           
 15825                           ; BSR set to: 2
 15826  0002BE  0E00               	movlw	0
 15827  0002C0  0100               	movlb	0	; () banked
 15828  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15829  0002C4  D01F               	goto	l2419
 15830  0002C6                     
 15831                           ;term.c: 533: {
 15832                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15833                           
 15834                           ; BSR set to: 0
 15835  0002C6  0100               	movlb	0	; () banked
 15836  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15837  0002CA  0D04               	mullw	4
 15838  0002CC  0E66               	movlw	low Terminal@Payload
 15839  0002CE  24F3               	addwf	prodl,w,c
 15840  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15841  0002D2  0E07               	movlw	high Terminal@Payload
 15842  0002D4  20F4               	addwfc	prodh,w,c
 15843  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15844  0002D8  0E00               	movlw	0
 15845  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15846  0002DC  0E00               	movlw	0
 15847  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15848  0002E0  0E00               	movlw	0
 15849  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15850  0002E4  0E10               	movlw	16
 15851  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15852  0002E8  EC87  F00D         	call	_strtol	;wreg free
 15853  0002EC  0100               	movlb	0	; () banked
 15854  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15855  0002F0  0D01               	mullw	1
 15856  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15857  0002F4  24F3               	addwf	prodl,w,c
 15858  0002F6  6ED9               	movwf	fsr2l,c
 15859  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15860  0002FA  20F4               	addwfc	prodh,w,c
 15861  0002FC  6EDA               	movwf	fsr2h,c
 15862  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15863                           
 15864                           ; BSR set to: 0
 15865  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15866  000304                     l2419:
 15867                           
 15868                           ; BSR set to: 0
 15869                           
 15870                           ; BSR set to: 0
 15871  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15872  000306  0102               	movlb	2	; () banked
 15873  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15874  00030A  B0D8               	btfsc	status,0,c
 15875  00030C  D7DC               	goto	l2420
 15876                           
 15877                           ; BSR set to: 2
 15878                           ;term.c: 539: }
 15879                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15880                           
 15881                           ; BSR set to: 2
 15882  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15883  000310  0100               	movlb	0	; () banked
 15884  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15885  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15886  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15887  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15888  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15889  000320  EC1B  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 15890                           
 15891                           ;term.c: 543: }
 15892  000324  0012               	return	
 15893  000326                     l2415:
 15894                           
 15895                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15896  000326  0E52               	movlw	82
 15897  000328  010A               	movlb	10	; () banked
 15898  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15899  00032C  A4D8               	btfss	status,2,c
 15900  00032E  0012               	return	
 15901                           
 15902                           ; BSR set to: 10
 15903  000330  0E3A               	movlw	58
 15904  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15905  000334  A4D8               	btfss	status,2,c
 15906  000336  0012               	return	
 15907                           
 15908                           ; BSR set to: 10
 15909                           ;term.c: 545: {
 15910                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15911  000338  CA05  F3AC         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15912                           
 15913                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15914  00033C  CA06  F3AD         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15915                           
 15916                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15917  000340  CA08  F3A8         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15918                           
 15919                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15920  000344  CA09  F3A9         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15921                           
 15922                           ; BSR set to: 10
 15923                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15924  000348  0EAC               	movlw	low Terminal@Len
 15925  00034A  0100               	movlb	0	; () banked
 15926  00034C  6F83               	movwf	atoi@s& (0+255),b
 15927  00034E  0E03               	movlw	high Terminal@Len
 15928  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15929  000352  ECB3  F01C         	call	_atoi	;wreg free
 15930  000356  0100               	movlb	0	; () banked
 15931  000358  5183               	movf	?_atoi& (0+255),w,b
 15932  00035A  0102               	movlb	2	; () banked
 15933  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15934                           
 15935                           ; BSR set to: 2
 15936                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15937  00035E  0EA8               	movlw	low Terminal@Addr
 15938  000360  0100               	movlb	0	; () banked
 15939  000362  6F83               	movwf	xtoi@s& (0+255),b
 15940  000364  0E03               	movlw	high Terminal@Addr
 15941  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15942  000368  ECF4  F01A         	call	_xtoi	;wreg free
 15943  00036C  0100               	movlb	0	; () banked
 15944  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15945  000370  0102               	movlb	2	; () banked
 15946  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15947                           
 15948                           ; BSR set to: 2
 15949                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15950  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15951  000376  0100               	movlb	0	; () banked
 15952  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15953  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15954  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15955  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15956  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15957  000386  EC9C  F02F         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15958                           
 15959                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15960  00038A  0E01               	movlw	1
 15961  00038C  0102               	movlb	2	; () banked
 15962  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15963                           
 15964                           ; BSR set to: 2
 15965                           ;term.c: 561: }
 15966                           ;term.c: 562: }
 15967                           
 15968                           ; BSR set to: 2
 15969  000390  0012               	return	
 15970  000392                     l2414:
 15971                           
 15972                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15973                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15974                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15975                           
 15976                           ; BSR set to: 2
 15977  000392  0E54               	movlw	84
 15978  000394  010A               	movlb	10	; () banked
 15979  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15980  000398  A4D8               	btfss	status,2,c
 15981  00039A  0012               	return	
 15982                           
 15983                           ; BSR set to: 10
 15984  00039C  0E45               	movlw	69
 15985  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15986  0003A0  A4D8               	btfss	status,2,c
 15987  0003A2  0012               	return	
 15988                           
 15989                           ; BSR set to: 10
 15990  0003A4  0E4C               	movlw	76
 15991  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15992  0003A8  A4D8               	btfss	status,2,c
 15993  0003AA  0012               	return	
 15994                           
 15995                           ; BSR set to: 10
 15996                           ;term.c: 566: {
 15997                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15998  0003AC  CA03  F3AC         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15999                           
 16000                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 16001  0003B0  CA04  F3AD         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 16002                           
 16003                           ; BSR set to: 10
 16004                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 16005  0003B4  0EAC               	movlw	low Terminal@Len
 16006  0003B6  0100               	movlb	0	; () banked
 16007  0003B8  6F83               	movwf	atoi@s& (0+255),b
 16008  0003BA  0E03               	movlw	high Terminal@Len
 16009  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 16010  0003BE  ECB3  F01C         	call	_atoi	;wreg free
 16011  0003C2  C083  F31A         	movff	?_atoi,_UsbMasterPhoneNumberLen
 16012  0003C6  C084  F31B         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 16013                           
 16014                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 16015  0003CA  0E00               	movlw	0
 16016  0003CC  0100               	movlb	0	; () banked
 16017  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 16018  0003D0  D018               	goto	l2426
 16019  0003D2                     
 16020                           ; BSR set to: 0
 16021                           ;term.c: 573: {
 16022                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 16023                           
 16024                           ; BSR set to: 0
 16025  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 16026  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 16027  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16028  0003D8  0E05               	movlw	5
 16029  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 16030  0003DC  0E00               	movlw	0
 16031  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 16032  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 16033  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 16034  0003E4  6ED9               	movwf	fsr2l,c
 16035  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 16036  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 16037  0003EA  6EDA               	movwf	fsr2h,c
 16038  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 16039  0003EE  0D01               	mullw	1
 16040  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 16041  0003F2  24F3               	addwf	prodl,w,c
 16042  0003F4  6EE1               	movwf	fsr1l,c
 16043  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 16044  0003F8  20F4               	addwfc	prodh,w,c
 16045  0003FA  6EE2               	movwf	fsr1h,c
 16046  0003FC  CFDF FFE7          	movff	indf2,indf1
 16047                           
 16048                           ; BSR set to: 0
 16049  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 16050  000402                     l2426:
 16051                           
 16052                           ; BSR set to: 0
 16053                           
 16054                           ; BSR set to: 0
 16055  000402  51A4               	movf	Terminal@i& (0+255),w,b
 16056  000404  6FA2               	movwf	??_Terminal& (0+255),b
 16057  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16058  000408  0103               	movlb	3	; () banked
 16059  00040A  511A               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 16060  00040C  0100               	movlb	0	; () banked
 16061  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 16062  000410  0103               	movlb	3	; () banked
 16063  000412  511B               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 16064  000414  0100               	movlb	0	; () banked
 16065  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 16066  000418  B0D8               	btfsc	status,0,c
 16067  00041A  0012               	return	
 16068  00041C  D7DA               	goto	l2427
 16069  00041E                     
 16070                           ;term.c: 619: if((cdc_trf_state == 0))
 16071                           
 16072                           ; BSR set to: 0
 16073  00041E  0100               	movlb	0	; () banked
 16074  000420  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16075  000422  A4D8               	btfss	status,2,c
 16076  000424  0012               	return	
 16077                           
 16078                           ; BSR set to: 0
 16079                           ;term.c: 620: {
 16080                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 16081  000426  0E53               	movlw	83
 16082  000428  0102               	movlb	2	; () banked
 16083  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 16084                           
 16085                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 16086  00042C  0E42               	movlw	66
 16087  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 16088                           
 16089                           ;term.c: 623: UsbTxBuffer[2] = '[';
 16090  000430  0E5B               	movlw	91
 16091  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 16092                           
 16093                           ; BSR set to: 2
 16094                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 16095  000434  C3A8  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 16096                           
 16097                           ; BSR set to: 2
 16098                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 16099  000438  C3A9  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 16100                           
 16101                           ;term.c: 626: UsbTxBuffer[5] = ']';
 16102  00043C  0E5D               	movlw	93
 16103  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 16104                           
 16105                           ;term.c: 627: UsbTxBuffer[6] = ':';
 16106  000440  0E3A               	movlw	58
 16107  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 16108                           
 16109                           ; BSR set to: 2
 16110                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 16111  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 16112  000446  0100               	movlb	0	; () banked
 16113  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 16114  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 16115  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16116  00044E  0E07               	movlw	7
 16117  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 16118  000452  ECB6  F032         	call	_putUSBUSART	;wreg free
 16119                           
 16120                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 16121  000456  0E02               	movlw	2
 16122  000458  0102               	movlb	2	; () banked
 16123  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 16124                           
 16125                           ; BSR set to: 2
 16126                           ;term.c: 632: }
 16127                           ;term.c: 633: break;
 16128  00045C  0012               	return	
 16129  00045E                     
 16130                           ; BSR set to: 2
 16131                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 16132                           
 16133                           ; BSR set to: 2
 16134  00045E  ECD8  F032         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 16135  000462  06E8               	decf	wreg,f,c
 16136  000464  A4D8               	btfss	status,2,c
 16137  000466  D088               	goto	l2435
 16138                           
 16139                           ;term.c: 638: {
 16140                           ;term.c: 640: if (FormatOption == 1u)
 16141  000468  0102               	movlb	2	; () banked
 16142  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 16143  00046C  A4D8               	btfss	status,2,c
 16144  00046E  D027               	goto	u13960
 16145                           
 16146                           ; BSR set to: 2
 16147                           ;term.c: 641: {
 16148                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 16149  000470  0E00               	movlw	0
 16150  000472  0100               	movlb	0	; () banked
 16151  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 16152  000476  D01E               	goto	l2437
 16153  000478                     
 16154                           ;term.c: 644: {
 16155                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 16156                           
 16157                           ; BSR set to: 0
 16158  000478  0100               	movlb	0	; () banked
 16159  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 16160  00047C  0D04               	mullw	4
 16161  00047E  0E66               	movlw	low Terminal@Payload
 16162  000480  24F3               	addwf	prodl,w,c
 16163  000482  6F93               	movwf	itoa@buf& (0+255),b
 16164  000484  0E07               	movlw	high Terminal@Payload
 16165  000486  20F4               	addwfc	prodh,w,c
 16166  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 16167  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 16168  00048C  0D01               	mullw	1
 16169  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 16170  000490  24F3               	addwf	prodl,w,c
 16171  000492  6ED9               	movwf	fsr2l,c
 16172  000494  0E05               	movlw	high Terminal@TermRxBuffer
 16173  000496  20F4               	addwfc	prodh,w,c
 16174  000498  6EDA               	movwf	fsr2h,c
 16175  00049A  50DF               	movf	indf2,w,c
 16176  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 16177  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 16178  0004A0  6F95               	movwf	itoa@val& (0+255),b
 16179  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 16180  0004A4  0E00               	movlw	0
 16181  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 16182  0004A8  0E0A               	movlw	10
 16183  0004AA  6F97               	movwf	itoa@base& (0+255),b
 16184  0004AC  EC36  F02F         	call	_itoa	;wreg free
 16185  0004B0  0100               	movlb	0	; () banked
 16186  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 16187  0004B4                     l2437:
 16188                           
 16189                           ; BSR set to: 0
 16190                           
 16191                           ; BSR set to: 0
 16192  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 16193  0004B6  0102               	movlb	2	; () banked
 16194  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 16195  0004BA  B0D8               	btfsc	status,0,c
 16196  0004BC  D7DD               	goto	l2438
 16197  0004BE                     u13960:
 16198                           
 16199                           ; BSR set to: 2
 16200                           ;term.c: 646: }
 16201                           ;term.c: 647: }
 16202                           ;term.c: 650: if((cdc_trf_state == 0))
 16203                           
 16204                           ; BSR set to: 2
 16205                           
 16206                           ; BSR set to: 2
 16207  0004BE  0100               	movlb	0	; () banked
 16208  0004C0  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16209  0004C2  A4D8               	btfss	status,2,c
 16210  0004C4  0012               	return	
 16211                           
 16212                           ; BSR set to: 0
 16213                           ;term.c: 651: {
 16214                           ;term.c: 653: if (FormatOption == 1u)
 16215  0004C6  0102               	movlb	2	; () banked
 16216  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 16217  0004CA  A4D8               	btfss	status,2,c
 16218  0004CC  D02B               	goto	l2441
 16219                           
 16220                           ; BSR set to: 2
 16221                           ;term.c: 654: {
 16222                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 16223  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16224  0004D0  0D08               	mullw	8
 16225  0004D2  0E03               	movlw	3
 16226  0004D4  26F3               	addwf	prodl,f,c
 16227  0004D6  0E00               	movlw	0
 16228  0004D8  22F4               	addwfc	prodh,f,c
 16229  0004DA  0E66               	movlw	low Terminal@Payload
 16230  0004DC  24F3               	addwf	prodl,w,c
 16231  0004DE  6ED9               	movwf	fsr2l,c
 16232  0004E0  0E07               	movlw	high Terminal@Payload
 16233  0004E2  20F4               	addwfc	prodh,w,c
 16234  0004E4  6EDA               	movwf	fsr2h,c
 16235  0004E6  0E0D               	movlw	13
 16236  0004E8  6EDF               	movwf	indf2,c
 16237                           
 16238                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 16239  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16240  0004EC  0D08               	mullw	8
 16241  0004EE  0E02               	movlw	2
 16242  0004F0  26F3               	addwf	prodl,f,c
 16243  0004F2  0E00               	movlw	0
 16244  0004F4  22F4               	addwfc	prodh,f,c
 16245  0004F6  0E66               	movlw	low Terminal@Payload
 16246  0004F8  24F3               	addwf	prodl,w,c
 16247  0004FA  6ED9               	movwf	fsr2l,c
 16248  0004FC  0E07               	movlw	high Terminal@Payload
 16249  0004FE  20F4               	addwfc	prodh,w,c
 16250  000500  6EDA               	movwf	fsr2h,c
 16251  000502  0E0A               	movlw	10
 16252  000504  6EDF               	movwf	indf2,c
 16253                           
 16254                           ; BSR set to: 2
 16255                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 16256  000506  0E66               	movlw	low Terminal@Payload
 16257  000508  0100               	movlb	0	; () banked
 16258  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 16259  00050C  0E07               	movlw	high Terminal@Payload
 16260  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16261  000510  0102               	movlb	2	; () banked
 16262  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16263  000514  0D02               	mullw	2
 16264  000516  50F3               	movf	prodl,w,c
 16265  000518  0F04               	addlw	4
 16266  00051A  0100               	movlb	0	; () banked
 16267  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 16268  00051E  ECB6  F032         	call	_putUSBUSART	;wreg free
 16269                           
 16270                           ;term.c: 659: }
 16271  000522  D026               	goto	l2442
 16272  000524                     l2441:
 16273                           
 16274                           ;term.c: 660: else
 16275                           ;term.c: 661: {
 16276                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 16277  000524  0102               	movlb	2	; () banked
 16278  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16279  000528  0D01               	mullw	1
 16280  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 16281  00052C  24F3               	addwf	prodl,w,c
 16282  00052E  6ED9               	movwf	fsr2l,c
 16283  000530  0E05               	movlw	high Terminal@TermRxBuffer
 16284  000532  20F4               	addwfc	prodh,w,c
 16285  000534  6EDA               	movwf	fsr2h,c
 16286  000536  0E0D               	movlw	13
 16287  000538  6EDF               	movwf	indf2,c
 16288                           
 16289                           ; BSR set to: 2
 16290                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 16291  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16292  00053C  0100               	movlb	0	; () banked
 16293  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 16294  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16295  000542  0E01               	movlw	1
 16296  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 16297  000546  0E00               	movlw	0
 16298  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 16299  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 16300  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 16301  00054E  6ED9               	movwf	fsr2l,c
 16302  000550  0E05               	movlw	high Terminal@TermRxBuffer
 16303  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 16304  000554  6EDA               	movwf	fsr2h,c
 16305  000556  0E0A               	movlw	10
 16306  000558  6EDF               	movwf	indf2,c
 16307                           
 16308                           ; BSR set to: 0
 16309                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 16310  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 16311  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 16312  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 16313  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16314  000562  0102               	movlb	2	; () banked
 16315  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16316  000566  0F02               	addlw	2
 16317  000568  0100               	movlb	0	; () banked
 16318  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 16319  00056C  ECB6  F032         	call	_putUSBUSART	;wreg free
 16320  000570                     l2442:
 16321                           
 16322                           ;term.c: 666: }
 16323                           ;term.c: 668: TermState = Term_GetData;
 16324  000570  0E00               	movlw	0
 16325  000572  0102               	movlb	2	; () banked
 16326  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 16327                           
 16328                           ; BSR set to: 2
 16329                           ;term.c: 669: }
 16330                           ;term.c: 670: }
 16331  000576  0012               	return	
 16332  000578                     l2435:
 16333                           
 16334                           ;term.c: 671: else
 16335                           ;term.c: 672: {
 16336                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 16337                           
 16338                           ; BSR set to: 2
 16339  000578  0EC0               	movlw	low Terminal@SwTimer
 16340  00057A  0100               	movlb	0	; () banked
 16341  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 16342  00057E  0E04               	movlw	high Terminal@SwTimer
 16343  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 16344  000582  0EB8               	movlw	184
 16345  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 16346  000586  0E0B               	movlw	11
 16347  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 16348  00058A  0E00               	movlw	0
 16349  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 16350  00058E  0E00               	movlw	0
 16351  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 16352  000592  EC65  F028         	call	_OsTmr_Wait	;wreg free
 16353  000596  06E8               	decf	wreg,f,c
 16354  000598  A4D8               	btfss	status,2,c
 16355  00059A  0012               	return	
 16356                           
 16357                           ;term.c: 675: {
 16358                           ;term.c: 677: if((cdc_trf_state == 0))
 16359  00059C  0100               	movlb	0	; () banked
 16360  00059E  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16361  0005A0  A4D8               	btfss	status,2,c
 16362  0005A2  0012               	return	
 16363                           
 16364                           ; BSR set to: 0
 16365                           ;term.c: 678: {
 16366                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 16367  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 16368  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 16369  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 16370  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 16371  0005AC  0E5F               	movlw	low STR_21
 16372  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 16373  0005B0  0EFE               	movlw	high STR_21
 16374  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 16375  0005B4  EC1A  F031         	call	_strcpy	;wreg free
 16376                           
 16377                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 16378  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 16379  0005BA  0100               	movlb	0	; () banked
 16380  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 16381  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 16382  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16383  0005C2  0E29               	movlw	41
 16384  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 16385  0005C6  ECB6  F032         	call	_putUSBUSART	;wreg free
 16386                           
 16387                           ;term.c: 682: TermState = Term_GetData;
 16388  0005CA  0E00               	movlw	0
 16389  0005CC  0102               	movlb	2	; () banked
 16390  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 16391                           
 16392                           ; BSR set to: 2
 16393                           ;term.c: 693: }
 16394                           
 16395                           ; BSR set to: 2
 16396                           ;term.c: 692: break;
 16397                           
 16398                           ;term.c: 691: default:
 16399                           
 16400                           ; BSR set to: 2
 16401                           ;term.c: 689: break;
 16402                           
 16403                           ;term.c: 688: case Term_ReadSlvUartData:
 16404                           
 16405                           ; BSR set to: 2
 16406                           ;term.c: 683: }
 16407                           ;term.c: 684: }
 16408                           ;term.c: 685: }
 16409                           ;term.c: 686: break;
 16410                           
 16411                           ; BSR set to: 2
 16412                           
 16413                           ; BSR set to: 2
 16414  0005D0  0012               	return	
 16415  0005D2                     l2396:
 16416                           
 16417                           ; BSR set to: 2
 16418  0005D2  0102               	movlb	2	; () banked
 16419  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 16420                           
 16421                           ; Switch size 1, requested type "space"
 16422                           ; Number of cases is 4, Range of values is 0 to 3
 16423                           ; switch strategies available:
 16424                           ; Name         Instructions Cycles
 16425                           ; simple_byte           13     7 (average)
 16426                           ;	Chosen strategy is simple_byte
 16427  0005D6  0A00               	xorlw	0	; case 0
 16428  0005D8  B4D8               	btfsc	status,2,c
 16429  0005DA  D583               	goto	l2397
 16430  0005DC  0A01               	xorlw	1	; case 1
 16431  0005DE  B4D8               	btfsc	status,2,c
 16432  0005E0  D71E               	goto	l2432
 16433  0005E2  0A03               	xorlw	3	; case 2
 16434  0005E4  B4D8               	btfsc	status,2,c
 16435  0005E6  D73B               	goto	l2434
 16436  0005E8  0A01               	xorlw	1	; case 3
 16437  0005EA  0012               	return	
 16438  0005EC                     __end_of_Terminal:
 16439                           	opt stack 0
 16440                           tosu	equ	0xFFF
 16441                           tosh	equ	0xFFE
 16442                           tosl	equ	0xFFD
 16443                           pclath	equ	0xFFA
 16444                           tblptru	equ	0xFF8
 16445                           tblptrh	equ	0xFF7
 16446                           tblptrl	equ	0xFF6
 16447                           tablat	equ	0xFF5
 16448                           prodh	equ	0xFF4
 16449                           prodl	equ	0xFF3
 16450                           intcon	equ	0xFF2
 16451                           intcon2	equ	0xFF1
 16452                           intcon3	equ	0xFF0
 16453                           indf0	equ	0xFEF
 16454                           postinc0	equ	0xFEE
 16455                           plusw0	equ	0xFEB
 16456                           fsr0h	equ	0xFEA
 16457                           fsr0l	equ	0xFE9
 16458                           wreg	equ	0xFE8
 16459                           indf1	equ	0xFE7
 16460                           postinc1	equ	0xFE6
 16461                           postdec1	equ	0xFE5
 16462                           fsr1h	equ	0xFE2
 16463                           fsr1l	equ	0xFE1
 16464                           indf2	equ	0xFDF
 16465                           postinc2	equ	0xFDE
 16466                           postdec2	equ	0xFDD
 16467                           plusw2	equ	0xFDB
 16468                           fsr2h	equ	0xFDA
 16469                           fsr2l	equ	0xFD9
 16470                           status	equ	0xFD8
 16471                           
 16472 ;; *************** function _xtoi *****************
 16473 ;; Defined at:
 16474 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16475 ;; Parameters:    Size  Location     Type
 16476 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16477 ;;		 -> Terminal@Addr(4), 
 16478 ;; Auto vars:     Size  Location     Type
 16479 ;;  val             2   40[BANK0 ] unsigned int 
 16480 ;;  c               1   42[BANK0 ] unsigned char 
 16481 ;;  sign            1   39[BANK0 ] unsigned char 
 16482 ;; Return value:  Size  Location     Type
 16483 ;;                  2   35[BANK0 ] unsigned int 
 16484 ;; Registers used:
 16485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16486 ;; Tracked objects:
 16487 ;;		On entry : 0/0
 16488 ;;		On exit  : 0/0
 16489 ;;		Unchanged: 0/0
 16490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16491 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16492 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16493 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16494 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16495 ;;Total ram usage:        8 bytes
 16496 ;; Hardware stack levels used:    1
 16497 ;; Hardware stack levels required when called:   13
 16498 ;; This function calls:
 16499 ;;		_isdigit
 16500 ;;		_isspace
 16501 ;;		_isupper
 16502 ;;		_isxdigit
 16503 ;;		_tolower
 16504 ;; This function is called by:
 16505 ;;		_Terminal
 16506 ;; This function uses a non-reentrant model
 16507 ;;
 16508                           
 16509                           	psect	text61
 16510  0035E8                     __ptext61:
 16511                           	opt stack 0
 16512  0035E8                     _xtoi:
 16513                           	opt stack 12
 16514                           
 16515                           ;incstack = 0
 16516  0035E8  0E00               	movlw	0
 16517  0035EA  0100               	movlb	0	; () banked
 16518  0035EC  6F87               	movwf	xtoi@sign& (0+255),b
 16519  0035EE  0E00               	movlw	0
 16520  0035F0  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16521  0035F2  0E00               	movlw	0
 16522  0035F4  6F88               	movwf	xtoi@val& (0+255),b
 16523  0035F6  D003               	goto	l3500
 16524  0035F8                     
 16525                           ; BSR set to: 0
 16526  0035F8  0100               	movlb	0	; () banked
 16527  0035FA  4B83               	infsnz	xtoi@s& (0+255),f,b
 16528  0035FC  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16529  0035FE                     l3500:
 16530                           
 16531                           ; BSR set to: 0
 16532                           
 16533                           ; BSR set to: 0
 16534  0035FE  C083  FFD9         	movff	xtoi@s,fsr2l
 16535  003602  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16536  003606  50DF               	movf	indf2,w,c
 16537  003608  ECEC  F031         	call	_isspace
 16538  00360C  B0D8               	btfsc	status,0,c
 16539  00360E  D7F4               	goto	l3501
 16540  003610  C083  FFD9         	movff	xtoi@s,fsr2l
 16541  003614  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16542  003618  0E2D               	movlw	45
 16543  00361A  18DE               	xorwf	postinc2,w,c
 16544  00361C  A4D8               	btfss	status,2,c
 16545  00361E  D003               	goto	l3503
 16546  003620  0100               	movlb	0	; () banked
 16547  003622  2B87               	incf	xtoi@sign& (0+255),f,b
 16548  003624  D009               	goto	L15
 16549  003626                     l3503:
 16550                           
 16551                           ; BSR set to: 0
 16552  003626  C083  FFD9         	movff	xtoi@s,fsr2l
 16553  00362A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16554  00362E  0E2B               	movlw	43
 16555  003630  18DE               	xorwf	postinc2,w,c
 16556  003632  A4D8               	btfss	status,2,c
 16557  003634  D028               	goto	l3506
 16558  003636  0100               	movlb	0	; () banked
 16559  003638                     L15:
 16560  003638  4B83               	infsnz	xtoi@s& (0+255),f,b
 16561  00363A  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16562                           
 16563                           ; BSR set to: 0
 16564                           
 16565                           ; BSR set to: 0
 16566  00363C  D024               	goto	l3506
 16567  00363E                     
 16568                           ; BSR set to: 0
 16569  00363E  0100               	movlb	0	; () banked
 16570  003640  518A               	movf	xtoi@c& (0+255),w,b
 16571  003642  ECA5  F032         	call	_isupper
 16572  003646  A0D8               	btfss	status,0,c
 16573  003648  D006               	goto	l3508
 16574  00364A  0100               	movlb	0	; () banked
 16575  00364C  518A               	movf	xtoi@c& (0+255),w,b
 16576  00364E  EC87  F033         	call	_tolower
 16577  003652  0100               	movlb	0	; () banked
 16578  003654  6F8A               	movwf	xtoi@c& (0+255),b
 16579  003656                     l3508:
 16580  003656  0100               	movlb	0	; () banked
 16581  003658  518A               	movf	xtoi@c& (0+255),w,b
 16582  00365A  ECC7  F032         	call	_isdigit
 16583  00365E  A0D8               	btfss	status,0,c
 16584  003660  D002               	goto	l3509
 16585  003662  0E30               	movlw	48
 16586  003664  D001               	goto	L14
 16587  003666                     l3509:
 16588                           
 16589                           ; BSR set to: 0
 16590  003666  0E57               	movlw	87
 16591  003668                     L14:
 16592  003668  0100               	movlb	0	; () banked
 16593  00366A  5F8A               	subwf	xtoi@c& (0+255),f,b
 16594                           
 16595                           ; BSR set to: 0
 16596  00366C  3B88               	swapf	xtoi@val& (0+255),f,b
 16597  00366E  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16598  003670  0EF0               	movlw	240
 16599  003672  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16600  003674  5188               	movf	xtoi@val& (0+255),w,b
 16601  003676  0B0F               	andlw	15
 16602  003678  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16603  00367A  0EF0               	movlw	240
 16604  00367C  1788               	andwf	xtoi@val& (0+255),f,b
 16605  00367E  518A               	movf	xtoi@c& (0+255),w,b
 16606  003680  2788               	addwf	xtoi@val& (0+255),f,b
 16607  003682  0E00               	movlw	0
 16608  003684  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16609  003686                     l3506:
 16610                           
 16611                           ; BSR set to: 0
 16612  003686  C083  FFD9         	movff	xtoi@s,fsr2l
 16613  00368A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16614  00368E  0100               	movlb	0	; () banked
 16615  003690  4B83               	infsnz	xtoi@s& (0+255),f,b
 16616  003692  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16617  003694  50DF               	movf	indf2,w,c
 16618  003696  6F8A               	movwf	xtoi@c& (0+255),b
 16619  003698  518A               	movf	xtoi@c& (0+255),w,b
 16620  00369A  EC59  F030         	call	_isxdigit
 16621  00369E  B0D8               	btfsc	status,0,c
 16622  0036A0  D7CE               	goto	l3507
 16623  0036A2  0100               	movlb	0	; () banked
 16624  0036A4  5187               	movf	xtoi@sign& (0+255),w,b
 16625  0036A6  B4D8               	btfsc	status,2,c
 16626  0036A8  D00D               	goto	l3512
 16627                           
 16628                           ; BSR set to: 0
 16629  0036AA  C088  F085         	movff	xtoi@val,??_xtoi
 16630  0036AE  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16631  0036B2  1F85               	comf	??_xtoi& (0+255),f,b
 16632  0036B4  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16633  0036B6  4B85               	infsnz	??_xtoi& (0+255),f,b
 16634  0036B8  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16635  0036BA  C085  F083         	movff	??_xtoi,?_xtoi
 16636  0036BE  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16637  0036C2  0012               	return	
 16638  0036C4                     l3512:
 16639                           
 16640                           ; BSR set to: 0
 16641  0036C4  C088  F083         	movff	xtoi@val,?_xtoi
 16642  0036C8  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16643                           
 16644                           ; BSR set to: 0
 16645  0036CC  0012               	return		;funcret
 16646  0036CE                     __end_of_xtoi:
 16647                           	opt stack 0
 16648                           tosu	equ	0xFFF
 16649                           tosh	equ	0xFFE
 16650                           tosl	equ	0xFFD
 16651                           pclath	equ	0xFFA
 16652                           tblptru	equ	0xFF8
 16653                           tblptrh	equ	0xFF7
 16654                           tblptrl	equ	0xFF6
 16655                           tablat	equ	0xFF5
 16656                           prodh	equ	0xFF4
 16657                           prodl	equ	0xFF3
 16658                           intcon	equ	0xFF2
 16659                           intcon2	equ	0xFF1
 16660                           intcon3	equ	0xFF0
 16661                           indf0	equ	0xFEF
 16662                           postinc0	equ	0xFEE
 16663                           plusw0	equ	0xFEB
 16664                           fsr0h	equ	0xFEA
 16665                           fsr0l	equ	0xFE9
 16666                           wreg	equ	0xFE8
 16667                           indf1	equ	0xFE7
 16668                           postinc1	equ	0xFE6
 16669                           postdec1	equ	0xFE5
 16670                           fsr1h	equ	0xFE2
 16671                           fsr1l	equ	0xFE1
 16672                           indf2	equ	0xFDF
 16673                           postinc2	equ	0xFDE
 16674                           postdec2	equ	0xFDD
 16675                           plusw2	equ	0xFDB
 16676                           fsr2h	equ	0xFDA
 16677                           fsr2l	equ	0xFD9
 16678                           status	equ	0xFD8
 16679                           
 16680 ;; *************** function _tolower *****************
 16681 ;; Defined at:
 16682 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16683 ;; Parameters:    Size  Location     Type
 16684 ;;  c               1    wreg     unsigned char 
 16685 ;; Auto vars:     Size  Location     Type
 16686 ;;  c               1   29[BANK0 ] unsigned char 
 16687 ;; Return value:  Size  Location     Type
 16688 ;;                  1    wreg      unsigned char 
 16689 ;; Registers used:
 16690 ;;		wreg, status,2, status,0
 16691 ;; Tracked objects:
 16692 ;;		On entry : 0/0
 16693 ;;		On exit  : 0/0
 16694 ;;		Unchanged: 0/0
 16695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16697 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16699 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16700 ;;Total ram usage:        1 bytes
 16701 ;; Hardware stack levels used:    1
 16702 ;; Hardware stack levels required when called:   11
 16703 ;; This function calls:
 16704 ;;		Nothing
 16705 ;; This function is called by:
 16706 ;;		_xtoi
 16707 ;; This function uses a non-reentrant model
 16708 ;;
 16709                           
 16710                           	psect	text62
 16711  00670E                     __ptext62:
 16712                           	opt stack 0
 16713  00670E                     _tolower:
 16714                           	opt stack 13
 16715                           
 16716                           ; BSR set to: 0
 16717                           ;incstack = 0
 16718                           ;tolower@c stored from wreg
 16719  00670E  0100               	movlb	0	; () banked
 16720  006710  6F7D               	movwf	tolower@c& (0+255),b
 16721  006712  0E5B               	movlw	91
 16722  006714  0100               	movlb	0	; () banked
 16723  006716  617D               	cpfslt	tolower@c& (0+255),b
 16724  006718  D004               	goto	l3559
 16725                           
 16726                           ; BSR set to: 0
 16727  00671A  0E40               	movlw	64
 16728  00671C  657D               	cpfsgt	tolower@c& (0+255),b
 16729  00671E  D001               	goto	l3559
 16730                           
 16731                           ; BSR set to: 0
 16732  006720  8B7D               	bsf	tolower@c& (0+255),5,b
 16733  006722                     l3559:
 16734                           
 16735                           ; BSR set to: 0
 16736                           
 16737                           ; BSR set to: 0
 16738  006722  517D               	movf	tolower@c& (0+255),w,b
 16739  006724  0012               	return	
 16740  006726                     __end_of_tolower:
 16741                           	opt stack 0
 16742                           tosu	equ	0xFFF
 16743                           tosh	equ	0xFFE
 16744                           tosl	equ	0xFFD
 16745                           pclath	equ	0xFFA
 16746                           tblptru	equ	0xFF8
 16747                           tblptrh	equ	0xFF7
 16748                           tblptrl	equ	0xFF6
 16749                           tablat	equ	0xFF5
 16750                           prodh	equ	0xFF4
 16751                           prodl	equ	0xFF3
 16752                           intcon	equ	0xFF2
 16753                           intcon2	equ	0xFF1
 16754                           intcon3	equ	0xFF0
 16755                           indf0	equ	0xFEF
 16756                           postinc0	equ	0xFEE
 16757                           plusw0	equ	0xFEB
 16758                           fsr0h	equ	0xFEA
 16759                           fsr0l	equ	0xFE9
 16760                           wreg	equ	0xFE8
 16761                           indf1	equ	0xFE7
 16762                           postinc1	equ	0xFE6
 16763                           postdec1	equ	0xFE5
 16764                           fsr1h	equ	0xFE2
 16765                           fsr1l	equ	0xFE1
 16766                           indf2	equ	0xFDF
 16767                           postinc2	equ	0xFDE
 16768                           postdec2	equ	0xFDD
 16769                           plusw2	equ	0xFDB
 16770                           fsr2h	equ	0xFDA
 16771                           fsr2l	equ	0xFD9
 16772                           status	equ	0xFD8
 16773                           
 16774 ;; *************** function _isxdigit *****************
 16775 ;; Defined at:
 16776 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16777 ;; Parameters:    Size  Location     Type
 16778 ;;  c               1    wreg     unsigned char 
 16779 ;; Auto vars:     Size  Location     Type
 16780 ;;  c               1   34[BANK0 ] unsigned char 
 16781 ;; Return value:  Size  Location     Type
 16782 ;;		None               void
 16783 ;; Registers used:
 16784 ;;		wreg, status,2, status,0, cstack
 16785 ;; Tracked objects:
 16786 ;;		On entry : 0/0
 16787 ;;		On exit  : 0/0
 16788 ;;		Unchanged: 0/0
 16789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16791 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16792 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16793 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16794 ;;Total ram usage:        3 bytes
 16795 ;; Hardware stack levels used:    1
 16796 ;; Hardware stack levels required when called:   12
 16797 ;; This function calls:
 16798 ;;		_isdigit
 16799 ;; This function is called by:
 16800 ;;		_xtoi
 16801 ;; This function uses a non-reentrant model
 16802 ;;
 16803                           
 16804                           	psect	text63
 16805  0060B2                     __ptext63:
 16806                           	opt stack 0
 16807  0060B2                     _isxdigit:
 16808                           	opt stack 12
 16809                           
 16810                           ; BSR set to: 0
 16811                           ;incstack = 0
 16812                           ;isxdigit@c stored from wreg
 16813  0060B2  0100               	movlb	0	; () banked
 16814  0060B4  6F82               	movwf	isxdigit@c& (0+255),b
 16815  0060B6  0E01               	movlw	1
 16816  0060B8  0100               	movlb	0	; () banked
 16817  0060BA  6F81               	movwf	_isxdigit$6642& (0+255),b
 16818                           
 16819                           ; BSR set to: 0
 16820  0060BC  0E67               	movlw	103
 16821  0060BE  6182               	cpfslt	isxdigit@c& (0+255),b
 16822  0060C0  D003               	goto	u12340
 16823                           
 16824                           ; BSR set to: 0
 16825  0060C2  0E61               	movlw	97
 16826  0060C4  6182               	cpfslt	isxdigit@c& (0+255),b
 16827  0060C6  D00E               	goto	l3555
 16828  0060C8                     u12340:
 16829                           
 16830                           ; BSR set to: 0
 16831                           
 16832                           ; BSR set to: 0
 16833  0060C8  0E47               	movlw	71
 16834  0060CA  6182               	cpfslt	isxdigit@c& (0+255),b
 16835  0060CC  D003               	goto	u12360
 16836                           
 16837                           ; BSR set to: 0
 16838  0060CE  0E41               	movlw	65
 16839  0060D0  6182               	cpfslt	isxdigit@c& (0+255),b
 16840  0060D2  D008               	goto	l3555
 16841  0060D4                     u12360:
 16842                           
 16843                           ; BSR set to: 0
 16844                           
 16845                           ; BSR set to: 0
 16846  0060D4  5182               	movf	isxdigit@c& (0+255),w,b
 16847  0060D6  ECC7  F032         	call	_isdigit
 16848  0060DA  B0D8               	btfsc	status,0,c
 16849  0060DC  D003               	goto	l3555
 16850  0060DE  0E00               	movlw	0
 16851  0060E0  0100               	movlb	0	; () banked
 16852  0060E2  6F81               	movwf	_isxdigit$6642& (0+255),b
 16853  0060E4                     l3555:
 16854                           
 16855                           ; BSR set to: 0
 16856  0060E4  C081  F080         	movff	_isxdigit$6642,??_isxdigit
 16857  0060E8  0100               	movlb	0	; () banked
 16858  0060EA  3180               	rrcf	??_isxdigit& (0+255),w,b
 16859  0060EC  0012               	return	
 16860  0060EE                     __end_of_isxdigit:
 16861                           	opt stack 0
 16862                           tosu	equ	0xFFF
 16863                           tosh	equ	0xFFE
 16864                           tosl	equ	0xFFD
 16865                           pclath	equ	0xFFA
 16866                           tblptru	equ	0xFF8
 16867                           tblptrh	equ	0xFF7
 16868                           tblptrl	equ	0xFF6
 16869                           tablat	equ	0xFF5
 16870                           prodh	equ	0xFF4
 16871                           prodl	equ	0xFF3
 16872                           intcon	equ	0xFF2
 16873                           intcon2	equ	0xFF1
 16874                           intcon3	equ	0xFF0
 16875                           indf0	equ	0xFEF
 16876                           postinc0	equ	0xFEE
 16877                           plusw0	equ	0xFEB
 16878                           fsr0h	equ	0xFEA
 16879                           fsr0l	equ	0xFE9
 16880                           wreg	equ	0xFE8
 16881                           indf1	equ	0xFE7
 16882                           postinc1	equ	0xFE6
 16883                           postdec1	equ	0xFE5
 16884                           fsr1h	equ	0xFE2
 16885                           fsr1l	equ	0xFE1
 16886                           indf2	equ	0xFDF
 16887                           postinc2	equ	0xFDE
 16888                           postdec2	equ	0xFDD
 16889                           plusw2	equ	0xFDB
 16890                           fsr2h	equ	0xFDA
 16891                           fsr2l	equ	0xFD9
 16892                           status	equ	0xFD8
 16893                           
 16894 ;; *************** function _strtol *****************
 16895 ;; Defined at:
 16896 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16897 ;; Parameters:    Size  Location     Type
 16898 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16899 ;;		 -> Terminal@Payload(80), 
 16900 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16901 ;;		 -> NULL(0), 
 16902 ;;  base            2   45[BANK0 ] int 
 16903 ;; Auto vars:     Size  Location     Type
 16904 ;;  a               4   52[BANK0 ] long 
 16905 ;;  c               1   56[BANK0 ] unsigned char 
 16906 ;;  sign            1   51[BANK0 ] unsigned char 
 16907 ;; Return value:  Size  Location     Type
 16908 ;;                  4   41[BANK0 ] long 
 16909 ;; Registers used:
 16910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16911 ;; Tracked objects:
 16912 ;;		On entry : 0/0
 16913 ;;		On exit  : 0/0
 16914 ;;		Unchanged: 0/0
 16915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16916 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16917 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16918 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16919 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16920 ;;Total ram usage:       16 bytes
 16921 ;; Hardware stack levels used:    1
 16922 ;; Hardware stack levels required when called:   13
 16923 ;; This function calls:
 16924 ;;		___lmul
 16925 ;;		_isalpha
 16926 ;;		_isdigit
 16927 ;;		_isspace
 16928 ;;		_toupper
 16929 ;; This function is called by:
 16930 ;;		_Terminal
 16931 ;; This function uses a non-reentrant model
 16932 ;;
 16933                           
 16934                           	psect	text64
 16935  001B0E                     __ptext64:
 16936                           	opt stack 0
 16937  001B0E                     _strtol:
 16938                           	opt stack 12
 16939                           
 16940                           ; BSR set to: 0
 16941                           ;incstack = 0
 16942  001B0E  C089  FFD9         	movff	strtol@s,fsr2l
 16943  001B12  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16944  001B16  50DF               	movf	indf2,w,c
 16945  001B18  0100               	movlb	0	; () banked
 16946  001B1A  6F98               	movwf	strtol@c& (0+255),b
 16947                           
 16948                           ; BSR set to: 0
 16949  001B1C  4B89               	infsnz	strtol@s& (0+255),f,b
 16950  001B1E  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16951                           
 16952                           ; BSR set to: 0
 16953  001B20  5198               	movf	strtol@c& (0+255),w,b
 16954  001B22  ECEC  F031         	call	_isspace
 16955  001B26  B0D8               	btfsc	status,0,c
 16956  001B28  D7F2               	goto	_strtol
 16957  001B2A  0E00               	movlw	0
 16958  001B2C  0100               	movlb	0	; () banked
 16959  001B2E  6F94               	movwf	strtol@a& (0+255),b
 16960  001B30  0E00               	movlw	0
 16961  001B32  6F95               	movwf	(strtol@a+1)& (0+255),b
 16962  001B34  0E00               	movlw	0
 16963  001B36  6F96               	movwf	(strtol@a+2)& (0+255),b
 16964  001B38  0E00               	movlw	0
 16965  001B3A  6F97               	movwf	(strtol@a+3)& (0+255),b
 16966  001B3C  0E00               	movlw	0
 16967  001B3E  6F93               	movwf	strtol@sign& (0+255),b
 16968                           
 16969                           ; BSR set to: 0
 16970  001B40  0E2D               	movlw	45
 16971  001B42  1998               	xorwf	strtol@c& (0+255),w,b
 16972  001B44  A4D8               	btfss	status,2,c
 16973  001B46  D003               	goto	l3462
 16974                           
 16975                           ; BSR set to: 0
 16976  001B48  0E01               	movlw	1
 16977  001B4A  6F93               	movwf	strtol@sign& (0+255),b
 16978  001B4C  D004               	goto	u12840
 16979  001B4E                     l3462:
 16980                           
 16981                           ; BSR set to: 0
 16982                           
 16983                           ; BSR set to: 0
 16984  001B4E  0E2B               	movlw	43
 16985  001B50  1998               	xorwf	strtol@c& (0+255),w,b
 16986  001B52  A4D8               	btfss	status,2,c
 16987  001B54  D008               	goto	l3464
 16988  001B56                     u12840:
 16989                           
 16990                           ; BSR set to: 0
 16991  001B56  C089  FFD9         	movff	strtol@s,fsr2l
 16992  001B5A  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16993  001B5E  50DF               	movf	indf2,w,c
 16994  001B60  6F98               	movwf	strtol@c& (0+255),b
 16995                           
 16996                           ; BSR set to: 0
 16997  001B62  4B89               	infsnz	strtol@s& (0+255),f,b
 16998  001B64  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16999  001B66                     l3464:
 17000                           
 17001                           ; BSR set to: 0
 17002                           
 17003                           ; BSR set to: 0
 17004                           
 17005                           ; BSR set to: 0
 17006  001B66  0E30               	movlw	48
 17007  001B68  1998               	xorwf	strtol@c& (0+255),w,b
 17008  001B6A  A4D8               	btfss	status,2,c
 17009  001B6C  D02E               	goto	l3472
 17010                           
 17011                           ; BSR set to: 0
 17012  001B6E  C089  FFD9         	movff	strtol@s,fsr2l
 17013  001B72  C08A  FFDA         	movff	strtol@s+1,fsr2h
 17014  001B76  50DF               	movf	indf2,w,c
 17015  001B78  6F98               	movwf	strtol@c& (0+255),b
 17016                           
 17017                           ; BSR set to: 0
 17018  001B7A  4B89               	infsnz	strtol@s& (0+255),f,b
 17019  001B7C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 17020                           
 17021                           ; BSR set to: 0
 17022  001B7E  518D               	movf	strtol@base& (0+255),w,b
 17023  001B80  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17024  001B82  B4D8               	btfsc	status,2,c
 17025  001B84  D005               	goto	u12870
 17026                           
 17027                           ; BSR set to: 0
 17028  001B86  0E10               	movlw	16
 17029  001B88  198D               	xorwf	strtol@base& (0+255),w,b
 17030  001B8A  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17031  001B8C  A4D8               	btfss	status,2,c
 17032  001B8E  D015               	goto	l3466
 17033  001B90                     u12870:
 17034                           
 17035                           ; BSR set to: 0
 17036                           
 17037                           ; BSR set to: 0
 17038  001B90  0E78               	movlw	120
 17039  001B92  1998               	xorwf	strtol@c& (0+255),w,b
 17040  001B94  B4D8               	btfsc	status,2,c
 17041  001B96  D004               	goto	u12890
 17042                           
 17043                           ; BSR set to: 0
 17044  001B98  0E58               	movlw	88
 17045  001B9A  1998               	xorwf	strtol@c& (0+255),w,b
 17046  001B9C  A4D8               	btfss	status,2,c
 17047  001B9E  D00D               	goto	l3466
 17048  001BA0                     u12890:
 17049                           
 17050                           ; BSR set to: 0
 17051                           
 17052                           ; BSR set to: 0
 17053  001BA0  0E00               	movlw	0
 17054  001BA2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 17055  001BA4  0E10               	movlw	16
 17056  001BA6  6F8D               	movwf	strtol@base& (0+255),b
 17057                           
 17058                           ; BSR set to: 0
 17059  001BA8  C089  FFD9         	movff	strtol@s,fsr2l
 17060  001BAC  C08A  FFDA         	movff	strtol@s+1,fsr2h
 17061  001BB0  50DF               	movf	indf2,w,c
 17062  001BB2  6F98               	movwf	strtol@c& (0+255),b
 17063                           
 17064                           ; BSR set to: 0
 17065  001BB4  4B89               	infsnz	strtol@s& (0+255),f,b
 17066  001BB6  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 17067  001BB8  D008               	goto	l3472
 17068  001BBA                     l3466:
 17069                           
 17070                           ; BSR set to: 0
 17071                           
 17072                           ; BSR set to: 0
 17073  001BBA  518D               	movf	strtol@base& (0+255),w,b
 17074  001BBC  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17075  001BBE  A4D8               	btfss	status,2,c
 17076  001BC0  D004               	goto	l3472
 17077                           
 17078                           ; BSR set to: 0
 17079  001BC2  0E00               	movlw	0
 17080  001BC4  6F8E               	movwf	(strtol@base+1)& (0+255),b
 17081  001BC6  0E08               	movlw	8
 17082  001BC8  6F8D               	movwf	strtol@base& (0+255),b
 17083  001BCA                     l3472:
 17084                           
 17085                           ; BSR set to: 0
 17086                           
 17087                           ; BSR set to: 0
 17088                           
 17089                           ; BSR set to: 0
 17090                           
 17091                           ; BSR set to: 0
 17092  001BCA  518D               	movf	strtol@base& (0+255),w,b
 17093  001BCC  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17094  001BCE  A4D8               	btfss	status,2,c
 17095  001BD0  D004               	goto	l3473
 17096                           
 17097                           ; BSR set to: 0
 17098  001BD2  0E00               	movlw	0
 17099  001BD4  6F8E               	movwf	(strtol@base+1)& (0+255),b
 17100  001BD6  0E0A               	movlw	10
 17101  001BD8  6F8D               	movwf	strtol@base& (0+255),b
 17102  001BDA                     l3473:
 17103                           
 17104                           ; BSR set to: 0
 17105                           
 17106                           ; BSR set to: 0
 17107                           
 17108                           ; BSR set to: 0
 17109  001BDA  5198               	movf	strtol@c& (0+255),w,b
 17110  001BDC  EC63  F031         	call	_isalpha
 17111  001BE0  A0D8               	btfss	status,0,c
 17112  001BE2  D008               	goto	l3475
 17113  001BE4  0100               	movlb	0	; () banked
 17114  001BE6  5198               	movf	strtol@c& (0+255),w,b
 17115  001BE8  EC93  F033         	call	_toupper
 17116  001BEC  0FC9               	addlw	201
 17117  001BEE  0100               	movlb	0	; () banked
 17118  001BF0  6F98               	movwf	strtol@c& (0+255),b
 17119  001BF2  D009               	goto	l3478
 17120  001BF4                     l3475:
 17121                           
 17122                           ; BSR set to: 0
 17123  001BF4  0100               	movlb	0	; () banked
 17124  001BF6  5198               	movf	strtol@c& (0+255),w,b
 17125  001BF8  ECC7  F032         	call	_isdigit
 17126  001BFC  A0D8               	btfss	status,0,c
 17127  001BFE  D039               	goto	l3479
 17128  001C00  0E30               	movlw	48
 17129  001C02  0100               	movlb	0	; () banked
 17130  001C04  5F98               	subwf	strtol@c& (0+255),f,b
 17131  001C06                     l3478:
 17132                           
 17133                           ; BSR set to: 0
 17134                           
 17135                           ; BSR set to: 0
 17136                           
 17137                           ; BSR set to: 0
 17138  001C06  5198               	movf	strtol@c& (0+255),w,b
 17139  001C08  6F8F               	movwf	??_strtol& (0+255),b
 17140  001C0A  6B90               	clrf	(??_strtol+1)& (0+255),b
 17141  001C0C  518D               	movf	strtol@base& (0+255),w,b
 17142  001C0E  5D8F               	subwf	??_strtol& (0+255),w,b
 17143  001C10  5190               	movf	(??_strtol+1)& (0+255),w,b
 17144  001C12  0A80               	xorlw	128
 17145  001C14  6F91               	movwf	(??_strtol+2)& (0+255),b
 17146  001C16  518E               	movf	(strtol@base+1)& (0+255),w,b
 17147  001C18  0A80               	xorlw	128
 17148  001C1A  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 17149  001C1C  B0D8               	btfsc	status,0,c
 17150  001C1E  D029               	goto	l3479
 17151                           
 17152                           ; BSR set to: 0
 17153                           
 17154                           ; BSR set to: 0
 17155                           
 17156                           ; BSR set to: 0
 17157  001C20  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 17158  001C24  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 17159  001C28  0E00               	movlw	0
 17160  001C2A  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17161  001C2C  0EFF               	movlw	-1
 17162  001C2E  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 17163  001C30  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 17164  001C32  C094  F081         	movff	strtol@a,___lmul@multiplicand
 17165  001C36  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 17166  001C3A  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 17167  001C3E  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 17168  001C42  ECA6  F02B         	call	___lmul	;wreg free
 17169  001C46  0100               	movlb	0	; () banked
 17170  001C48  5198               	movf	strtol@c& (0+255),w,b
 17171  001C4A  257D               	addwf	?___lmul& (0+255),w,b
 17172  001C4C  6F94               	movwf	strtol@a& (0+255),b
 17173  001C4E  0E00               	movlw	0
 17174  001C50  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 17175  001C52  6F95               	movwf	(strtol@a+1)& (0+255),b
 17176  001C54  0E00               	movlw	0
 17177  001C56  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 17178  001C58  6F96               	movwf	(strtol@a+2)& (0+255),b
 17179  001C5A  0E00               	movlw	0
 17180  001C5C  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 17181  001C5E  6F97               	movwf	(strtol@a+3)& (0+255),b
 17182                           
 17183                           ; BSR set to: 0
 17184  001C60  C089  FFD9         	movff	strtol@s,fsr2l
 17185  001C64  C08A  FFDA         	movff	strtol@s+1,fsr2h
 17186  001C68  50DF               	movf	indf2,w,c
 17187  001C6A  6F98               	movwf	strtol@c& (0+255),b
 17188                           
 17189                           ; BSR set to: 0
 17190  001C6C  4B89               	infsnz	strtol@s& (0+255),f,b
 17191  001C6E  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 17192  001C70  D7B4               	goto	l3473
 17193  001C72                     l3479:
 17194                           
 17195                           ; BSR set to: 0
 17196  001C72  0100               	movlb	0	; () banked
 17197  001C74  518B               	movf	strtol@endptr& (0+255),w,b
 17198  001C76  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 17199  001C78  B4D8               	btfsc	status,2,c
 17200  001C7A  D00E               	goto	l3481
 17201                           
 17202                           ; BSR set to: 0
 17203  001C7C  0EFF               	movlw	255
 17204  001C7E  2589               	addwf	strtol@s& (0+255),w,b
 17205  001C80  6F8F               	movwf	??_strtol& (0+255),b
 17206  001C82  0EFF               	movlw	255
 17207  001C84  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 17208  001C86  6F90               	movwf	(??_strtol+1)& (0+255),b
 17209  001C88  C08B  FFD9         	movff	strtol@endptr,fsr2l
 17210  001C8C  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 17211  001C90  C08F  FFDE         	movff	??_strtol,postinc2
 17212  001C94  C090  FFDD         	movff	??_strtol+1,postdec2
 17213  001C98                     l3481:
 17214                           
 17215                           ; BSR set to: 0
 17216                           
 17217                           ; BSR set to: 0
 17218  001C98  5193               	movf	strtol@sign& (0+255),w,b
 17219  001C9A  B4D8               	btfsc	status,2,c
 17220  001C9C  D01A               	goto	l3482
 17221                           
 17222                           ; BSR set to: 0
 17223  001C9E  C094  F08F         	movff	strtol@a,??_strtol
 17224  001CA2  C095  F090         	movff	strtol@a+1,??_strtol+1
 17225  001CA6  C096  F091         	movff	strtol@a+2,??_strtol+2
 17226  001CAA  C097  F092         	movff	strtol@a+3,??_strtol+3
 17227  001CAE  1F8F               	comf	??_strtol& (0+255),f,b
 17228  001CB0  1F90               	comf	(??_strtol+1)& (0+255),f,b
 17229  001CB2  1F91               	comf	(??_strtol+2)& (0+255),f,b
 17230  001CB4  1F92               	comf	(??_strtol+3)& (0+255),f,b
 17231  001CB6  2B8F               	incf	??_strtol& (0+255),f,b
 17232  001CB8  0E00               	movlw	0
 17233  001CBA  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 17234  001CBC  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 17235  001CBE  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 17236  001CC0  C08F  F089         	movff	??_strtol,?_strtol
 17237  001CC4  C090  F08A         	movff	??_strtol+1,?_strtol+1
 17238  001CC8  C091  F08B         	movff	??_strtol+2,?_strtol+2
 17239  001CCC  C092  F08C         	movff	??_strtol+3,?_strtol+3
 17240                           
 17241                           ; BSR set to: 0
 17242  001CD0  0012               	return	
 17243  001CD2                     l3482:
 17244                           
 17245                           ; BSR set to: 0
 17246  001CD2  C094  F089         	movff	strtol@a,?_strtol
 17247  001CD6  C095  F08A         	movff	strtol@a+1,?_strtol+1
 17248  001CDA  C096  F08B         	movff	strtol@a+2,?_strtol+2
 17249  001CDE  C097  F08C         	movff	strtol@a+3,?_strtol+3
 17250                           
 17251                           ; BSR set to: 0
 17252  001CE2  0012               	return		;funcret
 17253  001CE4                     __end_of_strtol:
 17254                           	opt stack 0
 17255                           tosu	equ	0xFFF
 17256                           tosh	equ	0xFFE
 17257                           tosl	equ	0xFFD
 17258                           pclath	equ	0xFFA
 17259                           tblptru	equ	0xFF8
 17260                           tblptrh	equ	0xFF7
 17261                           tblptrl	equ	0xFF6
 17262                           tablat	equ	0xFF5
 17263                           prodh	equ	0xFF4
 17264                           prodl	equ	0xFF3
 17265                           intcon	equ	0xFF2
 17266                           intcon2	equ	0xFF1
 17267                           intcon3	equ	0xFF0
 17268                           indf0	equ	0xFEF
 17269                           postinc0	equ	0xFEE
 17270                           plusw0	equ	0xFEB
 17271                           fsr0h	equ	0xFEA
 17272                           fsr0l	equ	0xFE9
 17273                           wreg	equ	0xFE8
 17274                           indf1	equ	0xFE7
 17275                           postinc1	equ	0xFE6
 17276                           postdec1	equ	0xFE5
 17277                           fsr1h	equ	0xFE2
 17278                           fsr1l	equ	0xFE1
 17279                           indf2	equ	0xFDF
 17280                           postinc2	equ	0xFDE
 17281                           postdec2	equ	0xFDD
 17282                           plusw2	equ	0xFDB
 17283                           fsr2h	equ	0xFDA
 17284                           fsr2l	equ	0xFD9
 17285                           status	equ	0xFD8
 17286                           
 17287 ;; *************** function _toupper *****************
 17288 ;; Defined at:
 17289 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 17290 ;; Parameters:    Size  Location     Type
 17291 ;;  c               1    wreg     unsigned char 
 17292 ;; Auto vars:     Size  Location     Type
 17293 ;;  c               1   29[BANK0 ] unsigned char 
 17294 ;; Return value:  Size  Location     Type
 17295 ;;                  1    wreg      unsigned char 
 17296 ;; Registers used:
 17297 ;;		wreg, status,2, status,0
 17298 ;; Tracked objects:
 17299 ;;		On entry : 0/0
 17300 ;;		On exit  : 0/0
 17301 ;;		Unchanged: 0/0
 17302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17304 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17306 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17307 ;;Total ram usage:        1 bytes
 17308 ;; Hardware stack levels used:    1
 17309 ;; Hardware stack levels required when called:   11
 17310 ;; This function calls:
 17311 ;;		Nothing
 17312 ;; This function is called by:
 17313 ;;		_strtol
 17314 ;; This function uses a non-reentrant model
 17315 ;;
 17316                           
 17317                           	psect	text65
 17318  006726                     __ptext65:
 17319                           	opt stack 0
 17320  006726                     _toupper:
 17321                           	opt stack 13
 17322                           
 17323                           ; BSR set to: 0
 17324                           ;incstack = 0
 17325                           ;toupper@c stored from wreg
 17326  006726  0100               	movlb	0	; () banked
 17327  006728  6F7D               	movwf	toupper@c& (0+255),b
 17328  00672A  0E7B               	movlw	123
 17329  00672C  0100               	movlb	0	; () banked
 17330  00672E  617D               	cpfslt	toupper@c& (0+255),b
 17331  006730  D004               	goto	l3486
 17332                           
 17333                           ; BSR set to: 0
 17334  006732  0E60               	movlw	96
 17335  006734  657D               	cpfsgt	toupper@c& (0+255),b
 17336  006736  D001               	goto	l3486
 17337                           
 17338                           ; BSR set to: 0
 17339  006738  9B7D               	bcf	toupper@c& (0+255),5,b
 17340  00673A                     l3486:
 17341                           
 17342                           ; BSR set to: 0
 17343                           
 17344                           ; BSR set to: 0
 17345  00673A  517D               	movf	toupper@c& (0+255),w,b
 17346  00673C  0012               	return	
 17347  00673E                     __end_of_toupper:
 17348                           	opt stack 0
 17349                           tosu	equ	0xFFF
 17350                           tosh	equ	0xFFE
 17351                           tosl	equ	0xFFD
 17352                           pclath	equ	0xFFA
 17353                           tblptru	equ	0xFF8
 17354                           tblptrh	equ	0xFF7
 17355                           tblptrl	equ	0xFF6
 17356                           tablat	equ	0xFF5
 17357                           prodh	equ	0xFF4
 17358                           prodl	equ	0xFF3
 17359                           intcon	equ	0xFF2
 17360                           intcon2	equ	0xFF1
 17361                           intcon3	equ	0xFF0
 17362                           indf0	equ	0xFEF
 17363                           postinc0	equ	0xFEE
 17364                           plusw0	equ	0xFEB
 17365                           fsr0h	equ	0xFEA
 17366                           fsr0l	equ	0xFE9
 17367                           wreg	equ	0xFE8
 17368                           indf1	equ	0xFE7
 17369                           postinc1	equ	0xFE6
 17370                           postdec1	equ	0xFE5
 17371                           fsr1h	equ	0xFE2
 17372                           fsr1l	equ	0xFE1
 17373                           indf2	equ	0xFDF
 17374                           postinc2	equ	0xFDE
 17375                           postdec2	equ	0xFDD
 17376                           plusw2	equ	0xFDB
 17377                           fsr2h	equ	0xFDA
 17378                           fsr2l	equ	0xFD9
 17379                           status	equ	0xFD8
 17380                           
 17381 ;; *************** function _isspace *****************
 17382 ;; Defined at:
 17383 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 17384 ;; Parameters:    Size  Location     Type
 17385 ;;  c               1    wreg     unsigned char 
 17386 ;; Auto vars:     Size  Location     Type
 17387 ;;  c               1   31[BANK0 ] unsigned char 
 17388 ;; Return value:  Size  Location     Type
 17389 ;;		None               void
 17390 ;; Registers used:
 17391 ;;		wreg, status,2, status,0
 17392 ;; Tracked objects:
 17393 ;;		On entry : 0/0
 17394 ;;		On exit  : 0/0
 17395 ;;		Unchanged: 0/0
 17396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17398 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17399 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17400 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17401 ;;Total ram usage:        3 bytes
 17402 ;; Hardware stack levels used:    1
 17403 ;; Hardware stack levels required when called:   11
 17404 ;; This function calls:
 17405 ;;		Nothing
 17406 ;; This function is called by:
 17407 ;;		_strtol
 17408 ;;		_xtoi
 17409 ;; This function uses a non-reentrant model
 17410 ;;
 17411                           
 17412                           	psect	text66
 17413  0063D8                     __ptext66:
 17414                           	opt stack 0
 17415  0063D8                     _isspace:
 17416                           	opt stack 13
 17417                           
 17418                           ; BSR set to: 0
 17419                           ;incstack = 0
 17420                           ;isspace@c stored from wreg
 17421  0063D8  0100               	movlb	0	; () banked
 17422  0063DA  6F7F               	movwf	isspace@c& (0+255),b
 17423  0063DC  0E01               	movlw	1
 17424  0063DE  0100               	movlb	0	; () banked
 17425  0063E0  6F7E               	movwf	_isspace$6635& (0+255),b
 17426                           
 17427                           ; BSR set to: 0
 17428  0063E2  0E20               	movlw	32
 17429  0063E4  197F               	xorwf	isspace@c& (0+255),w,b
 17430  0063E6  B4D8               	btfsc	status,2,c
 17431  0063E8  D008               	goto	l3543
 17432                           
 17433                           ; BSR set to: 0
 17434  0063EA  0E0E               	movlw	14
 17435  0063EC  617F               	cpfslt	isspace@c& (0+255),b
 17436  0063EE  D003               	goto	u12250
 17437                           
 17438                           ; BSR set to: 0
 17439  0063F0  0E09               	movlw	9
 17440  0063F2  617F               	cpfslt	isspace@c& (0+255),b
 17441  0063F4  D002               	goto	l3543
 17442  0063F6                     u12250:
 17443                           
 17444                           ; BSR set to: 0
 17445                           
 17446                           ; BSR set to: 0
 17447  0063F6  0E00               	movlw	0
 17448  0063F8  6F7E               	movwf	_isspace$6635& (0+255),b
 17449  0063FA                     l3543:
 17450                           
 17451                           ; BSR set to: 0
 17452                           
 17453                           ; BSR set to: 0
 17454  0063FA  C07E  F07D         	movff	_isspace$6635,??_isspace
 17455  0063FE  317D               	rrcf	??_isspace& (0+255),w,b
 17456  006400  0012               	return	
 17457  006402                     __end_of_isspace:
 17458                           	opt stack 0
 17459                           tosu	equ	0xFFF
 17460                           tosh	equ	0xFFE
 17461                           tosl	equ	0xFFD
 17462                           pclath	equ	0xFFA
 17463                           tblptru	equ	0xFF8
 17464                           tblptrh	equ	0xFF7
 17465                           tblptrl	equ	0xFF6
 17466                           tablat	equ	0xFF5
 17467                           prodh	equ	0xFF4
 17468                           prodl	equ	0xFF3
 17469                           intcon	equ	0xFF2
 17470                           intcon2	equ	0xFF1
 17471                           intcon3	equ	0xFF0
 17472                           indf0	equ	0xFEF
 17473                           postinc0	equ	0xFEE
 17474                           plusw0	equ	0xFEB
 17475                           fsr0h	equ	0xFEA
 17476                           fsr0l	equ	0xFE9
 17477                           wreg	equ	0xFE8
 17478                           indf1	equ	0xFE7
 17479                           postinc1	equ	0xFE6
 17480                           postdec1	equ	0xFE5
 17481                           fsr1h	equ	0xFE2
 17482                           fsr1l	equ	0xFE1
 17483                           indf2	equ	0xFDF
 17484                           postinc2	equ	0xFDE
 17485                           postdec2	equ	0xFDD
 17486                           plusw2	equ	0xFDB
 17487                           fsr2h	equ	0xFDA
 17488                           fsr2l	equ	0xFD9
 17489                           status	equ	0xFD8
 17490                           
 17491 ;; *************** function _isalpha *****************
 17492 ;; Defined at:
 17493 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17494 ;; Parameters:    Size  Location     Type
 17495 ;;  c               1    wreg     unsigned char 
 17496 ;; Auto vars:     Size  Location     Type
 17497 ;;  c               1   34[BANK0 ] unsigned char 
 17498 ;; Return value:  Size  Location     Type
 17499 ;;		None               void
 17500 ;; Registers used:
 17501 ;;		wreg, status,2, status,0, cstack
 17502 ;; Tracked objects:
 17503 ;;		On entry : 0/0
 17504 ;;		On exit  : 0/0
 17505 ;;		Unchanged: 0/0
 17506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17508 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17509 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17510 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17511 ;;Total ram usage:        3 bytes
 17512 ;; Hardware stack levels used:    1
 17513 ;; Hardware stack levels required when called:   12
 17514 ;; This function calls:
 17515 ;;		_isupper
 17516 ;; This function is called by:
 17517 ;;		_strtol
 17518 ;; This function uses a non-reentrant model
 17519 ;;
 17520                           
 17521                           	psect	text67
 17522  0062C6                     __ptext67:
 17523                           	opt stack 0
 17524  0062C6                     _isalpha:
 17525                           	opt stack 12
 17526                           
 17527                           ; BSR set to: 0
 17528                           ;incstack = 0
 17529                           ;isalpha@c stored from wreg
 17530  0062C6  0100               	movlb	0	; () banked
 17531  0062C8  6F82               	movwf	isalpha@c& (0+255),b
 17532  0062CA  0E01               	movlw	1
 17533  0062CC  0100               	movlb	0	; () banked
 17534  0062CE  6F81               	movwf	_isalpha$6632& (0+255),b
 17535                           
 17536                           ; BSR set to: 0
 17537  0062D0  0E7B               	movlw	123
 17538  0062D2  6182               	cpfslt	isalpha@c& (0+255),b
 17539  0062D4  D003               	goto	u12270
 17540                           
 17541                           ; BSR set to: 0
 17542  0062D6  0E61               	movlw	97
 17543  0062D8  6182               	cpfslt	isalpha@c& (0+255),b
 17544  0062DA  D008               	goto	l3538
 17545  0062DC                     u12270:
 17546                           
 17547                           ; BSR set to: 0
 17548                           
 17549                           ; BSR set to: 0
 17550  0062DC  5182               	movf	isalpha@c& (0+255),w,b
 17551  0062DE  ECA5  F032         	call	_isupper
 17552  0062E2  B0D8               	btfsc	status,0,c
 17553  0062E4  D003               	goto	l3538
 17554  0062E6  0E00               	movlw	0
 17555  0062E8  0100               	movlb	0	; () banked
 17556  0062EA  6F81               	movwf	_isalpha$6632& (0+255),b
 17557  0062EC                     l3538:
 17558                           
 17559                           ; BSR set to: 0
 17560  0062EC  C081  F080         	movff	_isalpha$6632,??_isalpha
 17561  0062F0  0100               	movlb	0	; () banked
 17562  0062F2  3180               	rrcf	??_isalpha& (0+255),w,b
 17563  0062F4  0012               	return	
 17564  0062F6                     __end_of_isalpha:
 17565                           	opt stack 0
 17566                           tosu	equ	0xFFF
 17567                           tosh	equ	0xFFE
 17568                           tosl	equ	0xFFD
 17569                           pclath	equ	0xFFA
 17570                           tblptru	equ	0xFF8
 17571                           tblptrh	equ	0xFF7
 17572                           tblptrl	equ	0xFF6
 17573                           tablat	equ	0xFF5
 17574                           prodh	equ	0xFF4
 17575                           prodl	equ	0xFF3
 17576                           intcon	equ	0xFF2
 17577                           intcon2	equ	0xFF1
 17578                           intcon3	equ	0xFF0
 17579                           indf0	equ	0xFEF
 17580                           postinc0	equ	0xFEE
 17581                           plusw0	equ	0xFEB
 17582                           fsr0h	equ	0xFEA
 17583                           fsr0l	equ	0xFE9
 17584                           wreg	equ	0xFE8
 17585                           indf1	equ	0xFE7
 17586                           postinc1	equ	0xFE6
 17587                           postdec1	equ	0xFE5
 17588                           fsr1h	equ	0xFE2
 17589                           fsr1l	equ	0xFE1
 17590                           indf2	equ	0xFDF
 17591                           postinc2	equ	0xFDE
 17592                           postdec2	equ	0xFDD
 17593                           plusw2	equ	0xFDB
 17594                           fsr2h	equ	0xFDA
 17595                           fsr2l	equ	0xFD9
 17596                           status	equ	0xFD8
 17597                           
 17598 ;; *************** function _isupper *****************
 17599 ;; Defined at:
 17600 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17601 ;; Parameters:    Size  Location     Type
 17602 ;;  c               1    wreg     unsigned char 
 17603 ;; Auto vars:     Size  Location     Type
 17604 ;;  c               1   31[BANK0 ] unsigned char 
 17605 ;; Return value:  Size  Location     Type
 17606 ;;		None               void
 17607 ;; Registers used:
 17608 ;;		wreg, status,2, status,0
 17609 ;; Tracked objects:
 17610 ;;		On entry : 0/0
 17611 ;;		On exit  : 0/0
 17612 ;;		Unchanged: 0/0
 17613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17615 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17616 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17617 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17618 ;;Total ram usage:        3 bytes
 17619 ;; Hardware stack levels used:    1
 17620 ;; Hardware stack levels required when called:   11
 17621 ;; This function calls:
 17622 ;;		Nothing
 17623 ;; This function is called by:
 17624 ;;		_xtoi
 17625 ;;		_isalpha
 17626 ;; This function uses a non-reentrant model
 17627 ;;
 17628                           
 17629                           	psect	text68
 17630  00654A                     __ptext68:
 17631                           	opt stack 0
 17632  00654A                     _isupper:
 17633                           	opt stack 13
 17634                           
 17635                           ; BSR set to: 0
 17636                           ;incstack = 0
 17637                           ;isupper@c stored from wreg
 17638  00654A  0100               	movlb	0	; () banked
 17639  00654C  6F7F               	movwf	isupper@c& (0+255),b
 17640  00654E  0E00               	movlw	0
 17641  006550  0100               	movlb	0	; () banked
 17642  006552  6F7E               	movwf	_isupper$6638& (0+255),b
 17643                           
 17644                           ; BSR set to: 0
 17645  006554  0E5B               	movlw	91
 17646  006556  617F               	cpfslt	isupper@c& (0+255),b
 17647  006558  D005               	goto	l3548
 17648                           
 17649                           ; BSR set to: 0
 17650  00655A  0E40               	movlw	64
 17651  00655C  657F               	cpfsgt	isupper@c& (0+255),b
 17652  00655E  D002               	goto	l3548
 17653                           
 17654                           ; BSR set to: 0
 17655  006560  0E01               	movlw	1
 17656  006562  6F7E               	movwf	_isupper$6638& (0+255),b
 17657  006564                     l3548:
 17658                           
 17659                           ; BSR set to: 0
 17660                           
 17661                           ; BSR set to: 0
 17662  006564  C07E  F07D         	movff	_isupper$6638,??_isupper
 17663  006568  317D               	rrcf	??_isupper& (0+255),w,b
 17664  00656A  0012               	return	
 17665  00656C                     __end_of_isupper:
 17666                           	opt stack 0
 17667                           tosu	equ	0xFFF
 17668                           tosh	equ	0xFFE
 17669                           tosl	equ	0xFFD
 17670                           pclath	equ	0xFFA
 17671                           tblptru	equ	0xFF8
 17672                           tblptrh	equ	0xFF7
 17673                           tblptrl	equ	0xFF6
 17674                           tablat	equ	0xFF5
 17675                           prodh	equ	0xFF4
 17676                           prodl	equ	0xFF3
 17677                           intcon	equ	0xFF2
 17678                           intcon2	equ	0xFF1
 17679                           intcon3	equ	0xFF0
 17680                           indf0	equ	0xFEF
 17681                           postinc0	equ	0xFEE
 17682                           plusw0	equ	0xFEB
 17683                           fsr0h	equ	0xFEA
 17684                           fsr0l	equ	0xFE9
 17685                           wreg	equ	0xFE8
 17686                           indf1	equ	0xFE7
 17687                           postinc1	equ	0xFE6
 17688                           postdec1	equ	0xFE5
 17689                           fsr1h	equ	0xFE2
 17690                           fsr1l	equ	0xFE1
 17691                           indf2	equ	0xFDF
 17692                           postinc2	equ	0xFDE
 17693                           postdec2	equ	0xFDD
 17694                           plusw2	equ	0xFDB
 17695                           fsr2h	equ	0xFDA
 17696                           fsr2l	equ	0xFD9
 17697                           status	equ	0xFD8
 17698                           
 17699 ;; *************** function _strcpy *****************
 17700 ;; Defined at:
 17701 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17702 ;; Parameters:    Size  Location     Type
 17703 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17704 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17705 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17706 ;;		 -> STR_23(20), STR_21(42), 
 17707 ;; Auto vars:     Size  Location     Type
 17708 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17709 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17710 ;; Return value:  Size  Location     Type
 17711 ;;                  2   29[BANK0 ] PTR unsigned char 
 17712 ;; Registers used:
 17713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17714 ;; Tracked objects:
 17715 ;;		On entry : 0/0
 17716 ;;		On exit  : 0/0
 17717 ;;		Unchanged: 0/0
 17718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17719 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17720 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17722 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17723 ;;Total ram usage:        6 bytes
 17724 ;; Hardware stack levels used:    1
 17725 ;; Hardware stack levels required when called:   11
 17726 ;; This function calls:
 17727 ;;		Nothing
 17728 ;; This function is called by:
 17729 ;;		_Terminal
 17730 ;;		_Term_MainSm
 17731 ;; This function uses a non-reentrant model
 17732 ;;
 17733                           
 17734                           	psect	text69
 17735  006234                     __ptext69:
 17736                           	opt stack 0
 17737  006234                     _strcpy:
 17738                           	opt stack 15
 17739                           
 17740                           ; BSR set to: 0
 17741                           ;incstack = 0
 17742  006234  C07D  F081         	movff	strcpy@to,strcpy@cp
 17743  006238  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17744  00623C  D005               	goto	l3440
 17745  00623E  0100               	movlb	0	; () banked
 17746  006240  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17747  006242  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17748  006244  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17749  006246  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17750  006248                     l3440:
 17751                           
 17752                           ; BSR set to: 0
 17753  006248  C07F  FFF6         	movff	strcpy@from,tblptrl
 17754  00624C  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17755  006250                     	if	0	;tblptru may be non-zero
 17756  006250                     	endif
 17757  006250                     	if	0	;tblptru may be non-zero
 17758  006250                     	endif
 17759  006250  C081  FFD9         	movff	strcpy@cp,fsr2l
 17760  006254  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17761  006258  0008               	tblrd		*
 17762  00625A  CFF5 FFDF          	movff	tablat,indf2
 17763  00625E  50DF               	movf	indf2,w,c
 17764  006260  B4D8               	btfsc	status,2,c
 17765  006262  0012               	return	
 17766  006264  D7EC               	goto	l3441
 17767  006266                     __end_of_strcpy:
 17768                           	opt stack 0
 17769                           tosu	equ	0xFFF
 17770                           tosh	equ	0xFFE
 17771                           tosl	equ	0xFFD
 17772                           pclath	equ	0xFFA
 17773                           tblptru	equ	0xFF8
 17774                           tblptrh	equ	0xFF7
 17775                           tblptrl	equ	0xFF6
 17776                           tablat	equ	0xFF5
 17777                           prodh	equ	0xFF4
 17778                           prodl	equ	0xFF3
 17779                           intcon	equ	0xFF2
 17780                           intcon2	equ	0xFF1
 17781                           intcon3	equ	0xFF0
 17782                           indf0	equ	0xFEF
 17783                           postinc0	equ	0xFEE
 17784                           plusw0	equ	0xFEB
 17785                           fsr0h	equ	0xFEA
 17786                           fsr0l	equ	0xFE9
 17787                           wreg	equ	0xFE8
 17788                           indf1	equ	0xFE7
 17789                           postinc1	equ	0xFE6
 17790                           postdec1	equ	0xFE5
 17791                           fsr1h	equ	0xFE2
 17792                           fsr1l	equ	0xFE1
 17793                           indf2	equ	0xFDF
 17794                           postinc2	equ	0xFDE
 17795                           postdec2	equ	0xFDD
 17796                           plusw2	equ	0xFDB
 17797                           fsr2h	equ	0xFDA
 17798                           fsr2l	equ	0xFD9
 17799                           status	equ	0xFD8
 17800                           
 17801 ;; *************** function _putUSBUSART *****************
 17802 ;; Defined at:
 17803 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17804 ;; Parameters:    Size  Location     Type
 17805 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17806 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17807 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17808 ;;		 -> RxBuffer(400), 
 17809 ;;  length          1   37[BANK0 ] unsigned char 
 17810 ;; Auto vars:     Size  Location     Type
 17811 ;;		None
 17812 ;; Return value:  Size  Location     Type
 17813 ;;                  1    wreg      void 
 17814 ;; Registers used:
 17815 ;;		wreg, status,2, status,0
 17816 ;; Tracked objects:
 17817 ;;		On entry : 0/0
 17818 ;;		On exit  : 0/0
 17819 ;;		Unchanged: 0/0
 17820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17821 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17824 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17825 ;;Total ram usage:        3 bytes
 17826 ;; Hardware stack levels used:    1
 17827 ;; Hardware stack levels required when called:   11
 17828 ;; This function calls:
 17829 ;;		Nothing
 17830 ;; This function is called by:
 17831 ;;		_Terminal
 17832 ;;		_Term_MainSm
 17833 ;;		_GsmGprsTerminal
 17834 ;; This function uses a non-reentrant model
 17835 ;;
 17836                           
 17837                           	psect	text70
 17838  00656C                     __ptext70:
 17839                           	opt stack 0
 17840  00656C                     _putUSBUSART:
 17841                           	opt stack 15
 17842                           
 17843                           ;usb_device_cdc.c: 584: ;
 17844                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17845                           
 17846                           ;incstack = 0
 17847  00656C  0100               	movlb	0	; () banked
 17848  00656E  51C5               	movf	_cdc_trf_state& (0+255),w,b
 17849  006570  A4D8               	btfss	status,2,c
 17850  006572  0012               	return	
 17851                           
 17852                           ; BSR set to: 0
 17853                           ;usb_device_cdc.c: 586: {
 17854                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17855  006574  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17856  006578  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17857                           
 17858                           ; BSR set to: 0
 17859  00657C  C085  F0C4         	movff	putUSBUSART@length,_cdc_tx_len
 17860                           
 17861                           ; BSR set to: 0
 17862  006580  0E01               	movlw	1
 17863  006582  0101               	movlb	1	; () banked
 17864  006584  6FDF               	movwf	_cdc_mem_type& (0+255),b
 17865                           
 17866                           ; BSR set to: 1
 17867  006586  0E01               	movlw	1
 17868  006588  0100               	movlb	0	; () banked
 17869  00658A  6FC5               	movwf	_cdc_trf_state& (0+255),b
 17870  00658C  0012               	return	
 17871  00658E                     __end_of_putUSBUSART:
 17872                           	opt stack 0
 17873                           tosu	equ	0xFFF
 17874                           tosh	equ	0xFFE
 17875                           tosl	equ	0xFFD
 17876                           pclath	equ	0xFFA
 17877                           tblptru	equ	0xFF8
 17878                           tblptrh	equ	0xFF7
 17879                           tblptrl	equ	0xFF6
 17880                           tablat	equ	0xFF5
 17881                           prodh	equ	0xFF4
 17882                           prodl	equ	0xFF3
 17883                           intcon	equ	0xFF2
 17884                           intcon2	equ	0xFF1
 17885                           intcon3	equ	0xFF0
 17886                           indf0	equ	0xFEF
 17887                           postinc0	equ	0xFEE
 17888                           plusw0	equ	0xFEB
 17889                           fsr0h	equ	0xFEA
 17890                           fsr0l	equ	0xFE9
 17891                           wreg	equ	0xFE8
 17892                           indf1	equ	0xFE7
 17893                           postinc1	equ	0xFE6
 17894                           postdec1	equ	0xFE5
 17895                           fsr1h	equ	0xFE2
 17896                           fsr1l	equ	0xFE1
 17897                           indf2	equ	0xFDF
 17898                           postinc2	equ	0xFDE
 17899                           postdec2	equ	0xFDD
 17900                           plusw2	equ	0xFDB
 17901                           fsr2h	equ	0xFDA
 17902                           fsr2l	equ	0xFD9
 17903                           status	equ	0xFD8
 17904                           
 17905 ;; *************** function _itoa *****************
 17906 ;; Defined at:
 17907 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17908 ;; Parameters:    Size  Location     Type
 17909 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17910 ;;		 -> Terminal@Payload(80), 
 17911 ;;  val             2   53[BANK0 ] int 
 17912 ;;  base            2   55[BANK0 ] int 
 17913 ;; Auto vars:     Size  Location     Type
 17914 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17915 ;;		 -> Terminal@Payload(80), 
 17916 ;; Return value:  Size  Location     Type
 17917 ;;                  2   51[BANK0 ] PTR unsigned char 
 17918 ;; Registers used:
 17919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17920 ;; Tracked objects:
 17921 ;;		On entry : 0/0
 17922 ;;		On exit  : 0/0
 17923 ;;		Unchanged: 0/0
 17924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17925 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17926 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17928 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17929 ;;Total ram usage:        8 bytes
 17930 ;; Hardware stack levels used:    1
 17931 ;; Hardware stack levels required when called:   13
 17932 ;; This function calls:
 17933 ;;		_utoa
 17934 ;; This function is called by:
 17935 ;;		_Terminal
 17936 ;; This function uses a non-reentrant model
 17937 ;;
 17938                           
 17939                           	psect	text71
 17940  005E6C                     __ptext71:
 17941                           	opt stack 0
 17942  005E6C                     _itoa:
 17943                           	opt stack 12
 17944                           
 17945                           ; BSR set to: 0
 17946                           ;incstack = 0
 17947  005E6C  C093  F099         	movff	itoa@buf,itoa@cp
 17948  005E70  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17949  005E74  0100               	movlb	0	; () banked
 17950  005E76  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17951  005E78  D00C               	goto	l3188
 17952                           
 17953                           ; BSR set to: 0
 17954  005E7A  C093  FFD9         	movff	itoa@buf,fsr2l
 17955  005E7E  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17956  005E82  0E2D               	movlw	45
 17957  005E84  6EDF               	movwf	indf2,c
 17958                           
 17959                           ; BSR set to: 0
 17960  005E86  4B93               	infsnz	itoa@buf& (0+255),f,b
 17961  005E88  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17962                           
 17963                           ; BSR set to: 0
 17964  005E8A  6D95               	negf	itoa@val& (0+255),b
 17965  005E8C  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17966  005E8E  B0D8               	btfsc	status,0,c
 17967  005E90  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17968  005E92                     l3188:
 17969                           
 17970                           ; BSR set to: 0
 17971                           
 17972                           ; BSR set to: 0
 17973  005E92  C093  F08A         	movff	itoa@buf,utoa@buf
 17974  005E96  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17975  005E9A  C095  F08C         	movff	itoa@val,utoa@val
 17976  005E9E  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17977  005EA2  C097  F08E         	movff	itoa@base,utoa@base
 17978  005EA6  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17979  005EAA  ECCC  F022         	call	_utoa	;wreg free
 17980  005EAE  0012               	return	
 17981  005EB0                     __end_of_itoa:
 17982                           	opt stack 0
 17983                           tosu	equ	0xFFF
 17984                           tosh	equ	0xFFE
 17985                           tosl	equ	0xFFD
 17986                           pclath	equ	0xFFA
 17987                           tblptru	equ	0xFF8
 17988                           tblptrh	equ	0xFF7
 17989                           tblptrl	equ	0xFF6
 17990                           tablat	equ	0xFF5
 17991                           prodh	equ	0xFF4
 17992                           prodl	equ	0xFF3
 17993                           intcon	equ	0xFF2
 17994                           intcon2	equ	0xFF1
 17995                           intcon3	equ	0xFF0
 17996                           indf0	equ	0xFEF
 17997                           postinc0	equ	0xFEE
 17998                           plusw0	equ	0xFEB
 17999                           fsr0h	equ	0xFEA
 18000                           fsr0l	equ	0xFE9
 18001                           wreg	equ	0xFE8
 18002                           indf1	equ	0xFE7
 18003                           postinc1	equ	0xFE6
 18004                           postdec1	equ	0xFE5
 18005                           fsr1h	equ	0xFE2
 18006                           fsr1l	equ	0xFE1
 18007                           indf2	equ	0xFDF
 18008                           postinc2	equ	0xFDE
 18009                           postdec2	equ	0xFDD
 18010                           plusw2	equ	0xFDB
 18011                           fsr2h	equ	0xFDA
 18012                           fsr2l	equ	0xFD9
 18013                           status	equ	0xFD8
 18014                           
 18015 ;; *************** function _utoa *****************
 18016 ;; Defined at:
 18017 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 18018 ;; Parameters:    Size  Location     Type
 18019 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 18020 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 18021 ;;  val             2   44[BANK0 ] unsigned int 
 18022 ;;  base            2   46[BANK0 ] int 
 18023 ;; Auto vars:     Size  Location     Type
 18024 ;;  v               2   48[BANK0 ] unsigned int 
 18025 ;;  c               1   50[BANK0 ] unsigned char 
 18026 ;; Return value:  Size  Location     Type
 18027 ;;                  2   42[BANK0 ] PTR unsigned char 
 18028 ;; Registers used:
 18029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18030 ;; Tracked objects:
 18031 ;;		On entry : 0/0
 18032 ;;		On exit  : 0/0
 18033 ;;		Unchanged: 0/0
 18034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18035 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18036 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18038 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18039 ;;Total ram usage:        9 bytes
 18040 ;; Hardware stack levels used:    1
 18041 ;; Hardware stack levels required when called:   12
 18042 ;; This function calls:
 18043 ;;		___lwdiv
 18044 ;;		___lwmod
 18045 ;; This function is called by:
 18046 ;;		_Term_MainSm
 18047 ;;		_itoa
 18048 ;; This function uses a non-reentrant model
 18049 ;;
 18050                           
 18051                           	psect	text72
 18052  004598                     __ptext72:
 18053                           	opt stack 0
 18054  004598                     _utoa:
 18055                           	opt stack 14
 18056                           
 18057                           ;incstack = 0
 18058  004598  C08C  F090         	movff	utoa@val,utoa@v
 18059  00459C  C08D  F091         	movff	utoa@val+1,utoa@v+1
 18060  0045A0  C090  F083         	movff	utoa@v,___lwdiv@dividend
 18061  0045A4  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 18062  0045A8  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 18063  0045AC  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 18064  0045B0  ECD2  F02C         	call	___lwdiv	;wreg free
 18065  0045B4  C083  F090         	movff	?___lwdiv,utoa@v
 18066  0045B8  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 18067  0045BC  0100               	movlb	0	; () banked
 18068  0045BE  4B8A               	infsnz	utoa@buf& (0+255),f,b
 18069  0045C0  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 18070                           
 18071                           ; BSR set to: 0
 18072  0045C2  5190               	movf	utoa@v& (0+255),w,b
 18073  0045C4  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 18074  0045C6  A4D8               	btfss	status,2,c
 18075  0045C8  D7EB               	goto	l3192
 18076                           
 18077                           ; BSR set to: 0
 18078                           
 18079                           ; BSR set to: 0
 18080  0045CA  C08A  FFD9         	movff	utoa@buf,fsr2l
 18081  0045CE  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 18082  0045D2  0E00               	movlw	0
 18083  0045D4  6EDF               	movwf	indf2,c
 18084                           
 18085                           ; BSR set to: 0
 18086  0045D6  078A               	decf	utoa@buf& (0+255),f,b
 18087  0045D8  A0D8               	btfss	status,0,c
 18088  0045DA  078B               	decf	(utoa@buf+1)& (0+255),f,b
 18089  0045DC                     
 18090                           ; BSR set to: 0
 18091                           
 18092                           ; BSR set to: 0
 18093  0045DC  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 18094  0045E0  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 18095  0045E4  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 18096  0045E8  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 18097  0045EC  EC58  F02F         	call	___lwmod	;wreg free
 18098  0045F0  0100               	movlb	0	; () banked
 18099  0045F2  517D               	movf	?___lwmod& (0+255),w,b
 18100  0045F4  6F92               	movwf	utoa@c& (0+255),b
 18101                           
 18102                           ; BSR set to: 0
 18103  0045F6  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 18104  0045FA  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 18105  0045FE  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 18106  004602  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 18107  004606  ECD2  F02C         	call	___lwdiv	;wreg free
 18108  00460A  C083  F08C         	movff	?___lwdiv,utoa@val
 18109  00460E  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 18110  004612  0E09               	movlw	9
 18111  004614  0100               	movlb	0	; () banked
 18112  004616  6592               	cpfsgt	utoa@c& (0+255),b
 18113  004618  D002               	goto	l3195
 18114                           
 18115                           ; BSR set to: 0
 18116  00461A  0E07               	movlw	7
 18117  00461C  2792               	addwf	utoa@c& (0+255),f,b
 18118  00461E                     l3195:
 18119                           
 18120                           ; BSR set to: 0
 18121  00461E  0E30               	movlw	48
 18122  004620  2792               	addwf	utoa@c& (0+255),f,b
 18123                           
 18124                           ; BSR set to: 0
 18125  004622  C08A  FFD9         	movff	utoa@buf,fsr2l
 18126  004626  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 18127  00462A  C092  FFDF         	movff	utoa@c,indf2
 18128                           
 18129                           ; BSR set to: 0
 18130  00462E  078A               	decf	utoa@buf& (0+255),f,b
 18131  004630  A0D8               	btfss	status,0,c
 18132  004632  078B               	decf	(utoa@buf+1)& (0+255),f,b
 18133                           
 18134                           ; BSR set to: 0
 18135  004634  518C               	movf	utoa@val& (0+255),w,b
 18136  004636  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 18137  004638  A4D8               	btfss	status,2,c
 18138  00463A  D7D0               	goto	l3194
 18139                           
 18140                           ; BSR set to: 0
 18141                           ;	Return value of _utoa is never used
 18142                           
 18143                           ; BSR set to: 0
 18144  00463C  4B8A               	infsnz	utoa@buf& (0+255),f,b
 18145  00463E  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 18146  004640  0012               	return	
 18147  004642                     __end_of_utoa:
 18148                           	opt stack 0
 18149                           tosu	equ	0xFFF
 18150                           tosh	equ	0xFFE
 18151                           tosl	equ	0xFFD
 18152                           pclath	equ	0xFFA
 18153                           tblptru	equ	0xFF8
 18154                           tblptrh	equ	0xFF7
 18155                           tblptrl	equ	0xFF6
 18156                           tablat	equ	0xFF5
 18157                           prodh	equ	0xFF4
 18158                           prodl	equ	0xFF3
 18159                           intcon	equ	0xFF2
 18160                           intcon2	equ	0xFF1
 18161                           intcon3	equ	0xFF0
 18162                           indf0	equ	0xFEF
 18163                           postinc0	equ	0xFEE
 18164                           plusw0	equ	0xFEB
 18165                           fsr0h	equ	0xFEA
 18166                           fsr0l	equ	0xFE9
 18167                           wreg	equ	0xFE8
 18168                           indf1	equ	0xFE7
 18169                           postinc1	equ	0xFE6
 18170                           postdec1	equ	0xFE5
 18171                           fsr1h	equ	0xFE2
 18172                           fsr1l	equ	0xFE1
 18173                           indf2	equ	0xFDF
 18174                           postinc2	equ	0xFDE
 18175                           postdec2	equ	0xFDD
 18176                           plusw2	equ	0xFDB
 18177                           fsr2h	equ	0xFDA
 18178                           fsr2l	equ	0xFD9
 18179                           status	equ	0xFD8
 18180                           
 18181 ;; *************** function ___lwmod *****************
 18182 ;; Defined at:
 18183 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 18184 ;; Parameters:    Size  Location     Type
 18185 ;;  dividend        2   29[BANK0 ] unsigned int 
 18186 ;;  divisor         2   31[BANK0 ] unsigned int 
 18187 ;; Auto vars:     Size  Location     Type
 18188 ;;  counter         1   33[BANK0 ] unsigned char 
 18189 ;; Return value:  Size  Location     Type
 18190 ;;                  2   29[BANK0 ] unsigned int 
 18191 ;; Registers used:
 18192 ;;		wreg, status,2, status,0
 18193 ;; Tracked objects:
 18194 ;;		On entry : 0/0
 18195 ;;		On exit  : 0/0
 18196 ;;		Unchanged: 0/0
 18197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18198 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18199 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18201 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18202 ;;Total ram usage:        5 bytes
 18203 ;; Hardware stack levels used:    1
 18204 ;; Hardware stack levels required when called:   11
 18205 ;; This function calls:
 18206 ;;		Nothing
 18207 ;; This function is called by:
 18208 ;;		_utoa
 18209 ;; This function uses a non-reentrant model
 18210 ;;
 18211                           
 18212                           	psect	text73
 18213  005EB0                     __ptext73:
 18214                           	opt stack 0
 18215  005EB0                     ___lwmod:
 18216                           	opt stack 14
 18217                           
 18218                           ; BSR set to: 0
 18219                           ;incstack = 0
 18220  005EB0  0100               	movlb	0	; () banked
 18221  005EB2  517F               	movf	___lwmod@divisor& (0+255),w,b
 18222  005EB4  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18223  005EB6  B4D8               	btfsc	status,2,c
 18224  005EB8  D018               	goto	l3290
 18225                           
 18226                           ; BSR set to: 0
 18227  005EBA  0E01               	movlw	1
 18228  005EBC  6F81               	movwf	___lwmod@counter& (0+255),b
 18229  005EBE  D004               	goto	l3285
 18230  005EC0                     
 18231                           ; BSR set to: 0
 18232                           
 18233                           ; BSR set to: 0
 18234  005EC0  90D8               	bcf	status,0,c
 18235  005EC2  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 18236  005EC4  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18237  005EC6  2B81               	incf	___lwmod@counter& (0+255),f,b
 18238  005EC8                     l3285:
 18239                           
 18240                           ; BSR set to: 0
 18241                           
 18242                           ; BSR set to: 0
 18243  005EC8  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 18244  005ECA  D7FA               	goto	l3286
 18245  005ECC                     u11910:
 18246                           
 18247                           ; BSR set to: 0
 18248                           
 18249                           ; BSR set to: 0
 18250                           
 18251                           ; BSR set to: 0
 18252  005ECC  517F               	movf	___lwmod@divisor& (0+255),w,b
 18253  005ECE  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 18254  005ED0  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18255  005ED2  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18256  005ED4  A0D8               	btfss	status,0,c
 18257  005ED6  D004               	goto	l3289
 18258                           
 18259                           ; BSR set to: 0
 18260  005ED8  517F               	movf	___lwmod@divisor& (0+255),w,b
 18261  005EDA  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 18262  005EDC  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18263  005EDE  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18264  005EE0                     l3289:
 18265                           
 18266                           ; BSR set to: 0
 18267                           
 18268                           ; BSR set to: 0
 18269  005EE0  90D8               	bcf	status,0,c
 18270  005EE2  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18271  005EE4  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 18272                           
 18273                           ; BSR set to: 0
 18274  005EE6  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 18275  005EE8  D7F1               	goto	u11910
 18276  005EEA                     l3290:
 18277                           
 18278                           ; BSR set to: 0
 18279                           
 18280                           ; BSR set to: 0
 18281  005EEA  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 18282  005EEE  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 18283                           
 18284                           ; BSR set to: 0
 18285  005EF2  0012               	return		;funcret
 18286  005EF4                     __end_of___lwmod:
 18287                           	opt stack 0
 18288                           tosu	equ	0xFFF
 18289                           tosh	equ	0xFFE
 18290                           tosl	equ	0xFFD
 18291                           pclath	equ	0xFFA
 18292                           tblptru	equ	0xFF8
 18293                           tblptrh	equ	0xFF7
 18294                           tblptrl	equ	0xFF6
 18295                           tablat	equ	0xFF5
 18296                           prodh	equ	0xFF4
 18297                           prodl	equ	0xFF3
 18298                           intcon	equ	0xFF2
 18299                           intcon2	equ	0xFF1
 18300                           intcon3	equ	0xFF0
 18301                           indf0	equ	0xFEF
 18302                           postinc0	equ	0xFEE
 18303                           plusw0	equ	0xFEB
 18304                           fsr0h	equ	0xFEA
 18305                           fsr0l	equ	0xFE9
 18306                           wreg	equ	0xFE8
 18307                           indf1	equ	0xFE7
 18308                           postinc1	equ	0xFE6
 18309                           postdec1	equ	0xFE5
 18310                           fsr1h	equ	0xFE2
 18311                           fsr1l	equ	0xFE1
 18312                           indf2	equ	0xFDF
 18313                           postinc2	equ	0xFDE
 18314                           postdec2	equ	0xFDD
 18315                           plusw2	equ	0xFDB
 18316                           fsr2h	equ	0xFDA
 18317                           fsr2l	equ	0xFD9
 18318                           status	equ	0xFD8
 18319                           
 18320 ;; *************** function _getsUSBUSART *****************
 18321 ;; Defined at:
 18322 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 18323 ;; Parameters:    Size  Location     Type
 18324 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 18325 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 18326 ;;  len             1   38[BANK0 ] unsigned char 
 18327 ;; Auto vars:     Size  Location     Type
 18328 ;;		None
 18329 ;; Return value:  Size  Location     Type
 18330 ;;                  1    wreg      unsigned char 
 18331 ;; Registers used:
 18332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18333 ;; Tracked objects:
 18334 ;;		On entry : 0/0
 18335 ;;		On exit  : 0/0
 18336 ;;		Unchanged: 0/0
 18337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18338 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18340 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18341 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18342 ;;Total ram usage:        4 bytes
 18343 ;; Hardware stack levels used:    1
 18344 ;; Hardware stack levels required when called:   12
 18345 ;; This function calls:
 18346 ;;		_USBTransferOnePacket
 18347 ;; This function is called by:
 18348 ;;		_Terminal
 18349 ;;		_GsmGprsTerminal
 18350 ;; This function uses a non-reentrant model
 18351 ;;
 18352                           
 18353                           	psect	text74
 18354  004B3E                     __ptext74:
 18355                           	opt stack 0
 18356  004B3E                     _getsUSBUSART:
 18357                           	opt stack 13
 18358                           
 18359                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 18360                           
 18361                           ; BSR set to: 0
 18362                           ;incstack = 0
 18363  004B3E  0E00               	movlw	0
 18364  004B40  0100               	movlb	0	; () banked
 18365  004B42  6FC6               	movwf	_cdc_rx_len& (0+255),b
 18366                           
 18367                           ; BSR set to: 0
 18368                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 18369  004B44  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18370  004B46  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 18371  004B48  B4D8               	btfsc	status,2,c
 18372  004B4A  D006               	goto	u12630
 18373                           
 18374                           ; BSR set to: 0
 18375  004B4C  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 18376  004B50  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 18377  004B54  BEDF               	btfsc	indf2,7,c
 18378  004B56  D03B               	goto	l1924
 18379  004B58                     u12630:
 18380                           
 18381                           ; BSR set to: 0
 18382                           ;usb_device_cdc.c: 493: {
 18383                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 18384                           
 18385                           ; BSR set to: 0
 18386  004B58  EE20 F001          	lfsr	2,1
 18387  004B5C  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18388  004B5E  26D9               	addwf	fsr2l,f,c
 18389  004B60  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18390  004B62  22DA               	addwfc	fsr2h,f,c
 18391  004B64  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18392  004B66  5CDE               	subwf	postinc2,w,c
 18393  004B68  B0D8               	btfsc	status,0,c
 18394  004B6A  D008               	goto	l1927
 18395                           
 18396                           ; BSR set to: 0
 18397                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 18398  004B6C  EE20 F001          	lfsr	2,1
 18399  004B70  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18400  004B72  26D9               	addwf	fsr2l,f,c
 18401  004B74  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18402  004B76  22DA               	addwfc	fsr2h,f,c
 18403  004B78  50DF               	movf	indf2,w,c
 18404  004B7A  6F86               	movwf	getsUSBUSART@len& (0+255),b
 18405  004B7C                     l1927:
 18406                           
 18407                           ; BSR set to: 0
 18408                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 18409                           
 18410                           ; BSR set to: 0
 18411  004B7C  0E00               	movlw	0
 18412  004B7E  6FC6               	movwf	_cdc_rx_len& (0+255),b
 18413  004B80  D013               	goto	l1928
 18414  004B82                     
 18415                           ; BSR set to: 0
 18416                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18417                           
 18418                           ; BSR set to: 0
 18419  004B82  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18420  004B84  0D01               	mullw	1
 18421  004B86  0E00               	movlw	low _cdc_data_rx
 18422  004B88  24F3               	addwf	prodl,w,c
 18423  004B8A  6ED9               	movwf	fsr2l,c
 18424  004B8C  0E05               	movlw	high _cdc_data_rx
 18425  004B8E  20F4               	addwfc	prodh,w,c
 18426  004B90  6EDA               	movwf	fsr2h,c
 18427  004B92  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18428  004B94  0D01               	mullw	1
 18429  004B96  50F3               	movf	prodl,w,c
 18430  004B98  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18431  004B9A  6EE1               	movwf	fsr1l,c
 18432  004B9C  50F4               	movf	prodh,w,c
 18433  004B9E  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18434  004BA0  6EE2               	movwf	fsr1h,c
 18435  004BA2  CFDF FFE7          	movff	indf2,indf1
 18436                           
 18437                           ; BSR set to: 0
 18438  004BA6  2BC6               	incf	_cdc_rx_len& (0+255),f,b
 18439  004BA8                     l1928:
 18440                           
 18441                           ; BSR set to: 0
 18442                           
 18443                           ; BSR set to: 0
 18444  004BA8  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18445  004BAA  5DC6               	subwf	_cdc_rx_len& (0+255),w,b
 18446  004BAC  A0D8               	btfss	status,0,c
 18447  004BAE  D7E9               	goto	l1929
 18448                           
 18449                           ; BSR set to: 0
 18450                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18451                           
 18452                           ; BSR set to: 0
 18453  004BB0  0E00               	movlw	0
 18454  004BB2  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18455  004BB4  0E00               	movlw	low _cdc_data_rx
 18456  004BB6  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18457  004BB8  0E05               	movlw	high _cdc_data_rx
 18458  004BBA  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18459  004BBC  0E40               	movlw	64
 18460  004BBE  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18461  004BC0  0E02               	movlw	2
 18462  004BC2  EC0F  F021         	call	_USBTransferOnePacket
 18463  004BC6  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18464  004BCA  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18465  004BCE                     l1924:
 18466                           
 18467                           ;usb_device_cdc.c: 513: }
 18468                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18469  004BCE  0100               	movlb	0	; () banked
 18470  004BD0  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18471  004BD2  0012               	return	
 18472  004BD4                     __end_of_getsUSBUSART:
 18473                           	opt stack 0
 18474                           tosu	equ	0xFFF
 18475                           tosh	equ	0xFFE
 18476                           tosl	equ	0xFFD
 18477                           pclath	equ	0xFFA
 18478                           tblptru	equ	0xFF8
 18479                           tblptrh	equ	0xFF7
 18480                           tblptrl	equ	0xFF6
 18481                           tablat	equ	0xFF5
 18482                           prodh	equ	0xFF4
 18483                           prodl	equ	0xFF3
 18484                           intcon	equ	0xFF2
 18485                           intcon2	equ	0xFF1
 18486                           intcon3	equ	0xFF0
 18487                           indf0	equ	0xFEF
 18488                           postinc0	equ	0xFEE
 18489                           plusw0	equ	0xFEB
 18490                           fsr0h	equ	0xFEA
 18491                           fsr0l	equ	0xFE9
 18492                           wreg	equ	0xFE8
 18493                           indf1	equ	0xFE7
 18494                           postinc1	equ	0xFE6
 18495                           postdec1	equ	0xFE5
 18496                           fsr1h	equ	0xFE2
 18497                           fsr1l	equ	0xFE1
 18498                           indf2	equ	0xFDF
 18499                           postinc2	equ	0xFDE
 18500                           postdec2	equ	0xFDD
 18501                           plusw2	equ	0xFDB
 18502                           fsr2h	equ	0xFDA
 18503                           fsr2l	equ	0xFD9
 18504                           status	equ	0xFD8
 18505                           
 18506 ;; *************** function _USBTransferOnePacket *****************
 18507 ;; Defined at:
 18508 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18509 ;; Parameters:    Size  Location     Type
 18510 ;;  ep              1    wreg     unsigned char 
 18511 ;;  dir             1   29[BANK0 ] unsigned char 
 18512 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18513 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18514 ;;  len             1   32[BANK0 ] unsigned char 
 18515 ;; Auto vars:     Size  Location     Type
 18516 ;;  ep              1   33[BANK0 ] unsigned char 
 18517 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18518 ;;		 -> NULL(0), BDT(48), 
 18519 ;; Return value:  Size  Location     Type
 18520 ;;                  2   29[BANK0 ] PTR void 
 18521 ;; Registers used:
 18522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18523 ;; Tracked objects:
 18524 ;;		On entry : 0/0
 18525 ;;		On exit  : 0/0
 18526 ;;		Unchanged: 0/0
 18527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18528 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18529 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18531 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18532 ;;Total ram usage:        7 bytes
 18533 ;; Hardware stack levels used:    1
 18534 ;; Hardware stack levels required when called:   11
 18535 ;; This function calls:
 18536 ;;		Nothing
 18537 ;; This function is called by:
 18538 ;;		_CDCInitEP
 18539 ;;		_getsUSBUSART
 18540 ;;		_CDCTxService
 18541 ;;		_USBCDCEventHandler
 18542 ;; This function uses a non-reentrant model
 18543 ;;
 18544                           
 18545                           	psect	text75
 18546  00421E                     __ptext75:
 18547                           	opt stack 0
 18548  00421E                     _USBTransferOnePacket:
 18549                           	opt stack 13
 18550                           
 18551                           ; BSR set to: 0
 18552                           ;incstack = 0
 18553                           ;USBTransferOnePacket@ep stored from wreg
 18554  00421E  0100               	movlb	0	; () banked
 18555  004220  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18556                           
 18557                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18558                           ;usb_device.c: 1018: if(dir != 0)
 18559  004222  0100               	movlb	0	; () banked
 18560  004224  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18561  004226  B4D8               	btfsc	status,2,c
 18562  004228  D007               	goto	l1648
 18563                           
 18564                           ; BSR set to: 0
 18565                           ;usb_device.c: 1019: {
 18566                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18567  00422A  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18568  00422C  0D02               	mullw	2
 18569  00422E  0EB6               	movlw	low _pBDTEntryIn
 18570  004230  24F3               	addwf	prodl,w,c
 18571  004232  6ED9               	movwf	fsr2l,c
 18572  004234  0E00               	movlw	high _pBDTEntryIn
 18573  004236  D006               	goto	L16
 18574  004238                     l1648:
 18575                           
 18576                           ; BSR set to: 0
 18577                           ;usb_device.c: 1023: else
 18578                           ;usb_device.c: 1024: {
 18579                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18580                           
 18581                           ; BSR set to: 0
 18582  004238  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18583  00423A  0D02               	mullw	2
 18584  00423C  0E06               	movlw	low _pBDTEntryOut
 18585  00423E  24F3               	addwf	prodl,w,c
 18586  004240  6ED9               	movwf	fsr2l,c
 18587  004242  0E03               	movlw	high _pBDTEntryOut
 18588  004244                     L16:
 18589  004244  20F4               	addwfc	prodh,w,c
 18590  004246  6EDA               	movwf	fsr2h,c
 18591  004248  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18592  00424C  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18593                           
 18594                           ; BSR set to: 0
 18595                           ;usb_device.c: 1027: }
 18596                           ;usb_device.c: 1031: if(handle == 0)
 18597                           
 18598                           ; BSR set to: 0
 18599  004250  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18600  004252  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18601  004254  A4D8               	btfss	status,2,c
 18602  004256  D005               	goto	l1650
 18603                           
 18604                           ; BSR set to: 0
 18605                           ;usb_device.c: 1032: {
 18606                           ;usb_device.c: 1033: return 0;
 18607  004258  0E00               	movlw	0
 18608  00425A  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18609  00425C  0E00               	movlw	0
 18610  00425E  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18611                           
 18612                           ; BSR set to: 0
 18613  004260  0012               	return	
 18614  004262                     l1650:
 18615                           
 18616                           ; BSR set to: 0
 18617                           ;usb_device.c: 1034: }
 18618                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18619                           
 18620                           ; BSR set to: 0
 18621  004262  EE20 F002          	lfsr	2,2
 18622  004266  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18623  004268  26D9               	addwf	fsr2l,f,c
 18624  00426A  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18625  00426C  22DA               	addwfc	fsr2h,f,c
 18626  00426E  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18627  004272  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18628                           
 18629                           ;usb_device.c: 1048: handle->CNT = len;
 18630  004276  EE20 F001          	lfsr	2,1
 18631  00427A  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18632  00427C  26D9               	addwf	fsr2l,f,c
 18633  00427E  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18634  004280  22DA               	addwfc	fsr2h,f,c
 18635  004282  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18636                           
 18637                           ; BSR set to: 0
 18638                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18639  004286  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18640  00428A  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18641  00428E  0E40               	movlw	64
 18642  004290  16DF               	andwf	indf2,f,c
 18643                           
 18644                           ; BSR set to: 0
 18645                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18646  004292  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18647  004296  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18648  00429A  0E00               	movlw	0
 18649  00429C  86DB               	bsf	plusw2,3,c
 18650                           
 18651                           ; BSR set to: 0
 18652                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18653  00429E  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18654  0042A2  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18655  0042A6  0E00               	movlw	0
 18656  0042A8  8EDB               	bsf	plusw2,7,c
 18657                           
 18658                           ; BSR set to: 0
 18659                           ;usb_device.c: 1054: if(dir != 0)
 18660  0042AA  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18661  0042AC  B4D8               	btfsc	status,2,c
 18662  0042AE  D007               	goto	l1652
 18663                           
 18664                           ; BSR set to: 0
 18665                           ;usb_device.c: 1055: {
 18666                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18667  0042B0  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18668  0042B2  0D02               	mullw	2
 18669  0042B4  0EB6               	movlw	low _pBDTEntryIn
 18670  0042B6  24F3               	addwf	prodl,w,c
 18671  0042B8  6ED9               	movwf	fsr2l,c
 18672  0042BA  0E00               	movlw	high _pBDTEntryIn
 18673  0042BC  D006               	goto	L17
 18674  0042BE                     l1652:
 18675                           
 18676                           ; BSR set to: 0
 18677                           ;usb_device.c: 1059: else
 18678                           ;usb_device.c: 1060: {
 18679                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18680                           
 18681                           ; BSR set to: 0
 18682  0042BE  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18683  0042C0  0D02               	mullw	2
 18684  0042C2  0E06               	movlw	low _pBDTEntryOut
 18685  0042C4  24F3               	addwf	prodl,w,c
 18686  0042C6  6ED9               	movwf	fsr2l,c
 18687  0042C8  0E03               	movlw	high _pBDTEntryOut
 18688  0042CA                     L17:
 18689  0042CA  20F4               	addwfc	prodh,w,c
 18690  0042CC  6EDA               	movwf	fsr2h,c
 18691  0042CE  0E04               	movlw	4
 18692  0042D0  1ADF               	xorwf	indf2,f,c
 18693                           
 18694                           ; BSR set to: 0
 18695                           ;usb_device.c: 1063: }
 18696                           ;usb_device.c: 1064: return (void*)handle;
 18697                           
 18698                           ; BSR set to: 0
 18699  0042D2  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18700  0042D6  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18701  0042DA  0012               	return	
 18702  0042DC                     __end_of_USBTransferOnePacket:
 18703                           	opt stack 0
 18704                           tosu	equ	0xFFF
 18705                           tosh	equ	0xFFE
 18706                           tosl	equ	0xFFD
 18707                           pclath	equ	0xFFA
 18708                           tblptru	equ	0xFF8
 18709                           tblptrh	equ	0xFF7
 18710                           tblptrl	equ	0xFF6
 18711                           tablat	equ	0xFF5
 18712                           prodh	equ	0xFF4
 18713                           prodl	equ	0xFF3
 18714                           intcon	equ	0xFF2
 18715                           intcon2	equ	0xFF1
 18716                           intcon3	equ	0xFF0
 18717                           indf0	equ	0xFEF
 18718                           postinc0	equ	0xFEE
 18719                           plusw0	equ	0xFEB
 18720                           fsr0h	equ	0xFEA
 18721                           fsr0l	equ	0xFE9
 18722                           wreg	equ	0xFE8
 18723                           indf1	equ	0xFE7
 18724                           postinc1	equ	0xFE6
 18725                           postdec1	equ	0xFE5
 18726                           fsr1h	equ	0xFE2
 18727                           fsr1l	equ	0xFE1
 18728                           indf2	equ	0xFDF
 18729                           postinc2	equ	0xFDE
 18730                           postdec2	equ	0xFDD
 18731                           plusw2	equ	0xFDB
 18732                           fsr2h	equ	0xFDA
 18733                           fsr2l	equ	0xFD9
 18734                           status	equ	0xFD8
 18735                           
 18736 ;; *************** function _atoi *****************
 18737 ;; Defined at:
 18738 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18739 ;; Parameters:    Size  Location     Type
 18740 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18741 ;;		 -> Terminal@Len(4), 
 18742 ;; Auto vars:     Size  Location     Type
 18743 ;;  a               2   40[BANK0 ] int 
 18744 ;;  sign            1   39[BANK0 ] unsigned char 
 18745 ;; Return value:  Size  Location     Type
 18746 ;;                  2   35[BANK0 ] int 
 18747 ;; Registers used:
 18748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18749 ;; Tracked objects:
 18750 ;;		On entry : 0/0
 18751 ;;		On exit  : 0/0
 18752 ;;		Unchanged: 0/0
 18753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18754 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18755 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18756 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18757 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18758 ;;Total ram usage:        7 bytes
 18759 ;; Hardware stack levels used:    1
 18760 ;; Hardware stack levels required when called:   12
 18761 ;; This function calls:
 18762 ;;		___wmul
 18763 ;;		_isdigit
 18764 ;; This function is called by:
 18765 ;;		_Terminal
 18766 ;; This function uses a non-reentrant model
 18767 ;;
 18768                           
 18769                           	psect	text76
 18770  003966                     __ptext76:
 18771                           	opt stack 0
 18772  003966                     _atoi:
 18773                           	opt stack 13
 18774                           
 18775                           ; BSR set to: 0
 18776                           ;incstack = 0
 18777  003966  D003               	goto	l3001
 18778  003968  0100               	movlb	0	; () banked
 18779  00396A  4B83               	infsnz	atoi@s& (0+255),f,b
 18780  00396C  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18781  00396E                     l3001:
 18782                           
 18783                           ; BSR set to: 0
 18784  00396E  C083  FFD9         	movff	atoi@s,fsr2l
 18785  003972  C084  FFDA         	movff	atoi@s+1,fsr2h
 18786  003976  0E20               	movlw	32
 18787  003978  18DE               	xorwf	postinc2,w,c
 18788  00397A  B4D8               	btfsc	status,2,c
 18789  00397C  D7F5               	goto	l3002
 18790  00397E  C083  FFD9         	movff	atoi@s,fsr2l
 18791  003982  C084  FFDA         	movff	atoi@s+1,fsr2h
 18792  003986  0E09               	movlw	9
 18793  003988  18DE               	xorwf	postinc2,w,c
 18794  00398A  B4D8               	btfsc	status,2,c
 18795  00398C  D7ED               	goto	l3002
 18796  00398E  0E00               	movlw	0
 18797  003990  0100               	movlb	0	; () banked
 18798  003992  6F89               	movwf	(atoi@a+1)& (0+255),b
 18799  003994  0E00               	movlw	0
 18800  003996  6F88               	movwf	atoi@a& (0+255),b
 18801  003998  0E00               	movlw	0
 18802  00399A  6F87               	movwf	atoi@sign& (0+255),b
 18803                           
 18804                           ; BSR set to: 0
 18805  00399C  C083  FFD9         	movff	atoi@s,fsr2l
 18806  0039A0  C084  FFDA         	movff	atoi@s+1,fsr2h
 18807  0039A4  0E2D               	movlw	45
 18808  0039A6  18DE               	xorwf	postinc2,w,c
 18809  0039A8  A4D8               	btfss	status,2,c
 18810  0039AA  D002               	goto	l3004
 18811                           
 18812                           ; BSR set to: 0
 18813  0039AC  2B87               	incf	atoi@sign& (0+255),f,b
 18814  0039AE  D026               	goto	l13682
 18815  0039B0                     l3004:
 18816                           
 18817                           ; BSR set to: 0
 18818                           
 18819                           ; BSR set to: 0
 18820  0039B0  C083  FFD9         	movff	atoi@s,fsr2l
 18821  0039B4  C084  FFDA         	movff	atoi@s+1,fsr2h
 18822  0039B8  0E2B               	movlw	43
 18823  0039BA  18DE               	xorwf	postinc2,w,c
 18824  0039BC  A4D8               	btfss	status,2,c
 18825  0039BE  D020               	goto	l3007
 18826  0039C0  D01D               	goto	l13682
 18827  0039C2                     
 18828                           ; BSR set to: 0
 18829  0039C2  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18830  0039C6  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18831  0039CA  0E00               	movlw	0
 18832  0039CC  0100               	movlb	0	; () banked
 18833  0039CE  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18834  0039D0  0E0A               	movlw	10
 18835  0039D2  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18836  0039D4  EC01  F032         	call	___wmul	;wreg free
 18837  0039D8  C083  FFD9         	movff	atoi@s,fsr2l
 18838  0039DC  C084  FFDA         	movff	atoi@s+1,fsr2h
 18839  0039E0  50DF               	movf	indf2,w,c
 18840  0039E2  0100               	movlb	0	; () banked
 18841  0039E4  6F85               	movwf	??_atoi& (0+255),b
 18842  0039E6  6B86               	clrf	(??_atoi+1)& (0+255),b
 18843  0039E8  517D               	movf	?___wmul& (0+255),w,b
 18844  0039EA  2785               	addwf	??_atoi& (0+255),f,b
 18845  0039EC  517E               	movf	(?___wmul+1)& (0+255),w,b
 18846  0039EE  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18847  0039F0  0ED0               	movlw	208
 18848  0039F2  2585               	addwf	??_atoi& (0+255),w,b
 18849  0039F4  6F88               	movwf	atoi@a& (0+255),b
 18850  0039F6  0EFF               	movlw	255
 18851  0039F8  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18852  0039FA  6F89               	movwf	(atoi@a+1)& (0+255),b
 18853  0039FC                     l13682:
 18854                           
 18855                           ; BSR set to: 0
 18856  0039FC  4B83               	infsnz	atoi@s& (0+255),f,b
 18857  0039FE  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18858  003A00                     l3007:
 18859                           
 18860                           ; BSR set to: 0
 18861                           
 18862                           ; BSR set to: 0
 18863  003A00  C083  FFD9         	movff	atoi@s,fsr2l
 18864  003A04  C084  FFDA         	movff	atoi@s+1,fsr2h
 18865  003A08  50DF               	movf	indf2,w,c
 18866  003A0A  ECC7  F032         	call	_isdigit
 18867  003A0E  B0D8               	btfsc	status,0,c
 18868  003A10  D7D8               	goto	l3008
 18869  003A12  0100               	movlb	0	; () banked
 18870  003A14  5187               	movf	atoi@sign& (0+255),w,b
 18871  003A16  B4D8               	btfsc	status,2,c
 18872  003A18  D00D               	goto	l3010
 18873                           
 18874                           ; BSR set to: 0
 18875  003A1A  C088  F085         	movff	atoi@a,??_atoi
 18876  003A1E  C089  F086         	movff	atoi@a+1,??_atoi+1
 18877  003A22  1F85               	comf	??_atoi& (0+255),f,b
 18878  003A24  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18879  003A26  4B85               	infsnz	??_atoi& (0+255),f,b
 18880  003A28  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18881  003A2A  C085  F083         	movff	??_atoi,?_atoi
 18882  003A2E  C086  F084         	movff	??_atoi+1,?_atoi+1
 18883  003A32  0012               	return	
 18884  003A34                     l3010:
 18885                           
 18886                           ; BSR set to: 0
 18887  003A34  C088  F083         	movff	atoi@a,?_atoi
 18888  003A38  C089  F084         	movff	atoi@a+1,?_atoi+1
 18889                           
 18890                           ; BSR set to: 0
 18891  003A3C  0012               	return		;funcret
 18892  003A3E                     __end_of_atoi:
 18893                           	opt stack 0
 18894                           tosu	equ	0xFFF
 18895                           tosh	equ	0xFFE
 18896                           tosl	equ	0xFFD
 18897                           pclath	equ	0xFFA
 18898                           tblptru	equ	0xFF8
 18899                           tblptrh	equ	0xFF7
 18900                           tblptrl	equ	0xFF6
 18901                           tablat	equ	0xFF5
 18902                           prodh	equ	0xFF4
 18903                           prodl	equ	0xFF3
 18904                           intcon	equ	0xFF2
 18905                           intcon2	equ	0xFF1
 18906                           intcon3	equ	0xFF0
 18907                           indf0	equ	0xFEF
 18908                           postinc0	equ	0xFEE
 18909                           plusw0	equ	0xFEB
 18910                           fsr0h	equ	0xFEA
 18911                           fsr0l	equ	0xFE9
 18912                           wreg	equ	0xFE8
 18913                           indf1	equ	0xFE7
 18914                           postinc1	equ	0xFE6
 18915                           postdec1	equ	0xFE5
 18916                           fsr1h	equ	0xFE2
 18917                           fsr1l	equ	0xFE1
 18918                           indf2	equ	0xFDF
 18919                           postinc2	equ	0xFDE
 18920                           postdec2	equ	0xFDD
 18921                           plusw2	equ	0xFDB
 18922                           fsr2h	equ	0xFDA
 18923                           fsr2l	equ	0xFD9
 18924                           status	equ	0xFD8
 18925                           
 18926 ;; *************** function _isdigit *****************
 18927 ;; Defined at:
 18928 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18929 ;; Parameters:    Size  Location     Type
 18930 ;;  c               1    wreg     unsigned char 
 18931 ;; Auto vars:     Size  Location     Type
 18932 ;;  c               1   31[BANK0 ] unsigned char 
 18933 ;; Return value:  Size  Location     Type
 18934 ;;		None               void
 18935 ;; Registers used:
 18936 ;;		wreg, status,2, status,0
 18937 ;; Tracked objects:
 18938 ;;		On entry : 0/0
 18939 ;;		On exit  : 0/0
 18940 ;;		Unchanged: 0/0
 18941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18943 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18944 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18945 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18946 ;;Total ram usage:        3 bytes
 18947 ;; Hardware stack levels used:    1
 18948 ;; Hardware stack levels required when called:   11
 18949 ;; This function calls:
 18950 ;;		Nothing
 18951 ;; This function is called by:
 18952 ;;		_atoi
 18953 ;;		_strtol
 18954 ;;		_xtoi
 18955 ;;		_isxdigit
 18956 ;; This function uses a non-reentrant model
 18957 ;;
 18958                           
 18959                           	psect	text77
 18960  00658E                     __ptext77:
 18961                           	opt stack 0
 18962  00658E                     _isdigit:
 18963                           	opt stack 12
 18964                           
 18965                           ; BSR set to: 0
 18966                           ;incstack = 0
 18967                           ;isdigit@c stored from wreg
 18968  00658E  0100               	movlb	0	; () banked
 18969  006590  6F7F               	movwf	isdigit@c& (0+255),b
 18970  006592  0E00               	movlw	0
 18971  006594  0100               	movlb	0	; () banked
 18972  006596  6F7E               	movwf	_isdigit$6366& (0+255),b
 18973                           
 18974                           ; BSR set to: 0
 18975  006598  0E3A               	movlw	58
 18976  00659A  617F               	cpfslt	isdigit@c& (0+255),b
 18977  00659C  D005               	goto	l3182
 18978                           
 18979                           ; BSR set to: 0
 18980  00659E  0E2F               	movlw	47
 18981  0065A0  657F               	cpfsgt	isdigit@c& (0+255),b
 18982  0065A2  D002               	goto	l3182
 18983                           
 18984                           ; BSR set to: 0
 18985  0065A4  0E01               	movlw	1
 18986  0065A6  6F7E               	movwf	_isdigit$6366& (0+255),b
 18987  0065A8                     l3182:
 18988                           
 18989                           ; BSR set to: 0
 18990                           
 18991                           ; BSR set to: 0
 18992  0065A8  C07E  F07D         	movff	_isdigit$6366,??_isdigit
 18993  0065AC  317D               	rrcf	??_isdigit& (0+255),w,b
 18994  0065AE  0012               	return	
 18995  0065B0                     __end_of_isdigit:
 18996                           	opt stack 0
 18997                           tosu	equ	0xFFF
 18998                           tosh	equ	0xFFE
 18999                           tosl	equ	0xFFD
 19000                           pclath	equ	0xFFA
 19001                           tblptru	equ	0xFF8
 19002                           tblptrh	equ	0xFF7
 19003                           tblptrl	equ	0xFF6
 19004                           tablat	equ	0xFF5
 19005                           prodh	equ	0xFF4
 19006                           prodl	equ	0xFF3
 19007                           intcon	equ	0xFF2
 19008                           intcon2	equ	0xFF1
 19009                           intcon3	equ	0xFF0
 19010                           indf0	equ	0xFEF
 19011                           postinc0	equ	0xFEE
 19012                           plusw0	equ	0xFEB
 19013                           fsr0h	equ	0xFEA
 19014                           fsr0l	equ	0xFE9
 19015                           wreg	equ	0xFE8
 19016                           indf1	equ	0xFE7
 19017                           postinc1	equ	0xFE6
 19018                           postdec1	equ	0xFE5
 19019                           fsr1h	equ	0xFE2
 19020                           fsr1l	equ	0xFE1
 19021                           indf2	equ	0xFDF
 19022                           postinc2	equ	0xFDE
 19023                           postdec2	equ	0xFDD
 19024                           plusw2	equ	0xFDB
 19025                           fsr2h	equ	0xFDA
 19026                           fsr2l	equ	0xFD9
 19027                           status	equ	0xFD8
 19028                           
 19029 ;; *************** function _Rtcm_SetRtccDate *****************
 19030 ;; Defined at:
 19031 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19032 ;; Parameters:    Size  Location     Type
 19033 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 19034 ;; Auto vars:     Size  Location     Type
 19035 ;;		None
 19036 ;; Return value:  Size  Location     Type
 19037 ;;                  1    wreg      void 
 19038 ;; Registers used:
 19039 ;;		wreg, status,2, status,0, cstack
 19040 ;; Tracked objects:
 19041 ;;		On entry : 0/0
 19042 ;;		On exit  : 0/0
 19043 ;;		Unchanged: 0/0
 19044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19045 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19048 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19049 ;;Total ram usage:        8 bytes
 19050 ;; Hardware stack levels used:    1
 19051 ;; Hardware stack levels required when called:   13
 19052 ;; This function calls:
 19053 ;;		_Rtcc_LockRtc
 19054 ;;		_Rtcc_SetRtccValue
 19055 ;;		_Rtcc_UnlockRtc
 19056 ;; This function is called by:
 19057 ;;		_Rtcm_MainTask
 19058 ;; This function uses a non-reentrant model
 19059 ;;
 19060                           
 19061                           	psect	text78
 19062  0058A8                     __ptext78:
 19063                           	opt stack 0
 19064  0058A8                     _Rtcm_SetRtccDate:
 19065                           	opt stack 14
 19066                           
 19067                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 19068                           
 19069                           ; BSR set to: 0
 19070                           ;incstack = 0
 19071  0058A8  EC08  F034         	call	_Rtcc_UnlockRtc	;wreg free
 19072                           
 19073                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 19074  0058AC  0100               	movlb	0	; () banked
 19075  0058AE  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 19076  0058B0  0F30               	addlw	48
 19077  0058B2  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 19078  0058B4  0E00               	movlw	0
 19079  0058B6  EC70  F00C         	call	_Rtcc_SetRtccValue
 19080                           
 19081                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 19082  0058BA  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 19083  0058BE  0E01               	movlw	1
 19084  0058C0  EC70  F00C         	call	_Rtcc_SetRtccValue
 19085                           
 19086                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 19087  0058C4  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 19088  0058C8  0E02               	movlw	2
 19089  0058CA  EC70  F00C         	call	_Rtcc_SetRtccValue
 19090                           
 19091                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 19092  0058CE  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 19093  0058D2  0E03               	movlw	3
 19094  0058D4  EC70  F00C         	call	_Rtcc_SetRtccValue
 19095                           
 19096                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 19097  0058D8  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 19098  0058DC  0E04               	movlw	4
 19099  0058DE  EC70  F00C         	call	_Rtcc_SetRtccValue
 19100                           
 19101                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 19102  0058E2  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 19103  0058E6  0E05               	movlw	5
 19104  0058E8  EC70  F00C         	call	_Rtcc_SetRtccValue
 19105                           
 19106                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 19107  0058EC  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 19108  0058F0  0E06               	movlw	6
 19109  0058F2  EC70  F00C         	call	_Rtcc_SetRtccValue
 19110                           
 19111                           ;rtcm.c: 191: Rtcc_LockRtc();
 19112  0058F6  EC10  F034         	call	_Rtcc_LockRtc	;wreg free
 19113  0058FA  0012               	return		;funcret
 19114  0058FC                     __end_of_Rtcm_SetRtccDate:
 19115                           	opt stack 0
 19116                           tosu	equ	0xFFF
 19117                           tosh	equ	0xFFE
 19118                           tosl	equ	0xFFD
 19119                           pclath	equ	0xFFA
 19120                           tblptru	equ	0xFF8
 19121                           tblptrh	equ	0xFF7
 19122                           tblptrl	equ	0xFF6
 19123                           tablat	equ	0xFF5
 19124                           prodh	equ	0xFF4
 19125                           prodl	equ	0xFF3
 19126                           intcon	equ	0xFF2
 19127                           intcon2	equ	0xFF1
 19128                           intcon3	equ	0xFF0
 19129                           indf0	equ	0xFEF
 19130                           postinc0	equ	0xFEE
 19131                           plusw0	equ	0xFEB
 19132                           fsr0h	equ	0xFEA
 19133                           fsr0l	equ	0xFE9
 19134                           wreg	equ	0xFE8
 19135                           indf1	equ	0xFE7
 19136                           postinc1	equ	0xFE6
 19137                           postdec1	equ	0xFE5
 19138                           fsr1h	equ	0xFE2
 19139                           fsr1l	equ	0xFE1
 19140                           indf2	equ	0xFDF
 19141                           postinc2	equ	0xFDE
 19142                           postdec2	equ	0xFDD
 19143                           plusw2	equ	0xFDB
 19144                           fsr2h	equ	0xFDA
 19145                           fsr2l	equ	0xFD9
 19146                           status	equ	0xFD8
 19147                           
 19148 ;; *************** function _Rtcc_UnlockRtc *****************
 19149 ;; Defined at:
 19150 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19151 ;; Parameters:    Size  Location     Type
 19152 ;;		None
 19153 ;; Auto vars:     Size  Location     Type
 19154 ;;		None
 19155 ;; Return value:  Size  Location     Type
 19156 ;;                  1    wreg      void 
 19157 ;; Registers used:
 19158 ;;		None
 19159 ;; Tracked objects:
 19160 ;;		On entry : 0/0
 19161 ;;		On exit  : 0/0
 19162 ;;		Unchanged: 0/0
 19163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19168 ;;Total ram usage:        0 bytes
 19169 ;; Hardware stack levels used:    1
 19170 ;; Hardware stack levels required when called:   11
 19171 ;; This function calls:
 19172 ;;		Nothing
 19173 ;; This function is called by:
 19174 ;;		_Rtcm_MainTask
 19175 ;;		_Rtcm_SetRtccDate
 19176 ;;		_Rtcm_SetRtccAlarm
 19177 ;; This function uses a non-reentrant model
 19178 ;;
 19179                           
 19180                           	psect	text79
 19181  006810                     __ptext79:
 19182                           	opt stack 0
 19183  006810                     _Rtcc_UnlockRtc:
 19184                           	opt stack 15
 19185                           
 19186                           ;incstack = 0
 19187  006810  010F               	movlb	15	;# 
 19188  006812  0E55               	movlw	85	;# 
 19189  006814  6EA7               	movwf	4007,c	;# 
 19190  006816  0EAA               	movlw	170	;# 
 19191  006818  6EA7               	movwf	4007,c	;# 
 19192                           
 19193                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 19194  00681A  010F               	movlb	15	; () banked
 19195  00681C  8B3F               	bsf	63,5,b	;volatile
 19196                           
 19197                           ; BSR set to: 15
 19198  00681E  0012               	return		;funcret
 19199  006820                     __end_of_Rtcc_UnlockRtc:
 19200                           	opt stack 0
 19201                           tosu	equ	0xFFF
 19202                           tosh	equ	0xFFE
 19203                           tosl	equ	0xFFD
 19204                           pclath	equ	0xFFA
 19205                           tblptru	equ	0xFF8
 19206                           tblptrh	equ	0xFF7
 19207                           tblptrl	equ	0xFF6
 19208                           tablat	equ	0xFF5
 19209                           prodh	equ	0xFF4
 19210                           prodl	equ	0xFF3
 19211                           intcon	equ	0xFF2
 19212                           intcon2	equ	0xFF1
 19213                           intcon3	equ	0xFF0
 19214                           indf0	equ	0xFEF
 19215                           postinc0	equ	0xFEE
 19216                           plusw0	equ	0xFEB
 19217                           fsr0h	equ	0xFEA
 19218                           fsr0l	equ	0xFE9
 19219                           wreg	equ	0xFE8
 19220                           indf1	equ	0xFE7
 19221                           postinc1	equ	0xFE6
 19222                           postdec1	equ	0xFE5
 19223                           fsr1h	equ	0xFE2
 19224                           fsr1l	equ	0xFE1
 19225                           indf2	equ	0xFDF
 19226                           postinc2	equ	0xFDE
 19227                           postdec2	equ	0xFDD
 19228                           plusw2	equ	0xFDB
 19229                           fsr2h	equ	0xFDA
 19230                           fsr2l	equ	0xFD9
 19231                           status	equ	0xFD8
 19232                           
 19233 ;; *************** function _Rtcc_SetRtccValue *****************
 19234 ;; Defined at:
 19235 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19236 ;; Parameters:    Size  Location     Type
 19237 ;;  RtccPtrVal      1    wreg     enum E7757
 19238 ;;  Value           1   37[BANK0 ] unsigned char 
 19239 ;; Auto vars:     Size  Location     Type
 19240 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 19241 ;; Return value:  Size  Location     Type
 19242 ;;                  1    wreg      void 
 19243 ;; Registers used:
 19244 ;;		wreg, status,2, status,0, cstack
 19245 ;; Tracked objects:
 19246 ;;		On entry : 0/0
 19247 ;;		On exit  : 0/0
 19248 ;;		Unchanged: 0/0
 19249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19250 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19252 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19253 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19254 ;;Total ram usage:        4 bytes
 19255 ;; Hardware stack levels used:    1
 19256 ;; Hardware stack levels required when called:   12
 19257 ;; This function calls:
 19258 ;;		___awdiv
 19259 ;;		___awmod
 19260 ;; This function is called by:
 19261 ;;		_Rtcm_SetRtccDate
 19262 ;; This function uses a non-reentrant model
 19263 ;;
 19264                           
 19265                           	psect	text80
 19266  0018E0                     __ptext80:
 19267                           	opt stack 0
 19268  0018E0                     _Rtcc_SetRtccValue:
 19269                           	opt stack 14
 19270                           
 19271                           ; BSR set to: 15
 19272                           ;incstack = 0
 19273                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 19274  0018E0  0100               	movlb	0	; () banked
 19275  0018E2  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 19276                           
 19277                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 19278  0018E4  D0FC               	goto	l441
 19279  0018E6                     l442:
 19280                           
 19281                           ; BSR set to: 0
 19282                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 19283  0018E6  010F               	movlb	15	; () banked
 19284  0018E8  833F               	bsf	63,1,b	;volatile
 19285                           
 19286                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 19287  0018EA  813F               	bsf	63,0,b	;volatile
 19288                           
 19289                           ; BSR set to: 15
 19290                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19291  0018EC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19292  0018F0  0100               	movlb	0	; () banked
 19293  0018F2  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19294  0018F4  0E00               	movlw	0
 19295  0018F6  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19296  0018F8  0E0A               	movlw	10
 19297  0018FA  6F7F               	movwf	___awmod@divisor& (0+255),b
 19298  0018FC  ECA6  F028         	call	___awmod	;wreg free
 19299  001900  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19300  001904  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19301  001908  0E0F               	movlw	15
 19302  00190A  0100               	movlb	0	; () banked
 19303  00190C  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19304  00190E  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19305  001912  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19306  001914  0E00               	movlw	0
 19307  001916  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19308  001918  0E0A               	movlw	10
 19309  00191A  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19310  00191C  ECE0  F027         	call	___awdiv	;wreg free
 19311  001920  0100               	movlb	0	; () banked
 19312  001922  397D               	swapf	?___awdiv& (0+255),w,b
 19313  001924  0BF0               	andlw	240
 19314  001926  0BF0               	andlw	240
 19315  001928  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19316  00192A  6E98               	movwf	3992,c	;volatile
 19317                           
 19318                           ;rtcc_drv.c: 393: break;
 19319  00192C  0012               	return	
 19320  00192E                     l444:
 19321                           
 19322                           ; BSR set to: 0
 19323                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19324  00192E  010F               	movlb	15	; () banked
 19325  001930  833F               	bsf	63,1,b	;volatile
 19326                           
 19327                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19328  001932  913F               	bcf	63,0,b	;volatile
 19329                           
 19330                           ; BSR set to: 15
 19331                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19332  001934  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19333  001938  0100               	movlb	0	; () banked
 19334  00193A  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19335  00193C  0E00               	movlw	0
 19336  00193E  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19337  001940  0E0A               	movlw	10
 19338  001942  6F7F               	movwf	___awmod@divisor& (0+255),b
 19339  001944  ECA6  F028         	call	___awmod	;wreg free
 19340  001948  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19341  00194C  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19342  001950  0E0F               	movlw	15
 19343  001952  0100               	movlb	0	; () banked
 19344  001954  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19345  001956  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19346  00195A  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19347  00195C  0E00               	movlw	0
 19348  00195E  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19349  001960  0E0A               	movlw	10
 19350  001962  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19351  001964  ECE0  F027         	call	___awdiv	;wreg free
 19352  001968  0100               	movlb	0	; () banked
 19353  00196A  397D               	swapf	?___awdiv& (0+255),w,b
 19354  00196C  0BF0               	andlw	240
 19355  00196E  0BF0               	andlw	240
 19356  001970  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19357  001972  6E99               	movwf	3993,c	;volatile
 19358                           
 19359                           ;rtcc_drv.c: 401: break;
 19360  001974  0012               	return	
 19361  001976                     l445:
 19362                           
 19363                           ; BSR set to: 0
 19364                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19365  001976  010F               	movlb	15	; () banked
 19366  001978  833F               	bsf	63,1,b	;volatile
 19367                           
 19368                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19369  00197A  913F               	bcf	63,0,b	;volatile
 19370                           
 19371                           ; BSR set to: 15
 19372                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19373  00197C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19374  001980  0100               	movlb	0	; () banked
 19375  001982  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19376  001984  0E00               	movlw	0
 19377  001986  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19378  001988  0E0A               	movlw	10
 19379  00198A  6F7F               	movwf	___awmod@divisor& (0+255),b
 19380  00198C  ECA6  F028         	call	___awmod	;wreg free
 19381  001990  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19382  001994  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19383  001998  0E0F               	movlw	15
 19384  00199A  0100               	movlb	0	; () banked
 19385  00199C  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19386  00199E  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19387  0019A2  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19388  0019A4  0E00               	movlw	0
 19389  0019A6  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19390  0019A8  0E0A               	movlw	10
 19391  0019AA  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19392  0019AC  ECE0  F027         	call	___awdiv	;wreg free
 19393  0019B0  0100               	movlb	0	; () banked
 19394  0019B2  397D               	swapf	?___awdiv& (0+255),w,b
 19395  0019B4  0BF0               	andlw	240
 19396  0019B6  0BF0               	andlw	240
 19397  0019B8  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19398  0019BA  6E98               	movwf	3992,c	;volatile
 19399                           
 19400                           ;rtcc_drv.c: 409: break;
 19401  0019BC  0012               	return	
 19402  0019BE                     l446:
 19403                           
 19404                           ; BSR set to: 0
 19405                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19406  0019BE  010F               	movlb	15	; () banked
 19407  0019C0  933F               	bcf	63,1,b	;volatile
 19408                           
 19409                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19410  0019C2  813F               	bsf	63,0,b	;volatile
 19411                           
 19412                           ; BSR set to: 15
 19413                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19414  0019C4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19415  0019C8  0100               	movlb	0	; () banked
 19416  0019CA  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19417  0019CC  0E00               	movlw	0
 19418  0019CE  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19419  0019D0  0E0A               	movlw	10
 19420  0019D2  6F7F               	movwf	___awmod@divisor& (0+255),b
 19421  0019D4  ECA6  F028         	call	___awmod	;wreg free
 19422  0019D8  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19423  0019DC  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19424  0019E0  0E0F               	movlw	15
 19425  0019E2  0100               	movlb	0	; () banked
 19426  0019E4  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19427  0019E6  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19428  0019EA  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19429  0019EC  0E00               	movlw	0
 19430  0019EE  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19431  0019F0  0E0A               	movlw	10
 19432  0019F2  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19433  0019F4  ECE0  F027         	call	___awdiv	;wreg free
 19434  0019F8  0100               	movlb	0	; () banked
 19435  0019FA  397D               	swapf	?___awdiv& (0+255),w,b
 19436  0019FC  0BF0               	andlw	240
 19437  0019FE  0BF0               	andlw	240
 19438  001A00  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19439  001A02  6E99               	movwf	3993,c	;volatile
 19440                           
 19441                           ;rtcc_drv.c: 417: break;
 19442  001A04  0012               	return	
 19443  001A06                     l447:
 19444                           
 19445                           ; BSR set to: 0
 19446                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19447  001A06  010F               	movlb	15	; () banked
 19448  001A08  933F               	bcf	63,1,b	;volatile
 19449                           
 19450                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19451  001A0A  813F               	bsf	63,0,b	;volatile
 19452                           
 19453                           ; BSR set to: 15
 19454                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19455  001A0C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19456  001A10  0100               	movlb	0	; () banked
 19457  001A12  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19458  001A14  0E00               	movlw	0
 19459  001A16  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19460  001A18  0E0A               	movlw	10
 19461  001A1A  6F7F               	movwf	___awmod@divisor& (0+255),b
 19462  001A1C  ECA6  F028         	call	___awmod	;wreg free
 19463  001A20  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19464  001A24  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19465  001A28  0E0F               	movlw	15
 19466  001A2A  0100               	movlb	0	; () banked
 19467  001A2C  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19468  001A2E  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19469  001A32  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19470  001A34  0E00               	movlw	0
 19471  001A36  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19472  001A38  0E0A               	movlw	10
 19473  001A3A  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19474  001A3C  ECE0  F027         	call	___awdiv	;wreg free
 19475  001A40  0100               	movlb	0	; () banked
 19476  001A42  397D               	swapf	?___awdiv& (0+255),w,b
 19477  001A44  0BF0               	andlw	240
 19478  001A46  0BF0               	andlw	240
 19479  001A48  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19480  001A4A  6E98               	movwf	3992,c	;volatile
 19481                           
 19482                           ;rtcc_drv.c: 425: break;
 19483  001A4C  0012               	return	
 19484  001A4E                     l448:
 19485                           
 19486                           ; BSR set to: 0
 19487                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19488  001A4E  010F               	movlb	15	; () banked
 19489  001A50  933F               	bcf	63,1,b	;volatile
 19490                           
 19491                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19492  001A52  913F               	bcf	63,0,b	;volatile
 19493                           
 19494                           ; BSR set to: 15
 19495                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19496  001A54  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19497  001A58  0100               	movlb	0	; () banked
 19498  001A5A  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19499  001A5C  0E00               	movlw	0
 19500  001A5E  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19501  001A60  0E0A               	movlw	10
 19502  001A62  6F7F               	movwf	___awmod@divisor& (0+255),b
 19503  001A64  ECA6  F028         	call	___awmod	;wreg free
 19504  001A68  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19505  001A6C  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19506  001A70  0E0F               	movlw	15
 19507  001A72  0100               	movlb	0	; () banked
 19508  001A74  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19509  001A76  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19510  001A7A  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19511  001A7C  0E00               	movlw	0
 19512  001A7E  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19513  001A80  0E0A               	movlw	10
 19514  001A82  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19515  001A84  ECE0  F027         	call	___awdiv	;wreg free
 19516  001A88  0100               	movlb	0	; () banked
 19517  001A8A  397D               	swapf	?___awdiv& (0+255),w,b
 19518  001A8C  0BF0               	andlw	240
 19519  001A8E  0BF0               	andlw	240
 19520  001A90  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19521  001A92  6E99               	movwf	3993,c	;volatile
 19522                           
 19523                           ;rtcc_drv.c: 433: break;
 19524  001A94  0012               	return	
 19525  001A96                     l449:
 19526                           
 19527                           ; BSR set to: 0
 19528                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19529  001A96  010F               	movlb	15	; () banked
 19530  001A98  933F               	bcf	63,1,b	;volatile
 19531                           
 19532                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19533  001A9A  913F               	bcf	63,0,b	;volatile
 19534                           
 19535                           ; BSR set to: 15
 19536                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19537  001A9C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19538  001AA0  0100               	movlb	0	; () banked
 19539  001AA2  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19540  001AA4  0E00               	movlw	0
 19541  001AA6  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19542  001AA8  0E0A               	movlw	10
 19543  001AAA  6F7F               	movwf	___awmod@divisor& (0+255),b
 19544  001AAC  ECA6  F028         	call	___awmod	;wreg free
 19545  001AB0  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19546  001AB4  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19547  001AB8  0E0F               	movlw	15
 19548  001ABA  0100               	movlb	0	; () banked
 19549  001ABC  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19550  001ABE  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19551  001AC2  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19552  001AC4  0E00               	movlw	0
 19553  001AC6  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19554  001AC8  0E0A               	movlw	10
 19555  001ACA  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19556  001ACC  ECE0  F027         	call	___awdiv	;wreg free
 19557  001AD0  0100               	movlb	0	; () banked
 19558  001AD2  397D               	swapf	?___awdiv& (0+255),w,b
 19559  001AD4  0BF0               	andlw	240
 19560  001AD6  0BF0               	andlw	240
 19561  001AD8  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19562  001ADA  6E98               	movwf	3992,c	;volatile
 19563                           
 19564                           ; BSR set to: 0
 19565                           ;rtcc_drv.c: 445: }
 19566                           
 19567                           ; BSR set to: 0
 19568                           ;rtcc_drv.c: 444: break;
 19569                           
 19570                           ;rtcc_drv.c: 443: default:
 19571                           
 19572                           ;rtcc_drv.c: 441: break;
 19573  001ADC  0012               	return	
 19574  001ADE                     l441:
 19575                           
 19576                           ; BSR set to: 0
 19577  001ADE  0100               	movlb	0	; () banked
 19578  001AE0  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19579                           
 19580                           ; Switch size 1, requested type "space"
 19581                           ; Number of cases is 7, Range of values is 0 to 6
 19582                           ; switch strategies available:
 19583                           ; Name         Instructions Cycles
 19584                           ; simple_byte           22    12 (average)
 19585                           ;	Chosen strategy is simple_byte
 19586  001AE2  0A00               	xorlw	0	; case 0
 19587  001AE4  B4D8               	btfsc	status,2,c
 19588  001AE6  D6FF               	goto	l442
 19589  001AE8  0A01               	xorlw	1	; case 1
 19590  001AEA  B4D8               	btfsc	status,2,c
 19591  001AEC  D720               	goto	l444
 19592  001AEE  0A03               	xorlw	3	; case 2
 19593  001AF0  B4D8               	btfsc	status,2,c
 19594  001AF2  D741               	goto	l445
 19595  001AF4  0A01               	xorlw	1	; case 3
 19596  001AF6  B4D8               	btfsc	status,2,c
 19597  001AF8  D762               	goto	l446
 19598  001AFA  0A07               	xorlw	7	; case 4
 19599  001AFC  B4D8               	btfsc	status,2,c
 19600  001AFE  D783               	goto	l447
 19601  001B00  0A01               	xorlw	1	; case 5
 19602  001B02  B4D8               	btfsc	status,2,c
 19603  001B04  D7A4               	goto	l448
 19604  001B06  0A03               	xorlw	3	; case 6
 19605  001B08  A4D8               	btfss	status,2,c
 19606  001B0A  0012               	return	
 19607  001B0C  D7C4               	goto	l449
 19608  001B0E                     __end_of_Rtcc_SetRtccValue:
 19609                           	opt stack 0
 19610                           tosu	equ	0xFFF
 19611                           tosh	equ	0xFFE
 19612                           tosl	equ	0xFFD
 19613                           pclath	equ	0xFFA
 19614                           tblptru	equ	0xFF8
 19615                           tblptrh	equ	0xFF7
 19616                           tblptrl	equ	0xFF6
 19617                           tablat	equ	0xFF5
 19618                           prodh	equ	0xFF4
 19619                           prodl	equ	0xFF3
 19620                           intcon	equ	0xFF2
 19621                           intcon2	equ	0xFF1
 19622                           intcon3	equ	0xFF0
 19623                           indf0	equ	0xFEF
 19624                           postinc0	equ	0xFEE
 19625                           plusw0	equ	0xFEB
 19626                           fsr0h	equ	0xFEA
 19627                           fsr0l	equ	0xFE9
 19628                           wreg	equ	0xFE8
 19629                           indf1	equ	0xFE7
 19630                           postinc1	equ	0xFE6
 19631                           postdec1	equ	0xFE5
 19632                           fsr1h	equ	0xFE2
 19633                           fsr1l	equ	0xFE1
 19634                           indf2	equ	0xFDF
 19635                           postinc2	equ	0xFDE
 19636                           postdec2	equ	0xFDD
 19637                           plusw2	equ	0xFDB
 19638                           fsr2h	equ	0xFDA
 19639                           fsr2l	equ	0xFD9
 19640                           status	equ	0xFD8
 19641                           
 19642 ;; *************** function ___awmod *****************
 19643 ;; Defined at:
 19644 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19645 ;; Parameters:    Size  Location     Type
 19646 ;;  dividend        2   29[BANK0 ] int 
 19647 ;;  divisor         2   31[BANK0 ] int 
 19648 ;; Auto vars:     Size  Location     Type
 19649 ;;  sign            1   34[BANK0 ] unsigned char 
 19650 ;;  counter         1   33[BANK0 ] unsigned char 
 19651 ;; Return value:  Size  Location     Type
 19652 ;;                  2   29[BANK0 ] int 
 19653 ;; Registers used:
 19654 ;;		wreg, status,2, status,0
 19655 ;; Tracked objects:
 19656 ;;		On entry : 0/0
 19657 ;;		On exit  : 0/0
 19658 ;;		Unchanged: 0/0
 19659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19660 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19661 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19663 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19664 ;;Total ram usage:        6 bytes
 19665 ;; Hardware stack levels used:    1
 19666 ;; Hardware stack levels required when called:   11
 19667 ;; This function calls:
 19668 ;;		Nothing
 19669 ;; This function is called by:
 19670 ;;		_Rtcc_SetRtccValue
 19671 ;;		_Rtcc_SetRtccAlarm
 19672 ;; This function uses a non-reentrant model
 19673 ;;
 19674                           
 19675                           	psect	text81
 19676  00514C                     __ptext81:
 19677                           	opt stack 0
 19678  00514C                     ___awmod:
 19679                           	opt stack 14
 19680                           
 19681                           ; BSR set to: 0
 19682                           ;incstack = 0
 19683  00514C  0E00               	movlw	0
 19684  00514E  0100               	movlb	0	; () banked
 19685  005150  6F82               	movwf	___awmod@sign& (0+255),b
 19686                           
 19687                           ; BSR set to: 0
 19688  005152  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19689  005154  D006               	goto	l3033
 19690                           
 19691                           ; BSR set to: 0
 19692  005156  6D7D               	negf	___awmod@dividend& (0+255),b
 19693  005158  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19694  00515A  B0D8               	btfsc	status,0,c
 19695  00515C  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19696                           
 19697                           ; BSR set to: 0
 19698  00515E  0E01               	movlw	1
 19699  005160  6F82               	movwf	___awmod@sign& (0+255),b
 19700  005162                     l3033:
 19701                           
 19702                           ; BSR set to: 0
 19703                           
 19704                           ; BSR set to: 0
 19705  005162  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19706  005164  D004               	goto	l3034
 19707                           
 19708                           ; BSR set to: 0
 19709  005166  6D7F               	negf	___awmod@divisor& (0+255),b
 19710  005168  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19711  00516A  B0D8               	btfsc	status,0,c
 19712  00516C  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19713  00516E                     l3034:
 19714                           
 19715                           ; BSR set to: 0
 19716                           
 19717                           ; BSR set to: 0
 19718  00516E  517F               	movf	___awmod@divisor& (0+255),w,b
 19719  005170  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19720  005172  B4D8               	btfsc	status,2,c
 19721  005174  D018               	goto	l3041
 19722                           
 19723                           ; BSR set to: 0
 19724  005176  0E01               	movlw	1
 19725  005178  6F81               	movwf	___awmod@counter& (0+255),b
 19726  00517A  D004               	goto	l3036
 19727  00517C                     
 19728                           ; BSR set to: 0
 19729                           
 19730                           ; BSR set to: 0
 19731  00517C  90D8               	bcf	status,0,c
 19732  00517E  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19733  005180  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19734  005182  2B81               	incf	___awmod@counter& (0+255),f,b
 19735  005184                     l3036:
 19736                           
 19737                           ; BSR set to: 0
 19738                           
 19739                           ; BSR set to: 0
 19740  005184  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19741  005186  D7FA               	goto	l3037
 19742  005188                     u13110:
 19743                           
 19744                           ; BSR set to: 0
 19745                           
 19746                           ; BSR set to: 0
 19747                           
 19748                           ; BSR set to: 0
 19749  005188  517F               	movf	___awmod@divisor& (0+255),w,b
 19750  00518A  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19751  00518C  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19752  00518E  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19753  005190  A0D8               	btfss	status,0,c
 19754  005192  D004               	goto	l3040
 19755                           
 19756                           ; BSR set to: 0
 19757  005194  517F               	movf	___awmod@divisor& (0+255),w,b
 19758  005196  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19759  005198  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19760  00519A  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19761  00519C                     l3040:
 19762                           
 19763                           ; BSR set to: 0
 19764                           
 19765                           ; BSR set to: 0
 19766  00519C  90D8               	bcf	status,0,c
 19767  00519E  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19768  0051A0  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19769                           
 19770                           ; BSR set to: 0
 19771  0051A2  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19772  0051A4  D7F1               	goto	u13110
 19773  0051A6                     l3041:
 19774                           
 19775                           ; BSR set to: 0
 19776                           
 19777                           ; BSR set to: 0
 19778                           
 19779                           ; BSR set to: 0
 19780  0051A6  5182               	movf	___awmod@sign& (0+255),w,b
 19781  0051A8  B4D8               	btfsc	status,2,c
 19782  0051AA  D004               	goto	l3042
 19783                           
 19784                           ; BSR set to: 0
 19785  0051AC  6D7D               	negf	___awmod@dividend& (0+255),b
 19786  0051AE  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19787  0051B0  B0D8               	btfsc	status,0,c
 19788  0051B2  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19789  0051B4                     l3042:
 19790                           
 19791                           ; BSR set to: 0
 19792                           
 19793                           ; BSR set to: 0
 19794  0051B4  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19795  0051B8  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19796  0051BC  0012               	return	
 19797  0051BE                     __end_of___awmod:
 19798                           	opt stack 0
 19799                           tosu	equ	0xFFF
 19800                           tosh	equ	0xFFE
 19801                           tosl	equ	0xFFD
 19802                           pclath	equ	0xFFA
 19803                           tblptru	equ	0xFF8
 19804                           tblptrh	equ	0xFF7
 19805                           tblptrl	equ	0xFF6
 19806                           tablat	equ	0xFF5
 19807                           prodh	equ	0xFF4
 19808                           prodl	equ	0xFF3
 19809                           intcon	equ	0xFF2
 19810                           intcon2	equ	0xFF1
 19811                           intcon3	equ	0xFF0
 19812                           indf0	equ	0xFEF
 19813                           postinc0	equ	0xFEE
 19814                           plusw0	equ	0xFEB
 19815                           fsr0h	equ	0xFEA
 19816                           fsr0l	equ	0xFE9
 19817                           wreg	equ	0xFE8
 19818                           indf1	equ	0xFE7
 19819                           postinc1	equ	0xFE6
 19820                           postdec1	equ	0xFE5
 19821                           fsr1h	equ	0xFE2
 19822                           fsr1l	equ	0xFE1
 19823                           indf2	equ	0xFDF
 19824                           postinc2	equ	0xFDE
 19825                           postdec2	equ	0xFDD
 19826                           plusw2	equ	0xFDB
 19827                           fsr2h	equ	0xFDA
 19828                           fsr2l	equ	0xFD9
 19829                           status	equ	0xFD8
 19830                           
 19831 ;; *************** function ___awdiv *****************
 19832 ;; Defined at:
 19833 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19834 ;; Parameters:    Size  Location     Type
 19835 ;;  dividend        2   29[BANK0 ] int 
 19836 ;;  divisor         2   31[BANK0 ] int 
 19837 ;; Auto vars:     Size  Location     Type
 19838 ;;  quotient        2   35[BANK0 ] int 
 19839 ;;  sign            1   34[BANK0 ] unsigned char 
 19840 ;;  counter         1   33[BANK0 ] unsigned char 
 19841 ;; Return value:  Size  Location     Type
 19842 ;;                  2   29[BANK0 ] int 
 19843 ;; Registers used:
 19844 ;;		wreg, status,2, status,0
 19845 ;; Tracked objects:
 19846 ;;		On entry : 0/0
 19847 ;;		On exit  : 0/0
 19848 ;;		Unchanged: 0/0
 19849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19850 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19851 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19853 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19854 ;;Total ram usage:        8 bytes
 19855 ;; Hardware stack levels used:    1
 19856 ;; Hardware stack levels required when called:   11
 19857 ;; This function calls:
 19858 ;;		Nothing
 19859 ;; This function is called by:
 19860 ;;		_Rtcc_SetRtccValue
 19861 ;;		_Rtcc_SetRtccAlarm
 19862 ;; This function uses a non-reentrant model
 19863 ;;
 19864                           
 19865                           	psect	text82
 19866  004FC0                     __ptext82:
 19867                           	opt stack 0
 19868  004FC0                     ___awdiv:
 19869                           	opt stack 14
 19870                           
 19871                           ; BSR set to: 0
 19872                           ;incstack = 0
 19873  004FC0  0E00               	movlw	0
 19874  004FC2  0100               	movlb	0	; () banked
 19875  004FC4  6F82               	movwf	___awdiv@sign& (0+255),b
 19876                           
 19877                           ; BSR set to: 0
 19878  004FC6  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19879  004FC8  D006               	goto	l3020
 19880                           
 19881                           ; BSR set to: 0
 19882  004FCA  6D7F               	negf	___awdiv@divisor& (0+255),b
 19883  004FCC  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19884  004FCE  B0D8               	btfsc	status,0,c
 19885  004FD0  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19886                           
 19887                           ; BSR set to: 0
 19888  004FD2  0E01               	movlw	1
 19889  004FD4  6F82               	movwf	___awdiv@sign& (0+255),b
 19890  004FD6                     l3020:
 19891                           
 19892                           ; BSR set to: 0
 19893                           
 19894                           ; BSR set to: 0
 19895  004FD6  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19896  004FD8  D006               	goto	l3021
 19897                           
 19898                           ; BSR set to: 0
 19899  004FDA  6D7D               	negf	___awdiv@dividend& (0+255),b
 19900  004FDC  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19901  004FDE  B0D8               	btfsc	status,0,c
 19902  004FE0  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19903                           
 19904                           ; BSR set to: 0
 19905  004FE2  0E01               	movlw	1
 19906  004FE4  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19907  004FE6                     l3021:
 19908                           
 19909                           ; BSR set to: 0
 19910                           
 19911                           ; BSR set to: 0
 19912  004FE6  0E00               	movlw	0
 19913  004FE8  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19914  004FEA  0E00               	movlw	0
 19915  004FEC  6F83               	movwf	___awdiv@quotient& (0+255),b
 19916                           
 19917                           ; BSR set to: 0
 19918  004FEE  517F               	movf	___awdiv@divisor& (0+255),w,b
 19919  004FF0  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19920  004FF2  B4D8               	btfsc	status,2,c
 19921  004FF4  D01C               	goto	l3028
 19922                           
 19923                           ; BSR set to: 0
 19924  004FF6  0E01               	movlw	1
 19925  004FF8  6F81               	movwf	___awdiv@counter& (0+255),b
 19926  004FFA  D004               	goto	l3023
 19927  004FFC                     
 19928                           ; BSR set to: 0
 19929                           
 19930                           ; BSR set to: 0
 19931  004FFC  90D8               	bcf	status,0,c
 19932  004FFE  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19933  005000  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19934  005002  2B81               	incf	___awdiv@counter& (0+255),f,b
 19935  005004                     l3023:
 19936                           
 19937                           ; BSR set to: 0
 19938                           
 19939                           ; BSR set to: 0
 19940  005004  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19941  005006  D7FA               	goto	l3024
 19942  005008                     u13050:
 19943                           
 19944                           ; BSR set to: 0
 19945                           
 19946                           ; BSR set to: 0
 19947                           
 19948                           ; BSR set to: 0
 19949  005008  90D8               	bcf	status,0,c
 19950  00500A  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19951  00500C  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19952                           
 19953                           ; BSR set to: 0
 19954  00500E  517F               	movf	___awdiv@divisor& (0+255),w,b
 19955  005010  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19956  005012  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19957  005014  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19958  005016  A0D8               	btfss	status,0,c
 19959  005018  D005               	goto	l3027
 19960                           
 19961                           ; BSR set to: 0
 19962  00501A  517F               	movf	___awdiv@divisor& (0+255),w,b
 19963  00501C  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19964  00501E  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19965  005020  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19966                           
 19967                           ; BSR set to: 0
 19968  005022  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19969  005024                     l3027:
 19970                           
 19971                           ; BSR set to: 0
 19972                           
 19973                           ; BSR set to: 0
 19974  005024  90D8               	bcf	status,0,c
 19975  005026  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19976  005028  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19977                           
 19978                           ; BSR set to: 0
 19979  00502A  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19980  00502C  D7ED               	goto	u13050
 19981  00502E                     l3028:
 19982                           
 19983                           ; BSR set to: 0
 19984                           
 19985                           ; BSR set to: 0
 19986                           
 19987                           ; BSR set to: 0
 19988  00502E  5182               	movf	___awdiv@sign& (0+255),w,b
 19989  005030  B4D8               	btfsc	status,2,c
 19990  005032  D004               	goto	l3029
 19991                           
 19992                           ; BSR set to: 0
 19993  005034  6D83               	negf	___awdiv@quotient& (0+255),b
 19994  005036  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19995  005038  B0D8               	btfsc	status,0,c
 19996  00503A  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19997  00503C                     l3029:
 19998                           
 19999                           ; BSR set to: 0
 20000                           
 20001                           ; BSR set to: 0
 20002  00503C  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 20003  005040  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 20004  005044  0012               	return	
 20005  005046                     __end_of___awdiv:
 20006                           	opt stack 0
 20007                           tosu	equ	0xFFF
 20008                           tosh	equ	0xFFE
 20009                           tosl	equ	0xFFD
 20010                           pclath	equ	0xFFA
 20011                           tblptru	equ	0xFF8
 20012                           tblptrh	equ	0xFF7
 20013                           tblptrl	equ	0xFF6
 20014                           tablat	equ	0xFF5
 20015                           prodh	equ	0xFF4
 20016                           prodl	equ	0xFF3
 20017                           intcon	equ	0xFF2
 20018                           intcon2	equ	0xFF1
 20019                           intcon3	equ	0xFF0
 20020                           indf0	equ	0xFEF
 20021                           postinc0	equ	0xFEE
 20022                           plusw0	equ	0xFEB
 20023                           fsr0h	equ	0xFEA
 20024                           fsr0l	equ	0xFE9
 20025                           wreg	equ	0xFE8
 20026                           indf1	equ	0xFE7
 20027                           postinc1	equ	0xFE6
 20028                           postdec1	equ	0xFE5
 20029                           fsr1h	equ	0xFE2
 20030                           fsr1l	equ	0xFE1
 20031                           indf2	equ	0xFDF
 20032                           postinc2	equ	0xFDE
 20033                           postdec2	equ	0xFDD
 20034                           plusw2	equ	0xFDB
 20035                           fsr2h	equ	0xFDA
 20036                           fsr2l	equ	0xFD9
 20037                           status	equ	0xFD8
 20038                           
 20039 ;; *************** function _Rtcc_LockRtc *****************
 20040 ;; Defined at:
 20041 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20042 ;; Parameters:    Size  Location     Type
 20043 ;;		None
 20044 ;; Auto vars:     Size  Location     Type
 20045 ;;		None
 20046 ;; Return value:  Size  Location     Type
 20047 ;;                  1    wreg      void 
 20048 ;; Registers used:
 20049 ;;		None
 20050 ;; Tracked objects:
 20051 ;;		On entry : 0/0
 20052 ;;		On exit  : 0/0
 20053 ;;		Unchanged: 0/0
 20054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20059 ;;Total ram usage:        0 bytes
 20060 ;; Hardware stack levels used:    1
 20061 ;; Hardware stack levels required when called:   11
 20062 ;; This function calls:
 20063 ;;		Nothing
 20064 ;; This function is called by:
 20065 ;;		_Rtcm_MainTask
 20066 ;;		_Rtcm_SetRtccDate
 20067 ;;		_Rtcm_SetRtccAlarm
 20068 ;; This function uses a non-reentrant model
 20069 ;;
 20070                           
 20071                           	psect	text83
 20072  006820                     __ptext83:
 20073                           	opt stack 0
 20074  006820                     _Rtcc_LockRtc:
 20075                           	opt stack 15
 20076                           
 20077                           ; BSR set to: 0
 20078                           ;incstack = 0
 20079  006820  010F               	movlb	15	;# 
 20080  006822  0E55               	movlw	85	;# 
 20081  006824  6EA7               	movwf	4007,c	;# 
 20082  006826  0EAA               	movlw	170	;# 
 20083  006828  6EA7               	movwf	4007,c	;# 
 20084                           
 20085                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 20086  00682A  010F               	movlb	15	; () banked
 20087  00682C  9B3F               	bcf	63,5,b	;volatile
 20088                           
 20089                           ; BSR set to: 15
 20090  00682E  0012               	return		;funcret
 20091  006830                     __end_of_Rtcc_LockRtc:
 20092                           	opt stack 0
 20093                           tosu	equ	0xFFF
 20094                           tosh	equ	0xFFE
 20095                           tosl	equ	0xFFD
 20096                           pclath	equ	0xFFA
 20097                           tblptru	equ	0xFF8
 20098                           tblptrh	equ	0xFF7
 20099                           tblptrl	equ	0xFF6
 20100                           tablat	equ	0xFF5
 20101                           prodh	equ	0xFF4
 20102                           prodl	equ	0xFF3
 20103                           intcon	equ	0xFF2
 20104                           intcon2	equ	0xFF1
 20105                           intcon3	equ	0xFF0
 20106                           indf0	equ	0xFEF
 20107                           postinc0	equ	0xFEE
 20108                           plusw0	equ	0xFEB
 20109                           fsr0h	equ	0xFEA
 20110                           fsr0l	equ	0xFE9
 20111                           wreg	equ	0xFE8
 20112                           indf1	equ	0xFE7
 20113                           postinc1	equ	0xFE6
 20114                           postdec1	equ	0xFE5
 20115                           fsr1h	equ	0xFE2
 20116                           fsr1l	equ	0xFE1
 20117                           indf2	equ	0xFDF
 20118                           postinc2	equ	0xFDE
 20119                           postdec2	equ	0xFDD
 20120                           plusw2	equ	0xFDB
 20121                           fsr2h	equ	0xFDA
 20122                           fsr2l	equ	0xFD9
 20123                           status	equ	0xFD8
 20124                           
 20125 ;; *************** function _Rtcm_GetRtccDate *****************
 20126 ;; Defined at:
 20127 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 20128 ;; Parameters:    Size  Location     Type
 20129 ;;		None
 20130 ;; Auto vars:     Size  Location     Type
 20131 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 20132 ;; Return value:  Size  Location     Type
 20133 ;;                  8   33[BANK0 ] struct _RtccDateType
 20134 ;; Registers used:
 20135 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20136 ;; Tracked objects:
 20137 ;;		On entry : 0/0
 20138 ;;		On exit  : 0/0
 20139 ;;		Unchanged: 0/0
 20140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20141 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20142 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20143 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20144 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20145 ;;Total ram usage:       17 bytes
 20146 ;; Hardware stack levels used:    1
 20147 ;; Hardware stack levels required when called:   12
 20148 ;; This function calls:
 20149 ;;		_Rtcc_GetRtccValue
 20150 ;; This function is called by:
 20151 ;;		_Rtcm_MainTask
 20152 ;; This function uses a non-reentrant model
 20153 ;;
 20154                           
 20155                           	psect	text84
 20156  0054AE                     __ptext84:
 20157                           	opt stack 0
 20158  0054AE                     _Rtcm_GetRtccDate:
 20159                           	opt stack 15
 20160                           
 20161                           ;rtcm.c: 204: RtccDateType LocalDate;
 20162                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 20163                           
 20164                           ; BSR set to: 15
 20165                           ;incstack = 0
 20166  0054AE  0E00               	movlw	0
 20167  0054B0  EC34  F026         	call	_Rtcc_GetRtccValue
 20168  0054B4  0100               	movlb	0	; () banked
 20169  0054B6  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 20170  0054B8  0ED0               	movlw	208
 20171  0054BA  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 20172  0054BC  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 20173  0054BE  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 20174  0054C0  0E07               	movlw	7
 20175  0054C2  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 20176                           
 20177                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 20178  0054C4  0E01               	movlw	1
 20179  0054C6  EC34  F026         	call	_Rtcc_GetRtccValue
 20180  0054CA  0100               	movlb	0	; () banked
 20181  0054CC  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 20182                           
 20183                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 20184  0054CE  0E02               	movlw	2
 20185  0054D0  EC34  F026         	call	_Rtcc_GetRtccValue
 20186  0054D4  0100               	movlb	0	; () banked
 20187  0054D6  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 20188                           
 20189                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 20190  0054D8  0E03               	movlw	3
 20191  0054DA  EC34  F026         	call	_Rtcc_GetRtccValue
 20192  0054DE  0100               	movlb	0	; () banked
 20193  0054E0  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 20194                           
 20195                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 20196  0054E2  0E04               	movlw	4
 20197  0054E4  EC34  F026         	call	_Rtcc_GetRtccValue
 20198  0054E8  0100               	movlb	0	; () banked
 20199  0054EA  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 20200                           
 20201                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 20202  0054EC  0E05               	movlw	5
 20203  0054EE  EC34  F026         	call	_Rtcc_GetRtccValue
 20204  0054F2  0100               	movlb	0	; () banked
 20205  0054F4  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 20206                           
 20207                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 20208  0054F6  0E06               	movlw	6
 20209  0054F8  EC34  F026         	call	_Rtcc_GetRtccValue
 20210  0054FC  0100               	movlb	0	; () banked
 20211  0054FE  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 20212                           
 20213                           ; BSR set to: 0
 20214                           ;rtcm.c: 216: return LocalDate;
 20215  005500  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 20216  005504  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 20217  005508  0E07               	movlw	7
 20218  00550A                     u15391:
 20219  00550A  CFDB FFEB          	movff	plusw2,plusw0
 20220  00550E  06E8               	decf	wreg,f,c
 20221  005510  E2FC               	bc	u15391
 20222  005512  0012               	return	
 20223  005514                     __end_of_Rtcm_GetRtccDate:
 20224                           	opt stack 0
 20225                           tosu	equ	0xFFF
 20226                           tosh	equ	0xFFE
 20227                           tosl	equ	0xFFD
 20228                           pclath	equ	0xFFA
 20229                           tblptru	equ	0xFF8
 20230                           tblptrh	equ	0xFF7
 20231                           tblptrl	equ	0xFF6
 20232                           tablat	equ	0xFF5
 20233                           prodh	equ	0xFF4
 20234                           prodl	equ	0xFF3
 20235                           intcon	equ	0xFF2
 20236                           intcon2	equ	0xFF1
 20237                           intcon3	equ	0xFF0
 20238                           indf0	equ	0xFEF
 20239                           postinc0	equ	0xFEE
 20240                           plusw0	equ	0xFEB
 20241                           fsr0h	equ	0xFEA
 20242                           fsr0l	equ	0xFE9
 20243                           wreg	equ	0xFE8
 20244                           indf1	equ	0xFE7
 20245                           postinc1	equ	0xFE6
 20246                           postdec1	equ	0xFE5
 20247                           fsr1h	equ	0xFE2
 20248                           fsr1l	equ	0xFE1
 20249                           indf2	equ	0xFDF
 20250                           postinc2	equ	0xFDE
 20251                           postdec2	equ	0xFDD
 20252                           plusw2	equ	0xFDB
 20253                           fsr2h	equ	0xFDA
 20254                           fsr2l	equ	0xFD9
 20255                           status	equ	0xFD8
 20256                           
 20257 ;; *************** function _Rtcc_GetRtccValue *****************
 20258 ;; Defined at:
 20259 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20260 ;; Parameters:    Size  Location     Type
 20261 ;;  RtccPtrVal      1    wreg     enum E7757
 20262 ;; Auto vars:     Size  Location     Type
 20263 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 20264 ;;  RegValue        1   32[BANK0 ] unsigned char 
 20265 ;;  RetValue        1   31[BANK0 ] unsigned char 
 20266 ;; Return value:  Size  Location     Type
 20267 ;;                  1    wreg      unsigned char 
 20268 ;; Registers used:
 20269 ;;		wreg, status,2, status,0, prodl, prodh
 20270 ;; Tracked objects:
 20271 ;;		On entry : 0/0
 20272 ;;		On exit  : 0/0
 20273 ;;		Unchanged: 0/0
 20274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20276 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20277 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20278 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20279 ;;Total ram usage:        4 bytes
 20280 ;; Hardware stack levels used:    1
 20281 ;; Hardware stack levels required when called:   11
 20282 ;; This function calls:
 20283 ;;		Nothing
 20284 ;; This function is called by:
 20285 ;;		_Rtcm_GetRtccDate
 20286 ;; This function uses a non-reentrant model
 20287 ;;
 20288                           
 20289                           	psect	text85
 20290  004C68                     __ptext85:
 20291                           	opt stack 0
 20292  004C68                     _Rtcc_GetRtccValue:
 20293                           	opt stack 15
 20294                           
 20295                           ; BSR set to: 0
 20296                           ;incstack = 0
 20297                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20298  004C68  0100               	movlb	0	; () banked
 20299  004C6A  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20300                           
 20301                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20302                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20303                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20304  004C6C  D02D               	goto	l416
 20305  004C6E                     l417:
 20306                           
 20307                           ; BSR set to: 0
 20308                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20309  004C6E  010F               	movlb	15	; () banked
 20310  004C70  833F               	bsf	63,1,b	;volatile
 20311  004C72                     
 20312                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20313  004C72  813F               	bsf	63,0,b	;volatile
 20314  004C74  D01C               	goto	L18
 20315  004C76                     l419:
 20316                           
 20317                           ; BSR set to: 0
 20318                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20319  004C76  010F               	movlb	15	; () banked
 20320  004C78  833F               	bsf	63,1,b	;volatile
 20321  004C7A  D01E               	goto	L19
 20322  004C7C                     l420:
 20323                           
 20324                           ; BSR set to: 0
 20325                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20326  004C7C  010F               	movlb	15	; () banked
 20327  004C7E  833F               	bsf	63,1,b	;volatile
 20328  004C80  D021               	goto	L22
 20329  004C82                     l14070:
 20330                           
 20331                           ; BSR set to: 15
 20332                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20333  004C82  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20334  004C86  0E0F               	movlw	15
 20335  004C88  0100               	movlb	0	; () banked
 20336  004C8A  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20337  004C8C  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20338  004C8E  0B0F               	andlw	15
 20339  004C90  0B0F               	andlw	15
 20340  004C92  0D0A               	mullw	10
 20341  004C94  50F3               	movf	prodl,w,c
 20342  004C96  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20343  004C98  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20344                           
 20345                           ;rtcc_drv.c: 241: break;
 20346  004C9A  D02D               	goto	l418
 20347  004C9C                     l421:
 20348                           
 20349                           ; BSR set to: 0
 20350                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20351  004C9C  010F               	movlb	15	; () banked
 20352  004C9E  933F               	bcf	63,1,b	;volatile
 20353                           
 20354                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20355  004CA0  813F               	bsf	63,0,b	;volatile
 20356                           
 20357                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20358  004CA2  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20359                           
 20360                           ;rtcc_drv.c: 249: break;
 20361  004CA6  D027               	goto	l418
 20362  004CA8                     l422:
 20363                           
 20364                           ; BSR set to: 0
 20365                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20366  004CA8  010F               	movlb	15	; () banked
 20367  004CAA  933F               	bcf	63,1,b	;volatile
 20368  004CAC  D7E2               	goto	L20
 20369  004CAE                     L18:
 20370                           
 20371                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20372  004CAE  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20373  004CB2  D7E7               	goto	l14070
 20374  004CB4                     l423:
 20375                           
 20376                           ; BSR set to: 0
 20377                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20378  004CB4  010F               	movlb	15	; () banked
 20379  004CB6  933F               	bcf	63,1,b	;volatile
 20380  004CB8                     L19:
 20381                           
 20382                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20383  004CB8  913F               	bcf	63,0,b	;volatile
 20384                           
 20385                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20386  004CBA  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20387  004CBE  D7E1               	goto	l14070
 20388  004CC0                     l424:
 20389                           
 20390                           ; BSR set to: 0
 20391                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20392  004CC0  010F               	movlb	15	; () banked
 20393  004CC2  933F               	bcf	63,1,b	;volatile
 20394  004CC4                     L22:
 20395                           
 20396                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20397  004CC4  913F               	bcf	63,0,b	;volatile
 20398  004CC6  D7F3               	goto	L18
 20399  004CC8                     l416:
 20400                           
 20401                           ; BSR set to: 0
 20402  004CC8  0100               	movlb	0	; () banked
 20403  004CCA  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20404                           
 20405                           ; Switch size 1, requested type "space"
 20406                           ; Number of cases is 7, Range of values is 0 to 6
 20407                           ; switch strategies available:
 20408                           ; Name         Instructions Cycles
 20409                           ; simple_byte           22    12 (average)
 20410                           ;	Chosen strategy is simple_byte
 20411  004CCC  0A00               	xorlw	0	; case 0
 20412  004CCE  B4D8               	btfsc	status,2,c
 20413  004CD0  D7CE               	goto	l417
 20414  004CD2  0A01               	xorlw	1	; case 1
 20415  004CD4  B4D8               	btfsc	status,2,c
 20416  004CD6  D7CF               	goto	l419
 20417  004CD8  0A03               	xorlw	3	; case 2
 20418  004CDA  B4D8               	btfsc	status,2,c
 20419  004CDC  D7CF               	goto	l420
 20420  004CDE  0A01               	xorlw	1	; case 3
 20421  004CE0  B4D8               	btfsc	status,2,c
 20422  004CE2  D7DC               	goto	l421
 20423  004CE4  0A07               	xorlw	7	; case 4
 20424  004CE6  B4D8               	btfsc	status,2,c
 20425  004CE8  D7DF               	goto	l422
 20426  004CEA  0A01               	xorlw	1	; case 5
 20427  004CEC  B4D8               	btfsc	status,2,c
 20428  004CEE  D7E2               	goto	l423
 20429  004CF0  0A03               	xorlw	3	; case 6
 20430  004CF2  B4D8               	btfsc	status,2,c
 20431  004CF4  D7E5               	goto	l424
 20432  004CF6                     l418:
 20433                           
 20434                           ;rtcc_drv.c: 286: return RetValue;
 20435                           
 20436                           ; BSR set to: 0
 20437  004CF6  0100               	movlb	0	; () banked
 20438  004CF8  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20439  004CFA  0012               	return	
 20440  004CFC                     __end_of_Rtcc_GetRtccValue:
 20441                           	opt stack 0
 20442                           tosu	equ	0xFFF
 20443                           tosh	equ	0xFFE
 20444                           tosl	equ	0xFFD
 20445                           pclath	equ	0xFFA
 20446                           tblptru	equ	0xFF8
 20447                           tblptrh	equ	0xFF7
 20448                           tblptrl	equ	0xFF6
 20449                           tablat	equ	0xFF5
 20450                           prodh	equ	0xFF4
 20451                           prodl	equ	0xFF3
 20452                           intcon	equ	0xFF2
 20453                           intcon2	equ	0xFF1
 20454                           intcon3	equ	0xFF0
 20455                           indf0	equ	0xFEF
 20456                           postinc0	equ	0xFEE
 20457                           plusw0	equ	0xFEB
 20458                           fsr0h	equ	0xFEA
 20459                           fsr0l	equ	0xFE9
 20460                           wreg	equ	0xFE8
 20461                           indf1	equ	0xFE7
 20462                           postinc1	equ	0xFE6
 20463                           postdec1	equ	0xFE5
 20464                           fsr1h	equ	0xFE2
 20465                           fsr1l	equ	0xFE1
 20466                           indf2	equ	0xFDF
 20467                           postinc2	equ	0xFDE
 20468                           postdec2	equ	0xFDD
 20469                           plusw2	equ	0xFDB
 20470                           fsr2h	equ	0xFDA
 20471                           fsr2l	equ	0xFD9
 20472                           status	equ	0xFD8
 20473                           
 20474 ;; *************** function _Rtcc_SetRtcStatus *****************
 20475 ;; Defined at:
 20476 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20477 ;; Parameters:    Size  Location     Type
 20478 ;;  Status          1    wreg     unsigned char 
 20479 ;; Auto vars:     Size  Location     Type
 20480 ;;  Status          1   29[BANK0 ] unsigned char 
 20481 ;; Return value:  Size  Location     Type
 20482 ;;                  1    wreg      void 
 20483 ;; Registers used:
 20484 ;;		wreg
 20485 ;; Tracked objects:
 20486 ;;		On entry : 0/0
 20487 ;;		On exit  : 0/0
 20488 ;;		Unchanged: 0/0
 20489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20493 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20494 ;;Total ram usage:        1 bytes
 20495 ;; Hardware stack levels used:    1
 20496 ;; Hardware stack levels required when called:   11
 20497 ;; This function calls:
 20498 ;;		Nothing
 20499 ;; This function is called by:
 20500 ;;		_Rtcm_MainTask
 20501 ;; This function uses a non-reentrant model
 20502 ;;
 20503                           
 20504                           	psect	text86
 20505  00676E                     __ptext86:
 20506                           	opt stack 0
 20507  00676E                     _Rtcc_SetRtcStatus:
 20508                           	opt stack 16
 20509                           
 20510                           ; BSR set to: 0
 20511                           ;incstack = 0
 20512                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20513  00676E  0100               	movlb	0	; () banked
 20514  006770  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20515                           
 20516                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20517  006772  0100               	movlb	0	; () banked
 20518  006774  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20519  006776  D003               	bra	u14305
 20520  006778  010F               	movlb	15	; () banked
 20521  00677A  9F3F               	bcf	63,7,b	;volatile
 20522  00677C  D002               	bra	u14306
 20523  00677E                     u14305:
 20524  00677E  010F               	movlb	15	; () banked
 20525  006780  8F3F               	bsf	63,7,b	;volatile
 20526  006782                     u14306:
 20527                           
 20528                           ; BSR set to: 15
 20529  006782  0012               	return		;funcret
 20530  006784                     __end_of_Rtcc_SetRtcStatus:
 20531                           	opt stack 0
 20532                           tosu	equ	0xFFF
 20533                           tosh	equ	0xFFE
 20534                           tosl	equ	0xFFD
 20535                           pclath	equ	0xFFA
 20536                           tblptru	equ	0xFF8
 20537                           tblptrh	equ	0xFF7
 20538                           tblptrl	equ	0xFF6
 20539                           tablat	equ	0xFF5
 20540                           prodh	equ	0xFF4
 20541                           prodl	equ	0xFF3
 20542                           intcon	equ	0xFF2
 20543                           intcon2	equ	0xFF1
 20544                           intcon3	equ	0xFF0
 20545                           indf0	equ	0xFEF
 20546                           postinc0	equ	0xFEE
 20547                           plusw0	equ	0xFEB
 20548                           fsr0h	equ	0xFEA
 20549                           fsr0l	equ	0xFE9
 20550                           wreg	equ	0xFE8
 20551                           indf1	equ	0xFE7
 20552                           postinc1	equ	0xFE6
 20553                           postdec1	equ	0xFE5
 20554                           fsr1h	equ	0xFE2
 20555                           fsr1l	equ	0xFE1
 20556                           indf2	equ	0xFDF
 20557                           postinc2	equ	0xFDE
 20558                           postdec2	equ	0xFDD
 20559                           plusw2	equ	0xFDB
 20560                           fsr2h	equ	0xFDA
 20561                           fsr2l	equ	0xFD9
 20562                           status	equ	0xFD8
 20563                           
 20564 ;; *************** function _Rtcc_RtcConfig *****************
 20565 ;; Defined at:
 20566 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20567 ;; Parameters:    Size  Location     Type
 20568 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20569 ;;		 -> RtcConfig(4), 
 20570 ;; Auto vars:     Size  Location     Type
 20571 ;;		None
 20572 ;; Return value:  Size  Location     Type
 20573 ;;                  1    wreg      void 
 20574 ;; Registers used:
 20575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20576 ;; Tracked objects:
 20577 ;;		On entry : 0/0
 20578 ;;		On exit  : 0/0
 20579 ;;		Unchanged: 0/0
 20580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20581 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20583 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20584 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20585 ;;Total ram usage:        3 bytes
 20586 ;; Hardware stack levels used:    1
 20587 ;; Hardware stack levels required when called:   12
 20588 ;; This function calls:
 20589 ;;		_RtccIrqInit
 20590 ;; This function is called by:
 20591 ;;		_Rtcm_MainTask
 20592 ;; This function uses a non-reentrant model
 20593 ;;
 20594                           
 20595                           	psect	text87
 20596  004834                     __ptext87:
 20597                           	opt stack 0
 20598  004834                     _Rtcc_RtcConfig:
 20599                           	opt stack 15
 20600                           
 20601                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20602                           
 20603                           ; BSR set to: 15
 20604                           ;incstack = 0
 20605  004834  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20606  004838  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20607  00483C  50DF               	movf	indf2,w,c
 20608  00483E  0100               	movlb	0	; () banked
 20609  004840  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20610  004842  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20611  004844  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20612  004846  010F               	movlb	15	; () banked
 20613  004848  513F               	movf	63,w,b	;volatile
 20614  00484A  0100               	movlb	0	; () banked
 20615  00484C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20616  00484E  0BFB               	andlw	-5
 20617  004850  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20618  004852  010F               	movlb	15	; () banked
 20619  004854  6F3F               	movwf	63,b	;volatile
 20620                           
 20621                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20622  004856  0100               	movlb	0	; () banked
 20623  004858  EE20 F001          	lfsr	2,1
 20624  00485C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20625  00485E  26D9               	addwf	fsr2l,f,c
 20626  004860  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20627  004862  22DA               	addwfc	fsr2h,f,c
 20628  004864  50DF               	movf	indf2,w,c
 20629  004866  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20630  004868  0E01               	movlw	1
 20631  00486A  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20632  00486C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20633  00486E  010F               	movlb	15	; () banked
 20634  004870  513C               	movf	60,w,b	;volatile
 20635  004872  0100               	movlb	0	; () banked
 20636  004874  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20637  004876  0BFD               	andlw	-3
 20638  004878  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20639  00487A  010F               	movlb	15	; () banked
 20640  00487C  6F3C               	movwf	60,b	;volatile
 20641                           
 20642                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20643  00487E  0100               	movlb	0	; () banked
 20644  004880  EE20 F001          	lfsr	2,1
 20645  004884  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20646  004886  26D9               	addwf	fsr2l,f,c
 20647  004888  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20648  00488A  22DA               	addwfc	fsr2h,f,c
 20649  00488C  50DF               	movf	indf2,w,c
 20650  00488E  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20651  004890  90D8               	bcf	status,0,c
 20652  004892  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20653  004894  0E01               	movlw	1
 20654  004896  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20655  004898  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20656  00489A  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20657  00489C  010F               	movlb	15	; () banked
 20658  00489E  513C               	movf	60,w,b	;volatile
 20659  0048A0  0100               	movlb	0	; () banked
 20660  0048A2  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20661  0048A4  0BFB               	andlw	-5
 20662  0048A6  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20663  0048A8  010F               	movlb	15	; () banked
 20664  0048AA  6F3C               	movwf	60,b	;volatile
 20665                           
 20666                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20667  0048AC  0100               	movlb	0	; () banked
 20668  0048AE  EE20 F002          	lfsr	2,2
 20669  0048B2  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20670  0048B4  26D9               	addwf	fsr2l,f,c
 20671  0048B6  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20672  0048B8  22DA               	addwfc	fsr2h,f,c
 20673  0048BA  04DE               	decf	postinc2,w,c
 20674  0048BC  A4D8               	btfss	status,2,c
 20675  0048BE  0012               	return	
 20676                           
 20677                           ; BSR set to: 0
 20678                           ;rtcc_drv.c: 115: {
 20679                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20680  0048C0  EE20 F003          	lfsr	2,3
 20681  0048C4  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20682  0048C6  26D9               	addwf	fsr2l,f,c
 20683  0048C8  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20684  0048CA  22DA               	addwfc	fsr2h,f,c
 20685  0048CC  50DF               	movf	indf2,w,c
 20686  0048CE  ECC2  F033         	call	_RtccIrqInit
 20687  0048D2  0012               	return	
 20688  0048D4                     __end_of_Rtcc_RtcConfig:
 20689                           	opt stack 0
 20690                           tosu	equ	0xFFF
 20691                           tosh	equ	0xFFE
 20692                           tosl	equ	0xFFD
 20693                           pclath	equ	0xFFA
 20694                           tblptru	equ	0xFF8
 20695                           tblptrh	equ	0xFF7
 20696                           tblptrl	equ	0xFF6
 20697                           tablat	equ	0xFF5
 20698                           prodh	equ	0xFF4
 20699                           prodl	equ	0xFF3
 20700                           intcon	equ	0xFF2
 20701                           intcon2	equ	0xFF1
 20702                           intcon3	equ	0xFF0
 20703                           indf0	equ	0xFEF
 20704                           postinc0	equ	0xFEE
 20705                           plusw0	equ	0xFEB
 20706                           fsr0h	equ	0xFEA
 20707                           fsr0l	equ	0xFE9
 20708                           wreg	equ	0xFE8
 20709                           indf1	equ	0xFE7
 20710                           postinc1	equ	0xFE6
 20711                           postdec1	equ	0xFE5
 20712                           fsr1h	equ	0xFE2
 20713                           fsr1l	equ	0xFE1
 20714                           indf2	equ	0xFDF
 20715                           postinc2	equ	0xFDE
 20716                           postdec2	equ	0xFDD
 20717                           plusw2	equ	0xFDB
 20718                           fsr2h	equ	0xFDA
 20719                           fsr2l	equ	0xFD9
 20720                           status	equ	0xFD8
 20721                           
 20722 ;; *************** function _RtccIrqInit *****************
 20723 ;; Defined at:
 20724 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20725 ;; Parameters:    Size  Location     Type
 20726 ;;  Priority        1    wreg     enum E7716
 20727 ;; Auto vars:     Size  Location     Type
 20728 ;;  Priority        1   29[BANK0 ] enum E7716
 20729 ;; Return value:  Size  Location     Type
 20730 ;;                  1    wreg      void 
 20731 ;; Registers used:
 20732 ;;		wreg
 20733 ;; Tracked objects:
 20734 ;;		On entry : 0/0
 20735 ;;		On exit  : 0/0
 20736 ;;		Unchanged: 0/0
 20737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20741 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20742 ;;Total ram usage:        1 bytes
 20743 ;; Hardware stack levels used:    1
 20744 ;; Hardware stack levels required when called:   11
 20745 ;; This function calls:
 20746 ;;		Nothing
 20747 ;; This function is called by:
 20748 ;;		_Rtcc_RtcConfig
 20749 ;; This function uses a non-reentrant model
 20750 ;;
 20751                           
 20752                           	psect	text88
 20753  006784                     __ptext88:
 20754                           	opt stack 0
 20755  006784                     _RtccIrqInit:
 20756                           	opt stack 15
 20757                           
 20758                           ;incstack = 0
 20759                           ;RtccIrqInit@Priority stored from wreg
 20760  006784  0100               	movlb	0	; () banked
 20761  006786  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20762                           
 20763                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20764  006788  90A4               	bcf	4004,0,c	;volatile
 20765                           
 20766                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20767  00678A  0100               	movlb	0	; () banked
 20768  00678C  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20769  00678E  D002               	bra	u13265
 20770  006790  90A5               	bcf	4005,0,c	;volatile
 20771  006792  D001               	bra	u13266
 20772  006794                     u13265:
 20773  006794  80A5               	bsf	4005,0,c	;volatile
 20774  006796                     u13266:
 20775                           
 20776                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20777  006796  80A3               	bsf	4003,0,c	;volatile
 20778  006798  0012               	return		;funcret
 20779  00679A                     __end_of_RtccIrqInit:
 20780                           	opt stack 0
 20781                           tosu	equ	0xFFF
 20782                           tosh	equ	0xFFE
 20783                           tosl	equ	0xFFD
 20784                           pclath	equ	0xFFA
 20785                           tblptru	equ	0xFF8
 20786                           tblptrh	equ	0xFF7
 20787                           tblptrl	equ	0xFF6
 20788                           tablat	equ	0xFF5
 20789                           prodh	equ	0xFF4
 20790                           prodl	equ	0xFF3
 20791                           intcon	equ	0xFF2
 20792                           intcon2	equ	0xFF1
 20793                           intcon3	equ	0xFF0
 20794                           indf0	equ	0xFEF
 20795                           postinc0	equ	0xFEE
 20796                           plusw0	equ	0xFEB
 20797                           fsr0h	equ	0xFEA
 20798                           fsr0l	equ	0xFE9
 20799                           wreg	equ	0xFE8
 20800                           indf1	equ	0xFE7
 20801                           postinc1	equ	0xFE6
 20802                           postdec1	equ	0xFE5
 20803                           fsr1h	equ	0xFE2
 20804                           fsr1l	equ	0xFE1
 20805                           indf2	equ	0xFDF
 20806                           postinc2	equ	0xFDE
 20807                           postdec2	equ	0xFDD
 20808                           plusw2	equ	0xFDB
 20809                           fsr2h	equ	0xFDA
 20810                           fsr2l	equ	0xFD9
 20811                           status	equ	0xFD8
 20812                           
 20813 ;; *************** function _Rtcc_AlarmConfig *****************
 20814 ;; Defined at:
 20815 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20816 ;; Parameters:    Size  Location     Type
 20817 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20818 ;;		 -> AlCfg(4), 
 20819 ;; Auto vars:     Size  Location     Type
 20820 ;;		None
 20821 ;; Return value:  Size  Location     Type
 20822 ;;                  1    wreg      void 
 20823 ;; Registers used:
 20824 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20825 ;; Tracked objects:
 20826 ;;		On entry : 0/0
 20827 ;;		On exit  : 0/0
 20828 ;;		Unchanged: 0/0
 20829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20830 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20832 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20833 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20834 ;;Total ram usage:        3 bytes
 20835 ;; Hardware stack levels used:    1
 20836 ;; Hardware stack levels required when called:   11
 20837 ;; This function calls:
 20838 ;;		Nothing
 20839 ;; This function is called by:
 20840 ;;		_Rtcm_MainTask
 20841 ;; This function uses a non-reentrant model
 20842 ;;
 20843                           
 20844                           	psect	text89
 20845  00530C                     __ptext89:
 20846                           	opt stack 0
 20847  00530C                     _Rtcc_AlarmConfig:
 20848                           	opt stack 16
 20849                           
 20850                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20851                           
 20852                           ;incstack = 0
 20853  00530C  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20854  005310  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20855  005314  50DF               	movf	indf2,w,c
 20856  005316  0100               	movlb	0	; () banked
 20857  005318  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20858  00531A  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20859  00531C  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20860  00531E  5091               	movf	3985,w,c	;volatile
 20861  005320  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20862  005322  0B7F               	andlw	-129
 20863  005324  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20864  005326  6E91               	movwf	3985,c	;volatile
 20865                           
 20866                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20867  005328  EE20 F001          	lfsr	2,1
 20868  00532C  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20869  00532E  26D9               	addwf	fsr2l,f,c
 20870  005330  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20871  005332  22DA               	addwfc	fsr2h,f,c
 20872  005334  50DF               	movf	indf2,w,c
 20873  005336  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20874  005338  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20875  00533A  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20876  00533C  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20877  00533E  5091               	movf	3985,w,c	;volatile
 20878  005340  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20879  005342  0BBF               	andlw	-65
 20880  005344  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20881  005346  6E91               	movwf	3985,c	;volatile
 20882                           
 20883                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20884  005348  EE20 F002          	lfsr	2,2
 20885  00534C  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20886  00534E  26D9               	addwf	fsr2l,f,c
 20887  005350  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20888  005352  22DA               	addwfc	fsr2h,f,c
 20889  005354  50DF               	movf	indf2,w,c
 20890  005356  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20891  005358  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20892  00535A  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20893  00535C  5091               	movf	3985,w,c	;volatile
 20894  00535E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20895  005360  0BC3               	andlw	-61
 20896  005362  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20897  005364  6E91               	movwf	3985,c	;volatile
 20898                           
 20899                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20900  005366  EE20 F003          	lfsr	2,3
 20901  00536A  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20902  00536C  26D9               	addwf	fsr2l,f,c
 20903  00536E  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20904  005370  22DA               	addwfc	fsr2h,f,c
 20905  005372  50DF               	movf	indf2,w,c
 20906  005374  6E90               	movwf	3984,c	;volatile
 20907                           
 20908                           ; BSR set to: 0
 20909  005376  0012               	return		;funcret
 20910  005378                     __end_of_Rtcc_AlarmConfig:
 20911                           	opt stack 0
 20912                           tosu	equ	0xFFF
 20913                           tosh	equ	0xFFE
 20914                           tosl	equ	0xFFD
 20915                           pclath	equ	0xFFA
 20916                           tblptru	equ	0xFF8
 20917                           tblptrh	equ	0xFF7
 20918                           tblptrl	equ	0xFF6
 20919                           tablat	equ	0xFF5
 20920                           prodh	equ	0xFF4
 20921                           prodl	equ	0xFF3
 20922                           intcon	equ	0xFF2
 20923                           intcon2	equ	0xFF1
 20924                           intcon3	equ	0xFF0
 20925                           indf0	equ	0xFEF
 20926                           postinc0	equ	0xFEE
 20927                           plusw0	equ	0xFEB
 20928                           fsr0h	equ	0xFEA
 20929                           fsr0l	equ	0xFE9
 20930                           wreg	equ	0xFE8
 20931                           indf1	equ	0xFE7
 20932                           postinc1	equ	0xFE6
 20933                           postdec1	equ	0xFE5
 20934                           fsr1h	equ	0xFE2
 20935                           fsr1l	equ	0xFE1
 20936                           indf2	equ	0xFDF
 20937                           postinc2	equ	0xFDE
 20938                           postdec2	equ	0xFDD
 20939                           plusw2	equ	0xFDB
 20940                           fsr2h	equ	0xFDA
 20941                           fsr2l	equ	0xFD9
 20942                           status	equ	0xFD8
 20943                           
 20944 ;; *************** function _waitSetupCall *****************
 20945 ;; Defined at:
 20946 ;;		line 84 in file "../Source/c/04_App/app_gate.c"
 20947 ;; Parameters:    Size  Location     Type
 20948 ;;		None
 20949 ;; Auto vars:     Size  Location     Type
 20950 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 20951 ;; Return value:  Size  Location     Type
 20952 ;;                  1    wreg      unsigned char 
 20953 ;; Registers used:
 20954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20955 ;; Tracked objects:
 20956 ;;		On entry : 0/0
 20957 ;;		On exit  : 0/0
 20958 ;;		Unchanged: 0/0
 20959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20961 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20963 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20964 ;;Total ram usage:        1 bytes
 20965 ;; Hardware stack levels used:    1
 20966 ;; Hardware stack levels required when called:   15
 20967 ;; This function calls:
 20968 ;;		_Led_SetLedStatus
 20969 ;;		_getSetupCall
 20970 ;;		_secondsAppTimer
 20971 ;; This function is called by:
 20972 ;;		_MyApp_Task
 20973 ;; This function uses a non-reentrant model
 20974 ;;
 20975                           
 20976                           	psect	text90
 20977  005B8C                     __ptext90:
 20978                           	opt stack 0
 20979  005B8C                     _waitSetupCall:
 20980                           	opt stack 12
 20981                           
 20982                           ;app_gate.c: 86: bool isCallArrived = 0;
 20983                           
 20984                           ; BSR set to: 0
 20985                           ;incstack = 0
 20986  005B8C  0E00               	movlw	0
 20987  005B8E  0100               	movlb	0	; () banked
 20988  005B90  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 20989                           
 20990                           ; BSR set to: 0
 20991                           ;app_gate.c: 87: if (!secondsAppTimer(30, &setupCallTicks, 0))
 20992  005B92  0EB8               	movlw	low _setupCallTicks
 20993  005B94  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20994  005B96  0E03               	movlw	high _setupCallTicks
 20995  005B98  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20996  005B9A  0E00               	movlw	0
 20997  005B9C  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20998  005B9E  0E1E               	movlw	30
 20999  005BA0  ECC9  F023         	call	_secondsAppTimer
 21000  005BA4  0900               	iorlw	0
 21001  005BA6  A4D8               	btfss	status,2,c
 21002  005BA8  D00F               	goto	l2769
 21003                           
 21004                           ;app_gate.c: 88: {
 21005                           ;app_gate.c: 89: Led_SetLedStatus(1u, LED_STS_BLINK);
 21006  005BAA  0E03               	movlw	3
 21007  005BAC  0100               	movlb	0	; () banked
 21008  005BAE  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21009  005BB0  0E01               	movlw	1
 21010  005BB2  EC7B  F031         	call	_Led_SetLedStatus
 21011                           
 21012                           ;app_gate.c: 90: if (getSetupCall())
 21013  005BB6  ECF9  F032         	call	_getSetupCall	;wreg free
 21014  005BBA  0900               	iorlw	0
 21015  005BBC  B4D8               	btfsc	status,2,c
 21016  005BBE  D00A               	goto	l2771
 21017                           
 21018                           ;app_gate.c: 91: {
 21019                           ;app_gate.c: 92: isCallArrived = 1;
 21020  005BC0  0E01               	movlw	1
 21021  005BC2  0100               	movlb	0	; () banked
 21022  005BC4  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21023                           
 21024                           ; BSR set to: 0
 21025                           ;app_gate.c: 93: }
 21026                           ;app_gate.c: 94: }
 21027  005BC6  D006               	goto	l2771
 21028  005BC8                     l2769:
 21029                           
 21030                           ;app_gate.c: 95: else
 21031                           ;app_gate.c: 96: {
 21032                           ;app_gate.c: 97: Led_SetLedStatus(1u, LED_STS_ON);
 21033                           
 21034                           ; BSR set to: 0
 21035  005BC8  0E01               	movlw	1
 21036  005BCA  0100               	movlb	0	; () banked
 21037  005BCC  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21038  005BCE  0E01               	movlw	1
 21039  005BD0  EC7B  F031         	call	_Led_SetLedStatus
 21040  005BD4                     l2771:
 21041                           
 21042                           ;app_gate.c: 98: }
 21043                           ;app_gate.c: 99: return isCallArrived;
 21044  005BD4  0100               	movlb	0	; () banked
 21045  005BD6  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 21046  005BD8  0012               	return	
 21047  005BDA                     __end_of_waitSetupCall:
 21048                           	opt stack 0
 21049                           tosu	equ	0xFFF
 21050                           tosh	equ	0xFFE
 21051                           tosl	equ	0xFFD
 21052                           pclath	equ	0xFFA
 21053                           tblptru	equ	0xFF8
 21054                           tblptrh	equ	0xFF7
 21055                           tblptrl	equ	0xFF6
 21056                           tablat	equ	0xFF5
 21057                           prodh	equ	0xFF4
 21058                           prodl	equ	0xFF3
 21059                           intcon	equ	0xFF2
 21060                           intcon2	equ	0xFF1
 21061                           intcon3	equ	0xFF0
 21062                           indf0	equ	0xFEF
 21063                           postinc0	equ	0xFEE
 21064                           plusw0	equ	0xFEB
 21065                           fsr0h	equ	0xFEA
 21066                           fsr0l	equ	0xFE9
 21067                           wreg	equ	0xFE8
 21068                           indf1	equ	0xFE7
 21069                           postinc1	equ	0xFE6
 21070                           postdec1	equ	0xFE5
 21071                           fsr1h	equ	0xFE2
 21072                           fsr1l	equ	0xFE1
 21073                           indf2	equ	0xFDF
 21074                           postinc2	equ	0xFDE
 21075                           postdec2	equ	0xFDD
 21076                           plusw2	equ	0xFDB
 21077                           fsr2h	equ	0xFDA
 21078                           fsr2l	equ	0xFD9
 21079                           status	equ	0xFD8
 21080                           
 21081 ;; *************** function _getSetupCall *****************
 21082 ;; Defined at:
 21083 ;;		line 65 in file "../Source/c/04_App/app_gate.c"
 21084 ;; Parameters:    Size  Location     Type
 21085 ;;		None
 21086 ;; Auto vars:     Size  Location     Type
 21087 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 21088 ;; Return value:  Size  Location     Type
 21089 ;;                  1    wreg      unsigned char 
 21090 ;; Registers used:
 21091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21092 ;; Tracked objects:
 21093 ;;		On entry : 0/0
 21094 ;;		On exit  : 0/0
 21095 ;;		Unchanged: 0/0
 21096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21098 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21100 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21101 ;;Total ram usage:        1 bytes
 21102 ;; Hardware stack levels used:    1
 21103 ;; Hardware stack levels required when called:   14
 21104 ;; This function calls:
 21105 ;;		_Mdm_HangPhoneCall
 21106 ;;		_Mdm_IsRinging
 21107 ;; This function is called by:
 21108 ;;		_waitSetupCall
 21109 ;; This function uses a non-reentrant model
 21110 ;;
 21111                           
 21112                           	psect	text91
 21113  0065F2                     __ptext91:
 21114                           	opt stack 0
 21115  0065F2                     _getSetupCall:
 21116                           	opt stack 12
 21117                           
 21118                           ;app_gate.c: 67: bool isCalledReceived = 0;
 21119                           
 21120                           ; BSR set to: 0
 21121                           ;incstack = 0
 21122  0065F2  0E00               	movlw	0
 21123  0065F4  0100               	movlb	0	; () banked
 21124  0065F6  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21125                           
 21126                           ; BSR set to: 0
 21127                           ;app_gate.c: 69: if (Mdm_IsRinging())
 21128  0065F8  EC4D  F032         	call	_Mdm_IsRinging	;wreg free
 21129  0065FC  0900               	iorlw	0
 21130  0065FE  B4D8               	btfsc	status,2,c
 21131  006600  D005               	goto	l2765
 21132                           
 21133                           ;app_gate.c: 70: {
 21134                           ;app_gate.c: 71: Mdm_HangPhoneCall();
 21135  006602  ECF6  F033         	call	_Mdm_HangPhoneCall	;wreg free
 21136                           
 21137                           ;app_gate.c: 72: isCalledReceived = 1;
 21138  006606  0E01               	movlw	1
 21139  006608  0100               	movlb	0	; () banked
 21140  00660A  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21141  00660C                     l2765:
 21142                           
 21143                           ;app_gate.c: 73: }
 21144                           ;app_gate.c: 74: return isCalledReceived;
 21145                           
 21146                           ; BSR set to: 0
 21147  00660C  0100               	movlb	0	; () banked
 21148  00660E  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 21149  006610  0012               	return	
 21150  006612                     __end_of_getSetupCall:
 21151                           	opt stack 0
 21152                           tosu	equ	0xFFF
 21153                           tosh	equ	0xFFE
 21154                           tosl	equ	0xFFD
 21155                           pclath	equ	0xFFA
 21156                           tblptru	equ	0xFF8
 21157                           tblptrh	equ	0xFF7
 21158                           tblptrl	equ	0xFF6
 21159                           tablat	equ	0xFF5
 21160                           prodh	equ	0xFF4
 21161                           prodl	equ	0xFF3
 21162                           intcon	equ	0xFF2
 21163                           intcon2	equ	0xFF1
 21164                           intcon3	equ	0xFF0
 21165                           indf0	equ	0xFEF
 21166                           postinc0	equ	0xFEE
 21167                           plusw0	equ	0xFEB
 21168                           fsr0h	equ	0xFEA
 21169                           fsr0l	equ	0xFE9
 21170                           wreg	equ	0xFE8
 21171                           indf1	equ	0xFE7
 21172                           postinc1	equ	0xFE6
 21173                           postdec1	equ	0xFE5
 21174                           fsr1h	equ	0xFE2
 21175                           fsr1l	equ	0xFE1
 21176                           indf2	equ	0xFDF
 21177                           postinc2	equ	0xFDE
 21178                           postdec2	equ	0xFDD
 21179                           plusw2	equ	0xFDB
 21180                           fsr2h	equ	0xFDA
 21181                           fsr2l	equ	0xFD9
 21182                           status	equ	0xFD8
 21183                           
 21184 ;; *************** function _Mdm_IsRinging *****************
 21185 ;; Defined at:
 21186 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21187 ;; Parameters:    Size  Location     Type
 21188 ;;		None
 21189 ;; Auto vars:     Size  Location     Type
 21190 ;;  Ret             1   33[BANK0 ] enum E8924
 21191 ;; Return value:  Size  Location     Type
 21192 ;;                  1    wreg      enum E8924
 21193 ;; Registers used:
 21194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21195 ;; Tracked objects:
 21196 ;;		On entry : 0/0
 21197 ;;		On exit  : 0/0
 21198 ;;		Unchanged: 0/0
 21199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21201 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21203 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21204 ;;Total ram usage:        1 bytes
 21205 ;; Hardware stack levels used:    1
 21206 ;; Hardware stack levels required when called:   12
 21207 ;; This function calls:
 21208 ;;		_ReceiveEvt
 21209 ;; This function is called by:
 21210 ;;		_MyApp_Task
 21211 ;;		_getSetupCall
 21212 ;; This function uses a non-reentrant model
 21213 ;;
 21214                           
 21215                           	psect	text92
 21216  00649A                     __ptext92:
 21217                           	opt stack 0
 21218  00649A                     _Mdm_IsRinging:
 21219                           	opt stack 13
 21220                           
 21221                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 21222                           
 21223                           ; BSR set to: 0
 21224                           ;incstack = 0
 21225  00649A  0E00               	movlw	0
 21226  00649C  0100               	movlb	0	; () banked
 21227  00649E  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21228                           
 21229                           ; BSR set to: 0
 21230                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 21231  0064A0  0EDE               	movlw	low _RingEvent
 21232  0064A2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21233  0064A4  0E00               	movlw	high _RingEvent
 21234  0064A6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21235  0064A8  ECAA  F031         	call	_ReceiveEvt	;wreg free
 21236  0064AC  0900               	iorlw	0
 21237  0064AE  B4D8               	btfsc	status,2,c
 21238  0064B0  D003               	goto	l1152
 21239                           
 21240                           ;mdm_gsm_gprs.c: 1030: {
 21241                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 21242  0064B2  0E01               	movlw	1
 21243  0064B4  0100               	movlb	0	; () banked
 21244  0064B6  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21245  0064B8                     l1152:
 21246                           
 21247                           ;mdm_gsm_gprs.c: 1032: }
 21248                           ;mdm_gsm_gprs.c: 1034: return Ret;
 21249  0064B8  0100               	movlb	0	; () banked
 21250  0064BA  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21251  0064BC  0012               	return	
 21252  0064BE                     __end_of_Mdm_IsRinging:
 21253                           	opt stack 0
 21254                           tosu	equ	0xFFF
 21255                           tosh	equ	0xFFE
 21256                           tosl	equ	0xFFD
 21257                           pclath	equ	0xFFA
 21258                           tblptru	equ	0xFF8
 21259                           tblptrh	equ	0xFF7
 21260                           tblptrl	equ	0xFF6
 21261                           tablat	equ	0xFF5
 21262                           prodh	equ	0xFF4
 21263                           prodl	equ	0xFF3
 21264                           intcon	equ	0xFF2
 21265                           intcon2	equ	0xFF1
 21266                           intcon3	equ	0xFF0
 21267                           indf0	equ	0xFEF
 21268                           postinc0	equ	0xFEE
 21269                           plusw0	equ	0xFEB
 21270                           fsr0h	equ	0xFEA
 21271                           fsr0l	equ	0xFE9
 21272                           wreg	equ	0xFE8
 21273                           indf1	equ	0xFE7
 21274                           postinc1	equ	0xFE6
 21275                           postdec1	equ	0xFE5
 21276                           fsr1h	equ	0xFE2
 21277                           fsr1l	equ	0xFE1
 21278                           indf2	equ	0xFDF
 21279                           postinc2	equ	0xFDE
 21280                           postdec2	equ	0xFDD
 21281                           plusw2	equ	0xFDB
 21282                           fsr2h	equ	0xFDA
 21283                           fsr2l	equ	0xFD9
 21284                           status	equ	0xFD8
 21285                           
 21286 ;; *************** function _Mdm_HangPhoneCall *****************
 21287 ;; Defined at:
 21288 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21289 ;; Parameters:    Size  Location     Type
 21290 ;;		None
 21291 ;; Auto vars:     Size  Location     Type
 21292 ;;		None
 21293 ;; Return value:  Size  Location     Type
 21294 ;;                  1    wreg      void 
 21295 ;; Registers used:
 21296 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21297 ;; Tracked objects:
 21298 ;;		On entry : 0/0
 21299 ;;		On exit  : 0/0
 21300 ;;		Unchanged: 0/0
 21301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21306 ;;Total ram usage:        0 bytes
 21307 ;; Hardware stack levels used:    1
 21308 ;; Hardware stack levels required when called:   13
 21309 ;; This function calls:
 21310 ;;		_Uart_WriteConstString
 21311 ;; This function is called by:
 21312 ;;		_MyApp_Task
 21313 ;;		_getSetupCall
 21314 ;; This function uses a non-reentrant model
 21315 ;;
 21316                           
 21317                           	psect	text93
 21318  0067EC                     __ptext93:
 21319                           	opt stack 0
 21320  0067EC                     _Mdm_HangPhoneCall:
 21321                           	opt stack 12
 21322                           
 21323                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 21324                           
 21325                           ; BSR set to: 0
 21326                           ;incstack = 0
 21327  0067EC  0EF0               	movlw	low STR_6
 21328  0067EE  0100               	movlb	0	; () banked
 21329  0067F0  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21330  0067F2  0EFF               	movlw	high STR_6
 21331  0067F4  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21332  0067F6  0E01               	movlw	1
 21333  0067F8  EC7A  F02F         	call	_Uart_WriteConstString
 21334  0067FC  0012               	return		;funcret
 21335  0067FE                     __end_of_Mdm_HangPhoneCall:
 21336                           	opt stack 0
 21337                           tosu	equ	0xFFF
 21338                           tosh	equ	0xFFE
 21339                           tosl	equ	0xFFD
 21340                           pclath	equ	0xFFA
 21341                           tblptru	equ	0xFF8
 21342                           tblptrh	equ	0xFF7
 21343                           tblptrl	equ	0xFF6
 21344                           tablat	equ	0xFF5
 21345                           prodh	equ	0xFF4
 21346                           prodl	equ	0xFF3
 21347                           intcon	equ	0xFF2
 21348                           intcon2	equ	0xFF1
 21349                           intcon3	equ	0xFF0
 21350                           indf0	equ	0xFEF
 21351                           postinc0	equ	0xFEE
 21352                           plusw0	equ	0xFEB
 21353                           fsr0h	equ	0xFEA
 21354                           fsr0l	equ	0xFE9
 21355                           wreg	equ	0xFE8
 21356                           indf1	equ	0xFE7
 21357                           postinc1	equ	0xFE6
 21358                           postdec1	equ	0xFE5
 21359                           fsr1h	equ	0xFE2
 21360                           fsr1l	equ	0xFE1
 21361                           indf2	equ	0xFDF
 21362                           postinc2	equ	0xFDE
 21363                           postdec2	equ	0xFDD
 21364                           plusw2	equ	0xFDB
 21365                           fsr2h	equ	0xFDA
 21366                           fsr2l	equ	0xFD9
 21367                           status	equ	0xFD8
 21368                           
 21369 ;; *************** function _saveNumberInMemory *****************
 21370 ;; Defined at:
 21371 ;;		line 108 in file "../Source/c/04_App/app_gate.c"
 21372 ;; Parameters:    Size  Location     Type
 21373 ;;  address         1    wreg     unsigned char 
 21374 ;;  phoneNumber     2   54[BANK0 ] PTR unsigned char 
 21375 ;;		 -> MyApp_Task@emptyNumber(13), RAM(3775), callerNumber(13), 
 21376 ;; Auto vars:     Size  Location     Type
 21377 ;;  address         1   56[BANK0 ] unsigned char 
 21378 ;; Return value:  Size  Location     Type
 21379 ;;                  1    wreg      void 
 21380 ;; Registers used:
 21381 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21382 ;; Tracked objects:
 21383 ;;		On entry : 0/0
 21384 ;;		On exit  : 0/0
 21385 ;;		Unchanged: 0/0
 21386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21387 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21390 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21391 ;;Total ram usage:        3 bytes
 21392 ;; Hardware stack levels used:    1
 21393 ;; Hardware stack levels required when called:   14
 21394 ;; This function calls:
 21395 ;;		_Eeprom_Write
 21396 ;; This function is called by:
 21397 ;;		_MyApp_Task
 21398 ;; This function uses a non-reentrant model
 21399 ;;
 21400                           
 21401                           	psect	text94
 21402  0066DA                     __ptext94:
 21403                           	opt stack 0
 21404  0066DA                     _saveNumberInMemory:
 21405                           	opt stack 13
 21406                           
 21407                           ;incstack = 0
 21408                           ;saveNumberInMemory@address stored from wreg
 21409  0066DA  0100               	movlb	0	; () banked
 21410  0066DC  6F98               	movwf	saveNumberInMemory@address& (0+255),b
 21411                           
 21412                           ;app_gate.c: 110: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 21413  0066DE  C096  F08F         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 21414  0066E2  C097  F090         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 21415  0066E6  0E0D               	movlw	13
 21416  0066E8  0100               	movlb	0	; () banked
 21417  0066EA  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 21418  0066EC  5198               	movf	saveNumberInMemory@address& (0+255),w,b
 21419  0066EE  ECFC  F02C         	call	_Eeprom_Write
 21420  0066F2  0012               	return		;funcret
 21421  0066F4                     __end_of_saveNumberInMemory:
 21422                           	opt stack 0
 21423                           tosu	equ	0xFFF
 21424                           tosh	equ	0xFFE
 21425                           tosl	equ	0xFFD
 21426                           pclath	equ	0xFFA
 21427                           tblptru	equ	0xFF8
 21428                           tblptrh	equ	0xFF7
 21429                           tblptrl	equ	0xFF6
 21430                           tablat	equ	0xFF5
 21431                           prodh	equ	0xFF4
 21432                           prodl	equ	0xFF3
 21433                           intcon	equ	0xFF2
 21434                           intcon2	equ	0xFF1
 21435                           intcon3	equ	0xFF0
 21436                           indf0	equ	0xFEF
 21437                           postinc0	equ	0xFEE
 21438                           plusw0	equ	0xFEB
 21439                           fsr0h	equ	0xFEA
 21440                           fsr0l	equ	0xFE9
 21441                           wreg	equ	0xFE8
 21442                           indf1	equ	0xFE7
 21443                           postinc1	equ	0xFE6
 21444                           postdec1	equ	0xFE5
 21445                           fsr1h	equ	0xFE2
 21446                           fsr1l	equ	0xFE1
 21447                           indf2	equ	0xFDF
 21448                           postinc2	equ	0xFDE
 21449                           postdec2	equ	0xFDD
 21450                           plusw2	equ	0xFDB
 21451                           fsr2h	equ	0xFDA
 21452                           fsr2l	equ	0xFD9
 21453                           status	equ	0xFD8
 21454                           
 21455 ;; *************** function _parseCommand *****************
 21456 ;; Defined at:
 21457 ;;		line 90 in file "../Source/c/04_App/app.c"
 21458 ;; Parameters:    Size  Location     Type
 21459 ;;  text            2   40[BANK0 ] PTR unsigned char 
 21460 ;;		 -> smsText(20), 
 21461 ;; Auto vars:     Size  Location     Type
 21462 ;;  deleteNumber    3   45[BANK0 ] const unsigned char [3]
 21463 ;;  addNumberCmd    3   42[BANK0 ] const unsigned char [3]
 21464 ;;  state           1   48[BANK0 ] enum E8994
 21465 ;; Return value:  Size  Location     Type
 21466 ;;                  1    wreg      enum E8994
 21467 ;; Registers used:
 21468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21469 ;; Tracked objects:
 21470 ;;		On entry : 0/0
 21471 ;;		On exit  : 0/0
 21472 ;;		Unchanged: 0/0
 21473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21474 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21475 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21477 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21478 ;;Total ram usage:        9 bytes
 21479 ;; Hardware stack levels used:    1
 21480 ;; Hardware stack levels required when called:   12
 21481 ;; This function calls:
 21482 ;;		_StringCompare
 21483 ;;		_isNumberValid
 21484 ;; This function is called by:
 21485 ;;		_MyApp_Task
 21486 ;; This function uses a non-reentrant model
 21487 ;;
 21488                           
 21489                           	psect	text95
 21490  00443E                     __ptext95:
 21491                           	opt stack 0
 21492  00443E                     _parseCommand:
 21493                           	opt stack 15
 21494                           
 21495                           ;app.c: 92: const uint8_t addNumberCmd[] = {'A', 'D', 'D'};
 21496                           
 21497                           ;incstack = 0
 21498  00443E  0E2B               	movlw	low parseCommand@F9019
 21499  004440  6EF6               	movwf	tblptrl,c
 21500  004442                     	if	1	;There is more than 1 active tblptr byte
 21501  004442  0EFC               	movlw	high parseCommand@F9019
 21502  004444  6EF7               	movwf	tblptrh,c
 21503  004446                     	endif
 21504  004446                     	if	0	;There are less than 3 active tblptr bytes
 21505  004446                     	endif
 21506  004446  0009               	tblrd		*+
 21507  004448  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd
 21508  00444C  0009               	tblrd		*+
 21509  00444E  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+1
 21510  004452  000A               	tblrd		*-
 21511  004454  CFF5 F08C          	movff	tablat,parseCommand@addNumberCmd+2
 21512                           
 21513                           ;app.c: 93: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L'};
 21514  004458  0E28               	movlw	low parseCommand@F9021
 21515  00445A  6EF6               	movwf	tblptrl,c
 21516  00445C                     	if	1	;There is more than 1 active tblptr byte
 21517  00445C  0EFC               	movlw	high parseCommand@F9021
 21518  00445E  6EF7               	movwf	tblptrh,c
 21519  004460                     	endif
 21520  004460                     	if	0	;There are less than 3 active tblptr bytes
 21521  004460                     	endif
 21522  004460  0009               	tblrd		*+
 21523  004462  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd
 21524  004466  0009               	tblrd		*+
 21525  004468  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+1
 21526  00446C  000A               	tblrd		*-
 21527  00446E  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+2
 21528                           
 21529                           ;app.c: 94: gateFsmStates state = GATE_WAIT_EVENT;
 21530  004472  0E03               	movlw	3
 21531  004474  0100               	movlb	0	; () banked
 21532  004476  6F90               	movwf	parseCommand@state& (0+255),b
 21533                           
 21534                           ; BSR set to: 0
 21535                           ;app.c: 96: if (StringCompare(text, addNumberCmd, sizeof(addNumberCmd)))
 21536  004478  C088  F07D         	movff	parseCommand@text,StringCompare@String1
 21537  00447C  C089  F07E         	movff	parseCommand@text+1,StringCompare@String1+1
 21538  004480  0E8A               	movlw	low parseCommand@addNumberCmd
 21539  004482  6F7F               	movwf	StringCompare@String2& (0+255),b
 21540  004484  0E00               	movlw	high parseCommand@addNumberCmd
 21541  004486  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21542  004488  0E00               	movlw	0
 21543  00448A  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21544  00448C  0E03               	movlw	3
 21545  00448E  6F81               	movwf	StringCompare@Len& (0+255),b
 21546  004490  EC25  F02D         	call	_StringCompare	;wreg free
 21547  004494  0900               	iorlw	0
 21548  004496  B4D8               	btfsc	status,2,c
 21549  004498  D002               	goto	l2583
 21550                           
 21551                           ;app.c: 97: {
 21552                           ;app.c: 98: state = GATE_ADD_CMD;
 21553  00449A  0E04               	movlw	4
 21554  00449C  D013               	goto	L23
 21555  00449E                     l2583:
 21556                           
 21557                           ;app.c: 100: else if (StringCompare(text, deleteNumberCmd, sizeof(deleteNumberCmd)))
 21558                           
 21559                           ; BSR set to: 0
 21560  00449E  C088  F07D         	movff	parseCommand@text,StringCompare@String1
 21561  0044A2  C089  F07E         	movff	parseCommand@text+1,StringCompare@String1+1
 21562  0044A6  0E8D               	movlw	low parseCommand@deleteNumberCmd
 21563  0044A8  0100               	movlb	0	; () banked
 21564  0044AA  6F7F               	movwf	StringCompare@String2& (0+255),b
 21565  0044AC  0E00               	movlw	high parseCommand@deleteNumberCmd
 21566  0044AE  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21567  0044B0  0E00               	movlw	0
 21568  0044B2  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21569  0044B4  0E03               	movlw	3
 21570  0044B6  6F81               	movwf	StringCompare@Len& (0+255),b
 21571  0044B8  EC25  F02D         	call	_StringCompare	;wreg free
 21572  0044BC  0900               	iorlw	0
 21573  0044BE  B4D8               	btfsc	status,2,c
 21574  0044C0  D003               	goto	l2585
 21575                           
 21576                           ;app.c: 101: {
 21577                           ;app.c: 102: state = GATE_DEL_CMD;
 21578  0044C2  0E06               	movlw	6
 21579  0044C4                     L23:
 21580  0044C4  0100               	movlb	0	; () banked
 21581  0044C6  6F90               	movwf	parseCommand@state& (0+255),b
 21582  0044C8                     l2585:
 21583                           
 21584                           ;app.c: 107: }
 21585                           ;app.c: 109: if (!isNumberValid(text + 3))
 21586                           
 21587                           ; BSR set to: 0
 21588                           
 21589                           ; BSR set to: 0
 21590                           
 21591                           ;app.c: 104: else
 21592                           ;app.c: 105: {
 21593                           
 21594                           ; BSR set to: 0
 21595  0044C8  0E03               	movlw	3
 21596  0044CA  0100               	movlb	0	; () banked
 21597  0044CC  2588               	addwf	parseCommand@text& (0+255),w,b
 21598  0044CE  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 21599  0044D0  0E00               	movlw	0
 21600  0044D2  2189               	addwfc	(parseCommand@text+1)& (0+255),w,b
 21601  0044D4  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 21602  0044D6  EC8A  F02A         	call	_isNumberValid	;wreg free
 21603  0044DA  0900               	iorlw	0
 21604  0044DC  A4D8               	btfss	status,2,c
 21605  0044DE  D003               	goto	l2587
 21606                           
 21607                           ;app.c: 110: {
 21608                           ;app.c: 111: state = GATE_WAIT_EVENT;
 21609  0044E0  0E03               	movlw	3
 21610  0044E2  0100               	movlb	0	; () banked
 21611  0044E4  6F90               	movwf	parseCommand@state& (0+255),b
 21612  0044E6                     l2587:
 21613                           
 21614                           ;app.c: 112: }
 21615                           ;app.c: 113: return state;
 21616  0044E6  0100               	movlb	0	; () banked
 21617  0044E8  5190               	movf	parseCommand@state& (0+255),w,b
 21618  0044EA  0012               	return	
 21619  0044EC                     __end_of_parseCommand:
 21620                           	opt stack 0
 21621                           tosu	equ	0xFFF
 21622                           tosh	equ	0xFFE
 21623                           tosl	equ	0xFFD
 21624                           pclath	equ	0xFFA
 21625                           tblptru	equ	0xFF8
 21626                           tblptrh	equ	0xFF7
 21627                           tblptrl	equ	0xFF6
 21628                           tablat	equ	0xFF5
 21629                           prodh	equ	0xFF4
 21630                           prodl	equ	0xFF3
 21631                           intcon	equ	0xFF2
 21632                           intcon2	equ	0xFF1
 21633                           intcon3	equ	0xFF0
 21634                           indf0	equ	0xFEF
 21635                           postinc0	equ	0xFEE
 21636                           plusw0	equ	0xFEB
 21637                           fsr0h	equ	0xFEA
 21638                           fsr0l	equ	0xFE9
 21639                           wreg	equ	0xFE8
 21640                           indf1	equ	0xFE7
 21641                           postinc1	equ	0xFE6
 21642                           postdec1	equ	0xFE5
 21643                           fsr1h	equ	0xFE2
 21644                           fsr1l	equ	0xFE1
 21645                           indf2	equ	0xFDF
 21646                           postinc2	equ	0xFDE
 21647                           postdec2	equ	0xFDD
 21648                           plusw2	equ	0xFDB
 21649                           fsr2h	equ	0xFDA
 21650                           fsr2l	equ	0xFD9
 21651                           status	equ	0xFD8
 21652                           
 21653 ;; *************** function _isNumberInMemory *****************
 21654 ;; Defined at:
 21655 ;;		line 174 in file "../Source/c/04_App/app_gate.c"
 21656 ;; Parameters:    Size  Location     Type
 21657 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 21658 ;;		 -> MyApp_Task@receivedNumber(13), 
 21659 ;; Auto vars:     Size  Location     Type
 21660 ;;  readBuffer     13    2[BANK1 ] unsigned char [13]
 21661 ;;  positionInMe    1   18[BANK1 ] unsigned char 
 21662 ;;  memoryOpResu    1   17[BANK1 ] enum E8246
 21663 ;;  searchFailed    1   16[BANK1 ] const unsigned char 
 21664 ;;  searchInProg    1   15[BANK1 ] const unsigned char 
 21665 ;; Return value:  Size  Location     Type
 21666 ;;                  1    wreg      unsigned char 
 21667 ;; Registers used:
 21668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21669 ;; Tracked objects:
 21670 ;;		On entry : 0/0
 21671 ;;		On exit  : 0/0
 21672 ;;		Unchanged: 0/0
 21673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21674 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21675 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21677 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21678 ;;Total ram usage:       19 bytes
 21679 ;; Hardware stack levels used:    1
 21680 ;; Hardware stack levels required when called:   17
 21681 ;; This function calls:
 21682 ;;		_Eeprom_Read
 21683 ;;		_StringCompare
 21684 ;;		_isNumberValid
 21685 ;; This function is called by:
 21686 ;;		_MyApp_Task
 21687 ;; This function uses a non-reentrant model
 21688 ;;
 21689                           
 21690                           	psect	text96
 21691  004972                     __ptext96:
 21692                           	opt stack 0
 21693  004972                     _isNumberInMemory:
 21694                           	opt stack 10
 21695                           
 21696                           ;app_gate.c: 176: const uint8_t searchInProgress = 0;
 21697                           
 21698                           ; BSR set to: 0
 21699                           ;incstack = 0
 21700  004972  0E00               	movlw	0
 21701  004974  0101               	movlb	1	; () banked
 21702  004976  6F0F               	movwf	isNumberInMemory@searchInProgress& (0+255),b
 21703                           
 21704                           ;app_gate.c: 177: const uint8_t searchFailed = 1;
 21705  004978  0E01               	movlw	1
 21706  00497A  6F10               	movwf	isNumberInMemory@searchFailed& (0+255),b
 21707                           
 21708                           ; BSR set to: 1
 21709                           ;app_gate.c: 178: static uint8_t currentPosition = 16;
 21710                           ;app_gate.c: 179: uint8_t positionInMemory = searchInProgress;
 21711  00497C  C10F  F112         	movff	isNumberInMemory@searchInProgress,isNumberInMemory@positionInMemory
 21712                           
 21713                           ;app_gate.c: 180: uint8_t readBuffer[((UINT8)(13))];
 21714                           ;app_gate.c: 181: EepromStsType memoryOpResult = OP_PENDING;
 21715  004980  0E02               	movlw	2
 21716  004982  6F11               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 21717                           
 21718                           ; BSR set to: 1
 21719                           ;app_gate.c: 183: if (currentPosition >= 16 * 10)
 21720  004984  0E9F               	movlw	159
 21721  004986  0100               	movlb	0	; () banked
 21722  004988  65E2               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 21723  00498A  D002               	goto	l2801
 21724                           
 21725                           ; BSR set to: 0
 21726                           ;app_gate.c: 184: {
 21727                           ;app_gate.c: 185: currentPosition = 16;
 21728  00498C  0E10               	movlw	16
 21729  00498E  6FE2               	movwf	isNumberInMemory@currentPosition& (0+255),b
 21730  004990                     l2801:
 21731                           
 21732                           ; BSR set to: 0
 21733                           ;app_gate.c: 186: }
 21734                           ;app_gate.c: 187: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13)
      +                          ));
 21735                           
 21736                           ; BSR set to: 0
 21737  004990  0E02               	movlw	low isNumberInMemory@readBuffer
 21738  004992  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 21739  004994  0E01               	movlw	high isNumberInMemory@readBuffer
 21740  004996  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 21741  004998  0E0D               	movlw	13
 21742  00499A  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 21743  00499C  51E2               	movf	isNumberInMemory@currentPosition& (0+255),w,b
 21744  00499E  EC7E  F02C         	call	_Eeprom_Read
 21745  0049A2  0101               	movlb	1	; () banked
 21746  0049A4  6F11               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 21747                           
 21748                           ; BSR set to: 1
 21749                           ;app_gate.c: 188: if (memoryOpResult != OP_PENDING)
 21750  0049A6  0E02               	movlw	2
 21751  0049A8  1911               	xorwf	isNumberInMemory@memoryOpResult& (0+255),w,b
 21752  0049AA  B4D8               	btfsc	status,2,c
 21753  0049AC  D024               	goto	l2802
 21754                           
 21755                           ; BSR set to: 1
 21756                           ;app_gate.c: 189: {
 21757                           ;app_gate.c: 190: if (isNumberValid(readBuffer))
 21758  0049AE  0E02               	movlw	low isNumberInMemory@readBuffer
 21759  0049B0  0100               	movlb	0	; () banked
 21760  0049B2  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 21761  0049B4  0E01               	movlw	high isNumberInMemory@readBuffer
 21762  0049B6  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 21763  0049B8  EC8A  F02A         	call	_isNumberValid	;wreg free
 21764  0049BC  0900               	iorlw	0
 21765  0049BE  B4D8               	btfsc	status,2,c
 21766  0049C0  D017               	goto	l2804
 21767                           
 21768                           ;app_gate.c: 191: {
 21769                           ;app_gate.c: 192: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 21770  0049C2  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 21771  0049C6  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 21772  0049CA  0E02               	movlw	low isNumberInMemory@readBuffer
 21773  0049CC  0100               	movlb	0	; () banked
 21774  0049CE  6F7F               	movwf	StringCompare@String2& (0+255),b
 21775  0049D0  0E01               	movlw	high isNumberInMemory@readBuffer
 21776  0049D2  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21777  0049D4  0E00               	movlw	0
 21778  0049D6  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21779  0049D8  0E0D               	movlw	13
 21780  0049DA  6F81               	movwf	StringCompare@Len& (0+255),b
 21781  0049DC  EC25  F02D         	call	_StringCompare	;wreg free
 21782  0049E0  0900               	iorlw	0
 21783  0049E2  B4D8               	btfsc	status,2,c
 21784  0049E4  D005               	goto	l2804
 21785                           
 21786                           ;app_gate.c: 193: {
 21787                           ;app_gate.c: 194: positionInMemory = currentPosition;
 21788  0049E6  C0E2  F112         	movff	isNumberInMemory@currentPosition,isNumberInMemory@positionInMemory
 21789                           
 21790                           ;app_gate.c: 195: currentPosition = 16 * 10;
 21791  0049EA  0EA0               	movlw	160
 21792  0049EC  0100               	movlb	0	; () banked
 21793  0049EE  6FE2               	movwf	isNumberInMemory@currentPosition& (0+255),b
 21794  0049F0                     l2804:
 21795                           
 21796                           ;app_gate.c: 200: }
 21797                           ;app_gate.c: 201: }
 21798                           ;app_gate.c: 202: currentPosition += 16;
 21799                           
 21800                           ; BSR set to: 0
 21801                           
 21802                           ; BSR set to: 0
 21803                           
 21804                           ;app_gate.c: 197: else
 21805                           ;app_gate.c: 198: {
 21806                           
 21807                           ; BSR set to: 0
 21808  0049F0  0E10               	movlw	16
 21809  0049F2  0100               	movlb	0	; () banked
 21810  0049F4  27E2               	addwf	isNumberInMemory@currentPosition& (0+255),f,b
 21811  0049F6                     l2802:
 21812                           
 21813                           ;app_gate.c: 203: }
 21814                           ;app_gate.c: 204: if (positionInMemory == 0 && currentPosition >= 16 * 10)
 21815                           
 21816                           ; BSR set to: 0
 21817  0049F6  0101               	movlb	1	; () banked
 21818  0049F8  5112               	movf	isNumberInMemory@positionInMemory& (0+255),w,b
 21819  0049FA  A4D8               	btfss	status,2,c
 21820  0049FC  D006               	goto	l2806
 21821                           
 21822                           ; BSR set to: 1
 21823  0049FE  0E9F               	movlw	159
 21824  004A00  0100               	movlb	0	; () banked
 21825  004A02  65E2               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 21826  004A04  D002               	goto	l2806
 21827                           
 21828                           ; BSR set to: 0
 21829                           ;app_gate.c: 205: {
 21830                           ;app_gate.c: 206: positionInMemory = searchFailed;
 21831  004A06  C110  F112         	movff	isNumberInMemory@searchFailed,isNumberInMemory@positionInMemory
 21832  004A0A                     l2806:
 21833                           
 21834                           ;app_gate.c: 207: }
 21835                           ;app_gate.c: 208: return positionInMemory;
 21836                           
 21837                           ; BSR set to: 0
 21838  004A0A  0101               	movlb	1	; () banked
 21839  004A0C  5112               	movf	isNumberInMemory@positionInMemory& (0+255),w,b
 21840  004A0E  0012               	return	
 21841  004A10                     __end_of_isNumberInMemory:
 21842                           	opt stack 0
 21843                           tosu	equ	0xFFF
 21844                           tosh	equ	0xFFE
 21845                           tosl	equ	0xFFD
 21846                           pclath	equ	0xFFA
 21847                           tblptru	equ	0xFF8
 21848                           tblptrh	equ	0xFF7
 21849                           tblptrl	equ	0xFF6
 21850                           tablat	equ	0xFF5
 21851                           prodh	equ	0xFF4
 21852                           prodl	equ	0xFF3
 21853                           intcon	equ	0xFF2
 21854                           intcon2	equ	0xFF1
 21855                           intcon3	equ	0xFF0
 21856                           indf0	equ	0xFEF
 21857                           postinc0	equ	0xFEE
 21858                           plusw0	equ	0xFEB
 21859                           fsr0h	equ	0xFEA
 21860                           fsr0l	equ	0xFE9
 21861                           wreg	equ	0xFE8
 21862                           indf1	equ	0xFE7
 21863                           postinc1	equ	0xFE6
 21864                           postdec1	equ	0xFE5
 21865                           fsr1h	equ	0xFE2
 21866                           fsr1l	equ	0xFE1
 21867                           indf2	equ	0xFDF
 21868                           postinc2	equ	0xFDE
 21869                           postdec2	equ	0xFDD
 21870                           plusw2	equ	0xFDB
 21871                           fsr2h	equ	0xFDA
 21872                           fsr2l	equ	0xFD9
 21873                           status	equ	0xFD8
 21874                           
 21875 ;; *************** function _initMemorizedNumbersCount *****************
 21876 ;; Defined at:
 21877 ;;		line 117 in file "../Source/c/04_App/app_gate.c"
 21878 ;; Parameters:    Size  Location     Type
 21879 ;;		None
 21880 ;; Auto vars:     Size  Location     Type
 21881 ;;		None
 21882 ;; Return value:  Size  Location     Type
 21883 ;;                  1    wreg      void 
 21884 ;; Registers used:
 21885 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21886 ;; Tracked objects:
 21887 ;;		On entry : 0/0
 21888 ;;		On exit  : 0/0
 21889 ;;		Unchanged: 0/0
 21890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21895 ;;Total ram usage:        0 bytes
 21896 ;; Hardware stack levels used:    1
 21897 ;; Hardware stack levels required when called:   14
 21898 ;; This function calls:
 21899 ;;		_Eeprom_Write
 21900 ;;		_initPreamble
 21901 ;; This function is called by:
 21902 ;;		_MyApp_Task
 21903 ;; This function uses a non-reentrant model
 21904 ;;
 21905                           
 21906                           	psect	text97
 21907  0066F4                     __ptext97:
 21908                           	opt stack 0
 21909  0066F4                     _initMemorizedNumbersCount:
 21910                           	opt stack 13
 21911                           
 21912                           ;app_gate.c: 119: Eeprom_Write(0, initPreamble(), 5);
 21913                           
 21914                           ; BSR set to: 1
 21915                           ;incstack = 0
 21916  0066F4  EC15  F032         	call	_initPreamble	;wreg free
 21917  0066F8  C07D  F08F         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 21918  0066FC  C07E  F090         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 21919  006700  0E05               	movlw	5
 21920  006702  0100               	movlb	0	; () banked
 21921  006704  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 21922  006706  0E00               	movlw	0
 21923  006708  ECFC  F02C         	call	_Eeprom_Write
 21924  00670C  0012               	return		;funcret
 21925  00670E                     __end_of_initMemorizedNumbersCount:
 21926                           	opt stack 0
 21927                           tosu	equ	0xFFF
 21928                           tosh	equ	0xFFE
 21929                           tosl	equ	0xFFD
 21930                           pclath	equ	0xFFA
 21931                           tblptru	equ	0xFF8
 21932                           tblptrh	equ	0xFF7
 21933                           tblptrl	equ	0xFF6
 21934                           tablat	equ	0xFF5
 21935                           prodh	equ	0xFF4
 21936                           prodl	equ	0xFF3
 21937                           intcon	equ	0xFF2
 21938                           intcon2	equ	0xFF1
 21939                           intcon3	equ	0xFF0
 21940                           indf0	equ	0xFEF
 21941                           postinc0	equ	0xFEE
 21942                           plusw0	equ	0xFEB
 21943                           fsr0h	equ	0xFEA
 21944                           fsr0l	equ	0xFE9
 21945                           wreg	equ	0xFE8
 21946                           indf1	equ	0xFE7
 21947                           postinc1	equ	0xFE6
 21948                           postdec1	equ	0xFE5
 21949                           fsr1h	equ	0xFE2
 21950                           fsr1l	equ	0xFE1
 21951                           indf2	equ	0xFDF
 21952                           postinc2	equ	0xFDE
 21953                           postdec2	equ	0xFDD
 21954                           plusw2	equ	0xFDB
 21955                           fsr2h	equ	0xFDA
 21956                           fsr2l	equ	0xFD9
 21957                           status	equ	0xFD8
 21958                           
 21959 ;; *************** function _initPreamble *****************
 21960 ;; Defined at:
 21961 ;;		line 213 in file "../Source/c/04_App/app_init.c"
 21962 ;; Parameters:    Size  Location     Type
 21963 ;;		None
 21964 ;; Auto vars:     Size  Location     Type
 21965 ;;		None
 21966 ;; Return value:  Size  Location     Type
 21967 ;;                  2   29[BANK0 ] PTR unsigned char 
 21968 ;; Registers used:
 21969 ;;		wreg, status,2, status,0
 21970 ;; Tracked objects:
 21971 ;;		On entry : 0/0
 21972 ;;		On exit  : 0/0
 21973 ;;		Unchanged: 0/0
 21974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21975 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21978 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21979 ;;Total ram usage:        2 bytes
 21980 ;; Hardware stack levels used:    1
 21981 ;; Hardware stack levels required when called:   11
 21982 ;; This function calls:
 21983 ;;		Nothing
 21984 ;; This function is called by:
 21985 ;;		_initMemorizedNumbersCount
 21986 ;; This function uses a non-reentrant model
 21987 ;;
 21988                           
 21989                           	psect	text98
 21990  00642A                     __ptext98:
 21991                           	opt stack 0
 21992  00642A                     _initPreamble:
 21993                           	opt stack 15
 21994                           
 21995                           ;app_init.c: 215: memoryPreamble[0] = 'U';
 21996                           
 21997                           ;incstack = 0
 21998  00642A  0E55               	movlw	85
 21999  00642C  0103               	movlb	3	; () banked
 22000  00642E  6F99               	movwf	_memoryPreamble& (0+255),b
 22001                           
 22002                           ;app_init.c: 216: memoryPreamble[1] = 'S';
 22003  006430  0E53               	movlw	83
 22004  006432  6F9A               	movwf	(_memoryPreamble+1)& (0+255),b
 22005                           
 22006                           ;app_init.c: 217: memoryPreamble[2] = 'I';
 22007  006434  0E49               	movlw	73
 22008  006436  6F9B               	movwf	(_memoryPreamble+2)& (0+255),b
 22009                           
 22010                           ;app_init.c: 218: memoryPreamble[3] = 'M';
 22011  006438  0E4D               	movlw	77
 22012  00643A  6F9C               	movwf	(_memoryPreamble+3)& (0+255),b
 22013                           
 22014                           ;app_init.c: 219: memoryPreamble[4] = 1;
 22015  00643C  0E01               	movlw	1
 22016  00643E  6F9D               	movwf	(_memoryPreamble+4)& (0+255),b
 22017                           
 22018                           ;app_init.c: 220: memorizedNumbersCount[0] = 1;
 22019  006440  0E01               	movlw	1
 22020  006442  6E38               	movwf	_memorizedNumbersCount,c
 22021                           
 22022                           ; BSR set to: 3
 22023                           ;app_init.c: 221: return memoryPreamble;
 22024  006444  0E99               	movlw	low _memoryPreamble
 22025  006446  0100               	movlb	0	; () banked
 22026  006448  6F7D               	movwf	?_initPreamble& (0+255),b
 22027  00644A  0E03               	movlw	high _memoryPreamble
 22028  00644C  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 22029  00644E  0012               	return	
 22030  006450                     __end_of_initPreamble:
 22031                           	opt stack 0
 22032                           tosu	equ	0xFFF
 22033                           tosh	equ	0xFFE
 22034                           tosl	equ	0xFFD
 22035                           pclath	equ	0xFFA
 22036                           tblptru	equ	0xFF8
 22037                           tblptrh	equ	0xFF7
 22038                           tblptrl	equ	0xFF6
 22039                           tablat	equ	0xFF5
 22040                           prodh	equ	0xFF4
 22041                           prodl	equ	0xFF3
 22042                           intcon	equ	0xFF2
 22043                           intcon2	equ	0xFF1
 22044                           intcon3	equ	0xFF0
 22045                           indf0	equ	0xFEF
 22046                           postinc0	equ	0xFEE
 22047                           plusw0	equ	0xFEB
 22048                           fsr0h	equ	0xFEA
 22049                           fsr0l	equ	0xFE9
 22050                           wreg	equ	0xFE8
 22051                           indf1	equ	0xFE7
 22052                           postinc1	equ	0xFE6
 22053                           postdec1	equ	0xFE5
 22054                           fsr1h	equ	0xFE2
 22055                           fsr1l	equ	0xFE1
 22056                           indf2	equ	0xFDF
 22057                           postinc2	equ	0xFDE
 22058                           postdec2	equ	0xFDD
 22059                           plusw2	equ	0xFDB
 22060                           fsr2h	equ	0xFDA
 22061                           fsr2l	equ	0xFD9
 22062                           status	equ	0xFD8
 22063                           
 22064 ;; *************** function _Eeprom_Write *****************
 22065 ;; Defined at:
 22066 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 22067 ;; Parameters:    Size  Location     Type
 22068 ;;  MemoryAddres    1    wreg     unsigned char 
 22069 ;;  WriteBuffer     2   47[BANK0 ] PTR unsigned char 
 22070 ;;		 -> memorizedNumbersCount(1), memoryPreamble(5), MyApp_Task@emptyNumber(13), RAM(3775), 
 22071 ;;		 -> callerNumber(13), 
 22072 ;;  DataLength      1   49[BANK0 ] unsigned char 
 22073 ;; Auto vars:     Size  Location     Type
 22074 ;;  MemoryAddres    1   51[BANK0 ] unsigned char 
 22075 ;;  CommandLengt    1   53[BANK0 ] const unsigned char 
 22076 ;;  SlaveAddress    1   52[BANK0 ] const unsigned char 
 22077 ;;  WriteSts        1   50[BANK0 ] unsigned char 
 22078 ;; Return value:  Size  Location     Type
 22079 ;;                  1    wreg      unsigned char 
 22080 ;; Registers used:
 22081 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22082 ;; Tracked objects:
 22083 ;;		On entry : 0/0
 22084 ;;		On exit  : 0/0
 22085 ;;		Unchanged: 0/0
 22086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22087 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22088 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22090 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22091 ;;Total ram usage:        7 bytes
 22092 ;; Hardware stack levels used:    1
 22093 ;; Hardware stack levels required when called:   13
 22094 ;; This function calls:
 22095 ;;		_I2cSlv_SendI2cMsg
 22096 ;;		_StringCopy
 22097 ;; This function is called by:
 22098 ;;		_saveNumberInMemory
 22099 ;;		_initMemorizedNumbersCount
 22100 ;;		_incrementMemorizedNumbersCount
 22101 ;;		_decrementMemorizedNumbersCount
 22102 ;; This function uses a non-reentrant model
 22103 ;;
 22104                           
 22105                           	psect	text99
 22106  0059F8                     __ptext99:
 22107                           	opt stack 0
 22108  0059F8                     _Eeprom_Write:
 22109                           	opt stack 13
 22110                           
 22111                           ; BSR set to: 0
 22112                           ;incstack = 0
 22113                           ;Eeprom_Write@MemoryAddress stored from wreg
 22114  0059F8  0100               	movlb	0	; () banked
 22115  0059FA  6F93               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 22116                           
 22117                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 22118  0059FC  0E50               	movlw	80
 22119  0059FE  0100               	movlb	0	; () banked
 22120  005A00  6F94               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 22121                           
 22122                           ; BSR set to: 0
 22123                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 22124  005A02  2991               	incf	Eeprom_Write@DataLength& (0+255),w,b
 22125  005A04  6F95               	movwf	Eeprom_Write@CommandLength& (0+255),b
 22126                           
 22127                           ; BSR set to: 0
 22128                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 22129  005A06  0E00               	movlw	0
 22130  005A08  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 22131                           
 22132                           ; BSR set to: 0
 22133                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 22134  005A0A  0E10               	movlw	16
 22135  005A0C  6195               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 22136  005A0E  0012               	return	
 22137                           
 22138                           ; BSR set to: 0
 22139                           ;eeprom_if.c: 85: {
 22140                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 22141  005A10  C093  F4B1         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 22142                           
 22143                           ; BSR set to: 0
 22144                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 22145  005A14  C08F  F085         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 22146  005A18  C090  F086         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 22147  005A1C  0EB2               	movlw	low (_EepromBuffer+1)
 22148  005A1E  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22149  005A20  0E04               	movlw	high (_EepromBuffer+1)
 22150  005A22  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22151  005A24  C091  F089         	movff	Eeprom_Write@DataLength,StringCopy@Len
 22152  005A28  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 22153  005A2A  ECBD  F02A         	call	_StringCopy	;wreg free
 22154                           
 22155                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 22156  005A2E  0EB1               	movlw	low _EepromBuffer
 22157  005A30  0100               	movlb	0	; () banked
 22158  005A32  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 22159  005A34  0E04               	movlw	high _EepromBuffer
 22160  005A36  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 22161  005A38  C094  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 22162  005A3C  C095  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 22163  005A40  EC1B  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 22164  005A44  0100               	movlb	0	; () banked
 22165  005A46  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 22166                           
 22167                           ; BSR set to: 0
 22168  005A48  0012               	return	
 22169  005A4A                     __end_of_Eeprom_Write:
 22170                           	opt stack 0
 22171                           tosu	equ	0xFFF
 22172                           tosh	equ	0xFFE
 22173                           tosl	equ	0xFFD
 22174                           pclath	equ	0xFFA
 22175                           tblptru	equ	0xFF8
 22176                           tblptrh	equ	0xFF7
 22177                           tblptrl	equ	0xFF6
 22178                           tablat	equ	0xFF5
 22179                           prodh	equ	0xFF4
 22180                           prodl	equ	0xFF3
 22181                           intcon	equ	0xFF2
 22182                           intcon2	equ	0xFF1
 22183                           intcon3	equ	0xFF0
 22184                           indf0	equ	0xFEF
 22185                           postinc0	equ	0xFEE
 22186                           plusw0	equ	0xFEB
 22187                           fsr0h	equ	0xFEA
 22188                           fsr0l	equ	0xFE9
 22189                           wreg	equ	0xFE8
 22190                           indf1	equ	0xFE7
 22191                           postinc1	equ	0xFE6
 22192                           postdec1	equ	0xFE5
 22193                           fsr1h	equ	0xFE2
 22194                           fsr1l	equ	0xFE1
 22195                           indf2	equ	0xFDF
 22196                           postinc2	equ	0xFDE
 22197                           postdec2	equ	0xFDD
 22198                           plusw2	equ	0xFDB
 22199                           fsr2h	equ	0xFDA
 22200                           fsr2l	equ	0xFD9
 22201                           status	equ	0xFD8
 22202                           
 22203 ;; *************** function _initFsm *****************
 22204 ;; Defined at:
 22205 ;;		line 177 in file "../Source/c/04_App/app_init.c"
 22206 ;; Parameters:    Size  Location     Type
 22207 ;;		None
 22208 ;; Auto vars:     Size  Location     Type
 22209 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 22210 ;; Return value:  Size  Location     Type
 22211 ;;                  1    wreg      unsigned char 
 22212 ;; Registers used:
 22213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22214 ;; Tracked objects:
 22215 ;;		On entry : 0/0
 22216 ;;		On exit  : 0/0
 22217 ;;		Unchanged: 0/0
 22218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22220 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22222 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22223 ;;Total ram usage:        1 bytes
 22224 ;; Hardware stack levels used:    1
 22225 ;; Hardware stack levels required when called:   18
 22226 ;; This function calls:
 22227 ;;		_initEeprom
 22228 ;;		_initGprsModem
 22229 ;; This function is called by:
 22230 ;;		_MyApp_Task
 22231 ;; This function uses a non-reentrant model
 22232 ;;
 22233                           
 22234                           	psect	text100
 22235  005D56                     __ptext100:
 22236                           	opt stack 0
 22237  005D56                     _initFsm:
 22238                           	opt stack 9
 22239                           
 22240                           ;app_init.c: 179: static initFsmStates currentState = INIT_FSM_MODEM;
 22241                           ;app_init.c: 180: bool isInitialized = 0;
 22242                           
 22243                           ; BSR set to: 0
 22244                           ;incstack = 0
 22245  005D56  0E00               	movlw	0
 22246  005D58  0101               	movlb	1	; () banked
 22247  005D5A  6F03               	movwf	initFsm@isInitialized& (0+255),b
 22248                           
 22249                           ;app_init.c: 182: switch (currentState)
 22250  005D5C  D013               	goto	l2705
 22251  005D5E                     
 22252                           ; BSR set to: 1
 22253                           ;app_init.c: 185: if (initGprsModem())
 22254                           
 22255                           ; BSR set to: 1
 22256  005D5E  EC7E  F026         	call	_initGprsModem	;wreg free
 22257  005D62  0900               	iorlw	0
 22258  005D64  B4D8               	btfsc	status,2,c
 22259  005D66  D018               	goto	l2708
 22260                           
 22261                           ;app_init.c: 186: {
 22262                           ;app_init.c: 187: currentState = INIT_FSM_EEPROM;
 22263  005D68  0E01               	movlw	1
 22264  005D6A  D006               	goto	L24
 22265  005D6C                     
 22266                           ; BSR set to: 1
 22267                           ;app_init.c: 192: if (initEeprom())
 22268                           
 22269                           ; BSR set to: 1
 22270  005D6C  EC9B  F027         	call	_initEeprom	;wreg free
 22271  005D70  0900               	iorlw	0
 22272  005D72  B4D8               	btfsc	status,2,c
 22273  005D74  D011               	goto	l2708
 22274                           
 22275                           ;app_init.c: 193: {
 22276                           ;app_init.c: 194: currentState = INIT_FSM_COMPLETE;
 22277  005D76  0E02               	movlw	2
 22278  005D78                     L24:
 22279  005D78  0101               	movlb	1	; () banked
 22280  005D7A  6FD3               	movwf	initFsm@currentState& (0+255),b
 22281                           
 22282                           ; BSR set to: 1
 22283                           ;app_init.c: 195: }
 22284                           ;app_init.c: 196: break;
 22285  005D7C  D00D               	goto	l2708
 22286  005D7E                     
 22287                           ; BSR set to: 1
 22288                           ;app_init.c: 199: isInitialized = 1;
 22289                           
 22290                           ; BSR set to: 1
 22291  005D7E  0E01               	movlw	1
 22292  005D80  6F03               	movwf	initFsm@isInitialized& (0+255),b
 22293                           
 22294                           ; BSR set to: 1
 22295                           ;app_init.c: 204: }
 22296                           
 22297                           ; BSR set to: 1
 22298                           ;app_init.c: 203: break;
 22299                           
 22300                           ;app_init.c: 202: default:
 22301                           
 22302                           ;app_init.c: 200: break;
 22303  005D82  D00A               	goto	l2708
 22304  005D84                     l2705:
 22305                           
 22306                           ; BSR set to: 1
 22307                           
 22308                           ; BSR set to: 1
 22309  005D84  51D3               	movf	initFsm@currentState& (0+255),w,b
 22310                           
 22311                           ; Switch size 1, requested type "space"
 22312                           ; Number of cases is 3, Range of values is 0 to 2
 22313                           ; switch strategies available:
 22314                           ; Name         Instructions Cycles
 22315                           ; simple_byte           10     6 (average)
 22316                           ;	Chosen strategy is simple_byte
 22317  005D86  0A00               	xorlw	0	; case 0
 22318  005D88  B4D8               	btfsc	status,2,c
 22319  005D8A  D7E9               	goto	l2706
 22320  005D8C  0A01               	xorlw	1	; case 1
 22321  005D8E  B4D8               	btfsc	status,2,c
 22322  005D90  D7ED               	goto	l2709
 22323  005D92  0A03               	xorlw	3	; case 2
 22324  005D94  B4D8               	btfsc	status,2,c
 22325  005D96  D7F3               	goto	l2711
 22326  005D98                     l2708:
 22327                           
 22328                           ;app_init.c: 205: return isInitialized;
 22329                           
 22330                           ; BSR set to: 1
 22331  005D98  0101               	movlb	1	; () banked
 22332  005D9A  5103               	movf	initFsm@isInitialized& (0+255),w,b
 22333  005D9C  0012               	return	
 22334  005D9E                     __end_of_initFsm:
 22335                           	opt stack 0
 22336                           tosu	equ	0xFFF
 22337                           tosh	equ	0xFFE
 22338                           tosl	equ	0xFFD
 22339                           pclath	equ	0xFFA
 22340                           tblptru	equ	0xFF8
 22341                           tblptrh	equ	0xFF7
 22342                           tblptrl	equ	0xFF6
 22343                           tablat	equ	0xFF5
 22344                           prodh	equ	0xFF4
 22345                           prodl	equ	0xFF3
 22346                           intcon	equ	0xFF2
 22347                           intcon2	equ	0xFF1
 22348                           intcon3	equ	0xFF0
 22349                           indf0	equ	0xFEF
 22350                           postinc0	equ	0xFEE
 22351                           plusw0	equ	0xFEB
 22352                           fsr0h	equ	0xFEA
 22353                           fsr0l	equ	0xFE9
 22354                           wreg	equ	0xFE8
 22355                           indf1	equ	0xFE7
 22356                           postinc1	equ	0xFE6
 22357                           postdec1	equ	0xFE5
 22358                           fsr1h	equ	0xFE2
 22359                           fsr1l	equ	0xFE1
 22360                           indf2	equ	0xFDF
 22361                           postinc2	equ	0xFDE
 22362                           postdec2	equ	0xFDD
 22363                           plusw2	equ	0xFDB
 22364                           fsr2h	equ	0xFDA
 22365                           fsr2l	equ	0xFD9
 22366                           status	equ	0xFD8
 22367                           
 22368 ;; *************** function _initGprsModem *****************
 22369 ;; Defined at:
 22370 ;;		line 84 in file "../Source/c/04_App/app_init.c"
 22371 ;; Parameters:    Size  Location     Type
 22372 ;;		None
 22373 ;; Auto vars:     Size  Location     Type
 22374 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 22375 ;; Return value:  Size  Location     Type
 22376 ;;                  1    wreg      unsigned char 
 22377 ;; Registers used:
 22378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22379 ;; Tracked objects:
 22380 ;;		On entry : 0/0
 22381 ;;		On exit  : 0/0
 22382 ;;		Unchanged: 0/0
 22383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22385 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22387 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22388 ;;Total ram usage:        1 bytes
 22389 ;; Hardware stack levels used:    1
 22390 ;; Hardware stack levels required when called:   14
 22391 ;; This function calls:
 22392 ;;		_Mdm_SetSmsFormat
 22393 ;;		_Uart_WriteConstString
 22394 ;;		_secondsAppTimer
 22395 ;; This function is called by:
 22396 ;;		_initFsm
 22397 ;; This function uses a non-reentrant model
 22398 ;;
 22399                           
 22400                           	psect	text101
 22401  004CFC                     __ptext101:
 22402                           	opt stack 0
 22403  004CFC                     _initGprsModem:
 22404                           	opt stack 12
 22405                           
 22406                           ;app_init.c: 86: static uint16_t modemCounter = 0;
 22407                           ;app_init.c: 87: static modemStates currentState = MODEM_INIT;
 22408                           ;app_init.c: 88: bool isInitialized = 0;
 22409                           
 22410                           ; BSR set to: 1
 22411                           ;incstack = 0
 22412  004CFC  0E00               	movlw	0
 22413  004CFE  0100               	movlb	0	; () banked
 22414  004D00  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22415                           
 22416                           ;app_init.c: 90: switch(currentState)
 22417  004D02  D033               	goto	l2675
 22418  004D04                     
 22419                           ;app_init.c: 93: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 22420                           
 22421                           ; BSR set to: 0
 22422  004D04  0E03               	movlw	3
 22423  004D06  0100               	movlb	0	; () banked
 22424  004D08  19D0               	xorwf	_MdmStatus& (0+255),w,b
 22425  004D0A  B4D8               	btfsc	status,2,c
 22426  004D0C  D003               	goto	u14150
 22427                           
 22428                           ; BSR set to: 0
 22429  004D0E  05D0               	decf	_MdmStatus& (0+255),w,b
 22430  004D10  A4D8               	btfss	status,2,c
 22431  004D12  D039               	goto	l2681
 22432  004D14                     u14150:
 22433                           
 22434                           ; BSR set to: 0
 22435                           ;app_init.c: 94: {
 22436                           ;app_init.c: 95: if (secondsAppTimer(5, &modemCounter, 0))
 22437                           
 22438                           ; BSR set to: 0
 22439  004D14  0EBA               	movlw	low initGprsModem@modemCounter
 22440  004D16  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 22441  004D18  0E03               	movlw	high initGprsModem@modemCounter
 22442  004D1A  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 22443  004D1C  0E00               	movlw	0
 22444  004D1E  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 22445  004D20  0E05               	movlw	5
 22446  004D22  ECC9  F023         	call	_secondsAppTimer
 22447  004D26  0900               	iorlw	0
 22448  004D28  B4D8               	btfsc	status,2,c
 22449  004D2A  D02D               	goto	l2681
 22450                           
 22451                           ;app_init.c: 96: {
 22452                           ;app_init.c: 97: Mdm_SetSmsFormat(1);
 22453  004D2C  0E01               	movlw	1
 22454  004D2E  EC9E  F02D         	call	_Mdm_SetSmsFormat
 22455                           
 22456                           ;app_init.c: 98: currentState = MODEM_DELETE_SMS;
 22457  004D32  0E01               	movlw	1
 22458  004D34  D013               	goto	L26
 22459  004D36                     
 22460                           ; BSR set to: 1
 22461                           ;app_init.c: 104: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 22462                           
 22463                           ; BSR set to: 1
 22464  004D36  0EFA               	movlw	low STR_31
 22465  004D38  0100               	movlb	0	; () banked
 22466  004D3A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22467  004D3C  0EFE               	movlw	high STR_31
 22468  004D3E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22469  004D40  0E01               	movlw	1
 22470  004D42  EC7A  F02F         	call	_Uart_WriteConstString
 22471                           
 22472                           ;app_init.c: 105: currentState = MODEM_SET_CALLER_ID;
 22473  004D46  0E02               	movlw	2
 22474  004D48  D009               	goto	L26
 22475  004D4A                     
 22476                           ; BSR set to: 1
 22477                           ;app_init.c: 109: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 22478                           
 22479                           ; BSR set to: 1
 22480  004D4A  0EAA               	movlw	low STR_32
 22481  004D4C  0100               	movlb	0	; () banked
 22482  004D4E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22483  004D50  0EFF               	movlw	high STR_32
 22484  004D52  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22485  004D54  0E01               	movlw	1
 22486  004D56  EC7A  F02F         	call	_Uart_WriteConstString
 22487                           
 22488                           ;app_init.c: 110: currentState = MODEM_INIT_COMPLETE;
 22489  004D5A  0E03               	movlw	3
 22490  004D5C                     L26:
 22491  004D5C  0101               	movlb	1	; () banked
 22492  004D5E  6FD5               	movwf	initGprsModem@currentState& (0+255),b
 22493                           
 22494                           ;app_init.c: 111: break;
 22495  004D60  D012               	goto	l2681
 22496  004D62                     
 22497                           ; BSR set to: 1
 22498                           ;app_init.c: 114: isInitialized = 1;
 22499                           
 22500                           ; BSR set to: 1
 22501  004D62  0E01               	movlw	1
 22502  004D64  0100               	movlb	0	; () banked
 22503  004D66  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22504                           
 22505                           ; BSR set to: 0
 22506                           ;app_init.c: 119: }
 22507                           
 22508                           ; BSR set to: 0
 22509                           ;app_init.c: 118: break;
 22510                           
 22511                           ;app_init.c: 117: default:
 22512                           
 22513                           ;app_init.c: 115: break;
 22514  004D68  D00E               	goto	l2681
 22515  004D6A                     l2675:
 22516                           
 22517                           ; BSR set to: 0
 22518                           
 22519                           ; BSR set to: 0
 22520  004D6A  0101               	movlb	1	; () banked
 22521  004D6C  51D5               	movf	initGprsModem@currentState& (0+255),w,b
 22522                           
 22523                           ; Switch size 1, requested type "space"
 22524                           ; Number of cases is 4, Range of values is 0 to 3
 22525                           ; switch strategies available:
 22526                           ; Name         Instructions Cycles
 22527                           ; simple_byte           13     7 (average)
 22528                           ;	Chosen strategy is simple_byte
 22529  004D6E  0A00               	xorlw	0	; case 0
 22530  004D70  B4D8               	btfsc	status,2,c
 22531  004D72  D7C8               	goto	l2676
 22532  004D74  0A01               	xorlw	1	; case 1
 22533  004D76  B4D8               	btfsc	status,2,c
 22534  004D78  D7DE               	goto	l2682
 22535  004D7A  0A03               	xorlw	3	; case 2
 22536  004D7C  B4D8               	btfsc	status,2,c
 22537  004D7E  D7E5               	goto	l2683
 22538  004D80  0A01               	xorlw	1	; case 3
 22539  004D82  B4D8               	btfsc	status,2,c
 22540  004D84  D7EE               	goto	l2684
 22541  004D86                     l2681:
 22542                           
 22543                           ;app_init.c: 120: return isInitialized;
 22544                           
 22545                           ; BSR set to: 1
 22546  004D86  0100               	movlb	0	; () banked
 22547  004D88  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 22548  004D8A  0012               	return	
 22549  004D8C                     __end_of_initGprsModem:
 22550                           	opt stack 0
 22551                           tosu	equ	0xFFF
 22552                           tosh	equ	0xFFE
 22553                           tosl	equ	0xFFD
 22554                           pclath	equ	0xFFA
 22555                           tblptru	equ	0xFF8
 22556                           tblptrh	equ	0xFF7
 22557                           tblptrl	equ	0xFF6
 22558                           tablat	equ	0xFF5
 22559                           prodh	equ	0xFF4
 22560                           prodl	equ	0xFF3
 22561                           intcon	equ	0xFF2
 22562                           intcon2	equ	0xFF1
 22563                           intcon3	equ	0xFF0
 22564                           indf0	equ	0xFEF
 22565                           postinc0	equ	0xFEE
 22566                           plusw0	equ	0xFEB
 22567                           fsr0h	equ	0xFEA
 22568                           fsr0l	equ	0xFE9
 22569                           wreg	equ	0xFE8
 22570                           indf1	equ	0xFE7
 22571                           postinc1	equ	0xFE6
 22572                           postdec1	equ	0xFE5
 22573                           fsr1h	equ	0xFE2
 22574                           fsr1l	equ	0xFE1
 22575                           indf2	equ	0xFDF
 22576                           postinc2	equ	0xFDE
 22577                           postdec2	equ	0xFDD
 22578                           plusw2	equ	0xFDB
 22579                           fsr2h	equ	0xFDA
 22580                           fsr2l	equ	0xFD9
 22581                           status	equ	0xFD8
 22582                           
 22583 ;; *************** function _secondsAppTimer *****************
 22584 ;; Defined at:
 22585 ;;		line 66 in file "../Source/c/04_App/app_utils.c"
 22586 ;; Parameters:    Size  Location     Type
 22587 ;;  seconds         1    wreg     unsigned char 
 22588 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 22589 ;;		 -> setupCallTicks(2), initGprsModem@modemCounter(2), 
 22590 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 22591 ;; Auto vars:     Size  Location     Type
 22592 ;;  seconds         1   47[BANK0 ] unsigned char 
 22593 ;;  destinationT    2   49[BANK0 ] unsigned int 
 22594 ;;  isExpired       1   48[BANK0 ] unsigned char 
 22595 ;; Return value:  Size  Location     Type
 22596 ;;                  1    wreg      unsigned char 
 22597 ;; Registers used:
 22598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22599 ;; Tracked objects:
 22600 ;;		On entry : 0/0
 22601 ;;		On exit  : 0/0
 22602 ;;		Unchanged: 0/0
 22603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22604 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22605 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22606 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22607 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22608 ;;Total ram usage:        9 bytes
 22609 ;; Hardware stack levels used:    1
 22610 ;; Hardware stack levels required when called:   12
 22611 ;; This function calls:
 22612 ;;		___lwdiv
 22613 ;;		___wmul
 22614 ;; This function is called by:
 22615 ;;		_initGprsModem
 22616 ;;		_waitSetupCall
 22617 ;;		_blinkForSeconds
 22618 ;; This function uses a non-reentrant model
 22619 ;;
 22620                           
 22621                           	psect	text102
 22622  004792                     __ptext102:
 22623                           	opt stack 0
 22624  004792                     _secondsAppTimer:
 22625                           	opt stack 14
 22626                           
 22627                           ; BSR set to: 0
 22628                           ;incstack = 0
 22629                           ;secondsAppTimer@seconds stored from wreg
 22630  004792  0100               	movlb	0	; () banked
 22631  004794  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 22632                           
 22633                           ;app_utils.c: 68: bool isExpired = 1;
 22634  004796  0E01               	movlw	1
 22635  004798  0100               	movlb	0	; () banked
 22636  00479A  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22637                           
 22638                           ; BSR set to: 0
 22639                           ;app_utils.c: 69: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 22640  00479C  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 22641  0047A0  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 22642  0047A2  0E03               	movlw	3
 22643  0047A4  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22644  0047A6  0EE8               	movlw	232
 22645  0047A8  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 22646  0047AA  EC01  F032         	call	___wmul	;wreg free
 22647  0047AE  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 22648  0047B2  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 22649  0047B6  0E00               	movlw	0
 22650  0047B8  0100               	movlb	0	; () banked
 22651  0047BA  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 22652  0047BC  0E64               	movlw	100
 22653  0047BE  6F85               	movwf	___lwdiv@divisor& (0+255),b
 22654  0047C0  ECD2  F02C         	call	___lwdiv	;wreg free
 22655  0047C4  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 22656  0047C8  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 22657                           
 22658                           ;app_utils.c: 71: if (*counter < destinationTicks)
 22659  0047CC  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22660  0047D0  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22661  0047D4  0100               	movlb	0	; () banked
 22662  0047D6  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22663  0047D8  5CDE               	subwf	postinc2,w,c
 22664  0047DA  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22665  0047DC  58DE               	subwfb	postinc2,w,c
 22666  0047DE  B0D8               	btfsc	status,0,c
 22667  0047E0  D009               	goto	l2727
 22668                           
 22669                           ; BSR set to: 0
 22670                           ;app_utils.c: 72: {
 22671                           ;app_utils.c: 73: *counter += 1;
 22672  0047E2  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22673  0047E6  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22674  0047EA  2ADE               	incf	postinc2,f,c
 22675  0047EC  0E00               	movlw	0
 22676  0047EE  22DD               	addwfc	postdec2,f,c
 22677                           
 22678                           ; BSR set to: 0
 22679                           ;app_utils.c: 74: isExpired = 0;
 22680  0047F0  0E00               	movlw	0
 22681  0047F2  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22682  0047F4                     l2727:
 22683                           
 22684                           ; BSR set to: 0
 22685                           ;app_utils.c: 75: }
 22686                           ;app_utils.c: 76: if (*counter == destinationTicks)
 22687                           
 22688                           ; BSR set to: 0
 22689  0047F4  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22690  0047F8  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22691  0047FC  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22692  0047FE  18DE               	xorwf	postinc2,w,c
 22693  004800  E117               	bnz	l13832
 22694  004802  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22695  004804  18DE               	xorwf	postinc2,w,c
 22696  004806  A4D8               	btfss	status,2,c
 22697  004808  D013               	goto	l2730
 22698                           
 22699                           ; BSR set to: 0
 22700                           ;app_utils.c: 77: {
 22701                           ;app_utils.c: 78: if (isCyclic)
 22702  00480A  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 22703  00480C  B4D8               	btfsc	status,2,c
 22704  00480E  D008               	goto	l2729
 22705                           
 22706                           ; BSR set to: 0
 22707                           ;app_utils.c: 79: {
 22708                           ;app_utils.c: 80: *counter = 0;
 22709  004810  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22710  004814  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22711  004818  0E00               	movlw	0
 22712  00481A  6EDE               	movwf	postinc2,c
 22713  00481C  0E00               	movlw	0
 22714  00481E  D007               	goto	L27
 22715  004820                     l2729:
 22716                           
 22717                           ; BSR set to: 0
 22718                           ;app_utils.c: 82: else
 22719                           ;app_utils.c: 83: {
 22720                           ;app_utils.c: 84: *counter = 0xFFFF;
 22721                           
 22722                           ; BSR set to: 0
 22723  004820  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22724  004824  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22725  004828  0EFF               	movlw	255
 22726  00482A  6EDE               	movwf	postinc2,c
 22727  00482C  0EFF               	movlw	255
 22728  00482E                     L27:
 22729  00482E  6EDD               	movwf	postdec2,c
 22730  004830                     l2730:
 22731  004830                     l13832:
 22732                           
 22733                           ; BSR set to: 0
 22734                           ;app_utils.c: 85: }
 22735                           ;app_utils.c: 86: }
 22736                           ;app_utils.c: 87: return isExpired;
 22737  004830  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 22738  004832  0012               	return	
 22739  004834                     __end_of_secondsAppTimer:
 22740                           	opt stack 0
 22741                           tosu	equ	0xFFF
 22742                           tosh	equ	0xFFE
 22743                           tosl	equ	0xFFD
 22744                           pclath	equ	0xFFA
 22745                           tblptru	equ	0xFF8
 22746                           tblptrh	equ	0xFF7
 22747                           tblptrl	equ	0xFF6
 22748                           tablat	equ	0xFF5
 22749                           prodh	equ	0xFF4
 22750                           prodl	equ	0xFF3
 22751                           intcon	equ	0xFF2
 22752                           intcon2	equ	0xFF1
 22753                           intcon3	equ	0xFF0
 22754                           indf0	equ	0xFEF
 22755                           postinc0	equ	0xFEE
 22756                           plusw0	equ	0xFEB
 22757                           fsr0h	equ	0xFEA
 22758                           fsr0l	equ	0xFE9
 22759                           wreg	equ	0xFE8
 22760                           indf1	equ	0xFE7
 22761                           postinc1	equ	0xFE6
 22762                           postdec1	equ	0xFE5
 22763                           fsr1h	equ	0xFE2
 22764                           fsr1l	equ	0xFE1
 22765                           indf2	equ	0xFDF
 22766                           postinc2	equ	0xFDE
 22767                           postdec2	equ	0xFDD
 22768                           plusw2	equ	0xFDB
 22769                           fsr2h	equ	0xFDA
 22770                           fsr2l	equ	0xFD9
 22771                           status	equ	0xFD8
 22772                           
 22773 ;; *************** function _Mdm_SetSmsFormat *****************
 22774 ;; Defined at:
 22775 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22776 ;; Parameters:    Size  Location     Type
 22777 ;;  TextFormat      1    wreg     unsigned char 
 22778 ;; Auto vars:     Size  Location     Type
 22779 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 22780 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 22781 ;;  Index           1   35[BANK0 ] unsigned char 
 22782 ;; Return value:  Size  Location     Type
 22783 ;;                  1    wreg      void 
 22784 ;; Registers used:
 22785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22786 ;; Tracked objects:
 22787 ;;		On entry : 0/0
 22788 ;;		On exit  : 0/0
 22789 ;;		Unchanged: 0/0
 22790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22792 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22794 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22795 ;;Total ram usage:       22 bytes
 22796 ;; Hardware stack levels used:    1
 22797 ;; Hardware stack levels required when called:   13
 22798 ;; This function calls:
 22799 ;;		_Uart_WriteString
 22800 ;; This function is called by:
 22801 ;;		_initGprsModem
 22802 ;; This function uses a non-reentrant model
 22803 ;;
 22804                           
 22805                           	psect	text103
 22806  005B3C                     __ptext103:
 22807                           	opt stack 0
 22808  005B3C                     _Mdm_SetSmsFormat:
 22809                           	opt stack 12
 22810                           
 22811                           ; BSR set to: 0
 22812                           ;incstack = 0
 22813                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 22814  005B3C  0100               	movlb	0	; () banked
 22815  005B3E  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 22816                           
 22817                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 22818                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 22819  005B40  0E00               	movlw	0
 22820  005B42  0100               	movlb	0	; () banked
 22821  005B44  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 22822                           
 22823                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 22824  005B46  0E41               	movlw	65
 22825  005B48  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 22826                           
 22827                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 22828  005B4A  0E54               	movlw	84
 22829  005B4C  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 22830                           
 22831                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 22832  005B4E  0E2B               	movlw	43
 22833  005B50  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 22834                           
 22835                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 22836  005B52  0E43               	movlw	67
 22837  005B54  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 22838                           
 22839                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 22840  005B56  0E4D               	movlw	77
 22841  005B58  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 22842                           
 22843                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 22844  005B5A  0E47               	movlw	71
 22845  005B5C  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 22846                           
 22847                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 22848  005B5E  0E46               	movlw	70
 22849  005B60  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 22850                           
 22851                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 22852  005B62  0E3D               	movlw	61
 22853  005B64  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 22854                           
 22855                           ; BSR set to: 0
 22856                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 22857  005B66  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 22858  005B68  A4D8               	btfss	status,2,c
 22859  005B6A  D002               	goto	l1121
 22860                           
 22861                           ; BSR set to: 0
 22862                           ;mdm_gsm_gprs.c: 854: {
 22863                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 22864  005B6C  0E31               	movlw	49
 22865  005B6E  D001               	goto	L28
 22866  005B70                     l1121:
 22867                           
 22868                           ; BSR set to: 0
 22869                           ;mdm_gsm_gprs.c: 857: else
 22870                           ;mdm_gsm_gprs.c: 858: {
 22871                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 22872                           
 22873                           ; BSR set to: 0
 22874  005B70  0E30               	movlw	48
 22875  005B72                     L28:
 22876  005B72  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 22877                           
 22878                           ; BSR set to: 0
 22879                           ;mdm_gsm_gprs.c: 860: }
 22880                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 22881  005B74  0E0D               	movlw	13
 22882  005B76  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 22883                           
 22884                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 22885  005B78  0E00               	movlw	0
 22886  005B7A  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 22887                           
 22888                           ; BSR set to: 0
 22889                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 22890  005B7C  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 22891  005B7E  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 22892  005B80  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 22893  005B82  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 22894  005B84  0E01               	movlw	1
 22895  005B86  EC3A  F030         	call	_Uart_WriteString
 22896  005B8A  0012               	return		;funcret
 22897  005B8C                     __end_of_Mdm_SetSmsFormat:
 22898                           	opt stack 0
 22899                           tosu	equ	0xFFF
 22900                           tosh	equ	0xFFE
 22901                           tosl	equ	0xFFD
 22902                           pclath	equ	0xFFA
 22903                           tblptru	equ	0xFF8
 22904                           tblptrh	equ	0xFF7
 22905                           tblptrl	equ	0xFF6
 22906                           tablat	equ	0xFF5
 22907                           prodh	equ	0xFF4
 22908                           prodl	equ	0xFF3
 22909                           intcon	equ	0xFF2
 22910                           intcon2	equ	0xFF1
 22911                           intcon3	equ	0xFF0
 22912                           indf0	equ	0xFEF
 22913                           postinc0	equ	0xFEE
 22914                           plusw0	equ	0xFEB
 22915                           fsr0h	equ	0xFEA
 22916                           fsr0l	equ	0xFE9
 22917                           wreg	equ	0xFE8
 22918                           indf1	equ	0xFE7
 22919                           postinc1	equ	0xFE6
 22920                           postdec1	equ	0xFE5
 22921                           fsr1h	equ	0xFE2
 22922                           fsr1l	equ	0xFE1
 22923                           indf2	equ	0xFDF
 22924                           postinc2	equ	0xFDE
 22925                           postdec2	equ	0xFDD
 22926                           plusw2	equ	0xFDB
 22927                           fsr2h	equ	0xFDA
 22928                           fsr2l	equ	0xFD9
 22929                           status	equ	0xFD8
 22930                           
 22931 ;; *************** function _initEeprom *****************
 22932 ;; Defined at:
 22933 ;;		line 127 in file "../Source/c/04_App/app_init.c"
 22934 ;; Parameters:    Size  Location     Type
 22935 ;;		None
 22936 ;; Auto vars:     Size  Location     Type
 22937 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22938 ;;  memoryOpResu    1    1[BANK1 ] enum E8246
 22939 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22940 ;; Return value:  Size  Location     Type
 22941 ;;                  1    wreg      unsigned char 
 22942 ;; Registers used:
 22943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22944 ;; Tracked objects:
 22945 ;;		On entry : 0/0
 22946 ;;		On exit  : 0/0
 22947 ;;		Unchanged: 0/0
 22948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22950 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22952 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22953 ;;Total ram usage:        3 bytes
 22954 ;; Hardware stack levels used:    1
 22955 ;; Hardware stack levels required when called:   17
 22956 ;; This function calls:
 22957 ;;		_Eeprom_Read
 22958 ;; This function is called by:
 22959 ;;		_initFsm
 22960 ;; This function uses a non-reentrant model
 22961 ;;
 22962                           
 22963                           	psect	text104
 22964  004F36                     __ptext104:
 22965                           	opt stack 0
 22966  004F36                     _initEeprom:
 22967                           	opt stack 9
 22968                           
 22969                           ;app_init.c: 129: const uint8_t addressToRead = 0;
 22970                           
 22971                           ;incstack = 0
 22972  004F36  0E00               	movlw	0
 22973  004F38  0101               	movlb	1	; () banked
 22974  004F3A  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22975                           
 22976                           ;app_init.c: 130: static eepromStates currentState = EEPROM_INIT;
 22977                           ;app_init.c: 131: EepromStsType memoryOpResult = OP_PENDING;
 22978  004F3C  0E02               	movlw	2
 22979  004F3E  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22980                           
 22981                           ;app_init.c: 132: bool isInitialized = 0;
 22982  004F40  0E00               	movlw	0
 22983  004F42  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22984                           
 22985                           ;app_init.c: 134: switch (currentState)
 22986  004F44  D031               	goto	l2691
 22987  004F46                     
 22988                           ; BSR set to: 1
 22989                           ;app_init.c: 137: memoryOpResult = Eeprom_Read(0, memoryPreamble, 5);
 22990                           
 22991                           ; BSR set to: 1
 22992  004F46  0E99               	movlw	low _memoryPreamble
 22993  004F48  0100               	movlb	0	; () banked
 22994  004F4A  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 22995  004F4C  0E03               	movlw	high _memoryPreamble
 22996  004F4E  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 22997  004F50  0E05               	movlw	5
 22998  004F52  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 22999  004F54  0E00               	movlw	0
 23000  004F56  EC7E  F02C         	call	_Eeprom_Read
 23001  004F5A  0101               	movlb	1	; () banked
 23002  004F5C  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 23003                           
 23004                           ; BSR set to: 1
 23005                           ;app_init.c: 138: if (memoryOpResult != OP_PENDING)
 23006  004F5E  0E02               	movlw	2
 23007  004F60  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 23008  004F62  B4D8               	btfsc	status,2,c
 23009  004F64  D02B               	goto	l2696
 23010                           
 23011                           ; BSR set to: 1
 23012                           ;app_init.c: 139: {
 23013                           ;app_init.c: 140: if (memoryPreamble[0] == 'U' &&
 23014                           ;app_init.c: 141: memoryPreamble[1] == 'S' &&
 23015                           ;app_init.c: 142: memoryPreamble[2] == 'I' &&
 23016                           ;app_init.c: 143: memoryPreamble[3] == 'M')
 23017  004F66  0E55               	movlw	85
 23018  004F68  0103               	movlb	3	; () banked
 23019  004F6A  1999               	xorwf	_memoryPreamble& (0+255),w,b
 23020  004F6C  A4D8               	btfss	status,2,c
 23021  004F6E  D00E               	goto	l2694
 23022                           
 23023                           ; BSR set to: 3
 23024  004F70  0E53               	movlw	83
 23025  004F72  199A               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 23026  004F74  A4D8               	btfss	status,2,c
 23027  004F76  D00A               	goto	l2694
 23028                           
 23029                           ; BSR set to: 3
 23030  004F78  0E49               	movlw	73
 23031  004F7A  199B               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 23032  004F7C  A4D8               	btfss	status,2,c
 23033  004F7E  D006               	goto	l2694
 23034                           
 23035                           ; BSR set to: 3
 23036  004F80  0E4D               	movlw	77
 23037  004F82  199C               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 23038  004F84  A4D8               	btfss	status,2,c
 23039  004F86  D002               	goto	l2694
 23040                           
 23041                           ; BSR set to: 3
 23042                           ;app_init.c: 144: {
 23043                           ;app_init.c: 145: currentState = EEPROM_NOT_EMPTY;
 23044  004F88  0E02               	movlw	2
 23045  004F8A  D003               	goto	L29
 23046  004F8C                     l2694:
 23047                           
 23048                           ; BSR set to: 3
 23049                           ;app_init.c: 147: else
 23050                           ;app_init.c: 148: {
 23051                           ;app_init.c: 149: memorizedNumbersCount[0] = memoryPreamble[4];
 23052  004F8C  C39D  F038         	movff	_memoryPreamble+4,_memorizedNumbersCount
 23053                           
 23054                           ; BSR set to: 3
 23055                           ;app_init.c: 150: currentState = EEPROM_EMPTY;
 23056  004F90  0E01               	movlw	1
 23057  004F92                     L29:
 23058  004F92  0101               	movlb	1	; () banked
 23059  004F94  6FD4               	movwf	initEeprom@currentState& (0+255),b
 23060                           
 23061                           ; BSR set to: 1
 23062                           ;app_init.c: 151: }
 23063                           ;app_init.c: 152: }
 23064                           ;app_init.c: 153: break;
 23065                           
 23066                           ; BSR set to: 1
 23067  004F96  D012               	goto	l2696
 23068  004F98                     
 23069                           ; BSR set to: 1
 23070                           ;app_init.c: 156: isInitialized = 1;
 23071                           
 23072                           ; BSR set to: 1
 23073  004F98  0E01               	movlw	1
 23074  004F9A  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 23075                           
 23076                           ;app_init.c: 157: break;
 23077  004F9C  D00F               	goto	l2696
 23078  004F9E                     
 23079                           ; BSR set to: 1
 23080                           ;app_init.c: 160: isInitialized = 1;
 23081                           
 23082                           ; BSR set to: 1
 23083  004F9E  0E01               	movlw	1
 23084  004FA0  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 23085                           
 23086                           ;app_init.c: 161: isMemoryEmpty = 0;
 23087  004FA2  0E00               	movlw	0
 23088  004FA4  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 23089                           
 23090                           ; BSR set to: 1
 23091                           ;app_init.c: 166: }
 23092                           
 23093                           ; BSR set to: 1
 23094                           ;app_init.c: 165: break;
 23095                           
 23096                           ;app_init.c: 164: default:
 23097                           
 23098                           ;app_init.c: 162: break;
 23099  004FA6  D00A               	goto	l2696
 23100  004FA8                     l2691:
 23101                           
 23102                           ; BSR set to: 1
 23103                           
 23104                           ; BSR set to: 1
 23105  004FA8  51D4               	movf	initEeprom@currentState& (0+255),w,b
 23106                           
 23107                           ; Switch size 1, requested type "space"
 23108                           ; Number of cases is 3, Range of values is 0 to 2
 23109                           ; switch strategies available:
 23110                           ; Name         Instructions Cycles
 23111                           ; simple_byte           10     6 (average)
 23112                           ;	Chosen strategy is simple_byte
 23113  004FAA  0A00               	xorlw	0	; case 0
 23114  004FAC  B4D8               	btfsc	status,2,c
 23115  004FAE  D7CB               	goto	l2692
 23116  004FB0  0A01               	xorlw	1	; case 1
 23117  004FB2  B4D8               	btfsc	status,2,c
 23118  004FB4  D7F1               	goto	l2697
 23119  004FB6  0A03               	xorlw	3	; case 2
 23120  004FB8  B4D8               	btfsc	status,2,c
 23121  004FBA  D7F1               	goto	l2698
 23122  004FBC                     l2696:
 23123                           
 23124                           ; BSR set to: 1
 23125                           ;app_init.c: 167: return isInitialized;
 23126                           
 23127                           ; BSR set to: 1
 23128  004FBC  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 23129  004FBE  0012               	return	
 23130  004FC0                     __end_of_initEeprom:
 23131                           	opt stack 0
 23132                           tosu	equ	0xFFF
 23133                           tosh	equ	0xFFE
 23134                           tosl	equ	0xFFD
 23135                           pclath	equ	0xFFA
 23136                           tblptru	equ	0xFF8
 23137                           tblptrh	equ	0xFF7
 23138                           tblptrl	equ	0xFF6
 23139                           tablat	equ	0xFF5
 23140                           prodh	equ	0xFF4
 23141                           prodl	equ	0xFF3
 23142                           intcon	equ	0xFF2
 23143                           intcon2	equ	0xFF1
 23144                           intcon3	equ	0xFF0
 23145                           indf0	equ	0xFEF
 23146                           postinc0	equ	0xFEE
 23147                           plusw0	equ	0xFEB
 23148                           fsr0h	equ	0xFEA
 23149                           fsr0l	equ	0xFE9
 23150                           wreg	equ	0xFE8
 23151                           indf1	equ	0xFE7
 23152                           postinc1	equ	0xFE6
 23153                           postdec1	equ	0xFE5
 23154                           fsr1h	equ	0xFE2
 23155                           fsr1l	equ	0xFE1
 23156                           indf2	equ	0xFDF
 23157                           postinc2	equ	0xFDE
 23158                           postdec2	equ	0xFDD
 23159                           plusw2	equ	0xFDB
 23160                           fsr2h	equ	0xFDA
 23161                           fsr2l	equ	0xFD9
 23162                           status	equ	0xFD8
 23163                           
 23164 ;; *************** function _findEmptySpot *****************
 23165 ;; Defined at:
 23166 ;;		line 211 in file "../Source/c/04_App/app_gate.c"
 23167 ;; Parameters:    Size  Location     Type
 23168 ;;		None
 23169 ;; Auto vars:     Size  Location     Type
 23170 ;;  readBuffer     13    0[BANK1 ] unsigned char [13]
 23171 ;;  memoryOpResu    1   16[BANK1 ] enum E8246
 23172 ;;  positionInMe    1   15[BANK1 ] unsigned char 
 23173 ;;  searchInProg    1   14[BANK1 ] const unsigned char 
 23174 ;;  searchFailed    1   13[BANK1 ] const unsigned char 
 23175 ;; Return value:  Size  Location     Type
 23176 ;;                  1    wreg      unsigned char 
 23177 ;; Registers used:
 23178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23179 ;; Tracked objects:
 23180 ;;		On entry : 0/0
 23181 ;;		On exit  : 0/0
 23182 ;;		Unchanged: 0/0
 23183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23185 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23187 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23188 ;;Total ram usage:       17 bytes
 23189 ;; Hardware stack levels used:    1
 23190 ;; Hardware stack levels required when called:   17
 23191 ;; This function calls:
 23192 ;;		_Eeprom_Read
 23193 ;;		_isNumberValid
 23194 ;; This function is called by:
 23195 ;;		_MyApp_Task
 23196 ;; This function uses a non-reentrant model
 23197 ;;
 23198                           
 23199                           	psect	text105
 23200  005378                     __ptext105:
 23201                           	opt stack 0
 23202  005378                     _findEmptySpot:
 23203                           	opt stack 10
 23204                           
 23205                           ;app_gate.c: 213: const uint8_t searchInProgress = 0;
 23206                           
 23207                           ; BSR set to: 1
 23208                           ;incstack = 0
 23209  005378  0E00               	movlw	0
 23210  00537A  0101               	movlb	1	; () banked
 23211  00537C  6F0E               	movwf	findEmptySpot@searchInProgress& (0+255),b
 23212                           
 23213                           ;app_gate.c: 214: const uint8_t searchFailed = 1;
 23214  00537E  0E01               	movlw	1
 23215  005380  6F0D               	movwf	findEmptySpot@searchFailed& (0+255),b
 23216                           
 23217                           ; BSR set to: 1
 23218                           ;app_gate.c: 215: static uint8_t currentPosition = 16;
 23219                           ;app_gate.c: 216: uint8_t positionInMemory = searchInProgress;
 23220  005382  C10E  F10F         	movff	findEmptySpot@searchInProgress,findEmptySpot@positionInMemory
 23221                           
 23222                           ;app_gate.c: 217: uint8_t readBuffer[((UINT8)(13))];
 23223                           ;app_gate.c: 218: EepromStsType memoryOpResult = OP_PENDING;
 23224  005386  0E02               	movlw	2
 23225  005388  6F10               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 23226                           
 23227                           ; BSR set to: 1
 23228                           ;app_gate.c: 220: if (currentPosition >= 16 * 10)
 23229  00538A  0E9F               	movlw	159
 23230  00538C  0100               	movlb	0	; () banked
 23231  00538E  65E1               	cpfsgt	findEmptySpot@currentPosition& (0+255),b
 23232  005390  D002               	goto	l2812
 23233                           
 23234                           ; BSR set to: 0
 23235                           ;app_gate.c: 221: {
 23236                           ;app_gate.c: 222: currentPosition = 16;
 23237  005392  0E10               	movlw	16
 23238  005394  6FE1               	movwf	findEmptySpot@currentPosition& (0+255),b
 23239  005396                     l2812:
 23240                           
 23241                           ; BSR set to: 0
 23242                           ;app_gate.c: 223: }
 23243                           ;app_gate.c: 224: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13)
      +                          ));
 23244                           
 23245                           ; BSR set to: 0
 23246  005396  0E00               	movlw	low findEmptySpot@readBuffer
 23247  005398  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 23248  00539A  0E01               	movlw	high findEmptySpot@readBuffer
 23249  00539C  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 23250  00539E  0E0D               	movlw	13
 23251  0053A0  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 23252  0053A2  51E1               	movf	findEmptySpot@currentPosition& (0+255),w,b
 23253  0053A4  EC7E  F02C         	call	_Eeprom_Read
 23254  0053A8  0101               	movlb	1	; () banked
 23255  0053AA  6F10               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 23256                           
 23257                           ; BSR set to: 1
 23258                           ;app_gate.c: 225: if (memoryOpResult != OP_PENDING)
 23259  0053AC  0E02               	movlw	2
 23260  0053AE  1910               	xorwf	findEmptySpot@memoryOpResult& (0+255),w,b
 23261  0053B0  B4D8               	btfsc	status,2,c
 23262  0053B2  D013               	goto	l2815
 23263                           
 23264                           ; BSR set to: 1
 23265                           ;app_gate.c: 226: {
 23266                           ;app_gate.c: 227: if (isNumberValid(readBuffer))
 23267  0053B4  0E00               	movlw	low findEmptySpot@readBuffer
 23268  0053B6  0100               	movlb	0	; () banked
 23269  0053B8  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 23270  0053BA  0E01               	movlw	high findEmptySpot@readBuffer
 23271  0053BC  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 23272  0053BE  EC8A  F02A         	call	_isNumberValid	;wreg free
 23273  0053C2  0900               	iorlw	0
 23274  0053C4  B4D8               	btfsc	status,2,c
 23275  0053C6  D004               	goto	l2814
 23276                           
 23277                           ;app_gate.c: 228: {
 23278                           ;app_gate.c: 229: currentPosition += 16;
 23279  0053C8  0E10               	movlw	16
 23280  0053CA  0100               	movlb	0	; () banked
 23281  0053CC  27E1               	addwf	findEmptySpot@currentPosition& (0+255),f,b
 23282                           
 23283                           ;app_gate.c: 230: }
 23284  0053CE  D005               	goto	l2815
 23285  0053D0                     l2814:
 23286                           
 23287                           ;app_gate.c: 231: else
 23288                           ;app_gate.c: 232: {
 23289                           ;app_gate.c: 233: positionInMemory = currentPosition;
 23290  0053D0  C0E1  F10F         	movff	findEmptySpot@currentPosition,findEmptySpot@positionInMemory
 23291                           
 23292                           ;app_gate.c: 234: currentPosition = 16 * 10;
 23293  0053D4  0EA0               	movlw	160
 23294  0053D6  0100               	movlb	0	; () banked
 23295  0053D8  6FE1               	movwf	findEmptySpot@currentPosition& (0+255),b
 23296  0053DA                     l2815:
 23297                           
 23298                           ;app_gate.c: 235: }
 23299                           ;app_gate.c: 236: }
 23300                           ;app_gate.c: 237: return positionInMemory;
 23301                           
 23302                           ; BSR set to: 0
 23303  0053DA  0101               	movlb	1	; () banked
 23304  0053DC  510F               	movf	findEmptySpot@positionInMemory& (0+255),w,b
 23305  0053DE  0012               	return	
 23306  0053E0                     __end_of_findEmptySpot:
 23307                           	opt stack 0
 23308                           tosu	equ	0xFFF
 23309                           tosh	equ	0xFFE
 23310                           tosl	equ	0xFFD
 23311                           pclath	equ	0xFFA
 23312                           tblptru	equ	0xFF8
 23313                           tblptrh	equ	0xFF7
 23314                           tblptrl	equ	0xFF6
 23315                           tablat	equ	0xFF5
 23316                           prodh	equ	0xFF4
 23317                           prodl	equ	0xFF3
 23318                           intcon	equ	0xFF2
 23319                           intcon2	equ	0xFF1
 23320                           intcon3	equ	0xFF0
 23321                           indf0	equ	0xFEF
 23322                           postinc0	equ	0xFEE
 23323                           plusw0	equ	0xFEB
 23324                           fsr0h	equ	0xFEA
 23325                           fsr0l	equ	0xFE9
 23326                           wreg	equ	0xFE8
 23327                           indf1	equ	0xFE7
 23328                           postinc1	equ	0xFE6
 23329                           postdec1	equ	0xFE5
 23330                           fsr1h	equ	0xFE2
 23331                           fsr1l	equ	0xFE1
 23332                           indf2	equ	0xFDF
 23333                           postinc2	equ	0xFDE
 23334                           postdec2	equ	0xFDD
 23335                           plusw2	equ	0xFDB
 23336                           fsr2h	equ	0xFDA
 23337                           fsr2l	equ	0xFD9
 23338                           status	equ	0xFD8
 23339                           
 23340 ;; *************** function _isNumberValid *****************
 23341 ;; Defined at:
 23342 ;;		line 152 in file "../Source/c/04_App/app_gate.c"
 23343 ;; Parameters:    Size  Location     Type
 23344 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 23345 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), smsText(20), 
 23346 ;; Auto vars:     Size  Location     Type
 23347 ;;  i               1   33[BANK0 ] unsigned char 
 23348 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 23349 ;; Return value:  Size  Location     Type
 23350 ;;                  1    wreg      unsigned char 
 23351 ;; Registers used:
 23352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23353 ;; Tracked objects:
 23354 ;;		On entry : 0/0
 23355 ;;		On exit  : 0/0
 23356 ;;		Unchanged: 0/0
 23357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23358 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23361 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23362 ;;Total ram usage:        5 bytes
 23363 ;; Hardware stack levels used:    1
 23364 ;; Hardware stack levels required when called:   11
 23365 ;; This function calls:
 23366 ;;		Nothing
 23367 ;; This function is called by:
 23368 ;;		_parseCommand
 23369 ;;		_isNumberInMemory
 23370 ;;		_findEmptySpot
 23371 ;; This function uses a non-reentrant model
 23372 ;;
 23373                           
 23374                           	psect	text106
 23375  005514                     __ptext106:
 23376                           	opt stack 0
 23377  005514                     _isNumberValid:
 23378                           	opt stack 15
 23379                           
 23380                           ;app_gate.c: 154: bool isNumberOk = 0;
 23381                           
 23382                           ; BSR set to: 1
 23383                           ;incstack = 0
 23384  005514  0E00               	movlw	0
 23385  005516  0100               	movlb	0	; () banked
 23386  005518  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 23387                           
 23388                           ;app_gate.c: 155: uint8_t i = 0;
 23389  00551A  0E00               	movlw	0
 23390  00551C  6F81               	movwf	isNumberValid@i& (0+255),b
 23391                           
 23392                           ; BSR set to: 0
 23393                           ;app_gate.c: 156: if (phoneNumber[0] == '+')
 23394  00551E  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 23395  005522  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 23396  005526  0E2B               	movlw	43
 23397  005528  18DE               	xorwf	postinc2,w,c
 23398  00552A  A4D8               	btfss	status,2,c
 23399  00552C  D024               	goto	u14130
 23400                           
 23401                           ; BSR set to: 0
 23402                           ;app_gate.c: 157: {
 23403                           ;app_gate.c: 158: for (i = 1; i < ((UINT8)(13)); i++)
 23404  00552E  0E01               	movlw	1
 23405  005530  6F81               	movwf	isNumberValid@i& (0+255),b
 23406  005532                     l14684:
 23407                           
 23408                           ; BSR set to: 0
 23409  005532  0E0C               	movlw	12
 23410  005534  6581               	cpfsgt	isNumberValid@i& (0+255),b
 23411  005536  D001               	goto	l2792
 23412  005538  D01E               	goto	u14130
 23413  00553A                     l2792:
 23414                           
 23415                           ; BSR set to: 0
 23416                           ;app_gate.c: 159: {
 23417                           ;app_gate.c: 160: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 23418                           
 23419                           ; BSR set to: 0
 23420  00553A  5181               	movf	isNumberValid@i& (0+255),w,b
 23421  00553C  0D01               	mullw	1
 23422  00553E  50F3               	movf	prodl,w,c
 23423  005540  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 23424  005542  6ED9               	movwf	fsr2l,c
 23425  005544  50F4               	movf	prodh,w,c
 23426  005546  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 23427  005548  6EDA               	movwf	fsr2h,c
 23428  00554A  0E2F               	movlw	47
 23429  00554C  64DF               	cpfsgt	indf2,c
 23430  00554E  D00E               	goto	l2794
 23431                           
 23432                           ; BSR set to: 0
 23433  005550  5181               	movf	isNumberValid@i& (0+255),w,b
 23434  005552  0D01               	mullw	1
 23435  005554  50F3               	movf	prodl,w,c
 23436  005556  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 23437  005558  6ED9               	movwf	fsr2l,c
 23438  00555A  50F4               	movf	prodh,w,c
 23439  00555C  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 23440  00555E  6EDA               	movwf	fsr2h,c
 23441  005560  0E3A               	movlw	58
 23442  005562  60DF               	cpfslt	indf2,c
 23443  005564  D003               	goto	l2794
 23444                           
 23445                           ; BSR set to: 0
 23446                           ;app_gate.c: 161: {
 23447                           ;app_gate.c: 162: isNumberOk = 1;
 23448  005566  0E01               	movlw	1
 23449  005568  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 23450                           
 23451                           ;app_gate.c: 163: }
 23452  00556A  D003               	goto	l2795
 23453  00556C                     l2794:
 23454                           
 23455                           ; BSR set to: 0
 23456                           ;app_gate.c: 164: else
 23457                           ;app_gate.c: 165: {
 23458                           ;app_gate.c: 166: isNumberOk = 0;
 23459                           
 23460                           ; BSR set to: 0
 23461  00556C  0E00               	movlw	0
 23462  00556E  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 23463                           
 23464                           ;app_gate.c: 167: break;
 23465  005570  D002               	goto	u14130
 23466  005572                     l2795:
 23467                           
 23468                           ; BSR set to: 0
 23469                           
 23470                           ; BSR set to: 0
 23471  005572  2B81               	incf	isNumberValid@i& (0+255),f,b
 23472  005574  D7DE               	goto	l14684
 23473  005576                     u14130:
 23474                           
 23475                           ; BSR set to: 0
 23476                           ;app_gate.c: 168: }
 23477                           ;app_gate.c: 169: }
 23478                           ;app_gate.c: 170: }
 23479                           ;app_gate.c: 171: return isNumberOk;
 23480                           
 23481                           ; BSR set to: 0
 23482                           
 23483                           ; BSR set to: 0
 23484  005576  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 23485  005578  0012               	return	
 23486  00557A                     __end_of_isNumberValid:
 23487                           	opt stack 0
 23488                           tosu	equ	0xFFF
 23489                           tosh	equ	0xFFE
 23490                           tosl	equ	0xFFD
 23491                           pclath	equ	0xFFA
 23492                           tblptru	equ	0xFF8
 23493                           tblptrh	equ	0xFF7
 23494                           tblptrl	equ	0xFF6
 23495                           tablat	equ	0xFF5
 23496                           prodh	equ	0xFF4
 23497                           prodl	equ	0xFF3
 23498                           intcon	equ	0xFF2
 23499                           intcon2	equ	0xFF1
 23500                           intcon3	equ	0xFF0
 23501                           indf0	equ	0xFEF
 23502                           postinc0	equ	0xFEE
 23503                           plusw0	equ	0xFEB
 23504                           fsr0h	equ	0xFEA
 23505                           fsr0l	equ	0xFE9
 23506                           wreg	equ	0xFE8
 23507                           indf1	equ	0xFE7
 23508                           postinc1	equ	0xFE6
 23509                           postdec1	equ	0xFE5
 23510                           fsr1h	equ	0xFE2
 23511                           fsr1l	equ	0xFE1
 23512                           indf2	equ	0xFDF
 23513                           postinc2	equ	0xFDE
 23514                           postdec2	equ	0xFDD
 23515                           plusw2	equ	0xFDB
 23516                           fsr2h	equ	0xFDA
 23517                           fsr2l	equ	0xFD9
 23518                           status	equ	0xFD8
 23519                           
 23520 ;; *************** function _Eeprom_Read *****************
 23521 ;; Defined at:
 23522 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 23523 ;; Parameters:    Size  Location     Type
 23524 ;;  MemoryAddres    1    wreg     unsigned char 
 23525 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 23526 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(5), 
 23527 ;;  DataLength      1   75[BANK0 ] unsigned char 
 23528 ;; Auto vars:     Size  Location     Type
 23529 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 23530 ;;  QuerySts        1   79[BANK0 ] enum E8932
 23531 ;;  ReadSts         1   78[BANK0 ] enum E8958
 23532 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 23533 ;; Return value:  Size  Location     Type
 23534 ;;                  1    wreg      enum E8958
 23535 ;; Registers used:
 23536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23537 ;; Tracked objects:
 23538 ;;		On entry : 0/0
 23539 ;;		On exit  : 0/0
 23540 ;;		Unchanged: 0/0
 23541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23542 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23543 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23545 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23546 ;;Total ram usage:        7 bytes
 23547 ;; Hardware stack levels used:    1
 23548 ;; Hardware stack levels required when called:   16
 23549 ;; This function calls:
 23550 ;;		_I2cSlv_QueryI2cData
 23551 ;; This function is called by:
 23552 ;;		_initEeprom
 23553 ;;		_isNumberInMemory
 23554 ;;		_findEmptySpot
 23555 ;; This function uses a non-reentrant model
 23556 ;;
 23557                           
 23558                           	psect	text107
 23559  0058FC                     __ptext107:
 23560                           	opt stack 0
 23561  0058FC                     _Eeprom_Read:
 23562                           	opt stack 10
 23563                           
 23564                           ; BSR set to: 0
 23565                           ;incstack = 0
 23566                           ;Eeprom_Read@MemoryAddress stored from wreg
 23567  0058FC  0100               	movlb	0	; () banked
 23568  0058FE  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 23569                           
 23570                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 23571  005900  0E50               	movlw	80
 23572  005902  0100               	movlb	0	; () banked
 23573  005904  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 23574                           
 23575                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 23576  005906  0E00               	movlw	0
 23577  005908  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 23578                           
 23579                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 23580  00590A  0E02               	movlw	2
 23581  00590C  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 23582                           
 23583                           ; BSR set to: 0
 23584                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 23585  00590E  C0AC  F1FC         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 23586                           
 23587                           ; BSR set to: 0
 23588                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 23589  005912  0EFC               	movlw	low _ReadAddress
 23590  005914  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 23591  005916  0E01               	movlw	high _ReadAddress
 23592  005918  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 23593  00591A  0E01               	movlw	1
 23594  00591C  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 23595  00591E  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 23596  005922  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 23597  005926  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 23598  00592A  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 23599  00592E  EC1F  F01D         	call	_I2cSlv_QueryI2cData	;wreg free
 23600  005932  0100               	movlb	0	; () banked
 23601  005934  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 23602                           
 23603                           ; BSR set to: 0
 23604                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 23605  005936  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 23606  005938  A4D8               	btfss	status,2,c
 23607  00593A  D002               	goto	l2035
 23608                           
 23609                           ; BSR set to: 0
 23610                           ;eeprom_if.c: 114: {
 23611                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 23612  00593C  0E00               	movlw	0
 23613  00593E  D005               	goto	L30
 23614  005940                     l2035:
 23615                           
 23616                           ; BSR set to: 0
 23617                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 23618                           
 23619                           ; BSR set to: 0
 23620  005940  0E02               	movlw	2
 23621  005942  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 23622  005944  A4D8               	btfss	status,2,c
 23623  005946  D002               	goto	l2037
 23624                           
 23625                           ; BSR set to: 0
 23626                           ;eeprom_if.c: 118: {
 23627                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 23628  005948  0E01               	movlw	1
 23629  00594A                     L30:
 23630  00594A  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 23631  00594C                     l2037:
 23632                           
 23633                           ; BSR set to: 0
 23634                           ;eeprom_if.c: 120: }
 23635                           ;eeprom_if.c: 121: return ReadSts;
 23636                           
 23637                           ; BSR set to: 0
 23638  00594C  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 23639  00594E  0012               	return	
 23640  005950                     __end_of_Eeprom_Read:
 23641                           	opt stack 0
 23642                           tosu	equ	0xFFF
 23643                           tosh	equ	0xFFE
 23644                           tosl	equ	0xFFD
 23645                           pclath	equ	0xFFA
 23646                           tblptru	equ	0xFF8
 23647                           tblptrh	equ	0xFF7
 23648                           tblptrl	equ	0xFF6
 23649                           tablat	equ	0xFF5
 23650                           prodh	equ	0xFF4
 23651                           prodl	equ	0xFF3
 23652                           intcon	equ	0xFF2
 23653                           intcon2	equ	0xFF1
 23654                           intcon3	equ	0xFF0
 23655                           indf0	equ	0xFEF
 23656                           postinc0	equ	0xFEE
 23657                           plusw0	equ	0xFEB
 23658                           fsr0h	equ	0xFEA
 23659                           fsr0l	equ	0xFE9
 23660                           wreg	equ	0xFE8
 23661                           indf1	equ	0xFE7
 23662                           postinc1	equ	0xFE6
 23663                           postdec1	equ	0xFE5
 23664                           fsr1h	equ	0xFE2
 23665                           fsr1l	equ	0xFE1
 23666                           indf2	equ	0xFDF
 23667                           postinc2	equ	0xFDE
 23668                           postdec2	equ	0xFDD
 23669                           plusw2	equ	0xFDB
 23670                           fsr2h	equ	0xFDA
 23671                           fsr2l	equ	0xFD9
 23672                           status	equ	0xFD8
 23673                           
 23674 ;; *************** function _I2cSlv_QueryI2cData *****************
 23675 ;; Defined at:
 23676 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 23677 ;; Parameters:    Size  Location     Type
 23678 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 23679 ;;		 -> ReadAddress(1), 
 23680 ;;  TxLen           1   68[BANK0 ] unsigned char 
 23681 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 23682 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(5), 
 23683 ;;  RxLen           1   71[BANK0 ] unsigned char 
 23684 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 23685 ;; Auto vars:     Size  Location     Type
 23686 ;;		None
 23687 ;; Return value:  Size  Location     Type
 23688 ;;                  1    wreg      enum E8945
 23689 ;; Registers used:
 23690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23691 ;; Tracked objects:
 23692 ;;		On entry : 0/0
 23693 ;;		On exit  : 0/0
 23694 ;;		Unchanged: 0/0
 23695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23696 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23699 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23700 ;;Total ram usage:        7 bytes
 23701 ;; Hardware stack levels used:    1
 23702 ;; Hardware stack levels required when called:   15
 23703 ;; This function calls:
 23704 ;;		_I2cSlv_I2cReadMsgSts
 23705 ;;		_I2cSlv_ReceiveI2cMsg
 23706 ;;		_I2cSlv_SendI2cMsg
 23707 ;;		_OsTmr_GetTimerStatus
 23708 ;;		_OsTmr_StartTimer
 23709 ;;		_OsTmr_Wait
 23710 ;; This function is called by:
 23711 ;;		_Eeprom_Read
 23712 ;; This function uses a non-reentrant model
 23713 ;;
 23714                           
 23715                           	psect	text108
 23716  003A3E                     __ptext108:
 23717                           	opt stack 0
 23718  003A3E                     _I2cSlv_QueryI2cData:
 23719                           	opt stack 10
 23720                           
 23721                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 23722                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 23723                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 23724                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 23725                           ;i2c_slv.c: 388: switch(I2cOpState)
 23726                           
 23727                           ; BSR set to: 0
 23728                           ;incstack = 0
 23729  003A3E  D05B               	goto	l1440
 23730  003A40                     
 23731                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 23732  003A40  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 23733  003A44  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 23734  003A48  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 23735  003A4C  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 23736  003A50  EC1B  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 23737                           
 23738                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 23739  003A54  0E01               	movlw	1
 23740  003A56  0101               	movlb	1	; () banked
 23741  003A58  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23742                           
 23743                           ; BSR set to: 1
 23744                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 23745  003A5A  0E00               	movlw	0
 23746  003A5C  D04A               	goto	L34
 23747  003A5E                     
 23748                           ; BSR set to: 1
 23749                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 23750                           
 23751                           ; BSR set to: 1
 23752  003A5E  0ECB               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 23753  003A60  0100               	movlb	0	; () banked
 23754  003A62  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 23755  003A64  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 23756  003A66  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 23757  003A68  0EF4               	movlw	244
 23758  003A6A  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 23759  003A6C  0E01               	movlw	1
 23760  003A6E  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 23761  003A70  0E00               	movlw	0
 23762  003A72  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 23763  003A74  0E00               	movlw	0
 23764  003A76  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 23765  003A78  EC65  F028         	call	_OsTmr_Wait	;wreg free
 23766  003A7C  06E8               	decf	wreg,f,c
 23767  003A7E  A4D8               	btfss	status,2,c
 23768  003A80  D036               	goto	l1448
 23769                           
 23770                           ;i2c_slv.c: 402: {
 23771                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 23772  003A82  0E42               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 23773  003A84  0100               	movlb	0	; () banked
 23774  003A86  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 23775  003A88  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 23776  003A8A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 23777  003A8C  0EC4               	movlw	196
 23778  003A8E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 23779  003A90  0E09               	movlw	9
 23780  003A92  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 23781  003A94  0E00               	movlw	0
 23782  003A96  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 23783  003A98  0E00               	movlw	0
 23784  003A9A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 23785  003A9C  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 23786                           
 23787                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 23788  003AA0  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 23789  003AA4  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 23790  003AA8  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 23791  003AAC  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 23792  003AB0  EC9C  F02F         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 23793                           
 23794                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 23795  003AB4  0E02               	movlw	2
 23796  003AB6  0101               	movlb	1	; () banked
 23797  003AB8  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23798  003ABA  D019               	goto	l1448
 23799  003ABC                     
 23800                           ; BSR set to: 1
 23801                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 23802                           
 23803                           ; BSR set to: 1
 23804  003ABC  ECD8  F032         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 23805  003AC0  06E8               	decf	wreg,f,c
 23806  003AC2  A4D8               	btfss	status,2,c
 23807  003AC4  D005               	goto	l1446
 23808                           
 23809                           ;i2c_slv.c: 414: {
 23810                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 23811  003AC6  0E00               	movlw	0
 23812  003AC8  0101               	movlb	1	; () banked
 23813  003ACA  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23814                           
 23815                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 23816  003ACC  0E01               	movlw	1
 23817  003ACE  D011               	goto	L34
 23818  003AD0                     l1446:
 23819                           
 23820                           ;i2c_slv.c: 420: else
 23821                           ;i2c_slv.c: 421: {
 23822                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 23823                           
 23824                           ; BSR set to: 1
 23825  003AD0  0E42               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 23826  003AD2  0100               	movlb	0	; () banked
 23827  003AD4  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 23828  003AD6  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 23829  003AD8  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 23830  003ADA  ECC6  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 23831  003ADE  06E8               	decf	wreg,f,c
 23832  003AE0  A4D8               	btfss	status,2,c
 23833  003AE2  D005               	goto	l1448
 23834                           
 23835                           ;i2c_slv.c: 423: {
 23836                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 23837  003AE4  0E00               	movlw	0
 23838  003AE6  0101               	movlb	1	; () banked
 23839  003AE8  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23840                           
 23841                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 23842  003AEA  0E02               	movlw	2
 23843  003AEC  D002               	goto	L34
 23844  003AEE                     l1448:
 23845                           
 23846                           ;i2c_slv.c: 429: else
 23847                           ;i2c_slv.c: 430: {
 23848                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 23849                           
 23850                           ; BSR set to: 1
 23851  003AEE  0E00               	movlw	0
 23852  003AF0  0101               	movlb	1	; () banked
 23853  003AF2                     L34:
 23854  003AF2  6FE4               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 23855                           
 23856                           ; BSR set to: 1
 23857                           ;i2c_slv.c: 439: }
 23858                           
 23859                           ; BSR set to: 1
 23860                           ;i2c_slv.c: 438: break;
 23861                           
 23862                           ;i2c_slv.c: 437: default:
 23863                           
 23864                           ; BSR set to: 1
 23865                           ;i2c_slv.c: 433: }
 23866                           ;i2c_slv.c: 434: }
 23867                           ;i2c_slv.c: 435: break;
 23868                           
 23869                           ; BSR set to: 1
 23870  003AF4  D00B               	goto	l1442
 23871  003AF6                     l1440:
 23872                           
 23873                           ; BSR set to: 1
 23874  003AF6  0101               	movlb	1	; () banked
 23875  003AF8  51E5               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 23876                           
 23877                           ; Switch size 1, requested type "space"
 23878                           ; Number of cases is 3, Range of values is 0 to 2
 23879                           ; switch strategies available:
 23880                           ; Name         Instructions Cycles
 23881                           ; simple_byte           10     6 (average)
 23882                           ;	Chosen strategy is simple_byte
 23883  003AFA  0A00               	xorlw	0	; case 0
 23884  003AFC  B4D8               	btfsc	status,2,c
 23885  003AFE  D7A0               	goto	l1441
 23886  003B00  0A01               	xorlw	1	; case 1
 23887  003B02  B4D8               	btfsc	status,2,c
 23888  003B04  D7AC               	goto	l1443
 23889  003B06  0A03               	xorlw	3	; case 2
 23890  003B08  B4D8               	btfsc	status,2,c
 23891  003B0A  D7D8               	goto	l1445
 23892  003B0C                     l1442:
 23893                           
 23894                           ; BSR set to: 1
 23895                           ;i2c_slv.c: 441: return Ret;
 23896                           
 23897                           ; BSR set to: 1
 23898  003B0C  51E4               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 23899  003B0E  0012               	return	
 23900  003B10                     __end_of_I2cSlv_QueryI2cData:
 23901                           	opt stack 0
 23902                           tosu	equ	0xFFF
 23903                           tosh	equ	0xFFE
 23904                           tosl	equ	0xFFD
 23905                           pclath	equ	0xFFA
 23906                           tblptru	equ	0xFF8
 23907                           tblptrh	equ	0xFF7
 23908                           tblptrl	equ	0xFF6
 23909                           tablat	equ	0xFF5
 23910                           prodh	equ	0xFF4
 23911                           prodl	equ	0xFF3
 23912                           intcon	equ	0xFF2
 23913                           intcon2	equ	0xFF1
 23914                           intcon3	equ	0xFF0
 23915                           indf0	equ	0xFEF
 23916                           postinc0	equ	0xFEE
 23917                           plusw0	equ	0xFEB
 23918                           fsr0h	equ	0xFEA
 23919                           fsr0l	equ	0xFE9
 23920                           wreg	equ	0xFE8
 23921                           indf1	equ	0xFE7
 23922                           postinc1	equ	0xFE6
 23923                           postdec1	equ	0xFE5
 23924                           fsr1h	equ	0xFE2
 23925                           fsr1l	equ	0xFE1
 23926                           indf2	equ	0xFDF
 23927                           postinc2	equ	0xFDE
 23928                           postdec2	equ	0xFDD
 23929                           plusw2	equ	0xFDB
 23930                           fsr2h	equ	0xFDA
 23931                           fsr2l	equ	0xFD9
 23932                           status	equ	0xFD8
 23933                           
 23934 ;; *************** function _OsTmr_Wait *****************
 23935 ;; Defined at:
 23936 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 23937 ;; Parameters:    Size  Location     Type
 23938 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 23939 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 23940 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 23941 ;; Auto vars:     Size  Location     Type
 23942 ;;  Ret             1   65[BANK0 ] enum E7749
 23943 ;; Return value:  Size  Location     Type
 23944 ;;                  1    wreg      enum E7749
 23945 ;; Registers used:
 23946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23947 ;; Tracked objects:
 23948 ;;		On entry : 0/0
 23949 ;;		On exit  : 0/0
 23950 ;;		Unchanged: 0/0
 23951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23952 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23955 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23956 ;;Total ram usage:        7 bytes
 23957 ;; Hardware stack levels used:    1
 23958 ;; Hardware stack levels required when called:   14
 23959 ;; This function calls:
 23960 ;;		_OsTmr_GetTimerStatus
 23961 ;;		_OsTmr_StartTimer
 23962 ;; This function is called by:
 23963 ;;		_I2cSlv_QueryI2cData
 23964 ;;		_Terminal
 23965 ;; This function uses a non-reentrant model
 23966 ;;
 23967                           
 23968                           	psect	text109
 23969  0050CA                     __ptext109:
 23970                           	opt stack 0
 23971  0050CA                     _OsTmr_Wait:
 23972                           	opt stack 11
 23973                           
 23974                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 23975                           
 23976                           ; BSR set to: 1
 23977                           ;incstack = 0
 23978  0050CA  0E00               	movlw	0
 23979  0050CC  0100               	movlb	0	; () banked
 23980  0050CE  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 23981                           
 23982                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 23983  0050D0  D02D               	goto	l855
 23984  0050D2                     
 23985                           ; BSR set to: 0
 23986                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 23987                           
 23988                           ; BSR set to: 0
 23989  0050D2  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 23990  0050D6  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 23991  0050DA  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 23992  0050DE  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 23993  0050E2  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 23994  0050E6  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 23995  0050EA  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 23996                           
 23997                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 23998  0050EE  0100               	movlb	0	; () banked
 23999  0050F0  EE20 F00A          	lfsr	2,10
 24000  0050F4  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 24001  0050F6  26D9               	addwf	fsr2l,f,c
 24002  0050F8  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 24003  0050FA  22DA               	addwfc	fsr2h,f,c
 24004  0050FC  0E01               	movlw	1
 24005  0050FE  6EDF               	movwf	indf2,c
 24006                           
 24007                           ;os_timers.c: 165: break;
 24008  005100  D022               	goto	l857
 24009  005102                     
 24010                           ; BSR set to: 0
 24011                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 24012                           
 24013                           ; BSR set to: 0
 24014  005102  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 24015  005106  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 24016  00510A  ECC6  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 24017  00510E  06E8               	decf	wreg,f,c
 24018  005110  A4D8               	btfss	status,2,c
 24019  005112  D019               	goto	l857
 24020                           
 24021                           ;os_timers.c: 170: {
 24022                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 24023  005114  0100               	movlb	0	; () banked
 24024  005116  EE20 F00A          	lfsr	2,10
 24025  00511A  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 24026  00511C  26D9               	addwf	fsr2l,f,c
 24027  00511E  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 24028  005120  22DA               	addwfc	fsr2h,f,c
 24029  005122  0E00               	movlw	0
 24030  005124  6EDF               	movwf	indf2,c
 24031                           
 24032                           ; BSR set to: 0
 24033                           ;os_timers.c: 174: Ret = DelayExpired;
 24034  005126  0E01               	movlw	1
 24035  005128  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 24036                           
 24037                           ; BSR set to: 0
 24038                           ;os_timers.c: 180: }
 24039                           
 24040                           ; BSR set to: 0
 24041                           ;os_timers.c: 179: break;
 24042                           
 24043                           ;os_timers.c: 178: default:
 24044                           
 24045                           ; BSR set to: 0
 24046                           ;os_timers.c: 175: }
 24047                           ;os_timers.c: 176: break;
 24048  00512A  D00D               	goto	l857
 24049  00512C                     l855:
 24050                           
 24051                           ; BSR set to: 0
 24052                           
 24053                           ; BSR set to: 0
 24054  00512C  EE20 F00A          	lfsr	2,10
 24055  005130  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 24056  005132  26D9               	addwf	fsr2l,f,c
 24057  005134  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 24058  005136  22DA               	addwfc	fsr2h,f,c
 24059  005138  50DF               	movf	indf2,w,c
 24060                           
 24061                           ; Switch size 1, requested type "space"
 24062                           ; Number of cases is 2, Range of values is 0 to 1
 24063                           ; switch strategies available:
 24064                           ; Name         Instructions Cycles
 24065                           ; simple_byte            7     4 (average)
 24066                           ;	Chosen strategy is simple_byte
 24067  00513A  0A00               	xorlw	0	; case 0
 24068  00513C  B4D8               	btfsc	status,2,c
 24069  00513E  D7C9               	goto	l856
 24070  005140  0A01               	xorlw	1	; case 1
 24071  005142  B4D8               	btfsc	status,2,c
 24072  005144  D7DE               	goto	l858
 24073  005146                     l857:
 24074                           
 24075                           ;os_timers.c: 182: return Ret;
 24076                           
 24077                           ; BSR set to: 0
 24078  005146  0100               	movlb	0	; () banked
 24079  005148  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 24080  00514A  0012               	return	
 24081  00514C                     __end_of_OsTmr_Wait:
 24082                           	opt stack 0
 24083                           tosu	equ	0xFFF
 24084                           tosh	equ	0xFFE
 24085                           tosl	equ	0xFFD
 24086                           pclath	equ	0xFFA
 24087                           tblptru	equ	0xFF8
 24088                           tblptrh	equ	0xFF7
 24089                           tblptrl	equ	0xFF6
 24090                           tablat	equ	0xFF5
 24091                           prodh	equ	0xFF4
 24092                           prodl	equ	0xFF3
 24093                           intcon	equ	0xFF2
 24094                           intcon2	equ	0xFF1
 24095                           intcon3	equ	0xFF0
 24096                           indf0	equ	0xFEF
 24097                           postinc0	equ	0xFEE
 24098                           plusw0	equ	0xFEB
 24099                           fsr0h	equ	0xFEA
 24100                           fsr0l	equ	0xFE9
 24101                           wreg	equ	0xFE8
 24102                           indf1	equ	0xFE7
 24103                           postinc1	equ	0xFE6
 24104                           postdec1	equ	0xFE5
 24105                           fsr1h	equ	0xFE2
 24106                           fsr1l	equ	0xFE1
 24107                           indf2	equ	0xFDF
 24108                           postinc2	equ	0xFDE
 24109                           postdec2	equ	0xFDD
 24110                           plusw2	equ	0xFDB
 24111                           fsr2h	equ	0xFDA
 24112                           fsr2l	equ	0xFD9
 24113                           status	equ	0xFD8
 24114                           
 24115 ;; *************** function _I2cSlv_SendI2cMsg *****************
 24116 ;; Defined at:
 24117 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24118 ;; Parameters:    Size  Location     Type
 24119 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 24120 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 24121 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 24122 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 24123 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 24124 ;; Auto vars:     Size  Location     Type
 24125 ;;  TxSts           1   36[BANK0 ] unsigned char 
 24126 ;; Return value:  Size  Location     Type
 24127 ;;                  1    wreg      unsigned char 
 24128 ;; Registers used:
 24129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24130 ;; Tracked objects:
 24131 ;;		On entry : 0/0
 24132 ;;		On exit  : 0/0
 24133 ;;		Unchanged: 0/0
 24134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24135 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24136 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24138 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24139 ;;Total ram usage:        5 bytes
 24140 ;; Hardware stack levels used:    1
 24141 ;; Hardware stack levels required when called:   12
 24142 ;; This function calls:
 24143 ;;		_GenerateEvt
 24144 ;; This function is called by:
 24145 ;;		_I2cSlv_QueryI2cData
 24146 ;;		_Eeprom_Write
 24147 ;;		_Terminal
 24148 ;;		_triggerRelay
 24149 ;; This function uses a non-reentrant model
 24150 ;;
 24151                           
 24152                           	psect	text110
 24153  006036                     __ptext110:
 24154                           	opt stack 0
 24155  006036                     _I2cSlv_SendI2cMsg:
 24156                           	opt stack 13
 24157                           
 24158                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 24159                           
 24160                           ; BSR set to: 0
 24161                           ;incstack = 0
 24162  006036  0E00               	movlw	0
 24163  006038  0100               	movlb	0	; () banked
 24164  00603A  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 24165                           
 24166                           ; BSR set to: 0
 24167                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 24168  00603C  05CD               	decf	_I2cComSts& (0+255),w,b
 24169  00603E  B4D8               	btfsc	status,2,c
 24170  006040  D015               	goto	l1412
 24171                           
 24172                           ; BSR set to: 0
 24173                           ;i2c_slv.c: 257: {
 24174                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 24175  006042  C082  F39E         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 24176                           
 24177                           ; BSR set to: 0
 24178                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 24179  006046  0E00               	movlw	0
 24180  006048  0103               	movlb	3	; () banked
 24181  00604A  6F9F               	movwf	(_I2cTxPacket+1)& (0+255),b
 24182                           
 24183                           ; BSR set to: 3
 24184                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 24185  00604C  C083  F3A2         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 24186                           
 24187                           ; BSR set to: 3
 24188                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 24189  006050  C080  F3A0         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 24190  006054  C081  F3A1         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 24191                           
 24192                           ; BSR set to: 3
 24193                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 24194  006058  0ED7               	movlw	low _I2cWriteDataEvt
 24195  00605A  0100               	movlb	0	; () banked
 24196  00605C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24197  00605E  0E00               	movlw	high _I2cWriteDataEvt
 24198  006060  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24199  006062  EC9F  F033         	call	_GenerateEvt	;wreg free
 24200                           
 24201                           ;i2c_slv.c: 267: TxSts = 1u;
 24202  006066  0E01               	movlw	1
 24203  006068  0100               	movlb	0	; () banked
 24204  00606A  D001               	goto	L35
 24205  00606C                     l1412:
 24206                           
 24207                           ; BSR set to: 0
 24208                           ;i2c_slv.c: 269: else
 24209                           ;i2c_slv.c: 270: {
 24210                           ;i2c_slv.c: 272: TxSts = 0u;
 24211                           
 24212                           ; BSR set to: 0
 24213  00606C  0E00               	movlw	0
 24214  00606E                     L35:
 24215  00606E  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 24216                           
 24217                           ; BSR set to: 0
 24218                           ;i2c_slv.c: 273: }
 24219                           ;i2c_slv.c: 275: return TxSts;
 24220  006070  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 24221  006072  0012               	return	
 24222  006074                     __end_of_I2cSlv_SendI2cMsg:
 24223                           	opt stack 0
 24224                           tosu	equ	0xFFF
 24225                           tosh	equ	0xFFE
 24226                           tosl	equ	0xFFD
 24227                           pclath	equ	0xFFA
 24228                           tblptru	equ	0xFF8
 24229                           tblptrh	equ	0xFF7
 24230                           tblptrl	equ	0xFF6
 24231                           tablat	equ	0xFF5
 24232                           prodh	equ	0xFF4
 24233                           prodl	equ	0xFF3
 24234                           intcon	equ	0xFF2
 24235                           intcon2	equ	0xFF1
 24236                           intcon3	equ	0xFF0
 24237                           indf0	equ	0xFEF
 24238                           postinc0	equ	0xFEE
 24239                           plusw0	equ	0xFEB
 24240                           fsr0h	equ	0xFEA
 24241                           fsr0l	equ	0xFE9
 24242                           wreg	equ	0xFE8
 24243                           indf1	equ	0xFE7
 24244                           postinc1	equ	0xFE6
 24245                           postdec1	equ	0xFE5
 24246                           fsr1h	equ	0xFE2
 24247                           fsr1l	equ	0xFE1
 24248                           indf2	equ	0xFDF
 24249                           postinc2	equ	0xFDE
 24250                           postdec2	equ	0xFDD
 24251                           plusw2	equ	0xFDB
 24252                           fsr2h	equ	0xFDA
 24253                           fsr2l	equ	0xFD9
 24254                           status	equ	0xFD8
 24255                           
 24256 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 24257 ;; Defined at:
 24258 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24259 ;; Parameters:    Size  Location     Type
 24260 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 24261 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(5), Terminal@TermRxBuffer(50), 
 24262 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 24263 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 24264 ;; Auto vars:     Size  Location     Type
 24265 ;;  RxSts           1   36[BANK0 ] unsigned char 
 24266 ;; Return value:  Size  Location     Type
 24267 ;;                  1    wreg      unsigned char 
 24268 ;; Registers used:
 24269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24270 ;; Tracked objects:
 24271 ;;		On entry : 0/0
 24272 ;;		On exit  : 0/0
 24273 ;;		Unchanged: 0/0
 24274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24275 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24276 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24278 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24279 ;;Total ram usage:        5 bytes
 24280 ;; Hardware stack levels used:    1
 24281 ;; Hardware stack levels required when called:   12
 24282 ;; This function calls:
 24283 ;;		_GenerateEvt
 24284 ;; This function is called by:
 24285 ;;		_I2cSlv_QueryI2cData
 24286 ;;		_Terminal
 24287 ;; This function uses a non-reentrant model
 24288 ;;
 24289                           
 24290                           	psect	text111
 24291  005F38                     __ptext111:
 24292                           	opt stack 0
 24293  005F38                     _I2cSlv_ReceiveI2cMsg:
 24294                           	opt stack 13
 24295                           
 24296                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 24297                           
 24298                           ; BSR set to: 0
 24299                           ;incstack = 0
 24300  005F38  0E00               	movlw	0
 24301  005F3A  0100               	movlb	0	; () banked
 24302  005F3C  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 24303                           
 24304                           ; BSR set to: 0
 24305                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 24306  005F3E  0E02               	movlw	2
 24307  005F40  19CD               	xorwf	_I2cComSts& (0+255),w,b
 24308  005F42  B4D8               	btfsc	status,2,c
 24309  005F44  D016               	goto	l1417
 24310                           
 24311                           ; BSR set to: 0
 24312                           ;i2c_slv.c: 294: {
 24313                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 24314  005F46  C082  F393         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 24315                           
 24316                           ; BSR set to: 0
 24317                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 24318  005F4A  0E01               	movlw	1
 24319  005F4C  0103               	movlb	3	; () banked
 24320  005F4E  6F94               	movwf	(_I2cRxPacket+1)& (0+255),b
 24321                           
 24322                           ; BSR set to: 3
 24323                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 24324  005F50  C083  F397         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 24325                           
 24326                           ; BSR set to: 3
 24327                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 24328  005F54  C080  F395         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 24329  005F58  C081  F396         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 24330                           
 24331                           ; BSR set to: 3
 24332                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 24333  005F5C  0ED6               	movlw	low _I2cReadDataEvt
 24334  005F5E  0100               	movlb	0	; () banked
 24335  005F60  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24336  005F62  0E00               	movlw	high _I2cReadDataEvt
 24337  005F64  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24338  005F66  EC9F  F033         	call	_GenerateEvt	;wreg free
 24339                           
 24340                           ;i2c_slv.c: 304: RxSts = 1u;
 24341  005F6A  0E01               	movlw	1
 24342  005F6C  0100               	movlb	0	; () banked
 24343  005F6E  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 24344                           
 24345                           ;i2c_slv.c: 305: }
 24346  005F70  0012               	return	
 24347  005F72                     l1417:
 24348                           
 24349                           ; BSR set to: 0
 24350                           ;i2c_slv.c: 306: else
 24351                           ;i2c_slv.c: 307: {
 24352                           ;i2c_slv.c: 309: RxSts = 0u;
 24353                           
 24354                           ; BSR set to: 0
 24355  005F72  0E00               	movlw	0
 24356  005F74  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 24357                           
 24358                           ; BSR set to: 0
 24359  005F76  0012               	return	
 24360  005F78                     __end_of_I2cSlv_ReceiveI2cMsg:
 24361                           	opt stack 0
 24362                           tosu	equ	0xFFF
 24363                           tosh	equ	0xFFE
 24364                           tosl	equ	0xFFD
 24365                           pclath	equ	0xFFA
 24366                           tblptru	equ	0xFF8
 24367                           tblptrh	equ	0xFF7
 24368                           tblptrl	equ	0xFF6
 24369                           tablat	equ	0xFF5
 24370                           prodh	equ	0xFF4
 24371                           prodl	equ	0xFF3
 24372                           intcon	equ	0xFF2
 24373                           intcon2	equ	0xFF1
 24374                           intcon3	equ	0xFF0
 24375                           indf0	equ	0xFEF
 24376                           postinc0	equ	0xFEE
 24377                           plusw0	equ	0xFEB
 24378                           fsr0h	equ	0xFEA
 24379                           fsr0l	equ	0xFE9
 24380                           wreg	equ	0xFE8
 24381                           indf1	equ	0xFE7
 24382                           postinc1	equ	0xFE6
 24383                           postdec1	equ	0xFE5
 24384                           fsr1h	equ	0xFE2
 24385                           fsr1l	equ	0xFE1
 24386                           indf2	equ	0xFDF
 24387                           postinc2	equ	0xFDE
 24388                           postdec2	equ	0xFDD
 24389                           plusw2	equ	0xFDB
 24390                           fsr2h	equ	0xFDA
 24391                           fsr2l	equ	0xFD9
 24392                           status	equ	0xFD8
 24393                           
 24394 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 24395 ;; Defined at:
 24396 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24397 ;; Parameters:    Size  Location     Type
 24398 ;;		None
 24399 ;; Auto vars:     Size  Location     Type
 24400 ;;  Result          1   33[BANK0 ] enum E8933
 24401 ;; Return value:  Size  Location     Type
 24402 ;;                  1    wreg      enum E8933
 24403 ;; Registers used:
 24404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24405 ;; Tracked objects:
 24406 ;;		On entry : 0/0
 24407 ;;		On exit  : 0/0
 24408 ;;		Unchanged: 0/0
 24409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24411 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24413 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24414 ;;Total ram usage:        1 bytes
 24415 ;; Hardware stack levels used:    1
 24416 ;; Hardware stack levels required when called:   12
 24417 ;; This function calls:
 24418 ;;		_ReceiveEvt
 24419 ;; This function is called by:
 24420 ;;		_I2cSlv_QueryI2cData
 24421 ;;		_Terminal
 24422 ;; This function uses a non-reentrant model
 24423 ;;
 24424                           
 24425                           	psect	text112
 24426  0065B0                     __ptext112:
 24427                           	opt stack 0
 24428  0065B0                     _I2cSlv_I2cReadMsgSts:
 24429                           	opt stack 13
 24430                           
 24431                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 24432                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 24433                           
 24434                           ; BSR set to: 0
 24435                           ;incstack = 0
 24436  0065B0  0E98               	movlw	low (_I2cRxPacket+5)
 24437  0065B2  0100               	movlb	0	; () banked
 24438  0065B4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24439  0065B6  0E03               	movlw	high (_I2cRxPacket+5)
 24440  0065B8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24441  0065BA  ECAA  F031         	call	_ReceiveEvt	;wreg free
 24442  0065BE  0900               	iorlw	0
 24443  0065C0  B4D8               	btfsc	status,2,c
 24444  0065C2  D002               	goto	l1422
 24445                           
 24446                           ;i2c_slv.c: 331: {
 24447                           ;i2c_slv.c: 332: Result = MessageReceived;
 24448  0065C4  0E01               	movlw	1
 24449  0065C6  D001               	goto	L36
 24450  0065C8                     l1422:
 24451                           
 24452                           ;i2c_slv.c: 334: else
 24453                           ;i2c_slv.c: 335: {
 24454                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 24455                           
 24456                           ; BSR set to: 0
 24457  0065C8  0E00               	movlw	0
 24458  0065CA                     L36:
 24459  0065CA  0100               	movlb	0	; () banked
 24460  0065CC  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 24461                           
 24462                           ; BSR set to: 0
 24463                           ;i2c_slv.c: 337: }
 24464                           ;i2c_slv.c: 339: return Result;
 24465  0065CE  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 24466  0065D0  0012               	return	
 24467  0065D2                     __end_of_I2cSlv_I2cReadMsgSts:
 24468                           	opt stack 0
 24469                           tosu	equ	0xFFF
 24470                           tosh	equ	0xFFE
 24471                           tosl	equ	0xFFD
 24472                           pclath	equ	0xFFA
 24473                           tblptru	equ	0xFF8
 24474                           tblptrh	equ	0xFF7
 24475                           tblptrl	equ	0xFF6
 24476                           tablat	equ	0xFF5
 24477                           prodh	equ	0xFF4
 24478                           prodl	equ	0xFF3
 24479                           intcon	equ	0xFF2
 24480                           intcon2	equ	0xFF1
 24481                           intcon3	equ	0xFF0
 24482                           indf0	equ	0xFEF
 24483                           postinc0	equ	0xFEE
 24484                           plusw0	equ	0xFEB
 24485                           fsr0h	equ	0xFEA
 24486                           fsr0l	equ	0xFE9
 24487                           wreg	equ	0xFE8
 24488                           indf1	equ	0xFE7
 24489                           postinc1	equ	0xFE6
 24490                           postdec1	equ	0xFE5
 24491                           fsr1h	equ	0xFE2
 24492                           fsr1l	equ	0xFE1
 24493                           indf2	equ	0xFDF
 24494                           postinc2	equ	0xFDE
 24495                           postdec2	equ	0xFDD
 24496                           plusw2	equ	0xFDB
 24497                           fsr2h	equ	0xFDA
 24498                           fsr2l	equ	0xFD9
 24499                           status	equ	0xFD8
 24500                           
 24501 ;; *************** function _Mdm_RequestSmsData *****************
 24502 ;; Defined at:
 24503 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24504 ;; Parameters:    Size  Location     Type
 24505 ;;		None
 24506 ;; Auto vars:     Size  Location     Type
 24507 ;;		None
 24508 ;; Return value:  Size  Location     Type
 24509 ;;                  1    wreg      void 
 24510 ;; Registers used:
 24511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24512 ;; Tracked objects:
 24513 ;;		On entry : 0/0
 24514 ;;		On exit  : 0/0
 24515 ;;		Unchanged: 0/0
 24516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24521 ;;Total ram usage:        0 bytes
 24522 ;; Hardware stack levels used:    1
 24523 ;; Hardware stack levels required when called:   12
 24524 ;; This function calls:
 24525 ;;		_GenerateEvt
 24526 ;; This function is called by:
 24527 ;;		_MyApp_Task
 24528 ;; This function uses a non-reentrant model
 24529 ;;
 24530                           
 24531                           	psect	text113
 24532  006830                     __ptext113:
 24533                           	opt stack 0
 24534  006830                     _Mdm_RequestSmsData:
 24535                           	opt stack 15
 24536                           
 24537                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 24538                           
 24539                           ; BSR set to: 0
 24540                           ;incstack = 0
 24541  006830  0EDB               	movlw	low _GetSmsText
 24542  006832  0100               	movlb	0	; () banked
 24543  006834  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24544  006836  0E00               	movlw	high _GetSmsText
 24545  006838  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24546  00683A  EC9F  F033         	call	_GenerateEvt	;wreg free
 24547  00683E  0012               	return		;funcret
 24548  006840                     __end_of_Mdm_RequestSmsData:
 24549                           	opt stack 0
 24550                           tosu	equ	0xFFF
 24551                           tosh	equ	0xFFE
 24552                           tosl	equ	0xFFD
 24553                           pclath	equ	0xFFA
 24554                           tblptru	equ	0xFF8
 24555                           tblptrh	equ	0xFF7
 24556                           tblptrl	equ	0xFF6
 24557                           tablat	equ	0xFF5
 24558                           prodh	equ	0xFF4
 24559                           prodl	equ	0xFF3
 24560                           intcon	equ	0xFF2
 24561                           intcon2	equ	0xFF1
 24562                           intcon3	equ	0xFF0
 24563                           indf0	equ	0xFEF
 24564                           postinc0	equ	0xFEE
 24565                           plusw0	equ	0xFEB
 24566                           fsr0h	equ	0xFEA
 24567                           fsr0l	equ	0xFE9
 24568                           wreg	equ	0xFE8
 24569                           indf1	equ	0xFE7
 24570                           postinc1	equ	0xFE6
 24571                           postdec1	equ	0xFE5
 24572                           fsr1h	equ	0xFE2
 24573                           fsr1l	equ	0xFE1
 24574                           indf2	equ	0xFDF
 24575                           postinc2	equ	0xFDE
 24576                           postdec2	equ	0xFDD
 24577                           plusw2	equ	0xFDB
 24578                           fsr2h	equ	0xFDA
 24579                           fsr2l	equ	0xFD9
 24580                           status	equ	0xFD8
 24581                           
 24582 ;; *************** function _Mdm_IsSmsReceived *****************
 24583 ;; Defined at:
 24584 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24585 ;; Parameters:    Size  Location     Type
 24586 ;;		None
 24587 ;; Auto vars:     Size  Location     Type
 24588 ;;  Ret             1   33[BANK0 ] enum E8928
 24589 ;; Return value:  Size  Location     Type
 24590 ;;                  1    wreg      enum E8928
 24591 ;; Registers used:
 24592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24593 ;; Tracked objects:
 24594 ;;		On entry : 0/0
 24595 ;;		On exit  : 0/0
 24596 ;;		Unchanged: 0/0
 24597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24599 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24601 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24602 ;;Total ram usage:        1 bytes
 24603 ;; Hardware stack levels used:    1
 24604 ;; Hardware stack levels required when called:   12
 24605 ;; This function calls:
 24606 ;;		_ReceiveEvt
 24607 ;; This function is called by:
 24608 ;;		_MyApp_Task
 24609 ;; This function uses a non-reentrant model
 24610 ;;
 24611                           
 24612                           	psect	text114
 24613  0064BE                     __ptext114:
 24614                           	opt stack 0
 24615  0064BE                     _Mdm_IsSmsReceived:
 24616                           	opt stack 15
 24617                           
 24618                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 24619                           
 24620                           ;incstack = 0
 24621  0064BE  0E00               	movlw	0
 24622  0064C0  0100               	movlb	0	; () banked
 24623  0064C2  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 24624                           
 24625                           ; BSR set to: 0
 24626                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 24627  0064C4  0EDC               	movlw	low _SmsEvent
 24628  0064C6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24629  0064C8  0E00               	movlw	high _SmsEvent
 24630  0064CA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24631  0064CC  ECAA  F031         	call	_ReceiveEvt	;wreg free
 24632  0064D0  0900               	iorlw	0
 24633  0064D2  B4D8               	btfsc	status,2,c
 24634  0064D4  D003               	goto	l1136
 24635                           
 24636                           ;mdm_gsm_gprs.c: 947: {
 24637                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 24638  0064D6  0E01               	movlw	1
 24639  0064D8  0100               	movlb	0	; () banked
 24640  0064DA  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 24641  0064DC                     l1136:
 24642                           
 24643                           ;mdm_gsm_gprs.c: 949: }
 24644                           ;mdm_gsm_gprs.c: 951: return Ret;
 24645  0064DC  0100               	movlb	0	; () banked
 24646  0064DE  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 24647  0064E0  0012               	return	
 24648  0064E2                     __end_of_Mdm_IsSmsReceived:
 24649                           	opt stack 0
 24650                           tosu	equ	0xFFF
 24651                           tosh	equ	0xFFE
 24652                           tosl	equ	0xFFD
 24653                           pclath	equ	0xFFA
 24654                           tblptru	equ	0xFF8
 24655                           tblptrh	equ	0xFF7
 24656                           tblptrl	equ	0xFF6
 24657                           tablat	equ	0xFF5
 24658                           prodh	equ	0xFF4
 24659                           prodl	equ	0xFF3
 24660                           intcon	equ	0xFF2
 24661                           intcon2	equ	0xFF1
 24662                           intcon3	equ	0xFF0
 24663                           indf0	equ	0xFEF
 24664                           postinc0	equ	0xFEE
 24665                           plusw0	equ	0xFEB
 24666                           fsr0h	equ	0xFEA
 24667                           fsr0l	equ	0xFE9
 24668                           wreg	equ	0xFE8
 24669                           indf1	equ	0xFE7
 24670                           postinc1	equ	0xFE6
 24671                           postdec1	equ	0xFE5
 24672                           fsr1h	equ	0xFE2
 24673                           fsr1l	equ	0xFE1
 24674                           indf2	equ	0xFDF
 24675                           postinc2	equ	0xFDE
 24676                           postdec2	equ	0xFDD
 24677                           plusw2	equ	0xFDB
 24678                           fsr2h	equ	0xFDA
 24679                           fsr2l	equ	0xFD9
 24680                           status	equ	0xFD8
 24681                           
 24682 ;; *************** function _Mdm_GetSmsData *****************
 24683 ;; Defined at:
 24684 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24685 ;; Parameters:    Size  Location     Type
 24686 ;;  MessageText     2   47[BANK0 ] PTR unsigned char 
 24687 ;;		 -> smsText(20), 
 24688 ;; Auto vars:     Size  Location     Type
 24689 ;;  GetSmsStatus    1   49[BANK0 ] enum E8920
 24690 ;; Return value:  Size  Location     Type
 24691 ;;                  1    wreg      enum E8920
 24692 ;; Registers used:
 24693 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24694 ;; Tracked objects:
 24695 ;;		On entry : 0/0
 24696 ;;		On exit  : 0/0
 24697 ;;		Unchanged: 0/0
 24698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24699 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24700 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24702 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24703 ;;Total ram usage:        3 bytes
 24704 ;; Hardware stack levels used:    1
 24705 ;; Hardware stack levels required when called:   12
 24706 ;; This function calls:
 24707 ;;		_ReceiveEvt
 24708 ;;		_StringCopy
 24709 ;; This function is called by:
 24710 ;;		_MyApp_Task
 24711 ;; This function uses a non-reentrant model
 24712 ;;
 24713                           
 24714                           	psect	text115
 24715  0053E0                     __ptext115:
 24716                           	opt stack 0
 24717  0053E0                     _Mdm_GetSmsData:
 24718                           	opt stack 15
 24719                           
 24720                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 24721                           
 24722                           ; BSR set to: 0
 24723                           ;incstack = 0
 24724  0053E0  0E00               	movlw	0
 24725  0053E2  0100               	movlb	0	; () banked
 24726  0053E4  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 24727                           
 24728                           ; BSR set to: 0
 24729                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 24730  0053E6  0EDA               	movlw	low _SmsTxtReady
 24731  0053E8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24732  0053EA  0E00               	movlw	high _SmsTxtReady
 24733  0053EC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24734  0053EE  ECAA  F031         	call	_ReceiveEvt	;wreg free
 24735  0053F2  0900               	iorlw	0
 24736  0053F4  B4D8               	btfsc	status,2,c
 24737  0053F6  D025               	goto	l1129
 24738                           
 24739                           ;mdm_gsm_gprs.c: 898: {
 24740                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 24741  0053F8  0E50               	movlw	low (_Mdm_SmsRx+80)
 24742  0053FA  0100               	movlb	0	; () banked
 24743  0053FC  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 24744  0053FE  0E07               	movlw	high (_Mdm_SmsRx+80)
 24745  005400  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24746  005402  C08F  F087         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 24747  005406  C090  F088         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 24748  00540A  0E01               	movlw	1
 24749  00540C  0107               	movlb	7	; () banked
 24750  00540E  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 24751  005410  0100               	movlb	0	; () banked
 24752  005412  6F89               	movwf	StringCopy@Len& (0+255),b
 24753  005414  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 24754  005416  0E00               	movlw	0
 24755  005418  238A               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 24756  00541A  ECBD  F02A         	call	_StringCopy	;wreg free
 24757                           
 24758                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ));
 24759  00541E  0E15               	movlw	low (_Mdm_SmsRx+21)
 24760  005420  0100               	movlb	0	; () banked
 24761  005422  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 24762  005424  0E07               	movlw	high (_Mdm_SmsRx+21)
 24763  005426  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24764  005428  0E35               	movlw	low _callerNumber
 24765  00542A  6F87               	movwf	StringCopy@DestStr& (0+255),b
 24766  00542C  0E03               	movlw	high _callerNumber
 24767  00542E  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24768  005430  0E00               	movlw	0
 24769  005432  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 24770  005434  0E0D               	movlw	13
 24771  005436  6F89               	movwf	StringCopy@Len& (0+255),b
 24772  005438  ECBD  F02A         	call	_StringCopy	;wreg free
 24773                           
 24774                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 24775  00543C  0E01               	movlw	1
 24776  00543E  0100               	movlb	0	; () banked
 24777  005440  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 24778  005442                     l1129:
 24779                           
 24780                           ;mdm_gsm_gprs.c: 904: }
 24781                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 24782                           
 24783                           ; BSR set to: 0
 24784  005442  0100               	movlb	0	; () banked
 24785  005444  5191               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 24786  005446  0012               	return	
 24787  005448                     __end_of_Mdm_GetSmsData:
 24788                           	opt stack 0
 24789                           tosu	equ	0xFFF
 24790                           tosh	equ	0xFFE
 24791                           tosl	equ	0xFFD
 24792                           pclath	equ	0xFFA
 24793                           tblptru	equ	0xFF8
 24794                           tblptrh	equ	0xFF7
 24795                           tblptrl	equ	0xFF6
 24796                           tablat	equ	0xFF5
 24797                           prodh	equ	0xFF4
 24798                           prodl	equ	0xFF3
 24799                           intcon	equ	0xFF2
 24800                           intcon2	equ	0xFF1
 24801                           intcon3	equ	0xFF0
 24802                           indf0	equ	0xFEF
 24803                           postinc0	equ	0xFEE
 24804                           plusw0	equ	0xFEB
 24805                           fsr0h	equ	0xFEA
 24806                           fsr0l	equ	0xFE9
 24807                           wreg	equ	0xFE8
 24808                           indf1	equ	0xFE7
 24809                           postinc1	equ	0xFE6
 24810                           postdec1	equ	0xFE5
 24811                           fsr1h	equ	0xFE2
 24812                           fsr1l	equ	0xFE1
 24813                           indf2	equ	0xFDF
 24814                           postinc2	equ	0xFDE
 24815                           postdec2	equ	0xFDD
 24816                           plusw2	equ	0xFDB
 24817                           fsr2h	equ	0xFDA
 24818                           fsr2l	equ	0xFD9
 24819                           status	equ	0xFD8
 24820                           
 24821 ;; *************** function _Led_SetLedBlinkTime *****************
 24822 ;; Defined at:
 24823 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 24824 ;; Parameters:    Size  Location     Type
 24825 ;;  Led             1    wreg     unsigned char 
 24826 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 24827 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 24828 ;; Auto vars:     Size  Location     Type
 24829 ;;  Led             1   33[BANK0 ] unsigned char 
 24830 ;; Return value:  Size  Location     Type
 24831 ;;                  1    wreg      void 
 24832 ;; Registers used:
 24833 ;;		wreg, status,2, status,0
 24834 ;; Tracked objects:
 24835 ;;		On entry : 0/0
 24836 ;;		On exit  : 0/0
 24837 ;;		Unchanged: 0/0
 24838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24839 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24840 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24842 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24843 ;;Total ram usage:        5 bytes
 24844 ;; Hardware stack levels used:    1
 24845 ;; Hardware stack levels required when called:   11
 24846 ;; This function calls:
 24847 ;;		Nothing
 24848 ;; This function is called by:
 24849 ;;		_MyApp_Task
 24850 ;; This function uses a non-reentrant model
 24851 ;;
 24852                           
 24853                           	psect	text116
 24854  005950                     __ptext116:
 24855                           	opt stack 0
 24856  005950                     _Led_SetLedBlinkTime:
 24857                           	opt stack 16
 24858                           
 24859                           ; BSR set to: 0
 24860                           ;incstack = 0
 24861                           ;Led_SetLedBlinkTime@Led stored from wreg
 24862  005950  0100               	movlb	0	; () banked
 24863  005952  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 24864                           
 24865                           ;led.c: 374: switch (Led)
 24866  005954  D01B               	goto	l2142
 24867  005956                     l2143:
 24868                           
 24869                           ; BSR set to: 0
 24870                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 24871  005956  C07D  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 24872  00595A  C07E  F36E         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 24873                           
 24874                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 24875  00595E  C07F  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 24876  005962  C080  F370         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 24877                           
 24878                           ;led.c: 379: break;
 24879  005966  0012               	return	
 24880  005968                     l2145:
 24881                           
 24882                           ; BSR set to: 0
 24883                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 24884  005968  C07D  F364         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 24885  00596C  C07E  F365         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 24886                           
 24887                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 24888  005970  C07F  F366         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 24889  005974  C080  F367         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 24890                           
 24891                           ;led.c: 384: break;
 24892  005978  0012               	return	
 24893  00597A                     l2146:
 24894                           
 24895                           ; BSR set to: 0
 24896                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 24897  00597A  C07D  F364         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 24898  00597E  C07E  F365         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 24899                           
 24900                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 24901  005982  C07F  F366         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 24902  005986  C080  F367         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 24903                           
 24904                           ; BSR set to: 0
 24905                           ;led.c: 393: }
 24906                           
 24907                           ; BSR set to: 0
 24908                           ;led.c: 392: break;
 24909                           
 24910                           ;led.c: 391: default:
 24911                           
 24912                           ;led.c: 389: break;
 24913  00598A  0012               	return	
 24914  00598C                     l2142:
 24915                           
 24916                           ; BSR set to: 0
 24917  00598C  0100               	movlb	0	; () banked
 24918  00598E  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 24919                           
 24920                           ; Switch size 1, requested type "space"
 24921                           ; Number of cases is 3, Range of values is 1 to 3
 24922                           ; switch strategies available:
 24923                           ; Name         Instructions Cycles
 24924                           ; simple_byte           10     6 (average)
 24925                           ;	Chosen strategy is simple_byte
 24926  005990  0A01               	xorlw	1	; case 1
 24927  005992  B4D8               	btfsc	status,2,c
 24928  005994  D7E0               	goto	l2143
 24929  005996  0A03               	xorlw	3	; case 2
 24930  005998  B4D8               	btfsc	status,2,c
 24931  00599A  D7E6               	goto	l2145
 24932  00599C  0A01               	xorlw	1	; case 3
 24933  00599E  A4D8               	btfss	status,2,c
 24934  0059A0  0012               	return	
 24935  0059A2  D7EB               	goto	l2146
 24936  0059A4                     __end_of_Led_SetLedBlinkTime:
 24937                           	opt stack 0
 24938                           tosu	equ	0xFFF
 24939                           tosh	equ	0xFFE
 24940                           tosl	equ	0xFFD
 24941                           pclath	equ	0xFFA
 24942                           tblptru	equ	0xFF8
 24943                           tblptrh	equ	0xFF7
 24944                           tblptrl	equ	0xFF6
 24945                           tablat	equ	0xFF5
 24946                           prodh	equ	0xFF4
 24947                           prodl	equ	0xFF3
 24948                           intcon	equ	0xFF2
 24949                           intcon2	equ	0xFF1
 24950                           intcon3	equ	0xFF0
 24951                           indf0	equ	0xFEF
 24952                           postinc0	equ	0xFEE
 24953                           plusw0	equ	0xFEB
 24954                           fsr0h	equ	0xFEA
 24955                           fsr0l	equ	0xFE9
 24956                           wreg	equ	0xFE8
 24957                           indf1	equ	0xFE7
 24958                           postinc1	equ	0xFE6
 24959                           postdec1	equ	0xFE5
 24960                           fsr1h	equ	0xFE2
 24961                           fsr1l	equ	0xFE1
 24962                           indf2	equ	0xFDF
 24963                           postinc2	equ	0xFDE
 24964                           postdec2	equ	0xFDD
 24965                           plusw2	equ	0xFDB
 24966                           fsr2h	equ	0xFDA
 24967                           fsr2l	equ	0xFD9
 24968                           status	equ	0xFD8
 24969                           
 24970 ;; *************** function _GetLastInteractionNumber *****************
 24971 ;; Defined at:
 24972 ;;		line 1046 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24973 ;; Parameters:    Size  Location     Type
 24974 ;;		None
 24975 ;; Auto vars:     Size  Location     Type
 24976 ;;		None
 24977 ;; Return value:  Size  Location     Type
 24978 ;;                  2   29[BANK0 ] PTR unsigned char 
 24979 ;; Registers used:
 24980 ;;		wreg, status,2, status,0
 24981 ;; Tracked objects:
 24982 ;;		On entry : 0/0
 24983 ;;		On exit  : 0/0
 24984 ;;		Unchanged: 0/0
 24985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24989 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24990 ;;Total ram usage:        2 bytes
 24991 ;; Hardware stack levels used:    1
 24992 ;; Hardware stack levels required when called:   11
 24993 ;; This function calls:
 24994 ;;		Nothing
 24995 ;; This function is called by:
 24996 ;;		_MyApp_Task
 24997 ;; This function uses a non-reentrant model
 24998 ;;
 24999                           
 25000                           	psect	text117
 25001  006888                     __ptext117:
 25002                           	opt stack 0
 25003  006888                     _GetLastInteractionNumber:
 25004                           	opt stack 16
 25005                           
 25006                           ;mdm_gsm_gprs.c: 1048: return callerNumber;
 25007                           
 25008                           ; BSR set to: 0
 25009                           ;incstack = 0
 25010  006888  0E35               	movlw	low _callerNumber
 25011  00688A  0100               	movlb	0	; () banked
 25012  00688C  6F7D               	movwf	?_GetLastInteractionNumber& (0+255),b
 25013  00688E  0E03               	movlw	high _callerNumber
 25014  006890  6F7E               	movwf	(?_GetLastInteractionNumber+1)& (0+255),b
 25015  006892  0012               	return	
 25016  006894                     __end_of_GetLastInteractionNumber:
 25017                           	opt stack 0
 25018                           tosu	equ	0xFFF
 25019                           tosh	equ	0xFFE
 25020                           tosl	equ	0xFFD
 25021                           pclath	equ	0xFFA
 25022                           tblptru	equ	0xFF8
 25023                           tblptrh	equ	0xFF7
 25024                           tblptrl	equ	0xFF6
 25025                           tablat	equ	0xFF5
 25026                           prodh	equ	0xFF4
 25027                           prodl	equ	0xFF3
 25028                           intcon	equ	0xFF2
 25029                           intcon2	equ	0xFF1
 25030                           intcon3	equ	0xFF0
 25031                           indf0	equ	0xFEF
 25032                           postinc0	equ	0xFEE
 25033                           plusw0	equ	0xFEB
 25034                           fsr0h	equ	0xFEA
 25035                           fsr0l	equ	0xFE9
 25036                           wreg	equ	0xFE8
 25037                           indf1	equ	0xFE7
 25038                           postinc1	equ	0xFE6
 25039                           postdec1	equ	0xFE5
 25040                           fsr1h	equ	0xFE2
 25041                           fsr1l	equ	0xFE1
 25042                           indf2	equ	0xFDF
 25043                           postinc2	equ	0xFDE
 25044                           postdec2	equ	0xFDD
 25045                           plusw2	equ	0xFDB
 25046                           fsr2h	equ	0xFDA
 25047                           fsr2l	equ	0xFD9
 25048                           status	equ	0xFD8
 25049                           
 25050 ;; *************** function _GetCallerNumber *****************
 25051 ;; Defined at:
 25052 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25053 ;; Parameters:    Size  Location     Type
 25054 ;;		None
 25055 ;; Auto vars:     Size  Location     Type
 25056 ;;		None
 25057 ;; Return value:  Size  Location     Type
 25058 ;;                  2   35[BANK0 ] PTR unsigned char 
 25059 ;; Registers used:
 25060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25061 ;; Tracked objects:
 25062 ;;		On entry : 0/0
 25063 ;;		On exit  : 0/0
 25064 ;;		Unchanged: 0/0
 25065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25066 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25069 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25070 ;;Total ram usage:        2 bytes
 25071 ;; Hardware stack levels used:    1
 25072 ;; Hardware stack levels required when called:   12
 25073 ;; This function calls:
 25074 ;;		_ClearBuffer
 25075 ;;		_ReceiveEvt
 25076 ;; This function is called by:
 25077 ;;		_MyApp_Task
 25078 ;; This function uses a non-reentrant model
 25079 ;;
 25080                           
 25081                           	psect	text118
 25082  006162                     __ptext118:
 25083                           	opt stack 0
 25084  006162                     _GetCallerNumber:
 25085                           	opt stack 15
 25086                           
 25087                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 25088                           
 25089                           ; BSR set to: 0
 25090                           ;incstack = 0
 25091  006162  0EDD               	movlw	low _ClipEvent
 25092  006164  0100               	movlb	0	; () banked
 25093  006166  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25094  006168  0E00               	movlw	high _ClipEvent
 25095  00616A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25096  00616C  ECAA  F031         	call	_ReceiveEvt	;wreg free
 25097  006170  0900               	iorlw	0
 25098  006172  A4D8               	btfss	status,2,c
 25099  006174  D00B               	goto	l1156
 25100                           
 25101                           ;mdm_gsm_gprs.c: 1040: {
 25102                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 25103  006176  0E35               	movlw	low _callerNumber
 25104  006178  0100               	movlb	0	; () banked
 25105  00617A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25106  00617C  0E03               	movlw	high _callerNumber
 25107  00617E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25108  006180  0E00               	movlw	0
 25109  006182  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25110  006184  0E0D               	movlw	13
 25111  006186  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25112  006188  ECCC  F030         	call	_ClearBuffer	;wreg free
 25113  00618C                     l1156:
 25114                           
 25115                           ;mdm_gsm_gprs.c: 1042: }
 25116                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 25117  00618C  0E35               	movlw	low _callerNumber
 25118  00618E  0100               	movlb	0	; () banked
 25119  006190  6F83               	movwf	?_GetCallerNumber& (0+255),b
 25120  006192  0E03               	movlw	high _callerNumber
 25121  006194  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 25122  006196  0012               	return	
 25123  006198                     __end_of_GetCallerNumber:
 25124                           	opt stack 0
 25125                           tosu	equ	0xFFF
 25126                           tosh	equ	0xFFE
 25127                           tosl	equ	0xFFD
 25128                           pclath	equ	0xFFA
 25129                           tblptru	equ	0xFF8
 25130                           tblptrh	equ	0xFF7
 25131                           tblptrl	equ	0xFF6
 25132                           tablat	equ	0xFF5
 25133                           prodh	equ	0xFF4
 25134                           prodl	equ	0xFF3
 25135                           intcon	equ	0xFF2
 25136                           intcon2	equ	0xFF1
 25137                           intcon3	equ	0xFF0
 25138                           indf0	equ	0xFEF
 25139                           postinc0	equ	0xFEE
 25140                           plusw0	equ	0xFEB
 25141                           fsr0h	equ	0xFEA
 25142                           fsr0l	equ	0xFE9
 25143                           wreg	equ	0xFE8
 25144                           indf1	equ	0xFE7
 25145                           postinc1	equ	0xFE6
 25146                           postdec1	equ	0xFE5
 25147                           fsr1h	equ	0xFE2
 25148                           fsr1l	equ	0xFE1
 25149                           indf2	equ	0xFDF
 25150                           postinc2	equ	0xFDE
 25151                           postdec2	equ	0xFDD
 25152                           plusw2	equ	0xFDB
 25153                           fsr2h	equ	0xFDA
 25154                           fsr2l	equ	0xFD9
 25155                           status	equ	0xFD8
 25156                           
 25157 ;; *************** function _UartSetConfig *****************
 25158 ;; Defined at:
 25159 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25160 ;; Parameters:    Size  Location     Type
 25161 ;;		None
 25162 ;; Auto vars:     Size  Location     Type
 25163 ;;		None
 25164 ;; Return value:  Size  Location     Type
 25165 ;;                  1    wreg      void 
 25166 ;; Registers used:
 25167 ;;		wreg, status,2
 25168 ;; Tracked objects:
 25169 ;;		On entry : 0/0
 25170 ;;		On exit  : 0/0
 25171 ;;		Unchanged: 0/0
 25172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25177 ;;Total ram usage:        0 bytes
 25178 ;; Hardware stack levels used:    1
 25179 ;; Hardware stack levels required when called:   11
 25180 ;; This function calls:
 25181 ;;		Nothing
 25182 ;; This function is called by:
 25183 ;;		_Mdm_MainTask
 25184 ;; This function uses a non-reentrant model
 25185 ;;
 25186                           
 25187                           	psect	text119
 25188  0056F4                     __ptext119:
 25189                           	opt stack 0
 25190  0056F4                     _UartSetConfig:
 25191                           	opt stack 16
 25192                           
 25193                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 25194                           
 25195                           ; BSR set to: 0
 25196                           ;incstack = 0
 25197  0056F4  0E01               	movlw	1
 25198  0056F6  0103               	movlb	3	; () banked
 25199  0056F8  6F20               	movwf	_UartConfig& (0+255),b
 25200                           
 25201                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 25202  0056FA  0E00               	movlw	0
 25203  0056FC  6F21               	movwf	(_UartConfig+1)& (0+255),b
 25204                           
 25205                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 25206  0056FE  0E00               	movlw	0
 25207  005700  6F22               	movwf	(_UartConfig+2)& (0+255),b
 25208                           
 25209                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 25210  005702  0E00               	movlw	0
 25211  005704  6F23               	movwf	(_UartConfig+3)& (0+255),b
 25212                           
 25213                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 25214  005706  0E00               	movlw	0
 25215  005708  6F24               	movwf	(_UartConfig+4)& (0+255),b
 25216                           
 25217                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 25218  00570A  0E00               	movlw	0
 25219  00570C  6F25               	movwf	(_UartConfig+5)& (0+255),b
 25220                           
 25221                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 25222  00570E  0E01               	movlw	1
 25223  005710  6F26               	movwf	(_UartConfig+6)& (0+255),b
 25224                           
 25225                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 25226  005712  0E01               	movlw	1
 25227  005714  6F27               	movwf	(_UartConfig+7)& (0+255),b
 25228                           
 25229                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 25230  005716  0E00               	movlw	0
 25231  005718  6F28               	movwf	(_UartConfig+8)& (0+255),b
 25232                           
 25233                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 25234  00571A  0E00               	movlw	0
 25235  00571C  6F29               	movwf	(_UartConfig+9)& (0+255),b
 25236                           
 25237                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 25238  00571E  0E00               	movlw	0
 25239  005720  6F2A               	movwf	(_UartConfig+10)& (0+255),b
 25240                           
 25241                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 25242  005722  0E00               	movlw	0
 25243  005724  6F2B               	movwf	(_UartConfig+11)& (0+255),b
 25244                           
 25245                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 25246  005726  0E01               	movlw	1
 25247  005728  6F2C               	movwf	(_UartConfig+12)& (0+255),b
 25248                           
 25249                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 25250  00572A  0E00               	movlw	0
 25251  00572C  6F2D               	movwf	(_UartConfig+13)& (0+255),b
 25252  00572E  0E6C               	movlw	108
 25253  005730  6F2E               	movwf	(_UartConfig+14)& (0+255),b
 25254  005732  0EDC               	movlw	220
 25255  005734  6F2F               	movwf	(_UartConfig+15)& (0+255),b
 25256  005736  0E02               	movlw	2
 25257  005738  6F30               	movwf	(_UartConfig+16)& (0+255),b
 25258                           
 25259                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 25260  00573A  0E80               	movlw	128
 25261  00573C  6F31               	movwf	(_UartConfig+17)& (0+255),b
 25262  00573E  0E25               	movlw	37
 25263  005740  6F32               	movwf	(_UartConfig+18)& (0+255),b
 25264  005742  0E00               	movlw	0
 25265  005744  6F33               	movwf	(_UartConfig+19)& (0+255),b
 25266  005746  0E00               	movlw	0
 25267  005748  6F34               	movwf	(_UartConfig+20)& (0+255),b
 25268                           
 25269                           ; BSR set to: 3
 25270  00574A  0012               	return		;funcret
 25271  00574C                     __end_of_UartSetConfig:
 25272                           	opt stack 0
 25273                           tosu	equ	0xFFF
 25274                           tosh	equ	0xFFE
 25275                           tosl	equ	0xFFD
 25276                           pclath	equ	0xFFA
 25277                           tblptru	equ	0xFF8
 25278                           tblptrh	equ	0xFF7
 25279                           tblptrl	equ	0xFF6
 25280                           tablat	equ	0xFF5
 25281                           prodh	equ	0xFF4
 25282                           prodl	equ	0xFF3
 25283                           intcon	equ	0xFF2
 25284                           intcon2	equ	0xFF1
 25285                           intcon3	equ	0xFF0
 25286                           indf0	equ	0xFEF
 25287                           postinc0	equ	0xFEE
 25288                           plusw0	equ	0xFEB
 25289                           fsr0h	equ	0xFEA
 25290                           fsr0l	equ	0xFE9
 25291                           wreg	equ	0xFE8
 25292                           indf1	equ	0xFE7
 25293                           postinc1	equ	0xFE6
 25294                           postdec1	equ	0xFE5
 25295                           fsr1h	equ	0xFE2
 25296                           fsr1l	equ	0xFE1
 25297                           indf2	equ	0xFDF
 25298                           postinc2	equ	0xFDE
 25299                           postdec2	equ	0xFDD
 25300                           plusw2	equ	0xFDB
 25301                           fsr2h	equ	0xFDA
 25302                           fsr2l	equ	0xFD9
 25303                           status	equ	0xFD8
 25304                           
 25305 ;; *************** function _TurnOnModem *****************
 25306 ;; Defined at:
 25307 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25308 ;; Parameters:    Size  Location     Type
 25309 ;;		None
 25310 ;; Auto vars:     Size  Location     Type
 25311 ;;		None
 25312 ;; Return value:  Size  Location     Type
 25313 ;;                  1    wreg      void 
 25314 ;; Registers used:
 25315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25316 ;; Tracked objects:
 25317 ;;		On entry : 0/0
 25318 ;;		On exit  : 0/0
 25319 ;;		Unchanged: 0/0
 25320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25325 ;;Total ram usage:        0 bytes
 25326 ;; Hardware stack levels used:    1
 25327 ;; Hardware stack levels required when called:   12
 25328 ;; This function calls:
 25329 ;;		_GenerateEvt
 25330 ;; This function is called by:
 25331 ;;		_Mdm_MainTask
 25332 ;; This function uses a non-reentrant model
 25333 ;;
 25334                           
 25335                           	psect	text120
 25336  005CC2                     __ptext120:
 25337                           	opt stack 0
 25338  005CC2                     _TurnOnModem:
 25339                           	opt stack 15
 25340                           
 25341                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 25342                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 25343                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 25344                           
 25345                           ; BSR set to: 3
 25346                           ;incstack = 0
 25347  005CC2  D01B               	goto	l1009
 25348  005CC4                     
 25349                           ;mdm_gsm_gprs.c: 385: Counter++;
 25350  005CC4  0102               	movlb	2	; () banked
 25351  005CC6  4BD8               	infsnz	TurnOnModem@Counter& (0+255),f,b
 25352  005CC8  2BD9               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 25353                           
 25354                           ; BSR set to: 2
 25355                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 25356  005CCA  0EB8               	movlw	184
 25357  005CCC  5DD8               	subwf	TurnOnModem@Counter& (0+255),w,b
 25358  005CCE  0E0B               	movlw	11
 25359  005CD0  59D9               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 25360  005CD2  A0D8               	btfss	status,0,c
 25361  005CD4  0012               	return	
 25362                           
 25363                           ; BSR set to: 2
 25364                           ;mdm_gsm_gprs.c: 388: {
 25365                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 25366  005CD6  0E01               	movlw	1
 25367  005CD8  0101               	movlb	1	; () banked
 25368  005CDA  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 25369                           
 25370                           ; BSR set to: 1
 25371                           ;mdm_gsm_gprs.c: 391: }
 25372                           ;mdm_gsm_gprs.c: 392: break;
 25373  005CDC  0012               	return	
 25374  005CDE                     
 25375                           ; BSR set to: 1
 25376                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 25377                           
 25378                           ; BSR set to: 1
 25379  005CDE  0EE0               	movlw	low _MdmOnOffPulseRequest
 25380  005CE0  0100               	movlb	0	; () banked
 25381  005CE2  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25382  005CE4  0E00               	movlw	high _MdmOnOffPulseRequest
 25383  005CE6  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25384  005CE8  EC9F  F033         	call	_GenerateEvt	;wreg free
 25385                           
 25386                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 25387  005CEC  0E01               	movlw	1
 25388  005CEE  0100               	movlb	0	; () banked
 25389  005CF0  6FD0               	movwf	_MdmStatus& (0+255),b
 25390                           
 25391                           ; BSR set to: 0
 25392                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 25393  005CF2  0E02               	movlw	2
 25394  005CF4  0101               	movlb	1	; () banked
 25395  005CF6  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 25396                           
 25397                           ; BSR set to: 1
 25398                           ;mdm_gsm_gprs.c: 408: }
 25399                           
 25400                           ; BSR set to: 1
 25401                           ;mdm_gsm_gprs.c: 407: break;
 25402                           
 25403                           ;mdm_gsm_gprs.c: 406: default:
 25404                           
 25405                           ; BSR set to: 1
 25406                           ;mdm_gsm_gprs.c: 404: break;
 25407                           
 25408                           ;mdm_gsm_gprs.c: 403: case Stop:
 25409                           
 25410                           ;mdm_gsm_gprs.c: 401: break;
 25411  005CF8  0012               	return	
 25412  005CFA                     l1009:
 25413                           
 25414                           ; BSR set to: 1
 25415  005CFA  0101               	movlb	1	; () banked
 25416  005CFC  51F4               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 25417                           
 25418                           ; Switch size 1, requested type "space"
 25419                           ; Number of cases is 3, Range of values is 0 to 2
 25420                           ; switch strategies available:
 25421                           ; Name         Instructions Cycles
 25422                           ; simple_byte           10     6 (average)
 25423                           ;	Chosen strategy is simple_byte
 25424  005CFE  0A00               	xorlw	0	; case 0
 25425  005D00  B4D8               	btfsc	status,2,c
 25426  005D02  D7E0               	goto	l1010
 25427  005D04  0A01               	xorlw	1	; case 1
 25428  005D06  B4D8               	btfsc	status,2,c
 25429  005D08  D7EA               	goto	l1013
 25430  005D0A  0A03               	xorlw	3	; case 2
 25431  005D0C  0012               	return	
 25432  005D0E                     __end_of_TurnOnModem:
 25433                           	opt stack 0
 25434                           tosu	equ	0xFFF
 25435                           tosh	equ	0xFFE
 25436                           tosl	equ	0xFFD
 25437                           pclath	equ	0xFFA
 25438                           tblptru	equ	0xFF8
 25439                           tblptrh	equ	0xFF7
 25440                           tblptrl	equ	0xFF6
 25441                           tablat	equ	0xFF5
 25442                           prodh	equ	0xFF4
 25443                           prodl	equ	0xFF3
 25444                           intcon	equ	0xFF2
 25445                           intcon2	equ	0xFF1
 25446                           intcon3	equ	0xFF0
 25447                           indf0	equ	0xFEF
 25448                           postinc0	equ	0xFEE
 25449                           plusw0	equ	0xFEB
 25450                           fsr0h	equ	0xFEA
 25451                           fsr0l	equ	0xFE9
 25452                           wreg	equ	0xFE8
 25453                           indf1	equ	0xFE7
 25454                           postinc1	equ	0xFE6
 25455                           postdec1	equ	0xFE5
 25456                           fsr1h	equ	0xFE2
 25457                           fsr1l	equ	0xFE1
 25458                           indf2	equ	0xFDF
 25459                           postinc2	equ	0xFDE
 25460                           postdec2	equ	0xFDD
 25461                           plusw2	equ	0xFDB
 25462                           fsr2h	equ	0xFDA
 25463                           fsr2l	equ	0xFD9
 25464                           status	equ	0xFD8
 25465                           
 25466 ;; *************** function _SendSmsSm *****************
 25467 ;; Defined at:
 25468 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25469 ;; Parameters:    Size  Location     Type
 25470 ;;		None
 25471 ;; Auto vars:     Size  Location     Type
 25472 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 25473 ;; Return value:  Size  Location     Type
 25474 ;;                  1    wreg      void 
 25475 ;; Registers used:
 25476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25477 ;; Tracked objects:
 25478 ;;		On entry : 0/0
 25479 ;;		On exit  : 0/0
 25480 ;;		Unchanged: 0/0
 25481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25483 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25484 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25485 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25486 ;;Total ram usage:       52 bytes
 25487 ;; Hardware stack levels used:    1
 25488 ;; Hardware stack levels required when called:   14
 25489 ;; This function calls:
 25490 ;;		_OsTmr_GetTimerStatus
 25491 ;;		_OsTmr_StartTimer
 25492 ;;		_ReceiveEvt
 25493 ;;		_StringCopy
 25494 ;;		_Uart_WriteStringLen
 25495 ;; This function is called by:
 25496 ;;		_Mdm_MainTask
 25497 ;; This function uses a non-reentrant model
 25498 ;;
 25499                           
 25500                           	psect	text121
 25501  001CE4                     __ptext121:
 25502                           	opt stack 0
 25503  001CE4                     _SendSmsSm:
 25504                           	opt stack 13
 25505                           
 25506                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 25507                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 25508                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 25509                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 25510                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 25511                           
 25512                           ;incstack = 0
 25513  001CE4  0E03               	movlw	3
 25514  001CE6  0100               	movlb	0	; () banked
 25515  001CE8  19D0               	xorwf	_MdmStatus& (0+255),w,b
 25516  001CEA  A4D8               	btfss	status,2,c
 25517  001CEC  0012               	return	
 25518  001CEE  D0C1               	goto	l1091
 25519  001CF0                     
 25520                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 25521                           
 25522                           ; BSR set to: 0
 25523  001CF0  0EDF               	movlw	low _SendSmsEvent
 25524  001CF2  0100               	movlb	0	; () banked
 25525  001CF4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25526  001CF6  0E00               	movlw	high _SendSmsEvent
 25527  001CF8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25528  001CFA  ECAA  F031         	call	_ReceiveEvt	;wreg free
 25529  001CFE  0900               	iorlw	0
 25530  001D00  B4D8               	btfsc	status,2,c
 25531  001D02  0012               	return	
 25532                           
 25533                           ;mdm_gsm_gprs.c: 671: {
 25534                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 25535  001D04  0E01               	movlw	1
 25536  001D06  0101               	movlb	1	; () banked
 25537  001D08  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25538                           
 25539                           ; BSR set to: 1
 25540                           ;mdm_gsm_gprs.c: 674: }
 25541                           ;mdm_gsm_gprs.c: 675: break;
 25542  001D0A  0012               	return	
 25543  001D0C                     
 25544                           ; BSR set to: 1
 25545                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 25546                           
 25547                           ; BSR set to: 1
 25548  001D0C  0ECE               	movlw	low STR_5
 25549  001D0E  0100               	movlb	0	; () banked
 25550  001D10  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 25551  001D12  0EFF               	movlw	high STR_5
 25552  001D14  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25553  001D16  0E00               	movlw	low SendSmsSm@UartMessage
 25554  001D18  6F87               	movwf	StringCopy@DestStr& (0+255),b
 25555  001D1A  0E01               	movlw	high SendSmsSm@UartMessage
 25556  001D1C  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25557  001D1E  0E00               	movlw	0
 25558  001D20  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 25559  001D22  0E09               	movlw	9
 25560  001D24  6F89               	movwf	StringCopy@Len& (0+255),b
 25561  001D26  ECBD  F02A         	call	_StringCopy	;wreg free
 25562                           
 25563                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 25564  001D2A  0E72               	movlw	low _PhoneNumber
 25565  001D2C  0100               	movlb	0	; () banked
 25566  001D2E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 25567  001D30  0E05               	movlw	high _PhoneNumber
 25568  001D32  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25569  001D34  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 25570  001D36  6F87               	movwf	StringCopy@DestStr& (0+255),b
 25571  001D38  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 25572  001D3A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25573  001D3C  C0D1  F089         	movff	_PhoneNumbLen,StringCopy@Len
 25574  001D40  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 25575  001D42  ECBD  F02A         	call	_StringCopy	;wreg free
 25576                           
 25577                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 25578  001D46  0100               	movlb	0	; () banked
 25579  001D48  51D1               	movf	_PhoneNumbLen& (0+255),w,b
 25580  001D4A  6F9B               	movwf	??_SendSmsSm& (0+255),b
 25581  001D4C  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 25582  001D4E  0E09               	movlw	9
 25583  001D50  279B               	addwf	??_SendSmsSm& (0+255),f,b
 25584  001D52  0E00               	movlw	0
 25585  001D54  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 25586  001D56  0E00               	movlw	low SendSmsSm@UartMessage
 25587  001D58  259B               	addwf	??_SendSmsSm& (0+255),w,b
 25588  001D5A  6ED9               	movwf	fsr2l,c
 25589  001D5C  0E01               	movlw	high SendSmsSm@UartMessage
 25590  001D5E  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 25591  001D60  6EDA               	movwf	fsr2h,c
 25592  001D62  0E22               	movlw	34
 25593  001D64  6EDF               	movwf	indf2,c
 25594                           
 25595                           ; BSR set to: 0
 25596                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 25597  001D66  51D1               	movf	_PhoneNumbLen& (0+255),w,b
 25598  001D68  6F9B               	movwf	??_SendSmsSm& (0+255),b
 25599  001D6A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 25600  001D6C  0E0A               	movlw	10
 25601  001D6E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 25602  001D70  0E00               	movlw	0
 25603  001D72  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 25604  001D74  0E00               	movlw	low SendSmsSm@UartMessage
 25605  001D76  259B               	addwf	??_SendSmsSm& (0+255),w,b
 25606  001D78  6ED9               	movwf	fsr2l,c
 25607  001D7A  0E01               	movlw	high SendSmsSm@UartMessage
 25608  001D7C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 25609  001D7E  6EDA               	movwf	fsr2h,c
 25610  001D80  0E0D               	movlw	13
 25611  001D82  6EDF               	movwf	indf2,c
 25612                           
 25613                           ; BSR set to: 0
 25614                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 25615  001D84  0E00               	movlw	low SendSmsSm@UartMessage
 25616  001D86  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25617  001D88  0E01               	movlw	high SendSmsSm@UartMessage
 25618  001D8A  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25619  001D8C  51D1               	movf	_PhoneNumbLen& (0+255),w,b
 25620  001D8E  0F0B               	addlw	11
 25621  001D90  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25622  001D92  0E01               	movlw	1
 25623  001D94  ECBC  F02F         	call	_Uart_WriteStringLen
 25624                           
 25625                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 25626  001D98  0EE5               	movlw	low SendSmsSm@SwTimer
 25627  001D9A  0100               	movlb	0	; () banked
 25628  001D9C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25629  001D9E  0E03               	movlw	high SendSmsSm@SwTimer
 25630  001DA0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25631  001DA2  0EC4               	movlw	196
 25632  001DA4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25633  001DA6  0E09               	movlw	9
 25634  001DA8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25635  001DAA  0E00               	movlw	0
 25636  001DAC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25637  001DAE  0E00               	movlw	0
 25638  001DB0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25639  001DB2  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 25640                           
 25641                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 25642  001DB6  0E05               	movlw	5
 25643  001DB8  0101               	movlb	1	; () banked
 25644  001DBA  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25645                           
 25646                           ; BSR set to: 1
 25647                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 25648  001DBC  0E02               	movlw	2
 25649  001DBE  6FEF               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 25650                           
 25651                           ;mdm_gsm_gprs.c: 691: break;
 25652  001DC0  0012               	return	
 25653  001DC2                     
 25654                           ; BSR set to: 1
 25655                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 25656                           
 25657                           ; BSR set to: 1
 25658  001DC2  0E0A               	movlw	10
 25659  001DC4  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 25660                           
 25661                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 25662  001DC6  0E0D               	movlw	13
 25663  001DC8  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 25664                           
 25665                           ; BSR set to: 1
 25666                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 25667  001DCA  0E00               	movlw	low SendSmsSm@UartMessage
 25668  001DCC  0100               	movlb	0	; () banked
 25669  001DCE  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25670  001DD0  0E01               	movlw	high SendSmsSm@UartMessage
 25671  001DD2  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25672  001DD4  0E02               	movlw	2
 25673  001DD6  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25674  001DD8  0E01               	movlw	1
 25675  001DDA  ECBC  F02F         	call	_Uart_WriteStringLen
 25676                           
 25677                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 25678  001DDE  0E03               	movlw	3
 25679  001DE0  0101               	movlb	1	; () banked
 25680  001DE2  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25681                           
 25682                           ;mdm_gsm_gprs.c: 701: break;
 25683  001DE4  0012               	return	
 25684  001DE6                     
 25685                           ; BSR set to: 1
 25686                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 25687                           
 25688                           ; BSR set to: 1
 25689  001DE6  0E3C               	movlw	low _NewStringReceived
 25690  001DE8  0100               	movlb	0	; () banked
 25691  001DEA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25692  001DEC  0E00               	movlw	high _NewStringReceived
 25693  001DEE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25694  001DF0  ECAA  F031         	call	_ReceiveEvt	;wreg free
 25695  001DF4  0900               	iorlw	0
 25696  001DF6  B4D8               	btfsc	status,2,c
 25697  001DF8  0012               	return	
 25698                           
 25699                           ;mdm_gsm_gprs.c: 706: {
 25700                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 25701  001DFA  CC58  FFE8         	movff	_RxBuffer,wreg
 25702  001DFE  0A3E               	xorlw	62
 25703  001E00  A4D8               	btfss	status,2,c
 25704  001E02  0012               	return	
 25705                           
 25706                           ;mdm_gsm_gprs.c: 709: {
 25707                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 25708  001E04  0E04               	movlw	4
 25709  001E06  0101               	movlb	1	; () banked
 25710  001E08  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25711                           
 25712                           ; BSR set to: 1
 25713                           ;mdm_gsm_gprs.c: 712: }
 25714                           ;mdm_gsm_gprs.c: 713: }
 25715                           ;mdm_gsm_gprs.c: 714: break;
 25716                           
 25717                           ; BSR set to: 1
 25718  001E0A  0012               	return	
 25719  001E0C                     
 25720                           ; BSR set to: 1
 25721                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 25722                           
 25723                           ; BSR set to: 1
 25724  001E0C  0EC8               	movlw	low _MessageText
 25725  001E0E  0100               	movlb	0	; () banked
 25726  001E10  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 25727  001E12  0E08               	movlw	high _MessageText
 25728  001E14  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25729  001E16  0E00               	movlw	low SendSmsSm@UartMessage
 25730  001E18  6F87               	movwf	StringCopy@DestStr& (0+255),b
 25731  001E1A  0E01               	movlw	high SendSmsSm@UartMessage
 25732  001E1C  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25733  001E1E  C0D2  F089         	movff	_SmsLen,StringCopy@Len
 25734  001E22  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 25735  001E24  ECBD  F02A         	call	_StringCopy	;wreg free
 25736                           
 25737                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 25738  001E28  0100               	movlb	0	; () banked
 25739  001E2A  51D2               	movf	_SmsLen& (0+255),w,b
 25740  001E2C  0D01               	mullw	1
 25741  001E2E  0E00               	movlw	low SendSmsSm@UartMessage
 25742  001E30  24F3               	addwf	prodl,w,c
 25743  001E32  6ED9               	movwf	fsr2l,c
 25744  001E34  0E01               	movlw	high SendSmsSm@UartMessage
 25745  001E36  20F4               	addwfc	prodh,w,c
 25746  001E38  6EDA               	movwf	fsr2h,c
 25747  001E3A  0E1A               	movlw	26
 25748  001E3C  6EDF               	movwf	indf2,c
 25749                           
 25750                           ; BSR set to: 0
 25751                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 25752  001E3E  0E00               	movlw	low SendSmsSm@UartMessage
 25753  001E40  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25754  001E42  0E01               	movlw	high SendSmsSm@UartMessage
 25755  001E44  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25756  001E46  29D2               	incf	_SmsLen& (0+255),w,b
 25757  001E48  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25758  001E4A  0E01               	movlw	1
 25759  001E4C  ECBC  F02F         	call	_Uart_WriteStringLen
 25760                           
 25761                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 25762  001E50  0E00               	movlw	0
 25763  001E52  0101               	movlb	1	; () banked
 25764  001E54  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25765                           
 25766                           ;mdm_gsm_gprs.c: 725: break;
 25767  001E56  0012               	return	
 25768  001E58                     
 25769                           ; BSR set to: 1
 25770                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 25771                           
 25772                           ; BSR set to: 1
 25773  001E58  0EE5               	movlw	low SendSmsSm@SwTimer
 25774  001E5A  0100               	movlb	0	; () banked
 25775  001E5C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25776  001E5E  0E03               	movlw	high SendSmsSm@SwTimer
 25777  001E60  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25778  001E62  ECC6  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 25779  001E66  06E8               	decf	wreg,f,c
 25780  001E68  A4D8               	btfss	status,2,c
 25781  001E6A  0012               	return	
 25782                           
 25783                           ;mdm_gsm_gprs.c: 730: {
 25784                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 25785  001E6C  C1EF  F1F0         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 25786                           
 25787                           ;mdm_gsm_gprs.c: 738: }
 25788                           
 25789                           ;mdm_gsm_gprs.c: 737: break;
 25790                           
 25791                           ;mdm_gsm_gprs.c: 736: default:
 25792                           
 25793                           ;mdm_gsm_gprs.c: 733: }
 25794                           ;mdm_gsm_gprs.c: 734: break;
 25795  001E70  0012               	return	
 25796  001E72                     l1091:
 25797  001E72  0101               	movlb	1	; () banked
 25798  001E74  51F0               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 25799                           
 25800                           ; Switch size 1, requested type "space"
 25801                           ; Number of cases is 6, Range of values is 0 to 5
 25802                           ; switch strategies available:
 25803                           ; Name         Instructions Cycles
 25804                           ; simple_byte           19    10 (average)
 25805                           ;	Chosen strategy is simple_byte
 25806  001E76  0A00               	xorlw	0	; case 0
 25807  001E78  B4D8               	btfsc	status,2,c
 25808  001E7A  D73A               	goto	l1092
 25809  001E7C  0A01               	xorlw	1	; case 1
 25810  001E7E  B4D8               	btfsc	status,2,c
 25811  001E80  D745               	goto	l1095
 25812  001E82  0A03               	xorlw	3	; case 2
 25813  001E84  B4D8               	btfsc	status,2,c
 25814  001E86  D79D               	goto	l1096
 25815  001E88  0A01               	xorlw	1	; case 3
 25816  001E8A  B4D8               	btfsc	status,2,c
 25817  001E8C  D7AC               	goto	l1097
 25818  001E8E  0A07               	xorlw	7	; case 4
 25819  001E90  B4D8               	btfsc	status,2,c
 25820  001E92  D7BC               	goto	l1100
 25821  001E94  0A01               	xorlw	1	; case 5
 25822  001E96  A4D8               	btfss	status,2,c
 25823                           
 25824                           ; BSR set to: 1
 25825  001E98  0012               	return	
 25826  001E9A  D7DE               	goto	l1101
 25827  001E9C                     __end_of_SendSmsSm:
 25828                           	opt stack 0
 25829                           tosu	equ	0xFFF
 25830                           tosh	equ	0xFFE
 25831                           tosl	equ	0xFFD
 25832                           pclath	equ	0xFFA
 25833                           tblptru	equ	0xFF8
 25834                           tblptrh	equ	0xFF7
 25835                           tblptrl	equ	0xFF6
 25836                           tablat	equ	0xFF5
 25837                           prodh	equ	0xFF4
 25838                           prodl	equ	0xFF3
 25839                           intcon	equ	0xFF2
 25840                           intcon2	equ	0xFF1
 25841                           intcon3	equ	0xFF0
 25842                           indf0	equ	0xFEF
 25843                           postinc0	equ	0xFEE
 25844                           plusw0	equ	0xFEB
 25845                           fsr0h	equ	0xFEA
 25846                           fsr0l	equ	0xFE9
 25847                           wreg	equ	0xFE8
 25848                           indf1	equ	0xFE7
 25849                           postinc1	equ	0xFE6
 25850                           postdec1	equ	0xFE5
 25851                           fsr1h	equ	0xFE2
 25852                           fsr1l	equ	0xFE1
 25853                           indf2	equ	0xFDF
 25854                           postinc2	equ	0xFDE
 25855                           postdec2	equ	0xFDD
 25856                           plusw2	equ	0xFDB
 25857                           fsr2h	equ	0xFDA
 25858                           fsr2l	equ	0xFD9
 25859                           status	equ	0xFD8
 25860                           
 25861 ;; *************** function _Uart_WriteStringLen *****************
 25862 ;; Defined at:
 25863 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25864 ;; Parameters:    Size  Location     Type
 25865 ;;  Module          1    wreg     unsigned char 
 25866 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 25867 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 25868 ;;  Len             1   34[BANK0 ] unsigned char 
 25869 ;; Auto vars:     Size  Location     Type
 25870 ;;  Module          1   36[BANK0 ] unsigned char 
 25871 ;;  Index           1   35[BANK0 ] unsigned char 
 25872 ;; Return value:  Size  Location     Type
 25873 ;;                  1    wreg      void 
 25874 ;; Registers used:
 25875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25876 ;; Tracked objects:
 25877 ;;		On entry : 0/0
 25878 ;;		On exit  : 0/0
 25879 ;;		Unchanged: 0/0
 25880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25881 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25882 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25884 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25885 ;;Total ram usage:        5 bytes
 25886 ;; Hardware stack levels used:    1
 25887 ;; Hardware stack levels required when called:   12
 25888 ;; This function calls:
 25889 ;;		_UartTxBufferStatus
 25890 ;;		_UartWriteByte
 25891 ;; This function is called by:
 25892 ;;		_SendSmsSm
 25893 ;;		_GsmGprsTerminal
 25894 ;; This function uses a non-reentrant model
 25895 ;;
 25896                           
 25897                           	psect	text122
 25898  005F78                     __ptext122:
 25899                           	opt stack 0
 25900  005F78                     _Uart_WriteStringLen:
 25901                           	opt stack 14
 25902                           
 25903                           ;incstack = 0
 25904                           ;Uart_WriteStringLen@Module stored from wreg
 25905  005F78  0100               	movlb	0	; () banked
 25906  005F7A  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 25907                           
 25908                           ;uart_drv.c: 544: UINT8 Index;
 25909                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 25910  005F7C  0E00               	movlw	0
 25911  005F7E  0100               	movlb	0	; () banked
 25912  005F80  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 25913  005F82  D015               	goto	l715
 25914  005F84                     
 25915                           ; BSR set to: 0
 25916                           ;uart_drv.c: 547: {
 25917                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 25918                           
 25919                           ; BSR set to: 0
 25920  005F84  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 25921  005F88  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 25922  005F8C  50DF               	movf	indf2,w,c
 25923  005F8E  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 25924  005F90  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 25925  005F92  EC09  F033         	call	_UartWriteByte
 25926                           
 25927                           ;uart_drv.c: 551: StringToWrite++;
 25928  005F96  0100               	movlb	0	; () banked
 25929  005F98  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 25930  005F9A  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 25931  005F9C                     
 25932                           ; BSR set to: 0
 25933                           
 25934                           ; BSR set to: 0
 25935  005F9C  0100               	movlb	0	; () banked
 25936  005F9E  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 25937  005FA0  ECED  F02D         	call	_UartTxBufferStatus
 25938  005FA4  06E8               	decf	wreg,f,c
 25939  005FA6  B4D8               	btfsc	status,2,c
 25940  005FA8  D7F9               	goto	l718
 25941  005FAA  0100               	movlb	0	; () banked
 25942  005FAC  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 25943  005FAE                     l715:
 25944                           
 25945                           ; BSR set to: 0
 25946                           
 25947                           ; BSR set to: 0
 25948  005FAE  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 25949  005FB0  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 25950  005FB2  B0D8               	btfsc	status,0,c
 25951  005FB4  0012               	return	
 25952  005FB6  D7E6               	goto	l716
 25953  005FB8                     __end_of_Uart_WriteStringLen:
 25954                           	opt stack 0
 25955                           tosu	equ	0xFFF
 25956                           tosh	equ	0xFFE
 25957                           tosl	equ	0xFFD
 25958                           pclath	equ	0xFFA
 25959                           tblptru	equ	0xFF8
 25960                           tblptrh	equ	0xFF7
 25961                           tblptrl	equ	0xFF6
 25962                           tablat	equ	0xFF5
 25963                           prodh	equ	0xFF4
 25964                           prodl	equ	0xFF3
 25965                           intcon	equ	0xFF2
 25966                           intcon2	equ	0xFF1
 25967                           intcon3	equ	0xFF0
 25968                           indf0	equ	0xFEF
 25969                           postinc0	equ	0xFEE
 25970                           plusw0	equ	0xFEB
 25971                           fsr0h	equ	0xFEA
 25972                           fsr0l	equ	0xFE9
 25973                           wreg	equ	0xFE8
 25974                           indf1	equ	0xFE7
 25975                           postinc1	equ	0xFE6
 25976                           postdec1	equ	0xFE5
 25977                           fsr1h	equ	0xFE2
 25978                           fsr1l	equ	0xFE1
 25979                           indf2	equ	0xFDF
 25980                           postinc2	equ	0xFDE
 25981                           postdec2	equ	0xFDD
 25982                           plusw2	equ	0xFDB
 25983                           fsr2h	equ	0xFDA
 25984                           fsr2l	equ	0xFD9
 25985                           status	equ	0xFD8
 25986                           
 25987 ;; *************** function _ModemEvtParser *****************
 25988 ;; Defined at:
 25989 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25990 ;; Parameters:    Size  Location     Type
 25991 ;;		None
 25992 ;; Auto vars:     Size  Location     Type
 25993 ;;  CallReadyStr   10   47[BANK0 ] unsigned char [10]
 25994 ;;  SmsString       5   62[BANK0 ] unsigned char [5]
 25995 ;;  ClipString      5   57[BANK0 ] unsigned char [5]
 25996 ;;  RingString      4   67[BANK0 ] unsigned char [4]
 25997 ;;  CompareIdx      1   72[BANK0 ] unsigned char 
 25998 ;;  Match           1   71[BANK0 ] unsigned char 
 25999 ;; Return value:  Size  Location     Type
 26000 ;;                  1    wreg      void 
 26001 ;; Registers used:
 26002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26003 ;; Tracked objects:
 26004 ;;		On entry : 0/0
 26005 ;;		On exit  : 0/0
 26006 ;;		Unchanged: 0/0
 26007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26009 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26011 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26012 ;;Total ram usage:       26 bytes
 26013 ;; Hardware stack levels used:    1
 26014 ;; Hardware stack levels required when called:   12
 26015 ;; This function calls:
 26016 ;;		_GenerateEvt
 26017 ;;		_ReceiveEvt
 26018 ;;		_StringCompare
 26019 ;;		_StringCopy
 26020 ;;		_Uart_ClearRxBuffer
 26021 ;; This function is called by:
 26022 ;;		_Mdm_MainTask
 26023 ;; This function uses a non-reentrant model
 26024 ;;
 26025                           
 26026                           	psect	text123
 26027  002024                     __ptext123:
 26028                           	opt stack 0
 26029  002024                     _ModemEvtParser:
 26030                           	opt stack 15
 26031                           
 26032                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 26033                           
 26034                           ; BSR set to: 0
 26035                           ;incstack = 0
 26036  002024  C3C6  F0A3         	movff	ModemEvtParser@F9108,ModemEvtParser@RingString
 26037  002028  C3C7  F0A4         	movff	ModemEvtParser@F9108+1,ModemEvtParser@RingString+1
 26038  00202C  C3C8  F0A5         	movff	ModemEvtParser@F9108+2,ModemEvtParser@RingString+2
 26039  002030  C3C9  F0A6         	movff	ModemEvtParser@F9108+3,ModemEvtParser@RingString+3
 26040                           
 26041                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 26042  002034  EE23  F0C1         	lfsr	2,ModemEvtParser@F9110
 26043  002038  EE10  F099         	lfsr	1,ModemEvtParser@ClipString
 26044  00203C  0E04               	movlw	4
 26045  00203E                     u14431:
 26046  00203E  CFDB FFE3          	movff	plusw2,plusw1
 26047  002042  06E8               	decf	wreg,f,c
 26048  002044  E2FC               	bc	u14431
 26049                           
 26050                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 26051  002046  EE23  F0BC         	lfsr	2,ModemEvtParser@F9112
 26052  00204A  EE10  F09E         	lfsr	1,ModemEvtParser@SmsString
 26053  00204E  0E04               	movlw	4
 26054  002050                     u14441:
 26055  002050  CFDB FFE3          	movff	plusw2,plusw1
 26056  002054  06E8               	decf	wreg,f,c
 26057  002056  E2FC               	bc	u14441
 26058                           
 26059                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 26060  002058  EE24  F0D6         	lfsr	2,ModemEvtParser@F9114
 26061  00205C  EE10  F08F         	lfsr	1,ModemEvtParser@CallReadyString
 26062  002060  0E09               	movlw	9
 26063  002062                     u14451:
 26064  002062  CFDB FFE3          	movff	plusw2,plusw1
 26065  002066  06E8               	decf	wreg,f,c
 26066  002068  E2FC               	bc	u14451
 26067                           
 26068                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 26069  00206A  0E00               	movlw	0
 26070  00206C  0100               	movlb	0	; () banked
 26071  00206E  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 26072                           
 26073                           ; BSR set to: 0
 26074                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 26075  002070  0E00               	movlw	0
 26076  002072  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 26077                           
 26078                           ; BSR set to: 0
 26079                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 26080  002074  0E3B               	movlw	low _NewMdmEvtParserRequest
 26081  002076  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26082  002078  0E00               	movlw	high _NewMdmEvtParserRequest
 26083  00207A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26084  00207C  ECAA  F031         	call	_ReceiveEvt	;wreg free
 26085  002080  0900               	iorlw	0
 26086  002082  B4D8               	btfsc	status,2,c
 26087  002084  0012               	return	
 26088                           
 26089                           ;mdm_gsm_gprs.c: 510: {
 26090                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 26091  002086  0E00               	movlw	0
 26092  002088  0100               	movlb	0	; () banked
 26093  00208A  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 26094  00208C                     l14984:
 26095                           
 26096                           ; BSR set to: 0
 26097  00208C  0E03               	movlw	3
 26098  00208E  65A8               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 26099  002090  D074               	goto	l1052
 26100  002092  D083               	goto	u14520
 26101  002094                     
 26102                           ; BSR set to: 0
 26103                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 26104                           
 26105                           ; BSR set to: 0
 26106  002094  0EA3               	movlw	low ModemEvtParser@RingString
 26107  002096  6F7D               	movwf	StringCompare@String1& (0+255),b
 26108  002098  0E00               	movlw	high ModemEvtParser@RingString
 26109  00209A  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 26110  00209C  0E58               	movlw	low _RxBuffer
 26111  00209E  6F7F               	movwf	StringCompare@String2& (0+255),b
 26112  0020A0  0E0C               	movlw	high _RxBuffer
 26113  0020A2  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 26114  0020A4  0E00               	movlw	0
 26115  0020A6  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 26116  0020A8  0E04               	movlw	4
 26117  0020AA  6F81               	movwf	StringCompare@Len& (0+255),b
 26118  0020AC  EC25  F02D         	call	_StringCompare	;wreg free
 26119  0020B0  0900               	iorlw	0
 26120  0020B2  B4D8               	btfsc	status,2,c
 26121  0020B4  D06F               	goto	l1055
 26122                           
 26123                           ;mdm_gsm_gprs.c: 518: {
 26124                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 26125  0020B6  0EDE               	movlw	low _RingEvent
 26126  0020B8  0100               	movlb	0	; () banked
 26127  0020BA  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26128  0020BC  0E00               	movlw	high _RingEvent
 26129  0020BE  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26130  0020C0  EC9F  F033         	call	_GenerateEvt	;wreg free
 26131  0020C4  D040               	goto	l15006
 26132  0020C6                     
 26133                           ; BSR set to: 0
 26134                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 26135                           
 26136                           ; BSR set to: 0
 26137  0020C6  0E99               	movlw	low ModemEvtParser@ClipString
 26138  0020C8  6F7D               	movwf	StringCompare@String1& (0+255),b
 26139  0020CA  0E00               	movlw	high ModemEvtParser@ClipString
 26140  0020CC  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 26141  0020CE  0E58               	movlw	low _RxBuffer
 26142  0020D0  6F7F               	movwf	StringCompare@String2& (0+255),b
 26143  0020D2  0E0C               	movlw	high _RxBuffer
 26144  0020D4  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 26145  0020D6  0E00               	movlw	0
 26146  0020D8  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 26147  0020DA  0E05               	movlw	5
 26148  0020DC  6F81               	movwf	StringCompare@Len& (0+255),b
 26149  0020DE  EC25  F02D         	call	_StringCompare	;wreg free
 26150  0020E2  0900               	iorlw	0
 26151  0020E4  B4D8               	btfsc	status,2,c
 26152  0020E6  D056               	goto	l1055
 26153                           
 26154                           ;mdm_gsm_gprs.c: 529: {
 26155                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 26156  0020E8  0E60               	movlw	low (_RxBuffer+8)
 26157  0020EA  0100               	movlb	0	; () banked
 26158  0020EC  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26159  0020EE  0E0C               	movlw	high (_RxBuffer+8)
 26160  0020F0  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26161  0020F2  0E35               	movlw	low _callerNumber
 26162  0020F4  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26163  0020F6  0E03               	movlw	high _callerNumber
 26164  0020F8  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26165  0020FA  0E00               	movlw	0
 26166  0020FC  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 26167  0020FE  0E0D               	movlw	13
 26168  002100  6F89               	movwf	StringCopy@Len& (0+255),b
 26169  002102  ECBD  F02A         	call	_StringCopy	;wreg free
 26170                           
 26171                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 26172  002106  0EDD               	movlw	low _ClipEvent
 26173  002108  0100               	movlb	0	; () banked
 26174  00210A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26175  00210C  0E00               	movlw	high _ClipEvent
 26176  00210E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26177  002110  EC9F  F033         	call	_GenerateEvt	;wreg free
 26178  002114  D018               	goto	l15006
 26179  002116                     
 26180                           ; BSR set to: 0
 26181                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 26182                           
 26183                           ; BSR set to: 0
 26184  002116  0E9E               	movlw	low ModemEvtParser@SmsString
 26185  002118  6F7D               	movwf	StringCompare@String1& (0+255),b
 26186  00211A  0E00               	movlw	high ModemEvtParser@SmsString
 26187  00211C  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 26188  00211E  0E58               	movlw	low _RxBuffer
 26189  002120  6F7F               	movwf	StringCompare@String2& (0+255),b
 26190  002122  0E0C               	movlw	high _RxBuffer
 26191  002124  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 26192  002126  0E00               	movlw	0
 26193  002128  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 26194  00212A  0E05               	movlw	5
 26195  00212C  6F81               	movwf	StringCompare@Len& (0+255),b
 26196  00212E  EC25  F02D         	call	_StringCompare	;wreg free
 26197  002132  0900               	iorlw	0
 26198  002134  B4D8               	btfsc	status,2,c
 26199  002136  D02E               	goto	l1055
 26200                           
 26201                           ;mdm_gsm_gprs.c: 541: {
 26202                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 26203  002138  0EDC               	movlw	low _SmsEvent
 26204  00213A  0100               	movlb	0	; () banked
 26205  00213C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26206  00213E  0E00               	movlw	high _SmsEvent
 26207  002140  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26208  002142  EC9F  F033         	call	_GenerateEvt	;wreg free
 26209  002146                     l15006:
 26210                           
 26211                           ;mdm_gsm_gprs.c: 545: Match = 1;
 26212  002146  0E01               	movlw	1
 26213  002148  0100               	movlb	0	; () banked
 26214  00214A  D015               	goto	L37
 26215  00214C                     
 26216                           ; BSR set to: 0
 26217                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 26218                           
 26219                           ; BSR set to: 0
 26220  00214C  0E8F               	movlw	low ModemEvtParser@CallReadyString
 26221  00214E  6F7D               	movwf	StringCompare@String1& (0+255),b
 26222  002150  0E00               	movlw	high ModemEvtParser@CallReadyString
 26223  002152  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 26224  002154  0E58               	movlw	low _RxBuffer
 26225  002156  6F7F               	movwf	StringCompare@String2& (0+255),b
 26226  002158  0E0C               	movlw	high _RxBuffer
 26227  00215A  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 26228  00215C  0E00               	movlw	0
 26229  00215E  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 26230  002160  0E0A               	movlw	10
 26231  002162  6F81               	movwf	StringCompare@Len& (0+255),b
 26232  002164  EC25  F02D         	call	_StringCompare	;wreg free
 26233  002168  0900               	iorlw	0
 26234  00216A  B4D8               	btfsc	status,2,c
 26235  00216C  D013               	goto	l1055
 26236                           
 26237                           ;mdm_gsm_gprs.c: 552: {
 26238                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 26239  00216E  0E02               	movlw	2
 26240  002170  0100               	movlb	0	; () banked
 26241  002172  6FD0               	movwf	_MdmStatus& (0+255),b
 26242                           
 26243                           ;mdm_gsm_gprs.c: 556: Match = 1;
 26244  002174  0E01               	movlw	1
 26245  002176                     L37:
 26246  002176  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 26247                           
 26248                           ; BSR set to: 0
 26249                           ;mdm_gsm_gprs.c: 562: }
 26250                           
 26251                           ; BSR set to: 0
 26252                           ;mdm_gsm_gprs.c: 561: break;
 26253                           
 26254                           ;mdm_gsm_gprs.c: 560: default:
 26255                           
 26256                           ; BSR set to: 0
 26257                           ;mdm_gsm_gprs.c: 557: }
 26258                           ;mdm_gsm_gprs.c: 558: break;
 26259  002178  D00D               	goto	l1055
 26260  00217A                     l1052:
 26261                           
 26262                           ; BSR set to: 0
 26263                           
 26264                           ; BSR set to: 0
 26265  00217A  51A8               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 26266                           
 26267                           ; Switch size 1, requested type "space"
 26268                           ; Number of cases is 4, Range of values is 0 to 3
 26269                           ; switch strategies available:
 26270                           ; Name         Instructions Cycles
 26271                           ; simple_byte           13     7 (average)
 26272                           ;	Chosen strategy is simple_byte
 26273  00217C  0A00               	xorlw	0	; case 0
 26274  00217E  B4D8               	btfsc	status,2,c
 26275  002180  D789               	goto	l1053
 26276  002182  0A01               	xorlw	1	; case 1
 26277  002184  B4D8               	btfsc	status,2,c
 26278  002186  D7C7               	goto	l1058
 26279  002188  0A03               	xorlw	3	; case 2
 26280  00218A  B4D8               	btfsc	status,2,c
 26281  00218C  D7DF               	goto	l1060
 26282  00218E  0A01               	xorlw	1	; case 3
 26283  002190  B4D8               	btfsc	status,2,c
 26284  002192  D799               	goto	l1056
 26285  002194                     l1055:
 26286                           
 26287                           ; BSR set to: 0
 26288  002194  0100               	movlb	0	; () banked
 26289  002196  2BA8               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 26290  002198  D779               	goto	l14984
 26291  00219A                     u14520:
 26292                           
 26293                           ; BSR set to: 0
 26294                           ;mdm_gsm_gprs.c: 563: }
 26295                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 26296                           
 26297                           ; BSR set to: 0
 26298  00219A  05A7               	decf	ModemEvtParser@Match& (0+255),w,b
 26299  00219C  A4D8               	btfss	status,2,c
 26300  00219E  0012               	return	
 26301                           
 26302                           ; BSR set to: 0
 26303                           ;mdm_gsm_gprs.c: 567: {
 26304                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 26305  0021A0  ECE7  F030         	call	_Uart_ClearRxBuffer	;wreg free
 26306  0021A4  0012               	return	
 26307  0021A6                     __end_of_ModemEvtParser:
 26308                           	opt stack 0
 26309                           tosu	equ	0xFFF
 26310                           tosh	equ	0xFFE
 26311                           tosl	equ	0xFFD
 26312                           pclath	equ	0xFFA
 26313                           tblptru	equ	0xFF8
 26314                           tblptrh	equ	0xFF7
 26315                           tblptrl	equ	0xFF6
 26316                           tablat	equ	0xFF5
 26317                           prodh	equ	0xFF4
 26318                           prodl	equ	0xFF3
 26319                           intcon	equ	0xFF2
 26320                           intcon2	equ	0xFF1
 26321                           intcon3	equ	0xFF0
 26322                           indf0	equ	0xFEF
 26323                           postinc0	equ	0xFEE
 26324                           plusw0	equ	0xFEB
 26325                           fsr0h	equ	0xFEA
 26326                           fsr0l	equ	0xFE9
 26327                           wreg	equ	0xFE8
 26328                           indf1	equ	0xFE7
 26329                           postinc1	equ	0xFE6
 26330                           postdec1	equ	0xFE5
 26331                           plusw1	equ	0xFE3
 26332                           fsr1h	equ	0xFE2
 26333                           fsr1l	equ	0xFE1
 26334                           indf2	equ	0xFDF
 26335                           postinc2	equ	0xFDE
 26336                           postdec2	equ	0xFDD
 26337                           plusw2	equ	0xFDB
 26338                           fsr2h	equ	0xFDA
 26339                           fsr2l	equ	0xFD9
 26340                           status	equ	0xFD8
 26341                           
 26342 ;; *************** function _Uart_ClearRxBuffer *****************
 26343 ;; Defined at:
 26344 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26345 ;; Parameters:    Size  Location     Type
 26346 ;;		None
 26347 ;; Auto vars:     Size  Location     Type
 26348 ;;  Index           2   29[BANK0 ] unsigned short 
 26349 ;; Return value:  Size  Location     Type
 26350 ;;                  1    wreg      void 
 26351 ;; Registers used:
 26352 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26353 ;; Tracked objects:
 26354 ;;		On entry : 0/0
 26355 ;;		On exit  : 0/0
 26356 ;;		Unchanged: 0/0
 26357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26361 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26362 ;;Total ram usage:        2 bytes
 26363 ;; Hardware stack levels used:    1
 26364 ;; Hardware stack levels required when called:   11
 26365 ;; This function calls:
 26366 ;;		Nothing
 26367 ;; This function is called by:
 26368 ;;		_ModemEvtParser
 26369 ;; This function uses a non-reentrant model
 26370 ;;
 26371                           
 26372                           	psect	text124
 26373  0061CE                     __ptext124:
 26374                           	opt stack 0
 26375  0061CE                     _Uart_ClearRxBuffer:
 26376                           	opt stack 15
 26377                           
 26378                           ;uart_drv.c: 567: UINT16 Index = 0;
 26379                           
 26380                           ;incstack = 0
 26381  0061CE  0E00               	movlw	0
 26382  0061D0  0100               	movlb	0	; () banked
 26383  0061D2  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 26384  0061D4  0E00               	movlw	0
 26385  0061D6  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 26386                           
 26387                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 26388  0061D8  0E00               	movlw	0
 26389  0061DA  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 26390  0061DC  0E00               	movlw	0
 26391  0061DE  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 26392  0061E0                     l14196:
 26393                           
 26394                           ; BSR set to: 0
 26395  0061E0  0E90               	movlw	144
 26396  0061E2  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 26397  0061E4  0E01               	movlw	1
 26398  0061E6  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 26399  0061E8  B0D8               	btfsc	status,0,c
 26400  0061EA  0012               	return	
 26401                           
 26402                           ; BSR set to: 0
 26403                           ;uart_drv.c: 571: {
 26404                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 26405                           
 26406                           ; BSR set to: 0
 26407                           
 26408                           ; BSR set to: 0
 26409  0061EC  0E58               	movlw	low _RxBuffer
 26410  0061EE  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 26411  0061F0  6ED9               	movwf	fsr2l,c
 26412  0061F2  0E0C               	movlw	high _RxBuffer
 26413  0061F4  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 26414  0061F6  6EDA               	movwf	fsr2h,c
 26415  0061F8  0E00               	movlw	0
 26416  0061FA  6EDF               	movwf	indf2,c
 26417                           
 26418                           ; BSR set to: 0
 26419  0061FC  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 26420  0061FE  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 26421  006200  D7EF               	goto	l14196
 26422  006202                     __end_of_Uart_ClearRxBuffer:
 26423                           	opt stack 0
 26424                           tosu	equ	0xFFF
 26425                           tosh	equ	0xFFE
 26426                           tosl	equ	0xFFD
 26427                           pclath	equ	0xFFA
 26428                           tblptru	equ	0xFF8
 26429                           tblptrh	equ	0xFF7
 26430                           tblptrl	equ	0xFF6
 26431                           tablat	equ	0xFF5
 26432                           prodh	equ	0xFF4
 26433                           prodl	equ	0xFF3
 26434                           intcon	equ	0xFF2
 26435                           intcon2	equ	0xFF1
 26436                           intcon3	equ	0xFF0
 26437                           indf0	equ	0xFEF
 26438                           postinc0	equ	0xFEE
 26439                           plusw0	equ	0xFEB
 26440                           fsr0h	equ	0xFEA
 26441                           fsr0l	equ	0xFE9
 26442                           wreg	equ	0xFE8
 26443                           indf1	equ	0xFE7
 26444                           postinc1	equ	0xFE6
 26445                           postdec1	equ	0xFE5
 26446                           plusw1	equ	0xFE3
 26447                           fsr1h	equ	0xFE2
 26448                           fsr1l	equ	0xFE1
 26449                           indf2	equ	0xFDF
 26450                           postinc2	equ	0xFDE
 26451                           postdec2	equ	0xFDD
 26452                           plusw2	equ	0xFDB
 26453                           fsr2h	equ	0xFDA
 26454                           fsr2l	equ	0xFD9
 26455                           status	equ	0xFD8
 26456                           
 26457 ;; *************** function _StringCompare *****************
 26458 ;; Defined at:
 26459 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 26460 ;; Parameters:    Size  Location     Type
 26461 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 26462 ;;		 -> MyApp_Task@receivedNumber(13), smsText(20), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 26463 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 26464 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 26465 ;;		 -> isNumberInMemory@readBuffer(13), MyApp_Task@cmdAddNumber(4), parseCommand@deleteNumberCmd(3), parseCommand@addNu
      +mberCmd(3), 
 26466 ;;		 -> RxBuffer(400), 
 26467 ;;  Len             2   33[BANK0 ] unsigned short 
 26468 ;; Auto vars:     Size  Location     Type
 26469 ;;  Index           2   38[BANK0 ] unsigned short 
 26470 ;;  Result          1   37[BANK0 ] unsigned char 
 26471 ;; Return value:  Size  Location     Type
 26472 ;;                  1    wreg      unsigned char 
 26473 ;; Registers used:
 26474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26475 ;; Tracked objects:
 26476 ;;		On entry : 0/0
 26477 ;;		On exit  : 0/0
 26478 ;;		Unchanged: 0/0
 26479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26480 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26481 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26482 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26483 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26484 ;;Total ram usage:       11 bytes
 26485 ;; Hardware stack levels used:    1
 26486 ;; Hardware stack levels required when called:   11
 26487 ;; This function calls:
 26488 ;;		Nothing
 26489 ;; This function is called by:
 26490 ;;		_ModemEvtParser
 26491 ;;		_parseCommand
 26492 ;;		_MyApp_Task
 26493 ;;		_isNumberInMemory
 26494 ;; This function uses a non-reentrant model
 26495 ;;
 26496                           
 26497                           	psect	text125
 26498  005A4A                     __ptext125:
 26499                           	opt stack 0
 26500  005A4A                     _StringCompare:
 26501                           	opt stack 15
 26502                           
 26503                           ;sf.c: 77: UINT16 Index = 0;
 26504                           
 26505                           ; BSR set to: 0
 26506                           ;incstack = 0
 26507  005A4A  0E00               	movlw	0
 26508  005A4C  0100               	movlb	0	; () banked
 26509  005A4E  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 26510  005A50  0E00               	movlw	0
 26511  005A52  6F86               	movwf	StringCompare@Index& (0+255),b
 26512                           
 26513                           ;sf.c: 78: UINT8 Result = 1;
 26514  005A54  0E01               	movlw	1
 26515  005A56  6F85               	movwf	StringCompare@Result& (0+255),b
 26516                           
 26517                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 26518  005A58  0E00               	movlw	0
 26519  005A5A  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 26520  005A5C  0E00               	movlw	0
 26521  005A5E  6F86               	movwf	StringCompare@Index& (0+255),b
 26522  005A60  D015               	goto	l2240
 26523  005A62                     
 26524                           ; BSR set to: 0
 26525                           ;sf.c: 82: {
 26526                           ;sf.c: 83: if (String1[Index] != String2[Index])
 26527                           
 26528                           ; BSR set to: 0
 26529  005A62  5186               	movf	StringCompare@Index& (0+255),w,b
 26530  005A64  257F               	addwf	StringCompare@String2& (0+255),w,b
 26531  005A66  6ED9               	movwf	fsr2l,c
 26532  005A68  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 26533  005A6A  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 26534  005A6C  6EDA               	movwf	fsr2h,c
 26535  005A6E  5186               	movf	StringCompare@Index& (0+255),w,b
 26536  005A70  257D               	addwf	StringCompare@String1& (0+255),w,b
 26537  005A72  6EE1               	movwf	fsr1l,c
 26538  005A74  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 26539  005A76  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 26540  005A78  6EE2               	movwf	fsr1h,c
 26541  005A7A  50DE               	movf	postinc2,w,c
 26542  005A7C  18E6               	xorwf	postinc1,w,c
 26543  005A7E  B4D8               	btfsc	status,2,c
 26544  005A80  D003               	goto	l2242
 26545                           
 26546                           ; BSR set to: 0
 26547                           ;sf.c: 84: {
 26548                           ;sf.c: 85: Result = 0;
 26549  005A82  0E00               	movlw	0
 26550  005A84  6F85               	movwf	StringCompare@Result& (0+255),b
 26551                           
 26552                           ;sf.c: 86: break;
 26553  005A86  D008               	goto	u13400
 26554  005A88                     l2242:
 26555                           
 26556                           ; BSR set to: 0
 26557                           
 26558                           ; BSR set to: 0
 26559  005A88  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 26560  005A8A  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 26561  005A8C                     l2240:
 26562                           
 26563                           ; BSR set to: 0
 26564                           
 26565                           ; BSR set to: 0
 26566  005A8C  5181               	movf	StringCompare@Len& (0+255),w,b
 26567  005A8E  5D86               	subwf	StringCompare@Index& (0+255),w,b
 26568  005A90  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 26569  005A92  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 26570  005A94  A0D8               	btfss	status,0,c
 26571  005A96  D7E5               	goto	l2241
 26572  005A98                     u13400:
 26573                           
 26574                           ; BSR set to: 0
 26575                           ;sf.c: 87: }
 26576                           ;sf.c: 88: }
 26577                           ;sf.c: 91: return Result;
 26578                           
 26579                           ; BSR set to: 0
 26580  005A98  5185               	movf	StringCompare@Result& (0+255),w,b
 26581  005A9A  0012               	return	
 26582  005A9C                     __end_of_StringCompare:
 26583                           	opt stack 0
 26584                           tosu	equ	0xFFF
 26585                           tosh	equ	0xFFE
 26586                           tosl	equ	0xFFD
 26587                           pclath	equ	0xFFA
 26588                           tblptru	equ	0xFF8
 26589                           tblptrh	equ	0xFF7
 26590                           tblptrl	equ	0xFF6
 26591                           tablat	equ	0xFF5
 26592                           prodh	equ	0xFF4
 26593                           prodl	equ	0xFF3
 26594                           intcon	equ	0xFF2
 26595                           intcon2	equ	0xFF1
 26596                           intcon3	equ	0xFF0
 26597                           indf0	equ	0xFEF
 26598                           postinc0	equ	0xFEE
 26599                           plusw0	equ	0xFEB
 26600                           fsr0h	equ	0xFEA
 26601                           fsr0l	equ	0xFE9
 26602                           wreg	equ	0xFE8
 26603                           indf1	equ	0xFE7
 26604                           postinc1	equ	0xFE6
 26605                           postdec1	equ	0xFE5
 26606                           plusw1	equ	0xFE3
 26607                           fsr1h	equ	0xFE2
 26608                           fsr1l	equ	0xFE1
 26609                           indf2	equ	0xFDF
 26610                           postinc2	equ	0xFDE
 26611                           postdec2	equ	0xFDD
 26612                           plusw2	equ	0xFDB
 26613                           fsr2h	equ	0xFDA
 26614                           fsr2l	equ	0xFD9
 26615                           status	equ	0xFD8
 26616                           
 26617 ;; *************** function _GetSmsSm *****************
 26618 ;; Defined at:
 26619 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26620 ;; Parameters:    Size  Location     Type
 26621 ;;		None
 26622 ;; Auto vars:     Size  Location     Type
 26623 ;;		None
 26624 ;; Return value:  Size  Location     Type
 26625 ;;                  1    wreg      void 
 26626 ;; Registers used:
 26627 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26628 ;; Tracked objects:
 26629 ;;		On entry : 0/0
 26630 ;;		On exit  : 0/0
 26631 ;;		Unchanged: 0/0
 26632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26637 ;;Total ram usage:        0 bytes
 26638 ;; Hardware stack levels used:    1
 26639 ;; Hardware stack levels required when called:   13
 26640 ;; This function calls:
 26641 ;;		_ClearBuffer
 26642 ;;		_GenerateEvt
 26643 ;;		_ReceiveEvt
 26644 ;;		_StringCopy
 26645 ;;		_Uart_WriteConstString
 26646 ;; This function is called by:
 26647 ;;		_Mdm_MainTask
 26648 ;; This function uses a non-reentrant model
 26649 ;;
 26650                           
 26651                           	psect	text126
 26652  002D88                     __ptext126:
 26653                           	opt stack 0
 26654  002D88                     _GetSmsSm:
 26655                           	opt stack 14
 26656                           
 26657                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 26658                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 26659                           
 26660                           ; BSR set to: 0
 26661                           ;incstack = 0
 26662  002D88  0E03               	movlw	3
 26663  002D8A  0100               	movlb	0	; () banked
 26664  002D8C  19D0               	xorwf	_MdmStatus& (0+255),w,b
 26665  002D8E  A4D8               	btfss	status,2,c
 26666  002D90  0012               	return	
 26667  002D92  D084               	goto	l1070
 26668  002D94                     
 26669                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 26670                           
 26671                           ; BSR set to: 0
 26672  002D94  0EDB               	movlw	low _GetSmsText
 26673  002D96  0100               	movlb	0	; () banked
 26674  002D98  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26675  002D9A  0E00               	movlw	high _GetSmsText
 26676  002D9C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26677  002D9E  ECAA  F031         	call	_ReceiveEvt	;wreg free
 26678  002DA2  0900               	iorlw	0
 26679  002DA4  B4D8               	btfsc	status,2,c
 26680  002DA6  0012               	return	
 26681                           
 26682                           ;mdm_gsm_gprs.c: 596: {
 26683                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 26684  002DA8  0E01               	movlw	1
 26685  002DAA  0101               	movlb	1	; () banked
 26686  002DAC  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26687                           
 26688                           ; BSR set to: 1
 26689                           ;mdm_gsm_gprs.c: 599: }
 26690                           ;mdm_gsm_gprs.c: 600: break;
 26691  002DAE  0012               	return	
 26692  002DB0                     
 26693                           ; BSR set to: 1
 26694                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 26695                           
 26696                           ; BSR set to: 1
 26697  002DB0  0EC2               	movlw	low STR_4
 26698  002DB2  0100               	movlb	0	; () banked
 26699  002DB4  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26700  002DB6  0EFF               	movlw	high STR_4
 26701  002DB8  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26702  002DBA  0E01               	movlw	1
 26703  002DBC  EC7A  F02F         	call	_Uart_WriteConstString
 26704                           
 26705                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 26706  002DC0  0E02               	movlw	2
 26707  002DC2  0101               	movlb	1	; () banked
 26708  002DC4  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26709                           
 26710                           ;mdm_gsm_gprs.c: 607: break;
 26711  002DC6  0012               	return	
 26712  002DC8                     
 26713                           ; BSR set to: 1
 26714                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 26715                           
 26716                           ; BSR set to: 1
 26717  002DC8  0E3C               	movlw	low _NewStringReceived
 26718  002DCA  0100               	movlb	0	; () banked
 26719  002DCC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26720  002DCE  0E00               	movlw	high _NewStringReceived
 26721  002DD0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26722  002DD2  ECAA  F031         	call	_ReceiveEvt	;wreg free
 26723  002DD6  0900               	iorlw	0
 26724  002DD8  B4D8               	btfsc	status,2,c
 26725  002DDA  0012               	return	
 26726                           
 26727                           ;mdm_gsm_gprs.c: 612: {
 26728                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 26729  002DDC  CC58  FFE8         	movff	_RxBuffer,wreg
 26730  002DE0  0A2B               	xorlw	43
 26731  002DE2  A4D8               	btfss	status,2,c
 26732  002DE4  0012               	return	
 26733  002DE6  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26734  002DEA  0A43               	xorlw	67
 26735  002DEC  A4D8               	btfss	status,2,c
 26736  002DEE  0012               	return	
 26737  002DF0  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 26738  002DF4  0A4D               	xorlw	77
 26739  002DF6  A4D8               	btfss	status,2,c
 26740  002DF8  0012               	return	
 26741                           
 26742                           ;mdm_gsm_gprs.c: 614: {
 26743                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 26744  002DFA  0E00               	movlw	low _Mdm_SmsRx
 26745  002DFC  0100               	movlb	0	; () banked
 26746  002DFE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26747  002E00  0E07               	movlw	high _Mdm_SmsRx
 26748  002E02  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26749  002E04  0E00               	movlw	0
 26750  002E06  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26751  002E08  0E50               	movlw	80
 26752  002E0A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26753  002E0C  ECCC  F030         	call	_ClearBuffer	;wreg free
 26754                           
 26755                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 26756  002E10  0E58               	movlw	low _RxBuffer
 26757  002E12  0100               	movlb	0	; () banked
 26758  002E14  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26759  002E16  0E0C               	movlw	high _RxBuffer
 26760  002E18  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26761  002E1A  0E00               	movlw	low _Mdm_SmsRx
 26762  002E1C  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26763  002E1E  0E07               	movlw	high _Mdm_SmsRx
 26764  002E20  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26765  002E22  C0C2  F089         	movff	_RxLen,StringCopy@Len
 26766  002E26  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 26767  002E2A  ECBD  F02A         	call	_StringCopy	;wreg free
 26768                           
 26769                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 26770  002E2E  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 26771                           
 26772                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 26773  002E32  0E03               	movlw	3
 26774  002E34  0101               	movlb	1	; () banked
 26775  002E36  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26776                           
 26777                           ; BSR set to: 1
 26778                           ;mdm_gsm_gprs.c: 622: }
 26779                           ;mdm_gsm_gprs.c: 623: }
 26780                           ;mdm_gsm_gprs.c: 624: break;
 26781                           
 26782                           ; BSR set to: 1
 26783  002E38  0012               	return	
 26784  002E3A                     
 26785                           ; BSR set to: 1
 26786                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 26787                           
 26788                           ; BSR set to: 1
 26789  002E3A  0E3C               	movlw	low _NewStringReceived
 26790  002E3C  0100               	movlb	0	; () banked
 26791  002E3E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26792  002E40  0E00               	movlw	high _NewStringReceived
 26793  002E42  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26794  002E44  ECAA  F031         	call	_ReceiveEvt	;wreg free
 26795  002E48  0900               	iorlw	0
 26796  002E4A  B4D8               	btfsc	status,2,c
 26797  002E4C  0012               	return	
 26798                           
 26799                           ;mdm_gsm_gprs.c: 629: {
 26800                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 26801  002E4E  0E50               	movlw	low (_Mdm_SmsRx+80)
 26802  002E50  0100               	movlb	0	; () banked
 26803  002E52  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26804  002E54  0E07               	movlw	high (_Mdm_SmsRx+80)
 26805  002E56  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26806  002E58  0E00               	movlw	0
 26807  002E5A  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26808  002E5C  0E14               	movlw	20
 26809  002E5E  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26810  002E60  ECCC  F030         	call	_ClearBuffer	;wreg free
 26811                           
 26812                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 26813  002E64  0E58               	movlw	low _RxBuffer
 26814  002E66  0100               	movlb	0	; () banked
 26815  002E68  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26816  002E6A  0E0C               	movlw	high _RxBuffer
 26817  002E6C  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26818  002E6E  0E50               	movlw	low (_Mdm_SmsRx+80)
 26819  002E70  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26820  002E72  0E07               	movlw	high (_Mdm_SmsRx+80)
 26821  002E74  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26822  002E76  C0C2  F089         	movff	_RxLen,StringCopy@Len
 26823  002E7A  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 26824  002E7E  ECBD  F02A         	call	_StringCopy	;wreg free
 26825                           
 26826                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 26827  002E82  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 26828                           
 26829                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 26830  002E86  0E00               	movlw	0
 26831  002E88  0101               	movlb	1	; () banked
 26832  002E8A  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26833                           
 26834                           ; BSR set to: 1
 26835                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 26836  002E8C  0EDA               	movlw	low _SmsTxtReady
 26837  002E8E  0100               	movlb	0	; () banked
 26838  002E90  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26839  002E92  0E00               	movlw	high _SmsTxtReady
 26840  002E94  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26841  002E96  EC9F  F033         	call	_GenerateEvt	;wreg free
 26842                           
 26843                           ;mdm_gsm_gprs.c: 644: }
 26844                           
 26845                           ;mdm_gsm_gprs.c: 643: break;
 26846                           
 26847                           ;mdm_gsm_gprs.c: 642: default:
 26848                           
 26849                           ;mdm_gsm_gprs.c: 639: }
 26850                           ;mdm_gsm_gprs.c: 640: break;
 26851  002E9A  0012               	return	
 26852  002E9C                     l1070:
 26853  002E9C  0101               	movlb	1	; () banked
 26854  002E9E  51F1               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 26855                           
 26856                           ; Switch size 1, requested type "space"
 26857                           ; Number of cases is 4, Range of values is 0 to 3
 26858                           ; switch strategies available:
 26859                           ; Name         Instructions Cycles
 26860                           ; simple_byte           13     7 (average)
 26861                           ;	Chosen strategy is simple_byte
 26862  002EA0  0A00               	xorlw	0	; case 0
 26863  002EA2  B4D8               	btfsc	status,2,c
 26864  002EA4  D777               	goto	l1071
 26865  002EA6  0A01               	xorlw	1	; case 1
 26866  002EA8  B4D8               	btfsc	status,2,c
 26867  002EAA  D782               	goto	l1074
 26868  002EAC  0A03               	xorlw	3	; case 2
 26869  002EAE  B4D8               	btfsc	status,2,c
 26870  002EB0  D78B               	goto	l1075
 26871  002EB2  0A01               	xorlw	1	; case 3
 26872  002EB4  A4D8               	btfss	status,2,c
 26873                           
 26874                           ; BSR set to: 1
 26875  002EB6  0012               	return	
 26876  002EB8  D7C0               	goto	l1078
 26877  002EBA                     __end_of_GetSmsSm:
 26878                           	opt stack 0
 26879                           tosu	equ	0xFFF
 26880                           tosh	equ	0xFFE
 26881                           tosl	equ	0xFFD
 26882                           pclath	equ	0xFFA
 26883                           tblptru	equ	0xFF8
 26884                           tblptrh	equ	0xFF7
 26885                           tblptrl	equ	0xFF6
 26886                           tablat	equ	0xFF5
 26887                           prodh	equ	0xFF4
 26888                           prodl	equ	0xFF3
 26889                           intcon	equ	0xFF2
 26890                           intcon2	equ	0xFF1
 26891                           intcon3	equ	0xFF0
 26892                           indf0	equ	0xFEF
 26893                           postinc0	equ	0xFEE
 26894                           plusw0	equ	0xFEB
 26895                           fsr0h	equ	0xFEA
 26896                           fsr0l	equ	0xFE9
 26897                           wreg	equ	0xFE8
 26898                           indf1	equ	0xFE7
 26899                           postinc1	equ	0xFE6
 26900                           postdec1	equ	0xFE5
 26901                           plusw1	equ	0xFE3
 26902                           fsr1h	equ	0xFE2
 26903                           fsr1l	equ	0xFE1
 26904                           indf2	equ	0xFDF
 26905                           postinc2	equ	0xFDE
 26906                           postdec2	equ	0xFDD
 26907                           plusw2	equ	0xFDB
 26908                           fsr2h	equ	0xFDA
 26909                           fsr2l	equ	0xFD9
 26910                           status	equ	0xFD8
 26911                           
 26912 ;; *************** function _ConfigureModem *****************
 26913 ;; Defined at:
 26914 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26915 ;; Parameters:    Size  Location     Type
 26916 ;;		None
 26917 ;; Auto vars:     Size  Location     Type
 26918 ;;		None
 26919 ;; Return value:  Size  Location     Type
 26920 ;;                  1    wreg      void 
 26921 ;; Registers used:
 26922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26923 ;; Tracked objects:
 26924 ;;		On entry : 0/0
 26925 ;;		On exit  : 0/0
 26926 ;;		Unchanged: 0/0
 26927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26932 ;;Total ram usage:        0 bytes
 26933 ;; Hardware stack levels used:    1
 26934 ;; Hardware stack levels required when called:   14
 26935 ;; This function calls:
 26936 ;;		_GenerateEvt
 26937 ;;		_UartSetConfigLow
 26938 ;;		_Uart_InitUartModule
 26939 ;;		_Uart_WriteConstString
 26940 ;; This function is called by:
 26941 ;;		_Mdm_MainTask
 26942 ;; This function uses a non-reentrant model
 26943 ;;
 26944                           
 26945                           	psect	text127
 26946  0037B2                     __ptext127:
 26947                           	opt stack 0
 26948  0037B2                     _ConfigureModem:
 26949                           	opt stack 13
 26950                           
 26951                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 26952                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 26953                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 26954                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 26955                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 26956                           
 26957                           ;incstack = 0
 26958  0037B2  D05A               	goto	l1027
 26959  0037B4                     
 26960                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 26961  0037B4  0E02               	movlw	2
 26962  0037B6  0100               	movlb	0	; () banked
 26963  0037B8  19D0               	xorwf	_MdmStatus& (0+255),w,b
 26964  0037BA  A4D8               	btfss	status,2,c
 26965  0037BC  0012               	return	
 26966                           
 26967                           ; BSR set to: 0
 26968                           ;mdm_gsm_gprs.c: 431: {
 26969                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 26970  0037BE  0E01               	movlw	1
 26971  0037C0  0101               	movlb	1	; () banked
 26972  0037C2  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 26973                           
 26974                           ; BSR set to: 1
 26975                           ;mdm_gsm_gprs.c: 434: }
 26976                           ;mdm_gsm_gprs.c: 435: break;
 26977  0037C4  0012               	return	
 26978  0037C6                     
 26979                           ; BSR set to: 1
 26980                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 26981                           
 26982                           ; BSR set to: 1
 26983  0037C6  0E75               	movlw	low STR_2
 26984  0037C8  0100               	movlb	0	; () banked
 26985  0037CA  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26986  0037CC  0EFF               	movlw	high STR_2
 26987  0037CE  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26988  0037D0  0E01               	movlw	1
 26989  0037D2  EC7A  F02F         	call	_Uart_WriteConstString
 26990                           
 26991                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 26992  0037D6  ECD2  F02B         	call	_UartSetConfigLow	;wreg free
 26993                           
 26994                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 26995  0037DA  0E20               	movlw	low _UartConfig
 26996  0037DC  0100               	movlb	0	; () banked
 26997  0037DE  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 26998  0037E0  0E03               	movlw	high _UartConfig
 26999  0037E2  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 27000  0037E4  0E01               	movlw	1
 27001  0037E6  EC5E  F005         	call	_Uart_InitUartModule
 27002                           
 27003                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 27004  0037EA  0E03               	movlw	3
 27005  0037EC  0102               	movlb	2	; () banked
 27006  0037EE  6FD7               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 27007  0037F0  0EE8               	movlw	232
 27008  0037F2  6FD6               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 27009                           
 27010                           ; BSR set to: 2
 27011                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 27012  0037F4  0E02               	movlw	2
 27013  0037F6  0101               	movlb	1	; () banked
 27014  0037F8  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 27015                           
 27016                           ; BSR set to: 1
 27017                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 27018  0037FA  0E04               	movlw	4
 27019  0037FC  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 27020                           
 27021                           ;mdm_gsm_gprs.c: 449: break;
 27022  0037FE  0012               	return	
 27023  003800                     
 27024                           ; BSR set to: 1
 27025                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 27026                           
 27027                           ; BSR set to: 1
 27028  003800  0EDF               	movlw	low STR_3
 27029  003802  0100               	movlb	0	; () banked
 27030  003804  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27031  003806  0EFF               	movlw	high STR_3
 27032  003808  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27033  00380A  0E01               	movlw	1
 27034  00380C  EC7A  F02F         	call	_Uart_WriteConstString
 27035                           
 27036                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 27037  003810  0E03               	movlw	3
 27038  003812  0102               	movlb	2	; () banked
 27039  003814  6FD7               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 27040  003816  0EE8               	movlw	232
 27041  003818  6FD6               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 27042                           
 27043                           ; BSR set to: 2
 27044                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 27045  00381A  0E05               	movlw	5
 27046  00381C  0101               	movlb	1	; () banked
 27047  00381E  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 27048                           
 27049                           ; BSR set to: 1
 27050                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 27051  003820  0E04               	movlw	4
 27052  003822  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 27053                           
 27054                           ;mdm_gsm_gprs.c: 459: break;
 27055  003824  0012               	return	
 27056  003826                     
 27057                           ; BSR set to: 1
 27058                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 27059                           
 27060                           ; BSR set to: 1
 27061  003826  0103               	movlb	3	; () banked
 27062  003828  4B1E               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 27063  00382A  2B1F               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 27064                           
 27065                           ; BSR set to: 3
 27066                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 27067  00382C  0102               	movlb	2	; () banked
 27068  00382E  51D6               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 27069  003830  0103               	movlb	3	; () banked
 27070  003832  5D1E               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 27071  003834  0102               	movlb	2	; () banked
 27072  003836  51D7               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 27073  003838  0103               	movlb	3	; () banked
 27074  00383A  591F               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 27075  00383C  A0D8               	btfss	status,0,c
 27076  00383E  0012               	return	
 27077                           
 27078                           ; BSR set to: 3
 27079                           ;mdm_gsm_gprs.c: 466: {
 27080                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 27081  003840  0E00               	movlw	0
 27082  003842  6F1F               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 27083  003844  0E00               	movlw	0
 27084  003846  6F1E               	movwf	ConfigureModem@DelayCounter& (0+255),b
 27085                           
 27086                           ; BSR set to: 3
 27087                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 27088  003848  C1F2  F1F3         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 27089                           
 27090                           ; BSR set to: 3
 27091                           ;mdm_gsm_gprs.c: 471: }
 27092                           ;mdm_gsm_gprs.c: 472: break;
 27093  00384C  0012               	return	
 27094  00384E                     
 27095                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 27096                           
 27097                           ; BSR set to: 3
 27098  00384E  0E03               	movlw	3
 27099  003850  0100               	movlb	0	; () banked
 27100  003852  6FD0               	movwf	_MdmStatus& (0+255),b
 27101                           
 27102                           ; BSR set to: 0
 27103                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 27104  003854  0E39               	movlw	low _MdmStsReady
 27105  003856  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27106  003858  0E00               	movlw	high _MdmStsReady
 27107  00385A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27108  00385C  EC9F  F033         	call	_GenerateEvt	;wreg free
 27109                           
 27110                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 27111  003860  0E06               	movlw	6
 27112  003862  0101               	movlb	1	; () banked
 27113  003864  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 27114                           
 27115                           ; BSR set to: 1
 27116                           ;mdm_gsm_gprs.c: 488: }
 27117                           
 27118                           ; BSR set to: 1
 27119                           ;mdm_gsm_gprs.c: 487: break;
 27120                           
 27121                           ;mdm_gsm_gprs.c: 486: default:
 27122                           
 27123                           ; BSR set to: 1
 27124                           ;mdm_gsm_gprs.c: 484: break;
 27125                           
 27126                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 27127                           
 27128                           ;mdm_gsm_gprs.c: 481: break;
 27129  003866  0012               	return	
 27130  003868                     l1027:
 27131                           
 27132                           ; BSR set to: 1
 27133  003868  0101               	movlb	1	; () banked
 27134  00386A  51F3               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 27135                           
 27136                           ; Switch size 1, requested type "space"
 27137                           ; Number of cases is 6, Range of values is 0 to 6
 27138                           ; switch strategies available:
 27139                           ; Name         Instructions Cycles
 27140                           ; simple_byte           19    10 (average)
 27141                           ;	Chosen strategy is simple_byte
 27142  00386C  0A00               	xorlw	0	; case 0
 27143  00386E  B4D8               	btfsc	status,2,c
 27144  003870  D7A1               	goto	l1028
 27145  003872  0A01               	xorlw	1	; case 1
 27146  003874  B4D8               	btfsc	status,2,c
 27147  003876  D7A7               	goto	l1031
 27148  003878  0A03               	xorlw	3	; case 2
 27149  00387A  B4D8               	btfsc	status,2,c
 27150  00387C  D7C1               	goto	l1032
 27151  00387E  0A06               	xorlw	6	; case 4
 27152  003880  B4D8               	btfsc	status,2,c
 27153  003882  D7D1               	goto	l1033
 27154  003884  0A01               	xorlw	1	; case 5
 27155  003886  B4D8               	btfsc	status,2,c
 27156  003888  D7E2               	goto	l1035
 27157  00388A  0A03               	xorlw	3	; case 6
 27158  00388C  0012               	return	
 27159  00388E                     __end_of_ConfigureModem:
 27160                           	opt stack 0
 27161                           tosu	equ	0xFFF
 27162                           tosh	equ	0xFFE
 27163                           tosl	equ	0xFFD
 27164                           pclath	equ	0xFFA
 27165                           tblptru	equ	0xFF8
 27166                           tblptrh	equ	0xFF7
 27167                           tblptrl	equ	0xFF6
 27168                           tablat	equ	0xFF5
 27169                           prodh	equ	0xFF4
 27170                           prodl	equ	0xFF3
 27171                           intcon	equ	0xFF2
 27172                           intcon2	equ	0xFF1
 27173                           intcon3	equ	0xFF0
 27174                           indf0	equ	0xFEF
 27175                           postinc0	equ	0xFEE
 27176                           plusw0	equ	0xFEB
 27177                           fsr0h	equ	0xFEA
 27178                           fsr0l	equ	0xFE9
 27179                           wreg	equ	0xFE8
 27180                           indf1	equ	0xFE7
 27181                           postinc1	equ	0xFE6
 27182                           postdec1	equ	0xFE5
 27183                           plusw1	equ	0xFE3
 27184                           fsr1h	equ	0xFE2
 27185                           fsr1l	equ	0xFE1
 27186                           indf2	equ	0xFDF
 27187                           postinc2	equ	0xFDE
 27188                           postdec2	equ	0xFDD
 27189                           plusw2	equ	0xFDB
 27190                           fsr2h	equ	0xFDA
 27191                           fsr2l	equ	0xFD9
 27192                           status	equ	0xFD8
 27193                           
 27194 ;; *************** function _Uart_InitUartModule *****************
 27195 ;; Defined at:
 27196 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27197 ;; Parameters:    Size  Location     Type
 27198 ;;  Module          1    wreg     unsigned char 
 27199 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 27200 ;;		 -> UartConfig(21), 
 27201 ;; Auto vars:     Size  Location     Type
 27202 ;;  Module          1   65[BANK0 ] unsigned char 
 27203 ;; Return value:  Size  Location     Type
 27204 ;;                  1    wreg      void 
 27205 ;; Registers used:
 27206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27207 ;; Tracked objects:
 27208 ;;		On entry : 0/0
 27209 ;;		On exit  : 0/0
 27210 ;;		Unchanged: 0/0
 27211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27212 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27213 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27214 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27215 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27216 ;;Total ram usage:        5 bytes
 27217 ;; Hardware stack levels used:    1
 27218 ;; Hardware stack levels required when called:   13
 27219 ;; This function calls:
 27220 ;;		_SetUartBaudRate
 27221 ;; This function is called by:
 27222 ;;		_ConfigureModem
 27223 ;;		_Mdm_MainTask
 27224 ;; This function uses a non-reentrant model
 27225 ;;
 27226                           
 27227                           	psect	text128
 27228  000ABC                     __ptext128:
 27229                           	opt stack 0
 27230  000ABC                     _Uart_InitUartModule:
 27231                           	opt stack 14
 27232                           
 27233                           ;incstack = 0
 27234                           ;Uart_InitUartModule@Module stored from wreg
 27235  000ABC  0100               	movlb	0	; () banked
 27236  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 27237                           
 27238                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 27239  000AC0  0100               	movlb	0	; () banked
 27240  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 27241  000AC4  A4D8               	btfss	status,2,c
 27242  000AC6  D0BE               	goto	l668
 27243                           
 27244                           ; BSR set to: 0
 27245                           ;uart_drv.c: 291: {
 27246                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 27247  000AC8  9C94               	bcf	3988,6,c	;volatile
 27248                           
 27249                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 27250  000ACA  8E94               	bsf	3988,7,c	;volatile
 27251                           
 27252                           ; BSR set to: 0
 27253                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 27254  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 27255  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 27256  000AD4  0E01               	movlw	1
 27257  000AD6  EC28  F016         	call	_SetUartBaudRate
 27258                           
 27259                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 27260  000ADA  0E00               	movlw	0
 27261  000ADC  6EAD               	movwf	4013,c	;volatile
 27262                           
 27263                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 27264  000ADE  0100               	movlb	0	; () banked
 27265  000AE0  EE20 F004          	lfsr	2,4
 27266  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27267  000AE6  26D9               	addwf	fsr2l,f,c
 27268  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27269  000AEA  22DA               	addwfc	fsr2h,f,c
 27270  000AEC  50DF               	movf	indf2,w,c
 27271  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27272  000AF0  0E06               	movlw	6
 27273  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27274  000AF4                     u13285:
 27275  000AF4  90D8               	bcf	status,0,c
 27276  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27277  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27278  000AFA  D7FC               	goto	u13285
 27279  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27280  000AFE  12AD               	iorwf	4013,f,c	;volatile
 27281                           
 27282                           ; BSR set to: 0
 27283                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 27284  000B00  EE20 F006          	lfsr	2,6
 27285  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27286  000B06  26D9               	addwf	fsr2l,f,c
 27287  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27288  000B0A  22DA               	addwfc	fsr2h,f,c
 27289  000B0C  50DF               	movf	indf2,w,c
 27290  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27291  000B10  0E05               	movlw	5
 27292  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27293  000B14                     u13295:
 27294  000B14  90D8               	bcf	status,0,c
 27295  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27296  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27297  000B1A  D7FC               	goto	u13295
 27298  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27299  000B1E  12AD               	iorwf	4013,f,c	;volatile
 27300                           
 27301                           ; BSR set to: 0
 27302                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 27303  000B20  EE20 F001          	lfsr	2,1
 27304  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27305  000B26  26D9               	addwf	fsr2l,f,c
 27306  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27307  000B2A  22DA               	addwfc	fsr2h,f,c
 27308  000B2C  50DF               	movf	indf2,w,c
 27309  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27310  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27311  000B32  0BF0               	andlw	240
 27312  000B34  12AD               	iorwf	4013,f,c	;volatile
 27313                           
 27314                           ; BSR set to: 0
 27315                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 27316  000B36  EE20 F008          	lfsr	2,8
 27317  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27318  000B3C  26D9               	addwf	fsr2l,f,c
 27319  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27320  000B40  22DA               	addwfc	fsr2h,f,c
 27321  000B42  50DF               	movf	indf2,w,c
 27322  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27323  000B46  90D8               	bcf	status,0,c
 27324  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27325  000B4A  90D8               	bcf	status,0,c
 27326  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27327  000B4E  90D8               	bcf	status,0,c
 27328  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27329  000B52  12AD               	iorwf	4013,f,c	;volatile
 27330                           
 27331                           ; BSR set to: 0
 27332                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 27333  000B54  EE20 F003          	lfsr	2,3
 27334  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27335  000B5A  26D9               	addwf	fsr2l,f,c
 27336  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27337  000B5E  22DA               	addwfc	fsr2h,f,c
 27338  000B60  50DF               	movf	indf2,w,c
 27339  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27340  000B64  90D8               	bcf	status,0,c
 27341  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27342  000B68  90D8               	bcf	status,0,c
 27343  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27344  000B6C  12AD               	iorwf	4013,f,c	;volatile
 27345                           
 27346                           ; BSR set to: 0
 27347                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 27348  000B6E  0E00               	movlw	0
 27349  000B70  6EAC               	movwf	4012,c	;volatile
 27350                           
 27351                           ; BSR set to: 0
 27352                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 27353  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 27354  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 27355  000B7A  50DF               	movf	indf2,w,c
 27356  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27357  000B7E  0E00               	movlw	0
 27358  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 27359  000B82  0E80               	movlw	128
 27360  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27361  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27362  000B88  12AC               	iorwf	4012,f,c	;volatile
 27363                           
 27364                           ; BSR set to: 0
 27365                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 27366  000B8A  EE20 F005          	lfsr	2,5
 27367  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27368  000B90  26D9               	addwf	fsr2l,f,c
 27369  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27370  000B94  22DA               	addwfc	fsr2h,f,c
 27371  000B96  50DF               	movf	indf2,w,c
 27372  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27373  000B9A  0E06               	movlw	6
 27374  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27375  000B9E                     u13305:
 27376  000B9E  90D8               	bcf	status,0,c
 27377  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27378  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27379  000BA4  D7FC               	goto	u13305
 27380  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27381  000BA8  12AC               	iorwf	4012,f,c	;volatile
 27382                           
 27383                           ; BSR set to: 0
 27384                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 27385  000BAA  EE20 F007          	lfsr	2,7
 27386  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27387  000BB0  26D9               	addwf	fsr2l,f,c
 27388  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27389  000BB4  22DA               	addwfc	fsr2h,f,c
 27390  000BB6  50DF               	movf	indf2,w,c
 27391  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27392  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27393  000BBC  0BF0               	andlw	240
 27394  000BBE  12AC               	iorwf	4012,f,c	;volatile
 27395                           
 27396                           ; BSR set to: 0
 27397                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 27398  000BC0  0E00               	movlw	0
 27399  000BC2  6E7E               	movwf	3966,c	;volatile
 27400                           
 27401                           ; BSR set to: 0
 27402                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 27403  000BC4  EE20 F002          	lfsr	2,2
 27404  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27405  000BCA  26D9               	addwf	fsr2l,f,c
 27406  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27407  000BCE  22DA               	addwfc	fsr2h,f,c
 27408  000BD0  50DF               	movf	indf2,w,c
 27409  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27410  000BD4  90D8               	bcf	status,0,c
 27411  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27412  000BD8  90D8               	bcf	status,0,c
 27413  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27414  000BDC  90D8               	bcf	status,0,c
 27415  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27416  000BE0  127E               	iorwf	3966,f,c	;volatile
 27417                           
 27418                           ; BSR set to: 0
 27419                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 27420  000BE2  EE20 F00A          	lfsr	2,10
 27421  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27422  000BE8  26D9               	addwf	fsr2l,f,c
 27423  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27424  000BEC  22DA               	addwfc	fsr2h,f,c
 27425  000BEE  50DF               	movf	indf2,w,c
 27426  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27427  000BF2  90D8               	bcf	status,0,c
 27428  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27429  000BF6  127E               	iorwf	3966,f,c	;volatile
 27430                           
 27431                           ; BSR set to: 0
 27432                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 27433  000BF8  EE20 F009          	lfsr	2,9
 27434  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27435  000BFE  26D9               	addwf	fsr2l,f,c
 27436  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27437  000C02  22DA               	addwfc	fsr2h,f,c
 27438  000C04  50DF               	movf	indf2,w,c
 27439  000C06  127E               	iorwf	3966,f,c	;volatile
 27440                           
 27441                           ; BSR set to: 0
 27442                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 27443  000C08  EE20 F00B          	lfsr	2,11
 27444  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27445  000C0E  26D9               	addwf	fsr2l,f,c
 27446  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27447  000C12  22DA               	addwfc	fsr2h,f,c
 27448  000C14  50DF               	movf	indf2,w,c
 27449  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27450  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27451  000C1A  509D               	movf	3997,w,c	;volatile
 27452  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27453  000C1E  0BEF               	andlw	-17
 27454  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27455  000C22  6E9D               	movwf	3997,c	;volatile
 27456                           
 27457                           ; BSR set to: 0
 27458                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 27459  000C24  EE20 F00C          	lfsr	2,12
 27460  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27461  000C2A  26D9               	addwf	fsr2l,f,c
 27462  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27463  000C2E  22DA               	addwfc	fsr2h,f,c
 27464  000C30  50DF               	movf	indf2,w,c
 27465  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27466  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27467  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 27468  000C38  509D               	movf	3997,w,c	;volatile
 27469  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27470  000C3C  0BDF               	andlw	-33
 27471  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27472  000C40  6E9D               	movwf	3997,c	;volatile
 27473                           
 27474                           ;uart_drv.c: 326: }
 27475  000C42  0012               	return	
 27476  000C44                     l668:
 27477                           
 27478                           ; BSR set to: 0
 27479                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 27480                           
 27481                           ; BSR set to: 0
 27482  000C44  0E02               	movlw	2
 27483  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 27484  000C48  A4D8               	btfss	status,2,c
 27485  000C4A  0012               	return	
 27486                           
 27487                           ; BSR set to: 0
 27488                           ;uart_drv.c: 328: {
 27489                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 27490  000C4C  9094               	bcf	3988,0,c	;volatile
 27491                           
 27492                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 27493  000C4E  8294               	bsf	3988,1,c	;volatile
 27494                           
 27495                           ; BSR set to: 0
 27496                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 27497  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 27498  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 27499  000C58  0E02               	movlw	2
 27500  000C5A  EC28  F016         	call	_SetUartBaudRate
 27501                           
 27502                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 27503  000C5E  0E00               	movlw	0
 27504  000C60  6EA8               	movwf	4008,c	;volatile
 27505                           
 27506                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 27507  000C62  0100               	movlb	0	; () banked
 27508  000C64  EE20 F004          	lfsr	2,4
 27509  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27510  000C6A  26D9               	addwf	fsr2l,f,c
 27511  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27512  000C6E  22DA               	addwfc	fsr2h,f,c
 27513  000C70  50DF               	movf	indf2,w,c
 27514  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27515  000C74  0E06               	movlw	6
 27516  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27517  000C78                     u13325:
 27518  000C78  90D8               	bcf	status,0,c
 27519  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27520  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27521  000C7E  D7FC               	goto	u13325
 27522  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27523  000C82  12A8               	iorwf	4008,f,c	;volatile
 27524                           
 27525                           ; BSR set to: 0
 27526                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 27527  000C84  EE20 F006          	lfsr	2,6
 27528  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27529  000C8A  26D9               	addwf	fsr2l,f,c
 27530  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27531  000C8E  22DA               	addwfc	fsr2h,f,c
 27532  000C90  50DF               	movf	indf2,w,c
 27533  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27534  000C94  0E05               	movlw	5
 27535  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27536  000C98                     u13335:
 27537  000C98  90D8               	bcf	status,0,c
 27538  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27539  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27540  000C9E  D7FC               	goto	u13335
 27541  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27542  000CA2  12A8               	iorwf	4008,f,c	;volatile
 27543                           
 27544                           ; BSR set to: 0
 27545                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 27546  000CA4  EE20 F001          	lfsr	2,1
 27547  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27548  000CAA  26D9               	addwf	fsr2l,f,c
 27549  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27550  000CAE  22DA               	addwfc	fsr2h,f,c
 27551  000CB0  50DF               	movf	indf2,w,c
 27552  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27553  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27554  000CB6  0BF0               	andlw	240
 27555  000CB8  12A8               	iorwf	4008,f,c	;volatile
 27556                           
 27557                           ; BSR set to: 0
 27558                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 27559  000CBA  EE20 F008          	lfsr	2,8
 27560  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27561  000CC0  26D9               	addwf	fsr2l,f,c
 27562  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27563  000CC4  22DA               	addwfc	fsr2h,f,c
 27564  000CC6  50DF               	movf	indf2,w,c
 27565  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27566  000CCA  90D8               	bcf	status,0,c
 27567  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27568  000CCE  90D8               	bcf	status,0,c
 27569  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27570  000CD2  90D8               	bcf	status,0,c
 27571  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27572  000CD6  12A8               	iorwf	4008,f,c	;volatile
 27573                           
 27574                           ; BSR set to: 0
 27575                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 27576  000CD8  EE20 F003          	lfsr	2,3
 27577  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27578  000CDE  26D9               	addwf	fsr2l,f,c
 27579  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27580  000CE2  22DA               	addwfc	fsr2h,f,c
 27581  000CE4  50DF               	movf	indf2,w,c
 27582  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27583  000CE8  90D8               	bcf	status,0,c
 27584  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27585  000CEC  90D8               	bcf	status,0,c
 27586  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27587  000CF0  12A8               	iorwf	4008,f,c	;volatile
 27588                           
 27589                           ; BSR set to: 0
 27590                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 27591  000CF2  0E00               	movlw	0
 27592  000CF4  6E9C               	movwf	3996,c	;volatile
 27593                           
 27594                           ; BSR set to: 0
 27595                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 27596  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 27597  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 27598  000CFE  50DF               	movf	indf2,w,c
 27599  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27600  000D02  0E00               	movlw	0
 27601  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 27602  000D06  0E80               	movlw	128
 27603  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27604  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27605  000D0C  129C               	iorwf	3996,f,c	;volatile
 27606                           
 27607                           ; BSR set to: 0
 27608                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 27609  000D0E  EE20 F005          	lfsr	2,5
 27610  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27611  000D14  26D9               	addwf	fsr2l,f,c
 27612  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27613  000D18  22DA               	addwfc	fsr2h,f,c
 27614  000D1A  50DF               	movf	indf2,w,c
 27615  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27616  000D1E  0E06               	movlw	6
 27617  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27618  000D22                     u13345:
 27619  000D22  90D8               	bcf	status,0,c
 27620  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27621  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27622  000D28  D7FC               	goto	u13345
 27623  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27624  000D2C  129C               	iorwf	3996,f,c	;volatile
 27625                           
 27626                           ; BSR set to: 0
 27627                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 27628  000D2E  EE20 F007          	lfsr	2,7
 27629  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27630  000D34  26D9               	addwf	fsr2l,f,c
 27631  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27632  000D38  22DA               	addwfc	fsr2h,f,c
 27633  000D3A  50DF               	movf	indf2,w,c
 27634  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27635  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27636  000D40  0BF0               	andlw	240
 27637  000D42  129C               	iorwf	3996,f,c	;volatile
 27638                           
 27639                           ; BSR set to: 0
 27640                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 27641  000D44  0E00               	movlw	0
 27642  000D46  6E7C               	movwf	3964,c	;volatile
 27643                           
 27644                           ; BSR set to: 0
 27645                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 27646  000D48  EE20 F002          	lfsr	2,2
 27647  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27648  000D4E  26D9               	addwf	fsr2l,f,c
 27649  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27650  000D52  22DA               	addwfc	fsr2h,f,c
 27651  000D54  50DF               	movf	indf2,w,c
 27652  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27653  000D58  90D8               	bcf	status,0,c
 27654  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27655  000D5C  90D8               	bcf	status,0,c
 27656  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27657  000D60  90D8               	bcf	status,0,c
 27658  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27659  000D64  127C               	iorwf	3964,f,c	;volatile
 27660                           
 27661                           ; BSR set to: 0
 27662                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 27663  000D66  EE20 F00A          	lfsr	2,10
 27664  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27665  000D6C  26D9               	addwf	fsr2l,f,c
 27666  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27667  000D70  22DA               	addwfc	fsr2h,f,c
 27668  000D72  50DF               	movf	indf2,w,c
 27669  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27670  000D76  90D8               	bcf	status,0,c
 27671  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27672  000D7A  127C               	iorwf	3964,f,c	;volatile
 27673                           
 27674                           ; BSR set to: 0
 27675                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 27676  000D7C  EE20 F009          	lfsr	2,9
 27677  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27678  000D82  26D9               	addwf	fsr2l,f,c
 27679  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27680  000D86  22DA               	addwfc	fsr2h,f,c
 27681  000D88  50DF               	movf	indf2,w,c
 27682  000D8A  127C               	iorwf	3964,f,c	;volatile
 27683                           
 27684                           ; BSR set to: 0
 27685                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 27686  000D8C  EE20 F00B          	lfsr	2,11
 27687  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27688  000D92  26D9               	addwf	fsr2l,f,c
 27689  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27690  000D96  22DA               	addwfc	fsr2h,f,c
 27691  000D98  50DF               	movf	indf2,w,c
 27692  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27693  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27694  000D9E  50A3               	movf	4003,w,c	;volatile
 27695  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27696  000DA2  0BEF               	andlw	-17
 27697  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27698  000DA6  6EA3               	movwf	4003,c	;volatile
 27699                           
 27700                           ; BSR set to: 0
 27701                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 27702  000DA8  EE20 F00C          	lfsr	2,12
 27703  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27704  000DAE  26D9               	addwf	fsr2l,f,c
 27705  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27706  000DB2  22DA               	addwfc	fsr2h,f,c
 27707  000DB4  50DF               	movf	indf2,w,c
 27708  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27709  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27710  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 27711  000DBC  50A3               	movf	4003,w,c	;volatile
 27712  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27713  000DC0  0BDF               	andlw	-33
 27714  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27715  000DC4  6EA3               	movwf	4003,c	;volatile
 27716                           
 27717                           ; BSR set to: 0
 27718  000DC6  0012               	return	
 27719  000DC8                     __end_of_Uart_InitUartModule:
 27720                           	opt stack 0
 27721                           tosu	equ	0xFFF
 27722                           tosh	equ	0xFFE
 27723                           tosl	equ	0xFFD
 27724                           pclath	equ	0xFFA
 27725                           tblptru	equ	0xFF8
 27726                           tblptrh	equ	0xFF7
 27727                           tblptrl	equ	0xFF6
 27728                           tablat	equ	0xFF5
 27729                           prodh	equ	0xFF4
 27730                           prodl	equ	0xFF3
 27731                           intcon	equ	0xFF2
 27732                           intcon2	equ	0xFF1
 27733                           intcon3	equ	0xFF0
 27734                           indf0	equ	0xFEF
 27735                           postinc0	equ	0xFEE
 27736                           plusw0	equ	0xFEB
 27737                           fsr0h	equ	0xFEA
 27738                           fsr0l	equ	0xFE9
 27739                           wreg	equ	0xFE8
 27740                           indf1	equ	0xFE7
 27741                           postinc1	equ	0xFE6
 27742                           postdec1	equ	0xFE5
 27743                           plusw1	equ	0xFE3
 27744                           fsr1h	equ	0xFE2
 27745                           fsr1l	equ	0xFE1
 27746                           indf2	equ	0xFDF
 27747                           postinc2	equ	0xFDE
 27748                           postdec2	equ	0xFDD
 27749                           plusw2	equ	0xFDB
 27750                           fsr2h	equ	0xFDA
 27751                           fsr2l	equ	0xFD9
 27752                           status	equ	0xFD8
 27753                           
 27754 ;; *************** function _SetUartBaudRate *****************
 27755 ;; Defined at:
 27756 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27757 ;; Parameters:    Size  Location     Type
 27758 ;;  Module          1    wreg     unsigned char 
 27759 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 27760 ;;		 -> UartConfig(21), 
 27761 ;; Auto vars:     Size  Location     Type
 27762 ;;  Module          1   57[BANK0 ] unsigned char 
 27763 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 27764 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 27765 ;; Return value:  Size  Location     Type
 27766 ;;                  1    wreg      void 
 27767 ;; Registers used:
 27768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27769 ;; Tracked objects:
 27770 ;;		On entry : 0/0
 27771 ;;		On exit  : 0/0
 27772 ;;		Unchanged: 0/0
 27773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27774 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27775 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27776 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27777 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27778 ;;Total ram usage:        7 bytes
 27779 ;; Hardware stack levels used:    1
 27780 ;; Hardware stack levels required when called:   12
 27781 ;; This function calls:
 27782 ;;		___lldiv
 27783 ;;		___lmul
 27784 ;; This function is called by:
 27785 ;;		_Uart_InitUartModule
 27786 ;; This function uses a non-reentrant model
 27787 ;;
 27788                           
 27789                           	psect	text129
 27790  002C50                     __ptext129:
 27791                           	opt stack 0
 27792  002C50                     _SetUartBaudRate:
 27793                           	opt stack 14
 27794                           
 27795                           ; BSR set to: 0
 27796                           ;incstack = 0
 27797                           ;SetUartBaudRate@Module stored from wreg
 27798  002C50  0100               	movlb	0	; () banked
 27799  002C52  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 27800                           
 27801                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 27802  002C54  0E00               	movlw	0
 27803  002C56  0100               	movlb	0	; () banked
 27804  002C58  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 27805  002C5A  0E00               	movlw	0
 27806  002C5C  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 27807                           
 27808                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 27809  002C5E  0E00               	movlw	0
 27810  002C60  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 27811                           
 27812                           ; BSR set to: 0
 27813                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 27814  002C62  EE20 F002          	lfsr	2,2
 27815  002C66  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27816  002C68  26D9               	addwf	fsr2l,f,c
 27817  002C6A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27818  002C6C  22DA               	addwfc	fsr2h,f,c
 27819  002C6E  50DF               	movf	indf2,w,c
 27820  002C70  A4D8               	btfss	status,2,c
 27821  002C72  D00B               	goto	l625
 27822                           
 27823                           ; BSR set to: 0
 27824  002C74  EE20 F002          	lfsr	2,2
 27825  002C78  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27826  002C7A  26D9               	addwf	fsr2l,f,c
 27827  002C7C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27828  002C7E  22DA               	addwfc	fsr2h,f,c
 27829  002C80  50DF               	movf	indf2,w,c
 27830  002C82  A4D8               	btfss	status,2,c
 27831  002C84  D002               	goto	l625
 27832                           
 27833                           ; BSR set to: 0
 27834                           ;uart_drv.c: 128: {
 27835                           ;uart_drv.c: 129: DivisionFactor = 64;
 27836  002C86  0E40               	movlw	64
 27837  002C88  D039               	goto	L39
 27838  002C8A                     l625:
 27839                           
 27840                           ; BSR set to: 0
 27841                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 27842                           
 27843                           ; BSR set to: 0
 27844  002C8A  EE20 F002          	lfsr	2,2
 27845  002C8E  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27846  002C90  26D9               	addwf	fsr2l,f,c
 27847  002C92  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27848  002C94  22DA               	addwfc	fsr2h,f,c
 27849  002C96  04DE               	decf	postinc2,w,c
 27850  002C98  A4D8               	btfss	status,2,c
 27851  002C9A  D009               	goto	l627
 27852                           
 27853                           ; BSR set to: 0
 27854  002C9C  EE20 F002          	lfsr	2,2
 27855  002CA0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27856  002CA2  26D9               	addwf	fsr2l,f,c
 27857  002CA4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27858  002CA6  22DA               	addwfc	fsr2h,f,c
 27859  002CA8  50DF               	movf	indf2,w,c
 27860  002CAA  B4D8               	btfsc	status,2,c
 27861  002CAC  D012               	goto	u12440
 27862  002CAE                     l627:
 27863                           
 27864                           ; BSR set to: 0
 27865                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 27866                           
 27867                           ; BSR set to: 0
 27868  002CAE  EE20 F002          	lfsr	2,2
 27869  002CB2  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27870  002CB4  26D9               	addwf	fsr2l,f,c
 27871  002CB6  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27872  002CB8  22DA               	addwfc	fsr2h,f,c
 27873  002CBA  50DF               	movf	indf2,w,c
 27874  002CBC  A4D8               	btfss	status,2,c
 27875  002CBE  D00B               	goto	l629
 27876                           
 27877                           ; BSR set to: 0
 27878  002CC0  EE20 F002          	lfsr	2,2
 27879  002CC4  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27880  002CC6  26D9               	addwf	fsr2l,f,c
 27881  002CC8  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27882  002CCA  22DA               	addwfc	fsr2h,f,c
 27883  002CCC  04DE               	decf	postinc2,w,c
 27884  002CCE  A4D8               	btfss	status,2,c
 27885  002CD0  D002               	goto	l629
 27886  002CD2                     u12440:
 27887                           
 27888                           ; BSR set to: 0
 27889                           ;uart_drv.c: 136: {
 27890                           ;uart_drv.c: 137: DivisionFactor = 16;
 27891  002CD2  0E10               	movlw	16
 27892  002CD4  D013               	goto	L39
 27893  002CD6                     l629:
 27894                           
 27895                           ; BSR set to: 0
 27896                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 27897                           
 27898                           ; BSR set to: 0
 27899  002CD6  EE20 F002          	lfsr	2,2
 27900  002CDA  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27901  002CDC  26D9               	addwf	fsr2l,f,c
 27902  002CDE  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27903  002CE0  22DA               	addwfc	fsr2h,f,c
 27904  002CE2  04DE               	decf	postinc2,w,c
 27905  002CE4  A4D8               	btfss	status,2,c
 27906  002CE6  D00B               	goto	l631
 27907                           
 27908                           ; BSR set to: 0
 27909  002CE8  EE20 F002          	lfsr	2,2
 27910  002CEC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27911  002CEE  26D9               	addwf	fsr2l,f,c
 27912  002CF0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27913  002CF2  22DA               	addwfc	fsr2h,f,c
 27914  002CF4  04DE               	decf	postinc2,w,c
 27915  002CF6  A4D8               	btfss	status,2,c
 27916  002CF8  D002               	goto	l631
 27917                           
 27918                           ; BSR set to: 0
 27919                           ;uart_drv.c: 140: {
 27920                           ;uart_drv.c: 141: DivisionFactor = 4;
 27921  002CFA  0E04               	movlw	4
 27922  002CFC                     L39:
 27923  002CFC  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 27924  002CFE                     l631:
 27925                           
 27926                           ; BSR set to: 0
 27927                           ;uart_drv.c: 146: }
 27928                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 27929                           
 27930                           ; BSR set to: 0
 27931                           
 27932                           ; BSR set to: 0
 27933                           
 27934                           ; BSR set to: 0
 27935                           
 27936                           ; BSR set to: 0
 27937                           
 27938                           ;uart_drv.c: 143: else
 27939                           ;uart_drv.c: 144: {
 27940                           
 27941                           ; BSR set to: 0
 27942  002CFE  EE20 F00D          	lfsr	2,13
 27943  002D02  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27944  002D04  26D9               	addwf	fsr2l,f,c
 27945  002D06  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27946  002D08  22DA               	addwfc	fsr2h,f,c
 27947  002D0A  CFDE F089          	movff	postinc2,___lldiv@dividend
 27948  002D0E  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 27949  002D12  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 27950  002D16  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 27951  002D1A  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 27952  002D1C  6F7D               	movwf	___lmul@multiplier& (0+255),b
 27953  002D1E  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 27954  002D20  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 27955  002D22  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 27956  002D24  EE20 F011          	lfsr	2,17
 27957  002D28  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27958  002D2A  26D9               	addwf	fsr2l,f,c
 27959  002D2C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27960  002D2E  22DA               	addwfc	fsr2h,f,c
 27961  002D30  CFDE F081          	movff	postinc2,___lmul@multiplicand
 27962  002D34  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 27963  002D38  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 27964  002D3C  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 27965  002D40  ECA6  F02B         	call	___lmul	;wreg free
 27966  002D44  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 27967  002D48  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 27968  002D4C  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 27969  002D50  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 27970  002D54  EC23  F028         	call	___lldiv	;wreg free
 27971  002D58  0EFF               	movlw	255
 27972  002D5A  0100               	movlb	0	; () banked
 27973  002D5C  2589               	addwf	?___lldiv& (0+255),w,b
 27974  002D5E  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 27975  002D60  0EFF               	movlw	255
 27976  002D62  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 27977  002D64  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 27978                           
 27979                           ; BSR set to: 0
 27980                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 27981  002D66  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 27982  002D68  A4D8               	btfss	status,2,c
 27983  002D6A  D005               	goto	l633
 27984                           
 27985                           ; BSR set to: 0
 27986                           ;uart_drv.c: 152: {
 27987                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 27988  002D6C  0E00               	movlw	0
 27989  002D6E  6E7F               	movwf	3967,c	;volatile
 27990                           
 27991                           ; BSR set to: 0
 27992                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 27993  002D70  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 27994                           
 27995                           ;uart_drv.c: 156: }
 27996  002D74  0012               	return	
 27997  002D76                     l633:
 27998                           
 27999                           ; BSR set to: 0
 28000                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 28001                           
 28002                           ; BSR set to: 0
 28003  002D76  0E02               	movlw	2
 28004  002D78  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 28005  002D7A  A4D8               	btfss	status,2,c
 28006  002D7C  0012               	return	
 28007                           
 28008                           ; BSR set to: 0
 28009                           ;uart_drv.c: 158: {
 28010                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 28011  002D7E  0E00               	movlw	0
 28012  002D80  6E7D               	movwf	3965,c	;volatile
 28013                           
 28014                           ; BSR set to: 0
 28015                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 28016  002D82  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 28017                           
 28018                           ; BSR set to: 0
 28019  002D86  0012               	return	
 28020  002D88                     __end_of_SetUartBaudRate:
 28021                           	opt stack 0
 28022                           tosu	equ	0xFFF
 28023                           tosh	equ	0xFFE
 28024                           tosl	equ	0xFFD
 28025                           pclath	equ	0xFFA
 28026                           tblptru	equ	0xFF8
 28027                           tblptrh	equ	0xFF7
 28028                           tblptrl	equ	0xFF6
 28029                           tablat	equ	0xFF5
 28030                           prodh	equ	0xFF4
 28031                           prodl	equ	0xFF3
 28032                           intcon	equ	0xFF2
 28033                           intcon2	equ	0xFF1
 28034                           intcon3	equ	0xFF0
 28035                           indf0	equ	0xFEF
 28036                           postinc0	equ	0xFEE
 28037                           plusw0	equ	0xFEB
 28038                           fsr0h	equ	0xFEA
 28039                           fsr0l	equ	0xFE9
 28040                           wreg	equ	0xFE8
 28041                           indf1	equ	0xFE7
 28042                           postinc1	equ	0xFE6
 28043                           postdec1	equ	0xFE5
 28044                           plusw1	equ	0xFE3
 28045                           fsr1h	equ	0xFE2
 28046                           fsr1l	equ	0xFE1
 28047                           indf2	equ	0xFDF
 28048                           postinc2	equ	0xFDE
 28049                           postdec2	equ	0xFDD
 28050                           plusw2	equ	0xFDB
 28051                           fsr2h	equ	0xFDA
 28052                           fsr2l	equ	0xFD9
 28053                           status	equ	0xFD8
 28054                           
 28055 ;; *************** function ___lmul *****************
 28056 ;; Defined at:
 28057 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 28058 ;; Parameters:    Size  Location     Type
 28059 ;;  multiplier      4   29[BANK0 ] unsigned long 
 28060 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 28061 ;; Auto vars:     Size  Location     Type
 28062 ;;  product         4   37[BANK0 ] unsigned long 
 28063 ;; Return value:  Size  Location     Type
 28064 ;;                  4   29[BANK0 ] unsigned long 
 28065 ;; Registers used:
 28066 ;;		wreg, status,2, status,0
 28067 ;; Tracked objects:
 28068 ;;		On entry : 0/0
 28069 ;;		On exit  : 0/0
 28070 ;;		Unchanged: 0/0
 28071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28072 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28073 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28075 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28076 ;;Total ram usage:       12 bytes
 28077 ;; Hardware stack levels used:    1
 28078 ;; Hardware stack levels required when called:   11
 28079 ;; This function calls:
 28080 ;;		Nothing
 28081 ;; This function is called by:
 28082 ;;		_Tmr_TmrBPrSet
 28083 ;;		_SetUartBaudRate
 28084 ;;		_strtol
 28085 ;; This function uses a non-reentrant model
 28086 ;;
 28087                           
 28088                           	psect	text130
 28089  00574C                     __ptext130:
 28090                           	opt stack 0
 28091  00574C                     ___lmul:
 28092                           	opt stack 15
 28093                           
 28094                           ; BSR set to: 0
 28095                           ;incstack = 0
 28096  00574C  0E00               	movlw	0
 28097  00574E  0100               	movlb	0	; () banked
 28098  005750  6F85               	movwf	___lmul@product& (0+255),b
 28099  005752  0E00               	movlw	0
 28100  005754  6F86               	movwf	(___lmul@product+1)& (0+255),b
 28101  005756  0E00               	movlw	0
 28102  005758  6F87               	movwf	(___lmul@product+2)& (0+255),b
 28103  00575A  0E00               	movlw	0
 28104  00575C  6F88               	movwf	(___lmul@product+3)& (0+255),b
 28105  00575E                     
 28106                           ; BSR set to: 0
 28107                           
 28108                           ; BSR set to: 0
 28109  00575E  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 28110  005760  D008               	goto	l2850
 28111                           
 28112                           ; BSR set to: 0
 28113  005762  5181               	movf	___lmul@multiplicand& (0+255),w,b
 28114  005764  2785               	addwf	___lmul@product& (0+255),f,b
 28115  005766  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 28116  005768  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 28117  00576A  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 28118  00576C  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 28119  00576E  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 28120  005770  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 28121  005772                     l2850:
 28122                           
 28123                           ; BSR set to: 0
 28124                           
 28125                           ; BSR set to: 0
 28126  005772  90D8               	bcf	status,0,c
 28127  005774  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 28128  005776  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 28129  005778  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 28130  00577A  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 28131                           
 28132                           ; BSR set to: 0
 28133  00577C  90D8               	bcf	status,0,c
 28134  00577E  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 28135  005780  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 28136  005782  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 28137  005784  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 28138  005786  517D               	movf	___lmul@multiplier& (0+255),w,b
 28139  005788  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 28140  00578A  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 28141  00578C  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 28142  00578E  A4D8               	btfss	status,2,c
 28143  005790  D7E6               	goto	l2849
 28144                           
 28145                           ; BSR set to: 0
 28146  005792  C085  F07D         	movff	___lmul@product,?___lmul
 28147  005796  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 28148  00579A  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 28149  00579E  C088  F080         	movff	___lmul@product+3,?___lmul+3
 28150                           
 28151                           ; BSR set to: 0
 28152  0057A2  0012               	return		;funcret
 28153  0057A4                     __end_of___lmul:
 28154                           	opt stack 0
 28155                           tosu	equ	0xFFF
 28156                           tosh	equ	0xFFE
 28157                           tosl	equ	0xFFD
 28158                           pclath	equ	0xFFA
 28159                           tblptru	equ	0xFF8
 28160                           tblptrh	equ	0xFF7
 28161                           tblptrl	equ	0xFF6
 28162                           tablat	equ	0xFF5
 28163                           prodh	equ	0xFF4
 28164                           prodl	equ	0xFF3
 28165                           intcon	equ	0xFF2
 28166                           intcon2	equ	0xFF1
 28167                           intcon3	equ	0xFF0
 28168                           indf0	equ	0xFEF
 28169                           postinc0	equ	0xFEE
 28170                           plusw0	equ	0xFEB
 28171                           fsr0h	equ	0xFEA
 28172                           fsr0l	equ	0xFE9
 28173                           wreg	equ	0xFE8
 28174                           indf1	equ	0xFE7
 28175                           postinc1	equ	0xFE6
 28176                           postdec1	equ	0xFE5
 28177                           plusw1	equ	0xFE3
 28178                           fsr1h	equ	0xFE2
 28179                           fsr1l	equ	0xFE1
 28180                           indf2	equ	0xFDF
 28181                           postinc2	equ	0xFDE
 28182                           postdec2	equ	0xFDD
 28183                           plusw2	equ	0xFDB
 28184                           fsr2h	equ	0xFDA
 28185                           fsr2l	equ	0xFD9
 28186                           status	equ	0xFD8
 28187                           
 28188 ;; *************** function _UartSetConfigLow *****************
 28189 ;; Defined at:
 28190 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28191 ;; Parameters:    Size  Location     Type
 28192 ;;		None
 28193 ;; Auto vars:     Size  Location     Type
 28194 ;;		None
 28195 ;; Return value:  Size  Location     Type
 28196 ;;                  1    wreg      void 
 28197 ;; Registers used:
 28198 ;;		wreg, status,2
 28199 ;; Tracked objects:
 28200 ;;		On entry : 0/0
 28201 ;;		On exit  : 0/0
 28202 ;;		Unchanged: 0/0
 28203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28208 ;;Total ram usage:        0 bytes
 28209 ;; Hardware stack levels used:    1
 28210 ;; Hardware stack levels required when called:   11
 28211 ;; This function calls:
 28212 ;;		Nothing
 28213 ;; This function is called by:
 28214 ;;		_ConfigureModem
 28215 ;; This function uses a non-reentrant model
 28216 ;;
 28217                           
 28218                           	psect	text131
 28219  0057A4                     __ptext131:
 28220                           	opt stack 0
 28221  0057A4                     _UartSetConfigLow:
 28222                           	opt stack 15
 28223                           
 28224                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 28225                           
 28226                           ; BSR set to: 0
 28227                           ;incstack = 0
 28228  0057A4  0E01               	movlw	1
 28229  0057A6  0103               	movlb	3	; () banked
 28230  0057A8  6F20               	movwf	_UartConfig& (0+255),b
 28231                           
 28232                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 28233  0057AA  0E00               	movlw	0
 28234  0057AC  6F21               	movwf	(_UartConfig+1)& (0+255),b
 28235                           
 28236                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 28237  0057AE  0E00               	movlw	0
 28238  0057B0  6F22               	movwf	(_UartConfig+2)& (0+255),b
 28239                           
 28240                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 28241  0057B2  0E00               	movlw	0
 28242  0057B4  6F23               	movwf	(_UartConfig+3)& (0+255),b
 28243                           
 28244                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 28245  0057B6  0E00               	movlw	0
 28246  0057B8  6F24               	movwf	(_UartConfig+4)& (0+255),b
 28247                           
 28248                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 28249  0057BA  0E00               	movlw	0
 28250  0057BC  6F25               	movwf	(_UartConfig+5)& (0+255),b
 28251                           
 28252                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 28253  0057BE  0E01               	movlw	1
 28254  0057C0  6F26               	movwf	(_UartConfig+6)& (0+255),b
 28255                           
 28256                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 28257  0057C2  0E01               	movlw	1
 28258  0057C4  6F27               	movwf	(_UartConfig+7)& (0+255),b
 28259                           
 28260                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 28261  0057C6  0E00               	movlw	0
 28262  0057C8  6F28               	movwf	(_UartConfig+8)& (0+255),b
 28263                           
 28264                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 28265  0057CA  0E00               	movlw	0
 28266  0057CC  6F29               	movwf	(_UartConfig+9)& (0+255),b
 28267                           
 28268                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 28269  0057CE  0E00               	movlw	0
 28270  0057D0  6F2A               	movwf	(_UartConfig+10)& (0+255),b
 28271                           
 28272                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 28273  0057D2  0E00               	movlw	0
 28274  0057D4  6F2B               	movwf	(_UartConfig+11)& (0+255),b
 28275                           
 28276                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 28277  0057D6  0E01               	movlw	1
 28278  0057D8  6F2C               	movwf	(_UartConfig+12)& (0+255),b
 28279                           
 28280                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 28281  0057DA  0E00               	movlw	0
 28282  0057DC  6F2D               	movwf	(_UartConfig+13)& (0+255),b
 28283  0057DE  0E6C               	movlw	108
 28284  0057E0  6F2E               	movwf	(_UartConfig+14)& (0+255),b
 28285  0057E2  0EDC               	movlw	220
 28286  0057E4  6F2F               	movwf	(_UartConfig+15)& (0+255),b
 28287  0057E6  0E02               	movlw	2
 28288  0057E8  6F30               	movwf	(_UartConfig+16)& (0+255),b
 28289                           
 28290                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 28291  0057EA  0E80               	movlw	128
 28292  0057EC  6F31               	movwf	(_UartConfig+17)& (0+255),b
 28293  0057EE  0E25               	movlw	37
 28294  0057F0  6F32               	movwf	(_UartConfig+18)& (0+255),b
 28295  0057F2  0E00               	movlw	0
 28296  0057F4  6F33               	movwf	(_UartConfig+19)& (0+255),b
 28297  0057F6  0E00               	movlw	0
 28298  0057F8  6F34               	movwf	(_UartConfig+20)& (0+255),b
 28299                           
 28300                           ; BSR set to: 3
 28301  0057FA  0012               	return		;funcret
 28302  0057FC                     __end_of_UartSetConfigLow:
 28303                           	opt stack 0
 28304                           tosu	equ	0xFFF
 28305                           tosh	equ	0xFFE
 28306                           tosl	equ	0xFFD
 28307                           pclath	equ	0xFFA
 28308                           tblptru	equ	0xFF8
 28309                           tblptrh	equ	0xFF7
 28310                           tblptrl	equ	0xFF6
 28311                           tablat	equ	0xFF5
 28312                           prodh	equ	0xFF4
 28313                           prodl	equ	0xFF3
 28314                           intcon	equ	0xFF2
 28315                           intcon2	equ	0xFF1
 28316                           intcon3	equ	0xFF0
 28317                           indf0	equ	0xFEF
 28318                           postinc0	equ	0xFEE
 28319                           plusw0	equ	0xFEB
 28320                           fsr0h	equ	0xFEA
 28321                           fsr0l	equ	0xFE9
 28322                           wreg	equ	0xFE8
 28323                           indf1	equ	0xFE7
 28324                           postinc1	equ	0xFE6
 28325                           postdec1	equ	0xFE5
 28326                           plusw1	equ	0xFE3
 28327                           fsr1h	equ	0xFE2
 28328                           fsr1l	equ	0xFE1
 28329                           indf2	equ	0xFDF
 28330                           postinc2	equ	0xFDE
 28331                           postdec2	equ	0xFDD
 28332                           plusw2	equ	0xFDB
 28333                           fsr2h	equ	0xFDA
 28334                           fsr2l	equ	0xFD9
 28335                           status	equ	0xFD8
 28336                           
 28337 ;; *************** function _CheckModem *****************
 28338 ;; Defined at:
 28339 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28340 ;; Parameters:    Size  Location     Type
 28341 ;;		None
 28342 ;; Auto vars:     Size  Location     Type
 28343 ;;		None
 28344 ;; Return value:  Size  Location     Type
 28345 ;;                  1    wreg      void 
 28346 ;; Registers used:
 28347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28348 ;; Tracked objects:
 28349 ;;		On entry : 0/0
 28350 ;;		On exit  : 0/0
 28351 ;;		Unchanged: 0/0
 28352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28357 ;;Total ram usage:        0 bytes
 28358 ;; Hardware stack levels used:    1
 28359 ;; Hardware stack levels required when called:   14
 28360 ;; This function calls:
 28361 ;;		_GenerateEvt
 28362 ;;		_OsTmr_GetTimerStatus
 28363 ;;		_OsTmr_StartTimer
 28364 ;;		_ReceiveEvt
 28365 ;;		_Uart_WriteConstString
 28366 ;; This function is called by:
 28367 ;;		_Mdm_MainTask
 28368 ;; This function uses a non-reentrant model
 28369 ;;
 28370                           
 28371                           	psect	text132
 28372  002870                     __ptext132:
 28373                           	opt stack 0
 28374  002870                     _CheckModem:
 28375                           	opt stack 13
 28376                           
 28377                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 28378                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 28379                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 28380                           
 28381                           ; BSR set to: 3
 28382                           ;incstack = 0
 28383  002870  D096               	goto	l982
 28384  002872                     
 28385                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 28386  002872  0EF0               	movlw	low CheckModem@Timeout
 28387  002874  0100               	movlb	0	; () banked
 28388  002876  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28389  002878  0E03               	movlw	high CheckModem@Timeout
 28390  00287A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28391  00287C  0ED0               	movlw	208
 28392  00287E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28393  002880  0E07               	movlw	7
 28394  002882  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28395  002884  0E00               	movlw	0
 28396  002886  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28397  002888  0E00               	movlw	0
 28398  00288A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28399  00288C  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 28400                           
 28401                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 28402  002890  0E01               	movlw	1
 28403  002892  6E29               	movwf	CheckModem@CheckMdmSts,c
 28404                           
 28405                           ;mdm_gsm_gprs.c: 295: break;
 28406  002894  0012               	return	
 28407  002896                     
 28408                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28409  002896  0EF0               	movlw	low CheckModem@Timeout
 28410  002898  0100               	movlb	0	; () banked
 28411  00289A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28412  00289C  0E03               	movlw	high CheckModem@Timeout
 28413  00289E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28414  0028A0  ECC6  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 28415  0028A4  06E8               	decf	wreg,f,c
 28416  0028A6  A4D8               	btfss	status,2,c
 28417  0028A8  0012               	return	
 28418                           
 28419                           ;mdm_gsm_gprs.c: 300: {
 28420                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 28421  0028AA  0E02               	movlw	2
 28422  0028AC  6E29               	movwf	CheckModem@CheckMdmSts,c
 28423                           
 28424                           ;mdm_gsm_gprs.c: 303: }
 28425                           ;mdm_gsm_gprs.c: 304: break;
 28426  0028AE  0012               	return	
 28427  0028B0                     
 28428                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 28429  0028B0  0EE6               	movlw	low STR_1
 28430  0028B2  0100               	movlb	0	; () banked
 28431  0028B4  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28432  0028B6  0EFF               	movlw	high STR_1
 28433  0028B8  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28434  0028BA  0E01               	movlw	1
 28435  0028BC  EC7A  F02F         	call	_Uart_WriteConstString
 28436                           
 28437                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 28438  0028C0  0EF0               	movlw	low CheckModem@Timeout
 28439  0028C2  0100               	movlb	0	; () banked
 28440  0028C4  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28441  0028C6  0E03               	movlw	high CheckModem@Timeout
 28442  0028C8  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28443  0028CA  0ED0               	movlw	208
 28444  0028CC  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28445  0028CE  0E07               	movlw	7
 28446  0028D0  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28447  0028D2  0E00               	movlw	0
 28448  0028D4  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28449  0028D6  0E00               	movlw	0
 28450  0028D8  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28451  0028DA  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 28452                           
 28453                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 28454  0028DE  0E03               	movlw	3
 28455  0028E0  6E29               	movwf	CheckModem@CheckMdmSts,c
 28456                           
 28457                           ;mdm_gsm_gprs.c: 313: break;
 28458  0028E2  0012               	return	
 28459  0028E4                     
 28460                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 28461  0028E4  0E3C               	movlw	low _NewStringReceived
 28462  0028E6  0100               	movlb	0	; () banked
 28463  0028E8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28464  0028EA  0E00               	movlw	high _NewStringReceived
 28465  0028EC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28466  0028EE  ECAA  F031         	call	_ReceiveEvt	;wreg free
 28467  0028F2  0900               	iorlw	0
 28468  0028F4  B4D8               	btfsc	status,2,c
 28469  0028F6  D02F               	goto	l989
 28470                           
 28471                           ;mdm_gsm_gprs.c: 318: {
 28472                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 28473  0028F8  CC58  FFE8         	movff	_RxBuffer,wreg
 28474  0028FC  0A4F               	xorlw	79
 28475  0028FE  A4D8               	btfss	status,2,c
 28476  002900  D005               	goto	u14350
 28477  002902  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28478  002906  0A4B               	xorlw	75
 28479  002908  B4D8               	btfsc	status,2,c
 28480  00290A  D00A               	goto	u14370
 28481  00290C                     u14350:
 28482  00290C  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28483  002910  0A4F               	xorlw	79
 28484  002912  A4D8               	btfss	status,2,c
 28485  002914  0012               	return	
 28486  002916  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 28487  00291A  0A4B               	xorlw	75
 28488  00291C  A4D8               	btfss	status,2,c
 28489  00291E  0012               	return	
 28490  002920                     u14370:
 28491                           
 28492                           ;mdm_gsm_gprs.c: 321: {
 28493                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 28494  002920  0E02               	movlw	2
 28495  002922  0100               	movlb	0	; () banked
 28496  002924  6FD0               	movwf	_MdmStatus& (0+255),b
 28497                           
 28498                           ; BSR set to: 0
 28499                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 28500  002926  0EE0               	movlw	low _MdmOnOffPulseRequest
 28501  002928  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28502  00292A  0E00               	movlw	high _MdmOnOffPulseRequest
 28503  00292C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28504  00292E  EC9F  F033         	call	_GenerateEvt	;wreg free
 28505                           
 28506                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 28507  002932  0EF0               	movlw	low CheckModem@Timeout
 28508  002934  0100               	movlb	0	; () banked
 28509  002936  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28510  002938  0E03               	movlw	high CheckModem@Timeout
 28511  00293A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28512  00293C  0EE8               	movlw	232
 28513  00293E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28514  002940  0E03               	movlw	3
 28515  002942  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28516  002944  0E00               	movlw	0
 28517  002946  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28518  002948  0E00               	movlw	0
 28519  00294A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28520  00294C  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 28521                           
 28522                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 28523  002950  0E04               	movlw	4
 28524  002952  6E29               	movwf	CheckModem@CheckMdmSts,c
 28525                           
 28526                           ;mdm_gsm_gprs.c: 329: }
 28527                           ;mdm_gsm_gprs.c: 330: }
 28528  002954  0012               	return	
 28529  002956                     l989:
 28530                           
 28531                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28532  002956  0EF0               	movlw	low CheckModem@Timeout
 28533  002958  0100               	movlb	0	; () banked
 28534  00295A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28535  00295C  0E03               	movlw	high CheckModem@Timeout
 28536  00295E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28537  002960  ECC6  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 28538  002964  06E8               	decf	wreg,f,c
 28539  002966  A4D8               	btfss	status,2,c
 28540  002968  0012               	return	
 28541                           
 28542                           ;mdm_gsm_gprs.c: 332: {
 28543                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 28544  00296A  0E00               	movlw	0
 28545  00296C  0100               	movlb	0	; () banked
 28546  00296E  6FD0               	movwf	_MdmStatus& (0+255),b
 28547                           
 28548                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 28549  002970  0E01               	movlw	1
 28550  002972  6E2A               	movwf	_ComChecCompleted,c
 28551                           
 28552                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 28553  002974  0E05               	movlw	5
 28554  002976  6E29               	movwf	CheckModem@CheckMdmSts,c
 28555                           
 28556                           ; BSR set to: 0
 28557                           ;mdm_gsm_gprs.c: 343: }
 28558                           ;mdm_gsm_gprs.c: 344: break;
 28559                           
 28560                           ; BSR set to: 0
 28561                           
 28562                           ;mdm_gsm_gprs.c: 340: else
 28563                           ;mdm_gsm_gprs.c: 341: {
 28564                           
 28565                           ; BSR set to: 0
 28566                           
 28567                           ;mdm_gsm_gprs.c: 339: }
 28568  002978  0012               	return	
 28569  00297A                     
 28570                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28571                           
 28572                           ; BSR set to: 0
 28573  00297A  0EF0               	movlw	low CheckModem@Timeout
 28574  00297C  0100               	movlb	0	; () banked
 28575  00297E  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28576  002980  0E03               	movlw	high CheckModem@Timeout
 28577  002982  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28578  002984  ECC6  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 28579  002988  06E8               	decf	wreg,f,c
 28580  00298A  A4D8               	btfss	status,2,c
 28581  00298C  0012               	return	
 28582                           
 28583                           ;mdm_gsm_gprs.c: 349: {
 28584                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 28585  00298E  0E00               	movlw	0
 28586  002990  0100               	movlb	0	; () banked
 28587  002992  6FD0               	movwf	_MdmStatus& (0+255),b
 28588                           
 28589                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 28590  002994  0E01               	movlw	1
 28591  002996  6E2A               	movwf	_ComChecCompleted,c
 28592                           
 28593                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 28594  002998  0E05               	movlw	5
 28595  00299A  6E29               	movwf	CheckModem@CheckMdmSts,c
 28596                           
 28597                           ; BSR set to: 0
 28598                           ;mdm_gsm_gprs.c: 365: }
 28599                           
 28600                           ; BSR set to: 0
 28601                           ;mdm_gsm_gprs.c: 364: break;
 28602                           
 28603                           ;mdm_gsm_gprs.c: 363: default:
 28604                           
 28605                           ; BSR set to: 0
 28606                           ;mdm_gsm_gprs.c: 361: break;
 28607                           
 28608                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 28609                           
 28610                           ; BSR set to: 0
 28611                           ;mdm_gsm_gprs.c: 356: }
 28612                           ;mdm_gsm_gprs.c: 357: break;
 28613  00299C  0012               	return	
 28614  00299E                     l982:
 28615                           
 28616                           ; BSR set to: 0
 28617  00299E  5029               	movf	CheckModem@CheckMdmSts,w,c
 28618                           
 28619                           ; Switch size 1, requested type "space"
 28620                           ; Number of cases is 6, Range of values is 0 to 5
 28621                           ; switch strategies available:
 28622                           ; Name         Instructions Cycles
 28623                           ; simple_byte           19    10 (average)
 28624                           ;	Chosen strategy is simple_byte
 28625  0029A0  0A00               	xorlw	0	; case 0
 28626  0029A2  B4D8               	btfsc	status,2,c
 28627  0029A4  D766               	goto	l983
 28628  0029A6  0A01               	xorlw	1	; case 1
 28629  0029A8  B4D8               	btfsc	status,2,c
 28630  0029AA  D775               	goto	l985
 28631  0029AC  0A03               	xorlw	3	; case 2
 28632  0029AE  B4D8               	btfsc	status,2,c
 28633  0029B0  D77F               	goto	l987
 28634  0029B2  0A01               	xorlw	1	; case 3
 28635  0029B4  B4D8               	btfsc	status,2,c
 28636  0029B6  D796               	goto	l988
 28637  0029B8  0A07               	xorlw	7	; case 4
 28638  0029BA  B4D8               	btfsc	status,2,c
 28639  0029BC  D7DE               	goto	l998
 28640  0029BE  0A01               	xorlw	1	; case 5
 28641  0029C0  0012               	return	
 28642  0029C2                     __end_of_CheckModem:
 28643                           	opt stack 0
 28644                           tosu	equ	0xFFF
 28645                           tosh	equ	0xFFE
 28646                           tosl	equ	0xFFD
 28647                           pclath	equ	0xFFA
 28648                           tblptru	equ	0xFF8
 28649                           tblptrh	equ	0xFF7
 28650                           tblptrl	equ	0xFF6
 28651                           tablat	equ	0xFF5
 28652                           prodh	equ	0xFF4
 28653                           prodl	equ	0xFF3
 28654                           intcon	equ	0xFF2
 28655                           intcon2	equ	0xFF1
 28656                           intcon3	equ	0xFF0
 28657                           indf0	equ	0xFEF
 28658                           postinc0	equ	0xFEE
 28659                           plusw0	equ	0xFEB
 28660                           fsr0h	equ	0xFEA
 28661                           fsr0l	equ	0xFE9
 28662                           wreg	equ	0xFE8
 28663                           indf1	equ	0xFE7
 28664                           postinc1	equ	0xFE6
 28665                           postdec1	equ	0xFE5
 28666                           plusw1	equ	0xFE3
 28667                           fsr1h	equ	0xFE2
 28668                           fsr1l	equ	0xFE1
 28669                           indf2	equ	0xFDF
 28670                           postinc2	equ	0xFDE
 28671                           postdec2	equ	0xFDD
 28672                           plusw2	equ	0xFDB
 28673                           fsr2h	equ	0xFDA
 28674                           fsr2l	equ	0xFD9
 28675                           status	equ	0xFD8
 28676                           
 28677 ;; *************** function _MdmCntSm *****************
 28678 ;; Defined at:
 28679 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 28680 ;; Parameters:    Size  Location     Type
 28681 ;;		None
 28682 ;; Auto vars:     Size  Location     Type
 28683 ;;		None
 28684 ;; Return value:  Size  Location     Type
 28685 ;;                  1    wreg      void 
 28686 ;; Registers used:
 28687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28688 ;; Tracked objects:
 28689 ;;		On entry : 0/0
 28690 ;;		On exit  : 0/0
 28691 ;;		Unchanged: 0/0
 28692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28697 ;;Total ram usage:        0 bytes
 28698 ;; Hardware stack levels used:    1
 28699 ;; Hardware stack levels required when called:   12
 28700 ;; This function calls:
 28701 ;;		_InitModemInterface
 28702 ;;		_ReceiveEvt
 28703 ;; This function is called by:
 28704 ;;		_Mdm_DrvMainFn
 28705 ;; This function uses a non-reentrant model
 28706 ;;
 28707                           
 28708                           	psect	text133
 28709  004642                     __ptext133:
 28710                           	opt stack 0
 28711  004642                     _MdmCntSm:
 28712                           	opt stack 15
 28713                           
 28714                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 28715                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 28716                           ;mdm_drv.c: 204: switch (MdmCntState)
 28717                           
 28718                           ;incstack = 0
 28719  004642  D045               	goto	l315
 28720  004644                     
 28721                           ;mdm_drv.c: 208: InitModemInterface();
 28722  004644  EC63  F034         	call	_InitModemInterface	;wreg free
 28723                           
 28724                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 28725  004648  0E01               	movlw	1
 28726  00464A  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28727                           
 28728                           ;mdm_drv.c: 211: break;
 28729  00464C  0012               	return	
 28730  00464E                     
 28731                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 28732  00464E  0EE0               	movlw	low _MdmOnOffPulseRequest
 28733  004650  0100               	movlb	0	; () banked
 28734  004652  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28735  004654  0E00               	movlw	high _MdmOnOffPulseRequest
 28736  004656  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28737  004658  ECAA  F031         	call	_ReceiveEvt	;wreg free
 28738  00465C  0900               	iorlw	0
 28739  00465E  B4D8               	btfsc	status,2,c
 28740  004660  D009               	goto	l319
 28741                           
 28742                           ;mdm_drv.c: 216: {
 28743                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 28744  004662  0E02               	movlw	2
 28745  004664  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28746                           
 28747                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 28748  004666  8284               	bsf	3972,1,c	;volatile
 28749                           
 28750                           ;mdm_drv.c: 222: Counter = 0;
 28751  004668  0E00               	movlw	0
 28752  00466A  0102               	movlb	2	; () banked
 28753  00466C  6FDD               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 28754  00466E  0E00               	movlw	0
 28755  004670  6FDC               	movwf	MdmCntSm@Counter& (0+255),b
 28756                           
 28757                           ;mdm_drv.c: 223: }
 28758  004672  0012               	return	
 28759  004674                     l319:
 28760                           
 28761                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 28762                           
 28763                           ; BSR set to: 2
 28764  004674  0E3D               	movlw	low _MdmResetRequest
 28765  004676  0100               	movlb	0	; () banked
 28766  004678  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28767  00467A  0E00               	movlw	high _MdmResetRequest
 28768  00467C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28769  00467E  ECAA  F031         	call	_ReceiveEvt	;wreg free
 28770  004682  0900               	iorlw	0
 28771  004684  B4D8               	btfsc	status,2,c
 28772  004686  0012               	return	
 28773                           
 28774                           ;mdm_drv.c: 225: {
 28775                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 28776  004688  0E03               	movlw	3
 28777  00468A  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28778                           
 28779                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 28780  00468C  8084               	bsf	3972,0,c	;volatile
 28781                           
 28782                           ;mdm_drv.c: 231: Counter = 0;
 28783  00468E  0E00               	movlw	0
 28784  004690  0102               	movlb	2	; () banked
 28785  004692  6FDD               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 28786  004694  0E00               	movlw	0
 28787  004696  6FDC               	movwf	MdmCntSm@Counter& (0+255),b
 28788                           
 28789                           ; BSR set to: 2
 28790                           ;mdm_drv.c: 236: }
 28791                           ;mdm_drv.c: 237: break;
 28792                           
 28793                           ; BSR set to: 2
 28794                           
 28795                           ;mdm_drv.c: 233: else
 28796                           ;mdm_drv.c: 234: {
 28797                           
 28798                           ; BSR set to: 2
 28799                           
 28800                           ;mdm_drv.c: 232: }
 28801  004698  0012               	return	
 28802  00469A                     
 28803                           ;mdm_drv.c: 241: Counter++;
 28804                           
 28805                           ; BSR set to: 2
 28806  00469A  0102               	movlb	2	; () banked
 28807  00469C  4BDC               	infsnz	MdmCntSm@Counter& (0+255),f,b
 28808  00469E  2BDD               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 28809                           
 28810                           ; BSR set to: 2
 28811                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 28812  0046A0  51DD               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 28813  0046A2  E104               	bnz	u14270
 28814  0046A4  0E96               	movlw	150
 28815  0046A6  5DDC               	subwf	MdmCntSm@Counter& (0+255),w,b
 28816  0046A8  A0D8               	btfss	status,0,c
 28817  0046AA  0012               	return	
 28818  0046AC                     u14270:
 28819                           
 28820                           ; BSR set to: 2
 28821                           ;mdm_drv.c: 244: {
 28822                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 28823  0046AC  9284               	bcf	3972,1,c	;volatile
 28824                           
 28825                           ; BSR set to: 2
 28826                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 28827  0046AE  0E01               	movlw	1
 28828  0046B0  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28829                           
 28830                           ; BSR set to: 2
 28831                           ;mdm_drv.c: 249: }
 28832                           ;mdm_drv.c: 250: break;
 28833  0046B2  0012               	return	
 28834  0046B4                     
 28835                           ;mdm_drv.c: 254: Counter++;
 28836                           
 28837                           ; BSR set to: 2
 28838  0046B4  0102               	movlb	2	; () banked
 28839  0046B6  4BDC               	infsnz	MdmCntSm@Counter& (0+255),f,b
 28840  0046B8  2BDD               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 28841                           
 28842                           ; BSR set to: 2
 28843                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 28844  0046BA  51DD               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 28845  0046BC  E104               	bnz	u14280
 28846  0046BE  0E0A               	movlw	10
 28847  0046C0  5DDC               	subwf	MdmCntSm@Counter& (0+255),w,b
 28848  0046C2  A0D8               	btfss	status,0,c
 28849  0046C4  0012               	return	
 28850  0046C6                     u14280:
 28851                           
 28852                           ; BSR set to: 2
 28853                           ;mdm_drv.c: 257: {
 28854                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 28855  0046C6  9084               	bcf	3972,0,c	;volatile
 28856                           
 28857                           ; BSR set to: 2
 28858                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 28859  0046C8  0E01               	movlw	1
 28860  0046CA  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28861                           
 28862                           ; BSR set to: 2
 28863                           ;mdm_drv.c: 267: }
 28864                           
 28865                           ; BSR set to: 2
 28866                           ;mdm_drv.c: 266: break;
 28867                           
 28868                           ;mdm_drv.c: 265: default:
 28869                           
 28870                           ; BSR set to: 2
 28871                           ;mdm_drv.c: 262: }
 28872                           ;mdm_drv.c: 263: break;
 28873  0046CC  0012               	return	
 28874  0046CE                     l315:
 28875                           
 28876                           ; BSR set to: 2
 28877  0046CE  502D               	movf	MdmCntSm@MdmCntState,w,c
 28878                           
 28879                           ; Switch size 1, requested type "space"
 28880                           ; Number of cases is 4, Range of values is 0 to 3
 28881                           ; switch strategies available:
 28882                           ; Name         Instructions Cycles
 28883                           ; simple_byte           13     7 (average)
 28884                           ;	Chosen strategy is simple_byte
 28885  0046D0  0A00               	xorlw	0	; case 0
 28886  0046D2  B4D8               	btfsc	status,2,c
 28887  0046D4  D7B7               	goto	l316
 28888  0046D6  0A01               	xorlw	1	; case 1
 28889  0046D8  B4D8               	btfsc	status,2,c
 28890  0046DA  D7B9               	goto	l318
 28891  0046DC  0A03               	xorlw	3	; case 2
 28892  0046DE  B4D8               	btfsc	status,2,c
 28893  0046E0  D7DC               	goto	l323
 28894  0046E2  0A01               	xorlw	1	; case 3
 28895  0046E4  A4D8               	btfss	status,2,c
 28896  0046E6  0012               	return	
 28897  0046E8  D7E5               	goto	l325
 28898  0046EA                     __end_of_MdmCntSm:
 28899                           	opt stack 0
 28900                           tosu	equ	0xFFF
 28901                           tosh	equ	0xFFE
 28902                           tosl	equ	0xFFD
 28903                           pclath	equ	0xFFA
 28904                           tblptru	equ	0xFF8
 28905                           tblptrh	equ	0xFF7
 28906                           tblptrl	equ	0xFF6
 28907                           tablat	equ	0xFF5
 28908                           prodh	equ	0xFF4
 28909                           prodl	equ	0xFF3
 28910                           intcon	equ	0xFF2
 28911                           intcon2	equ	0xFF1
 28912                           intcon3	equ	0xFF0
 28913                           indf0	equ	0xFEF
 28914                           postinc0	equ	0xFEE
 28915                           plusw0	equ	0xFEB
 28916                           fsr0h	equ	0xFEA
 28917                           fsr0l	equ	0xFE9
 28918                           wreg	equ	0xFE8
 28919                           indf1	equ	0xFE7
 28920                           postinc1	equ	0xFE6
 28921                           postdec1	equ	0xFE5
 28922                           plusw1	equ	0xFE3
 28923                           fsr1h	equ	0xFE2
 28924                           fsr1l	equ	0xFE1
 28925                           indf2	equ	0xFDF
 28926                           postinc2	equ	0xFDE
 28927                           postdec2	equ	0xFDD
 28928                           plusw2	equ	0xFDB
 28929                           fsr2h	equ	0xFDA
 28930                           fsr2l	equ	0xFD9
 28931                           status	equ	0xFD8
 28932                           
 28933 ;; *************** function _InitModemInterface *****************
 28934 ;; Defined at:
 28935 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 28936 ;; Parameters:    Size  Location     Type
 28937 ;;		None
 28938 ;; Auto vars:     Size  Location     Type
 28939 ;;		None
 28940 ;; Return value:  Size  Location     Type
 28941 ;;                  1    wreg      void 
 28942 ;; Registers used:
 28943 ;;		None
 28944 ;; Tracked objects:
 28945 ;;		On entry : 0/0
 28946 ;;		On exit  : 0/0
 28947 ;;		Unchanged: 0/0
 28948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28953 ;;Total ram usage:        0 bytes
 28954 ;; Hardware stack levels used:    1
 28955 ;; Hardware stack levels required when called:   11
 28956 ;; This function calls:
 28957 ;;		Nothing
 28958 ;; This function is called by:
 28959 ;;		_MdmCntSm
 28960 ;; This function uses a non-reentrant model
 28961 ;;
 28962                           
 28963                           	psect	text134
 28964  0068C6                     __ptext134:
 28965                           	opt stack 0
 28966  0068C6                     _InitModemInterface:
 28967                           	opt stack 15
 28968                           
 28969                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 28970                           
 28971                           ;incstack = 0
 28972  0068C6  9096               	bcf	3990,0,c	;volatile
 28973                           
 28974                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 28975  0068C8  9296               	bcf	3990,1,c	;volatile
 28976                           
 28977                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 28978  0068CA  8496               	bsf	3990,2,c	;volatile
 28979  0068CC  0012               	return		;funcret
 28980  0068CE                     __end_of_InitModemInterface:
 28981                           	opt stack 0
 28982                           tosu	equ	0xFFF
 28983                           tosh	equ	0xFFE
 28984                           tosl	equ	0xFFD
 28985                           pclath	equ	0xFFA
 28986                           tblptru	equ	0xFF8
 28987                           tblptrh	equ	0xFF7
 28988                           tblptrl	equ	0xFF6
 28989                           tablat	equ	0xFF5
 28990                           prodh	equ	0xFF4
 28991                           prodl	equ	0xFF3
 28992                           intcon	equ	0xFF2
 28993                           intcon2	equ	0xFF1
 28994                           intcon3	equ	0xFF0
 28995                           indf0	equ	0xFEF
 28996                           postinc0	equ	0xFEE
 28997                           plusw0	equ	0xFEB
 28998                           fsr0h	equ	0xFEA
 28999                           fsr0l	equ	0xFE9
 29000                           wreg	equ	0xFE8
 29001                           indf1	equ	0xFE7
 29002                           postinc1	equ	0xFE6
 29003                           postdec1	equ	0xFE5
 29004                           plusw1	equ	0xFE3
 29005                           fsr1h	equ	0xFE2
 29006                           fsr1l	equ	0xFE1
 29007                           indf2	equ	0xFDF
 29008                           postinc2	equ	0xFDE
 29009                           postdec2	equ	0xFDD
 29010                           plusw2	equ	0xFDB
 29011                           fsr2h	equ	0xFDA
 29012                           fsr2l	equ	0xFD9
 29013                           status	equ	0xFD8
 29014                           
 29015 ;; *************** function _InitGprsNetwork *****************
 29016 ;; Defined at:
 29017 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 29018 ;; Parameters:    Size  Location     Type
 29019 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 29020 ;;		 -> NULL(0), 
 29021 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 29022 ;; Auto vars:     Size  Location     Type
 29023 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 29024 ;;  Index           1   50[BANK1 ] unsigned char 
 29025 ;; Return value:  Size  Location     Type
 29026 ;;                  1    wreg      enum E8923
 29027 ;; Registers used:
 29028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29029 ;; Tracked objects:
 29030 ;;		On entry : 0/0
 29031 ;;		On exit  : 0/0
 29032 ;;		Unchanged: 0/0
 29033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29034 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29035 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29036 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29037 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29038 ;;Total ram usage:       56 bytes
 29039 ;; Hardware stack levels used:    1
 29040 ;; Hardware stack levels required when called:   14
 29041 ;; This function calls:
 29042 ;;		_ClearBuffer
 29043 ;;		_OsTmr_GetTimerStatus
 29044 ;;		_OsTmr_StartTimer
 29045 ;;		_ReceiveEvt
 29046 ;;		_StringCopy
 29047 ;;		_Uart_WriteConstString
 29048 ;;		_Uart_WriteString
 29049 ;; This function is called by:
 29050 ;;		_MdmHttp_MainTask
 29051 ;; This function uses a non-reentrant model
 29052 ;;
 29053                           
 29054                           	psect	text135
 29055  0010BA                     __ptext135:
 29056                           	opt stack 0
 29057  0010BA                     _InitGprsNetwork:
 29058                           	opt stack 13
 29059                           
 29060                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 29061                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 29062                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 29063                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 29064                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 29065                           
 29066                           ;incstack = 0
 29067  0010BA  0E00               	movlw	0
 29068  0010BC  0101               	movlb	1	; () banked
 29069  0010BE  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 29070                           
 29071                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 29072  0010C0  D154               	goto	l1219
 29073  0010C2                     
 29074                           ; BSR set to: 1
 29075                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 29076                           
 29077                           ; BSR set to: 1
 29078  0010C2  0ED9               	movlw	low _InitNetwork
 29079  0010C4  0100               	movlb	0	; () banked
 29080  0010C6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29081  0010C8  0E00               	movlw	high _InitNetwork
 29082  0010CA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29083  0010CC  ECAA  F031         	call	_ReceiveEvt	;wreg free
 29084  0010D0  0900               	iorlw	0
 29085  0010D2  B4D8               	btfsc	status,2,c
 29086  0010D4  D166               	goto	l1222
 29087                           
 29088                           ;mdm_gsm_gprs_http.c: 137: {
 29089                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 29090  0010D6  0E01               	movlw	1
 29091  0010D8  D141               	goto	L79
 29092  0010DA                     
 29093                           ; BSR set to: 1
 29094                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 29095                           
 29096                           ; BSR set to: 1
 29097  0010DA  0E89               	movlw	low STR_8
 29098  0010DC  0100               	movlb	0	; () banked
 29099  0010DE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29100  0010E0  0EFE               	movlw	high STR_8
 29101  0010E2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29102  0010E4  0E01               	movlw	1
 29103  0010E6  EC7A  F02F         	call	_Uart_WriteConstString
 29104                           
 29105                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 29106  0010EA  0E07               	movlw	7
 29107  0010EC  0101               	movlb	1	; () banked
 29108  0010EE  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29109                           
 29110                           ; BSR set to: 1
 29111                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 29112  0010F0  0E02               	movlw	2
 29113  0010F2  0100               	movlb	0	; () banked
 29114  0010F4  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 29115                           
 29116                           ; BSR set to: 0
 29117                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 29118  0010F6  0EF5               	movlw	low _ConnTimeout
 29119  0010F8  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29120  0010FA  0E02               	movlw	high _ConnTimeout
 29121  0010FC  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29122  0010FE  0E20               	movlw	32
 29123  001100  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29124  001102  0E4E               	movlw	78
 29125  001104  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29126  001106  0E00               	movlw	0
 29127  001108  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29128  00110A  0E00               	movlw	0
 29129  00110C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29130  00110E  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 29131  001112  D0C7               	goto	l15210
 29132  001114                     
 29133                           ; BSR set to: 1
 29134                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 29135                           
 29136                           ; BSR set to: 1
 29137  001114  0E00               	movlw	low InitGprsNetwork@UartMessage
 29138  001116  0100               	movlb	0	; () banked
 29139  001118  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29140  00111A  0E01               	movlw	high InitGprsNetwork@UartMessage
 29141  00111C  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29142  00111E  0E00               	movlw	0
 29143  001120  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29144  001122  0E32               	movlw	50
 29145  001124  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29146  001126  ECCC  F030         	call	_ClearBuffer	;wreg free
 29147                           
 29148                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 29149  00112A  0EBD               	movlw	low STR_9
 29150  00112C  0100               	movlb	0	; () banked
 29151  00112E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 29152  001130  0EFE               	movlw	high STR_9
 29153  001132  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 29154  001134  0E00               	movlw	low InitGprsNetwork@UartMessage
 29155  001136  6F87               	movwf	StringCopy@DestStr& (0+255),b
 29156  001138  0E01               	movlw	high InitGprsNetwork@UartMessage
 29157  00113A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 29158  00113C  0E00               	movlw	0
 29159  00113E  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 29160  001140  0E14               	movlw	20
 29161  001142  6F89               	movwf	StringCopy@Len& (0+255),b
 29162  001144  ECBD  F02A         	call	_StringCopy	;wreg free
 29163                           
 29164                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 29165  001148  0E00               	movlw	0
 29166  00114A  0101               	movlb	1	; () banked
 29167  00114C  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 29168  00114E  D01C               	goto	l1225
 29169  001150                     
 29170                           ; BSR set to: 1
 29171                           ;mdm_gsm_gprs_http.c: 161: {
 29172                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 29173                           
 29174                           ; BSR set to: 1
 29175  001150  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29176  001152  0D01               	mullw	1
 29177  001154  50F3               	movf	prodl,w,c
 29178  001156  0100               	movlb	0	; () banked
 29179  001158  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 29180  00115A  6ED9               	movwf	fsr2l,c
 29181  00115C  50F4               	movf	prodh,w,c
 29182  00115E  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 29183  001160  6EDA               	movwf	fsr2h,c
 29184  001162  0101               	movlb	1	; () banked
 29185  001164  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29186  001166  0100               	movlb	0	; () banked
 29187  001168  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29188  00116A  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29189  00116C  0E14               	movlw	20
 29190  00116E  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29191  001170  0E00               	movlw	0
 29192  001172  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29193  001174  0E00               	movlw	low InitGprsNetwork@UartMessage
 29194  001176  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29195  001178  6EE1               	movwf	fsr1l,c
 29196  00117A  0E01               	movlw	high InitGprsNetwork@UartMessage
 29197  00117C  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29198  00117E  6EE2               	movwf	fsr1h,c
 29199  001180  CFDF FFE7          	movff	indf2,indf1
 29200                           
 29201                           ; BSR set to: 0
 29202  001184  0101               	movlb	1	; () banked
 29203  001186  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 29204  001188                     l1225:
 29205                           
 29206                           ; BSR set to: 1
 29207                           
 29208                           ; BSR set to: 1
 29209  001188  0100               	movlb	0	; () banked
 29210  00118A  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 29211  00118C  0101               	movlb	1	; () banked
 29212  00118E  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 29213  001190  A0D8               	btfss	status,0,c
 29214  001192  D7DE               	goto	l1226
 29215                           
 29216                           ; BSR set to: 1
 29217                           ;mdm_gsm_gprs_http.c: 163: }
 29218                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 29219                           
 29220                           ; BSR set to: 1
 29221  001194  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29222  001196  0100               	movlb	0	; () banked
 29223  001198  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29224  00119A  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29225  00119C  0E14               	movlw	20
 29226  00119E  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29227  0011A0  0E00               	movlw	0
 29228  0011A2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29229  0011A4  0E00               	movlw	low InitGprsNetwork@UartMessage
 29230  0011A6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29231  0011A8  6ED9               	movwf	fsr2l,c
 29232  0011AA  0E01               	movlw	high InitGprsNetwork@UartMessage
 29233  0011AC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29234  0011AE  6EDA               	movwf	fsr2h,c
 29235  0011B0  0E22               	movlw	34
 29236  0011B2  6EDF               	movwf	indf2,c
 29237                           
 29238                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 29239  0011B4  0101               	movlb	1	; () banked
 29240  0011B6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29241  0011B8  0100               	movlb	0	; () banked
 29242  0011BA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29243  0011BC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29244  0011BE  0E15               	movlw	21
 29245  0011C0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29246  0011C2  0E00               	movlw	0
 29247  0011C4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29248  0011C6  0E00               	movlw	low InitGprsNetwork@UartMessage
 29249  0011C8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29250  0011CA  6ED9               	movwf	fsr2l,c
 29251  0011CC  0E01               	movlw	high InitGprsNetwork@UartMessage
 29252  0011CE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29253  0011D0  6EDA               	movwf	fsr2h,c
 29254  0011D2  0E0D               	movlw	13
 29255  0011D4  6EDF               	movwf	indf2,c
 29256                           
 29257                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 29258  0011D6  0101               	movlb	1	; () banked
 29259  0011D8  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29260  0011DA  0100               	movlb	0	; () banked
 29261  0011DC  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29262  0011DE  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29263  0011E0  0E16               	movlw	22
 29264  0011E2  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29265  0011E4  0E00               	movlw	0
 29266  0011E6  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29267  0011E8  0E00               	movlw	low InitGprsNetwork@UartMessage
 29268  0011EA  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29269  0011EC  6ED9               	movwf	fsr2l,c
 29270  0011EE  0E01               	movlw	high InitGprsNetwork@UartMessage
 29271  0011F0  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29272  0011F2  6EDA               	movwf	fsr2h,c
 29273  0011F4  0E00               	movlw	0
 29274  0011F6  6EDF               	movwf	indf2,c
 29275                           
 29276                           ; BSR set to: 0
 29277                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 29278  0011F8  0E00               	movlw	low InitGprsNetwork@UartMessage
 29279  0011FA  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 29280  0011FC  0E01               	movlw	high InitGprsNetwork@UartMessage
 29281  0011FE  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 29282  001200  0E01               	movlw	1
 29283  001202  EC3A  F030         	call	_Uart_WriteString
 29284                           
 29285                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 29286  001206  0E07               	movlw	7
 29287  001208  0101               	movlb	1	; () banked
 29288  00120A  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29289                           
 29290                           ; BSR set to: 1
 29291                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 29292  00120C  0E03               	movlw	3
 29293  00120E  0100               	movlb	0	; () banked
 29294  001210  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 29295                           
 29296                           ; BSR set to: 0
 29297                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 29298  001212  0EF5               	movlw	low _ConnTimeout
 29299  001214  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29300  001216  0E02               	movlw	high _ConnTimeout
 29301  001218  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29302  00121A  0E20               	movlw	32
 29303  00121C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29304  00121E  0E4E               	movlw	78
 29305  001220  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29306  001222  0E00               	movlw	0
 29307  001224  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29308  001226  0E00               	movlw	0
 29309  001228  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29310  00122A  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 29311  00122E  D039               	goto	l15210
 29312  001230                     
 29313                           ; BSR set to: 1
 29314                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 29315                           
 29316                           ; BSR set to: 1
 29317  001230  0E4B               	movlw	low STR_10
 29318  001232  0100               	movlb	0	; () banked
 29319  001234  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29320  001236  0EFF               	movlw	high STR_10
 29321  001238  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29322  00123A  0E01               	movlw	1
 29323  00123C  EC7A  F02F         	call	_Uart_WriteConstString
 29324                           
 29325                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 29326  001240  0E07               	movlw	7
 29327  001242  0101               	movlb	1	; () banked
 29328  001244  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29329                           
 29330                           ; BSR set to: 1
 29331                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 29332  001246  0E05               	movlw	5
 29333  001248  0100               	movlb	0	; () banked
 29334  00124A  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 29335                           
 29336                           ; BSR set to: 0
 29337                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 29338  00124C  0EF5               	movlw	low _ConnTimeout
 29339  00124E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29340  001250  0E02               	movlw	high _ConnTimeout
 29341  001252  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29342  001254  0E20               	movlw	32
 29343  001256  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29344  001258  0E4E               	movlw	78
 29345  00125A  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29346  00125C  0E00               	movlw	0
 29347  00125E  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29348  001260  0E00               	movlw	0
 29349  001262  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29350  001264  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 29351  001268  D01C               	goto	l15210
 29352  00126A                     
 29353                           ; BSR set to: 1
 29354                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 29355                           
 29356                           ; BSR set to: 1
 29357  00126A  0E59               	movlw	low STR_11
 29358  00126C  0100               	movlb	0	; () banked
 29359  00126E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29360  001270  0EFF               	movlw	high STR_11
 29361  001272  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29362  001274  0E01               	movlw	1
 29363  001276  EC7A  F02F         	call	_Uart_WriteConstString
 29364                           
 29365                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 29366  00127A  0E08               	movlw	8
 29367  00127C  0101               	movlb	1	; () banked
 29368  00127E  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29369                           
 29370                           ; BSR set to: 1
 29371                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 29372  001280  0E05               	movlw	5
 29373  001282  0100               	movlb	0	; () banked
 29374  001284  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 29375                           
 29376                           ; BSR set to: 0
 29377                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 29378  001286  0EF5               	movlw	low _ConnTimeout
 29379  001288  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29380  00128A  0E02               	movlw	high _ConnTimeout
 29381  00128C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29382  00128E  0E20               	movlw	32
 29383  001290  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29384  001292  0E4E               	movlw	78
 29385  001294  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29386  001296  0E00               	movlw	0
 29387  001298  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29388  00129A  0E00               	movlw	0
 29389  00129C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29390  00129E  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 29391  0012A2                     l15210:
 29392                           
 29393                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 29394  0012A2  0E01               	movlw	1
 29395  0012A4  0101               	movlb	1	; () banked
 29396  0012A6  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 29397                           
 29398                           ;mdm_gsm_gprs_http.c: 201: break;
 29399  0012A8  D07C               	goto	l1222
 29400  0012AA                     
 29401                           ; BSR set to: 1
 29402                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 29403                           
 29404                           ; BSR set to: 1
 29405  0012AA  0E02               	movlw	2
 29406  0012AC  D05A               	goto	L78
 29407  0012AE                     
 29408                           ; BSR set to: 1
 29409                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 29410                           
 29411                           ; BSR set to: 1
 29412  0012AE  0E3C               	movlw	low _NewStringReceived
 29413  0012B0  0100               	movlb	0	; () banked
 29414  0012B2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29415  0012B4  0E00               	movlw	high _NewStringReceived
 29416  0012B6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29417  0012B8  ECAA  F031         	call	_ReceiveEvt	;wreg free
 29418  0012BC  0900               	iorlw	0
 29419  0012BE  B4D8               	btfsc	status,2,c
 29420  0012C0  D018               	goto	l1232
 29421                           
 29422                           ;mdm_gsm_gprs_http.c: 212: {
 29423                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 29424  0012C2  CC58  FFE8         	movff	_RxBuffer,wreg
 29425  0012C6  0A4F               	xorlw	79
 29426  0012C8  A4D8               	btfss	status,2,c
 29427  0012CA  D06B               	goto	l1222
 29428  0012CC  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29429  0012D0  0A4B               	xorlw	75
 29430  0012D2  A4D8               	btfss	status,2,c
 29431  0012D4  D066               	goto	l1222
 29432                           
 29433                           ;mdm_gsm_gprs_http.c: 215: {
 29434                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 29435  0012D6  C0CF  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 29436                           
 29437                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 29438  0012DA  0E58               	movlw	low _RxBuffer
 29439  0012DC  0100               	movlb	0	; () banked
 29440  0012DE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29441  0012E0  0E0C               	movlw	high _RxBuffer
 29442  0012E2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29443  0012E4  0E01               	movlw	1
 29444  0012E6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29445  0012E8  0E90               	movlw	144
 29446  0012EA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29447  0012EC  ECCC  F030         	call	_ClearBuffer	;wreg free
 29448                           
 29449                           ;mdm_gsm_gprs_http.c: 220: }
 29450                           ;mdm_gsm_gprs_http.c: 221: }
 29451  0012F0  D058               	goto	l1222
 29452  0012F2                     l1232:
 29453                           
 29454                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29455  0012F2  0EF5               	movlw	low _ConnTimeout
 29456  0012F4  0100               	movlb	0	; () banked
 29457  0012F6  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29458  0012F8  0E02               	movlw	high _ConnTimeout
 29459  0012FA  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29460  0012FC  ECC6  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29461  001300  D029               	goto	L43
 29462  001302                     
 29463                           ; BSR set to: 1
 29464                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 29465                           
 29466                           ; BSR set to: 1
 29467  001302  0E3C               	movlw	low _NewStringReceived
 29468  001304  0100               	movlb	0	; () banked
 29469  001306  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29470  001308  0E00               	movlw	high _NewStringReceived
 29471  00130A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29472  00130C  ECAA  F031         	call	_ReceiveEvt	;wreg free
 29473  001310  0900               	iorlw	0
 29474  001312  B4D8               	btfsc	status,2,c
 29475  001314  D018               	goto	l1237
 29476                           
 29477                           ;mdm_gsm_gprs_http.c: 232: {
 29478                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 29479  001316  CC58  FFE8         	movff	_RxBuffer,wreg
 29480  00131A  0A2B               	xorlw	43
 29481  00131C  A4D8               	btfss	status,2,c
 29482  00131E  D041               	goto	l1222
 29483  001320  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29484  001324  0A53               	xorlw	83
 29485  001326  A4D8               	btfss	status,2,c
 29486  001328  D03C               	goto	l1222
 29487                           
 29488                           ;mdm_gsm_gprs_http.c: 235: {
 29489                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 29490  00132A  C0CF  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 29491                           
 29492                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 29493  00132E  0E58               	movlw	low _RxBuffer
 29494  001330  0100               	movlb	0	; () banked
 29495  001332  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29496  001334  0E0C               	movlw	high _RxBuffer
 29497  001336  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29498  001338  0E01               	movlw	1
 29499  00133A  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29500  00133C  0E90               	movlw	144
 29501  00133E  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29502  001340  ECCC  F030         	call	_ClearBuffer	;wreg free
 29503                           
 29504                           ;mdm_gsm_gprs_http.c: 240: }
 29505                           ;mdm_gsm_gprs_http.c: 241: }
 29506  001344  D02E               	goto	l1222
 29507  001346                     l1237:
 29508                           
 29509                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29510  001346  0EF5               	movlw	low _ConnTimeout
 29511  001348  0100               	movlb	0	; () banked
 29512  00134A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29513  00134C  0E02               	movlw	high _ConnTimeout
 29514  00134E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29515  001350  ECC6  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29516  001354                     L43:
 29517  001354  06E8               	decf	wreg,f,c
 29518  001356  A4D8               	btfss	status,2,c
 29519  001358  D024               	goto	l1222
 29520                           
 29521                           ;mdm_gsm_gprs_http.c: 243: {
 29522                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 29523  00135A  0E06               	movlw	6
 29524  00135C                     L79:
 29525  00135C  0101               	movlb	1	; () banked
 29526  00135E  D003               	goto	L42
 29527  001360                     
 29528                           ; BSR set to: 1
 29529                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 29530                           
 29531                           ; BSR set to: 1
 29532  001360  0E03               	movlw	3
 29533  001362                     L78:
 29534  001362  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 29535                           
 29536                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 29537  001364  0E00               	movlw	0
 29538  001366                     L42:
 29539  001366  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29540                           
 29541                           ; BSR set to: 1
 29542                           ;mdm_gsm_gprs_http.c: 257: }
 29543                           
 29544                           ; BSR set to: 1
 29545                           ;mdm_gsm_gprs_http.c: 256: break;
 29546                           
 29547                           ;mdm_gsm_gprs_http.c: 255: default:
 29548                           
 29549                           ;mdm_gsm_gprs_http.c: 253: break;
 29550  001368  D01C               	goto	l1222
 29551  00136A                     l1219:
 29552                           
 29553                           ; BSR set to: 1
 29554                           
 29555                           ; BSR set to: 1
 29556  00136A  51EA               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 29557                           
 29558                           ; Switch size 1, requested type "space"
 29559                           ; Number of cases is 9, Range of values is 0 to 8
 29560                           ; switch strategies available:
 29561                           ; Name         Instructions Cycles
 29562                           ; simple_byte           28    15 (average)
 29563                           ;	Chosen strategy is simple_byte
 29564  00136C  0A00               	xorlw	0	; case 0
 29565  00136E  B4D8               	btfsc	status,2,c
 29566  001370  D6A8               	goto	l1220
 29567  001372  0A01               	xorlw	1	; case 1
 29568  001374  B4D8               	btfsc	status,2,c
 29569  001376  D6B1               	goto	l1223
 29570  001378  0A03               	xorlw	3	; case 2
 29571  00137A  B4D8               	btfsc	status,2,c
 29572  00137C  D6CB               	goto	l1224
 29573  00137E  0A01               	xorlw	1	; case 3
 29574  001380  B4D8               	btfsc	status,2,c
 29575  001382  D756               	goto	l1228
 29576  001384  0A07               	xorlw	7	; case 4
 29577  001386  B4D8               	btfsc	status,2,c
 29578  001388  D770               	goto	l1229
 29579  00138A  0A01               	xorlw	1	; case 5
 29580  00138C  B4D8               	btfsc	status,2,c
 29581  00138E  D78D               	goto	l1230
 29582  001390  0A03               	xorlw	3	; case 6
 29583  001392  B4D8               	btfsc	status,2,c
 29584  001394  D7E5               	goto	l1241
 29585  001396  0A01               	xorlw	1	; case 7
 29586  001398  B4D8               	btfsc	status,2,c
 29587  00139A  D789               	goto	l1231
 29588  00139C  0A0F               	xorlw	15	; case 8
 29589  00139E  B4D8               	btfsc	status,2,c
 29590  0013A0  D7B0               	goto	l1236
 29591  0013A2                     l1222:
 29592                           
 29593                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 29594                           
 29595                           ; BSR set to: 1
 29596  0013A2  0101               	movlb	1	; () banked
 29597  0013A4  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 29598  0013A6  0012               	return	
 29599  0013A8                     __end_of_InitGprsNetwork:
 29600                           	opt stack 0
 29601                           tosu	equ	0xFFF
 29602                           tosh	equ	0xFFE
 29603                           tosl	equ	0xFFD
 29604                           pclath	equ	0xFFA
 29605                           tblptru	equ	0xFF8
 29606                           tblptrh	equ	0xFF7
 29607                           tblptrl	equ	0xFF6
 29608                           tablat	equ	0xFF5
 29609                           prodh	equ	0xFF4
 29610                           prodl	equ	0xFF3
 29611                           intcon	equ	0xFF2
 29612                           intcon2	equ	0xFF1
 29613                           intcon3	equ	0xFF0
 29614                           indf0	equ	0xFEF
 29615                           postinc0	equ	0xFEE
 29616                           plusw0	equ	0xFEB
 29617                           fsr0h	equ	0xFEA
 29618                           fsr0l	equ	0xFE9
 29619                           wreg	equ	0xFE8
 29620                           indf1	equ	0xFE7
 29621                           postinc1	equ	0xFE6
 29622                           postdec1	equ	0xFE5
 29623                           plusw1	equ	0xFE3
 29624                           fsr1h	equ	0xFE2
 29625                           fsr1l	equ	0xFE1
 29626                           indf2	equ	0xFDF
 29627                           postinc2	equ	0xFDE
 29628                           postdec2	equ	0xFDD
 29629                           plusw2	equ	0xFDB
 29630                           fsr2h	equ	0xFDA
 29631                           fsr2l	equ	0xFD9
 29632                           status	equ	0xFD8
 29633                           
 29634 ;; *************** function _HttpGetMethod *****************
 29635 ;; Defined at:
 29636 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 29637 ;; Parameters:    Size  Location     Type
 29638 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 29639 ;;		 -> HttpGetDataLocal(5), 
 29640 ;; Auto vars:     Size  Location     Type
 29641 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 29642 ;;  Index           1  200[BANK1 ] unsigned char 
 29643 ;; Return value:  Size  Location     Type
 29644 ;;                  1    wreg      enum E8923
 29645 ;; Registers used:
 29646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29647 ;; Tracked objects:
 29648 ;;		On entry : 0/0
 29649 ;;		On exit  : 0/0
 29650 ;;		Unchanged: 0/0
 29651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29652 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29653 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29654 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29655 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29656 ;;Total ram usage:      207 bytes
 29657 ;; Hardware stack levels used:    1
 29658 ;; Hardware stack levels required when called:   14
 29659 ;; This function calls:
 29660 ;;		_ClearBuffer
 29661 ;;		_OsTmr_GetTimerStatus
 29662 ;;		_OsTmr_StartTimer
 29663 ;;		_ReceiveEvt
 29664 ;;		_StringCopy
 29665 ;;		_Uart_WriteConstString
 29666 ;;		_Uart_WriteString
 29667 ;; This function is called by:
 29668 ;;		_MdmHttp_MainTask
 29669 ;; This function uses a non-reentrant model
 29670 ;;
 29671                           
 29672                           	psect	text136
 29673  0005EC                     __ptext136:
 29674                           	opt stack 0
 29675  0005EC                     _HttpGetMethod:
 29676                           	opt stack 13
 29677                           
 29678                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 29679                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 29680                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 29681                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 29682                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 29683                           
 29684                           ; BSR set to: 1
 29685                           ;incstack = 0
 29686  0005EC  0E00               	movlw	0
 29687  0005EE  0101               	movlb	1	; () banked
 29688  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 29689                           
 29690                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 29691  0005F2  D230               	goto	l1252
 29692  0005F4                     
 29693                           ; BSR set to: 1
 29694                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 29695                           
 29696                           ; BSR set to: 1
 29697  0005F4  0ED8               	movlw	low _GetMethod
 29698  0005F6  0100               	movlb	0	; () banked
 29699  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29700  0005FA  0E00               	movlw	high _GetMethod
 29701  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29702  0005FE  ECAA  F031         	call	_ReceiveEvt	;wreg free
 29703  000602  0900               	iorlw	0
 29704  000604  B4D8               	btfsc	status,2,c
 29705  000606  D257               	goto	l1255
 29706                           
 29707                           ;mdm_gsm_gprs_http.c: 284: {
 29708                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 29709  000608  0E01               	movlw	1
 29710  00060A  D18C               	goto	L45
 29711  00060C                     
 29712                           ; BSR set to: 1
 29713                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 29714                           
 29715                           ; BSR set to: 1
 29716  00060C  0E9D               	movlw	low STR_12
 29717  00060E  0100               	movlb	0	; () banked
 29718  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29719  000612  0EFF               	movlw	high STR_12
 29720  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29721  000616  0E01               	movlw	1
 29722  000618  EC7A  F02F         	call	_Uart_WriteConstString
 29723                           
 29724                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 29725  00061C  0E0A               	movlw	10
 29726  00061E  0101               	movlb	1	; () banked
 29727  000620  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29728                           
 29729                           ; BSR set to: 1
 29730                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 29731  000622  0E02               	movlw	2
 29732  000624  0100               	movlb	0	; () banked
 29733  000626  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29734                           
 29735                           ; BSR set to: 0
 29736                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 29737  000628  0EF5               	movlw	low _ConnTimeout
 29738  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29739  00062C  0E02               	movlw	high _ConnTimeout
 29740  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29741  000630  0E20               	movlw	32
 29742  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29743  000634  0E4E               	movlw	78
 29744  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29745  000638  0E00               	movlw	0
 29746  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29747  00063C  0E00               	movlw	0
 29748  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29749  000640  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 29750  000644  D1AF               	goto	l15376
 29751  000646                     
 29752                           ; BSR set to: 1
 29753                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 29754                           
 29755                           ; BSR set to: 1
 29756  000646  0E67               	movlw	low STR_13
 29757  000648  0100               	movlb	0	; () banked
 29758  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29759  00064C  0EFF               	movlw	high STR_13
 29760  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29761  000650  0E01               	movlw	1
 29762  000652  EC7A  F02F         	call	_Uart_WriteConstString
 29763                           
 29764                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 29765  000656  0E0A               	movlw	10
 29766  000658  0101               	movlb	1	; () banked
 29767  00065A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29768                           
 29769                           ; BSR set to: 1
 29770                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 29771  00065C  0E03               	movlw	3
 29772  00065E  0100               	movlb	0	; () banked
 29773  000660  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29774                           
 29775                           ; BSR set to: 0
 29776                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 29777  000662  0EF5               	movlw	low _ConnTimeout
 29778  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29779  000666  0E02               	movlw	high _ConnTimeout
 29780  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29781  00066A  0E20               	movlw	32
 29782  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29783  00066E  0E4E               	movlw	78
 29784  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29785  000672  0E00               	movlw	0
 29786  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29787  000676  0E00               	movlw	0
 29788  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29789  00067A  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 29790  00067E  D192               	goto	l15376
 29791  000680                     
 29792                           ; BSR set to: 1
 29793                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 29794                           
 29795                           ; BSR set to: 1
 29796  000680  0EA8               	movlw	low STR_14
 29797  000682  0100               	movlb	0	; () banked
 29798  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29799  000686  0EFE               	movlw	high STR_14
 29800  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29801  00068A  0E01               	movlw	1
 29802  00068C  EC7A  F02F         	call	_Uart_WriteConstString
 29803                           
 29804                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 29805  000690  0E0A               	movlw	10
 29806  000692  0101               	movlb	1	; () banked
 29807  000694  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29808                           
 29809                           ; BSR set to: 1
 29810                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 29811  000696  0E04               	movlw	4
 29812  000698  0100               	movlb	0	; () banked
 29813  00069A  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29814                           
 29815                           ; BSR set to: 0
 29816                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 29817  00069C  0EF5               	movlw	low _ConnTimeout
 29818  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29819  0006A0  0E02               	movlw	high _ConnTimeout
 29820  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29821  0006A4  0E20               	movlw	32
 29822  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29823  0006A8  0E4E               	movlw	78
 29824  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29825  0006AC  0E00               	movlw	0
 29826  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29827  0006B0  0E00               	movlw	0
 29828  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29829  0006B4  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 29830  0006B8  D175               	goto	l15376
 29831  0006BA                     
 29832                           ; BSR set to: 1
 29833                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 29834                           
 29835                           ; BSR set to: 1
 29836  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 29837  0006BC  0100               	movlb	0	; () banked
 29838  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29839  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 29840  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29841  0006C4  0E00               	movlw	0
 29842  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29843  0006C8  0EC8               	movlw	200
 29844  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29845  0006CC  ECCC  F030         	call	_ClearBuffer	;wreg free
 29846                           
 29847                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 29848  0006D0  0EE6               	movlw	low STR_15
 29849  0006D2  0100               	movlb	0	; () banked
 29850  0006D4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 29851  0006D6  0EFE               	movlw	high STR_15
 29852  0006D8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 29853  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 29854  0006DC  6F87               	movwf	StringCopy@DestStr& (0+255),b
 29855  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 29856  0006E0  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 29857  0006E2  0E00               	movlw	0
 29858  0006E4  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 29859  0006E6  0E13               	movlw	19
 29860  0006E8  6F89               	movwf	StringCopy@Len& (0+255),b
 29861  0006EA  ECBD  F02A         	call	_StringCopy	;wreg free
 29862                           
 29863                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 29864  0006EE  0E00               	movlw	0
 29865  0006F0  0101               	movlb	1	; () banked
 29866  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 29867  0006F4  D024               	goto	l1260
 29868  0006F6                     
 29869                           ; BSR set to: 1
 29870                           ;mdm_gsm_gprs_http.c: 332: {
 29871                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 29872                           
 29873                           ; BSR set to: 1
 29874  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29875  0006F8  0D01               	mullw	1
 29876  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 29877  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 29878  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 29879  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 29880  00070A  50F3               	movf	prodl,w,c
 29881  00070C  0100               	movlb	0	; () banked
 29882  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29883  000710  6ED9               	movwf	fsr2l,c
 29884  000712  50F4               	movf	prodh,w,c
 29885  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29886  000716  6EDA               	movwf	fsr2h,c
 29887  000718  0101               	movlb	1	; () banked
 29888  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29889  00071C  0100               	movlb	0	; () banked
 29890  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 29891  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 29892  000722  0E13               	movlw	19
 29893  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 29894  000726  0E00               	movlw	0
 29895  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 29896  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 29897  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 29898  00072E  6EE1               	movwf	fsr1l,c
 29899  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 29900  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 29901  000734  6EE2               	movwf	fsr1h,c
 29902  000736  CFDF FFE7          	movff	indf2,indf1
 29903                           
 29904                           ; BSR set to: 0
 29905  00073A  0101               	movlb	1	; () banked
 29906  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 29907  00073E                     l1260:
 29908                           
 29909                           ; BSR set to: 1
 29910                           
 29911                           ; BSR set to: 1
 29912  00073E  0100               	movlb	0	; () banked
 29913  000740  EE20 F002          	lfsr	2,2
 29914  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 29915  000746  26D9               	addwf	fsr2l,f,c
 29916  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 29917  00074A  22DA               	addwfc	fsr2h,f,c
 29918  00074C  50DE               	movf	postinc2,w,c
 29919  00074E  0101               	movlb	1	; () banked
 29920  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 29921  000752  A0D8               	btfss	status,0,c
 29922  000754  D7D0               	goto	l1261
 29923                           
 29924                           ; BSR set to: 1
 29925                           ;mdm_gsm_gprs_http.c: 334: }
 29926                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 29927                           
 29928                           ; BSR set to: 1
 29929  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29930  000758  0100               	movlb	0	; () banked
 29931  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 29932  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 29933  00075E  0E13               	movlw	19
 29934  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 29935  000762  0E00               	movlw	0
 29936  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 29937  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 29938  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29939  00076A  6ED9               	movwf	fsr2l,c
 29940  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 29941  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29942  000770  6EDA               	movwf	fsr2h,c
 29943  000772  0E22               	movlw	34
 29944  000774  6EDF               	movwf	indf2,c
 29945                           
 29946                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 29947  000776  0101               	movlb	1	; () banked
 29948  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29949  00077A  0100               	movlb	0	; () banked
 29950  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 29951  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 29952  000780  0E14               	movlw	20
 29953  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 29954  000784  0E00               	movlw	0
 29955  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 29956  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 29957  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29958  00078C  6ED9               	movwf	fsr2l,c
 29959  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 29960  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29961  000792  6EDA               	movwf	fsr2h,c
 29962  000794  0E0D               	movlw	13
 29963  000796  6EDF               	movwf	indf2,c
 29964                           
 29965                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 29966  000798  0101               	movlb	1	; () banked
 29967  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29968  00079C  0100               	movlb	0	; () banked
 29969  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 29970  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 29971  0007A2  0E15               	movlw	21
 29972  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 29973  0007A6  0E00               	movlw	0
 29974  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 29975  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 29976  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29977  0007AE  6ED9               	movwf	fsr2l,c
 29978  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 29979  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29980  0007B4  6EDA               	movwf	fsr2h,c
 29981  0007B6  0E00               	movlw	0
 29982  0007B8  6EDF               	movwf	indf2,c
 29983                           
 29984                           ; BSR set to: 0
 29985                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 29986  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 29987  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 29988  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 29989  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 29990  0007C2  0E01               	movlw	1
 29991  0007C4  EC3A  F030         	call	_Uart_WriteString
 29992                           
 29993                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 29994  0007C8  0E0A               	movlw	10
 29995  0007CA  0101               	movlb	1	; () banked
 29996  0007CC  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29997                           
 29998                           ; BSR set to: 1
 29999                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 30000  0007CE  0E05               	movlw	5
 30001  0007D0  0100               	movlb	0	; () banked
 30002  0007D2  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30003                           
 30004                           ; BSR set to: 0
 30005                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 30006  0007D4  0EF5               	movlw	low _ConnTimeout
 30007  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30008  0007D8  0E02               	movlw	high _ConnTimeout
 30009  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30010  0007DC  0E20               	movlw	32
 30011  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30012  0007E0  0E4E               	movlw	78
 30013  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30014  0007E4  0E00               	movlw	0
 30015  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30016  0007E8  0E00               	movlw	0
 30017  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30018  0007EC  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 30019  0007F0  D0D9               	goto	l15376
 30020  0007F2                     
 30021                           ; BSR set to: 1
 30022                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 30023                           
 30024                           ; BSR set to: 1
 30025  0007F2  0E1E               	movlw	low STR_16
 30026  0007F4  0100               	movlb	0	; () banked
 30027  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30028  0007F8  0EFF               	movlw	high STR_16
 30029  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30030  0007FC  0E01               	movlw	1
 30031  0007FE  EC7A  F02F         	call	_Uart_WriteConstString
 30032                           
 30033                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 30034  000802  0E0A               	movlw	10
 30035  000804  0101               	movlb	1	; () banked
 30036  000806  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30037                           
 30038                           ; BSR set to: 1
 30039                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 30040  000808  0E06               	movlw	6
 30041  00080A  0100               	movlb	0	; () banked
 30042  00080C  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30043                           
 30044                           ; BSR set to: 0
 30045                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 30046  00080E  0EF5               	movlw	low _ConnTimeout
 30047  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30048  000812  0E02               	movlw	high _ConnTimeout
 30049  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30050  000816  0E20               	movlw	32
 30051  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30052  00081A  0E4E               	movlw	78
 30053  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30054  00081E  0E00               	movlw	0
 30055  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30056  000822  0E00               	movlw	0
 30057  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30058  000826  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 30059                           
 30060                           ;mdm_gsm_gprs_http.c: 358: break;
 30061  00082A  D145               	goto	l1255
 30062  00082C                     
 30063                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 30064  00082C  0E07               	movlw	7
 30065  00082E  0101               	movlb	1	; () banked
 30066  000830  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30067                           
 30068                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 30069  000832  0E09               	movlw	9
 30070  000834  0100               	movlb	0	; () banked
 30071  000836  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30072                           
 30073                           ; BSR set to: 0
 30074                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 30075  000838  0EF5               	movlw	low _ConnTimeout
 30076  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30077  00083C  0E02               	movlw	high _ConnTimeout
 30078  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30079  000840  0E20               	movlw	32
 30080  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30081  000844  0E4E               	movlw	78
 30082  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30083  000848  0E00               	movlw	0
 30084  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30085  00084C  0E00               	movlw	0
 30086  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30087  000850  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 30088                           
 30089                           ;mdm_gsm_gprs_http.c: 371: break;
 30090  000854  D130               	goto	l1255
 30091  000856                     
 30092                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 30093  000856  0E83               	movlw	low STR_17
 30094  000858  0100               	movlb	0	; () banked
 30095  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30096  00085C  0EFF               	movlw	high STR_17
 30097  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30098  000860  0E01               	movlw	1
 30099  000862  EC7A  F02F         	call	_Uart_WriteConstString
 30100                           
 30101                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 30102  000866  0E0D               	movlw	13
 30103  000868  0101               	movlb	1	; () banked
 30104  00086A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30105                           
 30106                           ; BSR set to: 1
 30107                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 30108  00086C  0E09               	movlw	9
 30109  00086E  0100               	movlb	0	; () banked
 30110  000870  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30111                           
 30112                           ; BSR set to: 0
 30113                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 30114  000872  0EF5               	movlw	low _ConnTimeout
 30115  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30116  000876  0E02               	movlw	high _ConnTimeout
 30117  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30118  00087A  0E20               	movlw	32
 30119  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30120  00087E  0E4E               	movlw	78
 30121  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30122  000882  0E00               	movlw	0
 30123  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30124  000886  0E00               	movlw	0
 30125  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30126  00088A  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 30127  00088E  D08A               	goto	l15376
 30128  000890                     
 30129                           ; BSR set to: 1
 30130                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 30131                           
 30132                           ; BSR set to: 1
 30133  000890  0E90               	movlw	low STR_18
 30134  000892  0100               	movlb	0	; () banked
 30135  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30136  000896  0EFF               	movlw	high STR_18
 30137  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30138  00089A  0E01               	movlw	1
 30139  00089C  EC7A  F02F         	call	_Uart_WriteConstString
 30140                           
 30141                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 30142  0008A0  0E0A               	movlw	10
 30143  0008A2  0101               	movlb	1	; () banked
 30144  0008A4  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30145                           
 30146                           ; BSR set to: 1
 30147                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 30148  0008A6  0E0E               	movlw	14
 30149  0008A8  0100               	movlb	0	; () banked
 30150  0008AA  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30151                           
 30152                           ; BSR set to: 0
 30153                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 30154  0008AC  0EF5               	movlw	low _ConnTimeout
 30155  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30156  0008B0  0E02               	movlw	high _ConnTimeout
 30157  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30158  0008B4  0E20               	movlw	32
 30159  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30160  0008B8  0E4E               	movlw	78
 30161  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30162  0008BC  0E00               	movlw	0
 30163  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30164  0008C0  0E00               	movlw	0
 30165  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30166  0008C4  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 30167  0008C8  D06D               	goto	l15376
 30168  0008CA                     
 30169                           ; BSR set to: 1
 30170                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 30171                           
 30172                           ; BSR set to: 1
 30173  0008CA  0E3C               	movlw	low _NewStringReceived
 30174  0008CC  0100               	movlb	0	; () banked
 30175  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30176  0008D0  0E00               	movlw	high _NewStringReceived
 30177  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30178  0008D4  ECAA  F031         	call	_ReceiveEvt	;wreg free
 30179  0008D8  0900               	iorlw	0
 30180  0008DA  B4D8               	btfsc	status,2,c
 30181  0008DC  D018               	goto	l1268
 30182                           
 30183                           ;mdm_gsm_gprs_http.c: 400: {
 30184                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 30185  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 30186  0008E2  0A4F               	xorlw	79
 30187  0008E4  A4D8               	btfss	status,2,c
 30188  0008E6  D0E7               	goto	l1255
 30189  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30190  0008EC  0A4B               	xorlw	75
 30191  0008EE  A4D8               	btfss	status,2,c
 30192  0008F0  D0E2               	goto	l1255
 30193                           
 30194                           ;mdm_gsm_gprs_http.c: 403: {
 30195                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 30196  0008F2  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30197                           
 30198                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 30199  0008F6  0E58               	movlw	low _RxBuffer
 30200  0008F8  0100               	movlb	0	; () banked
 30201  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30202  0008FC  0E0C               	movlw	high _RxBuffer
 30203  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30204  000900  0E01               	movlw	1
 30205  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30206  000904  0E90               	movlw	144
 30207  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30208  000908  ECCC  F030         	call	_ClearBuffer	;wreg free
 30209                           
 30210                           ;mdm_gsm_gprs_http.c: 408: }
 30211                           ;mdm_gsm_gprs_http.c: 409: }
 30212  00090C  D0D4               	goto	l1255
 30213  00090E                     l1268:
 30214                           
 30215                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30216  00090E  0EF5               	movlw	low _ConnTimeout
 30217  000910  0100               	movlb	0	; () banked
 30218  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30219  000914  0E02               	movlw	high _ConnTimeout
 30220  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30221  000918  ECC6  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30222  00091C                     L46:
 30223  00091C  06E8               	decf	wreg,f,c
 30224  00091E  A4D8               	btfss	status,2,c
 30225  000920  D0CA               	goto	l1255
 30226                           
 30227                           ;mdm_gsm_gprs_http.c: 411: {
 30228                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 30229  000922  0E0F               	movlw	15
 30230  000924                     L45:
 30231  000924  0101               	movlb	1	; () banked
 30232  000926  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30233                           
 30234                           ; BSR set to: 1
 30235                           ;mdm_gsm_gprs_http.c: 414: }
 30236                           ;mdm_gsm_gprs_http.c: 415: break;
 30237                           
 30238                           ; BSR set to: 1
 30239  000928  D0C6               	goto	l1255
 30240  00092A                     
 30241                           ; BSR set to: 1
 30242                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 30243                           
 30244                           ; BSR set to: 1
 30245  00092A  0E3C               	movlw	low _NewStringReceived
 30246  00092C  0100               	movlb	0	; () banked
 30247  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30248  000930  0E00               	movlw	high _NewStringReceived
 30249  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30250  000934  ECAA  F031         	call	_ReceiveEvt	;wreg free
 30251  000938  0900               	iorlw	0
 30252  00093A  B4D8               	btfsc	status,2,c
 30253  00093C  D018               	goto	l1273
 30254                           
 30255                           ;mdm_gsm_gprs_http.c: 420: {
 30256                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 30257  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 30258  000942  0A2B               	xorlw	43
 30259  000944  A4D8               	btfss	status,2,c
 30260  000946  D0B7               	goto	l1255
 30261  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30262  00094C  0A48               	xorlw	72
 30263  00094E  A4D8               	btfss	status,2,c
 30264  000950  D0B2               	goto	l1255
 30265                           
 30266                           ;mdm_gsm_gprs_http.c: 423: {
 30267                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 30268  000952  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30269                           
 30270                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 30271  000956  0E58               	movlw	low _RxBuffer
 30272  000958  0100               	movlb	0	; () banked
 30273  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30274  00095C  0E0C               	movlw	high _RxBuffer
 30275  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30276  000960  0E01               	movlw	1
 30277  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30278  000964  0E90               	movlw	144
 30279  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30280  000968  ECCC  F030         	call	_ClearBuffer	;wreg free
 30281                           
 30282                           ;mdm_gsm_gprs_http.c: 428: }
 30283                           ;mdm_gsm_gprs_http.c: 429: }
 30284  00096C  D0A4               	goto	l1255
 30285  00096E                     l1273:
 30286                           
 30287                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30288  00096E  0EF5               	movlw	low _ConnTimeout
 30289  000970  0100               	movlb	0	; () banked
 30290  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30291  000974  0E02               	movlw	high _ConnTimeout
 30292  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30293  000978  ECC6  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30294  00097C  D7CF               	goto	L46
 30295  00097E                     
 30296                           ; BSR set to: 1
 30297                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 30298                           
 30299                           ; BSR set to: 1
 30300  00097E  0E0C               	movlw	12
 30301  000980  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30302                           
 30303                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 30304  000982  0E05               	movlw	5
 30305  000984  0100               	movlb	0	; () banked
 30306  000986  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30307                           
 30308                           ; BSR set to: 0
 30309                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 30310  000988  0EDA               	movlw	low _ConnWait
 30311  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30312  00098C  0E03               	movlw	high _ConnWait
 30313  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30314  000990  0EE8               	movlw	232
 30315  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30316  000994  0E03               	movlw	3
 30317  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30318  000998  0E00               	movlw	0
 30319  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30320  00099C  0E00               	movlw	0
 30321  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30322  0009A0  EC1D  F02B         	call	_OsTmr_StartTimer	;wreg free
 30323  0009A4                     l15376:
 30324                           
 30325                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 30326  0009A4  0E01               	movlw	1
 30327  0009A6  0101               	movlb	1	; () banked
 30328  0009A8  D053               	goto	L48
 30329  0009AA                     
 30330                           ; BSR set to: 1
 30331                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 30332                           
 30333                           ; BSR set to: 1
 30334  0009AA  0EDA               	movlw	low _ConnWait
 30335  0009AC  0100               	movlb	0	; () banked
 30336  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30337  0009B0  0E03               	movlw	high _ConnWait
 30338  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30339  0009B4  ECC6  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30340  0009B8  06E8               	decf	wreg,f,c
 30341  0009BA  A4D8               	btfss	status,2,c
 30342  0009BC  D07C               	goto	l1255
 30343                           
 30344                           ;mdm_gsm_gprs_http.c: 450: {
 30345                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 30346  0009BE  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30347                           
 30348                           ;mdm_gsm_gprs_http.c: 453: }
 30349                           ;mdm_gsm_gprs_http.c: 454: break;
 30350  0009C2  D079               	goto	l1255
 30351  0009C4                     
 30352                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 30353  0009C4  0E3C               	movlw	low _NewStringReceived
 30354  0009C6  0100               	movlb	0	; () banked
 30355  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30356  0009CA  0E00               	movlw	high _NewStringReceived
 30357  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30358  0009CE  ECAA  F031         	call	_ReceiveEvt	;wreg free
 30359  0009D2  0900               	iorlw	0
 30360  0009D4  B4D8               	btfsc	status,2,c
 30361  0009D6  D02D               	goto	l1281
 30362                           
 30363                           ;mdm_gsm_gprs_http.c: 459: {
 30364                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 30365  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 30366  0009DC  0A2B               	xorlw	43
 30367  0009DE  A4D8               	btfss	status,2,c
 30368  0009E0  D06A               	goto	l1255
 30369  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30370  0009E6  0A48               	xorlw	72
 30371  0009E8  A4D8               	btfss	status,2,c
 30372  0009EA  D065               	goto	l1255
 30373                           
 30374                           ;mdm_gsm_gprs_http.c: 462: {
 30375                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 30376  0009EC  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30377                           
 30378                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 30379  0009F0  0E58               	movlw	low _RxBuffer
 30380  0009F2  0100               	movlb	0	; () banked
 30381  0009F4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 30382  0009F6  0E0C               	movlw	high _RxBuffer
 30383  0009F8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 30384  0009FA  EE20 F003          	lfsr	2,3
 30385  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 30386  000A00  26D9               	addwf	fsr2l,f,c
 30387  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 30388  000A04  22DA               	addwfc	fsr2h,f,c
 30389  000A06  CFDE F087          	movff	postinc2,StringCopy@DestStr
 30390  000A0A  CFDD F088          	movff	postdec2,StringCopy@DestStr+1
 30391  000A0E  0E01               	movlw	1
 30392  000A10  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 30393  000A12  0E90               	movlw	144
 30394  000A14  6F89               	movwf	StringCopy@Len& (0+255),b
 30395  000A16  ECBD  F02A         	call	_StringCopy	;wreg free
 30396                           
 30397                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 30398  000A1A  0E58               	movlw	low _RxBuffer
 30399  000A1C  0100               	movlb	0	; () banked
 30400  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30401  000A20  0E0C               	movlw	high _RxBuffer
 30402  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30403  000A24  0E01               	movlw	1
 30404  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30405  000A28  0E90               	movlw	144
 30406  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30407  000A2C  ECCC  F030         	call	_ClearBuffer	;wreg free
 30408                           
 30409                           ;mdm_gsm_gprs_http.c: 469: }
 30410                           ;mdm_gsm_gprs_http.c: 470: }
 30411  000A30  D042               	goto	l1255
 30412  000A32                     l1281:
 30413                           
 30414                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30415  000A32  0EF5               	movlw	low _ConnTimeout
 30416  000A34  0100               	movlb	0	; () banked
 30417  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30418  000A38  0E02               	movlw	high _ConnTimeout
 30419  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30420  000A3C  ECC6  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30421  000A40  D76D               	goto	L46
 30422  000A42                     
 30423                           ; BSR set to: 1
 30424                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 30425                           
 30426                           ; BSR set to: 1
 30427  000A42  0E00               	movlw	0
 30428  000A44  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30429                           
 30430                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 30431  000A46  0E02               	movlw	2
 30432  000A48  D003               	goto	L48
 30433  000A4A                     
 30434                           ; BSR set to: 1
 30435                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 30436                           
 30437                           ; BSR set to: 1
 30438  000A4A  0E00               	movlw	0
 30439  000A4C  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30440                           
 30441                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 30442  000A4E  0E03               	movlw	3
 30443  000A50                     L48:
 30444  000A50  6FE8               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 30445                           
 30446                           ; BSR set to: 1
 30447                           ;mdm_gsm_gprs_http.c: 494: }
 30448                           
 30449                           ; BSR set to: 1
 30450                           ;mdm_gsm_gprs_http.c: 493: break;
 30451                           
 30452                           ;mdm_gsm_gprs_http.c: 492: default:
 30453                           
 30454                           ;mdm_gsm_gprs_http.c: 490: break;
 30455  000A52  D031               	goto	l1255
 30456  000A54                     l1252:
 30457                           
 30458                           ; BSR set to: 1
 30459                           
 30460                           ; BSR set to: 1
 30461  000A54  51E9               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 30462                           
 30463                           ; Switch size 1, requested type "space"
 30464                           ; Number of cases is 16, Range of values is 0 to 15
 30465                           ; switch strategies available:
 30466                           ; Name         Instructions Cycles
 30467                           ; simple_byte           49    25 (average)
 30468                           ;	Chosen strategy is simple_byte
 30469  000A56  0A00               	xorlw	0	; case 0
 30470  000A58  B4D8               	btfsc	status,2,c
 30471  000A5A  D5CC               	goto	l1253
 30472  000A5C  0A01               	xorlw	1	; case 1
 30473  000A5E  B4D8               	btfsc	status,2,c
 30474  000A60  D5D5               	goto	l1256
 30475  000A62  0A03               	xorlw	3	; case 2
 30476  000A64  B4D8               	btfsc	status,2,c
 30477  000A66  D5EF               	goto	l1257
 30478  000A68  0A01               	xorlw	1	; case 3
 30479  000A6A  B4D8               	btfsc	status,2,c
 30480  000A6C  D609               	goto	l1258
 30481  000A6E  0A07               	xorlw	7	; case 4
 30482  000A70  B4D8               	btfsc	status,2,c
 30483  000A72  D623               	goto	l1259
 30484  000A74  0A01               	xorlw	1	; case 5
 30485  000A76  B4D8               	btfsc	status,2,c
 30486  000A78  D6BC               	goto	l1263
 30487  000A7A  0A03               	xorlw	3	; case 6
 30488  000A7C  B4D8               	btfsc	status,2,c
 30489  000A7E  D6D6               	goto	l1264
 30490  000A80  0A01               	xorlw	1	; case 7
 30491  000A82  B4D8               	btfsc	status,2,c
 30492  000A84  D752               	goto	l1272
 30493  000A86  0A0F               	xorlw	15	; case 8
 30494  000A88  B4D8               	btfsc	status,2,c
 30495  000A8A  D6E5               	goto	l1265
 30496  000A8C  0A01               	xorlw	1	; case 9
 30497  000A8E  B4D8               	btfsc	status,2,c
 30498  000A90  D6FF               	goto	l1266
 30499  000A92  0A03               	xorlw	3	; case 10
 30500  000A94  B4D8               	btfsc	status,2,c
 30501  000A96  D719               	goto	l1267
 30502  000A98  0A01               	xorlw	1	; case 11
 30503  000A9A  B4D8               	btfsc	status,2,c
 30504  000A9C  D770               	goto	l1277
 30505  000A9E  0A07               	xorlw	7	; case 12
 30506  000AA0  B4D8               	btfsc	status,2,c
 30507  000AA2  D783               	goto	l1278
 30508  000AA4  0A01               	xorlw	1	; case 13
 30509  000AA6  B4D8               	btfsc	status,2,c
 30510  000AA8  D78D               	goto	l1280
 30511  000AAA  0A03               	xorlw	3	; case 14
 30512  000AAC  B4D8               	btfsc	status,2,c
 30513  000AAE  D7C9               	goto	l1285
 30514  000AB0  0A01               	xorlw	1	; case 15
 30515  000AB2  B4D8               	btfsc	status,2,c
 30516  000AB4  D7CA               	goto	l1286
 30517  000AB6                     l1255:
 30518                           
 30519                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 30520                           
 30521                           ; BSR set to: 1
 30522  000AB6  0101               	movlb	1	; () banked
 30523  000AB8  51E8               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 30524  000ABA  0012               	return	
 30525  000ABC                     __end_of_HttpGetMethod:
 30526                           	opt stack 0
 30527                           tosu	equ	0xFFF
 30528                           tosh	equ	0xFFE
 30529                           tosl	equ	0xFFD
 30530                           pclath	equ	0xFFA
 30531                           tblptru	equ	0xFF8
 30532                           tblptrh	equ	0xFF7
 30533                           tblptrl	equ	0xFF6
 30534                           tablat	equ	0xFF5
 30535                           prodh	equ	0xFF4
 30536                           prodl	equ	0xFF3
 30537                           intcon	equ	0xFF2
 30538                           intcon2	equ	0xFF1
 30539                           intcon3	equ	0xFF0
 30540                           indf0	equ	0xFEF
 30541                           postinc0	equ	0xFEE
 30542                           plusw0	equ	0xFEB
 30543                           fsr0h	equ	0xFEA
 30544                           fsr0l	equ	0xFE9
 30545                           wreg	equ	0xFE8
 30546                           indf1	equ	0xFE7
 30547                           postinc1	equ	0xFE6
 30548                           postdec1	equ	0xFE5
 30549                           plusw1	equ	0xFE3
 30550                           fsr1h	equ	0xFE2
 30551                           fsr1l	equ	0xFE1
 30552                           indf2	equ	0xFDF
 30553                           postinc2	equ	0xFDE
 30554                           postdec2	equ	0xFDD
 30555                           plusw2	equ	0xFDB
 30556                           fsr2h	equ	0xFDA
 30557                           fsr2l	equ	0xFD9
 30558                           status	equ	0xFD8
 30559                           
 30560 ;; *************** function _Uart_WriteString *****************
 30561 ;; Defined at:
 30562 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30563 ;; Parameters:    Size  Location     Type
 30564 ;;  Module          1    wreg     unsigned char 
 30565 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 30566 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 30567 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 30568 ;; Auto vars:     Size  Location     Type
 30569 ;;  Module          1   34[BANK0 ] unsigned char 
 30570 ;; Return value:  Size  Location     Type
 30571 ;;                  1    wreg      void 
 30572 ;; Registers used:
 30573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30574 ;; Tracked objects:
 30575 ;;		On entry : 0/0
 30576 ;;		On exit  : 0/0
 30577 ;;		Unchanged: 0/0
 30578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30579 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30580 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30582 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30583 ;;Total ram usage:        3 bytes
 30584 ;; Hardware stack levels used:    1
 30585 ;; Hardware stack levels required when called:   12
 30586 ;; This function calls:
 30587 ;;		_UartTxBufferStatus
 30588 ;;		_UartWriteByte
 30589 ;; This function is called by:
 30590 ;;		_Mdm_SetSmsFormat
 30591 ;;		_InitGprsNetwork
 30592 ;;		_HttpGetMethod
 30593 ;;		_Mdm_PinUnlock
 30594 ;;		_Mdm_MakePhoneCall
 30595 ;; This function uses a non-reentrant model
 30596 ;;
 30597                           
 30598                           	psect	text137
 30599  006074                     __ptext137:
 30600                           	opt stack 0
 30601  006074                     _Uart_WriteString:
 30602                           	opt stack 12
 30603                           
 30604                           ; BSR set to: 1
 30605                           ;incstack = 0
 30606                           ;Uart_WriteString@Module stored from wreg
 30607  006074  0100               	movlb	0	; () banked
 30608  006076  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 30609                           
 30610                           ;uart_drv.c: 521: while (*StringToWrite)
 30611  006078  D014               	goto	u11970
 30612  00607A                     
 30613                           ;uart_drv.c: 522: {
 30614                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 30615  00607A  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 30616  00607E  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 30617  006082  50DF               	movf	indf2,w,c
 30618  006084  0100               	movlb	0	; () banked
 30619  006086  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 30620  006088  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 30621  00608A  EC09  F033         	call	_UartWriteByte
 30622                           
 30623                           ;uart_drv.c: 526: StringToWrite++;
 30624  00608E  0100               	movlb	0	; () banked
 30625  006090  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 30626  006092  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 30627  006094                     
 30628                           ; BSR set to: 0
 30629                           
 30630                           ; BSR set to: 0
 30631  006094  0100               	movlb	0	; () banked
 30632  006096  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 30633  006098  ECED  F02D         	call	_UartTxBufferStatus
 30634  00609C  06E8               	decf	wreg,f,c
 30635  00609E  B4D8               	btfsc	status,2,c
 30636  0060A0  D7F9               	goto	l709
 30637  0060A2                     u11970:
 30638  0060A2  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 30639  0060A6  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 30640  0060AA  50DF               	movf	indf2,w,c
 30641  0060AC  B4D8               	btfsc	status,2,c
 30642  0060AE  0012               	return	
 30643  0060B0  D7E4               	goto	l707
 30644  0060B2                     __end_of_Uart_WriteString:
 30645                           	opt stack 0
 30646                           tosu	equ	0xFFF
 30647                           tosh	equ	0xFFE
 30648                           tosl	equ	0xFFD
 30649                           pclath	equ	0xFFA
 30650                           tblptru	equ	0xFF8
 30651                           tblptrh	equ	0xFF7
 30652                           tblptrl	equ	0xFF6
 30653                           tablat	equ	0xFF5
 30654                           prodh	equ	0xFF4
 30655                           prodl	equ	0xFF3
 30656                           intcon	equ	0xFF2
 30657                           intcon2	equ	0xFF1
 30658                           intcon3	equ	0xFF0
 30659                           indf0	equ	0xFEF
 30660                           postinc0	equ	0xFEE
 30661                           plusw0	equ	0xFEB
 30662                           fsr0h	equ	0xFEA
 30663                           fsr0l	equ	0xFE9
 30664                           wreg	equ	0xFE8
 30665                           indf1	equ	0xFE7
 30666                           postinc1	equ	0xFE6
 30667                           postdec1	equ	0xFE5
 30668                           plusw1	equ	0xFE3
 30669                           fsr1h	equ	0xFE2
 30670                           fsr1l	equ	0xFE1
 30671                           indf2	equ	0xFDF
 30672                           postinc2	equ	0xFDE
 30673                           postdec2	equ	0xFDD
 30674                           plusw2	equ	0xFDB
 30675                           fsr2h	equ	0xFDA
 30676                           fsr2l	equ	0xFD9
 30677                           status	equ	0xFD8
 30678                           
 30679 ;; *************** function _Uart_WriteConstString *****************
 30680 ;; Defined at:
 30681 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30682 ;; Parameters:    Size  Location     Type
 30683 ;;  Module          1    wreg     unsigned char 
 30684 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 30685 ;;		 -> STR_32(12), STR_31(19), STR_30(14), STR_29(14), 
 30686 ;;		 -> STR_20(14), STR_19(14), STR_18(13), STR_17(13), 
 30687 ;;		 -> STR_16(17), STR_14(21), STR_13(14), STR_12(13), 
 30688 ;;		 -> STR_11(14), STR_10(14), STR_8(31), STR_7(5), 
 30689 ;;		 -> STR_6(5), STR_4(12), STR_3(7), STR_2(14), 
 30690 ;;		 -> STR_1(5), 
 30691 ;; Auto vars:     Size  Location     Type
 30692 ;;  Module          1   34[BANK0 ] unsigned char 
 30693 ;; Return value:  Size  Location     Type
 30694 ;;                  1    wreg      void 
 30695 ;; Registers used:
 30696 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30697 ;; Tracked objects:
 30698 ;;		On entry : 0/0
 30699 ;;		On exit  : 0/0
 30700 ;;		Unchanged: 0/0
 30701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30702 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30703 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30705 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30706 ;;Total ram usage:        3 bytes
 30707 ;; Hardware stack levels used:    1
 30708 ;; Hardware stack levels required when called:   12
 30709 ;; This function calls:
 30710 ;;		_UartTxBufferStatus
 30711 ;;		_UartWriteByte
 30712 ;; This function is called by:
 30713 ;;		_CheckModem
 30714 ;;		_ConfigureModem
 30715 ;;		_GetSmsSm
 30716 ;;		_Mdm_HangPhoneCall
 30717 ;;		_InitGprsNetwork
 30718 ;;		_HttpGetMethod
 30719 ;;		_MyApp_Task
 30720 ;;		_initGprsModem
 30721 ;;		_Mdm_GetPhoneCall
 30722 ;;		_MdmHttp_SetSsl
 30723 ;; This function uses a non-reentrant model
 30724 ;;
 30725                           
 30726                           	psect	text138
 30727  005EF4                     __ptext138:
 30728                           	opt stack 0
 30729  005EF4                     _Uart_WriteConstString:
 30730                           	opt stack 12
 30731                           
 30732                           ;incstack = 0
 30733                           ;Uart_WriteConstString@Module stored from wreg
 30734  005EF4  0100               	movlb	0	; () banked
 30735  005EF6  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 30736                           
 30737                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 30738  005EF8  D015               	goto	u11950
 30739  005EFA                     
 30740                           ;uart_drv.c: 500: {
 30741                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 30742  005EFA  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 30743  005EFE  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 30744  005F02                     	if	0	;tblptru may be non-zero
 30745  005F02                     	endif
 30746  005F02                     	if	0	;tblptru may be non-zero
 30747  005F02                     	endif
 30748  005F02  0008               	tblrd		*
 30749  005F04  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 30750  005F08  0100               	movlb	0	; () banked
 30751  005F0A  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 30752  005F0C  EC09  F033         	call	_UartWriteByte
 30753                           
 30754                           ;uart_drv.c: 504: ConstStringToWrite++;
 30755  005F10  0100               	movlb	0	; () banked
 30756  005F12  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 30757  005F14  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 30758  005F16                     
 30759                           ; BSR set to: 0
 30760                           
 30761                           ; BSR set to: 0
 30762  005F16  0100               	movlb	0	; () banked
 30763  005F18  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 30764  005F1A  ECED  F02D         	call	_UartTxBufferStatus
 30765  005F1E  06E8               	decf	wreg,f,c
 30766  005F20  B4D8               	btfsc	status,2,c
 30767  005F22  D7F9               	goto	l700
 30768  005F24                     u11950:
 30769  005F24  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 30770  005F28  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 30771  005F2C                     	if	0	;tblptru may be non-zero
 30772  005F2C                     	endif
 30773  005F2C                     	if	0	;tblptru may be non-zero
 30774  005F2C                     	endif
 30775  005F2C  0008               	tblrd		*
 30776  005F2E  50F5               	movf	tablat,w,c
 30777  005F30  0900               	iorlw	0
 30778  005F32  B4D8               	btfsc	status,2,c
 30779  005F34  0012               	return	
 30780  005F36  D7E1               	goto	l698
 30781  005F38                     __end_of_Uart_WriteConstString:
 30782                           	opt stack 0
 30783                           tosu	equ	0xFFF
 30784                           tosh	equ	0xFFE
 30785                           tosl	equ	0xFFD
 30786                           pclath	equ	0xFFA
 30787                           tblptru	equ	0xFF8
 30788                           tblptrh	equ	0xFF7
 30789                           tblptrl	equ	0xFF6
 30790                           tablat	equ	0xFF5
 30791                           prodh	equ	0xFF4
 30792                           prodl	equ	0xFF3
 30793                           intcon	equ	0xFF2
 30794                           intcon2	equ	0xFF1
 30795                           intcon3	equ	0xFF0
 30796                           indf0	equ	0xFEF
 30797                           postinc0	equ	0xFEE
 30798                           plusw0	equ	0xFEB
 30799                           fsr0h	equ	0xFEA
 30800                           fsr0l	equ	0xFE9
 30801                           wreg	equ	0xFE8
 30802                           indf1	equ	0xFE7
 30803                           postinc1	equ	0xFE6
 30804                           postdec1	equ	0xFE5
 30805                           plusw1	equ	0xFE3
 30806                           fsr1h	equ	0xFE2
 30807                           fsr1l	equ	0xFE1
 30808                           indf2	equ	0xFDF
 30809                           postinc2	equ	0xFDE
 30810                           postdec2	equ	0xFDD
 30811                           plusw2	equ	0xFDB
 30812                           fsr2h	equ	0xFDA
 30813                           fsr2l	equ	0xFD9
 30814                           status	equ	0xFD8
 30815                           
 30816 ;; *************** function _UartWriteByte *****************
 30817 ;; Defined at:
 30818 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30819 ;; Parameters:    Size  Location     Type
 30820 ;;  Module          1    wreg     unsigned char 
 30821 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 30822 ;; Auto vars:     Size  Location     Type
 30823 ;;  Module          1   30[BANK0 ] unsigned char 
 30824 ;; Return value:  Size  Location     Type
 30825 ;;                  1    wreg      void 
 30826 ;; Registers used:
 30827 ;;		wreg, status,2, status,0
 30828 ;; Tracked objects:
 30829 ;;		On entry : 0/0
 30830 ;;		On exit  : 0/0
 30831 ;;		Unchanged: 0/0
 30832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30833 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30834 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30836 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30837 ;;Total ram usage:        2 bytes
 30838 ;; Hardware stack levels used:    1
 30839 ;; Hardware stack levels required when called:   11
 30840 ;; This function calls:
 30841 ;;		Nothing
 30842 ;; This function is called by:
 30843 ;;		_Uart_WriteConstString
 30844 ;;		_Uart_WriteString
 30845 ;;		_Uart_WriteStringLen
 30846 ;; This function uses a non-reentrant model
 30847 ;;
 30848                           
 30849                           	psect	text139
 30850  006612                     __ptext139:
 30851                           	opt stack 0
 30852  006612                     _UartWriteByte:
 30853                           	opt stack 12
 30854                           
 30855                           ;incstack = 0
 30856                           ;UartWriteByte@Module stored from wreg
 30857  006612  0100               	movlb	0	; () banked
 30858  006614  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 30859                           
 30860                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 30861  006616  0100               	movlb	0	; () banked
 30862  006618  057E               	decf	UartWriteByte@Module& (0+255),w,b
 30863  00661A  A4D8               	btfss	status,2,c
 30864  00661C  D003               	goto	l639
 30865                           
 30866                           ; BSR set to: 0
 30867                           ;uart_drv.c: 176: {
 30868                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 30869  00661E  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 30870                           
 30871                           ;uart_drv.c: 179: }
 30872  006622  0012               	return	
 30873  006624                     l639:
 30874                           
 30875                           ; BSR set to: 0
 30876                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 30877                           
 30878                           ; BSR set to: 0
 30879  006624  0E02               	movlw	2
 30880  006626  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 30881  006628  A4D8               	btfss	status,2,c
 30882  00662A  0012               	return	
 30883                           
 30884                           ; BSR set to: 0
 30885                           ;uart_drv.c: 181: {
 30886                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 30887  00662C  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 30888                           
 30889                           ; BSR set to: 0
 30890  006630  0012               	return	
 30891  006632                     __end_of_UartWriteByte:
 30892                           	opt stack 0
 30893                           tosu	equ	0xFFF
 30894                           tosh	equ	0xFFE
 30895                           tosl	equ	0xFFD
 30896                           pclath	equ	0xFFA
 30897                           tblptru	equ	0xFF8
 30898                           tblptrh	equ	0xFF7
 30899                           tblptrl	equ	0xFF6
 30900                           tablat	equ	0xFF5
 30901                           prodh	equ	0xFF4
 30902                           prodl	equ	0xFF3
 30903                           intcon	equ	0xFF2
 30904                           intcon2	equ	0xFF1
 30905                           intcon3	equ	0xFF0
 30906                           indf0	equ	0xFEF
 30907                           postinc0	equ	0xFEE
 30908                           plusw0	equ	0xFEB
 30909                           fsr0h	equ	0xFEA
 30910                           fsr0l	equ	0xFE9
 30911                           wreg	equ	0xFE8
 30912                           indf1	equ	0xFE7
 30913                           postinc1	equ	0xFE6
 30914                           postdec1	equ	0xFE5
 30915                           plusw1	equ	0xFE3
 30916                           fsr1h	equ	0xFE2
 30917                           fsr1l	equ	0xFE1
 30918                           indf2	equ	0xFDF
 30919                           postinc2	equ	0xFDE
 30920                           postdec2	equ	0xFDD
 30921                           plusw2	equ	0xFDB
 30922                           fsr2h	equ	0xFDA
 30923                           fsr2l	equ	0xFD9
 30924                           status	equ	0xFD8
 30925                           
 30926 ;; *************** function _UartTxBufferStatus *****************
 30927 ;; Defined at:
 30928 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30929 ;; Parameters:    Size  Location     Type
 30930 ;;  Module          1    wreg     unsigned char 
 30931 ;; Auto vars:     Size  Location     Type
 30932 ;;  Module          1   30[BANK0 ] unsigned char 
 30933 ;;  TxBufferStat    1   31[BANK0 ] enum E9035
 30934 ;; Return value:  Size  Location     Type
 30935 ;;                  1    wreg      enum E9035
 30936 ;; Registers used:
 30937 ;;		wreg, status,2, status,0
 30938 ;; Tracked objects:
 30939 ;;		On entry : 0/0
 30940 ;;		On exit  : 0/0
 30941 ;;		Unchanged: 0/0
 30942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30944 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30945 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30946 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30947 ;;Total ram usage:        3 bytes
 30948 ;; Hardware stack levels used:    1
 30949 ;; Hardware stack levels required when called:   11
 30950 ;; This function calls:
 30951 ;;		Nothing
 30952 ;; This function is called by:
 30953 ;;		_Uart_WriteConstString
 30954 ;;		_Uart_WriteString
 30955 ;;		_Uart_WriteStringLen
 30956 ;; This function uses a non-reentrant model
 30957 ;;
 30958                           
 30959                           	psect	text140
 30960  005BDA                     __ptext140:
 30961                           	opt stack 0
 30962  005BDA                     _UartTxBufferStatus:
 30963                           	opt stack 12
 30964                           
 30965                           ; BSR set to: 0
 30966                           ;incstack = 0
 30967                           ;UartTxBufferStatus@Module stored from wreg
 30968  005BDA  0100               	movlb	0	; () banked
 30969  005BDC  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 30970                           
 30971                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 30972  005BDE  0E00               	movlw	0
 30973  005BE0  0100               	movlb	0	; () banked
 30974  005BE2  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 30975                           
 30976                           ; BSR set to: 0
 30977                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 30978  005BE4  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 30979  005BE6  A4D8               	btfss	status,2,c
 30980  005BE8  D00B               	goto	l651
 30981                           
 30982                           ; BSR set to: 0
 30983                           ;uart_drv.c: 228: {
 30984                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 30985  005BEA  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 30986  005BEE  90D8               	bcf	status,0,c
 30987  005BF0  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 30988  005BF2  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 30989  005BF4  D002               	goto	l652
 30990  005BF6                     u11380:
 30991                           
 30992                           ; BSR set to: 0
 30993                           ;uart_drv.c: 231: {
 30994                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 30995  005BF6  0E01               	movlw	1
 30996  005BF8  D014               	goto	L51
 30997  005BFA                     l652:
 30998                           
 30999                           ; BSR set to: 0
 31000                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 31001                           
 31002                           ; BSR set to: 0
 31003  005BFA  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 31004  005BFE  D00C               	goto	L80
 31005  005C00                     l651:
 31006                           
 31007                           ; BSR set to: 0
 31008                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 31009                           
 31010                           ; BSR set to: 0
 31011  005C00  0E02               	movlw	2
 31012  005C02  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 31013  005C04  A4D8               	btfss	status,2,c
 31014  005C06  D00E               	goto	l660
 31015                           
 31016                           ; BSR set to: 0
 31017                           ;uart_drv.c: 244: {
 31018                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 31019  005C08  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 31020  005C0C  90D8               	bcf	status,0,c
 31021  005C0E  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 31022  005C10  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 31023  005C12  D7F1               	goto	u11380
 31024                           
 31025                           ; BSR set to: 0
 31026                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 31027                           
 31028                           ; BSR set to: 0
 31029                           
 31030                           ;uart_drv.c: 249: }
 31031                           
 31032                           ; BSR set to: 0
 31033                           ;uart_drv.c: 247: {
 31034                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 31035  005C14  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 31036  005C18                     L80:
 31037  005C18  90D8               	bcf	status,0,c
 31038  005C1A  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 31039  005C1C  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 31040  005C1E  D002               	goto	l660
 31041                           
 31042                           ; BSR set to: 0
 31043                           ;uart_drv.c: 251: {
 31044                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 31045  005C20  0E02               	movlw	2
 31046  005C22                     L51:
 31047  005C22  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 31048  005C24                     l660:
 31049                           
 31050                           ; BSR set to: 0
 31051                           ;uart_drv.c: 257: }
 31052                           ;uart_drv.c: 258: }
 31053                           ;uart_drv.c: 260: return TxBufferStatus;
 31054                           
 31055                           ; BSR set to: 0
 31056                           
 31057                           ; BSR set to: 0
 31058                           
 31059                           ; BSR set to: 0
 31060                           
 31061                           ; BSR set to: 0
 31062                           
 31063                           ;uart_drv.c: 254: else
 31064                           ;uart_drv.c: 255: {
 31065                           
 31066                           ; BSR set to: 0
 31067  005C24  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 31068  005C26  0012               	return	
 31069  005C28                     __end_of_UartTxBufferStatus:
 31070                           	opt stack 0
 31071                           tosu	equ	0xFFF
 31072                           tosh	equ	0xFFE
 31073                           tosl	equ	0xFFD
 31074                           pclath	equ	0xFFA
 31075                           tblptru	equ	0xFF8
 31076                           tblptrh	equ	0xFF7
 31077                           tblptrl	equ	0xFF6
 31078                           tablat	equ	0xFF5
 31079                           prodh	equ	0xFF4
 31080                           prodl	equ	0xFF3
 31081                           intcon	equ	0xFF2
 31082                           intcon2	equ	0xFF1
 31083                           intcon3	equ	0xFF0
 31084                           indf0	equ	0xFEF
 31085                           postinc0	equ	0xFEE
 31086                           plusw0	equ	0xFEB
 31087                           fsr0h	equ	0xFEA
 31088                           fsr0l	equ	0xFE9
 31089                           wreg	equ	0xFE8
 31090                           indf1	equ	0xFE7
 31091                           postinc1	equ	0xFE6
 31092                           postdec1	equ	0xFE5
 31093                           plusw1	equ	0xFE3
 31094                           fsr1h	equ	0xFE2
 31095                           fsr1l	equ	0xFE1
 31096                           indf2	equ	0xFDF
 31097                           postinc2	equ	0xFDE
 31098                           postdec2	equ	0xFDD
 31099                           plusw2	equ	0xFDB
 31100                           fsr2h	equ	0xFDA
 31101                           fsr2l	equ	0xFD9
 31102                           status	equ	0xFD8
 31103                           
 31104 ;; *************** function _StringCopy *****************
 31105 ;; Defined at:
 31106 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 31107 ;; Parameters:    Size  Location     Type
 31108 ;;  SourceStr       2   37[BANK0 ] PTR unsigned char 
 31109 ;;		 -> memorizedNumbersCount(1), memoryPreamble(5), MyApp_Task@emptyNumber(13), RAM(3775), 
 31110 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 31111 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), callerNumber(13), 
 31112 ;;		 -> RxBuffer(400), 
 31113 ;;  DestStr         2   39[BANK0 ] PTR unsigned char 
 31114 ;;		 -> MyApp_Task@receivedNumber(13), smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), 
 31115 ;;		 -> InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), 
 31116 ;;		 -> Mdm_SmsRx(102), callerNumber(13), 
 31117 ;;  Len             2   41[BANK0 ] unsigned short 
 31118 ;; Auto vars:     Size  Location     Type
 31119 ;;  Index           2   45[BANK0 ] unsigned short 
 31120 ;; Return value:  Size  Location     Type
 31121 ;;                  1    wreg      void 
 31122 ;; Registers used:
 31123 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31124 ;; Tracked objects:
 31125 ;;		On entry : 0/0
 31126 ;;		On exit  : 0/0
 31127 ;;		Unchanged: 0/0
 31128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31129 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31130 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31131 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31132 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31133 ;;Total ram usage:       10 bytes
 31134 ;; Hardware stack levels used:    1
 31135 ;; Hardware stack levels required when called:   11
 31136 ;; This function calls:
 31137 ;;		Nothing
 31138 ;; This function is called by:
 31139 ;;		_ModemEvtParser
 31140 ;;		_GetSmsSm
 31141 ;;		_SendSmsSm
 31142 ;;		_Mdm_GetSmsData
 31143 ;;		_InitGprsNetwork
 31144 ;;		_HttpGetMethod
 31145 ;;		_Eeprom_Write
 31146 ;;		_MyApp_Task
 31147 ;;		_Mdm_SendSmsData
 31148 ;; This function uses a non-reentrant model
 31149 ;;
 31150                           
 31151                           	psect	text141
 31152  00557A                     __ptext141:
 31153                           	opt stack 0
 31154  00557A                     _StringCopy:
 31155                           	opt stack 14
 31156                           
 31157                           ;sf.c: 106: UINT16 Index = 0;
 31158                           
 31159                           ; BSR set to: 0
 31160                           ;incstack = 0
 31161  00557A  0E00               	movlw	0
 31162  00557C  0100               	movlb	0	; () banked
 31163  00557E  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 31164  005580  0E00               	movlw	0
 31165  005582  6F8D               	movwf	StringCopy@Index& (0+255),b
 31166                           
 31167                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 31168  005584  0E00               	movlw	0
 31169  005586  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 31170  005588  0E00               	movlw	0
 31171  00558A  6F8D               	movwf	StringCopy@Index& (0+255),b
 31172  00558C  D020               	goto	l2247
 31173  00558E                     
 31174                           ; BSR set to: 0
 31175                           ;sf.c: 110: {
 31176                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 31177                           
 31178                           ; BSR set to: 0
 31179  00558E  518D               	movf	StringCopy@Index& (0+255),w,b
 31180  005590  2585               	addwf	StringCopy@SourceStr& (0+255),w,b
 31181  005592  6F8B               	movwf	??_StringCopy& (0+255),b
 31182  005594  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 31183  005596  2186               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 31184  005598  6F8C               	movwf	(??_StringCopy+1)& (0+255),b
 31185  00559A  C08B  FFF6         	movff	??_StringCopy,tblptrl
 31186  00559E  C08C  FFF7         	movff	??_StringCopy+1,tblptrh
 31187  0055A2  6AF8               	clrf	tblptru,c
 31188  0055A4  518D               	movf	StringCopy@Index& (0+255),w,b
 31189  0055A6  2587               	addwf	StringCopy@DestStr& (0+255),w,b
 31190  0055A8  6ED9               	movwf	fsr2l,c
 31191  0055AA  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 31192  0055AC  2188               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 31193  0055AE  6EDA               	movwf	fsr2h,c
 31194  0055B0  0E0E               	movlw	(high __ramtop+-1)
 31195  0055B2  64F7               	cpfsgt	tblptrh,c
 31196  0055B4  D003               	bra	u12497
 31197  0055B6  0008               	tblrd		*
 31198  0055B8  50F5               	movf	tablat,w,c
 31199  0055BA  D005               	bra	u12490
 31200  0055BC                     u12497:
 31201  0055BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 31202  0055C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 31203  0055C4  50EF               	movf	indf0,w,c
 31204  0055C6                     u12490:
 31205  0055C6  6EDF               	movwf	indf2,c
 31206  0055C8  0100               	movlb	0	; () banked
 31207  0055CA  4B8D               	infsnz	StringCopy@Index& (0+255),f,b
 31208  0055CC  2B8E               	incf	(StringCopy@Index+1)& (0+255),f,b
 31209  0055CE                     l2247:
 31210                           
 31211                           ; BSR set to: 0
 31212                           
 31213                           ; BSR set to: 0
 31214  0055CE  5189               	movf	StringCopy@Len& (0+255),w,b
 31215  0055D0  5D8D               	subwf	StringCopy@Index& (0+255),w,b
 31216  0055D2  518A               	movf	(StringCopy@Len+1)& (0+255),w,b
 31217  0055D4  598E               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 31218  0055D6  B0D8               	btfsc	status,0,c
 31219  0055D8  0012               	return	
 31220  0055DA  D7D9               	goto	l2248
 31221  0055DC                     __end_of_StringCopy:
 31222                           	opt stack 0
 31223                           tosu	equ	0xFFF
 31224                           tosh	equ	0xFFE
 31225                           tosl	equ	0xFFD
 31226                           pclath	equ	0xFFA
 31227                           tblptru	equ	0xFF8
 31228                           tblptrh	equ	0xFF7
 31229                           tblptrl	equ	0xFF6
 31230                           tablat	equ	0xFF5
 31231                           prodh	equ	0xFF4
 31232                           prodl	equ	0xFF3
 31233                           intcon	equ	0xFF2
 31234                           intcon2	equ	0xFF1
 31235                           intcon3	equ	0xFF0
 31236                           indf0	equ	0xFEF
 31237                           postinc0	equ	0xFEE
 31238                           plusw0	equ	0xFEB
 31239                           fsr0h	equ	0xFEA
 31240                           fsr0l	equ	0xFE9
 31241                           wreg	equ	0xFE8
 31242                           indf1	equ	0xFE7
 31243                           postinc1	equ	0xFE6
 31244                           postdec1	equ	0xFE5
 31245                           plusw1	equ	0xFE3
 31246                           fsr1h	equ	0xFE2
 31247                           fsr1l	equ	0xFE1
 31248                           indf2	equ	0xFDF
 31249                           postinc2	equ	0xFDE
 31250                           postdec2	equ	0xFDD
 31251                           plusw2	equ	0xFDB
 31252                           fsr2h	equ	0xFDA
 31253                           fsr2l	equ	0xFD9
 31254                           status	equ	0xFD8
 31255                           
 31256 ;; *************** function _OsTmr_StartTimer *****************
 31257 ;; Defined at:
 31258 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31259 ;; Parameters:    Size  Location     Type
 31260 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 31261 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 31262 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 31263 ;;  Timeout         4   35[BANK0 ] unsigned long 
 31264 ;; Auto vars:     Size  Location     Type
 31265 ;;		None
 31266 ;; Return value:  Size  Location     Type
 31267 ;;                  1    wreg      void 
 31268 ;; Registers used:
 31269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31270 ;; Tracked objects:
 31271 ;;		On entry : 0/0
 31272 ;;		On exit  : 0/0
 31273 ;;		Unchanged: 0/0
 31274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31275 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31278 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31279 ;;Total ram usage:        6 bytes
 31280 ;; Hardware stack levels used:    1
 31281 ;; Hardware stack levels required when called:   12
 31282 ;; This function calls:
 31283 ;;		_GetOsTickCounter
 31284 ;; This function is called by:
 31285 ;;		_OsTmr_Wait
 31286 ;;		_CheckModem
 31287 ;;		_SendSmsSm
 31288 ;;		_InitGprsNetwork
 31289 ;;		_HttpGetMethod
 31290 ;;		_I2cSlv_QueryI2cData
 31291 ;;		_Term_MainSm
 31292 ;; This function uses a non-reentrant model
 31293 ;;
 31294                           
 31295                           	psect	text142
 31296  00563A                     __ptext142:
 31297                           	opt stack 0
 31298  00563A                     _OsTmr_StartTimer:
 31299                           	opt stack 12
 31300                           
 31301                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 31302                           
 31303                           ; BSR set to: 0
 31304                           ;incstack = 0
 31305  00563A  0100               	movlb	0	; () banked
 31306  00563C  EE20 F001          	lfsr	2,1
 31307  005640  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 31308  005642  26D9               	addwf	fsr2l,f,c
 31309  005644  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 31310  005646  22DA               	addwfc	fsr2h,f,c
 31311  005648  0E00               	movlw	0
 31312  00564A  6EDF               	movwf	indf2,c
 31313                           
 31314                           ; BSR set to: 0
 31315                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 31316  00564C  ECFF  F033         	call	_GetOsTickCounter	;wreg free
 31317  005650  0100               	movlb	0	; () banked
 31318  005652  EE20 F002          	lfsr	2,2
 31319  005656  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 31320  005658  26D9               	addwf	fsr2l,f,c
 31321  00565A  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 31322  00565C  22DA               	addwfc	fsr2h,f,c
 31323  00565E  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 31324  005662  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 31325  005666  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 31326  00566A  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 31327                           
 31328                           ; BSR set to: 0
 31329                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 31330  00566E  EE20 F006          	lfsr	2,6
 31331  005672  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 31332  005674  26D9               	addwf	fsr2l,f,c
 31333  005676  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 31334  005678  22DA               	addwfc	fsr2h,f,c
 31335  00567A  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 31336  00567E  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 31337  005682  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 31338  005686  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 31339                           
 31340                           ; BSR set to: 0
 31341                           ;os_timers.c: 127: Timer->Enabled = 1u;
 31342  00568A  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 31343  00568E  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 31344  005692  0E01               	movlw	1
 31345  005694  6EDF               	movwf	indf2,c
 31346                           
 31347                           ; BSR set to: 0
 31348  005696  0012               	return		;funcret
 31349  005698                     __end_of_OsTmr_StartTimer:
 31350                           	opt stack 0
 31351                           tosu	equ	0xFFF
 31352                           tosh	equ	0xFFE
 31353                           tosl	equ	0xFFD
 31354                           pclath	equ	0xFFA
 31355                           tblptru	equ	0xFF8
 31356                           tblptrh	equ	0xFF7
 31357                           tblptrl	equ	0xFF6
 31358                           tablat	equ	0xFF5
 31359                           prodh	equ	0xFF4
 31360                           prodl	equ	0xFF3
 31361                           intcon	equ	0xFF2
 31362                           intcon2	equ	0xFF1
 31363                           intcon3	equ	0xFF0
 31364                           indf0	equ	0xFEF
 31365                           postinc0	equ	0xFEE
 31366                           plusw0	equ	0xFEB
 31367                           fsr0h	equ	0xFEA
 31368                           fsr0l	equ	0xFE9
 31369                           wreg	equ	0xFE8
 31370                           indf1	equ	0xFE7
 31371                           postinc1	equ	0xFE6
 31372                           postdec1	equ	0xFE5
 31373                           plusw1	equ	0xFE3
 31374                           fsr1h	equ	0xFE2
 31375                           fsr1l	equ	0xFE1
 31376                           indf2	equ	0xFDF
 31377                           postinc2	equ	0xFDE
 31378                           postdec2	equ	0xFDD
 31379                           plusw2	equ	0xFDB
 31380                           fsr2h	equ	0xFDA
 31381                           fsr2l	equ	0xFD9
 31382                           status	equ	0xFD8
 31383                           
 31384 ;; *************** function _OsTmr_GetTimerStatus *****************
 31385 ;; Defined at:
 31386 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31387 ;; Parameters:    Size  Location     Type
 31388 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 31389 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 31390 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 31391 ;; Auto vars:     Size  Location     Type
 31392 ;;		None
 31393 ;; Return value:  Size  Location     Type
 31394 ;;                  1    wreg      enum E7740
 31395 ;; Registers used:
 31396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 31397 ;; Tracked objects:
 31398 ;;		On entry : 0/0
 31399 ;;		On exit  : 0/0
 31400 ;;		Unchanged: 0/0
 31401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31402 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31404 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31405 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31406 ;;Total ram usage:        6 bytes
 31407 ;; Hardware stack levels used:    1
 31408 ;; Hardware stack levels required when called:   13
 31409 ;; This function calls:
 31410 ;;		_GetElapsedTime
 31411 ;; This function is called by:
 31412 ;;		_OsTmr_Wait
 31413 ;;		_CheckModem
 31414 ;;		_SendSmsSm
 31415 ;;		_InitGprsNetwork
 31416 ;;		_HttpGetMethod
 31417 ;;		_I2cSlv_QueryI2cData
 31418 ;;		_Term_MainSm
 31419 ;; This function uses a non-reentrant model
 31420 ;;
 31421                           
 31422                           	psect	text143
 31423  004D8C                     __ptext143:
 31424                           	opt stack 0
 31425  004D8C                     _OsTmr_GetTimerStatus:
 31426                           	opt stack 11
 31427                           
 31428                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 31429                           
 31430                           ; BSR set to: 0
 31431                           ;incstack = 0
 31432  004D8C  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 31433  004D90  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 31434  004D94  04DE               	decf	postinc2,w,c
 31435  004D96  A4D8               	btfss	status,2,c
 31436  004D98  D030               	goto	l864
 31437                           
 31438                           ;os_timers.c: 197: {
 31439                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 31440  004D9A  0100               	movlb	0	; () banked
 31441  004D9C  EE20 F006          	lfsr	2,6
 31442  004DA0  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31443  004DA2  26D9               	addwf	fsr2l,f,c
 31444  004DA4  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31445  004DA6  22DA               	addwfc	fsr2h,f,c
 31446  004DA8  EE10 F002          	lfsr	1,2
 31447  004DAC  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31448  004DAE  26E1               	addwf	fsr1l,f,c
 31449  004DB0  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31450  004DB2  22E2               	addwfc	fsr1h,f,c
 31451  004DB4  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 31452  004DB8  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 31453  004DBC  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 31454  004DC0  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 31455  004DC4  EC84  F01F         	call	_GetElapsedTime	;wreg free
 31456  004DC8  50DE               	movf	postinc2,w,c
 31457  004DCA  0100               	movlb	0	; () banked
 31458  004DCC  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 31459  004DCE  50DE               	movf	postinc2,w,c
 31460  004DD0  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 31461  004DD2  50DE               	movf	postinc2,w,c
 31462  004DD4  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 31463  004DD6  50DE               	movf	postinc2,w,c
 31464  004DD8  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 31465  004DDA  A0D8               	btfss	status,0,c
 31466  004DDC  D017               	goto	l867
 31467                           
 31468                           ; BSR set to: 0
 31469                           ;os_timers.c: 200: {
 31470                           ;os_timers.c: 202: Timer->Enabled = 0u;
 31471  004DDE  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 31472  004DE2  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 31473  004DE6  0E00               	movlw	0
 31474  004DE8  6EDF               	movwf	indf2,c
 31475                           
 31476                           ; BSR set to: 0
 31477                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 31478  004DEA  EE20 F001          	lfsr	2,1
 31479  004DEE  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31480  004DF0  26D9               	addwf	fsr2l,f,c
 31481  004DF2  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31482  004DF4  22DA               	addwfc	fsr2h,f,c
 31483  004DF6  0E01               	movlw	1
 31484  004DF8  D008               	goto	L81
 31485  004DFA                     l864:
 31486                           
 31487                           ;os_timers.c: 211: else
 31488                           ;os_timers.c: 212: {
 31489                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 31490                           
 31491                           ; BSR set to: 0
 31492  004DFA  0100               	movlb	0	; () banked
 31493  004DFC  EE20 F001          	lfsr	2,1
 31494  004E00  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31495  004E02  26D9               	addwf	fsr2l,f,c
 31496  004E04  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31497  004E06  22DA               	addwfc	fsr2h,f,c
 31498  004E08  0E02               	movlw	2
 31499  004E0A                     L81:
 31500  004E0A  6EDF               	movwf	indf2,c
 31501  004E0C                     l867:
 31502                           
 31503                           ; BSR set to: 0
 31504                           ;os_timers.c: 215: }
 31505                           ;os_timers.c: 218: return Timer->Status;
 31506  004E0C  EE20 F001          	lfsr	2,1
 31507  004E10  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31508  004E12  26D9               	addwf	fsr2l,f,c
 31509  004E14  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31510  004E16  22DA               	addwfc	fsr2h,f,c
 31511  004E18  50DF               	movf	indf2,w,c
 31512  004E1A  0012               	return	
 31513  004E1C                     __end_of_OsTmr_GetTimerStatus:
 31514                           	opt stack 0
 31515                           tosu	equ	0xFFF
 31516                           tosh	equ	0xFFE
 31517                           tosl	equ	0xFFD
 31518                           pclath	equ	0xFFA
 31519                           tblptru	equ	0xFF8
 31520                           tblptrh	equ	0xFF7
 31521                           tblptrl	equ	0xFF6
 31522                           tablat	equ	0xFF5
 31523                           prodh	equ	0xFF4
 31524                           prodl	equ	0xFF3
 31525                           intcon	equ	0xFF2
 31526                           intcon2	equ	0xFF1
 31527                           intcon3	equ	0xFF0
 31528                           indf0	equ	0xFEF
 31529                           postinc0	equ	0xFEE
 31530                           plusw0	equ	0xFEB
 31531                           fsr0h	equ	0xFEA
 31532                           fsr0l	equ	0xFE9
 31533                           wreg	equ	0xFE8
 31534                           indf1	equ	0xFE7
 31535                           postinc1	equ	0xFE6
 31536                           postdec1	equ	0xFE5
 31537                           plusw1	equ	0xFE3
 31538                           fsr1h	equ	0xFE2
 31539                           fsr1l	equ	0xFE1
 31540                           indf2	equ	0xFDF
 31541                           postinc2	equ	0xFDE
 31542                           postdec2	equ	0xFDD
 31543                           plusw2	equ	0xFDB
 31544                           fsr2h	equ	0xFDA
 31545                           fsr2l	equ	0xFD9
 31546                           status	equ	0xFD8
 31547                           
 31548 ;; *************** function _GetElapsedTime *****************
 31549 ;; Defined at:
 31550 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31551 ;; Parameters:    Size  Location     Type
 31552 ;;  StartTime       4   33[BANK0 ] unsigned long 
 31553 ;; Auto vars:     Size  Location     Type
 31554 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 31555 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 31556 ;; Return value:  Size  Location     Type
 31557 ;;                  4   33[BANK0 ] unsigned long 
 31558 ;; Registers used:
 31559 ;;		wreg, status,2, status,0, cstack
 31560 ;; Tracked objects:
 31561 ;;		On entry : 0/0
 31562 ;;		On exit  : 0/0
 31563 ;;		Unchanged: 0/0
 31564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31565 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31566 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31567 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31568 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31569 ;;Total ram usage:       20 bytes
 31570 ;; Hardware stack levels used:    1
 31571 ;; Hardware stack levels required when called:   12
 31572 ;; This function calls:
 31573 ;;		_GetOsTickCounter
 31574 ;; This function is called by:
 31575 ;;		_OsTmr_GetTimerStatus
 31576 ;;		_OsTmr_GetRemainingTime
 31577 ;; This function uses a non-reentrant model
 31578 ;;
 31579                           
 31580                           	psect	text144
 31581  003F08                     __ptext144:
 31582                           	opt stack 0
 31583  003F08                     _GetElapsedTime:
 31584                           	opt stack 11
 31585                           
 31586                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 31587                           ;os_timers.c: 87: UINT32 TimeValue;
 31588                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 31589                           
 31590                           ; BSR set to: 0
 31591                           ;incstack = 0
 31592  003F08  ECFF  F033         	call	_GetOsTickCounter	;wreg free
 31593  003F0C  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 31594  003F10  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 31595  003F14  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 31596  003F18  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 31597                           
 31598                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 31599  003F1C  0100               	movlb	0	; () banked
 31600  003F1E  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 31601  003F20  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31602  003F22  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 31603  003F24  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31604  003F26  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 31605  003F28  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31606  003F2A  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 31607  003F2C  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31608  003F2E  A0D8               	btfss	status,0,c
 31609  003F30  D01D               	goto	l844
 31610                           
 31611                           ; BSR set to: 0
 31612                           ;os_timers.c: 94: {
 31613                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 31614  003F32  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 31615  003F36  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 31616  003F3A  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 31617  003F3E  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 31618  003F42  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 31619  003F44  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 31620  003F46  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 31621  003F48  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 31622  003F4A  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 31623  003F4C  0E00               	movlw	0
 31624  003F4E  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 31625  003F50  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 31626  003F52  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 31627  003F54  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31628  003F56  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 31629  003F58  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 31630  003F5A  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31631  003F5C  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 31632  003F5E  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 31633  003F60  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31634  003F62  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 31635  003F64  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 31636  003F66  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31637  003F68  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 31638  003F6A  D028               	goto	L52
 31639  003F6C                     l844:
 31640                           
 31641                           ; BSR set to: 0
 31642                           ;os_timers.c: 97: else
 31643                           ;os_timers.c: 98: {
 31644                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 31645                           
 31646                           ; BSR set to: 0
 31647  003F6C  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 31648  003F70  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 31649  003F74  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 31650  003F78  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 31651  003F7C  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 31652  003F7E  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 31653  003F80  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 31654  003F82  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 31655  003F84  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 31656  003F86  0E00               	movlw	0
 31657  003F88  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 31658  003F8A  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 31659  003F8C  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 31660  003F8E  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31661  003F90  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 31662  003F92  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 31663  003F94  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31664  003F96  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 31665  003F98  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 31666  003F9A  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31667  003F9C  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 31668  003F9E  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 31669  003FA0  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31670  003FA2  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 31671  003FA4  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 31672  003FA6  0EFF               	movlw	255
 31673  003FA8  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 31674  003FAA  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 31675  003FAC  0EFF               	movlw	255
 31676  003FAE  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 31677  003FB0  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 31678  003FB2  0EFF               	movlw	255
 31679  003FB4  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 31680  003FB6  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 31681  003FB8  0EFF               	movlw	255
 31682  003FBA  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 31683  003FBC                     L52:
 31684  003FBC  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 31685                           
 31686                           ; BSR set to: 0
 31687                           ;os_timers.c: 100: }
 31688                           ;os_timers.c: 102: return TimeValue;
 31689                           
 31690                           ; BSR set to: 0
 31691  003FBE  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 31692  003FC2  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 31693  003FC6  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 31694  003FCA  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 31695  003FCE  0012               	return	
 31696  003FD0                     __end_of_GetElapsedTime:
 31697                           	opt stack 0
 31698                           tosu	equ	0xFFF
 31699                           tosh	equ	0xFFE
 31700                           tosl	equ	0xFFD
 31701                           pclath	equ	0xFFA
 31702                           tblptru	equ	0xFF8
 31703                           tblptrh	equ	0xFF7
 31704                           tblptrl	equ	0xFF6
 31705                           tablat	equ	0xFF5
 31706                           prodh	equ	0xFF4
 31707                           prodl	equ	0xFF3
 31708                           intcon	equ	0xFF2
 31709                           intcon2	equ	0xFF1
 31710                           intcon3	equ	0xFF0
 31711                           indf0	equ	0xFEF
 31712                           postinc0	equ	0xFEE
 31713                           plusw0	equ	0xFEB
 31714                           fsr0h	equ	0xFEA
 31715                           fsr0l	equ	0xFE9
 31716                           wreg	equ	0xFE8
 31717                           indf1	equ	0xFE7
 31718                           postinc1	equ	0xFE6
 31719                           postdec1	equ	0xFE5
 31720                           plusw1	equ	0xFE3
 31721                           fsr1h	equ	0xFE2
 31722                           fsr1l	equ	0xFE1
 31723                           indf2	equ	0xFDF
 31724                           postinc2	equ	0xFDE
 31725                           postdec2	equ	0xFDD
 31726                           plusw2	equ	0xFDB
 31727                           fsr2h	equ	0xFDA
 31728                           fsr2l	equ	0xFD9
 31729                           status	equ	0xFD8
 31730                           
 31731 ;; *************** function _GetOsTickCounter *****************
 31732 ;; Defined at:
 31733 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31734 ;; Parameters:    Size  Location     Type
 31735 ;;		None
 31736 ;; Auto vars:     Size  Location     Type
 31737 ;;		None
 31738 ;; Return value:  Size  Location     Type
 31739 ;;                  4   29[BANK0 ] unsigned long 
 31740 ;; Registers used:
 31741 ;;		None
 31742 ;; Tracked objects:
 31743 ;;		On entry : 0/0
 31744 ;;		On exit  : 0/0
 31745 ;;		Unchanged: 0/0
 31746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31747 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31750 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31751 ;;Total ram usage:        4 bytes
 31752 ;; Hardware stack levels used:    1
 31753 ;; Hardware stack levels required when called:   11
 31754 ;; This function calls:
 31755 ;;		Nothing
 31756 ;; This function is called by:
 31757 ;;		_GetElapsedTime
 31758 ;;		_OsTmr_StartTimer
 31759 ;;		_OsTmr_GetElapsedTime
 31760 ;; This function uses a non-reentrant model
 31761 ;;
 31762                           
 31763                           	psect	text145
 31764  0067FE                     __ptext145:
 31765                           	opt stack 0
 31766  0067FE                     _GetOsTickCounter:
 31767                           	opt stack 12
 31768                           
 31769                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 31770                           
 31771                           ; BSR set to: 0
 31772                           ;incstack = 0
 31773  0067FE  C314  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 31774  006802  C315  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 31775  006806  C316  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 31776  00680A  C317  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 31777  00680E  0012               	return		;funcret
 31778  006810                     __end_of_GetOsTickCounter:
 31779                           	opt stack 0
 31780                           tosu	equ	0xFFF
 31781                           tosh	equ	0xFFE
 31782                           tosl	equ	0xFFD
 31783                           pclath	equ	0xFFA
 31784                           tblptru	equ	0xFF8
 31785                           tblptrh	equ	0xFF7
 31786                           tblptrl	equ	0xFF6
 31787                           tablat	equ	0xFF5
 31788                           prodh	equ	0xFF4
 31789                           prodl	equ	0xFF3
 31790                           intcon	equ	0xFF2
 31791                           intcon2	equ	0xFF1
 31792                           intcon3	equ	0xFF0
 31793                           indf0	equ	0xFEF
 31794                           postinc0	equ	0xFEE
 31795                           plusw0	equ	0xFEB
 31796                           fsr0h	equ	0xFEA
 31797                           fsr0l	equ	0xFE9
 31798                           wreg	equ	0xFE8
 31799                           indf1	equ	0xFE7
 31800                           postinc1	equ	0xFE6
 31801                           postdec1	equ	0xFE5
 31802                           plusw1	equ	0xFE3
 31803                           fsr1h	equ	0xFE2
 31804                           fsr1l	equ	0xFE1
 31805                           indf2	equ	0xFDF
 31806                           postinc2	equ	0xFDE
 31807                           postdec2	equ	0xFDD
 31808                           plusw2	equ	0xFDB
 31809                           fsr2h	equ	0xFDA
 31810                           fsr2l	equ	0xFD9
 31811                           status	equ	0xFD8
 31812                           
 31813 ;; *************** function _ClearBuffer *****************
 31814 ;; Defined at:
 31815 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 31816 ;; Parameters:    Size  Location     Type
 31817 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 31818 ;;		 -> GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_SmsRx(102)
      +, 
 31819 ;;		 -> callerNumber(13), RxBuffer(400), 
 31820 ;;  Len             2   31[BANK0 ] unsigned short 
 31821 ;; Auto vars:     Size  Location     Type
 31822 ;;  Index           2   33[BANK0 ] unsigned short 
 31823 ;; Return value:  Size  Location     Type
 31824 ;;                  1    wreg      void 
 31825 ;; Registers used:
 31826 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31827 ;; Tracked objects:
 31828 ;;		On entry : 0/0
 31829 ;;		On exit  : 0/0
 31830 ;;		Unchanged: 0/0
 31831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31832 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31833 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31835 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31836 ;;Total ram usage:        6 bytes
 31837 ;; Hardware stack levels used:    1
 31838 ;; Hardware stack levels required when called:   11
 31839 ;; This function calls:
 31840 ;;		Nothing
 31841 ;; This function is called by:
 31842 ;;		_GetSmsSm
 31843 ;;		_GetCallerNumber
 31844 ;;		_InitGprsNetwork
 31845 ;;		_HttpGetMethod
 31846 ;;		_GsmGprsTerminal
 31847 ;; This function uses a non-reentrant model
 31848 ;;
 31849                           
 31850                           	psect	text146
 31851  006198                     __ptext146:
 31852                           	opt stack 0
 31853  006198                     _ClearBuffer:
 31854                           	opt stack 15
 31855                           
 31856                           ;sf.c: 126: UINT16 Index = 0;
 31857                           
 31858                           ;incstack = 0
 31859  006198  0E00               	movlw	0
 31860  00619A  0100               	movlb	0	; () banked
 31861  00619C  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 31862  00619E  0E00               	movlw	0
 31863  0061A0  6F81               	movwf	ClearBuffer@Index& (0+255),b
 31864                           
 31865                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 31866  0061A2  0E00               	movlw	0
 31867  0061A4  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 31868  0061A6  0E00               	movlw	0
 31869  0061A8  6F81               	movwf	ClearBuffer@Index& (0+255),b
 31870  0061AA  D00A               	goto	l2253
 31871  0061AC                     
 31872                           ; BSR set to: 0
 31873                           ;sf.c: 130: {
 31874                           ;sf.c: 131: *(Buffer + Index) = 0;
 31875                           
 31876                           ; BSR set to: 0
 31877  0061AC  5181               	movf	ClearBuffer@Index& (0+255),w,b
 31878  0061AE  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 31879  0061B0  6ED9               	movwf	fsr2l,c
 31880  0061B2  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 31881  0061B4  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 31882  0061B6  6EDA               	movwf	fsr2h,c
 31883  0061B8  0E00               	movlw	0
 31884  0061BA  6EDF               	movwf	indf2,c
 31885                           
 31886                           ; BSR set to: 0
 31887  0061BC  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 31888  0061BE  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 31889  0061C0                     l2253:
 31890                           
 31891                           ; BSR set to: 0
 31892                           
 31893                           ; BSR set to: 0
 31894  0061C0  5181               	movf	ClearBuffer@Index& (0+255),w,b
 31895  0061C2  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 31896  0061C4  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 31897  0061C6  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 31898  0061C8  A0D8               	btfss	status,0,c
 31899  0061CA  0012               	return	
 31900  0061CC  D7EF               	goto	l2254
 31901  0061CE                     __end_of_ClearBuffer:
 31902                           	opt stack 0
 31903                           tosu	equ	0xFFF
 31904                           tosh	equ	0xFFE
 31905                           tosl	equ	0xFFD
 31906                           pclath	equ	0xFFA
 31907                           tblptru	equ	0xFF8
 31908                           tblptrh	equ	0xFF7
 31909                           tblptrl	equ	0xFF6
 31910                           tablat	equ	0xFF5
 31911                           prodh	equ	0xFF4
 31912                           prodl	equ	0xFF3
 31913                           intcon	equ	0xFF2
 31914                           intcon2	equ	0xFF1
 31915                           intcon3	equ	0xFF0
 31916                           indf0	equ	0xFEF
 31917                           postinc0	equ	0xFEE
 31918                           plusw0	equ	0xFEB
 31919                           fsr0h	equ	0xFEA
 31920                           fsr0l	equ	0xFE9
 31921                           wreg	equ	0xFE8
 31922                           indf1	equ	0xFE7
 31923                           postinc1	equ	0xFE6
 31924                           postdec1	equ	0xFE5
 31925                           plusw1	equ	0xFE3
 31926                           fsr1h	equ	0xFE2
 31927                           fsr1l	equ	0xFE1
 31928                           indf2	equ	0xFDF
 31929                           postinc2	equ	0xFDE
 31930                           postdec2	equ	0xFDD
 31931                           plusw2	equ	0xFDB
 31932                           fsr2h	equ	0xFDA
 31933                           fsr2l	equ	0xFD9
 31934                           status	equ	0xFD8
 31935                           
 31936 ;; *************** function _LedStateMachine *****************
 31937 ;; Defined at:
 31938 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 31939 ;; Parameters:    Size  Location     Type
 31940 ;;  Led             1    wreg     unsigned char 
 31941 ;;  LedSts          2   47[BANK0 ] PTR enum E8952
 31942 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 31943 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 31944 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 31945 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 31946 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 31947 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 31948 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 31949 ;; Auto vars:     Size  Location     Type
 31950 ;;  Led             1   57[BANK0 ] unsigned char 
 31951 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 31952 ;; Return value:  Size  Location     Type
 31953 ;;                  1    wreg      unsigned char 
 31954 ;; Registers used:
 31955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 31956 ;; Tracked objects:
 31957 ;;		On entry : 0/0
 31958 ;;		On exit  : 0/0
 31959 ;;		Unchanged: 0/0
 31960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31961 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31962 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31963 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31964 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31965 ;;Total ram usage:       11 bytes
 31966 ;; Hardware stack levels used:    1
 31967 ;; Hardware stack levels required when called:   13
 31968 ;; This function calls:
 31969 ;;		_LedBlinkStateMachine
 31970 ;;		_LedPulseStateMachine
 31971 ;;		_Led_SetLedStatus
 31972 ;; This function is called by:
 31973 ;;		_Led_MainTask
 31974 ;; This function uses a non-reentrant model
 31975 ;;
 31976                           
 31977                           	psect	text147
 31978  0046EA                     __ptext147:
 31979                           	opt stack 0
 31980  0046EA                     _LedStateMachine:
 31981                           	opt stack 14
 31982                           
 31983                           ; BSR set to: 0
 31984                           ;incstack = 0
 31985                           ;LedStateMachine@Led stored from wreg
 31986  0046EA  0100               	movlb	0	; () banked
 31987  0046EC  6F99               	movwf	LedStateMachine@Led& (0+255),b
 31988                           
 31989                           ;led.c: 238: UINT8 LedOutSts = 0u;
 31990  0046EE  0E00               	movlw	0
 31991  0046F0  0100               	movlb	0	; () banked
 31992  0046F2  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 31993                           
 31994                           ;led.c: 241: switch (*LedSts)
 31995  0046F4  D037               	goto	l2112
 31996  0046F6                     
 31997                           ; BSR set to: 0
 31998                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 31999                           
 32000                           ; BSR set to: 0
 32001  0046F6  0E00               	movlw	0
 32002  0046F8  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 32003                           
 32004                           ; BSR set to: 0
 32005                           ;led.c: 246: *LedOut = ((UINT8)(0));
 32006  0046FA  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 32007  0046FE  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 32008  004702  0E00               	movlw	0
 32009  004704  D007               	goto	L53
 32010  004706                     
 32011                           ; BSR set to: 0
 32012                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 32013                           
 32014                           ; BSR set to: 0
 32015  004706  0E01               	movlw	1
 32016  004708  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 32017                           
 32018                           ; BSR set to: 0
 32019                           ;led.c: 252: *LedOut = ((UINT8)(1));
 32020  00470A  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 32021  00470E  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 32022  004712  0E01               	movlw	1
 32023  004714                     L53:
 32024  004714  6EDF               	movwf	indf2,c
 32025                           
 32026                           ;led.c: 253: break;
 32027  004716  D03A               	goto	l2114
 32028  004718                     
 32029                           ; BSR set to: 0
 32030                           ;led.c: 257: if (*LedOut == 1)
 32031                           
 32032                           ; BSR set to: 0
 32033  004718  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 32034  00471C  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 32035  004720  04DE               	decf	postinc2,w,c
 32036  004722  A4D8               	btfss	status,2,c
 32037  004724  D006               	goto	l2117
 32038                           
 32039                           ; BSR set to: 0
 32040                           ;led.c: 258: {
 32041                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 32042  004726  0E00               	movlw	0
 32043  004728  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 32044  00472A  5199               	movf	LedStateMachine@Led& (0+255),w,b
 32045  00472C  EC7B  F031         	call	_Led_SetLedStatus
 32046                           
 32047                           ;led.c: 261: }
 32048  004730  D02D               	goto	l2114
 32049  004732                     l2117:
 32050                           
 32051                           ;led.c: 262: else
 32052                           ;led.c: 263: {
 32053                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 32054  004732  0E01               	movlw	1
 32055  004734  0100               	movlb	0	; () banked
 32056  004736  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 32057  004738  5199               	movf	LedStateMachine@Led& (0+255),w,b
 32058  00473A  EC7B  F031         	call	_Led_SetLedStatus
 32059                           
 32060                           ;led.c: 266: }
 32061                           ;led.c: 267: break;
 32062  00473E  D026               	goto	l2114
 32063  004740                     
 32064                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 32065  004740  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 32066  004744  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 32067  004748  ECE1  F014         	call	_LedBlinkStateMachine	;wreg free
 32068  00474C  D008               	goto	L54
 32069  00474E                     
 32070                           ; BSR set to: 0
 32071                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 32072                           
 32073                           ; BSR set to: 0
 32074  00474E  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 32075  004752  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 32076  004756  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 32077  00475A  EC0D  F01A         	call	_LedPulseStateMachine	;wreg free
 32078  00475E                     L54:
 32079  00475E  0100               	movlb	0	; () banked
 32080  004760  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 32081                           
 32082                           ; BSR set to: 0
 32083                           ;led.c: 281: }
 32084                           
 32085                           ; BSR set to: 0
 32086                           ;led.c: 280: break;
 32087                           
 32088                           ;led.c: 279: default:
 32089                           
 32090                           ;led.c: 277: break;
 32091  004762  D014               	goto	l2114
 32092  004764                     l2112:
 32093                           
 32094                           ; BSR set to: 0
 32095                           
 32096                           ; BSR set to: 0
 32097  004764  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 32098  004768  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 32099  00476C  50DF               	movf	indf2,w,c
 32100                           
 32101                           ; Switch size 1, requested type "space"
 32102                           ; Number of cases is 5, Range of values is 0 to 4
 32103                           ; switch strategies available:
 32104                           ; Name         Instructions Cycles
 32105                           ; simple_byte           16     9 (average)
 32106                           ;	Chosen strategy is simple_byte
 32107  00476E  0A00               	xorlw	0	; case 0
 32108  004770  B4D8               	btfsc	status,2,c
 32109  004772  D7C1               	goto	l2113
 32110  004774  0A01               	xorlw	1	; case 1
 32111  004776  B4D8               	btfsc	status,2,c
 32112  004778  D7C6               	goto	l2115
 32113  00477A  0A03               	xorlw	3	; case 2
 32114  00477C  B4D8               	btfsc	status,2,c
 32115  00477E  D7CC               	goto	l2116
 32116  004780  0A01               	xorlw	1	; case 3
 32117  004782  B4D8               	btfsc	status,2,c
 32118  004784  D7DD               	goto	l2119
 32119  004786  0A07               	xorlw	7	; case 4
 32120  004788  B4D8               	btfsc	status,2,c
 32121  00478A  D7E1               	goto	l2120
 32122  00478C                     l2114:
 32123                           
 32124                           ;led.c: 283: return LedOutSts;
 32125                           
 32126                           ; BSR set to: 0
 32127  00478C  0100               	movlb	0	; () banked
 32128  00478E  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 32129  004790  0012               	return	
 32130  004792                     __end_of_LedStateMachine:
 32131                           	opt stack 0
 32132                           tosu	equ	0xFFF
 32133                           tosh	equ	0xFFE
 32134                           tosl	equ	0xFFD
 32135                           pclath	equ	0xFFA
 32136                           tblptru	equ	0xFF8
 32137                           tblptrh	equ	0xFF7
 32138                           tblptrl	equ	0xFF6
 32139                           tablat	equ	0xFF5
 32140                           prodh	equ	0xFF4
 32141                           prodl	equ	0xFF3
 32142                           intcon	equ	0xFF2
 32143                           intcon2	equ	0xFF1
 32144                           intcon3	equ	0xFF0
 32145                           indf0	equ	0xFEF
 32146                           postinc0	equ	0xFEE
 32147                           plusw0	equ	0xFEB
 32148                           fsr0h	equ	0xFEA
 32149                           fsr0l	equ	0xFE9
 32150                           wreg	equ	0xFE8
 32151                           indf1	equ	0xFE7
 32152                           postinc1	equ	0xFE6
 32153                           postdec1	equ	0xFE5
 32154                           plusw1	equ	0xFE3
 32155                           fsr1h	equ	0xFE2
 32156                           fsr1l	equ	0xFE1
 32157                           indf2	equ	0xFDF
 32158                           postinc2	equ	0xFDE
 32159                           postdec2	equ	0xFDD
 32160                           plusw2	equ	0xFDB
 32161                           fsr2h	equ	0xFDA
 32162                           fsr2l	equ	0xFD9
 32163                           status	equ	0xFD8
 32164                           
 32165 ;; *************** function _LedPulseStateMachine *****************
 32166 ;; Defined at:
 32167 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32168 ;; Parameters:    Size  Location     Type
 32169 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 32170 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 32171 ;;  Led             1   44[BANK0 ] unsigned char 
 32172 ;; Auto vars:     Size  Location     Type
 32173 ;;		None
 32174 ;; Return value:  Size  Location     Type
 32175 ;;                  1    wreg      unsigned char 
 32176 ;; Registers used:
 32177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32178 ;; Tracked objects:
 32179 ;;		On entry : 0/0
 32180 ;;		On exit  : 0/0
 32181 ;;		Unchanged: 0/0
 32182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32183 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32185 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32186 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32187 ;;Total ram usage:        5 bytes
 32188 ;; Hardware stack levels used:    1
 32189 ;; Hardware stack levels required when called:   12
 32190 ;; This function calls:
 32191 ;;		_Led_SetLedStatus
 32192 ;;		___lwdiv
 32193 ;; This function is called by:
 32194 ;;		_LedStateMachine
 32195 ;; This function uses a non-reentrant model
 32196 ;;
 32197                           
 32198                           	psect	text148
 32199  00341A                     __ptext148:
 32200                           	opt stack 0
 32201  00341A                     _LedPulseStateMachine:
 32202                           	opt stack 14
 32203                           
 32204                           ;led.c: 185: switch (LedPulse->LedPulseState)
 32205                           
 32206                           ; BSR set to: 0
 32207                           ;incstack = 0
 32208  00341A  D05C               	goto	l2102
 32209  00341C                     
 32210                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 32211  00341C  0100               	movlb	0	; () banked
 32212  00341E  EE20 F001          	lfsr	2,1
 32213  003422  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32214  003424  26D9               	addwf	fsr2l,f,c
 32215  003426  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32216  003428  22DA               	addwfc	fsr2h,f,c
 32217  00342A  0E01               	movlw	1
 32218  00342C  6EDF               	movwf	indf2,c
 32219                           
 32220                           ; BSR set to: 0
 32221                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 32222  00342E  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32223  003432  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32224  003436  0E01               	movlw	1
 32225  003438  D036               	goto	L55
 32226  00343A                     
 32227                           ;led.c: 196: LedPulse->LedPulseCounter++;
 32228                           
 32229                           ; BSR set to: 0
 32230  00343A  0100               	movlb	0	; () banked
 32231  00343C  EE20 F002          	lfsr	2,2
 32232  003440  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32233  003442  26D9               	addwf	fsr2l,f,c
 32234  003444  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32235  003446  22DA               	addwfc	fsr2h,f,c
 32236  003448  2ADE               	incf	postinc2,f,c
 32237  00344A  0E00               	movlw	0
 32238  00344C  22DD               	addwfc	postdec2,f,c
 32239                           
 32240                           ; BSR set to: 0
 32241                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 32242  00344E  EE20 F004          	lfsr	2,4
 32243  003452  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32244  003454  26D9               	addwf	fsr2l,f,c
 32245  003456  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32246  003458  22DA               	addwfc	fsr2h,f,c
 32247  00345A  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32248  00345E  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32249  003462  0E00               	movlw	0
 32250  003464  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32251  003466  0E32               	movlw	50
 32252  003468  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32253  00346A  ECD2  F02C         	call	___lwdiv	;wreg free
 32254  00346E  0100               	movlb	0	; () banked
 32255  003470  EE20 F002          	lfsr	2,2
 32256  003474  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32257  003476  26D9               	addwf	fsr2l,f,c
 32258  003478  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32259  00347A  22DA               	addwfc	fsr2h,f,c
 32260  00347C  5183               	movf	?___lwdiv& (0+255),w,b
 32261  00347E  5CDE               	subwf	postinc2,w,c
 32262  003480  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32263  003482  58DE               	subwfb	postinc2,w,c
 32264  003484  A0D8               	btfss	status,0,c
 32265  003486  D034               	goto	l2104
 32266                           
 32267                           ; BSR set to: 0
 32268                           ;led.c: 199: {
 32269                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 32270  003488  EE20 F002          	lfsr	2,2
 32271  00348C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32272  00348E  26D9               	addwf	fsr2l,f,c
 32273  003490  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32274  003492  22DA               	addwfc	fsr2h,f,c
 32275  003494  0E00               	movlw	0
 32276  003496  6EDE               	movwf	postinc2,c
 32277  003498  0E00               	movlw	0
 32278  00349A  6EDD               	movwf	postdec2,c
 32279                           
 32280                           ; BSR set to: 0
 32281                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 32282  00349C  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32283  0034A0  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32284  0034A4  0E02               	movlw	2
 32285  0034A6                     L55:
 32286  0034A6  6EDF               	movwf	indf2,c
 32287                           
 32288                           ; BSR set to: 0
 32289                           ;led.c: 204: }
 32290                           ;led.c: 205: break;
 32291  0034A8  D023               	goto	l2104
 32292  0034AA                     
 32293                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 32294                           
 32295                           ; BSR set to: 0
 32296  0034AA  0100               	movlb	0	; () banked
 32297  0034AC  EE20 F001          	lfsr	2,1
 32298  0034B0  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32299  0034B2  26D9               	addwf	fsr2l,f,c
 32300  0034B4  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32301  0034B6  22DA               	addwfc	fsr2h,f,c
 32302  0034B8  0E00               	movlw	0
 32303  0034BA  6EDF               	movwf	indf2,c
 32304                           
 32305                           ; BSR set to: 0
 32306                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 32307  0034BC  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32308  0034C0  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32309  0034C4  0E00               	movlw	0
 32310  0034C6  6EDF               	movwf	indf2,c
 32311                           
 32312                           ; BSR set to: 0
 32313                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 32314  0034C8  0E00               	movlw	0
 32315  0034CA  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 32316  0034CC  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 32317  0034CE  EC7B  F031         	call	_Led_SetLedStatus
 32318                           
 32319                           ;led.c: 218: }
 32320                           
 32321                           ;led.c: 217: break;
 32322                           
 32323                           ;led.c: 216: default:
 32324                           
 32325                           ;led.c: 214: break;
 32326  0034D2  D00E               	goto	l2104
 32327  0034D4                     l2102:
 32328  0034D4  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32329  0034D8  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32330  0034DC  50DF               	movf	indf2,w,c
 32331                           
 32332                           ; Switch size 1, requested type "space"
 32333                           ; Number of cases is 3, Range of values is 0 to 2
 32334                           ; switch strategies available:
 32335                           ; Name         Instructions Cycles
 32336                           ; simple_byte           10     6 (average)
 32337                           ;	Chosen strategy is simple_byte
 32338  0034DE  0A00               	xorlw	0	; case 0
 32339  0034E0  B4D8               	btfsc	status,2,c
 32340  0034E2  D79C               	goto	l2103
 32341  0034E4  0A01               	xorlw	1	; case 1
 32342  0034E6  B4D8               	btfsc	status,2,c
 32343  0034E8  D7A8               	goto	l2105
 32344  0034EA  0A03               	xorlw	3	; case 2
 32345  0034EC  B4D8               	btfsc	status,2,c
 32346  0034EE  D7DD               	goto	l2107
 32347  0034F0                     l2104:
 32348                           
 32349                           ;led.c: 221: return (LedPulse->LedOutState);
 32350  0034F0  0100               	movlb	0	; () banked
 32351  0034F2  EE20 F001          	lfsr	2,1
 32352  0034F6  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32353  0034F8  26D9               	addwf	fsr2l,f,c
 32354  0034FA  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32355  0034FC  22DA               	addwfc	fsr2h,f,c
 32356  0034FE  50DF               	movf	indf2,w,c
 32357  003500  0012               	return	
 32358  003502                     __end_of_LedPulseStateMachine:
 32359                           	opt stack 0
 32360                           tosu	equ	0xFFF
 32361                           tosh	equ	0xFFE
 32362                           tosl	equ	0xFFD
 32363                           pclath	equ	0xFFA
 32364                           tblptru	equ	0xFF8
 32365                           tblptrh	equ	0xFF7
 32366                           tblptrl	equ	0xFF6
 32367                           tablat	equ	0xFF5
 32368                           prodh	equ	0xFF4
 32369                           prodl	equ	0xFF3
 32370                           intcon	equ	0xFF2
 32371                           intcon2	equ	0xFF1
 32372                           intcon3	equ	0xFF0
 32373                           indf0	equ	0xFEF
 32374                           postinc0	equ	0xFEE
 32375                           plusw0	equ	0xFEB
 32376                           fsr0h	equ	0xFEA
 32377                           fsr0l	equ	0xFE9
 32378                           wreg	equ	0xFE8
 32379                           indf1	equ	0xFE7
 32380                           postinc1	equ	0xFE6
 32381                           postdec1	equ	0xFE5
 32382                           plusw1	equ	0xFE3
 32383                           fsr1h	equ	0xFE2
 32384                           fsr1l	equ	0xFE1
 32385                           indf2	equ	0xFDF
 32386                           postinc2	equ	0xFDE
 32387                           postdec2	equ	0xFDD
 32388                           plusw2	equ	0xFDB
 32389                           fsr2h	equ	0xFDA
 32390                           fsr2l	equ	0xFD9
 32391                           status	equ	0xFD8
 32392                           
 32393 ;; *************** function _Led_SetLedStatus *****************
 32394 ;; Defined at:
 32395 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32396 ;; Parameters:    Size  Location     Type
 32397 ;;  Led             1    wreg     unsigned char 
 32398 ;;  LedSts          1   29[BANK0 ] enum E8952
 32399 ;; Auto vars:     Size  Location     Type
 32400 ;;  Led             1   30[BANK0 ] unsigned char 
 32401 ;; Return value:  Size  Location     Type
 32402 ;;                  1    wreg      void 
 32403 ;; Registers used:
 32404 ;;		wreg, status,2, status,0
 32405 ;; Tracked objects:
 32406 ;;		On entry : 0/0
 32407 ;;		On exit  : 0/0
 32408 ;;		Unchanged: 0/0
 32409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32410 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32411 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32413 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32414 ;;Total ram usage:        2 bytes
 32415 ;; Hardware stack levels used:    1
 32416 ;; Hardware stack levels required when called:   11
 32417 ;; This function calls:
 32418 ;;		Nothing
 32419 ;; This function is called by:
 32420 ;;		_LedPulseStateMachine
 32421 ;;		_LedStateMachine
 32422 ;;		_MyApp_Task
 32423 ;;		_waitSetupCall
 32424 ;;		_blinkForSeconds
 32425 ;; This function uses a non-reentrant model
 32426 ;;
 32427                           
 32428                           	psect	text149
 32429  0062F6                     __ptext149:
 32430                           	opt stack 0
 32431  0062F6                     _Led_SetLedStatus:
 32432                           	opt stack 15
 32433                           
 32434                           ; BSR set to: 0
 32435                           ;incstack = 0
 32436                           ;Led_SetLedStatus@Led stored from wreg
 32437  0062F6  0100               	movlb	0	; () banked
 32438  0062F8  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 32439                           
 32440                           ;led.c: 341: switch (Led)
 32441  0062FA  D009               	goto	l2133
 32442  0062FC                     l2134:
 32443                           
 32444                           ; BSR set to: 0
 32445                           ;led.c: 344: Led1Sts = LedSts;
 32446  0062FC  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 32447                           
 32448                           ;led.c: 345: break;
 32449  006300  0012               	return	
 32450  006302                     l2136:
 32451                           
 32452                           ; BSR set to: 0
 32453                           ;led.c: 348: Led2Sts = LedSts;
 32454  006302  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 32455                           
 32456                           ;led.c: 349: break;
 32457  006306  0012               	return	
 32458  006308                     l2137:
 32459                           
 32460                           ; BSR set to: 0
 32461                           ;led.c: 352: Led3Sts = LedSts;
 32462  006308  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 32463                           
 32464                           ; BSR set to: 0
 32465                           ;led.c: 357: }
 32466                           
 32467                           ; BSR set to: 0
 32468                           ;led.c: 356: break;
 32469                           
 32470                           ;led.c: 355: default:
 32471                           
 32472                           ;led.c: 353: break;
 32473  00630C  0012               	return	
 32474  00630E                     l2133:
 32475                           
 32476                           ; BSR set to: 0
 32477  00630E  0100               	movlb	0	; () banked
 32478  006310  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 32479                           
 32480                           ; Switch size 1, requested type "space"
 32481                           ; Number of cases is 3, Range of values is 1 to 3
 32482                           ; switch strategies available:
 32483                           ; Name         Instructions Cycles
 32484                           ; simple_byte           10     6 (average)
 32485                           ;	Chosen strategy is simple_byte
 32486  006312  0A01               	xorlw	1	; case 1
 32487  006314  B4D8               	btfsc	status,2,c
 32488  006316  D7F2               	goto	l2134
 32489  006318  0A03               	xorlw	3	; case 2
 32490  00631A  B4D8               	btfsc	status,2,c
 32491  00631C  D7F2               	goto	l2136
 32492  00631E  0A01               	xorlw	1	; case 3
 32493  006320  A4D8               	btfss	status,2,c
 32494  006322  0012               	return	
 32495  006324  D7F1               	goto	l2137
 32496  006326                     __end_of_Led_SetLedStatus:
 32497                           	opt stack 0
 32498                           tosu	equ	0xFFF
 32499                           tosh	equ	0xFFE
 32500                           tosl	equ	0xFFD
 32501                           pclath	equ	0xFFA
 32502                           tblptru	equ	0xFF8
 32503                           tblptrh	equ	0xFF7
 32504                           tblptrl	equ	0xFF6
 32505                           tablat	equ	0xFF5
 32506                           prodh	equ	0xFF4
 32507                           prodl	equ	0xFF3
 32508                           intcon	equ	0xFF2
 32509                           intcon2	equ	0xFF1
 32510                           intcon3	equ	0xFF0
 32511                           indf0	equ	0xFEF
 32512                           postinc0	equ	0xFEE
 32513                           plusw0	equ	0xFEB
 32514                           fsr0h	equ	0xFEA
 32515                           fsr0l	equ	0xFE9
 32516                           wreg	equ	0xFE8
 32517                           indf1	equ	0xFE7
 32518                           postinc1	equ	0xFE6
 32519                           postdec1	equ	0xFE5
 32520                           plusw1	equ	0xFE3
 32521                           fsr1h	equ	0xFE2
 32522                           fsr1l	equ	0xFE1
 32523                           indf2	equ	0xFDF
 32524                           postinc2	equ	0xFDE
 32525                           postdec2	equ	0xFDD
 32526                           plusw2	equ	0xFDB
 32527                           fsr2h	equ	0xFDA
 32528                           fsr2l	equ	0xFD9
 32529                           status	equ	0xFD8
 32530                           
 32531 ;; *************** function _LedBlinkStateMachine *****************
 32532 ;; Defined at:
 32533 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32534 ;; Parameters:    Size  Location     Type
 32535 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 32536 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 32537 ;; Auto vars:     Size  Location     Type
 32538 ;;		None
 32539 ;; Return value:  Size  Location     Type
 32540 ;;                  1    wreg      unsigned char 
 32541 ;; Registers used:
 32542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32543 ;; Tracked objects:
 32544 ;;		On entry : 0/0
 32545 ;;		On exit  : 0/0
 32546 ;;		Unchanged: 0/0
 32547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32548 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32550 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32551 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32552 ;;Total ram usage:        4 bytes
 32553 ;; Hardware stack levels used:    1
 32554 ;; Hardware stack levels required when called:   12
 32555 ;; This function calls:
 32556 ;;		___lwdiv
 32557 ;; This function is called by:
 32558 ;;		_LedStateMachine
 32559 ;; This function uses a non-reentrant model
 32560 ;;
 32561                           
 32562                           	psect	text150
 32563  0029C2                     __ptext150:
 32564                           	opt stack 0
 32565  0029C2                     _LedBlinkStateMachine:
 32566                           	opt stack 14
 32567                           
 32568                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 32569                           
 32570                           ; BSR set to: 0
 32571                           ;incstack = 0
 32572  0029C2  D08F               	goto	l2089
 32573  0029C4                     
 32574                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 32575  0029C4  0100               	movlb	0	; () banked
 32576  0029C6  EE20 F008          	lfsr	2,8
 32577  0029CA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32578  0029CC  26D9               	addwf	fsr2l,f,c
 32579  0029CE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32580  0029D0  22DA               	addwfc	fsr2h,f,c
 32581  0029D2  EE10 F001          	lfsr	1,1
 32582  0029D6  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32583  0029D8  26E1               	addwf	fsr1l,f,c
 32584  0029DA  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32585  0029DC  22E2               	addwfc	fsr1h,f,c
 32586  0029DE  CFDF FFE7          	movff	indf2,indf1
 32587                           
 32588                           ; BSR set to: 0
 32589                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 32590  0029E2  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 32591  0029E6  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 32592  0029EA  D040               	goto	L56
 32593  0029EC                     
 32594                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 32595                           
 32596                           ; BSR set to: 0
 32597  0029EC  0100               	movlb	0	; () banked
 32598  0029EE  EE20 F002          	lfsr	2,2
 32599  0029F2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32600  0029F4  26D9               	addwf	fsr2l,f,c
 32601  0029F6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32602  0029F8  22DA               	addwfc	fsr2h,f,c
 32603  0029FA  2ADE               	incf	postinc2,f,c
 32604  0029FC  0E00               	movlw	0
 32605  0029FE  22DD               	addwfc	postdec2,f,c
 32606                           
 32607                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 32608  002A00  EE20 F001          	lfsr	2,1
 32609  002A04  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32610  002A06  26D9               	addwf	fsr2l,f,c
 32611  002A08  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32612  002A0A  22DA               	addwfc	fsr2h,f,c
 32613  002A0C  50DF               	movf	indf2,w,c
 32614  002A0E  A4D8               	btfss	status,2,c
 32615  002A10  D02F               	goto	l2093
 32616                           
 32617                           ; BSR set to: 0
 32618                           ;led.c: 142: {
 32619                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 32620  002A12  EE20 F006          	lfsr	2,6
 32621  002A16  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32622  002A18  26D9               	addwf	fsr2l,f,c
 32623  002A1A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32624  002A1C  22DA               	addwfc	fsr2h,f,c
 32625  002A1E  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32626  002A22  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32627  002A26  0E00               	movlw	0
 32628  002A28  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32629  002A2A  0E32               	movlw	50
 32630  002A2C  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32631  002A2E  ECD2  F02C         	call	___lwdiv	;wreg free
 32632  002A32  0100               	movlb	0	; () banked
 32633  002A34  EE20 F002          	lfsr	2,2
 32634  002A38  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32635  002A3A  26D9               	addwf	fsr2l,f,c
 32636  002A3C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32637  002A3E  22DA               	addwfc	fsr2h,f,c
 32638  002A40  5183               	movf	?___lwdiv& (0+255),w,b
 32639  002A42  5CDE               	subwf	postinc2,w,c
 32640  002A44  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32641  002A46  58DE               	subwfb	postinc2,w,c
 32642  002A48  A0D8               	btfss	status,0,c
 32643  002A4A  D056               	goto	l2091
 32644                           
 32645                           ; BSR set to: 0
 32646                           ;led.c: 145: {
 32647                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 32648  002A4C  EE20 F002          	lfsr	2,2
 32649  002A50  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32650  002A52  26D9               	addwf	fsr2l,f,c
 32651  002A54  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32652  002A56  22DA               	addwfc	fsr2h,f,c
 32653  002A58  0E00               	movlw	0
 32654  002A5A  6EDE               	movwf	postinc2,c
 32655  002A5C  0E00               	movlw	0
 32656  002A5E  6EDD               	movwf	postdec2,c
 32657                           
 32658                           ;led.c: 149: LedBlink->LedOutState = OnState;
 32659  002A60  EE20 F001          	lfsr	2,1
 32660  002A64  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32661  002A66  26D9               	addwf	fsr2l,f,c
 32662  002A68  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32663  002A6A  22DA               	addwfc	fsr2h,f,c
 32664  002A6C                     L56:
 32665  002A6C  0E01               	movlw	1
 32666  002A6E  D037               	goto	L57
 32667  002A70                     l2093:
 32668                           
 32669                           ; BSR set to: 0
 32670                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 32671                           
 32672                           ; BSR set to: 0
 32673  002A70  EE20 F001          	lfsr	2,1
 32674  002A74  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32675  002A76  26D9               	addwf	fsr2l,f,c
 32676  002A78  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32677  002A7A  22DA               	addwfc	fsr2h,f,c
 32678  002A7C  04DE               	decf	postinc2,w,c
 32679  002A7E  A4D8               	btfss	status,2,c
 32680  002A80  D03B               	goto	l2091
 32681                           
 32682                           ; BSR set to: 0
 32683                           ;led.c: 153: {
 32684                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 32685  002A82  EE20 F004          	lfsr	2,4
 32686  002A86  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32687  002A88  26D9               	addwf	fsr2l,f,c
 32688  002A8A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32689  002A8C  22DA               	addwfc	fsr2h,f,c
 32690  002A8E  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32691  002A92  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32692  002A96  0E00               	movlw	0
 32693  002A98  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32694  002A9A  0E32               	movlw	50
 32695  002A9C  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32696  002A9E  ECD2  F02C         	call	___lwdiv	;wreg free
 32697  002AA2  0100               	movlb	0	; () banked
 32698  002AA4  EE20 F002          	lfsr	2,2
 32699  002AA8  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32700  002AAA  26D9               	addwf	fsr2l,f,c
 32701  002AAC  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32702  002AAE  22DA               	addwfc	fsr2h,f,c
 32703  002AB0  5183               	movf	?___lwdiv& (0+255),w,b
 32704  002AB2  5CDE               	subwf	postinc2,w,c
 32705  002AB4  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32706  002AB6  58DE               	subwfb	postinc2,w,c
 32707  002AB8  A0D8               	btfss	status,0,c
 32708  002ABA  D01E               	goto	l2091
 32709                           
 32710                           ; BSR set to: 0
 32711                           ;led.c: 156: {
 32712                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 32713  002ABC  EE20 F002          	lfsr	2,2
 32714  002AC0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32715  002AC2  26D9               	addwf	fsr2l,f,c
 32716  002AC4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32717  002AC6  22DA               	addwfc	fsr2h,f,c
 32718  002AC8  0E00               	movlw	0
 32719  002ACA  6EDE               	movwf	postinc2,c
 32720  002ACC  0E00               	movlw	0
 32721  002ACE  6EDD               	movwf	postdec2,c
 32722                           
 32723                           ;led.c: 160: LedBlink->LedOutState = OffState;
 32724  002AD0  EE20 F001          	lfsr	2,1
 32725  002AD4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32726  002AD6  26D9               	addwf	fsr2l,f,c
 32727  002AD8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32728  002ADA  22DA               	addwfc	fsr2h,f,c
 32729  002ADC  0E00               	movlw	0
 32730  002ADE                     L57:
 32731  002ADE  6EDF               	movwf	indf2,c
 32732                           
 32733                           ; BSR set to: 0
 32734                           ;led.c: 167: }
 32735                           
 32736                           ; BSR set to: 0
 32737                           ;led.c: 166: break;
 32738                           
 32739                           ;led.c: 165: default:
 32740                           
 32741                           ; BSR set to: 0
 32742                           ;led.c: 161: }
 32743                           ;led.c: 162: }
 32744                           ;led.c: 163: break;
 32745                           
 32746                           ; BSR set to: 0
 32747                           
 32748                           ; BSR set to: 0
 32749  002AE0  D00B               	goto	l2091
 32750  002AE2                     l2089:
 32751                           
 32752                           ; BSR set to: 0
 32753  002AE2  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 32754  002AE6  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 32755  002AEA  50DF               	movf	indf2,w,c
 32756                           
 32757                           ; Switch size 1, requested type "space"
 32758                           ; Number of cases is 2, Range of values is 0 to 1
 32759                           ; switch strategies available:
 32760                           ; Name         Instructions Cycles
 32761                           ; simple_byte            7     4 (average)
 32762                           ;	Chosen strategy is simple_byte
 32763  002AEC  0A00               	xorlw	0	; case 0
 32764  002AEE  B4D8               	btfsc	status,2,c
 32765  002AF0  D769               	goto	l2090
 32766  002AF2  0A01               	xorlw	1	; case 1
 32767  002AF4  B4D8               	btfsc	status,2,c
 32768  002AF6  D77A               	goto	l2092
 32769  002AF8                     l2091:
 32770                           
 32771                           ;led.c: 170: return (LedBlink->LedOutState);
 32772  002AF8  0100               	movlb	0	; () banked
 32773  002AFA  EE20 F001          	lfsr	2,1
 32774  002AFE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32775  002B00  26D9               	addwf	fsr2l,f,c
 32776  002B02  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32777  002B04  22DA               	addwfc	fsr2h,f,c
 32778  002B06  50DF               	movf	indf2,w,c
 32779  002B08  0012               	return	
 32780  002B0A                     __end_of_LedBlinkStateMachine:
 32781                           	opt stack 0
 32782                           tosu	equ	0xFFF
 32783                           tosh	equ	0xFFE
 32784                           tosl	equ	0xFFD
 32785                           pclath	equ	0xFFA
 32786                           tblptru	equ	0xFF8
 32787                           tblptrh	equ	0xFF7
 32788                           tblptrl	equ	0xFF6
 32789                           tablat	equ	0xFF5
 32790                           prodh	equ	0xFF4
 32791                           prodl	equ	0xFF3
 32792                           intcon	equ	0xFF2
 32793                           intcon2	equ	0xFF1
 32794                           intcon3	equ	0xFF0
 32795                           indf0	equ	0xFEF
 32796                           postinc0	equ	0xFEE
 32797                           plusw0	equ	0xFEB
 32798                           fsr0h	equ	0xFEA
 32799                           fsr0l	equ	0xFE9
 32800                           wreg	equ	0xFE8
 32801                           indf1	equ	0xFE7
 32802                           postinc1	equ	0xFE6
 32803                           postdec1	equ	0xFE5
 32804                           plusw1	equ	0xFE3
 32805                           fsr1h	equ	0xFE2
 32806                           fsr1l	equ	0xFE1
 32807                           indf2	equ	0xFDF
 32808                           postinc2	equ	0xFDE
 32809                           postdec2	equ	0xFDD
 32810                           plusw2	equ	0xFDB
 32811                           fsr2h	equ	0xFDA
 32812                           fsr2l	equ	0xFD9
 32813                           status	equ	0xFD8
 32814                           
 32815 ;; *************** function ___lwdiv *****************
 32816 ;; Defined at:
 32817 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 32818 ;; Parameters:    Size  Location     Type
 32819 ;;  dividend        2   35[BANK0 ] unsigned int 
 32820 ;;  divisor         2   37[BANK0 ] unsigned int 
 32821 ;; Auto vars:     Size  Location     Type
 32822 ;;  quotient        2   40[BANK0 ] unsigned int 
 32823 ;;  counter         1   39[BANK0 ] unsigned char 
 32824 ;; Return value:  Size  Location     Type
 32825 ;;                  2   35[BANK0 ] unsigned int 
 32826 ;; Registers used:
 32827 ;;		wreg, status,2, status,0
 32828 ;; Tracked objects:
 32829 ;;		On entry : 0/0
 32830 ;;		On exit  : 0/0
 32831 ;;		Unchanged: 0/0
 32832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32833 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32834 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32836 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32837 ;;Total ram usage:        7 bytes
 32838 ;; Hardware stack levels used:    1
 32839 ;; Hardware stack levels required when called:   11
 32840 ;; This function calls:
 32841 ;;		Nothing
 32842 ;; This function is called by:
 32843 ;;		_LedBlinkStateMachine
 32844 ;;		_LedPulseStateMachine
 32845 ;;		_secondsAppTimer
 32846 ;;		_utoa
 32847 ;; This function uses a non-reentrant model
 32848 ;;
 32849                           
 32850                           	psect	text151
 32851  0059A4                     __ptext151:
 32852                           	opt stack 0
 32853  0059A4                     ___lwdiv:
 32854                           	opt stack 14
 32855                           
 32856                           ; BSR set to: 0
 32857                           ;incstack = 0
 32858  0059A4  0E00               	movlw	0
 32859  0059A6  0100               	movlb	0	; () banked
 32860  0059A8  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 32861  0059AA  0E00               	movlw	0
 32862  0059AC  6F88               	movwf	___lwdiv@quotient& (0+255),b
 32863                           
 32864                           ; BSR set to: 0
 32865  0059AE  5185               	movf	___lwdiv@divisor& (0+255),w,b
 32866  0059B0  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 32867  0059B2  B4D8               	btfsc	status,2,c
 32868  0059B4  D01C               	goto	l3280
 32869                           
 32870                           ; BSR set to: 0
 32871  0059B6  0E01               	movlw	1
 32872  0059B8  6F87               	movwf	___lwdiv@counter& (0+255),b
 32873  0059BA  D004               	goto	l3275
 32874  0059BC                     
 32875                           ; BSR set to: 0
 32876                           
 32877                           ; BSR set to: 0
 32878  0059BC  90D8               	bcf	status,0,c
 32879  0059BE  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 32880  0059C0  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 32881  0059C2  2B87               	incf	___lwdiv@counter& (0+255),f,b
 32882  0059C4                     l3275:
 32883                           
 32884                           ; BSR set to: 0
 32885                           
 32886                           ; BSR set to: 0
 32887  0059C4  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 32888  0059C6  D7FA               	goto	l3276
 32889  0059C8                     u11880:
 32890                           
 32891                           ; BSR set to: 0
 32892                           
 32893                           ; BSR set to: 0
 32894                           
 32895                           ; BSR set to: 0
 32896  0059C8  90D8               	bcf	status,0,c
 32897  0059CA  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 32898  0059CC  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 32899                           
 32900                           ; BSR set to: 0
 32901  0059CE  5185               	movf	___lwdiv@divisor& (0+255),w,b
 32902  0059D0  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 32903  0059D2  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 32904  0059D4  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 32905  0059D6  A0D8               	btfss	status,0,c
 32906  0059D8  D005               	goto	l3279
 32907                           
 32908                           ; BSR set to: 0
 32909  0059DA  5185               	movf	___lwdiv@divisor& (0+255),w,b
 32910  0059DC  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 32911  0059DE  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 32912  0059E0  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 32913                           
 32914                           ; BSR set to: 0
 32915  0059E2  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 32916  0059E4                     l3279:
 32917                           
 32918                           ; BSR set to: 0
 32919                           
 32920                           ; BSR set to: 0
 32921  0059E4  90D8               	bcf	status,0,c
 32922  0059E6  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 32923  0059E8  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 32924                           
 32925                           ; BSR set to: 0
 32926  0059EA  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 32927  0059EC  D7ED               	goto	u11880
 32928  0059EE                     l3280:
 32929                           
 32930                           ; BSR set to: 0
 32931                           
 32932                           ; BSR set to: 0
 32933  0059EE  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 32934  0059F2  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 32935                           
 32936                           ; BSR set to: 0
 32937  0059F6  0012               	return		;funcret
 32938  0059F8                     __end_of___lwdiv:
 32939                           	opt stack 0
 32940                           tosu	equ	0xFFF
 32941                           tosh	equ	0xFFE
 32942                           tosl	equ	0xFFD
 32943                           pclath	equ	0xFFA
 32944                           tblptru	equ	0xFF8
 32945                           tblptrh	equ	0xFF7
 32946                           tblptrl	equ	0xFF6
 32947                           tablat	equ	0xFF5
 32948                           prodh	equ	0xFF4
 32949                           prodl	equ	0xFF3
 32950                           intcon	equ	0xFF2
 32951                           intcon2	equ	0xFF1
 32952                           intcon3	equ	0xFF0
 32953                           indf0	equ	0xFEF
 32954                           postinc0	equ	0xFEE
 32955                           plusw0	equ	0xFEB
 32956                           fsr0h	equ	0xFEA
 32957                           fsr0l	equ	0xFE9
 32958                           wreg	equ	0xFE8
 32959                           indf1	equ	0xFE7
 32960                           postinc1	equ	0xFE6
 32961                           postdec1	equ	0xFE5
 32962                           plusw1	equ	0xFE3
 32963                           fsr1h	equ	0xFE2
 32964                           fsr1l	equ	0xFE1
 32965                           indf2	equ	0xFDF
 32966                           postinc2	equ	0xFDE
 32967                           postdec2	equ	0xFDD
 32968                           plusw2	equ	0xFDB
 32969                           fsr2h	equ	0xFDA
 32970                           fsr2l	equ	0xFD9
 32971                           status	equ	0xFD8
 32972                           
 32973 ;; *************** function _OsAlrm_SetOsAlarm *****************
 32974 ;; Defined at:
 32975 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 32976 ;; Parameters:    Size  Location     Type
 32977 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 32978 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 32979 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 32980 ;;		 -> I2cDummyTx(1), 
 32981 ;; Auto vars:     Size  Location     Type
 32982 ;;		None
 32983 ;; Return value:  Size  Location     Type
 32984 ;;                  1    wreg      void 
 32985 ;; Registers used:
 32986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32987 ;; Tracked objects:
 32988 ;;		On entry : 0/0
 32989 ;;		On exit  : 0/0
 32990 ;;		Unchanged: 0/0
 32991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32992 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32995 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32996 ;;Total ram usage:        8 bytes
 32997 ;; Hardware stack levels used:    1
 32998 ;; Hardware stack levels required when called:   12
 32999 ;; This function calls:
 33000 ;;		___wmul
 33001 ;; This function is called by:
 33002 ;;		_I2cSlv_MainTask
 33003 ;; This function uses a non-reentrant model
 33004 ;;
 33005                           
 33006                           	psect	text152
 33007  003FD0                     __ptext152:
 33008                           	opt stack 0
 33009  003FD0                     _OsAlrm_SetOsAlarm:
 33010                           	opt stack 15
 33011                           
 33012                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 33013                           
 33014                           ; BSR set to: 0
 33015                           ;incstack = 0
 33016  003FD0  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 33017  003FD4  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 33018  003FD8  0E00               	movlw	0
 33019  003FDA  0100               	movlb	0	; () banked
 33020  003FDC  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33021  003FDE  0E0B               	movlw	11
 33022  003FE0  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 33023  003FE2  EC01  F032         	call	___wmul	;wreg free
 33024  003FE6  0E00               	movlw	low _OsAlarms
 33025  003FE8  0100               	movlb	0	; () banked
 33026  003FEA  257D               	addwf	?___wmul& (0+255),w,b
 33027  003FEC  6ED9               	movwf	fsr2l,c
 33028  003FEE  0E06               	movlw	high _OsAlarms
 33029  003FF0  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 33030  003FF2  6EDA               	movwf	fsr2h,c
 33031  003FF4  0E01               	movlw	1
 33032  003FF6  6EDF               	movwf	indf2,c
 33033                           
 33034                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 33035  003FF8  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 33036  003FFC  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 33037  004000  0E00               	movlw	0
 33038  004002  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33039  004004  0E0B               	movlw	11
 33040  004006  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 33041  004008  EC01  F032         	call	___wmul	;wreg free
 33042  00400C  0E01               	movlw	1
 33043  00400E  0100               	movlb	0	; () banked
 33044  004010  277D               	addwf	?___wmul& (0+255),f,b
 33045  004012  0E00               	movlw	0
 33046  004014  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 33047  004016  0E00               	movlw	low _OsAlarms
 33048  004018  257D               	addwf	?___wmul& (0+255),w,b
 33049  00401A  6ED9               	movwf	fsr2l,c
 33050  00401C  0E06               	movlw	high _OsAlarms
 33051  00401E  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 33052  004020  6EDA               	movwf	fsr2h,c
 33053  004022  6ADE               	clrf	postinc2,c
 33054  004024  6ADE               	clrf	postinc2,c
 33055  004026  6ADE               	clrf	postinc2,c
 33056  004028  6ADD               	clrf	postdec2,c
 33057                           
 33058                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 33059  00402A  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 33060  00402E  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 33061  004032  0E00               	movlw	0
 33062  004034  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33063  004036  0E0B               	movlw	11
 33064  004038  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 33065  00403A  EC01  F032         	call	___wmul	;wreg free
 33066  00403E  0E05               	movlw	5
 33067  004040  0100               	movlb	0	; () banked
 33068  004042  277D               	addwf	?___wmul& (0+255),f,b
 33069  004044  0E00               	movlw	0
 33070  004046  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 33071  004048  0E00               	movlw	low _OsAlarms
 33072  00404A  257D               	addwf	?___wmul& (0+255),w,b
 33073  00404C  6ED9               	movwf	fsr2l,c
 33074  00404E  0E06               	movlw	high _OsAlarms
 33075  004050  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 33076  004052  6EDA               	movwf	fsr2h,c
 33077  004054  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 33078  004058  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 33079  00405C  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 33080  004060  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 33081                           
 33082                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 33083  004064  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 33084  004068  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 33085  00406C  0E00               	movlw	0
 33086  00406E  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33087  004070  0E0B               	movlw	11
 33088  004072  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 33089  004074  EC01  F032         	call	___wmul	;wreg free
 33090  004078  0E09               	movlw	9
 33091  00407A  0100               	movlb	0	; () banked
 33092  00407C  277D               	addwf	?___wmul& (0+255),f,b
 33093  00407E  0E00               	movlw	0
 33094  004080  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 33095  004082  0E00               	movlw	low _OsAlarms
 33096  004084  257D               	addwf	?___wmul& (0+255),w,b
 33097  004086  6ED9               	movwf	fsr2l,c
 33098  004088  0E06               	movlw	high _OsAlarms
 33099  00408A  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 33100  00408C  6EDA               	movwf	fsr2h,c
 33101  00408E  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 33102  004092  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 33103                           
 33104                           ; BSR set to: 0
 33105  004096  0012               	return		;funcret
 33106  004098                     __end_of_OsAlrm_SetOsAlarm:
 33107                           	opt stack 0
 33108                           tosu	equ	0xFFF
 33109                           tosh	equ	0xFFE
 33110                           tosl	equ	0xFFD
 33111                           pclath	equ	0xFFA
 33112                           tblptru	equ	0xFF8
 33113                           tblptrh	equ	0xFF7
 33114                           tblptrl	equ	0xFF6
 33115                           tablat	equ	0xFF5
 33116                           prodh	equ	0xFF4
 33117                           prodl	equ	0xFF3
 33118                           intcon	equ	0xFF2
 33119                           intcon2	equ	0xFF1
 33120                           intcon3	equ	0xFF0
 33121                           indf0	equ	0xFEF
 33122                           postinc0	equ	0xFEE
 33123                           plusw0	equ	0xFEB
 33124                           fsr0h	equ	0xFEA
 33125                           fsr0l	equ	0xFE9
 33126                           wreg	equ	0xFE8
 33127                           indf1	equ	0xFE7
 33128                           postinc1	equ	0xFE6
 33129                           postdec1	equ	0xFE5
 33130                           plusw1	equ	0xFE3
 33131                           fsr1h	equ	0xFE2
 33132                           fsr1l	equ	0xFE1
 33133                           indf2	equ	0xFDF
 33134                           postinc2	equ	0xFDE
 33135                           postdec2	equ	0xFDD
 33136                           plusw2	equ	0xFDB
 33137                           fsr2h	equ	0xFDA
 33138                           fsr2l	equ	0xFD9
 33139                           status	equ	0xFD8
 33140                           
 33141 ;; *************** function ___wmul *****************
 33142 ;; Defined at:
 33143 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 33144 ;; Parameters:    Size  Location     Type
 33145 ;;  multiplier      2   29[BANK0 ] unsigned int 
 33146 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 33147 ;; Auto vars:     Size  Location     Type
 33148 ;;  product         2   33[BANK0 ] unsigned int 
 33149 ;; Return value:  Size  Location     Type
 33150 ;;                  2   29[BANK0 ] unsigned int 
 33151 ;; Registers used:
 33152 ;;		wreg, status,2, status,0, prodl, prodh
 33153 ;; Tracked objects:
 33154 ;;		On entry : 0/0
 33155 ;;		On exit  : 0/0
 33156 ;;		Unchanged: 0/0
 33157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33158 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33159 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33161 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33162 ;;Total ram usage:        6 bytes
 33163 ;; Hardware stack levels used:    1
 33164 ;; Hardware stack levels required when called:   11
 33165 ;; This function calls:
 33166 ;;		Nothing
 33167 ;; This function is called by:
 33168 ;;		_OsAlrm_SetOsAlarm
 33169 ;;		_secondsAppTimer
 33170 ;;		_atoi
 33171 ;; This function uses a non-reentrant model
 33172 ;;
 33173                           
 33174                           	psect	text153
 33175  006402                     __ptext153:
 33176                           	opt stack 0
 33177  006402                     ___wmul:
 33178                           	opt stack 13
 33179                           
 33180                           ; BSR set to: 0
 33181                           ;incstack = 0
 33182  006402  0100               	movlb	0	; () banked
 33183  006404  517D               	movf	___wmul@multiplier& (0+255),w,b
 33184  006406  037F               	mulwf	___wmul@multiplicand& (0+255),b
 33185  006408  CFF3 F081          	movff	prodl,___wmul@product
 33186  00640C  CFF4 F082          	movff	prodh,___wmul@product+1
 33187  006410  517D               	movf	___wmul@multiplier& (0+255),w,b
 33188  006412  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 33189  006414  50F3               	movf	prodl,w,c
 33190  006416  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 33191  006418  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 33192  00641A  037F               	mulwf	___wmul@multiplicand& (0+255),b
 33193  00641C  50F3               	movf	prodl,w,c
 33194  00641E  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 33195                           
 33196                           ; BSR set to: 0
 33197  006420  C081  F07D         	movff	___wmul@product,?___wmul
 33198  006424  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 33199  006428  0012               	return	
 33200  00642A                     __end_of___wmul:
 33201                           	opt stack 0
 33202                           tosu	equ	0xFFF
 33203                           tosh	equ	0xFFE
 33204                           tosl	equ	0xFFD
 33205                           pclath	equ	0xFFA
 33206                           tblptru	equ	0xFF8
 33207                           tblptrh	equ	0xFF7
 33208                           tblptrl	equ	0xFF6
 33209                           tablat	equ	0xFF5
 33210                           prodh	equ	0xFF4
 33211                           prodl	equ	0xFF3
 33212                           intcon	equ	0xFF2
 33213                           intcon2	equ	0xFF1
 33214                           intcon3	equ	0xFF0
 33215                           indf0	equ	0xFEF
 33216                           postinc0	equ	0xFEE
 33217                           plusw0	equ	0xFEB
 33218                           fsr0h	equ	0xFEA
 33219                           fsr0l	equ	0xFE9
 33220                           wreg	equ	0xFE8
 33221                           indf1	equ	0xFE7
 33222                           postinc1	equ	0xFE6
 33223                           postdec1	equ	0xFE5
 33224                           plusw1	equ	0xFE3
 33225                           fsr1h	equ	0xFE2
 33226                           fsr1l	equ	0xFE1
 33227                           indf2	equ	0xFDF
 33228                           postinc2	equ	0xFDE
 33229                           postdec2	equ	0xFDD
 33230                           plusw2	equ	0xFDB
 33231                           fsr2h	equ	0xFDA
 33232                           fsr2l	equ	0xFD9
 33233                           status	equ	0xFD8
 33234                           
 33235 ;; *************** function _I2c_InitI2cModule *****************
 33236 ;; Defined at:
 33237 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33238 ;; Parameters:    Size  Location     Type
 33239 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 33240 ;;		 -> I2cConfig(10), 
 33241 ;; Auto vars:     Size  Location     Type
 33242 ;;		None
 33243 ;; Return value:  Size  Location     Type
 33244 ;;                  1    wreg      void 
 33245 ;; Registers used:
 33246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33247 ;; Tracked objects:
 33248 ;;		On entry : 0/0
 33249 ;;		On exit  : 0/0
 33250 ;;		Unchanged: 0/0
 33251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33252 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33254 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33255 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33256 ;;Total ram usage:        4 bytes
 33257 ;; Hardware stack levels used:    1
 33258 ;; Hardware stack levels required when called:   13
 33259 ;; This function calls:
 33260 ;;		_SetBaudRate
 33261 ;; This function is called by:
 33262 ;;		_I2cSlv_MainTask
 33263 ;; This function uses a non-reentrant model
 33264 ;;
 33265                           
 33266                           	psect	text154
 33267  0051BE                     __ptext154:
 33268                           	opt stack 0
 33269  0051BE                     _I2c_InitI2cModule:
 33270                           	opt stack 14
 33271                           
 33272                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 33273                           
 33274                           ; BSR set to: 0
 33275                           ;incstack = 0
 33276  0051BE  8295               	bsf	3989,1,c	;volatile
 33277                           
 33278                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 33279  0051C0  8095               	bsf	3989,0,c	;volatile
 33280                           
 33281                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 33282  0051C2  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 33283  0051C6  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 33284  0051CA  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 33285  0051CE  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 33286  0051D2  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 33287  0051D6  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 33288  0051DA  0100               	movlb	0	; () banked
 33289  0051DC  EE20 F004          	lfsr	2,4
 33290  0051E0  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 33291  0051E2  26D9               	addwf	fsr2l,f,c
 33292  0051E4  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 33293  0051E6  22DA               	addwfc	fsr2h,f,c
 33294  0051E8  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 33295  0051EC  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 33296  0051F0  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 33297  0051F4  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 33298  0051F8  EC14  F02E         	call	_SetBaudRate	;wreg free
 33299                           
 33300                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 33301  0051FC  0100               	movlb	0	; () banked
 33302  0051FE  EE20 F008          	lfsr	2,8
 33303  005202  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 33304  005204  26D9               	addwf	fsr2l,f,c
 33305  005206  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 33306  005208  22DA               	addwfc	fsr2h,f,c
 33307  00520A  50DF               	movf	indf2,w,c
 33308  00520C  1272               	iorwf	3954,f,c	;volatile
 33309                           
 33310                           ; BSR set to: 0
 33311                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 33312  00520E  EE20 F009          	lfsr	2,9
 33313  005212  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 33314  005214  26D9               	addwf	fsr2l,f,c
 33315  005216  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 33316  005218  22DA               	addwfc	fsr2h,f,c
 33317  00521A  50DF               	movf	indf2,w,c
 33318  00521C  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 33319  00521E  0E05               	movlw	5
 33320  005220  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 33321  005222                     u14235:
 33322  005222  90D8               	bcf	status,0,c
 33323  005224  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 33324  005226  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 33325  005228  D7FC               	goto	u14235
 33326  00522A  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 33327  00522C  1272               	iorwf	3954,f,c	;volatile
 33328                           
 33329                           ; BSR set to: 0
 33330  00522E  0012               	return		;funcret
 33331  005230                     __end_of_I2c_InitI2cModule:
 33332                           	opt stack 0
 33333                           tosu	equ	0xFFF
 33334                           tosh	equ	0xFFE
 33335                           tosl	equ	0xFFD
 33336                           pclath	equ	0xFFA
 33337                           tblptru	equ	0xFF8
 33338                           tblptrh	equ	0xFF7
 33339                           tblptrl	equ	0xFF6
 33340                           tablat	equ	0xFF5
 33341                           prodh	equ	0xFF4
 33342                           prodl	equ	0xFF3
 33343                           intcon	equ	0xFF2
 33344                           intcon2	equ	0xFF1
 33345                           intcon3	equ	0xFF0
 33346                           indf0	equ	0xFEF
 33347                           postinc0	equ	0xFEE
 33348                           plusw0	equ	0xFEB
 33349                           fsr0h	equ	0xFEA
 33350                           fsr0l	equ	0xFE9
 33351                           wreg	equ	0xFE8
 33352                           indf1	equ	0xFE7
 33353                           postinc1	equ	0xFE6
 33354                           postdec1	equ	0xFE5
 33355                           plusw1	equ	0xFE3
 33356                           fsr1h	equ	0xFE2
 33357                           fsr1l	equ	0xFE1
 33358                           indf2	equ	0xFDF
 33359                           postinc2	equ	0xFDE
 33360                           postdec2	equ	0xFDD
 33361                           plusw2	equ	0xFDB
 33362                           fsr2h	equ	0xFDA
 33363                           fsr2l	equ	0xFD9
 33364                           status	equ	0xFD8
 33365                           
 33366 ;; *************** function _SetBaudRate *****************
 33367 ;; Defined at:
 33368 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33369 ;; Parameters:    Size  Location     Type
 33370 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 33371 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 33372 ;; Auto vars:     Size  Location     Type
 33373 ;;		None
 33374 ;; Return value:  Size  Location     Type
 33375 ;;                  1    wreg      void 
 33376 ;; Registers used:
 33377 ;;		wreg, status,2, status,0, cstack
 33378 ;; Tracked objects:
 33379 ;;		On entry : 0/0
 33380 ;;		On exit  : 0/0
 33381 ;;		Unchanged: 0/0
 33382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33383 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33385 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33386 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33387 ;;Total ram usage:       12 bytes
 33388 ;; Hardware stack levels used:    1
 33389 ;; Hardware stack levels required when called:   12
 33390 ;; This function calls:
 33391 ;;		___lldiv
 33392 ;; This function is called by:
 33393 ;;		_I2c_InitI2cModule
 33394 ;; This function uses a non-reentrant model
 33395 ;;
 33396                           
 33397                           	psect	text155
 33398  005C28                     __ptext155:
 33399                           	opt stack 0
 33400  005C28                     _SetBaudRate:
 33401                           	opt stack 14
 33402                           
 33403                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 33404                           
 33405                           ; BSR set to: 0
 33406                           ;incstack = 0
 33407  005C28  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 33408  005C2C  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 33409  005C30  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 33410  005C34  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 33411  005C38  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 33412  005C3C  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 33413  005C40  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 33414  005C44  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 33415  005C48  0E02               	movlw	2
 33416  005C4A                     u13145:
 33417  005C4A  90D8               	bcf	status,0,c
 33418  005C4C  0100               	movlb	0	; () banked
 33419  005C4E  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 33420  005C50  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 33421  005C52  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 33422  005C54  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 33423  005C56  2EE8               	decfsz	wreg,f,c
 33424  005C58  D7F8               	goto	u13145
 33425  005C5A  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 33426  005C5E  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 33427  005C62  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 33428  005C66  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 33429  005C6A  EC23  F028         	call	___lldiv	;wreg free
 33430  005C6E  0100               	movlb	0	; () banked
 33431  005C70  0589               	decf	?___lldiv& (0+255),w,b
 33432  005C72  6E74               	movwf	3956,c	;volatile
 33433                           
 33434                           ; BSR set to: 0
 33435  005C74  0012               	return		;funcret
 33436  005C76                     __end_of_SetBaudRate:
 33437                           	opt stack 0
 33438                           tosu	equ	0xFFF
 33439                           tosh	equ	0xFFE
 33440                           tosl	equ	0xFFD
 33441                           pclath	equ	0xFFA
 33442                           tblptru	equ	0xFF8
 33443                           tblptrh	equ	0xFF7
 33444                           tblptrl	equ	0xFF6
 33445                           tablat	equ	0xFF5
 33446                           prodh	equ	0xFF4
 33447                           prodl	equ	0xFF3
 33448                           intcon	equ	0xFF2
 33449                           intcon2	equ	0xFF1
 33450                           intcon3	equ	0xFF0
 33451                           indf0	equ	0xFEF
 33452                           postinc0	equ	0xFEE
 33453                           plusw0	equ	0xFEB
 33454                           fsr0h	equ	0xFEA
 33455                           fsr0l	equ	0xFE9
 33456                           wreg	equ	0xFE8
 33457                           indf1	equ	0xFE7
 33458                           postinc1	equ	0xFE6
 33459                           postdec1	equ	0xFE5
 33460                           plusw1	equ	0xFE3
 33461                           fsr1h	equ	0xFE2
 33462                           fsr1l	equ	0xFE1
 33463                           indf2	equ	0xFDF
 33464                           postinc2	equ	0xFDE
 33465                           postdec2	equ	0xFDD
 33466                           plusw2	equ	0xFDB
 33467                           fsr2h	equ	0xFDA
 33468                           fsr2l	equ	0xFD9
 33469                           status	equ	0xFD8
 33470                           
 33471 ;; *************** function ___lldiv *****************
 33472 ;; Defined at:
 33473 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 33474 ;; Parameters:    Size  Location     Type
 33475 ;;  dividend        4   41[BANK0 ] unsigned long 
 33476 ;;  divisor         4   45[BANK0 ] unsigned long 
 33477 ;; Auto vars:     Size  Location     Type
 33478 ;;  quotient        4   49[BANK0 ] unsigned long 
 33479 ;;  counter         1   53[BANK0 ] unsigned char 
 33480 ;; Return value:  Size  Location     Type
 33481 ;;                  4   41[BANK0 ] unsigned long 
 33482 ;; Registers used:
 33483 ;;		wreg, status,2, status,0
 33484 ;; Tracked objects:
 33485 ;;		On entry : 0/0
 33486 ;;		On exit  : 0/0
 33487 ;;		Unchanged: 0/0
 33488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33489 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33490 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33492 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33493 ;;Total ram usage:       13 bytes
 33494 ;; Hardware stack levels used:    1
 33495 ;; Hardware stack levels required when called:   11
 33496 ;; This function calls:
 33497 ;;		Nothing
 33498 ;; This function is called by:
 33499 ;;		_SetBaudRate
 33500 ;;		_Tmr_TmrBPrSet
 33501 ;;		_SetUartBaudRate
 33502 ;; This function uses a non-reentrant model
 33503 ;;
 33504                           
 33505                           	psect	text156
 33506  005046                     __ptext156:
 33507                           	opt stack 0
 33508  005046                     ___lldiv:
 33509                           	opt stack 15
 33510                           
 33511                           ; BSR set to: 0
 33512                           ;incstack = 0
 33513  005046  0E00               	movlw	0
 33514  005048  0100               	movlb	0	; () banked
 33515  00504A  6F91               	movwf	___lldiv@quotient& (0+255),b
 33516  00504C  0E00               	movlw	0
 33517  00504E  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 33518  005050  0E00               	movlw	0
 33519  005052  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 33520  005054  0E00               	movlw	0
 33521  005056  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 33522                           
 33523                           ; BSR set to: 0
 33524  005058  518D               	movf	___lldiv@divisor& (0+255),w,b
 33525  00505A  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 33526  00505C  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 33527  00505E  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 33528  005060  B4D8               	btfsc	status,2,c
 33529  005062  D02A               	goto	l3227
 33530                           
 33531                           ; BSR set to: 0
 33532  005064  0E01               	movlw	1
 33533  005066  6F95               	movwf	___lldiv@counter& (0+255),b
 33534  005068  D006               	goto	l3222
 33535  00506A                     
 33536                           ; BSR set to: 0
 33537                           
 33538                           ; BSR set to: 0
 33539  00506A  90D8               	bcf	status,0,c
 33540  00506C  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 33541  00506E  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 33542  005070  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 33543  005072  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 33544  005074  2B95               	incf	___lldiv@counter& (0+255),f,b
 33545  005076                     l3222:
 33546                           
 33547                           ; BSR set to: 0
 33548                           
 33549                           ; BSR set to: 0
 33550  005076  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 33551  005078  D7F8               	goto	l3223
 33552  00507A                     u12210:
 33553                           
 33554                           ; BSR set to: 0
 33555                           
 33556                           ; BSR set to: 0
 33557                           
 33558                           ; BSR set to: 0
 33559  00507A  90D8               	bcf	status,0,c
 33560  00507C  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 33561  00507E  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 33562  005080  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 33563  005082  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 33564                           
 33565                           ; BSR set to: 0
 33566  005084  518D               	movf	___lldiv@divisor& (0+255),w,b
 33567  005086  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 33568  005088  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 33569  00508A  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 33570  00508C  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 33571  00508E  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 33572  005090  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 33573  005092  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 33574  005094  A0D8               	btfss	status,0,c
 33575  005096  D009               	goto	l3226
 33576                           
 33577                           ; BSR set to: 0
 33578  005098  518D               	movf	___lldiv@divisor& (0+255),w,b
 33579  00509A  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 33580  00509C  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 33581  00509E  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 33582  0050A0  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 33583  0050A2  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 33584  0050A4  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 33585  0050A6  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 33586                           
 33587                           ; BSR set to: 0
 33588  0050A8  8191               	bsf	___lldiv@quotient& (0+255),0,b
 33589  0050AA                     l3226:
 33590                           
 33591                           ; BSR set to: 0
 33592                           
 33593                           ; BSR set to: 0
 33594  0050AA  90D8               	bcf	status,0,c
 33595  0050AC  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 33596  0050AE  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 33597  0050B0  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 33598  0050B2  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 33599                           
 33600                           ; BSR set to: 0
 33601  0050B4  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 33602  0050B6  D7E1               	goto	u12210
 33603  0050B8                     l3227:
 33604                           
 33605                           ; BSR set to: 0
 33606                           
 33607                           ; BSR set to: 0
 33608  0050B8  C091  F089         	movff	___lldiv@quotient,?___lldiv
 33609  0050BC  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 33610  0050C0  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 33611  0050C4  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 33612                           
 33613                           ; BSR set to: 0
 33614  0050C8  0012               	return		;funcret
 33615  0050CA                     __end_of___lldiv:
 33616                           	opt stack 0
 33617                           tosu	equ	0xFFF
 33618                           tosh	equ	0xFFE
 33619                           tosl	equ	0xFFD
 33620                           pclath	equ	0xFFA
 33621                           tblptru	equ	0xFF8
 33622                           tblptrh	equ	0xFF7
 33623                           tblptrl	equ	0xFF6
 33624                           tablat	equ	0xFF5
 33625                           prodh	equ	0xFF4
 33626                           prodl	equ	0xFF3
 33627                           intcon	equ	0xFF2
 33628                           intcon2	equ	0xFF1
 33629                           intcon3	equ	0xFF0
 33630                           indf0	equ	0xFEF
 33631                           postinc0	equ	0xFEE
 33632                           plusw0	equ	0xFEB
 33633                           fsr0h	equ	0xFEA
 33634                           fsr0l	equ	0xFE9
 33635                           wreg	equ	0xFE8
 33636                           indf1	equ	0xFE7
 33637                           postinc1	equ	0xFE6
 33638                           postdec1	equ	0xFE5
 33639                           plusw1	equ	0xFE3
 33640                           fsr1h	equ	0xFE2
 33641                           fsr1l	equ	0xFE1
 33642                           indf2	equ	0xFDF
 33643                           postinc2	equ	0xFDE
 33644                           postdec2	equ	0xFDD
 33645                           plusw2	equ	0xFDB
 33646                           fsr2h	equ	0xFDA
 33647                           fsr2l	equ	0xFD9
 33648                           status	equ	0xFD8
 33649                           
 33650 ;; *************** function _I2cSetConfig *****************
 33651 ;; Defined at:
 33652 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33653 ;; Parameters:    Size  Location     Type
 33654 ;;		None
 33655 ;; Auto vars:     Size  Location     Type
 33656 ;;		None
 33657 ;; Return value:  Size  Location     Type
 33658 ;;                  1    wreg      void 
 33659 ;; Registers used:
 33660 ;;		wreg, status,2
 33661 ;; Tracked objects:
 33662 ;;		On entry : 0/0
 33663 ;;		On exit  : 0/0
 33664 ;;		Unchanged: 0/0
 33665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33670 ;;Total ram usage:        0 bytes
 33671 ;; Hardware stack levels used:    1
 33672 ;; Hardware stack levels required when called:   11
 33673 ;; This function calls:
 33674 ;;		Nothing
 33675 ;; This function is called by:
 33676 ;;		_I2cSlv_MainTask
 33677 ;; This function uses a non-reentrant model
 33678 ;;
 33679                           
 33680                           	psect	text157
 33681  006382                     __ptext157:
 33682                           	opt stack 0
 33683  006382                     _I2cSetConfig:
 33684                           	opt stack 16
 33685                           
 33686                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 33687                           
 33688                           ; BSR set to: 0
 33689                           ;incstack = 0
 33690  006382  0E80               	movlw	128
 33691  006384  0103               	movlb	3	; () banked
 33692  006386  6F4D               	movwf	_I2cConfig& (0+255),b
 33693  006388  0E1A               	movlw	26
 33694  00638A  6F4E               	movwf	(_I2cConfig+1)& (0+255),b
 33695  00638C  0E06               	movlw	6
 33696  00638E  6F4F               	movwf	(_I2cConfig+2)& (0+255),b
 33697  006390  0E00               	movlw	0
 33698  006392  6F50               	movwf	(_I2cConfig+3)& (0+255),b
 33699                           
 33700                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 33701  006394  0E00               	movlw	0
 33702  006396  6F51               	movwf	(_I2cConfig+4)& (0+255),b
 33703  006398  0E6C               	movlw	108
 33704  00639A  6F52               	movwf	(_I2cConfig+5)& (0+255),b
 33705  00639C  0EDC               	movlw	220
 33706  00639E  6F53               	movwf	(_I2cConfig+6)& (0+255),b
 33707  0063A0  0E02               	movlw	2
 33708  0063A2  6F54               	movwf	(_I2cConfig+7)& (0+255),b
 33709                           
 33710                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 33711  0063A4  0E08               	movlw	8
 33712  0063A6  6F55               	movwf	(_I2cConfig+8)& (0+255),b
 33713                           
 33714                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 33715  0063A8  0E01               	movlw	1
 33716  0063AA  6F56               	movwf	(_I2cConfig+9)& (0+255),b
 33717                           
 33718                           ; BSR set to: 3
 33719  0063AC  0012               	return		;funcret
 33720  0063AE                     __end_of_I2cSetConfig:
 33721                           	opt stack 0
 33722                           tosu	equ	0xFFF
 33723                           tosh	equ	0xFFE
 33724                           tosl	equ	0xFFD
 33725                           pclath	equ	0xFFA
 33726                           tblptru	equ	0xFF8
 33727                           tblptrh	equ	0xFF7
 33728                           tblptrl	equ	0xFF6
 33729                           tablat	equ	0xFF5
 33730                           prodh	equ	0xFF4
 33731                           prodl	equ	0xFF3
 33732                           intcon	equ	0xFF2
 33733                           intcon2	equ	0xFF1
 33734                           intcon3	equ	0xFF0
 33735                           indf0	equ	0xFEF
 33736                           postinc0	equ	0xFEE
 33737                           plusw0	equ	0xFEB
 33738                           fsr0h	equ	0xFEA
 33739                           fsr0l	equ	0xFE9
 33740                           wreg	equ	0xFE8
 33741                           indf1	equ	0xFE7
 33742                           postinc1	equ	0xFE6
 33743                           postdec1	equ	0xFE5
 33744                           plusw1	equ	0xFE3
 33745                           fsr1h	equ	0xFE2
 33746                           fsr1l	equ	0xFE1
 33747                           indf2	equ	0xFDF
 33748                           postinc2	equ	0xFDE
 33749                           postdec2	equ	0xFDD
 33750                           plusw2	equ	0xFDB
 33751                           fsr2h	equ	0xFDA
 33752                           fsr2l	equ	0xFD9
 33753                           status	equ	0xFD8
 33754                           
 33755 ;; *************** function _I2cSendMsgSm *****************
 33756 ;; Defined at:
 33757 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33758 ;; Parameters:    Size  Location     Type
 33759 ;;		None
 33760 ;; Auto vars:     Size  Location     Type
 33761 ;;		None
 33762 ;; Return value:  Size  Location     Type
 33763 ;;                  1    wreg      void 
 33764 ;; Registers used:
 33765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33766 ;; Tracked objects:
 33767 ;;		On entry : 0/0
 33768 ;;		On exit  : 0/0
 33769 ;;		Unchanged: 0/0
 33770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33775 ;;Total ram usage:        0 bytes
 33776 ;; Hardware stack levels used:    1
 33777 ;; Hardware stack levels required when called:   13
 33778 ;; This function calls:
 33779 ;;		_I2c_ReadData
 33780 ;;		_I2c_WriteData
 33781 ;;		_ReceiveEvt
 33782 ;; This function is called by:
 33783 ;;		_I2cSlv_MainTask
 33784 ;; This function uses a non-reentrant model
 33785 ;;
 33786                           
 33787                           	psect	text158
 33788  004098                     __ptext158:
 33789                           	opt stack 0
 33790  004098                     _I2cSendMsgSm:
 33791                           	opt stack 14
 33792                           
 33793                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 33794                           ;i2c_slv.c: 122: switch(I2cComState)
 33795                           
 33796                           ; BSR set to: 3
 33797                           ;incstack = 0
 33798  004098  D04F               	goto	l1382
 33799  00409A                     
 33800                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 33801  00409A  0ED7               	movlw	low _I2cWriteDataEvt
 33802  00409C  0100               	movlb	0	; () banked
 33803  00409E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 33804  0040A0  0E00               	movlw	high _I2cWriteDataEvt
 33805  0040A2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 33806  0040A4  ECAA  F031         	call	_ReceiveEvt	;wreg free
 33807  0040A8  0900               	iorlw	0
 33808  0040AA  B4D8               	btfsc	status,2,c
 33809  0040AC  D007               	goto	l1384
 33810                           
 33811                           ;i2c_slv.c: 127: {
 33812                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 33813  0040AE  0E01               	movlw	1
 33814  0040B0  0101               	movlb	1	; () banked
 33815  0040B2  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33816                           
 33817                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 33818  0040B4  0E01               	movlw	1
 33819  0040B6  0100               	movlb	0	; () banked
 33820  0040B8  6FCD               	movwf	_I2cComSts& (0+255),b
 33821                           
 33822                           ;i2c_slv.c: 132: }
 33823  0040BA  0012               	return	
 33824  0040BC                     l1384:
 33825                           
 33826                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 33827                           
 33828                           ; BSR set to: 0
 33829  0040BC  0ED6               	movlw	low _I2cReadDataEvt
 33830  0040BE  0100               	movlb	0	; () banked
 33831  0040C0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 33832  0040C2  0E00               	movlw	high _I2cReadDataEvt
 33833  0040C4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 33834  0040C6  ECAA  F031         	call	_ReceiveEvt	;wreg free
 33835  0040CA  0900               	iorlw	0
 33836  0040CC  B4D8               	btfsc	status,2,c
 33837  0040CE  D007               	goto	l1386
 33838                           
 33839                           ;i2c_slv.c: 134: {
 33840                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 33841  0040D0  0E02               	movlw	2
 33842  0040D2  0101               	movlb	1	; () banked
 33843  0040D4  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33844                           
 33845                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 33846  0040D6  0E02               	movlw	2
 33847  0040D8  0100               	movlb	0	; () banked
 33848  0040DA  6FCD               	movwf	_I2cComSts& (0+255),b
 33849                           
 33850                           ;i2c_slv.c: 139: }
 33851  0040DC  0012               	return	
 33852  0040DE                     l1386:
 33853                           
 33854                           ;i2c_slv.c: 140: else
 33855                           ;i2c_slv.c: 141: {
 33856                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 33857                           
 33858                           ; BSR set to: 0
 33859  0040DE  0E00               	movlw	0
 33860  0040E0  0100               	movlb	0	; () banked
 33861  0040E2  6FCD               	movwf	_I2cComSts& (0+255),b
 33862                           
 33863                           ; BSR set to: 0
 33864                           ;i2c_slv.c: 144: }
 33865                           ;i2c_slv.c: 145: break;
 33866                           
 33867                           ; BSR set to: 0
 33868  0040E4  0012               	return	
 33869  0040E6                     
 33870                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 33871                           
 33872                           ; BSR set to: 0
 33873  0040E6  0E9E               	movlw	low _I2cTxPacket
 33874  0040E8  0100               	movlb	0	; () banked
 33875  0040EA  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 33876  0040EC  0E03               	movlw	high _I2cTxPacket
 33877  0040EE  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 33878  0040F0  ECD3  F010         	call	_I2c_WriteData	;wreg free
 33879  0040F4  0900               	iorlw	0
 33880  0040F6  B4D8               	btfsc	status,2,c
 33881  0040F8  0012               	return	
 33882                           
 33883                           ;i2c_slv.c: 150: {
 33884                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 33885  0040FA  0E03               	movlw	3
 33886  0040FC  0101               	movlb	1	; () banked
 33887  0040FE  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33888                           
 33889                           ; BSR set to: 1
 33890                           ;i2c_slv.c: 153: }
 33891                           ;i2c_slv.c: 154: break;
 33892  004100  0012               	return	
 33893  004102                     
 33894                           ; BSR set to: 1
 33895                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 33896                           
 33897                           ; BSR set to: 1
 33898  004102  0E93               	movlw	low _I2cRxPacket
 33899  004104  0100               	movlb	0	; () banked
 33900  004106  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 33901  004108  0E03               	movlw	high _I2cRxPacket
 33902  00410A  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 33903  00410C  EC8A  F011         	call	_I2c_ReadData	;wreg free
 33904  004110  0900               	iorlw	0
 33905  004112  B4D8               	btfsc	status,2,c
 33906  004114  0012               	return	
 33907                           
 33908                           ;i2c_slv.c: 159: {
 33909                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 33910  004116  0E04               	movlw	4
 33911  004118  0101               	movlb	1	; () banked
 33912  00411A  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33913                           
 33914                           ; BSR set to: 1
 33915                           ;i2c_slv.c: 162: }
 33916                           ;i2c_slv.c: 164: break;
 33917  00411C  0012               	return	
 33918  00411E                     
 33919                           ; BSR set to: 1
 33920                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 33921                           
 33922                           ; BSR set to: 1
 33923  00411E  0E00               	movlw	0
 33924  004120  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33925                           
 33926                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 33927  004122  0E00               	movlw	0
 33928  004124  0100               	movlb	0	; () banked
 33929  004126  6FCD               	movwf	_I2cComSts& (0+255),b
 33930                           
 33931                           ;i2c_slv.c: 171: break;
 33932  004128  0012               	return	
 33933  00412A                     
 33934                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 33935                           
 33936                           ; BSR set to: 0
 33937  00412A  0E00               	movlw	0
 33938  00412C  0101               	movlb	1	; () banked
 33939  00412E  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33940                           
 33941                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 33942  004130  0E00               	movlw	0
 33943  004132  0100               	movlb	0	; () banked
 33944  004134  6FCD               	movwf	_I2cComSts& (0+255),b
 33945                           
 33946                           ; BSR set to: 0
 33947                           ;i2c_slv.c: 182: }
 33948                           
 33949                           ; BSR set to: 0
 33950                           ;i2c_slv.c: 181: break;
 33951                           
 33952                           ;i2c_slv.c: 180: default:
 33953                           
 33954                           ;i2c_slv.c: 178: break;
 33955  004136  0012               	return	
 33956  004138                     l1382:
 33957                           
 33958                           ; BSR set to: 0
 33959  004138  0101               	movlb	1	; () banked
 33960  00413A  51E6               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 33961                           
 33962                           ; Switch size 1, requested type "space"
 33963                           ; Number of cases is 5, Range of values is 0 to 4
 33964                           ; switch strategies available:
 33965                           ; Name         Instructions Cycles
 33966                           ; simple_byte           16     9 (average)
 33967                           ;	Chosen strategy is simple_byte
 33968  00413C  0A00               	xorlw	0	; case 0
 33969  00413E  B4D8               	btfsc	status,2,c
 33970  004140  D7AC               	goto	l1383
 33971  004142  0A01               	xorlw	1	; case 1
 33972  004144  B4D8               	btfsc	status,2,c
 33973  004146  D7CF               	goto	l1389
 33974  004148  0A03               	xorlw	3	; case 2
 33975  00414A  B4D8               	btfsc	status,2,c
 33976  00414C  D7DA               	goto	l1391
 33977  00414E  0A01               	xorlw	1	; case 3
 33978  004150  B4D8               	btfsc	status,2,c
 33979  004152  D7E5               	goto	l1393
 33980  004154  0A07               	xorlw	7	; case 4
 33981  004156  A4D8               	btfss	status,2,c
 33982  004158  0012               	return	
 33983  00415A  D7E7               	goto	l1394
 33984  00415C                     __end_of_I2cSendMsgSm:
 33985                           	opt stack 0
 33986                           tosu	equ	0xFFF
 33987                           tosh	equ	0xFFE
 33988                           tosl	equ	0xFFD
 33989                           pclath	equ	0xFFA
 33990                           tblptru	equ	0xFF8
 33991                           tblptrh	equ	0xFF7
 33992                           tblptrl	equ	0xFF6
 33993                           tablat	equ	0xFF5
 33994                           prodh	equ	0xFF4
 33995                           prodl	equ	0xFF3
 33996                           intcon	equ	0xFF2
 33997                           intcon2	equ	0xFF1
 33998                           intcon3	equ	0xFF0
 33999                           indf0	equ	0xFEF
 34000                           postinc0	equ	0xFEE
 34001                           plusw0	equ	0xFEB
 34002                           fsr0h	equ	0xFEA
 34003                           fsr0l	equ	0xFE9
 34004                           wreg	equ	0xFE8
 34005                           indf1	equ	0xFE7
 34006                           postinc1	equ	0xFE6
 34007                           postdec1	equ	0xFE5
 34008                           plusw1	equ	0xFE3
 34009                           fsr1h	equ	0xFE2
 34010                           fsr1l	equ	0xFE1
 34011                           indf2	equ	0xFDF
 34012                           postinc2	equ	0xFDE
 34013                           postdec2	equ	0xFDD
 34014                           plusw2	equ	0xFDB
 34015                           fsr2h	equ	0xFDA
 34016                           fsr2l	equ	0xFD9
 34017                           status	equ	0xFD8
 34018                           
 34019 ;; *************** function _ReceiveEvt *****************
 34020 ;; Defined at:
 34021 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34022 ;; Parameters:    Size  Location     Type
 34023 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 34024 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 34025 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 34026 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 34027 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 34028 ;;		 -> ActivateRiDetection(1), 
 34029 ;; Auto vars:     Size  Location     Type
 34030 ;;  EventStatus     1   32[BANK0 ] enum E7727
 34031 ;; Return value:  Size  Location     Type
 34032 ;;                  1    wreg      enum E7699
 34033 ;; Registers used:
 34034 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34035 ;; Tracked objects:
 34036 ;;		On entry : 0/0
 34037 ;;		On exit  : 0/0
 34038 ;;		Unchanged: 0/0
 34039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34040 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34041 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34042 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34043 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34044 ;;Total ram usage:        4 bytes
 34045 ;; Hardware stack levels used:    1
 34046 ;; Hardware stack levels required when called:   11
 34047 ;; This function calls:
 34048 ;;		Nothing
 34049 ;; This function is called by:
 34050 ;;		_MdmCntSm
 34051 ;;		_CheckModem
 34052 ;;		_ModemEvtParser
 34053 ;;		_GetSmsSm
 34054 ;;		_SendSmsSm
 34055 ;;		_Mdm_GetSmsData
 34056 ;;		_Mdm_IsSmsReceived
 34057 ;;		_Mdm_IsRinging
 34058 ;;		_GetCallerNumber
 34059 ;;		_InitGprsNetwork
 34060 ;;		_HttpGetMethod
 34061 ;;		_I2cSendMsgSm
 34062 ;;		_I2cSlv_I2cReadMsgSts
 34063 ;;		_RiSm
 34064 ;;		_GsmGprsTerminal
 34065 ;; This function uses a non-reentrant model
 34066 ;;
 34067                           
 34068                           	psect	text159
 34069  006354                     __ptext159:
 34070                           	opt stack 0
 34071  006354                     _ReceiveEvt:
 34072                           	opt stack 13
 34073                           
 34074                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 34075                           
 34076                           ;incstack = 0
 34077  006354  0E00               	movlw	0
 34078  006356  0100               	movlb	0	; () banked
 34079  006358  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 34080                           
 34081                           ; BSR set to: 0
 34082                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 34083  00635A  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 34084  00635E  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 34085  006362  0E02               	movlw	2
 34086  006364  18DE               	xorwf	postinc2,w,c
 34087  006366  A4D8               	btfss	status,2,c
 34088  006368  D008               	goto	l832
 34089                           
 34090                           ; BSR set to: 0
 34091                           ;os_ser.c: 106: {
 34092                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 34093  00636A  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 34094  00636E  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 34095  006372  0E01               	movlw	1
 34096  006374  6EDF               	movwf	indf2,c
 34097                           
 34098                           ; BSR set to: 0
 34099                           ;os_ser.c: 110: EventStatus = EventReceived;
 34100  006376  0E01               	movlw	1
 34101  006378  D001               	goto	L58
 34102  00637A                     l832:
 34103                           
 34104                           ; BSR set to: 0
 34105                           ;os_ser.c: 112: else
 34106                           ;os_ser.c: 113: {
 34107                           ;os_ser.c: 115: EventStatus = EventIdle;
 34108                           
 34109                           ; BSR set to: 0
 34110  00637A  0E00               	movlw	0
 34111  00637C                     L58:
 34112  00637C  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 34113                           
 34114                           ; BSR set to: 0
 34115                           ;os_ser.c: 116: }
 34116                           ;os_ser.c: 119: return(EventStatus);
 34117  00637E  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 34118  006380  0012               	return	
 34119  006382                     __end_of_ReceiveEvt:
 34120                           	opt stack 0
 34121                           tosu	equ	0xFFF
 34122                           tosh	equ	0xFFE
 34123                           tosl	equ	0xFFD
 34124                           pclath	equ	0xFFA
 34125                           tblptru	equ	0xFF8
 34126                           tblptrh	equ	0xFF7
 34127                           tblptrl	equ	0xFF6
 34128                           tablat	equ	0xFF5
 34129                           prodh	equ	0xFF4
 34130                           prodl	equ	0xFF3
 34131                           intcon	equ	0xFF2
 34132                           intcon2	equ	0xFF1
 34133                           intcon3	equ	0xFF0
 34134                           indf0	equ	0xFEF
 34135                           postinc0	equ	0xFEE
 34136                           plusw0	equ	0xFEB
 34137                           fsr0h	equ	0xFEA
 34138                           fsr0l	equ	0xFE9
 34139                           wreg	equ	0xFE8
 34140                           indf1	equ	0xFE7
 34141                           postinc1	equ	0xFE6
 34142                           postdec1	equ	0xFE5
 34143                           plusw1	equ	0xFE3
 34144                           fsr1h	equ	0xFE2
 34145                           fsr1l	equ	0xFE1
 34146                           indf2	equ	0xFDF
 34147                           postinc2	equ	0xFDE
 34148                           postdec2	equ	0xFDD
 34149                           plusw2	equ	0xFDB
 34150                           fsr2h	equ	0xFDA
 34151                           fsr2l	equ	0xFD9
 34152                           status	equ	0xFD8
 34153                           
 34154 ;; *************** function _I2c_WriteData *****************
 34155 ;; Defined at:
 34156 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34157 ;; Parameters:    Size  Location     Type
 34158 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 34159 ;;		 -> I2cTxPacket(5), 
 34160 ;; Auto vars:     Size  Location     Type
 34161 ;;		None
 34162 ;; Return value:  Size  Location     Type
 34163 ;;                  1    wreg      enum E7740
 34164 ;; Registers used:
 34165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34166 ;; Tracked objects:
 34167 ;;		On entry : 0/0
 34168 ;;		On exit  : 0/0
 34169 ;;		Unchanged: 0/0
 34170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34171 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34173 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34174 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34175 ;;Total ram usage:        4 bytes
 34176 ;; Hardware stack levels used:    1
 34177 ;; Hardware stack levels required when called:   12
 34178 ;; This function calls:
 34179 ;;		_CheckAckStatus
 34180 ;;		_CheckTxStatus
 34181 ;;		_StartCondition
 34182 ;;		_StopCondition
 34183 ;;		_WriteByte
 34184 ;; This function is called by:
 34185 ;;		_I2cSendMsgSm
 34186 ;; This function uses a non-reentrant model
 34187 ;;
 34188                           
 34189                           	psect	text160
 34190  0021A6                     __ptext160:
 34191                           	opt stack 0
 34192  0021A6                     _I2c_WriteData:
 34193                           	opt stack 14
 34194                           
 34195                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 34196                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 34197                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 34198                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 34199                           ;i2c_drv.c: 260: switch (I2cWriteState)
 34200                           
 34201                           ; BSR set to: 0
 34202                           ;incstack = 0
 34203  0021A6  D095               	goto	l160
 34204  0021A8                     
 34205                           ;i2c_drv.c: 264: StartCondition();
 34206  0021A8  EC71  F034         	call	_StartCondition	;wreg free
 34207                           
 34208                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 34209  0021AC  0E00               	movlw	0
 34210  0021AE  6E34               	movwf	I2c_WriteData@WriteStatus,c
 34211                           
 34212                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 34213  0021B0  0E01               	movlw	1
 34214  0021B2  D084               	goto	L65
 34215  0021B4                     
 34216                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 34217  0021B4  0100               	movlb	0	; () banked
 34218  0021B6  EE20 F001          	lfsr	2,1
 34219  0021BA  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34220  0021BC  26D9               	addwf	fsr2l,f,c
 34221  0021BE  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34222  0021C0  22DA               	addwfc	fsr2h,f,c
 34223  0021C2  50DF               	movf	indf2,w,c
 34224  0021C4  6F80               	movwf	??_I2c_WriteData& (0+255),b
 34225  0021C6  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 34226  0021CA  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 34227  0021CE  50DF               	movf	indf2,w,c
 34228  0021D0  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 34229  0021D2  90D8               	bcf	status,0,c
 34230  0021D4  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 34231  0021D6  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 34232  0021D8  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 34233  0021DC  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 34234  0021E0  6EDF               	movwf	indf2,c
 34235                           
 34236                           ; BSR set to: 0
 34237                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 34238  0021E2  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 34239  0021E6  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 34240  0021EA  50DF               	movf	indf2,w,c
 34241  0021EC  EC4F  F034         	call	_WriteByte
 34242                           
 34243                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 34244  0021F0  0E02               	movlw	2
 34245  0021F2  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34246  0021F4                     
 34247                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 34248  0021F4  EC59  F034         	call	_CheckTxStatus	;wreg free
 34249  0021F8  0900               	iorlw	0
 34250  0021FA  A4D8               	btfss	status,2,c
 34251  0021FC  D089               	goto	l162
 34252                           
 34253                           ;i2c_drv.c: 282: {
 34254                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 34255  0021FE  0E03               	movlw	3
 34256  002200  D01A               	goto	L67
 34257  002202                     
 34258                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 34259  002202  0100               	movlb	0	; () banked
 34260  002204  EE20 F002          	lfsr	2,2
 34261  002208  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34262  00220A  26D9               	addwf	fsr2l,f,c
 34263  00220C  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34264  00220E  22DA               	addwfc	fsr2h,f,c
 34265  002210  CFDE F080          	movff	postinc2,??_I2c_WriteData
 34266  002214  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 34267  002218  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 34268  00221C  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 34269  002220  50DF               	movf	indf2,w,c
 34270  002222  EC4F  F034         	call	_WriteByte
 34271                           
 34272                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 34273  002226  0E04               	movlw	4
 34274  002228  D049               	goto	L65
 34275  00222A                     
 34276                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 34277  00222A  EC59  F034         	call	_CheckTxStatus	;wreg free
 34278  00222E  0900               	iorlw	0
 34279  002230  A4D8               	btfss	status,2,c
 34280  002232  D06E               	goto	l162
 34281                           
 34282                           ;i2c_drv.c: 300: {
 34283                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 34284  002234  0E05               	movlw	5
 34285  002236                     L67:
 34286  002236  6E36               	movwf	I2c_WriteData@I2cNextState,c
 34287                           
 34288                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 34289  002238  0E08               	movlw	8
 34290  00223A  D040               	goto	L65
 34291  00223C                     
 34292                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 34293  00223C  0100               	movlb	0	; () banked
 34294  00223E  EE20 F004          	lfsr	2,4
 34295  002242  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34296  002244  26D9               	addwf	fsr2l,f,c
 34297  002246  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34298  002248  22DA               	addwfc	fsr2h,f,c
 34299  00224A  50DF               	movf	indf2,w,c
 34300  00224C  B4D8               	btfsc	status,2,c
 34301  00224E  D010               	goto	l170
 34302                           
 34303                           ; BSR set to: 0
 34304                           ;i2c_drv.c: 310: {
 34305                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 34306  002250  EE20 F004          	lfsr	2,4
 34307  002254  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34308  002256  26D9               	addwf	fsr2l,f,c
 34309  002258  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34310  00225A  22DA               	addwfc	fsr2h,f,c
 34311  00225C  06DF               	decf	indf2,f,c
 34312                           
 34313                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 34314  00225E  EE20 F002          	lfsr	2,2
 34315  002262  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34316  002264  26D9               	addwf	fsr2l,f,c
 34317  002266  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34318  002268  22DA               	addwfc	fsr2h,f,c
 34319  00226A  2ADE               	incf	postinc2,f,c
 34320  00226C  0E00               	movlw	0
 34321  00226E  22DD               	addwfc	postdec2,f,c
 34322  002270                     l170:
 34323                           
 34324                           ; BSR set to: 0
 34325                           ;i2c_drv.c: 315: }
 34326                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 34327  002270  EE20 F004          	lfsr	2,4
 34328  002274  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34329  002276  26D9               	addwf	fsr2l,f,c
 34330  002278  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34331  00227A  22DA               	addwfc	fsr2h,f,c
 34332  00227C  50DF               	movf	indf2,w,c
 34333  00227E  A4D8               	btfss	status,2,c
 34334  002280  D002               	goto	l171
 34335                           
 34336                           ; BSR set to: 0
 34337                           ;i2c_drv.c: 319: {
 34338                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 34339  002282  0E06               	movlw	6
 34340  002284  D01B               	goto	L65
 34341  002286                     l171:
 34342                           
 34343                           ; BSR set to: 0
 34344                           ;i2c_drv.c: 323: else
 34345                           ;i2c_drv.c: 324: {
 34346                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 34347                           
 34348                           ; BSR set to: 0
 34349  002286  0E03               	movlw	3
 34350  002288  D019               	goto	L65
 34351  00228A                     
 34352                           ;i2c_drv.c: 332: StopCondition();
 34353                           
 34354                           ; BSR set to: 0
 34355  00228A  EC6F  F034         	call	_StopCondition	;wreg free
 34356                           
 34357                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 34358  00228E  0E07               	movlw	7
 34359  002290  D015               	goto	L65
 34360  002292                     
 34361                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 34362  002292  0E00               	movlw	0
 34363  002294  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34364                           
 34365                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 34366  002296  0E00               	movlw	0
 34367  002298  6E36               	movwf	I2c_WriteData@I2cNextState,c
 34368                           
 34369                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 34370  00229A  0E02               	movlw	2
 34371  00229C  D018               	goto	L66
 34372  00229E                     
 34373                           ;i2c_drv.c: 347: TentativeCounter++;
 34374  00229E  2A35               	incf	I2c_WriteData@TentativeCounter,f,c
 34375                           
 34376                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 34377  0022A0  EC5E  F034         	call	_CheckAckStatus	;wreg free
 34378  0022A4  0900               	iorlw	0
 34379  0022A6  A4D8               	btfss	status,2,c
 34380  0022A8  D005               	goto	l176
 34381                           
 34382                           ;i2c_drv.c: 350: {
 34383                           ;i2c_drv.c: 352: TentativeCounter = 0;
 34384  0022AA  0E00               	movlw	0
 34385  0022AC  6E35               	movwf	I2c_WriteData@TentativeCounter,c
 34386                           
 34387                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 34388  0022AE  C036  F037         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 34389                           
 34390                           ;i2c_drv.c: 355: }
 34391  0022B2  D02E               	goto	l162
 34392  0022B4                     l176:
 34393                           
 34394                           ;i2c_drv.c: 356: else
 34395                           ;i2c_drv.c: 357: {
 34396                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 34397  0022B4  0E02               	movlw	2
 34398  0022B6  6435               	cpfsgt	I2c_WriteData@TentativeCounter,c
 34399  0022B8  D02B               	goto	l162
 34400                           
 34401                           ;i2c_drv.c: 360: {
 34402                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 34403  0022BA  0E09               	movlw	9
 34404  0022BC                     L65:
 34405  0022BC  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34406                           
 34407                           ;i2c_drv.c: 363: }
 34408                           ;i2c_drv.c: 364: }
 34409                           ;i2c_drv.c: 365: break;
 34410  0022BE  D028               	goto	l162
 34411  0022C0                     
 34412                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 34413  0022C0  0E00               	movlw	0
 34414  0022C2  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34415                           
 34416                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 34417  0022C4  0E00               	movlw	0
 34418  0022C6  6E36               	movwf	I2c_WriteData@I2cNextState,c
 34419                           
 34420                           ;i2c_drv.c: 372: TentativeCounter = 0;
 34421  0022C8  0E00               	movlw	0
 34422  0022CA  6E35               	movwf	I2c_WriteData@TentativeCounter,c
 34423                           
 34424                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 34425  0022CC  0E01               	movlw	1
 34426  0022CE                     L66:
 34427  0022CE  6E34               	movwf	I2c_WriteData@WriteStatus,c
 34428                           
 34429                           ;i2c_drv.c: 379: }
 34430                           
 34431                           ;i2c_drv.c: 378: break;
 34432                           
 34433                           ;i2c_drv.c: 377: default:
 34434                           
 34435                           ;i2c_drv.c: 375: break;
 34436  0022D0  D01F               	goto	l162
 34437  0022D2                     l160:
 34438  0022D2  5037               	movf	I2c_WriteData@I2cWriteState,w,c
 34439                           
 34440                           ; Switch size 1, requested type "space"
 34441                           ; Number of cases is 10, Range of values is 0 to 9
 34442                           ; switch strategies available:
 34443                           ; Name         Instructions Cycles
 34444                           ; simple_byte           31    16 (average)
 34445                           ;	Chosen strategy is simple_byte
 34446  0022D4  0A00               	xorlw	0	; case 0
 34447  0022D6  B4D8               	btfsc	status,2,c
 34448  0022D8  D767               	goto	l161
 34449  0022DA  0A01               	xorlw	1	; case 1
 34450  0022DC  B4D8               	btfsc	status,2,c
 34451  0022DE  D76A               	goto	l163
 34452  0022E0  0A03               	xorlw	3	; case 2
 34453  0022E2  B4D8               	btfsc	status,2,c
 34454  0022E4  D787               	goto	l164
 34455  0022E6  0A01               	xorlw	1	; case 3
 34456  0022E8  B4D8               	btfsc	status,2,c
 34457  0022EA  D78B               	goto	l166
 34458  0022EC  0A07               	xorlw	7	; case 4
 34459  0022EE  B4D8               	btfsc	status,2,c
 34460  0022F0  D79C               	goto	l167
 34461  0022F2  0A01               	xorlw	1	; case 5
 34462  0022F4  B4D8               	btfsc	status,2,c
 34463  0022F6  D7A2               	goto	l169
 34464  0022F8  0A03               	xorlw	3	; case 6
 34465  0022FA  B4D8               	btfsc	status,2,c
 34466  0022FC  D7C6               	goto	l173
 34467  0022FE  0A01               	xorlw	1	; case 7
 34468  002300  B4D8               	btfsc	status,2,c
 34469  002302  D7C7               	goto	l174
 34470  002304  0A0F               	xorlw	15	; case 8
 34471  002306  B4D8               	btfsc	status,2,c
 34472  002308  D7CA               	goto	l175
 34473  00230A  0A01               	xorlw	1	; case 9
 34474  00230C  B4D8               	btfsc	status,2,c
 34475  00230E  D7D8               	goto	l179
 34476  002310                     l162:
 34477                           
 34478                           ;i2c_drv.c: 382: return WriteStatus;
 34479  002310  5034               	movf	I2c_WriteData@WriteStatus,w,c
 34480  002312  0012               	return	
 34481  002314                     __end_of_I2c_WriteData:
 34482                           	opt stack 0
 34483                           tosu	equ	0xFFF
 34484                           tosh	equ	0xFFE
 34485                           tosl	equ	0xFFD
 34486                           pclath	equ	0xFFA
 34487                           tblptru	equ	0xFF8
 34488                           tblptrh	equ	0xFF7
 34489                           tblptrl	equ	0xFF6
 34490                           tablat	equ	0xFF5
 34491                           prodh	equ	0xFF4
 34492                           prodl	equ	0xFF3
 34493                           intcon	equ	0xFF2
 34494                           intcon2	equ	0xFF1
 34495                           intcon3	equ	0xFF0
 34496                           indf0	equ	0xFEF
 34497                           postinc0	equ	0xFEE
 34498                           plusw0	equ	0xFEB
 34499                           fsr0h	equ	0xFEA
 34500                           fsr0l	equ	0xFE9
 34501                           wreg	equ	0xFE8
 34502                           indf1	equ	0xFE7
 34503                           postinc1	equ	0xFE6
 34504                           postdec1	equ	0xFE5
 34505                           plusw1	equ	0xFE3
 34506                           fsr1h	equ	0xFE2
 34507                           fsr1l	equ	0xFE1
 34508                           indf2	equ	0xFDF
 34509                           postinc2	equ	0xFDE
 34510                           postdec2	equ	0xFDD
 34511                           plusw2	equ	0xFDB
 34512                           fsr2h	equ	0xFDA
 34513                           fsr2l	equ	0xFD9
 34514                           status	equ	0xFD8
 34515                           
 34516 ;; *************** function _I2c_ReadData *****************
 34517 ;; Defined at:
 34518 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34519 ;; Parameters:    Size  Location     Type
 34520 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 34521 ;;		 -> I2cRxPacket(6), 
 34522 ;; Auto vars:     Size  Location     Type
 34523 ;;		None
 34524 ;; Return value:  Size  Location     Type
 34525 ;;                  1    wreg      enum E7787
 34526 ;; Registers used:
 34527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34528 ;; Tracked objects:
 34529 ;;		On entry : 0/0
 34530 ;;		On exit  : 0/0
 34531 ;;		Unchanged: 0/0
 34532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34533 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34535 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34536 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34537 ;;Total ram usage:        4 bytes
 34538 ;; Hardware stack levels used:    1
 34539 ;; Hardware stack levels required when called:   12
 34540 ;; This function calls:
 34541 ;;		_CheckAckStatus
 34542 ;;		_CheckTxStatus
 34543 ;;		_EnableReceiver
 34544 ;;		_GenerateEvt
 34545 ;;		_ReadByte
 34546 ;;		_SetAckStatus
 34547 ;;		_StartCondition
 34548 ;;		_StopCondition
 34549 ;;		_WriteByte
 34550 ;; This function is called by:
 34551 ;;		_I2cSendMsgSm
 34552 ;; This function uses a non-reentrant model
 34553 ;;
 34554                           
 34555                           	psect	text161
 34556  002314                     __ptext161:
 34557                           	opt stack 0
 34558  002314                     _I2c_ReadData:
 34559                           	opt stack 14
 34560                           
 34561                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 34562                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 34563                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 34564                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 34565                           ;i2c_drv.c: 402: switch (I2cReadState)
 34566                           
 34567                           ;incstack = 0
 34568  002314  D090               	goto	l192
 34569  002316                     
 34570                           ;i2c_drv.c: 406: StartCondition();
 34571  002316  EC71  F034         	call	_StartCondition	;wreg free
 34572                           
 34573                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 34574  00231A  0E00               	movlw	0
 34575  00231C  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34576                           
 34577                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 34578  00231E  0E01               	movlw	1
 34579  002320  D083               	goto	L75
 34580  002322                     
 34581                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 34582  002322  0100               	movlb	0	; () banked
 34583  002324  EE20 F001          	lfsr	2,1
 34584  002328  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34585  00232A  26D9               	addwf	fsr2l,f,c
 34586  00232C  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34587  00232E  22DA               	addwfc	fsr2h,f,c
 34588  002330  50DF               	movf	indf2,w,c
 34589  002332  6F82               	movwf	??_I2c_ReadData& (0+255),b
 34590  002334  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34591  002338  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34592  00233C  50DF               	movf	indf2,w,c
 34593  00233E  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 34594  002340  90D8               	bcf	status,0,c
 34595  002342  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 34596  002344  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 34597  002346  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34598  00234A  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34599  00234E  6EDF               	movwf	indf2,c
 34600                           
 34601                           ; BSR set to: 0
 34602                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 34603  002350  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34604  002354  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34605  002358  50DF               	movf	indf2,w,c
 34606  00235A  EC4F  F034         	call	_WriteByte
 34607                           
 34608                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 34609  00235E  0E02               	movlw	2
 34610  002360  D063               	goto	L75
 34611  002362                     
 34612                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 34613  002362  EC59  F034         	call	_CheckTxStatus	;wreg free
 34614  002366  0900               	iorlw	0
 34615  002368  A4D8               	btfss	status,2,c
 34616  00236A  D081               	goto	l194
 34617                           
 34618                           ;i2c_drv.c: 425: {
 34619                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 34620  00236C  0E03               	movlw	3
 34621  00236E  D05C               	goto	L75
 34622  002370                     
 34623                           ;i2c_drv.c: 433: TentativeCounter++;
 34624  002370  2A31               	incf	I2c_ReadData@TentativeCounter,f,c
 34625                           
 34626                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 34627  002372  EC5E  F034         	call	_CheckAckStatus	;wreg free
 34628  002376  0900               	iorlw	0
 34629  002378  A4D8               	btfss	status,2,c
 34630  00237A  D004               	goto	l199
 34631                           
 34632                           ;i2c_drv.c: 436: {
 34633                           ;i2c_drv.c: 438: TentativeCounter = 0;
 34634  00237C  0E00               	movlw	0
 34635  00237E  6E31               	movwf	I2c_ReadData@TentativeCounter,c
 34636  002380                     
 34637                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 34638  002380  0E04               	movlw	4
 34639  002382  D052               	goto	L75
 34640  002384                     l199:
 34641                           
 34642                           ;i2c_drv.c: 442: else
 34643                           ;i2c_drv.c: 443: {
 34644                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 34645  002384  0E02               	movlw	2
 34646  002386  6431               	cpfsgt	I2c_ReadData@TentativeCounter,c
 34647  002388  D072               	goto	l194
 34648                           
 34649                           ;i2c_drv.c: 446: {
 34650                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 34651  00238A  0E08               	movlw	8
 34652  00238C  D04D               	goto	L75
 34653  00238E                     
 34654                           ;i2c_drv.c: 455: EnableReceiver();
 34655  00238E  EC73  F034         	call	_EnableReceiver	;wreg free
 34656                           
 34657                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 34658  002392  0E05               	movlw	5
 34659  002394  D049               	goto	L75
 34660  002396                     
 34661                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 34662  002396  EC59  F034         	call	_CheckTxStatus	;wreg free
 34663  00239A  0900               	iorlw	0
 34664  00239C  A4D8               	btfss	status,2,c
 34665  00239E  D067               	goto	l194
 34666                           
 34667                           ;i2c_drv.c: 463: {
 34668                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 34669  0023A0  0100               	movlb	0	; () banked
 34670  0023A2  EE20 F002          	lfsr	2,2
 34671  0023A6  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34672  0023A8  26D9               	addwf	fsr2l,f,c
 34673  0023AA  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34674  0023AC  22DA               	addwfc	fsr2h,f,c
 34675  0023AE  CFDE F082          	movff	postinc2,??_I2c_ReadData
 34676  0023B2  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 34677  0023B6  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 34678  0023BA  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 34679  0023BE  EC54  F034         	call	_ReadByte	;wreg free
 34680  0023C2  6EDF               	movwf	indf2,c
 34681                           
 34682                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 34683  0023C4  0100               	movlb	0	; () banked
 34684  0023C6  EE20 F002          	lfsr	2,2
 34685  0023CA  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34686  0023CC  26D9               	addwf	fsr2l,f,c
 34687  0023CE  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34688  0023D0  22DA               	addwfc	fsr2h,f,c
 34689  0023D2  2ADE               	incf	postinc2,f,c
 34690  0023D4  0E00               	movlw	0
 34691  0023D6  22DD               	addwfc	postdec2,f,c
 34692                           
 34693                           ; BSR set to: 0
 34694                           ;i2c_drv.c: 469: DataCounter++;
 34695  0023D8  2A32               	incf	I2c_ReadData@DataCounter,f,c
 34696                           
 34697                           ; BSR set to: 0
 34698                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 34699  0023DA  0E06               	movlw	6
 34700  0023DC  D025               	goto	L75
 34701  0023DE                     
 34702                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 34703                           
 34704                           ; BSR set to: 0
 34705  0023DE  0100               	movlb	0	; () banked
 34706  0023E0  EE20 F004          	lfsr	2,4
 34707  0023E4  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34708  0023E6  26D9               	addwf	fsr2l,f,c
 34709  0023E8  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34710  0023EA  22DA               	addwfc	fsr2h,f,c
 34711  0023EC  50DE               	movf	postinc2,w,c
 34712  0023EE  5C32               	subwf	I2c_ReadData@DataCounter,w,c
 34713  0023F0  A0D8               	btfss	status,0,c
 34714  0023F2  D008               	goto	l206
 34715                           
 34716                           ; BSR set to: 0
 34717                           ;i2c_drv.c: 478: {
 34718                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 34719  0023F4  0E01               	movlw	1
 34720  0023F6  ECE3  F033         	call	_SetAckStatus
 34721                           
 34722                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 34723  0023FA  0E07               	movlw	7
 34724  0023FC  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34725                           
 34726                           ;i2c_drv.c: 484: DataCounter = 0;
 34727  0023FE  0E00               	movlw	0
 34728  002400  6E32               	movwf	I2c_ReadData@DataCounter,c
 34729                           
 34730                           ;i2c_drv.c: 485: }
 34731  002402  D035               	goto	l194
 34732  002404                     l206:
 34733                           
 34734                           ;i2c_drv.c: 486: else
 34735                           ;i2c_drv.c: 487: {
 34736                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 34737  002404  0E00               	movlw	0
 34738  002406  ECE3  F033         	call	_SetAckStatus
 34739  00240A  D7BA               	goto	L76
 34740  00240C                     
 34741                           ;i2c_drv.c: 497: StopCondition();
 34742  00240C  EC6F  F034         	call	_StopCondition	;wreg free
 34743                           
 34744                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 34745  002410  0E02               	movlw	2
 34746  002412  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34747                           
 34748                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 34749  002414  0E05               	movlw	5
 34750  002416  0100               	movlb	0	; () banked
 34751  002418  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 34752  00241A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 34753  00241C  0E00               	movlw	0
 34754  00241E  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34755  002420  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 34756  002422  EC9F  F033         	call	_GenerateEvt	;wreg free
 34757                           
 34758                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 34759  002426  0E00               	movlw	0
 34760  002428                     L75:
 34761  002428  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34762                           
 34763                           ;i2c_drv.c: 504: break;
 34764  00242A  D021               	goto	l194
 34765  00242C                     
 34766                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 34767  00242C  0E00               	movlw	0
 34768  00242E  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34769                           
 34770                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 34771  002430  0E01               	movlw	1
 34772  002432  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34773                           
 34774                           ;i2c_drv.c: 515: }
 34775                           
 34776                           ;i2c_drv.c: 514: break;
 34777                           
 34778                           ;i2c_drv.c: 513: default:
 34779                           
 34780                           ;i2c_drv.c: 511: break;
 34781  002434  D01C               	goto	l194
 34782  002436                     l192:
 34783  002436  5033               	movf	I2c_ReadData@I2cReadState,w,c
 34784                           
 34785                           ; Switch size 1, requested type "space"
 34786                           ; Number of cases is 9, Range of values is 0 to 8
 34787                           ; switch strategies available:
 34788                           ; Name         Instructions Cycles
 34789                           ; simple_byte           28    15 (average)
 34790                           ;	Chosen strategy is simple_byte
 34791  002438  0A00               	xorlw	0	; case 0
 34792  00243A  B4D8               	btfsc	status,2,c
 34793  00243C  D76C               	goto	l193
 34794  00243E  0A01               	xorlw	1	; case 1
 34795  002440  B4D8               	btfsc	status,2,c
 34796  002442  D76F               	goto	l195
 34797  002444  0A03               	xorlw	3	; case 2
 34798  002446  B4D8               	btfsc	status,2,c
 34799  002448  D78C               	goto	l196
 34800  00244A  0A01               	xorlw	1	; case 3
 34801  00244C  B4D8               	btfsc	status,2,c
 34802  00244E  D790               	goto	l198
 34803  002450  0A07               	xorlw	7	; case 4
 34804  002452  B4D8               	btfsc	status,2,c
 34805  002454  D79C               	goto	l202
 34806  002456  0A01               	xorlw	1	; case 5
 34807  002458  B4D8               	btfsc	status,2,c
 34808  00245A  D79D               	goto	l203
 34809  00245C  0A03               	xorlw	3	; case 6
 34810  00245E  B4D8               	btfsc	status,2,c
 34811  002460  D7BE               	goto	l205
 34812  002462  0A01               	xorlw	1	; case 7
 34813  002464  B4D8               	btfsc	status,2,c
 34814  002466  D7D2               	goto	l208
 34815  002468  0A0F               	xorlw	15	; case 8
 34816  00246A  B4D8               	btfsc	status,2,c
 34817  00246C  D7DF               	goto	l209
 34818  00246E                     l194:
 34819                           
 34820                           ;i2c_drv.c: 518: return ReadStatus;
 34821  00246E  5030               	movf	I2c_ReadData@ReadStatus,w,c
 34822  002470  0012               	return	
 34823  002472                     __end_of_I2c_ReadData:
 34824                           	opt stack 0
 34825                           tosu	equ	0xFFF
 34826                           tosh	equ	0xFFE
 34827                           tosl	equ	0xFFD
 34828                           pclath	equ	0xFFA
 34829                           tblptru	equ	0xFF8
 34830                           tblptrh	equ	0xFF7
 34831                           tblptrl	equ	0xFF6
 34832                           tablat	equ	0xFF5
 34833                           prodh	equ	0xFF4
 34834                           prodl	equ	0xFF3
 34835                           intcon	equ	0xFF2
 34836                           intcon2	equ	0xFF1
 34837                           intcon3	equ	0xFF0
 34838                           indf0	equ	0xFEF
 34839                           postinc0	equ	0xFEE
 34840                           plusw0	equ	0xFEB
 34841                           fsr0h	equ	0xFEA
 34842                           fsr0l	equ	0xFE9
 34843                           wreg	equ	0xFE8
 34844                           indf1	equ	0xFE7
 34845                           postinc1	equ	0xFE6
 34846                           postdec1	equ	0xFE5
 34847                           plusw1	equ	0xFE3
 34848                           fsr1h	equ	0xFE2
 34849                           fsr1l	equ	0xFE1
 34850                           indf2	equ	0xFDF
 34851                           postinc2	equ	0xFDE
 34852                           postdec2	equ	0xFDD
 34853                           plusw2	equ	0xFDB
 34854                           fsr2h	equ	0xFDA
 34855                           fsr2l	equ	0xFD9
 34856                           status	equ	0xFD8
 34857                           
 34858 ;; *************** function _WriteByte *****************
 34859 ;; Defined at:
 34860 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34861 ;; Parameters:    Size  Location     Type
 34862 ;;  Byte            1    wreg     unsigned char 
 34863 ;; Auto vars:     Size  Location     Type
 34864 ;;  Byte            1   29[BANK0 ] unsigned char 
 34865 ;; Return value:  Size  Location     Type
 34866 ;;                  1    wreg      void 
 34867 ;; Registers used:
 34868 ;;		wreg
 34869 ;; Tracked objects:
 34870 ;;		On entry : 0/0
 34871 ;;		On exit  : 0/0
 34872 ;;		Unchanged: 0/0
 34873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34877 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34878 ;;Total ram usage:        1 bytes
 34879 ;; Hardware stack levels used:    1
 34880 ;; Hardware stack levels required when called:   11
 34881 ;; This function calls:
 34882 ;;		Nothing
 34883 ;; This function is called by:
 34884 ;;		_I2c_WriteData
 34885 ;;		_I2c_ReadData
 34886 ;; This function uses a non-reentrant model
 34887 ;;
 34888                           
 34889                           	psect	text162
 34890  00689E                     __ptext162:
 34891                           	opt stack 0
 34892  00689E                     _WriteByte:
 34893                           	opt stack 14
 34894                           
 34895                           ;incstack = 0
 34896                           ;WriteByte@Byte stored from wreg
 34897  00689E  0100               	movlb	0	; () banked
 34898  0068A0  6F7D               	movwf	WriteByte@Byte& (0+255),b
 34899                           
 34900                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 34901  0068A2  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 34902  0068A6  0012               	return		;funcret
 34903  0068A8                     __end_of_WriteByte:
 34904                           	opt stack 0
 34905                           tosu	equ	0xFFF
 34906                           tosh	equ	0xFFE
 34907                           tosl	equ	0xFFD
 34908                           pclath	equ	0xFFA
 34909                           tblptru	equ	0xFF8
 34910                           tblptrh	equ	0xFF7
 34911                           tblptrl	equ	0xFF6
 34912                           tablat	equ	0xFF5
 34913                           prodh	equ	0xFF4
 34914                           prodl	equ	0xFF3
 34915                           intcon	equ	0xFF2
 34916                           intcon2	equ	0xFF1
 34917                           intcon3	equ	0xFF0
 34918                           indf0	equ	0xFEF
 34919                           postinc0	equ	0xFEE
 34920                           plusw0	equ	0xFEB
 34921                           fsr0h	equ	0xFEA
 34922                           fsr0l	equ	0xFE9
 34923                           wreg	equ	0xFE8
 34924                           indf1	equ	0xFE7
 34925                           postinc1	equ	0xFE6
 34926                           postdec1	equ	0xFE5
 34927                           plusw1	equ	0xFE3
 34928                           fsr1h	equ	0xFE2
 34929                           fsr1l	equ	0xFE1
 34930                           indf2	equ	0xFDF
 34931                           postinc2	equ	0xFDE
 34932                           postdec2	equ	0xFDD
 34933                           plusw2	equ	0xFDB
 34934                           fsr2h	equ	0xFDA
 34935                           fsr2l	equ	0xFD9
 34936                           status	equ	0xFD8
 34937                           
 34938 ;; *************** function _StopCondition *****************
 34939 ;; Defined at:
 34940 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34941 ;; Parameters:    Size  Location     Type
 34942 ;;		None
 34943 ;; Auto vars:     Size  Location     Type
 34944 ;;		None
 34945 ;; Return value:  Size  Location     Type
 34946 ;;                  1    wreg      void 
 34947 ;; Registers used:
 34948 ;;		status,2, status,0
 34949 ;; Tracked objects:
 34950 ;;		On entry : 0/0
 34951 ;;		On exit  : 0/0
 34952 ;;		Unchanged: 0/0
 34953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34958 ;;Total ram usage:        0 bytes
 34959 ;; Hardware stack levels used:    1
 34960 ;; Hardware stack levels required when called:   11
 34961 ;; This function calls:
 34962 ;;		Nothing
 34963 ;; This function is called by:
 34964 ;;		_I2c_WriteData
 34965 ;;		_I2c_ReadData
 34966 ;; This function uses a non-reentrant model
 34967 ;;
 34968                           
 34969                           	psect	text163
 34970  0068DE                     __ptext163:
 34971                           	opt stack 0
 34972  0068DE                     _StopCondition:
 34973                           	opt stack 14
 34974                           
 34975                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 34976                           
 34977                           ;incstack = 0
 34978  0068DE  8471               	bsf	3953,2,c	;volatile
 34979  0068E0  0012               	return		;funcret
 34980  0068E2                     __end_of_StopCondition:
 34981                           	opt stack 0
 34982                           tosu	equ	0xFFF
 34983                           tosh	equ	0xFFE
 34984                           tosl	equ	0xFFD
 34985                           pclath	equ	0xFFA
 34986                           tblptru	equ	0xFF8
 34987                           tblptrh	equ	0xFF7
 34988                           tblptrl	equ	0xFF6
 34989                           tablat	equ	0xFF5
 34990                           prodh	equ	0xFF4
 34991                           prodl	equ	0xFF3
 34992                           intcon	equ	0xFF2
 34993                           intcon2	equ	0xFF1
 34994                           intcon3	equ	0xFF0
 34995                           indf0	equ	0xFEF
 34996                           postinc0	equ	0xFEE
 34997                           plusw0	equ	0xFEB
 34998                           fsr0h	equ	0xFEA
 34999                           fsr0l	equ	0xFE9
 35000                           wreg	equ	0xFE8
 35001                           indf1	equ	0xFE7
 35002                           postinc1	equ	0xFE6
 35003                           postdec1	equ	0xFE5
 35004                           plusw1	equ	0xFE3
 35005                           fsr1h	equ	0xFE2
 35006                           fsr1l	equ	0xFE1
 35007                           indf2	equ	0xFDF
 35008                           postinc2	equ	0xFDE
 35009                           postdec2	equ	0xFDD
 35010                           plusw2	equ	0xFDB
 35011                           fsr2h	equ	0xFDA
 35012                           fsr2l	equ	0xFD9
 35013                           status	equ	0xFD8
 35014                           
 35015 ;; *************** function _StartCondition *****************
 35016 ;; Defined at:
 35017 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35018 ;; Parameters:    Size  Location     Type
 35019 ;;		None
 35020 ;; Auto vars:     Size  Location     Type
 35021 ;;		None
 35022 ;; Return value:  Size  Location     Type
 35023 ;;                  1    wreg      void 
 35024 ;; Registers used:
 35025 ;;		status,2, status,0
 35026 ;; Tracked objects:
 35027 ;;		On entry : 0/0
 35028 ;;		On exit  : 0/0
 35029 ;;		Unchanged: 0/0
 35030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35035 ;;Total ram usage:        0 bytes
 35036 ;; Hardware stack levels used:    1
 35037 ;; Hardware stack levels required when called:   11
 35038 ;; This function calls:
 35039 ;;		Nothing
 35040 ;; This function is called by:
 35041 ;;		_I2c_WriteData
 35042 ;;		_I2c_ReadData
 35043 ;; This function uses a non-reentrant model
 35044 ;;
 35045                           
 35046                           	psect	text164
 35047  0068E2                     __ptext164:
 35048                           	opt stack 0
 35049  0068E2                     _StartCondition:
 35050                           	opt stack 14
 35051                           
 35052                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 35053                           
 35054                           ;incstack = 0
 35055  0068E2  8071               	bsf	3953,0,c	;volatile
 35056  0068E4  0012               	return		;funcret
 35057  0068E6                     __end_of_StartCondition:
 35058                           	opt stack 0
 35059                           tosu	equ	0xFFF
 35060                           tosh	equ	0xFFE
 35061                           tosl	equ	0xFFD
 35062                           pclath	equ	0xFFA
 35063                           tblptru	equ	0xFF8
 35064                           tblptrh	equ	0xFF7
 35065                           tblptrl	equ	0xFF6
 35066                           tablat	equ	0xFF5
 35067                           prodh	equ	0xFF4
 35068                           prodl	equ	0xFF3
 35069                           intcon	equ	0xFF2
 35070                           intcon2	equ	0xFF1
 35071                           intcon3	equ	0xFF0
 35072                           indf0	equ	0xFEF
 35073                           postinc0	equ	0xFEE
 35074                           plusw0	equ	0xFEB
 35075                           fsr0h	equ	0xFEA
 35076                           fsr0l	equ	0xFE9
 35077                           wreg	equ	0xFE8
 35078                           indf1	equ	0xFE7
 35079                           postinc1	equ	0xFE6
 35080                           postdec1	equ	0xFE5
 35081                           plusw1	equ	0xFE3
 35082                           fsr1h	equ	0xFE2
 35083                           fsr1l	equ	0xFE1
 35084                           indf2	equ	0xFDF
 35085                           postinc2	equ	0xFDE
 35086                           postdec2	equ	0xFDD
 35087                           plusw2	equ	0xFDB
 35088                           fsr2h	equ	0xFDA
 35089                           fsr2l	equ	0xFD9
 35090                           status	equ	0xFD8
 35091                           
 35092 ;; *************** function _SetAckStatus *****************
 35093 ;; Defined at:
 35094 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35095 ;; Parameters:    Size  Location     Type
 35096 ;;  AckSts          1    wreg     unsigned char 
 35097 ;; Auto vars:     Size  Location     Type
 35098 ;;  AckSts          1   29[BANK0 ] unsigned char 
 35099 ;; Return value:  Size  Location     Type
 35100 ;;                  1    wreg      void 
 35101 ;; Registers used:
 35102 ;;		wreg
 35103 ;; Tracked objects:
 35104 ;;		On entry : 0/0
 35105 ;;		On exit  : 0/0
 35106 ;;		Unchanged: 0/0
 35107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35109 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35111 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35112 ;;Total ram usage:        1 bytes
 35113 ;; Hardware stack levels used:    1
 35114 ;; Hardware stack levels required when called:   11
 35115 ;; This function calls:
 35116 ;;		Nothing
 35117 ;; This function is called by:
 35118 ;;		_I2c_ReadData
 35119 ;; This function uses a non-reentrant model
 35120 ;;
 35121                           
 35122                           	psect	text165
 35123  0067C6                     __ptext165:
 35124                           	opt stack 0
 35125  0067C6                     _SetAckStatus:
 35126                           	opt stack 14
 35127                           
 35128                           ;incstack = 0
 35129                           ;SetAckStatus@AckSts stored from wreg
 35130  0067C6  0100               	movlb	0	; () banked
 35131  0067C8  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 35132                           
 35133                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 35134  0067CA  0100               	movlb	0	; () banked
 35135  0067CC  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 35136  0067CE  D002               	bra	u12385
 35137  0067D0  9A71               	bcf	3953,5,c	;volatile
 35138  0067D2  D001               	bra	u12386
 35139  0067D4                     u12385:
 35140  0067D4  8A71               	bsf	3953,5,c	;volatile
 35141  0067D6                     u12386:
 35142                           
 35143                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 35144  0067D6  8871               	bsf	3953,4,c	;volatile
 35145  0067D8  0012               	return		;funcret
 35146  0067DA                     __end_of_SetAckStatus:
 35147                           	opt stack 0
 35148                           tosu	equ	0xFFF
 35149                           tosh	equ	0xFFE
 35150                           tosl	equ	0xFFD
 35151                           pclath	equ	0xFFA
 35152                           tblptru	equ	0xFF8
 35153                           tblptrh	equ	0xFF7
 35154                           tblptrl	equ	0xFF6
 35155                           tablat	equ	0xFF5
 35156                           prodh	equ	0xFF4
 35157                           prodl	equ	0xFF3
 35158                           intcon	equ	0xFF2
 35159                           intcon2	equ	0xFF1
 35160                           intcon3	equ	0xFF0
 35161                           indf0	equ	0xFEF
 35162                           postinc0	equ	0xFEE
 35163                           plusw0	equ	0xFEB
 35164                           fsr0h	equ	0xFEA
 35165                           fsr0l	equ	0xFE9
 35166                           wreg	equ	0xFE8
 35167                           indf1	equ	0xFE7
 35168                           postinc1	equ	0xFE6
 35169                           postdec1	equ	0xFE5
 35170                           plusw1	equ	0xFE3
 35171                           fsr1h	equ	0xFE2
 35172                           fsr1l	equ	0xFE1
 35173                           indf2	equ	0xFDF
 35174                           postinc2	equ	0xFDE
 35175                           postdec2	equ	0xFDD
 35176                           plusw2	equ	0xFDB
 35177                           fsr2h	equ	0xFDA
 35178                           fsr2l	equ	0xFD9
 35179                           status	equ	0xFD8
 35180                           
 35181 ;; *************** function _ReadByte *****************
 35182 ;; Defined at:
 35183 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35184 ;; Parameters:    Size  Location     Type
 35185 ;;		None
 35186 ;; Auto vars:     Size  Location     Type
 35187 ;;  Byte            1   29[BANK0 ] unsigned char 
 35188 ;; Return value:  Size  Location     Type
 35189 ;;                  1    wreg      unsigned char 
 35190 ;; Registers used:
 35191 ;;		wreg, status,2
 35192 ;; Tracked objects:
 35193 ;;		On entry : 0/0
 35194 ;;		On exit  : 0/0
 35195 ;;		Unchanged: 0/0
 35196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35198 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35200 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35201 ;;Total ram usage:        1 bytes
 35202 ;; Hardware stack levels used:    1
 35203 ;; Hardware stack levels required when called:   11
 35204 ;; This function calls:
 35205 ;;		Nothing
 35206 ;; This function is called by:
 35207 ;;		_I2c_ReadData
 35208 ;; This function uses a non-reentrant model
 35209 ;;
 35210                           
 35211                           	psect	text166
 35212  0068A8                     __ptext166:
 35213                           	opt stack 0
 35214  0068A8                     _ReadByte:
 35215                           	opt stack 14
 35216                           
 35217                           ;i2c_drv.c: 207: UINT8 Byte;
 35218                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 35219                           
 35220                           ;incstack = 0
 35221  0068A8  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 35222                           
 35223                           ;i2c_drv.c: 213: return Byte;
 35224  0068AC  0100               	movlb	0	; () banked
 35225  0068AE  517D               	movf	ReadByte@Byte& (0+255),w,b
 35226  0068B0  0012               	return	
 35227  0068B2                     __end_of_ReadByte:
 35228                           	opt stack 0
 35229                           tosu	equ	0xFFF
 35230                           tosh	equ	0xFFE
 35231                           tosl	equ	0xFFD
 35232                           pclath	equ	0xFFA
 35233                           tblptru	equ	0xFF8
 35234                           tblptrh	equ	0xFF7
 35235                           tblptrl	equ	0xFF6
 35236                           tablat	equ	0xFF5
 35237                           prodh	equ	0xFF4
 35238                           prodl	equ	0xFF3
 35239                           intcon	equ	0xFF2
 35240                           intcon2	equ	0xFF1
 35241                           intcon3	equ	0xFF0
 35242                           indf0	equ	0xFEF
 35243                           postinc0	equ	0xFEE
 35244                           plusw0	equ	0xFEB
 35245                           fsr0h	equ	0xFEA
 35246                           fsr0l	equ	0xFE9
 35247                           wreg	equ	0xFE8
 35248                           indf1	equ	0xFE7
 35249                           postinc1	equ	0xFE6
 35250                           postdec1	equ	0xFE5
 35251                           plusw1	equ	0xFE3
 35252                           fsr1h	equ	0xFE2
 35253                           fsr1l	equ	0xFE1
 35254                           indf2	equ	0xFDF
 35255                           postinc2	equ	0xFDE
 35256                           postdec2	equ	0xFDD
 35257                           plusw2	equ	0xFDB
 35258                           fsr2h	equ	0xFDA
 35259                           fsr2l	equ	0xFD9
 35260                           status	equ	0xFD8
 35261                           
 35262 ;; *************** function _GenerateEvt *****************
 35263 ;; Defined at:
 35264 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 35265 ;; Parameters:    Size  Location     Type
 35266 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 35267 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 35268 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 35269 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 35270 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 35271 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 35272 ;; Auto vars:     Size  Location     Type
 35273 ;;  EventStatus     1   31[BANK0 ] enum E7727
 35274 ;; Return value:  Size  Location     Type
 35275 ;;                  1    wreg      enum E7699
 35276 ;; Registers used:
 35277 ;;		wreg, fsr2l, fsr2h, status,2
 35278 ;; Tracked objects:
 35279 ;;		On entry : 0/0
 35280 ;;		On exit  : 0/0
 35281 ;;		Unchanged: 0/0
 35282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35283 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35284 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35286 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35287 ;;Total ram usage:        3 bytes
 35288 ;; Hardware stack levels used:    1
 35289 ;; Hardware stack levels required when called:   11
 35290 ;; This function calls:
 35291 ;;		Nothing
 35292 ;; This function is called by:
 35293 ;;		_I2c_ReadData
 35294 ;;		_CheckModem
 35295 ;;		_TurnOnModem
 35296 ;;		_ConfigureModem
 35297 ;;		_ModemEvtParser
 35298 ;;		_GetSmsSm
 35299 ;;		_Mdm_RequestSmsData
 35300 ;;		_I2cSlv_SendI2cMsg
 35301 ;;		_I2cSlv_ReceiveI2cMsg
 35302 ;;		_RiSm
 35303 ;;		_Mdm_SendSmsData
 35304 ;;		_MdmHttp_InitGprsNetwork
 35305 ;;		_MdmHttp_GetMethod
 35306 ;;		_Alarm
 35307 ;; This function uses a non-reentrant model
 35308 ;;
 35309                           
 35310                           	psect	text167
 35311  00673E                     __ptext167:
 35312                           	opt stack 0
 35313  00673E                     _GenerateEvt:
 35314                           	opt stack 13
 35315                           
 35316                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 35317                           
 35318                           ; BSR set to: 0
 35319                           ;incstack = 0
 35320  00673E  0E00               	movlw	0
 35321  006740  0100               	movlb	0	; () banked
 35322  006742  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 35323                           
 35324                           ; BSR set to: 0
 35325                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 35326  006744  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 35327  006748  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 35328  00674C  0E02               	movlw	2
 35329  00674E  6EDF               	movwf	indf2,c
 35330                           
 35331                           ; BSR set to: 0
 35332                           ;os_ser.c: 83: EventStatus = EventSent;
 35333  006750  0E02               	movlw	2
 35334  006752  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 35335  006754  0012               	return	
 35336  006756                     __end_of_GenerateEvt:
 35337                           	opt stack 0
 35338                           tosu	equ	0xFFF
 35339                           tosh	equ	0xFFE
 35340                           tosl	equ	0xFFD
 35341                           pclath	equ	0xFFA
 35342                           tblptru	equ	0xFF8
 35343                           tblptrh	equ	0xFF7
 35344                           tblptrl	equ	0xFF6
 35345                           tablat	equ	0xFF5
 35346                           prodh	equ	0xFF4
 35347                           prodl	equ	0xFF3
 35348                           intcon	equ	0xFF2
 35349                           intcon2	equ	0xFF1
 35350                           intcon3	equ	0xFF0
 35351                           indf0	equ	0xFEF
 35352                           postinc0	equ	0xFEE
 35353                           plusw0	equ	0xFEB
 35354                           fsr0h	equ	0xFEA
 35355                           fsr0l	equ	0xFE9
 35356                           wreg	equ	0xFE8
 35357                           indf1	equ	0xFE7
 35358                           postinc1	equ	0xFE6
 35359                           postdec1	equ	0xFE5
 35360                           plusw1	equ	0xFE3
 35361                           fsr1h	equ	0xFE2
 35362                           fsr1l	equ	0xFE1
 35363                           indf2	equ	0xFDF
 35364                           postinc2	equ	0xFDE
 35365                           postdec2	equ	0xFDD
 35366                           plusw2	equ	0xFDB
 35367                           fsr2h	equ	0xFDA
 35368                           fsr2l	equ	0xFD9
 35369                           status	equ	0xFD8
 35370                           
 35371 ;; *************** function _EnableReceiver *****************
 35372 ;; Defined at:
 35373 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35374 ;; Parameters:    Size  Location     Type
 35375 ;;		None
 35376 ;; Auto vars:     Size  Location     Type
 35377 ;;		None
 35378 ;; Return value:  Size  Location     Type
 35379 ;;                  1    wreg      void 
 35380 ;; Registers used:
 35381 ;;		status,2, status,0
 35382 ;; Tracked objects:
 35383 ;;		On entry : 0/0
 35384 ;;		On exit  : 0/0
 35385 ;;		Unchanged: 0/0
 35386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35391 ;;Total ram usage:        0 bytes
 35392 ;; Hardware stack levels used:    1
 35393 ;; Hardware stack levels required when called:   11
 35394 ;; This function calls:
 35395 ;;		Nothing
 35396 ;; This function is called by:
 35397 ;;		_I2c_ReadData
 35398 ;; This function uses a non-reentrant model
 35399 ;;
 35400                           
 35401                           	psect	text168
 35402  0068E6                     __ptext168:
 35403                           	opt stack 0
 35404  0068E6                     _EnableReceiver:
 35405                           	opt stack 14
 35406                           
 35407                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 35408                           
 35409                           ; BSR set to: 0
 35410                           ;incstack = 0
 35411  0068E6  8671               	bsf	3953,3,c	;volatile
 35412  0068E8  0012               	return		;funcret
 35413  0068EA                     __end_of_EnableReceiver:
 35414                           	opt stack 0
 35415                           tosu	equ	0xFFF
 35416                           tosh	equ	0xFFE
 35417                           tosl	equ	0xFFD
 35418                           pclath	equ	0xFFA
 35419                           tblptru	equ	0xFF8
 35420                           tblptrh	equ	0xFF7
 35421                           tblptrl	equ	0xFF6
 35422                           tablat	equ	0xFF5
 35423                           prodh	equ	0xFF4
 35424                           prodl	equ	0xFF3
 35425                           intcon	equ	0xFF2
 35426                           intcon2	equ	0xFF1
 35427                           intcon3	equ	0xFF0
 35428                           indf0	equ	0xFEF
 35429                           postinc0	equ	0xFEE
 35430                           plusw0	equ	0xFEB
 35431                           fsr0h	equ	0xFEA
 35432                           fsr0l	equ	0xFE9
 35433                           wreg	equ	0xFE8
 35434                           indf1	equ	0xFE7
 35435                           postinc1	equ	0xFE6
 35436                           postdec1	equ	0xFE5
 35437                           plusw1	equ	0xFE3
 35438                           fsr1h	equ	0xFE2
 35439                           fsr1l	equ	0xFE1
 35440                           indf2	equ	0xFDF
 35441                           postinc2	equ	0xFDE
 35442                           postdec2	equ	0xFDD
 35443                           plusw2	equ	0xFDB
 35444                           fsr2h	equ	0xFDA
 35445                           fsr2l	equ	0xFD9
 35446                           status	equ	0xFD8
 35447                           
 35448 ;; *************** function _CheckTxStatus *****************
 35449 ;; Defined at:
 35450 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35451 ;; Parameters:    Size  Location     Type
 35452 ;;		None
 35453 ;; Auto vars:     Size  Location     Type
 35454 ;;		None
 35455 ;; Return value:  Size  Location     Type
 35456 ;;                  1    wreg      unsigned char 
 35457 ;; Registers used:
 35458 ;;		wreg, status,2, status,0
 35459 ;; Tracked objects:
 35460 ;;		On entry : 0/0
 35461 ;;		On exit  : 0/0
 35462 ;;		Unchanged: 0/0
 35463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35468 ;;Total ram usage:        0 bytes
 35469 ;; Hardware stack levels used:    1
 35470 ;; Hardware stack levels required when called:   11
 35471 ;; This function calls:
 35472 ;;		Nothing
 35473 ;; This function is called by:
 35474 ;;		_I2c_WriteData
 35475 ;;		_I2c_ReadData
 35476 ;; This function uses a non-reentrant model
 35477 ;;
 35478                           
 35479                           	psect	text169
 35480  0068B2                     __ptext169:
 35481                           	opt stack 0
 35482  0068B2                     _CheckTxStatus:
 35483                           	opt stack 14
 35484                           
 35485                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 35486                           
 35487                           ;incstack = 0
 35488  0068B2  4073               	rrncf	3955,w,c	;volatile
 35489  0068B4  42E8               	rrncf	wreg,f,c
 35490  0068B6  0B3F               	andlw	63
 35491  0068B8  0B01               	andlw	1
 35492  0068BA  0012               	return	
 35493  0068BC                     __end_of_CheckTxStatus:
 35494                           	opt stack 0
 35495                           tosu	equ	0xFFF
 35496                           tosh	equ	0xFFE
 35497                           tosl	equ	0xFFD
 35498                           pclath	equ	0xFFA
 35499                           tblptru	equ	0xFF8
 35500                           tblptrh	equ	0xFF7
 35501                           tblptrl	equ	0xFF6
 35502                           tablat	equ	0xFF5
 35503                           prodh	equ	0xFF4
 35504                           prodl	equ	0xFF3
 35505                           intcon	equ	0xFF2
 35506                           intcon2	equ	0xFF1
 35507                           intcon3	equ	0xFF0
 35508                           indf0	equ	0xFEF
 35509                           postinc0	equ	0xFEE
 35510                           plusw0	equ	0xFEB
 35511                           fsr0h	equ	0xFEA
 35512                           fsr0l	equ	0xFE9
 35513                           wreg	equ	0xFE8
 35514                           indf1	equ	0xFE7
 35515                           postinc1	equ	0xFE6
 35516                           postdec1	equ	0xFE5
 35517                           plusw1	equ	0xFE3
 35518                           fsr1h	equ	0xFE2
 35519                           fsr1l	equ	0xFE1
 35520                           indf2	equ	0xFDF
 35521                           postinc2	equ	0xFDE
 35522                           postdec2	equ	0xFDD
 35523                           plusw2	equ	0xFDB
 35524                           fsr2h	equ	0xFDA
 35525                           fsr2l	equ	0xFD9
 35526                           status	equ	0xFD8
 35527                           
 35528 ;; *************** function _CheckAckStatus *****************
 35529 ;; Defined at:
 35530 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35531 ;; Parameters:    Size  Location     Type
 35532 ;;		None
 35533 ;; Auto vars:     Size  Location     Type
 35534 ;;		None
 35535 ;; Return value:  Size  Location     Type
 35536 ;;                  1    wreg      unsigned char 
 35537 ;; Registers used:
 35538 ;;		wreg, status,2, status,0
 35539 ;; Tracked objects:
 35540 ;;		On entry : 0/0
 35541 ;;		On exit  : 0/0
 35542 ;;		Unchanged: 0/0
 35543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35548 ;;Total ram usage:        0 bytes
 35549 ;; Hardware stack levels used:    1
 35550 ;; Hardware stack levels required when called:   11
 35551 ;; This function calls:
 35552 ;;		Nothing
 35553 ;; This function is called by:
 35554 ;;		_I2c_WriteData
 35555 ;;		_I2c_ReadData
 35556 ;; This function uses a non-reentrant model
 35557 ;;
 35558                           
 35559                           	psect	text170
 35560  0068BC                     __ptext170:
 35561                           	opt stack 0
 35562  0068BC                     _CheckAckStatus:
 35563                           	opt stack 14
 35564                           
 35565                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 35566                           
 35567                           ;incstack = 0
 35568  0068BC  4471               	rlncf	3953,w,c	;volatile
 35569  0068BE  46E8               	rlncf	wreg,f,c
 35570  0068C0  0B03               	andlw	3
 35571  0068C2  0B01               	andlw	1
 35572  0068C4  0012               	return	
 35573  0068C6                     __end_of_CheckAckStatus:
 35574                           	opt stack 0
 35575                           tosu	equ	0xFFF
 35576                           tosh	equ	0xFFE
 35577                           tosl	equ	0xFFD
 35578                           pclath	equ	0xFFA
 35579                           tblptru	equ	0xFF8
 35580                           tblptrh	equ	0xFF7
 35581                           tblptrl	equ	0xFF6
 35582                           tablat	equ	0xFF5
 35583                           prodh	equ	0xFF4
 35584                           prodl	equ	0xFF3
 35585                           intcon	equ	0xFF2
 35586                           intcon2	equ	0xFF1
 35587                           intcon3	equ	0xFF0
 35588                           indf0	equ	0xFEF
 35589                           postinc0	equ	0xFEE
 35590                           plusw0	equ	0xFEB
 35591                           fsr0h	equ	0xFEA
 35592                           fsr0l	equ	0xFE9
 35593                           wreg	equ	0xFE8
 35594                           indf1	equ	0xFE7
 35595                           postinc1	equ	0xFE6
 35596                           postdec1	equ	0xFE5
 35597                           plusw1	equ	0xFE3
 35598                           fsr1h	equ	0xFE2
 35599                           fsr1l	equ	0xFE1
 35600                           indf2	equ	0xFDF
 35601                           postinc2	equ	0xFDE
 35602                           postdec2	equ	0xFDD
 35603                           plusw2	equ	0xFDB
 35604                           fsr2h	equ	0xFDA
 35605                           fsr2l	equ	0xFD9
 35606                           status	equ	0xFD8
 35607                           
 35608 ;; *************** function _LowPriorityIsr *****************
 35609 ;; Defined at:
 35610 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 35611 ;; Parameters:    Size  Location     Type
 35612 ;;		None
 35613 ;; Auto vars:     Size  Location     Type
 35614 ;;		None
 35615 ;; Return value:  Size  Location     Type
 35616 ;;                  1    wreg      void 
 35617 ;; Registers used:
 35618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35619 ;; Tracked objects:
 35620 ;;		On entry : 0/0
 35621 ;;		On exit  : 0/0
 35622 ;;		Unchanged: 0/0
 35623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35626 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35627 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35628 ;;Total ram usage:       21 bytes
 35629 ;; Hardware stack levels used:    1
 35630 ;; Hardware stack levels required when called:   10
 35631 ;; This function calls:
 35632 ;;		_Tmr_Tmr2Isr
 35633 ;; This function is called by:
 35634 ;;		Interrupt level 1
 35635 ;; This function uses a non-reentrant model
 35636 ;;
 35637                           
 35638                           	psect	intcodelo
 35639  000018                     __pintcodelo:
 35640                           	opt stack 0
 35641  000018                     _LowPriorityIsr:
 35642                           	opt stack 8
 35643                           
 35644                           ;incstack = 0
 35645  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 35646  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 35647  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 35648  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 35649  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 35650  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 35651  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 35652  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 35653  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 35654  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 35655  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 35656  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 35657  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 35658  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 35659  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 35660  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 35661  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 35662  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 35663  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 35664  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 35665  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 35666  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 35667                           
 35668                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 35669  00006E  B29E               	btfsc	3998,1,c	;volatile
 35670                           
 35671                           ;irq.c: 259: {
 35672                           ;irq.c: 261: Tmr_Tmr2Isr();
 35673  000070  EC71  F032         	call	_Tmr_Tmr2Isr	;wreg free
 35674  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 35675  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 35676  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 35677  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 35678  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 35679  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 35680  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 35681  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 35682  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 35683  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 35684  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 35685  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 35686  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 35687  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 35688  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 35689  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 35690  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 35691  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 35692  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 35693  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 35694  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 35695  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 35696  0000CA  0010               	retfie	
 35697  0000CC                     __end_of_LowPriorityIsr:
 35698                           	opt stack 0
 35699                           tosu	equ	0xFFF
 35700                           tosh	equ	0xFFE
 35701                           tosl	equ	0xFFD
 35702                           pclatu	equ	0xFFB
 35703                           pclath	equ	0xFFA
 35704                           tblptru	equ	0xFF8
 35705                           tblptrh	equ	0xFF7
 35706                           tblptrl	equ	0xFF6
 35707                           tablat	equ	0xFF5
 35708                           prodh	equ	0xFF4
 35709                           prodl	equ	0xFF3
 35710                           intcon	equ	0xFF2
 35711                           intcon2	equ	0xFF1
 35712                           intcon3	equ	0xFF0
 35713                           indf0	equ	0xFEF
 35714                           postinc0	equ	0xFEE
 35715                           plusw0	equ	0xFEB
 35716                           fsr0h	equ	0xFEA
 35717                           fsr0l	equ	0xFE9
 35718                           wreg	equ	0xFE8
 35719                           indf1	equ	0xFE7
 35720                           postinc1	equ	0xFE6
 35721                           postdec1	equ	0xFE5
 35722                           plusw1	equ	0xFE3
 35723                           fsr1h	equ	0xFE2
 35724                           fsr1l	equ	0xFE1
 35725                           bsr	equ	0xFE0
 35726                           indf2	equ	0xFDF
 35727                           postinc2	equ	0xFDE
 35728                           postdec2	equ	0xFDD
 35729                           plusw2	equ	0xFDB
 35730                           fsr2h	equ	0xFDA
 35731                           fsr2l	equ	0xFD9
 35732                           status	equ	0xFD8
 35733                           
 35734 ;; *************** function _Tmr_Tmr2Isr *****************
 35735 ;; Defined at:
 35736 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 35737 ;; Parameters:    Size  Location     Type
 35738 ;;		None
 35739 ;; Auto vars:     Size  Location     Type
 35740 ;;		None
 35741 ;; Return value:  Size  Location     Type
 35742 ;;                  1    wreg      void 
 35743 ;; Registers used:
 35744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35745 ;; Tracked objects:
 35746 ;;		On entry : 0/0
 35747 ;;		On exit  : 0/0
 35748 ;;		Unchanged: 0/0
 35749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35754 ;;Total ram usage:        0 bytes
 35755 ;; Hardware stack levels used:    1
 35756 ;; Hardware stack levels required when called:    9
 35757 ;; This function calls:
 35758 ;;		Absolute function
 35759 ;;		_Sch_SchmIntService
 35760 ;; This function is called by:
 35761 ;;		_LowPriorityIsr
 35762 ;; This function uses a non-reentrant model
 35763 ;;
 35764                           
 35765                           	psect	text172
 35766  0064E2                     __ptext172:
 35767                           	opt stack 0
 35768  0064E2                     _Tmr_Tmr2Isr:
 35769                           	opt stack 8
 35770                           
 35771                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 35772                           
 35773                           ;incstack = 0
 35774  0064E2  929E               	bcf	3998,1,c	;volatile
 35775                           
 35776                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 35777  0064E4  0102               	movlb	2	; () banked
 35778  0064E6  51E8               	movf	_Tmr2IsrCallback& (0+255),w,b
 35779  0064E8  11E9               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 35780  0064EA  B4D8               	btfsc	status,2,c
 35781  0064EC  0012               	return	
 35782                           
 35783                           ; BSR set to: 2
 35784                           ;tmr_drv.c: 315: {
 35785                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 35786  0064EE  D801               	call	i1u1608_28
 35787  0064F0  0012               	return	
 35788  0064F2                     i1u1608_28:
 35789  0064F2  0005               	push	
 35790  0064F4  6EFA               	movwf	pclath,c
 35791  0064F6  51E8               	movf	_Tmr2IsrCallback& (0+255),w,b
 35792  0064F8  6EFD               	movwf	tosl,c
 35793  0064FA  51E9               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 35794  0064FC  6EFE               	movwf	tosh,c
 35795  0064FE  50F8               	movf	tblptru,w,c
 35796  006500  6EFF               	movwf	tosu,c
 35797  006502  50FA               	movf	pclath,w,c
 35798  006504  0012               	return		;indir
 35799  006506                     __end_of_Tmr_Tmr2Isr:
 35800                           	opt stack 0
 35801                           tosu	equ	0xFFF
 35802                           tosh	equ	0xFFE
 35803                           tosl	equ	0xFFD
 35804                           pclatu	equ	0xFFB
 35805                           pclath	equ	0xFFA
 35806                           tblptru	equ	0xFF8
 35807                           tblptrh	equ	0xFF7
 35808                           tblptrl	equ	0xFF6
 35809                           tablat	equ	0xFF5
 35810                           prodh	equ	0xFF4
 35811                           prodl	equ	0xFF3
 35812                           intcon	equ	0xFF2
 35813                           intcon2	equ	0xFF1
 35814                           intcon3	equ	0xFF0
 35815                           indf0	equ	0xFEF
 35816                           postinc0	equ	0xFEE
 35817                           plusw0	equ	0xFEB
 35818                           fsr0h	equ	0xFEA
 35819                           fsr0l	equ	0xFE9
 35820                           wreg	equ	0xFE8
 35821                           indf1	equ	0xFE7
 35822                           postinc1	equ	0xFE6
 35823                           postdec1	equ	0xFE5
 35824                           plusw1	equ	0xFE3
 35825                           fsr1h	equ	0xFE2
 35826                           fsr1l	equ	0xFE1
 35827                           bsr	equ	0xFE0
 35828                           indf2	equ	0xFDF
 35829                           postinc2	equ	0xFDE
 35830                           postdec2	equ	0xFDD
 35831                           plusw2	equ	0xFDB
 35832                           fsr2h	equ	0xFDA
 35833                           fsr2l	equ	0xFD9
 35834                           status	equ	0xFD8
 35835                           
 35836 ;; *************** function _Sch_SchmIntService *****************
 35837 ;; Defined at:
 35838 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 35839 ;; Parameters:    Size  Location     Type
 35840 ;;		None
 35841 ;; Auto vars:     Size  Location     Type
 35842 ;;		None
 35843 ;; Return value:  Size  Location     Type
 35844 ;;                  1    wreg      void 
 35845 ;; Registers used:
 35846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35847 ;; Tracked objects:
 35848 ;;		On entry : 0/0
 35849 ;;		On exit  : 0/0
 35850 ;;		Unchanged: 0/0
 35851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35856 ;;Total ram usage:        0 bytes
 35857 ;; Hardware stack levels used:    1
 35858 ;; Hardware stack levels required when called:    8
 35859 ;; This function calls:
 35860 ;;		_OsAlrm_ProcessOsAlarms
 35861 ;;		_UpdateOsCounters
 35862 ;;		_UpdateSchFlag
 35863 ;; This function is called by:
 35864 ;;		_SystemInit
 35865 ;;		_Tmr_Tmr2Isr
 35866 ;; This function uses a non-reentrant model
 35867 ;;
 35868                           
 35869                           	psect	text173
 35870  006860                     __ptext173:
 35871                           	opt stack 0
 35872  006860                     _Sch_SchmIntService:
 35873                           	opt stack 8
 35874                           
 35875                           ;os_sched.c: 217: UpdateSchFlag();
 35876                           
 35877                           ;incstack = 0
 35878  006860  EC37  F033         	call	_UpdateSchFlag	;wreg free
 35879                           
 35880                           ;os_sched.c: 219: UpdateOsCounters();
 35881  006864  EC20  F034         	call	_UpdateOsCounters	;wreg free
 35882                           
 35883                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 35884  006868  ECE4  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 35885  00686C  0012               	return		;funcret
 35886  00686E                     __end_of_Sch_SchmIntService:
 35887                           	opt stack 0
 35888                           tosu	equ	0xFFF
 35889                           tosh	equ	0xFFE
 35890                           tosl	equ	0xFFD
 35891                           pclatu	equ	0xFFB
 35892                           pclath	equ	0xFFA
 35893                           tblptru	equ	0xFF8
 35894                           tblptrh	equ	0xFF7
 35895                           tblptrl	equ	0xFF6
 35896                           tablat	equ	0xFF5
 35897                           prodh	equ	0xFF4
 35898                           prodl	equ	0xFF3
 35899                           intcon	equ	0xFF2
 35900                           intcon2	equ	0xFF1
 35901                           intcon3	equ	0xFF0
 35902                           indf0	equ	0xFEF
 35903                           postinc0	equ	0xFEE
 35904                           plusw0	equ	0xFEB
 35905                           fsr0h	equ	0xFEA
 35906                           fsr0l	equ	0xFE9
 35907                           wreg	equ	0xFE8
 35908                           indf1	equ	0xFE7
 35909                           postinc1	equ	0xFE6
 35910                           postdec1	equ	0xFE5
 35911                           plusw1	equ	0xFE3
 35912                           fsr1h	equ	0xFE2
 35913                           fsr1l	equ	0xFE1
 35914                           bsr	equ	0xFE0
 35915                           indf2	equ	0xFDF
 35916                           postinc2	equ	0xFDE
 35917                           postdec2	equ	0xFDD
 35918                           plusw2	equ	0xFDB
 35919                           fsr2h	equ	0xFDA
 35920                           fsr2l	equ	0xFD9
 35921                           status	equ	0xFD8
 35922                           
 35923 ;; *************** function _UpdateSchFlag *****************
 35924 ;; Defined at:
 35925 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 35926 ;; Parameters:    Size  Location     Type
 35927 ;;		None
 35928 ;; Auto vars:     Size  Location     Type
 35929 ;;		None
 35930 ;; Return value:  Size  Location     Type
 35931 ;;                  1    wreg      void 
 35932 ;; Registers used:
 35933 ;;		wreg, status,2, status,0
 35934 ;; Tracked objects:
 35935 ;;		On entry : 0/0
 35936 ;;		On exit  : 0/0
 35937 ;;		Unchanged: 0/0
 35938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35943 ;;Total ram usage:        0 bytes
 35944 ;; Hardware stack levels used:    1
 35945 ;; Hardware stack levels required when called:    4
 35946 ;; This function calls:
 35947 ;;		Nothing
 35948 ;; This function is called by:
 35949 ;;		_Sch_SchmIntService
 35950 ;; This function uses a non-reentrant model
 35951 ;;
 35952                           
 35953                           	psect	text174
 35954  00666E                     __ptext174:
 35955                           	opt stack 0
 35956  00666E                     _UpdateSchFlag:
 35957                           	opt stack 11
 35958                           
 35959                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 35960                           ;os_sched.c: 138: InterruptCounter++;
 35961                           
 35962                           ;incstack = 0
 35963  00666E  0102               	movlb	2	; () banked
 35964  006670  4BDA               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 35965  006672  2BDB               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 35966                           
 35967                           ; BSR set to: 2
 35968                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 35969  006674  51DA               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 35970  006676  11DB               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 35971  006678  B4D8               	btfsc	status,2,c
 35972  00667A  0012               	return	
 35973                           
 35974                           ; BSR set to: 2
 35975                           ;os_sched.c: 141: {
 35976                           ;os_sched.c: 143: InterruptCounter = 0;
 35977  00667C  0E00               	movlw	0
 35978  00667E  6FDB               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 35979  006680  0E00               	movlw	0
 35980  006682  6FDA               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 35981                           
 35982                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 35983  006684  0E00               	movlw	0
 35984  006686  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 35985  006688  0012               	return	
 35986  00668A                     __end_of_UpdateSchFlag:
 35987                           	opt stack 0
 35988                           tosu	equ	0xFFF
 35989                           tosh	equ	0xFFE
 35990                           tosl	equ	0xFFD
 35991                           pclatu	equ	0xFFB
 35992                           pclath	equ	0xFFA
 35993                           tblptru	equ	0xFF8
 35994                           tblptrh	equ	0xFF7
 35995                           tblptrl	equ	0xFF6
 35996                           tablat	equ	0xFF5
 35997                           prodh	equ	0xFF4
 35998                           prodl	equ	0xFF3
 35999                           intcon	equ	0xFF2
 36000                           intcon2	equ	0xFF1
 36001                           intcon3	equ	0xFF0
 36002                           indf0	equ	0xFEF
 36003                           postinc0	equ	0xFEE
 36004                           plusw0	equ	0xFEB
 36005                           fsr0h	equ	0xFEA
 36006                           fsr0l	equ	0xFE9
 36007                           wreg	equ	0xFE8
 36008                           indf1	equ	0xFE7
 36009                           postinc1	equ	0xFE6
 36010                           postdec1	equ	0xFE5
 36011                           plusw1	equ	0xFE3
 36012                           fsr1h	equ	0xFE2
 36013                           fsr1l	equ	0xFE1
 36014                           bsr	equ	0xFE0
 36015                           indf2	equ	0xFDF
 36016                           postinc2	equ	0xFDE
 36017                           postdec2	equ	0xFDD
 36018                           plusw2	equ	0xFDB
 36019                           fsr2h	equ	0xFDA
 36020                           fsr2l	equ	0xFD9
 36021                           status	equ	0xFD8
 36022                           
 36023 ;; *************** function _UpdateOsCounters *****************
 36024 ;; Defined at:
 36025 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 36026 ;; Parameters:    Size  Location     Type
 36027 ;;		None
 36028 ;; Auto vars:     Size  Location     Type
 36029 ;;		None
 36030 ;; Return value:  Size  Location     Type
 36031 ;;                  1    wreg      void 
 36032 ;; Registers used:
 36033 ;;		wreg, status,2, status,0
 36034 ;; Tracked objects:
 36035 ;;		On entry : 0/0
 36036 ;;		On exit  : 0/0
 36037 ;;		Unchanged: 0/0
 36038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36043 ;;Total ram usage:        0 bytes
 36044 ;; Hardware stack levels used:    1
 36045 ;; Hardware stack levels required when called:    4
 36046 ;; This function calls:
 36047 ;;		Nothing
 36048 ;; This function is called by:
 36049 ;;		_Sch_SchmIntService
 36050 ;; This function uses a non-reentrant model
 36051 ;;
 36052                           
 36053                           	psect	text175
 36054  006840                     __ptext175:
 36055                           	opt stack 0
 36056  006840                     _UpdateOsCounters:
 36057                           	opt stack 11
 36058                           
 36059                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 36060                           
 36061                           ; BSR set to: 2
 36062                           ;incstack = 0
 36063  006840  0E01               	movlw	1
 36064  006842  0103               	movlb	3	; () banked
 36065  006844  2714               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 36066  006846  0E00               	movlw	0
 36067  006848  2315               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 36068  00684A  2316               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 36069  00684C  2317               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 36070                           
 36071                           ; BSR set to: 3
 36072  00684E  0012               	return		;funcret
 36073  006850                     __end_of_UpdateOsCounters:
 36074                           	opt stack 0
 36075                           tosu	equ	0xFFF
 36076                           tosh	equ	0xFFE
 36077                           tosl	equ	0xFFD
 36078                           pclatu	equ	0xFFB
 36079                           pclath	equ	0xFFA
 36080                           tblptru	equ	0xFF8
 36081                           tblptrh	equ	0xFF7
 36082                           tblptrl	equ	0xFF6
 36083                           tablat	equ	0xFF5
 36084                           prodh	equ	0xFF4
 36085                           prodl	equ	0xFF3
 36086                           intcon	equ	0xFF2
 36087                           intcon2	equ	0xFF1
 36088                           intcon3	equ	0xFF0
 36089                           indf0	equ	0xFEF
 36090                           postinc0	equ	0xFEE
 36091                           plusw0	equ	0xFEB
 36092                           fsr0h	equ	0xFEA
 36093                           fsr0l	equ	0xFE9
 36094                           wreg	equ	0xFE8
 36095                           indf1	equ	0xFE7
 36096                           postinc1	equ	0xFE6
 36097                           postdec1	equ	0xFE5
 36098                           plusw1	equ	0xFE3
 36099                           fsr1h	equ	0xFE2
 36100                           fsr1l	equ	0xFE1
 36101                           bsr	equ	0xFE0
 36102                           indf2	equ	0xFDF
 36103                           postinc2	equ	0xFDE
 36104                           postdec2	equ	0xFDD
 36105                           plusw2	equ	0xFDB
 36106                           fsr2h	equ	0xFDA
 36107                           fsr2l	equ	0xFD9
 36108                           status	equ	0xFD8
 36109                           
 36110 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 36111 ;; Defined at:
 36112 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 36113 ;; Parameters:    Size  Location     Type
 36114 ;;		None
 36115 ;; Auto vars:     Size  Location     Type
 36116 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 36117 ;; Return value:  Size  Location     Type
 36118 ;;                  1    wreg      void 
 36119 ;; Registers used:
 36120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36121 ;; Tracked objects:
 36122 ;;		On entry : 0/0
 36123 ;;		On exit  : 0/0
 36124 ;;		Unchanged: 0/0
 36125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36127 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36128 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36129 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36130 ;;Total ram usage:       10 bytes
 36131 ;; Hardware stack levels used:    1
 36132 ;; Hardware stack levels required when called:    7
 36133 ;; This function calls:
 36134 ;;		_I2cDummyTx
 36135 ;;		_OsAlrm_ClearOsAlarm
 36136 ;;		i1___wmul
 36137 ;; This function is called by:
 36138 ;;		_Sch_SchmIntService
 36139 ;; This function uses a non-reentrant model
 36140 ;;
 36141                           
 36142                           	psect	text176
 36143  0025C8                     __ptext176:
 36144                           	opt stack 0
 36145  0025C8                     _OsAlrm_ProcessOsAlarms:
 36146                           	opt stack 8
 36147                           
 36148                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 36149                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 36150                           
 36151                           ; BSR set to: 3
 36152                           ;incstack = 0
 36153  0025C8  0E00               	movlw	0
 36154  0025CA  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 36155  0025CC  0E00               	movlw	0
 36156  0025CE  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 36157  0025D0  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 36158  0025D2  E105               	bnz	i1u1566_20
 36159  0025D4  0E14               	movlw	20
 36160  0025D6  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 36161  0025D8  B0D8               	btfsc	status,0,c
 36162  0025DA  0012               	return	
 36163  0025DC  D001               	goto	i1l742
 36164  0025DE                     i1u1566_20:
 36165  0025DE  0012               	return	
 36166  0025E0                     i1l742:
 36167                           
 36168                           ;os_alarms.c: 121: {
 36169                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 36170  0025E0  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36171  0025E4  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36172  0025E8  0E00               	movlw	0
 36173  0025EA  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36174  0025EC  0E0B               	movlw	11
 36175  0025EE  6E1B               	movwf	i1___wmul@multiplicand,c
 36176  0025F0  EC28  F032         	call	i1___wmul	;wreg free
 36177  0025F4  0E00               	movlw	low _OsAlarms
 36178  0025F6  2419               	addwf	?i1___wmul,w,c
 36179  0025F8  6ED9               	movwf	fsr2l,c
 36180  0025FA  0E06               	movlw	high _OsAlarms
 36181  0025FC  201A               	addwfc	?i1___wmul+1,w,c
 36182  0025FE  6EDA               	movwf	fsr2h,c
 36183  002600  04DE               	decf	postinc2,w,c
 36184  002602  A4D8               	btfss	status,2,c
 36185  002604  D086               	goto	i1u1570_29
 36186                           
 36187                           ;os_alarms.c: 124: {
 36188                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 36189  002606  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36190  00260A  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36191  00260E  0E00               	movlw	0
 36192  002610  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36193  002612  0E0B               	movlw	11
 36194  002614  6E1B               	movwf	i1___wmul@multiplicand,c
 36195  002616  EC28  F032         	call	i1___wmul	;wreg free
 36196  00261A  0E01               	movlw	1
 36197  00261C  2619               	addwf	?i1___wmul,f,c
 36198  00261E  0E00               	movlw	0
 36199  002620  221A               	addwfc	?i1___wmul+1,f,c
 36200  002622  0E00               	movlw	low _OsAlarms
 36201  002624  2419               	addwf	?i1___wmul,w,c
 36202  002626  6ED9               	movwf	fsr2l,c
 36203  002628  0E06               	movlw	high _OsAlarms
 36204  00262A  201A               	addwfc	?i1___wmul+1,w,c
 36205  00262C  6EDA               	movwf	fsr2h,c
 36206  00262E  2ADE               	incf	postinc2,f,c
 36207  002630  0E00               	movlw	0
 36208  002632  22DE               	addwfc	postinc2,f,c
 36209  002634  22DE               	addwfc	postinc2,f,c
 36210  002636  22DE               	addwfc	postinc2,f,c
 36211                           
 36212                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 36213  002638  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36214  00263C  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36215  002640  0E00               	movlw	0
 36216  002642  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36217  002644  0E0B               	movlw	11
 36218  002646  6E1B               	movwf	i1___wmul@multiplicand,c
 36219  002648  EC28  F032         	call	i1___wmul	;wreg free
 36220  00264C  0E05               	movlw	5
 36221  00264E  2619               	addwf	?i1___wmul,f,c
 36222  002650  0E00               	movlw	0
 36223  002652  221A               	addwfc	?i1___wmul+1,f,c
 36224  002654  0E00               	movlw	low _OsAlarms
 36225  002656  2419               	addwf	?i1___wmul,w,c
 36226  002658  6ED9               	movwf	fsr2l,c
 36227  00265A  0E06               	movlw	high _OsAlarms
 36228  00265C  201A               	addwfc	?i1___wmul+1,w,c
 36229  00265E  6EDA               	movwf	fsr2h,c
 36230  002660  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36231  002664  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36232  002668  0E00               	movlw	0
 36233  00266A  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36234  00266C  0E0B               	movlw	11
 36235  00266E  6E1B               	movwf	i1___wmul@multiplicand,c
 36236  002670  EC28  F032         	call	i1___wmul	;wreg free
 36237  002674  0E01               	movlw	1
 36238  002676  2619               	addwf	?i1___wmul,f,c
 36239  002678  0E00               	movlw	0
 36240  00267A  221A               	addwfc	?i1___wmul+1,f,c
 36241  00267C  0E00               	movlw	low _OsAlarms
 36242  00267E  2419               	addwf	?i1___wmul,w,c
 36243  002680  6EE1               	movwf	fsr1l,c
 36244  002682  0E06               	movlw	high _OsAlarms
 36245  002684  201A               	addwfc	?i1___wmul+1,w,c
 36246  002686  6EE2               	movwf	fsr1h,c
 36247  002688  50DE               	movf	postinc2,w,c
 36248  00268A  5CE6               	subwf	postinc1,w,c
 36249  00268C  50DE               	movf	postinc2,w,c
 36250  00268E  58E6               	subwfb	postinc1,w,c
 36251  002690  50DE               	movf	postinc2,w,c
 36252  002692  58E6               	subwfb	postinc1,w,c
 36253  002694  50DE               	movf	postinc2,w,c
 36254  002696  58E6               	subwfb	postinc1,w,c
 36255  002698  A0D8               	btfss	status,0,c
 36256  00269A  D03B               	goto	i1u1570_29
 36257                           
 36258                           ;os_alarms.c: 129: {
 36259                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 36260  00269C  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 36261  00269E  ECFE  F02B         	call	_OsAlrm_ClearOsAlarm
 36262                           
 36263                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 36264  0026A2  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36265  0026A6  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36266  0026AA  0E00               	movlw	0
 36267  0026AC  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36268  0026AE  0E0B               	movlw	11
 36269  0026B0  6E1B               	movwf	i1___wmul@multiplicand,c
 36270  0026B2  EC28  F032         	call	i1___wmul	;wreg free
 36271  0026B6  0E09               	movlw	9
 36272  0026B8  2619               	addwf	?i1___wmul,f,c
 36273  0026BA  0E00               	movlw	0
 36274  0026BC  221A               	addwfc	?i1___wmul+1,f,c
 36275  0026BE  0E00               	movlw	low _OsAlarms
 36276  0026C0  2419               	addwf	?i1___wmul,w,c
 36277  0026C2  6ED9               	movwf	fsr2l,c
 36278  0026C4  0E06               	movlw	high _OsAlarms
 36279  0026C6  201A               	addwfc	?i1___wmul+1,w,c
 36280  0026C8  6EDA               	movwf	fsr2h,c
 36281  0026CA  50DE               	movf	postinc2,w,c
 36282  0026CC  10DE               	iorwf	postinc2,w,c
 36283  0026CE  B4D8               	btfsc	status,2,c
 36284  0026D0  D020               	goto	i1u1570_29
 36285                           
 36286                           ;os_alarms.c: 134: {
 36287                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 36288  0026D2  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36289  0026D6  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36290  0026DA  0E00               	movlw	0
 36291  0026DC  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36292  0026DE  0E0B               	movlw	11
 36293  0026E0  6E1B               	movwf	i1___wmul@multiplicand,c
 36294  0026E2  EC28  F032         	call	i1___wmul	;wreg free
 36295  0026E6  0E09               	movlw	9
 36296  0026E8  2619               	addwf	?i1___wmul,f,c
 36297  0026EA  0E00               	movlw	0
 36298  0026EC  221A               	addwfc	?i1___wmul+1,f,c
 36299  0026EE  0E00               	movlw	low _OsAlarms
 36300  0026F0  2419               	addwf	?i1___wmul,w,c
 36301  0026F2  6ED9               	movwf	fsr2l,c
 36302  0026F4  0E06               	movlw	high _OsAlarms
 36303  0026F6  201A               	addwfc	?i1___wmul+1,w,c
 36304  0026F8  6EDA               	movwf	fsr2h,c
 36305  0026FA  D801               	call	i1u1570_28
 36306  0026FC  D00A               	goto	i1u1570_29
 36307  0026FE                     i1u1570_28:
 36308  0026FE  0005               	push	
 36309  002700  6EFA               	movwf	pclath,c
 36310  002702  50DE               	movf	postinc2,w,c
 36311  002704  6EFD               	movwf	tosl,c
 36312  002706  50DE               	movf	postinc2,w,c
 36313  002708  6EFE               	movwf	tosh,c
 36314  00270A  50F8               	movf	tblptru,w,c
 36315  00270C  6EFF               	movwf	tosu,c
 36316  00270E  50FA               	movf	pclath,w,c
 36317  002710  0012               	return		;indir
 36318  002712                     i1u1570_29:
 36319  002712  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 36320  002714  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 36321  002716  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 36322  002718  E101               	bnz	i1l747
 36323  00271A  D75C               	goto	L77
 36324  00271C                     i1l747:
 36325  00271C  0012               	return		;funcret
 36326  00271E                     __end_of_OsAlrm_ProcessOsAlarms:
 36327                           	opt stack 0
 36328                           tosu	equ	0xFFF
 36329                           tosh	equ	0xFFE
 36330                           tosl	equ	0xFFD
 36331                           pclatu	equ	0xFFB
 36332                           pclath	equ	0xFFA
 36333                           tblptru	equ	0xFF8
 36334                           tblptrh	equ	0xFF7
 36335                           tblptrl	equ	0xFF6
 36336                           tablat	equ	0xFF5
 36337                           prodh	equ	0xFF4
 36338                           prodl	equ	0xFF3
 36339                           intcon	equ	0xFF2
 36340                           intcon2	equ	0xFF1
 36341                           intcon3	equ	0xFF0
 36342                           indf0	equ	0xFEF
 36343                           postinc0	equ	0xFEE
 36344                           plusw0	equ	0xFEB
 36345                           fsr0h	equ	0xFEA
 36346                           fsr0l	equ	0xFE9
 36347                           wreg	equ	0xFE8
 36348                           indf1	equ	0xFE7
 36349                           postinc1	equ	0xFE6
 36350                           postdec1	equ	0xFE5
 36351                           plusw1	equ	0xFE3
 36352                           fsr1h	equ	0xFE2
 36353                           fsr1l	equ	0xFE1
 36354                           bsr	equ	0xFE0
 36355                           indf2	equ	0xFDF
 36356                           postinc2	equ	0xFDE
 36357                           postdec2	equ	0xFDD
 36358                           plusw2	equ	0xFDB
 36359                           fsr2h	equ	0xFDA
 36360                           fsr2l	equ	0xFD9
 36361                           status	equ	0xFD8
 36362                           
 36363 ;; *************** function i1___wmul *****************
 36364 ;; Defined at:
 36365 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 36366 ;; Parameters:    Size  Location     Type
 36367 ;;  multiplier      2   24[COMRAM] unsigned int 
 36368 ;;  multiplicand    2   26[COMRAM] unsigned int 
 36369 ;; Auto vars:     Size  Location     Type
 36370 ;;  __wmul          2   28[COMRAM] unsigned int 
 36371 ;; Return value:  Size  Location     Type
 36372 ;;                  2   24[COMRAM] unsigned int 
 36373 ;; Registers used:
 36374 ;;		wreg, status,2, status,0, prodl, prodh
 36375 ;; Tracked objects:
 36376 ;;		On entry : 0/0
 36377 ;;		On exit  : 0/0
 36378 ;;		Unchanged: 0/0
 36379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36380 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36381 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36383 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36384 ;;Total ram usage:        6 bytes
 36385 ;; Hardware stack levels used:    1
 36386 ;; Hardware stack levels required when called:    4
 36387 ;; This function calls:
 36388 ;;		Nothing
 36389 ;; This function is called by:
 36390 ;;		_OsAlrm_ProcessOsAlarms
 36391 ;; This function uses a non-reentrant model
 36392 ;;
 36393                           
 36394                           	psect	text177
 36395  006450                     __ptext177:
 36396                           	opt stack 0
 36397  006450                     i1___wmul:
 36398                           	opt stack 10
 36399                           
 36400                           ;incstack = 0
 36401  006450  5019               	movf	i1___wmul@multiplier,w,c
 36402  006452  021B               	mulwf	i1___wmul@multiplicand,c
 36403  006454  CFF3 F01D          	movff	prodl,i1___wmul@product
 36404  006458  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 36405  00645C  5019               	movf	i1___wmul@multiplier,w,c
 36406  00645E  021C               	mulwf	i1___wmul@multiplicand+1,c
 36407  006460  50F3               	movf	prodl,w,c
 36408  006462  261E               	addwf	i1___wmul@product+1,f,c
 36409  006464  501A               	movf	i1___wmul@multiplier+1,w,c
 36410  006466  021B               	mulwf	i1___wmul@multiplicand,c
 36411  006468  50F3               	movf	prodl,w,c
 36412  00646A  261E               	addwf	i1___wmul@product+1,f,c
 36413  00646C  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 36414  006470  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 36415  006474  0012               	return	
 36416  006476                     __end_ofi1___wmul:
 36417                           	opt stack 0
 36418                           tosu	equ	0xFFF
 36419                           tosh	equ	0xFFE
 36420                           tosl	equ	0xFFD
 36421                           pclatu	equ	0xFFB
 36422                           pclath	equ	0xFFA
 36423                           tblptru	equ	0xFF8
 36424                           tblptrh	equ	0xFF7
 36425                           tblptrl	equ	0xFF6
 36426                           tablat	equ	0xFF5
 36427                           prodh	equ	0xFF4
 36428                           prodl	equ	0xFF3
 36429                           intcon	equ	0xFF2
 36430                           intcon2	equ	0xFF1
 36431                           intcon3	equ	0xFF0
 36432                           indf0	equ	0xFEF
 36433                           postinc0	equ	0xFEE
 36434                           plusw0	equ	0xFEB
 36435                           fsr0h	equ	0xFEA
 36436                           fsr0l	equ	0xFE9
 36437                           wreg	equ	0xFE8
 36438                           indf1	equ	0xFE7
 36439                           postinc1	equ	0xFE6
 36440                           postdec1	equ	0xFE5
 36441                           plusw1	equ	0xFE3
 36442                           fsr1h	equ	0xFE2
 36443                           fsr1l	equ	0xFE1
 36444                           bsr	equ	0xFE0
 36445                           indf2	equ	0xFDF
 36446                           postinc2	equ	0xFDE
 36447                           postdec2	equ	0xFDD
 36448                           plusw2	equ	0xFDB
 36449                           fsr2h	equ	0xFDA
 36450                           fsr2l	equ	0xFD9
 36451                           status	equ	0xFD8
 36452                           
 36453 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 36454 ;; Defined at:
 36455 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 36456 ;; Parameters:    Size  Location     Type
 36457 ;;  OsAlarmId       1    wreg     unsigned char 
 36458 ;; Auto vars:     Size  Location     Type
 36459 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 36460 ;; Return value:  Size  Location     Type
 36461 ;;                  1    wreg      void 
 36462 ;; Registers used:
 36463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36464 ;; Tracked objects:
 36465 ;;		On entry : 0/0
 36466 ;;		On exit  : 0/0
 36467 ;;		Unchanged: 0/0
 36468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36472 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36473 ;;Total ram usage:        1 bytes
 36474 ;; Hardware stack levels used:    1
 36475 ;; Hardware stack levels required when called:    4
 36476 ;; This function calls:
 36477 ;;		Nothing
 36478 ;; This function is called by:
 36479 ;;		_OsAlrm_ProcessOsAlarms
 36480 ;; This function uses a non-reentrant model
 36481 ;;
 36482                           
 36483                           	psect	text178
 36484  0057FC                     __ptext178:
 36485                           	opt stack 0
 36486  0057FC                     _OsAlrm_ClearOsAlarm:
 36487                           	opt stack 10
 36488                           
 36489                           ;incstack = 0
 36490                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 36491  0057FC  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 36492                           
 36493                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 36494  0057FE  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36495  005800  0D0B               	mullw	11
 36496  005802  0E00               	movlw	low _OsAlarms
 36497  005804  24F3               	addwf	prodl,w,c
 36498  005806  6ED9               	movwf	fsr2l,c
 36499  005808  0E06               	movlw	high _OsAlarms
 36500  00580A  20F4               	addwfc	prodh,w,c
 36501  00580C  6EDA               	movwf	fsr2h,c
 36502  00580E  0E00               	movlw	0
 36503  005810  6EDF               	movwf	indf2,c
 36504                           
 36505                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 36506  005812  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36507  005814  0D0B               	mullw	11
 36508  005816  0E01               	movlw	1
 36509  005818  26F3               	addwf	prodl,f,c
 36510  00581A  0E00               	movlw	0
 36511  00581C  22F4               	addwfc	prodh,f,c
 36512  00581E  0E00               	movlw	low _OsAlarms
 36513  005820  24F3               	addwf	prodl,w,c
 36514  005822  6ED9               	movwf	fsr2l,c
 36515  005824  0E06               	movlw	high _OsAlarms
 36516  005826  20F4               	addwfc	prodh,w,c
 36517  005828  6EDA               	movwf	fsr2h,c
 36518  00582A  6ADE               	clrf	postinc2,c
 36519  00582C  6ADE               	clrf	postinc2,c
 36520  00582E  6ADE               	clrf	postinc2,c
 36521  005830  6ADD               	clrf	postdec2,c
 36522                           
 36523                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 36524  005832  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36525  005834  0D0B               	mullw	11
 36526  005836  0E05               	movlw	5
 36527  005838  26F3               	addwf	prodl,f,c
 36528  00583A  0E00               	movlw	0
 36529  00583C  22F4               	addwfc	prodh,f,c
 36530  00583E  0E00               	movlw	low _OsAlarms
 36531  005840  24F3               	addwf	prodl,w,c
 36532  005842  6ED9               	movwf	fsr2l,c
 36533  005844  0E06               	movlw	high _OsAlarms
 36534  005846  20F4               	addwfc	prodh,w,c
 36535  005848  6EDA               	movwf	fsr2h,c
 36536  00584A  6ADE               	clrf	postinc2,c
 36537  00584C  6ADE               	clrf	postinc2,c
 36538  00584E  6ADE               	clrf	postinc2,c
 36539  005850  6ADD               	clrf	postdec2,c
 36540  005852  0012               	return		;funcret
 36541  005854                     __end_of_OsAlrm_ClearOsAlarm:
 36542                           	opt stack 0
 36543                           tosu	equ	0xFFF
 36544                           tosh	equ	0xFFE
 36545                           tosl	equ	0xFFD
 36546                           pclatu	equ	0xFFB
 36547                           pclath	equ	0xFFA
 36548                           tblptru	equ	0xFF8
 36549                           tblptrh	equ	0xFF7
 36550                           tblptrl	equ	0xFF6
 36551                           tablat	equ	0xFF5
 36552                           prodh	equ	0xFF4
 36553                           prodl	equ	0xFF3
 36554                           intcon	equ	0xFF2
 36555                           intcon2	equ	0xFF1
 36556                           intcon3	equ	0xFF0
 36557                           indf0	equ	0xFEF
 36558                           postinc0	equ	0xFEE
 36559                           plusw0	equ	0xFEB
 36560                           fsr0h	equ	0xFEA
 36561                           fsr0l	equ	0xFE9
 36562                           wreg	equ	0xFE8
 36563                           indf1	equ	0xFE7
 36564                           postinc1	equ	0xFE6
 36565                           postdec1	equ	0xFE5
 36566                           plusw1	equ	0xFE3
 36567                           fsr1h	equ	0xFE2
 36568                           fsr1l	equ	0xFE1
 36569                           bsr	equ	0xFE0
 36570                           indf2	equ	0xFDF
 36571                           postinc2	equ	0xFDE
 36572                           postdec2	equ	0xFDD
 36573                           plusw2	equ	0xFDB
 36574                           fsr2h	equ	0xFDA
 36575                           fsr2l	equ	0xFD9
 36576                           status	equ	0xFD8
 36577                           
 36578 ;; *************** function _I2cDummyTx *****************
 36579 ;; Defined at:
 36580 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 36581 ;; Parameters:    Size  Location     Type
 36582 ;;		None
 36583 ;; Auto vars:     Size  Location     Type
 36584 ;;		None
 36585 ;; Return value:  Size  Location     Type
 36586 ;;                  1    wreg      void 
 36587 ;; Registers used:
 36588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36589 ;; Tracked objects:
 36590 ;;		On entry : 0/0
 36591 ;;		On exit  : 0/0
 36592 ;;		Unchanged: 0/0
 36593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36598 ;;Total ram usage:        0 bytes
 36599 ;; Hardware stack levels used:    1
 36600 ;; Hardware stack levels required when called:    6
 36601 ;; This function calls:
 36602 ;;		i1_I2cSlv_SendI2cMsg
 36603 ;; This function is called by:
 36604 ;;		_I2cSlv_MainTask
 36605 ;;		_OsAlrm_ProcessOsAlarms
 36606 ;; This function uses a non-reentrant model
 36607 ;;
 36608                           
 36609                           	psect	text179
 36610  00668A                     __ptext179:
 36611                           	opt stack 0
 36612  00668A                     _I2cDummyTx:
 36613                           	opt stack 8
 36614                           
 36615                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 36616                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 36617                           
 36618                           ;incstack = 0
 36619  00668A  0EFD               	movlw	low I2cDummyTx@DummyBuffer
 36620  00668C  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 36621  00668E  0E01               	movlw	high I2cDummyTx@DummyBuffer
 36622  006690  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 36623  006692  0E00               	movlw	0
 36624  006694  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 36625  006696  0E01               	movlw	1
 36626  006698  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 36627  00669A  EC94  F030         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 36628                           
 36629                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 36630  00669E  0E01               	movlw	1
 36631  0066A0  0101               	movlb	1	; () banked
 36632  0066A2  6FE7               	movwf	_I2cBusStatus& (0+255),b
 36633                           
 36634                           ; BSR set to: 1
 36635  0066A4  0012               	return		;funcret
 36636  0066A6                     __end_of_I2cDummyTx:
 36637                           	opt stack 0
 36638                           tosu	equ	0xFFF
 36639                           tosh	equ	0xFFE
 36640                           tosl	equ	0xFFD
 36641                           pclatu	equ	0xFFB
 36642                           pclath	equ	0xFFA
 36643                           tblptru	equ	0xFF8
 36644                           tblptrh	equ	0xFF7
 36645                           tblptrl	equ	0xFF6
 36646                           tablat	equ	0xFF5
 36647                           prodh	equ	0xFF4
 36648                           prodl	equ	0xFF3
 36649                           intcon	equ	0xFF2
 36650                           intcon2	equ	0xFF1
 36651                           intcon3	equ	0xFF0
 36652                           indf0	equ	0xFEF
 36653                           postinc0	equ	0xFEE
 36654                           plusw0	equ	0xFEB
 36655                           fsr0h	equ	0xFEA
 36656                           fsr0l	equ	0xFE9
 36657                           wreg	equ	0xFE8
 36658                           indf1	equ	0xFE7
 36659                           postinc1	equ	0xFE6
 36660                           postdec1	equ	0xFE5
 36661                           plusw1	equ	0xFE3
 36662                           fsr1h	equ	0xFE2
 36663                           fsr1l	equ	0xFE1
 36664                           bsr	equ	0xFE0
 36665                           indf2	equ	0xFDF
 36666                           postinc2	equ	0xFDE
 36667                           postdec2	equ	0xFDD
 36668                           plusw2	equ	0xFDB
 36669                           fsr2h	equ	0xFDA
 36670                           fsr2l	equ	0xFD9
 36671                           status	equ	0xFD8
 36672                           
 36673 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 36674 ;; Defined at:
 36675 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 36676 ;; Parameters:    Size  Location     Type
 36677 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 36678 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 36679 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 36680 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 36681 ;;  DataLenght      1   30[COMRAM] unsigned char 
 36682 ;; Auto vars:     Size  Location     Type
 36683 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 36684 ;; Return value:  Size  Location     Type
 36685 ;;                  1    wreg      unsigned char 
 36686 ;; Registers used:
 36687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36688 ;; Tracked objects:
 36689 ;;		On entry : 0/0
 36690 ;;		On exit  : 0/0
 36691 ;;		Unchanged: 0/0
 36692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36693 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36696 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36697 ;;Total ram usage:        5 bytes
 36698 ;; Hardware stack levels used:    1
 36699 ;; Hardware stack levels required when called:    5
 36700 ;; This function calls:
 36701 ;;		i1_GenerateEvt
 36702 ;; This function is called by:
 36703 ;;		_I2cDummyTx
 36704 ;; This function uses a non-reentrant model
 36705 ;;
 36706                           
 36707                           	psect	text180
 36708  006128                     __ptext180:
 36709                           	opt stack 0
 36710  006128                     i1_I2cSlv_SendI2cMsg:
 36711                           	opt stack 8
 36712                           
 36713                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 36714                           
 36715                           ; BSR set to: 1
 36716                           ;incstack = 0
 36717  006128  0E00               	movlw	0
 36718  00612A  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36719                           
 36720                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 36721  00612C  0100               	movlb	0	; () banked
 36722  00612E  05CD               	decf	_I2cComSts& (0+255),w,b
 36723  006130  B4D8               	btfsc	status,2,c
 36724  006132  D014               	goto	i1l1412
 36725                           
 36726                           ; BSR set to: 0
 36727                           ;i2c_slv.c: 257: {
 36728                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 36729  006134  C01E  F39E         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 36730                           
 36731                           ; BSR set to: 0
 36732                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 36733  006138  0E00               	movlw	0
 36734  00613A  0103               	movlb	3	; () banked
 36735  00613C  6F9F               	movwf	(_I2cTxPacket+1)& (0+255),b
 36736                           
 36737                           ; BSR set to: 3
 36738                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 36739  00613E  C01F  F3A2         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 36740                           
 36741                           ; BSR set to: 3
 36742                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 36743  006142  C01C  F3A0         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 36744  006146  C01D  F3A1         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 36745                           
 36746                           ; BSR set to: 3
 36747                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 36748  00614A  0ED7               	movlw	low _I2cWriteDataEvt
 36749  00614C  6E19               	movwf	i1GenerateEvt@Event,c
 36750  00614E  0E00               	movlw	high _I2cWriteDataEvt
 36751  006150  6E1A               	movwf	i1GenerateEvt@Event+1,c
 36752  006152  ECCD  F033         	call	i1_GenerateEvt	;wreg free
 36753                           
 36754                           ;i2c_slv.c: 267: TxSts = 1u;
 36755  006156  0E01               	movlw	1
 36756  006158  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36757                           
 36758                           ;i2c_slv.c: 268: }
 36759  00615A  0012               	return	
 36760  00615C                     i1l1412:
 36761                           
 36762                           ;i2c_slv.c: 269: else
 36763                           ;i2c_slv.c: 270: {
 36764                           ;i2c_slv.c: 272: TxSts = 0u;
 36765  00615C  0E00               	movlw	0
 36766  00615E  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36767  006160  0012               	return	
 36768  006162                     __end_ofi1_I2cSlv_SendI2cMsg:
 36769                           	opt stack 0
 36770                           tosu	equ	0xFFF
 36771                           tosh	equ	0xFFE
 36772                           tosl	equ	0xFFD
 36773                           pclatu	equ	0xFFB
 36774                           pclath	equ	0xFFA
 36775                           tblptru	equ	0xFF8
 36776                           tblptrh	equ	0xFF7
 36777                           tblptrl	equ	0xFF6
 36778                           tablat	equ	0xFF5
 36779                           prodh	equ	0xFF4
 36780                           prodl	equ	0xFF3
 36781                           intcon	equ	0xFF2
 36782                           intcon2	equ	0xFF1
 36783                           intcon3	equ	0xFF0
 36784                           indf0	equ	0xFEF
 36785                           postinc0	equ	0xFEE
 36786                           plusw0	equ	0xFEB
 36787                           fsr0h	equ	0xFEA
 36788                           fsr0l	equ	0xFE9
 36789                           wreg	equ	0xFE8
 36790                           indf1	equ	0xFE7
 36791                           postinc1	equ	0xFE6
 36792                           postdec1	equ	0xFE5
 36793                           plusw1	equ	0xFE3
 36794                           fsr1h	equ	0xFE2
 36795                           fsr1l	equ	0xFE1
 36796                           bsr	equ	0xFE0
 36797                           indf2	equ	0xFDF
 36798                           postinc2	equ	0xFDE
 36799                           postdec2	equ	0xFDD
 36800                           plusw2	equ	0xFDB
 36801                           fsr2h	equ	0xFDA
 36802                           fsr2l	equ	0xFD9
 36803                           status	equ	0xFD8
 36804                           
 36805 ;; *************** function i1_GenerateEvt *****************
 36806 ;; Defined at:
 36807 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36808 ;; Parameters:    Size  Location     Type
 36809 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 36810 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 36811 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 36812 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 36813 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 36814 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 36815 ;; Auto vars:     Size  Location     Type
 36816 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 36817 ;; Return value:  Size  Location     Type
 36818 ;;                  1    wreg      enum E7699
 36819 ;; Registers used:
 36820 ;;		wreg, fsr2l, fsr2h, status,2
 36821 ;; Tracked objects:
 36822 ;;		On entry : 0/0
 36823 ;;		On exit  : 0/0
 36824 ;;		Unchanged: 0/0
 36825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36829 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36830 ;;Total ram usage:        3 bytes
 36831 ;; Hardware stack levels used:    1
 36832 ;; Hardware stack levels required when called:    4
 36833 ;; This function calls:
 36834 ;;		Nothing
 36835 ;; This function is called by:
 36836 ;;		i1_I2cSlv_SendI2cMsg
 36837 ;; This function uses a non-reentrant model
 36838 ;;
 36839                           
 36840                           	psect	text181
 36841  00679A                     __ptext181:
 36842                           	opt stack 0
 36843  00679A                     i1_GenerateEvt:
 36844                           	opt stack 8
 36845                           
 36846                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 36847                           
 36848                           ;incstack = 0
 36849  00679A  0E00               	movlw	0
 36850  00679C  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 36851                           
 36852                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 36853  00679E  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 36854  0067A2  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 36855  0067A6  0E02               	movlw	2
 36856  0067A8  6EDF               	movwf	indf2,c
 36857                           
 36858                           ;os_ser.c: 83: EventStatus = EventSent;
 36859  0067AA  0E02               	movlw	2
 36860  0067AC  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 36861  0067AE  0012               	return	
 36862  0067B0                     __end_ofi1_GenerateEvt:
 36863                           	opt stack 0
 36864                           tosu	equ	0xFFF
 36865                           tosh	equ	0xFFE
 36866                           tosl	equ	0xFFD
 36867                           pclatu	equ	0xFFB
 36868                           pclath	equ	0xFFA
 36869                           tblptru	equ	0xFF8
 36870                           tblptrh	equ	0xFF7
 36871                           tblptrl	equ	0xFF6
 36872                           tablat	equ	0xFF5
 36873                           prodh	equ	0xFF4
 36874                           prodl	equ	0xFF3
 36875                           intcon	equ	0xFF2
 36876                           intcon2	equ	0xFF1
 36877                           intcon3	equ	0xFF0
 36878                           indf0	equ	0xFEF
 36879                           postinc0	equ	0xFEE
 36880                           plusw0	equ	0xFEB
 36881                           fsr0h	equ	0xFEA
 36882                           fsr0l	equ	0xFE9
 36883                           wreg	equ	0xFE8
 36884                           indf1	equ	0xFE7
 36885                           postinc1	equ	0xFE6
 36886                           postdec1	equ	0xFE5
 36887                           plusw1	equ	0xFE3
 36888                           fsr1h	equ	0xFE2
 36889                           fsr1l	equ	0xFE1
 36890                           bsr	equ	0xFE0
 36891                           indf2	equ	0xFDF
 36892                           postinc2	equ	0xFDE
 36893                           postdec2	equ	0xFDD
 36894                           plusw2	equ	0xFDB
 36895                           fsr2h	equ	0xFDA
 36896                           fsr2l	equ	0xFD9
 36897                           status	equ	0xFD8
 36898                           
 36899 ;; *************** function _HighPriorityIsr *****************
 36900 ;; Defined at:
 36901 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 36902 ;; Parameters:    Size  Location     Type
 36903 ;;		None
 36904 ;; Auto vars:     Size  Location     Type
 36905 ;;		None
 36906 ;; Return value:  Size  Location     Type
 36907 ;;                  1    wreg      void 
 36908 ;; Registers used:
 36909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 36910 ;; Tracked objects:
 36911 ;;		On entry : 0/0
 36912 ;;		On exit  : 0/0
 36913 ;;		Unchanged: 0/0
 36914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36917 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36918 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36919 ;;Total ram usage:       18 bytes
 36920 ;; Hardware stack levels used:    1
 36921 ;; Hardware stack levels required when called:    3
 36922 ;; This function calls:
 36923 ;;		_Mcu_Int0Isr
 36924 ;;		_Mcu_Int1Isr
 36925 ;;		_Rtcc_RtcIsr
 36926 ;;		_Uart_Uart1RxIsr
 36927 ;; This function is called by:
 36928 ;;		Interrupt level 2
 36929 ;; This function uses a non-reentrant model
 36930 ;;
 36931                           
 36932                           	psect	intcode
 36933  000008                     __pintcode:
 36934                           	opt stack 0
 36935  000008                     _HighPriorityIsr:
 36936                           	opt stack 8
 36937                           
 36938                           ;incstack = 0
 36939  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 36940  00000A  EF76  F022         	goto	int_func
 36941                           tosu	equ	0xFFF
 36942                           tosh	equ	0xFFE
 36943                           tosl	equ	0xFFD
 36944                           pclatu	equ	0xFFB
 36945                           pclath	equ	0xFFA
 36946                           tblptru	equ	0xFF8
 36947                           tblptrh	equ	0xFF7
 36948                           tblptrl	equ	0xFF6
 36949                           tablat	equ	0xFF5
 36950                           prodh	equ	0xFF4
 36951                           prodl	equ	0xFF3
 36952                           intcon	equ	0xFF2
 36953                           intcon2	equ	0xFF1
 36954                           intcon3	equ	0xFF0
 36955                           indf0	equ	0xFEF
 36956                           postinc0	equ	0xFEE
 36957                           plusw0	equ	0xFEB
 36958                           fsr0h	equ	0xFEA
 36959                           fsr0l	equ	0xFE9
 36960                           wreg	equ	0xFE8
 36961                           indf1	equ	0xFE7
 36962                           postinc1	equ	0xFE6
 36963                           postdec1	equ	0xFE5
 36964                           plusw1	equ	0xFE3
 36965                           fsr1h	equ	0xFE2
 36966                           fsr1l	equ	0xFE1
 36967                           bsr	equ	0xFE0
 36968                           indf2	equ	0xFDF
 36969                           postinc2	equ	0xFDE
 36970                           postdec2	equ	0xFDD
 36971                           plusw2	equ	0xFDB
 36972                           fsr2h	equ	0xFDA
 36973                           fsr2l	equ	0xFD9
 36974                           status	equ	0xFD8
 36975                           
 36976                           	psect	intcode_body
 36977  0044EC                     __pintcode_body:
 36978                           	opt stack 8
 36979  0044EC                     int_func:
 36980                           	opt stack 8
 36981  0044EC  CFFA F007          	movff	pclath,??_HighPriorityIsr
 36982  0044F0  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 36983  0044F4  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 36984  0044F8  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 36985  0044FC  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 36986  004500  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 36987  004504  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 36988  004508  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 36989  00450C  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 36990  004510  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 36991  004514  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 36992  004518  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 36993  00451C  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 36994  004520  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 36995  004524  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 36996  004528  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 36997  00452C  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 36998  004530  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 36999                           
 37000                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 37001  004534  B2F2               	btfsc	intcon,1,c	;volatile
 37002                           
 37003                           ;irq.c: 158: {
 37004                           ;irq.c: 160: Mcu_Int0Isr();
 37005  004536  EC79  F034         	call	_Mcu_Int0Isr	;wreg free
 37006                           
 37007                           ;irq.c: 161: }
 37008                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 37009  00453A  B0F0               	btfsc	intcon3,0,c	;volatile
 37010                           
 37011                           ;irq.c: 167: {
 37012                           ;irq.c: 169: Mcu_Int1Isr();
 37013  00453C  EC77  F034         	call	_Mcu_Int1Isr	;wreg free
 37014                           
 37015                           ;irq.c: 170: }
 37016                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 37017  004540  B0A4               	btfsc	4004,0,c	;volatile
 37018                           
 37019                           ;irq.c: 203: {
 37020                           ;irq.c: 205: Rtcc_RtcIsr();
 37021  004542  EC75  F034         	call	_Rtcc_RtcIsr	;wreg free
 37022                           
 37023                           ;irq.c: 206: }
 37024                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 37025  004546  BA9E               	btfsc	3998,5,c	;volatile
 37026                           
 37027                           ;irq.c: 212: {
 37028                           ;irq.c: 214: Uart_Uart1RxIsr();
 37029  004548  EC28  F034         	call	_Uart_Uart1RxIsr	;wreg free
 37030  00454C  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 37031  004550  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 37032  004554  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 37033  004558  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 37034  00455C  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 37035  004560  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 37036  004564  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 37037  004568  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 37038  00456C  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 37039  004570  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 37040  004574  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 37041  004578  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 37042  00457C  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 37043  004580  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 37044  004584  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 37045  004588  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 37046  00458C  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 37047  004590  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 37048  004594  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 37049  004596  0011               	retfie		f
 37050  004598                     __end_of_HighPriorityIsr:
 37051                           	opt stack 0
 37052                           tosu	equ	0xFFF
 37053                           tosh	equ	0xFFE
 37054                           tosl	equ	0xFFD
 37055                           pclatu	equ	0xFFB
 37056                           pclath	equ	0xFFA
 37057                           tblptru	equ	0xFF8
 37058                           tblptrh	equ	0xFF7
 37059                           tblptrl	equ	0xFF6
 37060                           tablat	equ	0xFF5
 37061                           prodh	equ	0xFF4
 37062                           prodl	equ	0xFF3
 37063                           intcon	equ	0xFF2
 37064                           intcon2	equ	0xFF1
 37065                           intcon3	equ	0xFF0
 37066                           indf0	equ	0xFEF
 37067                           postinc0	equ	0xFEE
 37068                           plusw0	equ	0xFEB
 37069                           fsr0h	equ	0xFEA
 37070                           fsr0l	equ	0xFE9
 37071                           wreg	equ	0xFE8
 37072                           indf1	equ	0xFE7
 37073                           postinc1	equ	0xFE6
 37074                           postdec1	equ	0xFE5
 37075                           plusw1	equ	0xFE3
 37076                           fsr1h	equ	0xFE2
 37077                           fsr1l	equ	0xFE1
 37078                           bsr	equ	0xFE0
 37079                           indf2	equ	0xFDF
 37080                           postinc2	equ	0xFDE
 37081                           postdec2	equ	0xFDD
 37082                           plusw2	equ	0xFDB
 37083                           fsr2h	equ	0xFDA
 37084                           fsr2l	equ	0xFD9
 37085                           status	equ	0xFD8
 37086                           
 37087 ;; *************** function _Uart_Uart1RxIsr *****************
 37088 ;; Defined at:
 37089 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 37090 ;; Parameters:    Size  Location     Type
 37091 ;;		None
 37092 ;; Auto vars:     Size  Location     Type
 37093 ;;		None
 37094 ;; Return value:  Size  Location     Type
 37095 ;;                  1    wreg      void 
 37096 ;; Registers used:
 37097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37098 ;; Tracked objects:
 37099 ;;		On entry : 0/0
 37100 ;;		On exit  : 0/0
 37101 ;;		Unchanged: 0/0
 37102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37107 ;;Total ram usage:        0 bytes
 37108 ;; Hardware stack levels used:    1
 37109 ;; Hardware stack levels required when called:    2
 37110 ;; This function calls:
 37111 ;;		_Uart_MdmGsmGprsReadService
 37112 ;; This function is called by:
 37113 ;;		_HighPriorityIsr
 37114 ;; This function uses a non-reentrant model
 37115 ;;
 37116                           
 37117                           	psect	text183
 37118  006850                     __ptext183:
 37119                           	opt stack 0
 37120  006850                     _Uart_Uart1RxIsr:
 37121                           	opt stack 8
 37122                           
 37123                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 37124                           ;uart_drv.c: 590: UartRxData = RCREG1;
 37125                           
 37126                           ;incstack = 0
 37127  006850  CFAF F02B          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 37128                           
 37129                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 37130  006854  C02B  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 37131  006858  0E01               	movlw	1
 37132  00685A  ECBB  F01E         	call	_Uart_MdmGsmGprsReadService
 37133  00685E  0012               	return		;funcret
 37134  006860                     __end_of_Uart_Uart1RxIsr:
 37135                           	opt stack 0
 37136                           tosu	equ	0xFFF
 37137                           tosh	equ	0xFFE
 37138                           tosl	equ	0xFFD
 37139                           pclatu	equ	0xFFB
 37140                           pclath	equ	0xFFA
 37141                           tblptru	equ	0xFF8
 37142                           tblptrh	equ	0xFF7
 37143                           tblptrl	equ	0xFF6
 37144                           tablat	equ	0xFF5
 37145                           prodh	equ	0xFF4
 37146                           prodl	equ	0xFF3
 37147                           intcon	equ	0xFF2
 37148                           intcon2	equ	0xFF1
 37149                           intcon3	equ	0xFF0
 37150                           indf0	equ	0xFEF
 37151                           postinc0	equ	0xFEE
 37152                           plusw0	equ	0xFEB
 37153                           fsr0h	equ	0xFEA
 37154                           fsr0l	equ	0xFE9
 37155                           wreg	equ	0xFE8
 37156                           indf1	equ	0xFE7
 37157                           postinc1	equ	0xFE6
 37158                           postdec1	equ	0xFE5
 37159                           plusw1	equ	0xFE3
 37160                           fsr1h	equ	0xFE2
 37161                           fsr1l	equ	0xFE1
 37162                           bsr	equ	0xFE0
 37163                           indf2	equ	0xFDF
 37164                           postinc2	equ	0xFDE
 37165                           postdec2	equ	0xFDD
 37166                           plusw2	equ	0xFDB
 37167                           fsr2h	equ	0xFDA
 37168                           fsr2l	equ	0xFD9
 37169                           status	equ	0xFD8
 37170                           
 37171 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 37172 ;; Defined at:
 37173 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 37174 ;; Parameters:    Size  Location     Type
 37175 ;;  Module          1    wreg     unsigned char 
 37176 ;;  UartData        1    3[COMRAM] unsigned char 
 37177 ;; Auto vars:     Size  Location     Type
 37178 ;;  Module          1    0[COMRAM] unsigned char 
 37179 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 37180 ;; Return value:  Size  Location     Type
 37181 ;;                  1    wreg      void 
 37182 ;; Registers used:
 37183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37184 ;; Tracked objects:
 37185 ;;		On entry : 0/0
 37186 ;;		On exit  : 0/0
 37187 ;;		Unchanged: 0/0
 37188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37189 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37192 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37193 ;;Total ram usage:        3 bytes
 37194 ;; Hardware stack levels used:    1
 37195 ;; Hardware stack levels required when called:    1
 37196 ;; This function calls:
 37197 ;;		i2_GenerateEvt
 37198 ;; This function is called by:
 37199 ;;		_Uart_Uart1RxIsr
 37200 ;; This function uses a non-reentrant model
 37201 ;;
 37202                           
 37203                           	psect	text184
 37204  003D76                     __ptext184:
 37205                           	opt stack 0
 37206  003D76                     _Uart_MdmGsmGprsReadService:
 37207                           	opt stack 8
 37208                           
 37209                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 37210                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 37211                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 37212                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 37213                           
 37214                           ;incstack = 0
 37215  003D76  0E00               	movlw	0
 37216  003D78  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 37217  003D7A  0E00               	movlw	0
 37218  003D7C  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 37219                           
 37220                           ;uart_drv.c: 383: switch (RxState)
 37221  003D7E  D058               	goto	i2l680
 37222  003D80                     
 37223                           ;uart_drv.c: 387: if (UartData == '\r')
 37224  003D80  0E0D               	movlw	13
 37225  003D82  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 37226  003D84  A4D8               	btfss	status,2,c
 37227  003D86  D003               	goto	i2l682
 37228                           
 37229                           ;uart_drv.c: 388: {
 37230                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 37231  003D88  0E01               	movlw	1
 37232  003D8A  6E2C               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 37233                           
 37234                           ;uart_drv.c: 391: }
 37235  003D8C  0012               	return	
 37236  003D8E                     i2l682:
 37237                           
 37238                           ;uart_drv.c: 392: else
 37239                           ;uart_drv.c: 393: {
 37240                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 37241  003D8E  0E90               	movlw	144
 37242  003D90  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37243  003D92  0E01               	movlw	1
 37244  003D94  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37245  003D96  B0D8               	btfsc	status,0,c
 37246  003D98  0012               	return	
 37247                           
 37248                           ;uart_drv.c: 395: {
 37249                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 37250  003D9A  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 37251  003D9C  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37252  003D9E  6ED9               	movwf	fsr2l,c
 37253  003DA0  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 37254  003DA2  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37255  003DA4  6EDA               	movwf	fsr2h,c
 37256  003DA6  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 37257                           
 37258                           ;uart_drv.c: 399: RxCounter++;
 37259  003DAA  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 37260  003DAC  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 37261                           
 37262                           ;uart_drv.c: 400: }
 37263                           ;uart_drv.c: 401: }
 37264                           ;uart_drv.c: 402: break;
 37265  003DAE  0012               	return	
 37266  003DB0                     
 37267                           ;uart_drv.c: 406: if (UartData == '\n')
 37268  003DB0  0E0A               	movlw	10
 37269  003DB2  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 37270  003DB4  A4D8               	btfss	status,2,c
 37271  003DB6  D035               	goto	i2l688
 37272                           
 37273                           ;uart_drv.c: 407: {
 37274                           ;uart_drv.c: 409: if (RxCounter > 0)
 37275  003DB8  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37276  003DBA  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37277  003DBC  B4D8               	btfsc	status,2,c
 37278  003DBE  D031               	goto	i2l688
 37279                           
 37280                           ;uart_drv.c: 410: {
 37281                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 37282  003DC0  0E00               	movlw	0
 37283  003DC2  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 37284  003DC4  0E00               	movlw	0
 37285  003DC6  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 37286  003DC8  D010               	goto	i2l689
 37287  003DCA                     
 37288                           ;uart_drv.c: 413: {
 37289                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 37290  003DCA  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 37291  003DCC  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 37292  003DCE  6ED9               	movwf	fsr2l,c
 37293  003DD0  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 37294  003DD2  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 37295  003DD4  6EDA               	movwf	fsr2h,c
 37296  003DD6  0E58               	movlw	low _RxBuffer
 37297  003DD8  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 37298  003DDA  6EE1               	movwf	fsr1l,c
 37299  003DDC  0E0C               	movlw	high _RxBuffer
 37300  003DDE  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 37301  003DE0  6EE2               	movwf	fsr1h,c
 37302  003DE2  CFDF FFE7          	movff	indf2,indf1
 37303  003DE6  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 37304  003DE8  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 37305  003DEA                     i2l689:
 37306  003DEA  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37307  003DEC  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 37308  003DEE  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37309  003DF0  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 37310  003DF2  A0D8               	btfss	status,0,c
 37311  003DF4  D7EA               	goto	i2l690
 37312                           
 37313                           ;uart_drv.c: 415: }
 37314                           ;uart_drv.c: 417: RxLen = RxCounter;
 37315  003DF6  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 37316  003DFA  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 37317                           
 37318                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 37319  003DFE  0E3C               	movlw	low _NewStringReceived
 37320  003E00  6E01               	movwf	i2GenerateEvt@Event,c
 37321  003E02  0E00               	movlw	high _NewStringReceived
 37322  003E04  6E02               	movwf	i2GenerateEvt@Event+1,c
 37323  003E06  ECD8  F033         	call	i2_GenerateEvt	;wreg free
 37324                           
 37325                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 37326  003E0A  0E3B               	movlw	low _NewMdmEvtParserRequest
 37327  003E0C  6E01               	movwf	i2GenerateEvt@Event,c
 37328  003E0E  0E00               	movlw	high _NewMdmEvtParserRequest
 37329  003E10  6E02               	movwf	i2GenerateEvt@Event+1,c
 37330  003E12  ECD8  F033         	call	i2_GenerateEvt	;wreg free
 37331                           
 37332                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 37333  003E16  0E3A               	movlw	low _NewStringMdmTerminal
 37334  003E18  6E01               	movwf	i2GenerateEvt@Event,c
 37335  003E1A  0E00               	movlw	high _NewStringMdmTerminal
 37336  003E1C  6E02               	movwf	i2GenerateEvt@Event+1,c
 37337  003E1E  ECD8  F033         	call	i2_GenerateEvt	;wreg free
 37338  003E22                     i2l688:
 37339                           
 37340                           ;uart_drv.c: 427: }
 37341                           ;uart_drv.c: 429: RxState = ReadData;
 37342                           
 37343                           ;uart_drv.c: 424: else
 37344                           ;uart_drv.c: 425: {
 37345                           
 37346                           ;uart_drv.c: 422: }
 37347                           ;uart_drv.c: 423: }
 37348  003E22  0E00               	movlw	0
 37349  003E24  6E2C               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 37350                           
 37351                           ;uart_drv.c: 431: RxCounter = 0;
 37352  003E26  0E00               	movlw	0
 37353  003E28  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 37354  003E2A  0E00               	movlw	0
 37355  003E2C  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 37356                           
 37357                           ;uart_drv.c: 436: }
 37358                           
 37359                           ;uart_drv.c: 435: break;
 37360                           
 37361                           ;uart_drv.c: 434: default:
 37362                           
 37363                           ;uart_drv.c: 432: break;
 37364  003E2E  0012               	return	
 37365  003E30                     i2l680:
 37366  003E30  502C               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 37367                           
 37368                           ; Switch size 1, requested type "space"
 37369                           ; Number of cases is 2, Range of values is 0 to 1
 37370                           ; switch strategies available:
 37371                           ; Name         Instructions Cycles
 37372                           ; simple_byte            7     4 (average)
 37373                           ;	Chosen strategy is simple_byte
 37374  003E32  0A00               	xorlw	0	; case 0
 37375  003E34  B4D8               	btfsc	status,2,c
 37376  003E36  D7A4               	goto	i2l681
 37377  003E38  0A01               	xorlw	1	; case 1
 37378  003E3A  A4D8               	btfss	status,2,c
 37379  003E3C  0012               	return	
 37380  003E3E  D7B8               	goto	i2l686
 37381  003E40                     __end_of_Uart_MdmGsmGprsReadService:
 37382                           	opt stack 0
 37383                           tosu	equ	0xFFF
 37384                           tosh	equ	0xFFE
 37385                           tosl	equ	0xFFD
 37386                           pclatu	equ	0xFFB
 37387                           pclath	equ	0xFFA
 37388                           tblptru	equ	0xFF8
 37389                           tblptrh	equ	0xFF7
 37390                           tblptrl	equ	0xFF6
 37391                           tablat	equ	0xFF5
 37392                           prodh	equ	0xFF4
 37393                           prodl	equ	0xFF3
 37394                           intcon	equ	0xFF2
 37395                           intcon2	equ	0xFF1
 37396                           intcon3	equ	0xFF0
 37397                           indf0	equ	0xFEF
 37398                           postinc0	equ	0xFEE
 37399                           plusw0	equ	0xFEB
 37400                           fsr0h	equ	0xFEA
 37401                           fsr0l	equ	0xFE9
 37402                           wreg	equ	0xFE8
 37403                           indf1	equ	0xFE7
 37404                           postinc1	equ	0xFE6
 37405                           postdec1	equ	0xFE5
 37406                           plusw1	equ	0xFE3
 37407                           fsr1h	equ	0xFE2
 37408                           fsr1l	equ	0xFE1
 37409                           bsr	equ	0xFE0
 37410                           indf2	equ	0xFDF
 37411                           postinc2	equ	0xFDE
 37412                           postdec2	equ	0xFDD
 37413                           plusw2	equ	0xFDB
 37414                           fsr2h	equ	0xFDA
 37415                           fsr2l	equ	0xFD9
 37416                           status	equ	0xFD8
 37417                           
 37418 ;; *************** function i2_GenerateEvt *****************
 37419 ;; Defined at:
 37420 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 37421 ;; Parameters:    Size  Location     Type
 37422 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 37423 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 37424 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 37425 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 37426 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 37427 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 37428 ;; Auto vars:     Size  Location     Type
 37429 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 37430 ;; Return value:  Size  Location     Type
 37431 ;;                  1    wreg      enum E7699
 37432 ;; Registers used:
 37433 ;;		wreg, fsr2l, fsr2h, status,2
 37434 ;; Tracked objects:
 37435 ;;		On entry : 0/0
 37436 ;;		On exit  : 0/0
 37437 ;;		Unchanged: 0/0
 37438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37442 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37443 ;;Total ram usage:        3 bytes
 37444 ;; Hardware stack levels used:    1
 37445 ;; This function calls:
 37446 ;;		Nothing
 37447 ;; This function is called by:
 37448 ;;		_Uart_MdmGsmGprsReadService
 37449 ;; This function uses a non-reentrant model
 37450 ;;
 37451                           
 37452                           	psect	text185
 37453  0067B0                     __ptext185:
 37454                           	opt stack 0
 37455  0067B0                     i2_GenerateEvt:
 37456                           	opt stack 8
 37457                           
 37458                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 37459                           
 37460                           ;incstack = 0
 37461  0067B0  0E00               	movlw	0
 37462  0067B2  6E03               	movwf	i2GenerateEvt@EventStatus,c
 37463                           
 37464                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 37465  0067B4  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 37466  0067B8  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 37467  0067BC  0E02               	movlw	2
 37468  0067BE  6EDF               	movwf	indf2,c
 37469                           
 37470                           ;os_ser.c: 83: EventStatus = EventSent;
 37471  0067C0  0E02               	movlw	2
 37472  0067C2  6E03               	movwf	i2GenerateEvt@EventStatus,c
 37473  0067C4  0012               	return	
 37474  0067C6                     __end_ofi2_GenerateEvt:
 37475                           	opt stack 0
 37476                           tosu	equ	0xFFF
 37477                           tosh	equ	0xFFE
 37478                           tosl	equ	0xFFD
 37479                           pclatu	equ	0xFFB
 37480                           pclath	equ	0xFFA
 37481                           tblptru	equ	0xFF8
 37482                           tblptrh	equ	0xFF7
 37483                           tblptrl	equ	0xFF6
 37484                           tablat	equ	0xFF5
 37485                           prodh	equ	0xFF4
 37486                           prodl	equ	0xFF3
 37487                           intcon	equ	0xFF2
 37488                           intcon2	equ	0xFF1
 37489                           intcon3	equ	0xFF0
 37490                           indf0	equ	0xFEF
 37491                           postinc0	equ	0xFEE
 37492                           plusw0	equ	0xFEB
 37493                           fsr0h	equ	0xFEA
 37494                           fsr0l	equ	0xFE9
 37495                           wreg	equ	0xFE8
 37496                           indf1	equ	0xFE7
 37497                           postinc1	equ	0xFE6
 37498                           postdec1	equ	0xFE5
 37499                           plusw1	equ	0xFE3
 37500                           fsr1h	equ	0xFE2
 37501                           fsr1l	equ	0xFE1
 37502                           bsr	equ	0xFE0
 37503                           indf2	equ	0xFDF
 37504                           postinc2	equ	0xFDE
 37505                           postdec2	equ	0xFDD
 37506                           plusw2	equ	0xFDB
 37507                           fsr2h	equ	0xFDA
 37508                           fsr2l	equ	0xFD9
 37509                           status	equ	0xFD8
 37510                           
 37511 ;; *************** function _Rtcc_RtcIsr *****************
 37512 ;; Defined at:
 37513 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 37514 ;; Parameters:    Size  Location     Type
 37515 ;;		None
 37516 ;; Auto vars:     Size  Location     Type
 37517 ;;		None
 37518 ;; Return value:  Size  Location     Type
 37519 ;;                  1    wreg      void 
 37520 ;; Registers used:
 37521 ;;		wreg, status,2, status,0
 37522 ;; Tracked objects:
 37523 ;;		On entry : 0/0
 37524 ;;		On exit  : 0/0
 37525 ;;		Unchanged: 0/0
 37526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37531 ;;Total ram usage:        0 bytes
 37532 ;; Hardware stack levels used:    1
 37533 ;; This function calls:
 37534 ;;		Nothing
 37535 ;; This function is called by:
 37536 ;;		_HighPriorityIsr
 37537 ;; This function uses a non-reentrant model
 37538 ;;
 37539                           
 37540                           	psect	text186
 37541  0068EA                     __ptext186:
 37542                           	opt stack 0
 37543  0068EA                     _Rtcc_RtcIsr:
 37544                           	opt stack 10
 37545                           
 37546                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 37547                           
 37548                           ;incstack = 0
 37549  0068EA  90A4               	bcf	4004,0,c	;volatile
 37550  0068EC  0012               	return	
 37551  0068EE                     __end_of_Rtcc_RtcIsr:
 37552                           	opt stack 0
 37553                           tosu	equ	0xFFF
 37554                           tosh	equ	0xFFE
 37555                           tosl	equ	0xFFD
 37556                           pclatu	equ	0xFFB
 37557                           pclath	equ	0xFFA
 37558                           tblptru	equ	0xFF8
 37559                           tblptrh	equ	0xFF7
 37560                           tblptrl	equ	0xFF6
 37561                           tablat	equ	0xFF5
 37562                           prodh	equ	0xFF4
 37563                           prodl	equ	0xFF3
 37564                           intcon	equ	0xFF2
 37565                           intcon2	equ	0xFF1
 37566                           intcon3	equ	0xFF0
 37567                           indf0	equ	0xFEF
 37568                           postinc0	equ	0xFEE
 37569                           plusw0	equ	0xFEB
 37570                           fsr0h	equ	0xFEA
 37571                           fsr0l	equ	0xFE9
 37572                           wreg	equ	0xFE8
 37573                           indf1	equ	0xFE7
 37574                           postinc1	equ	0xFE6
 37575                           postdec1	equ	0xFE5
 37576                           plusw1	equ	0xFE3
 37577                           fsr1h	equ	0xFE2
 37578                           fsr1l	equ	0xFE1
 37579                           bsr	equ	0xFE0
 37580                           indf2	equ	0xFDF
 37581                           postinc2	equ	0xFDE
 37582                           postdec2	equ	0xFDD
 37583                           plusw2	equ	0xFDB
 37584                           fsr2h	equ	0xFDA
 37585                           fsr2l	equ	0xFD9
 37586                           status	equ	0xFD8
 37587                           
 37588 ;; *************** function _Mcu_Int1Isr *****************
 37589 ;; Defined at:
 37590 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 37591 ;; Parameters:    Size  Location     Type
 37592 ;;		None
 37593 ;; Auto vars:     Size  Location     Type
 37594 ;;		None
 37595 ;; Return value:  Size  Location     Type
 37596 ;;                  1    wreg      void 
 37597 ;; Registers used:
 37598 ;;		wreg, status,2, status,0
 37599 ;; Tracked objects:
 37600 ;;		On entry : 0/0
 37601 ;;		On exit  : 0/0
 37602 ;;		Unchanged: 0/0
 37603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37608 ;;Total ram usage:        0 bytes
 37609 ;; Hardware stack levels used:    1
 37610 ;; This function calls:
 37611 ;;		Nothing
 37612 ;; This function is called by:
 37613 ;;		_HighPriorityIsr
 37614 ;; This function uses a non-reentrant model
 37615 ;;
 37616                           
 37617                           	psect	text187
 37618  0068EE                     __ptext187:
 37619                           	opt stack 0
 37620  0068EE                     _Mcu_Int1Isr:
 37621                           	opt stack 10
 37622                           
 37623                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 37624                           
 37625                           ;incstack = 0
 37626  0068EE  90F0               	bcf	intcon3,0,c	;volatile
 37627  0068F0  0012               	return	
 37628  0068F2                     __end_of_Mcu_Int1Isr:
 37629                           	opt stack 0
 37630                           tosu	equ	0xFFF
 37631                           tosh	equ	0xFFE
 37632                           tosl	equ	0xFFD
 37633                           pclatu	equ	0xFFB
 37634                           pclath	equ	0xFFA
 37635                           tblptru	equ	0xFF8
 37636                           tblptrh	equ	0xFF7
 37637                           tblptrl	equ	0xFF6
 37638                           tablat	equ	0xFF5
 37639                           prodh	equ	0xFF4
 37640                           prodl	equ	0xFF3
 37641                           intcon	equ	0xFF2
 37642                           intcon2	equ	0xFF1
 37643                           intcon3	equ	0xFF0
 37644                           indf0	equ	0xFEF
 37645                           postinc0	equ	0xFEE
 37646                           plusw0	equ	0xFEB
 37647                           fsr0h	equ	0xFEA
 37648                           fsr0l	equ	0xFE9
 37649                           wreg	equ	0xFE8
 37650                           indf1	equ	0xFE7
 37651                           postinc1	equ	0xFE6
 37652                           postdec1	equ	0xFE5
 37653                           plusw1	equ	0xFE3
 37654                           fsr1h	equ	0xFE2
 37655                           fsr1l	equ	0xFE1
 37656                           bsr	equ	0xFE0
 37657                           indf2	equ	0xFDF
 37658                           postinc2	equ	0xFDE
 37659                           postdec2	equ	0xFDD
 37660                           plusw2	equ	0xFDB
 37661                           fsr2h	equ	0xFDA
 37662                           fsr2l	equ	0xFD9
 37663                           status	equ	0xFD8
 37664                           
 37665 ;; *************** function _Mcu_Int0Isr *****************
 37666 ;; Defined at:
 37667 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 37668 ;; Parameters:    Size  Location     Type
 37669 ;;		None
 37670 ;; Auto vars:     Size  Location     Type
 37671 ;;		None
 37672 ;; Return value:  Size  Location     Type
 37673 ;;                  1    wreg      void 
 37674 ;; Registers used:
 37675 ;;		wreg, status,2, status,0
 37676 ;; Tracked objects:
 37677 ;;		On entry : 0/0
 37678 ;;		On exit  : 0/0
 37679 ;;		Unchanged: 0/0
 37680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37685 ;;Total ram usage:        0 bytes
 37686 ;; Hardware stack levels used:    1
 37687 ;; This function calls:
 37688 ;;		Nothing
 37689 ;; This function is called by:
 37690 ;;		_HighPriorityIsr
 37691 ;; This function uses a non-reentrant model
 37692 ;;
 37693                           
 37694                           	psect	text188
 37695  0068F2                     __ptext188:
 37696                           	opt stack 0
 37697  0068F2                     _Mcu_Int0Isr:
 37698                           	opt stack 10
 37699                           
 37700                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 37701                           
 37702                           ;incstack = 0
 37703  0068F2  92F2               	bcf	intcon,1,c	;volatile
 37704  0068F4  0012               	return	
 37705  0068F6                     __end_of_Mcu_Int0Isr:
 37706                           	opt stack 0
 37707                           tosu	equ	0xFFF
 37708                           tosh	equ	0xFFE
 37709                           tosl	equ	0xFFD
 37710                           pclatu	equ	0xFFB
 37711                           pclath	equ	0xFFA
 37712                           tblptru	equ	0xFF8
 37713                           tblptrh	equ	0xFF7
 37714                           tblptrl	equ	0xFF6
 37715                           tablat	equ	0xFF5
 37716                           prodh	equ	0xFF4
 37717                           prodl	equ	0xFF3
 37718                           intcon	equ	0xFF2
 37719                           intcon2	equ	0xFF1
 37720                           intcon3	equ	0xFF0
 37721                           indf0	equ	0xFEF
 37722                           postinc0	equ	0xFEE
 37723                           plusw0	equ	0xFEB
 37724                           fsr0h	equ	0xFEA
 37725                           fsr0l	equ	0xFE9
 37726                           wreg	equ	0xFE8
 37727                           indf1	equ	0xFE7
 37728                           postinc1	equ	0xFE6
 37729                           postdec1	equ	0xFE5
 37730                           plusw1	equ	0xFE3
 37731                           fsr1h	equ	0xFE2
 37732                           fsr1l	equ	0xFE1
 37733                           bsr	equ	0xFE0
 37734                           indf2	equ	0xFDF
 37735                           postinc2	equ	0xFDE
 37736                           postdec2	equ	0xFDD
 37737                           plusw2	equ	0xFDB
 37738                           fsr2h	equ	0xFDA
 37739                           fsr2l	equ	0xFD9
 37740                           status	equ	0xFD8
 37741                           tosu	equ	0xFFF
 37742                           tosh	equ	0xFFE
 37743                           tosl	equ	0xFFD
 37744                           pclatu	equ	0xFFB
 37745                           pclath	equ	0xFFA
 37746                           tblptru	equ	0xFF8
 37747                           tblptrh	equ	0xFF7
 37748                           tblptrl	equ	0xFF6
 37749                           tablat	equ	0xFF5
 37750                           prodh	equ	0xFF4
 37751                           prodl	equ	0xFF3
 37752                           intcon	equ	0xFF2
 37753                           intcon2	equ	0xFF1
 37754                           intcon3	equ	0xFF0
 37755                           indf0	equ	0xFEF
 37756                           postinc0	equ	0xFEE
 37757                           plusw0	equ	0xFEB
 37758                           fsr0h	equ	0xFEA
 37759                           fsr0l	equ	0xFE9
 37760                           wreg	equ	0xFE8
 37761                           indf1	equ	0xFE7
 37762                           postinc1	equ	0xFE6
 37763                           postdec1	equ	0xFE5
 37764                           plusw1	equ	0xFE3
 37765                           fsr1h	equ	0xFE2
 37766                           fsr1l	equ	0xFE1
 37767                           bsr	equ	0xFE0
 37768                           indf2	equ	0xFDF
 37769                           postinc2	equ	0xFDE
 37770                           postdec2	equ	0xFDD
 37771                           plusw2	equ	0xFDB
 37772                           fsr2h	equ	0xFDA
 37773                           fsr2l	equ	0xFD9
 37774                           status	equ	0xFD8
 37775                           
 37776                           	psect	text189
 37777  000000                     __ptext189:
 37778                           	opt stack 0
 37779                           tosu	equ	0xFFF
 37780                           tosh	equ	0xFFE
 37781                           tosl	equ	0xFFD
 37782                           pclatu	equ	0xFFB
 37783                           pclath	equ	0xFFA
 37784                           tblptru	equ	0xFF8
 37785                           tblptrh	equ	0xFF7
 37786                           tblptrl	equ	0xFF6
 37787                           tablat	equ	0xFF5
 37788                           prodh	equ	0xFF4
 37789                           prodl	equ	0xFF3
 37790                           intcon	equ	0xFF2
 37791                           intcon2	equ	0xFF1
 37792                           intcon3	equ	0xFF0
 37793                           indf0	equ	0xFEF
 37794                           postinc0	equ	0xFEE
 37795                           plusw0	equ	0xFEB
 37796                           fsr0h	equ	0xFEA
 37797                           fsr0l	equ	0xFE9
 37798                           wreg	equ	0xFE8
 37799                           indf1	equ	0xFE7
 37800                           postinc1	equ	0xFE6
 37801                           postdec1	equ	0xFE5
 37802                           plusw1	equ	0xFE3
 37803                           fsr1h	equ	0xFE2
 37804                           fsr1l	equ	0xFE1
 37805                           bsr	equ	0xFE0
 37806                           indf2	equ	0xFDF
 37807                           postinc2	equ	0xFDE
 37808                           postdec2	equ	0xFDD
 37809                           plusw2	equ	0xFDB
 37810                           fsr2h	equ	0xFDA
 37811                           fsr2l	equ	0xFD9
 37812                           status	equ	0xFD8
 37813                           
 37814                           	psect	rparam
 37815  0000                     tosu	equ	0xFFF
 37816                           tosh	equ	0xFFE
 37817                           tosl	equ	0xFFD
 37818                           pclatu	equ	0xFFB
 37819                           pclath	equ	0xFFA
 37820                           tblptru	equ	0xFF8
 37821                           tblptrh	equ	0xFF7
 37822                           tblptrl	equ	0xFF6
 37823                           tablat	equ	0xFF5
 37824                           prodh	equ	0xFF4
 37825                           prodl	equ	0xFF3
 37826                           intcon	equ	0xFF2
 37827                           intcon2	equ	0xFF1
 37828                           intcon3	equ	0xFF0
 37829                           indf0	equ	0xFEF
 37830                           postinc0	equ	0xFEE
 37831                           plusw0	equ	0xFEB
 37832                           fsr0h	equ	0xFEA
 37833                           fsr0l	equ	0xFE9
 37834                           wreg	equ	0xFE8
 37835                           indf1	equ	0xFE7
 37836                           postinc1	equ	0xFE6
 37837                           postdec1	equ	0xFE5
 37838                           plusw1	equ	0xFE3
 37839                           fsr1h	equ	0xFE2
 37840                           fsr1l	equ	0xFE1
 37841                           bsr	equ	0xFE0
 37842                           indf2	equ	0xFDF
 37843                           postinc2	equ	0xFDE
 37844                           postdec2	equ	0xFDD
 37845                           plusw2	equ	0xFDB
 37846                           fsr2h	equ	0xFDA
 37847                           fsr2l	equ	0xFD9
 37848                           status	equ	0xFD8
 37849                           
 37850                           	psect	temp
 37851  000042                     btemp:
 37852                           	opt stack 0
 37853  000042                     	ds	1
 37854  0000                     int$flags	set	btemp
 37855  0000                     wtemp6	set	btemp+1
 37856                           tosu	equ	0xFFF
 37857                           tosh	equ	0xFFE
 37858                           tosl	equ	0xFFD
 37859                           pclatu	equ	0xFFB
 37860                           pclath	equ	0xFFA
 37861                           tblptru	equ	0xFF8
 37862                           tblptrh	equ	0xFF7
 37863                           tblptrl	equ	0xFF6
 37864                           tablat	equ	0xFF5
 37865                           prodh	equ	0xFF4
 37866                           prodl	equ	0xFF3
 37867                           intcon	equ	0xFF2
 37868                           intcon2	equ	0xFF1
 37869                           intcon3	equ	0xFF0
 37870                           indf0	equ	0xFEF
 37871                           postinc0	equ	0xFEE
 37872                           plusw0	equ	0xFEB
 37873                           fsr0h	equ	0xFEA
 37874                           fsr0l	equ	0xFE9
 37875                           wreg	equ	0xFE8
 37876                           indf1	equ	0xFE7
 37877                           postinc1	equ	0xFE6
 37878                           postdec1	equ	0xFE5
 37879                           plusw1	equ	0xFE3
 37880                           fsr1h	equ	0xFE2
 37881                           fsr1l	equ	0xFE1
 37882                           bsr	equ	0xFE0
 37883                           indf2	equ	0xFDF
 37884                           postinc2	equ	0xFDE
 37885                           postdec2	equ	0xFDD
 37886                           plusw2	equ	0xFDB
 37887                           fsr2h	equ	0xFDA
 37888                           fsr2l	equ	0xFD9
 37889                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    590
    Data        183
    BSS         2364
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      5     256
    BANK4           192      0     173
    BANK5           256      0     214
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     250
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_33(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> MyApp_Task@receivedNumber(BANK4[13]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 3775
		 -> MyApp_Task@emptyNumber(BANK1[13]), RAM(DATA[3775]), callerNumber(BANK3[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 5
		 -> memoryPreamble(BANK3[5]), 

    parseCommand@text	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), 
		 -> callerNumber(BANK3[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 3775
		 -> memorizedNumbersCount(COMRAM[1]), memoryPreamble(BANK3[5]), MyApp_Task@emptyNumber(BANK1[13]), RAM(DATA[3775]), 
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK8[50]), PhoneNumber(BANK5[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> MyApp_Task@receivedNumber(BANK4[13]), smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK8[50]), PhoneNumber(BANK5[20]), SendSmsSm@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> isNumberInMemory@readBuffer(BANK1[13]), MyApp_Task@cmdAddNumber(BANK1[4]), parseCommand@deleteNumberCmd(BANK0[3]), parseCommand@addNumberCmd(BANK0[3]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> MyApp_Task@receivedNumber(BANK4[13]), smsText(BANK4[20]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8952 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 3775
		 -> memorizedNumbersCount(COMRAM[1]), memoryPreamble(BANK3[5]), MyApp_Task@emptyNumber(BANK1[13]), RAM(DATA[3775]), 
		 -> callerNumber(BANK3[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4616$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4616$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4616$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4616$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3069$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3059$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3059$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3035$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3035$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3035$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3035$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2536_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2536_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetLastInteractionNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_32(CODE[12]), STR_31(CODE[19]), STR_30(CODE[14]), STR_29(CODE[14]), 
		 -> STR_20(CODE[14]), STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), 
		 -> STR_16(CODE[17]), STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), 
		 -> STR_11(CODE[14]), STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), 
		 -> STR_6(CODE[5]), STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), 
		 -> STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _waitSetupCall->_secondsAppTimer
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _saveNumberInMemory->_Eeprom_Write
    _parseCommand->_StringCompare
    _isNumberInMemory->_Eeprom_Read
    _initMemorizedNumbersCount->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _initGprsModem->_Mdm_SetSmsFormat
    _secondsAppTimer->___lwdiv
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _findEmptySpot->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCopy
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _StringCopy->_GetCallerNumber
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_isNumberInMemory
    _initFsm->_initEeprom
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  879071
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  874440
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  437313
                                              0 BANK3      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  437127
                                              0 BANK3      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59042
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59042
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41832
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          25    25      0  171863
                                             19 BANK1     24    24      0
                    _GetCallerNumber
           _GetLastInteractionNumber
                _Led_SetLedBlinkTime
                   _Led_SetLedStatus
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
                         _StringCopy
              _Uart_WriteConstString
                      _findEmptySpot
                            _initFsm
          _initMemorizedNumbersCount
                   _isNumberInMemory
                       _parseCommand
                 _saveNumberInMemory
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (4) _waitSetupCall                                        1     1      0   17846
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _getSetupCall                                         1     1      0    5631
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (6) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (6) _Mdm_HangPhoneCall                                    0     0      0    2855
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _saveNumberInMemory                                   3     1      2   10340
                                             54 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (4) _parseCommand                                         9     7      2    3620
                                             40 BANK0      9     7      2
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (4) _isNumberInMemory                                    19    17      2   28290
                                              0 BANK1     19    17      2
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (4) _initMemorizedNumbersCount                            0     0      0    9966
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (5) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Write                                         7     4      3    9966
                                             47 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   40153
                                              3 BANK1      1     1      0
                         _initEeprom
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15682
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   11118
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24434
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (4) _findEmptySpot                                       17    17      0   25120
                                              0 BANK1     17    17      0
                        _Eeprom_Read
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _isNumberValid                                        5     3      2     578
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Read                                          7     4      3   24354
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_QueryI2cData                                  7     0      7   23495
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3711
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_GetSmsData                                       3     1      2    8165
                                             47 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _GetLastInteractionNumber                             2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetCallerNumber                                      2     0      2    5123
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   73572
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   16197
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   13138
                                             47 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _StringCompare                                       11     5      6    2728
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   15288
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8851
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   14102
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   42931
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   21502
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   21429
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteConstString                                3     1      2    2855
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (8) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _StringCopy                                          10     4      6    5187
                                             37 BANK0     10     4      6
                    _GetCallerNumber (ARG)
           _GetLastInteractionNumber (ARG)
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    2421
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7347
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7347
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2877
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1    1060
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _GetLastInteractionNumber
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _StringCopy
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber (ARG)
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _findEmptySpot
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _isNumberValid
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _initMemorizedNumbersCount
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
             _initPreamble (ARG)
           _initPreamble
         _isNumberInMemory
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _StringCompare
           _isNumberValid
         _parseCommand
           _StringCompare
           _isNumberValid
         _saveNumberInMemory
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
             _initPreamble (ARG)
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _waitSetupCall
           _Led_SetLedStatus
           _getSetupCall
             _Mdm_HangPhoneCall
               _Uart_WriteConstString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Mdm_IsRinging
               _ReceiveEvt
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _GetLastInteractionNumber
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _StringCopy
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber (ARG)
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _findEmptySpot
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _isNumberValid
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _initMemorizedNumbersCount
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
             _initPreamble (ARG)
           _initPreamble
         _isNumberInMemory
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _StringCompare
           _isNumberValid
         _parseCommand
           _StringCompare
           _isNumberValid
         _saveNumberInMemory
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
             _initPreamble (ARG)
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _waitSetupCall
           _Led_SetLedStatus
           _getSetupCall
             _Mdm_HangPhoneCall
               _Uart_WriteConstString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Mdm_IsRinging
               _ReceiveEvt
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      FA      22       97.7%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      D6      16       83.6%
BITBANK3           100      0       0      11        0.0%
BANK3              100      5     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      AD      14       90.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     9A3       8        0.0%
DATA                 0      0     CC3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 27 09:09:23 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 57FC  
                              _USB_SD_Ptr FC1E                            ??_getSetupCall 0083  
               __size_of_Mdm_SetSmsFormat 0050                      __size_of_TurnOnModem 004C  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 6632  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 271E                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 0030                                       l202 238E  
                                     l203 2396                                       l205 23DE  
                                     l206 2404                                       l208 240C  
                                     l160 22D2                                       l209 242C  
                                     l161 21A8                                       l162 2310  
                                     l170 2270                                       l171 2286  
                                     l163 21B4                                       l315 46CE  
                                     l323 469A                                       l164 21F4  
                                     l316 4644                                       l420 4C7C  
                                     l500 4B2C                                       l173 228A  
                                     l325 46B4                                       l421 4C9C  
                                     l237 663E                                       l174 2292  
                                     l166 2202                                       l318 464E  
                                     l422 4CA8               __end_of_USBStdGetDscHandler 2FE8  
                                     l510 4AFE                                       l502 4ABE  
                                     l175 229E                                       l167 222A  
                                     l319 4674                                       l423 4CB4  
                                     l511 4AEE                                       l503 4AAE  
                                     l192 2436                                       l176 22B4  
                                     l416 4CC8                                       l424 4CC0  
                                     l512 4B12                                       l504 4AD4  
                                     l520 5CB0                                       l193 2316  
                                     l169 223C                                       l417 4C6E  
                                     l441 1ADE                                       l513 4AF2  
                                     l505 4AB2                                       l521 5C7C  
                                     l194 246E                                       l418 4CF6  
                                     l442 18E6                                       l514 4AF8  
                                     l506 4AB8                                       l530 33A8  
                                     l195 2322                                       l179 22C0  
                                     l419 4C76                                       l523 5C96  
                                     l531 340E                                       l196 2362  
                                     l700 5F16                                       l444 192E  
                                     l532 33D4                                       l445 1976  
                                     l541 65DC                                       l198 2370  
                                     l446 19BE                                       l199 2384  
                                     l631 2CFE                                       l447 1A06  
                                     l448 1A4E                                       l528 3414  
                                     l633 2D76                                       l625 2C8A  
                                     l449 1A96                                       l529 3400  
                                     l538 65E0                                       l546 3E98  
                                     l651 5C00                                       l707 607A  
                                     l627 2CAE                                       l715 5FAE  
                                     l539 65D8                                       l547 3EB4  
                                     l660 5C24                                       l652 5BFA  
                                     l716 5F84                                       l709 6094  
                                     l629 2CD6                                       l718 5F9C  
                                     l639 6624                                       l832 637A  
                                     l844 3F6C                                       l668 0C44  
                                     _BDT 000400                                       l790 665A  
                                     l855 512C                                       l775 322A  
                                     l864 4DFA                                       l856 50D2  
                                     l857 5146                                       l698 5EFA  
                                     l858 5102                                       l867 4E0C  
                                     l982 299E                                       l983 2872  
                                     l985 2896                                       l987 28B0  
                                     l988 28E4                                       l989 2956  
                                     l998 297A                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                   __end_of_HighPriorityIsr 4598  
                          ??_Mdm_MainTask 00A9                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 6202                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1E9C  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CC  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 5F78  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 2870  
           findEmptySpot@positionInMemory 010F             ??_Tmr_RegisterTmr2IsrCallback 007F  
                                    l1010 5CC4           InitGprsNetwork@GprsNetInitState 01EA  
                                    l1100 1E0C                                      l1101 1E58  
                                    l1013 5CDE                                      l1110 5B04  
                             RiSm@Counter 02DE                                      l1031 37C6  
                                    l1111 5B18                                      l1032 3800  
                                    l2000 55EA                                      l1033 3826  
                                    l1009 5CFA                                      l1121 5B70  
                                    l1027 3868                                      l1035 384E  
                                    l1107 5B2A                                      l1220 10C2  
                                    l1028 37B4                                      l1052 217A  
                                    l1060 214C                                      l1108 5AEE  
                                    l1053 2094                                      l2102 34D4  
                                    l1222 13A2                                      l1230 12AA  
                                    l1070 2E9C                                      l2006 55DE  
                                    l2103 341C                                      l1231 12AE  
                                    l1223 10DA                                      l1071 2D94  
                                    l1055 2194                                      l2104 34F0  
                                    l2112 4764                                      l2120 474E  
                                    l1232 12F2                                      l1224 1114  
                                    l1056 20C6                                      l1136 64DC  
                                    l1152 64B8                                      l2008 55E4  
                                    l2105 343A                                      l2113 46F6  
                                    l1241 1360                                      l1225 1188  
                                    l1129 5442                                      l3001 396E  
                                    l2114 478C                                      l1226 1150  
                                    l1074 2DB0                                      l1058 2116  
                                    l3010 3A34                                      l3002 3968  
                                    l2107 34AA                                      l2115 4706  
                                    l1219 136A                                      l1075 2DC8  
                                    l1091 1E72                                      l2035 5940  
                                    l2211 4E98                                      l2116 4718  
                                    l1252 0A54                                      l1260 073E  
                                    l1236 1302                                      l1228 1230  
                                    l1092 1CF0                                      l1156 618C  
                                    l1412 606C                                      l3020 4FD6  
                                    l3004 39B0                                      l1404 5896  
                                    l2212 4E1E                                      l2133 630E  
                                    l2117 4732                                      l1261 06F6  
                                    l1253 05F4                                      l1237 1346  
                                    l1229 126A                                      l2037 594C  
                                    l3021 4FE6                                      l1405 5856  
                                    l2125 3C98                                      l2134 62FC  
                                    l1078 2E3A                                      l2142 598C  
                                    l1422 65C8                                      l2126 3BE0  
                                    l2214 4E84                                      l2119 4740  
                                    l1255 0AB6                                      l1263 07F2  
                                    l1095 1D0C                                      l2143 5956  
                                    l3023 5004                                      l3007 3A00  
                                    l1407 5890                                      l2136 6302  
                                    l1280 09C4                                      l1272 092A  
                                    l1264 082C                                      l1256 060C  
                                    l2240 5A8C                                      l1096 1DC2  
                                    l1440 3AF6                                      l3024 4FFC  
                                    l3040 519C                                      l3008 39C2  
                                    l2400 0152                                      l2128 3BEE  
                                    l2137 6308                                      l1281 0A32  
                                    l1273 096E                                      l1265 0856  
                                    l1257 0646                                      l2241 5A62  
                                    l1097 1DE6                                      l2145 5968  
                                    l1417 5F72                                      l1441 3A40  
                                    l3041 51A6                                      l3033 5162  
                                    l2401 01E2                                      l2090 29C4  
                                    l1266 0890                                      l1258 0680  
                                    l2242 5A88                                      l2146 597A  
                                    l1442 3B0C                                      l3042 51B4  
                                    l3034 516E                                      l2091 2AF8  
                                    l1267 08CA                                      l1259 06BA  
                                    l1443 3A5E                                      l3027 5024  
                                    l2403 01AE                                      l1291 5DD2  
                                    l2092 29EC                                      l1268 090E  
                                    l3028 502E                                      l3036 5184  
                                    l2420 02C6                                      l2404 019C  
                                    l1700 38B8                                      l3300 5D20  
                                    l1604 2768                                      l1620 1EE4  
                                    l2093 2A70                                      l2253 61C0  
                                    l1285 0A42                                      l1277 097E  
                                    l1445 3ABC                                      l3029 503C  
                                    l3037 517C                                      l1621 1EF4  
                                    l2501 6516                                      l1382 4138  
                                    l3222 5076                                      l2254 61AC  
                                    l1286 0A4A                                      l1278 09AA  
                                    l1446 3AD0                                      l2414 0392  
                                    l1702 391C                                      l1606 2790  
                                    l1630 1F92                                      l1622 1EFC  
                                    l2502 6508                                      l1294 5DA0  
                                    l1391 4102                                      l1383 409A  
                                    l3223 506A                                      l2247 55CE  
                                    l2415 0326                                      l1703 38E2  
                                    l1631 1F9E                                      l1623 1F12  
                                    l1615 1EC8                                      l1384 40BC  
                                    l2248 558E                                      l1448 3AEE  
                                    l2432 041E                                      l2416 02B4  
                                    l1608 27CC                                      l1640 201A  
                                    l1624 1F1E                                      l1616 1EBE  
                                    l2504 6510                                      l1393 411E  
                                    l2089 2AE2                                      l2441 0524  
                                    l2417 0250                                      l2409 01D0  
                                    l3305 62B2                                      l1713 3044  
                                    l1633 1FB2                                      l1617 1EBC  
                                    l1394 412A                                      l1386 40DE  
                                    l3226 50AA                                      l1650 4262  
                                    l2442 0570                                      l2434 045E  
                                    l2426 0402                                      l3306 62A0  
                                    l1706 395E                                      l1714 301E  
                                    l1626 1F46                                      l3227 50B8  
                                    l2435 0578                                      l2427 03D2  
                                    l2419 0304                                      l1707 3924  
                                    l1643 5E3C                                      l1811 36E8  
                                    l2611 1070                                      l1652 42BE  
                                    l3500 35FE                                      l1716 30BC  
                                    l1644 5E4C                                      l1740 2FC0  
                                    l1812 36EE                                      l1636 1FD8  
                                    l1628 1F5C                                      l2612 0E32  
              USBConfigureEndpoint@handle 0083                                      l1389 40E6  
                                    l3501 35F8                                      l2437 04B4  
                                    l2461 13EC                                      l1717 30A2  
                                    l1733 2FD0                                      l1725 3550  
                                    l1813 36F4                                      l1629 1F68  
                                    l2621 0EC4                                      l3182 65A8  
                                    l2438 0478                                      l2470 1440  
                                    l1902 441A                                      l1830 1730  
                                    l1742 2FC8                                      l1734 2ECC  
                                    l1750 4378                                      l1814 3708  
                                    l1638 1FFC                                      l2622 0EDE  
                                    l2614 0EB0                                      l2711 5D7E  
                                    l3503 3626                                      l3431 56A8  
                                    l1903 43B4                                      l1831 1732  
                                    l1751 42FA                                      l1727 35C4  
                                    l1815 370E                                      l2607 10A8  
                                    l2631 0FC2                                      l2623 0EF6  
                                    l2615 0E54                                      l3280 59EE  
                                    l1648 4238                                      l3192 45A0  
                                    l3440 6248                                      l3512 36C4  
                                    l3432 56A2                                      l2456 1610  
                                    l2472 1580                                      l1840 1830  
                                    l1832 174E                                      l1736 2EE0  
                                    l1752 4300                                      l1808 376E  
                                    l1760 5E24                                      l2640 105E  
                                    l2632 0FD6                                      l2608 0E18  
                                    l2705 5D84                                      l2801 4990  
                                    l3441 623E                                      l2457 13AA  
                                    l1905 43CC                                      l1841 18AC  
                                    l1825 1670                                      l1737 2F68  
                                    l1753 4320                                      l1817 3714  
                                    l1809 36DE                                      l1673 4924  
                                    l1761 5E22                                      l2481 66C8  
                                    l2625 0F5A                                      l2730 4830  
                                    l2706 5D5E                                      l2802 49F6  
                                    l3290 5EEA                                      l3194 45DC  
                                    l3506 3686                                      l3434 56C2  
                                    l2474 15EA                                      l2466 1400  
                                    l1906 43DA                                      l1834 17DC  
                                    l1826 1676                                      l1746 4362  
                                    l1818 3732                                      l3275 59C4  
                                    l3195 461E                                      l3507 363E  
                                    l3435 56B8                                      l2459 13D0  
                                    l1667 3CF2                                      l1907 43F8  
                                    l1739 2F70                                      l1747 42E8  
                                    l1819 374E                                      l1675 493E  
                                    l2635 1000                                      l2627 0F92  
                                    l3276 59BC                                      l2812 5396  
                                    l2708 5D98                                      l2804 49F0  
                                    l1924 4BCE                                      l3188 5E92  
                                    l3508 3656                                      l2396 05D2  
                                    l2476 160A                                      l2468 1420  
                                    l1908 4410                                      l1844 1862  
                                    l1836 17A4                                      l1828 16E8  
                                    l1684 32AC                                      l2484 66C2  
                                    l2636 101C                                      l2628 0FB0  
                                    l2709 5D6C                                      l3285 5EC8  
                                    l3509 3666                                      l2397 00E2  
                                    l1837 17C2                                      l1685 3254  
                                    l2814 53D0                                      l2806 4A0A  
                                    l3286 5EC0                                      l3462 1B4E  
                                    l3446 6008                                      l1846 18B8  
                                    l1774 4C56                                      l3279 59E4  
                                    l2815 53DA                                      l2727 47F4  
                                    l2583 449E                                      l1927 4B7C  
                                    l3543 63FA                                      l2831 3B84  
                                    l3447 6002                                      l1679 4A76  
                                    l1839 1824                                      l1775 4C50  
                                    l2639 1042                                      l1928 4BA8  
                                    l3472 1BCA                                      l3464 1B66  
                                    l2832 3B66                                      l2824 3B1C  
                                    l1960 2B78                                      l1952 2B20  
                                    l1768 611C                                      l2729 4820  
                                    l2681 4D86                                      l2585 44C8  
                                    l1929 4B82                                      l3289 5EE0  
                                    l3481 1C98                                      l3473 1BDA  
                                    l2825 3B36                                      l1793 418E  
                                    l1785 5458                                      l1689 32D6  
                                    l1769 611A                                      l2850 5772  
                                    l2682 4D36                                      l3538 62EC  
                                    l3482 1CD2                                      l3466 1BBA  
                                    l2826 3B98                                      l1970 2C2C  
                                    l1962 2BD0                                      l1954 2B2E  
                                    l1698 38AE                                      l1794 4194  
                                    l2691 4FA8                                      l2675 4D6A  
                                    l2683 4D4A                                      l2587 44E6  
                                    l2771 5BD4                                      l3475 1BF4  
                                    l3555 60E4                                      l2835 3BB8  
                                    l1971 2C30                                      l1963 2B98  
                                    l1795 4210                                      l1787 54A6  
                                    l3299 5D42                                      l2692 4F46  
                                    l2684 4D62                                      l2676 4D04  
                                    l3548 6564                                      l1956 2B62  
                                    l1796 41D6                                      l2765 660C  
                                    l2829 3B3C                                      l2694 4F8C  
                                    l3486 673A                                      l3478 1C06  
                                    l1966 2C12                                      l1798 41F6  
                                    l3479 1C72                                      l3559 6722  
                                    l1967 2BDA                                      l1959 2B74  
              __size_of_Mdm_IsSmsReceived 0024                                      l2792 553A  
                                    l2696 4FBC                                      l1992 6488  
                              _Led1OutSts 01FA                                      l2849 575E  
                                    l2697 4F98                                      l2769 5BC8  
                                    l1993 6478                                      l2794 556C  
                                    l2698 4F9E                                      l2795 5572  
                                    l1995 647E                                      STR_1 FFE6  
                                    STR_2 FF75                                      STR_3 FFDF  
                                    STR_4 FFC2                                      STR_5 FFCE  
                                    STR_6 FFF0                                      STR_7 FFEB  
                                    STR_8 FE89                                      STR_9 FEBD  
                              _Led2OutSts 01F8                                _Led3OutSts 01F6  
                   ??_USBCtrlTrfTxService 007D                                      _UCFG 000F39  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                                      u8805 5CA0  
                __size_of_Uart_Uart1RxIsr 0010                                      u8806 5CA2  
                                    u8815 5CAC                                      u8816 5CAE  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u8785 5C86                                      u8786 5C88  
                                    u8795 5C92                                      u8796 5C94  
                              _AlarmEvent 01F5                            ?_StopCondition 0001  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 0314  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 68C6  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0031               Led_SetLedBlinkTime@OnTimeMs 007D  
            findEmptySpot@currentPosition 00E1    USBStdFeatureReqHandler@current_ep_data 0094  
                                    _pDst 02D4                      _NewStringMdmTerminal 003A  
                                    _atoi 3966                                      _main 687C  
                         ??_Mdm_IsRinging 0081                                      _itoa 5E6C  
                        ?_SetUartBaudRate 0096                   __end_of_GetCallerNumber 6198  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 030C                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0042                                      _utoa 4598  
                                    _xtoi 35E8                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 68CE               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 4C68               I2cSlv_SendI2cMsg@DataLenght 0083  
                    ??_Mcu_StartSystemPll 007D               __end_of_Uart_WriteStringLen 5FB8  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00CC                       __end_of_Eeprom_Read 5950  
 Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8                         ??_secondsAppTimer 008D  
                     __end_of_GenerateEvt 6756                             _isNumberValid 5514  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
        isNumberInMemory@positionInMemory 0112                __end_of_USBCheckStdRequest 37B2  
                         _Rtcm_SystemDate 0463                    ??_USBCtrlTrfOutHandler 007F  
                __end_of_GetOsTickCounter 6810         __size_of_GetLastInteractionNumber 000C  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 0086                 ?_GetLastInteractionNumber 007D  
                          _GetElapsedTime 3F08             I2cSlv_ReceiveI2cMsg@SlaveAddr 0082  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0091  
                     StringCopy@SourceStr 0085               __end_of_OsAlrm_ClearOsAlarm 5854  
                Eeprom_Write@SlaveAddress 0094                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
              waitSetupCall@isCallArrived 0093                       __size_of_I2cDummyTx 001C  
                        ??_Mdm_GetSmsData 0091                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 6074  
                     ??_Rtcc_GetRtccValue 007D                           __end_of_Welcome FDAB  
                       ?_UpdateOsCounters 0001                   Uart_ClearRxBuffer@Index 007D  
                              _GetSmsText 00DB                                     l15006 2146  
                                   l14070 4C82                                     l12630 62A0  
                                   l15210 12A2                                     l13516 5D20  
                                   l14244 2760                                     l14272 27C4  
                                   l14196 61E0                                     l12668 38B8  
                                   l16134 523A                                     l13832 4830  
                                   l12864 3548                                     l13682 39FC  
                                   l16146 3116                                     l11898 663E  
                                   l16500 5604                                     l16502 5634  
                                   l15376 09A4                                     l15528 1FAA  
                                   l14684 5532                                     l14858 3414  
                                   l14984 208C                                     ?_atoi 0083  
                                   ?_main 0001                                     ?_itoa 0093  
                         __end_of___awdiv 5046                                     STR_10 FF4B  
                                   STR_11 FF59                                     STR_12 FF9D  
                                   STR_20 FF3D                                     STR_13 FF67  
                                   STR_21 FE5F                                     STR_30 FF2F  
                                   STR_14 FEA8                                     STR_31 FEFA  
                                   STR_15 FEE6                                     STR_23 FED2  
                                   STR_24 FFF5                                     STR_32 FFAA  
                                   STR_16 FF1E                                     STR_25 FFF5  
                                   STR_33 FFD8                                     STR_17 FF83  
                                   STR_26 FE86                                     STR_18 FF90  
                                   STR_27 FF0D                                     STR_28 FFB6  
                         __end_of___awmod 51BE                                     STR_29 FF2F  
       __size_of_USBCtrlEPServiceComplete 00FE                           __end_of___lldiv 50CA  
                                   ?_utoa 008A                                     u11310 390A  
                                   u12210 507A                                     u11330 394C  
                                   u10515 63BC                                     u10516 63BE  
                         ___awdiv@divisor 007F                                     u11317 3900  
                                   u10525 63C8                                     u13110 5188  
                                   u10526 63CA                                     u10535 63D4  
                                   u10536 63D6                                     u11337 3942  
                                   u13050 5008                                     u12250 63F6  
                                   u11610 2FB4                    __end_of_USBDeviceTasks 2024  
                                   u11380 5BF6                                     u12340 60C8  
                                   u14020 56EA                                     u11540 357C  
                                   u12270 62DC                                     ?_xtoi 0083  
                                   u12440 2CD2                                     u13400 5A98  
                                   u12360 60D4                                     u13145 5C4A  
                                   u13305 0B9E                                     u11617 2FAA  
                                   u14130 5576                                     u14027 56E0  
                                   u11580 2F32                                     u13325 0C78  
                                   u14150 4D14                                     u12630 4B58  
                                   u11910 5ECC                                     u11830 1846  
                                   u11590 2F62                                     u13430 2784  
                                   u13335 0C98                                     u14080 3BD0  
                                   u12385 67D4                                     u13345 0D22  
                                   u13265 6794                                     u14305 677E  
                                   u12386 67D6                                     u12490 55C6  
                                   u13266 6796                                     u14306 6782  
                                   u14235 5222                                     u11587 2F28  
                                   u13460 2828                                     u13285 0AF4  
                                   u11597 2F58                                     u14245 67E8  
                                   u11950 5F24                                     u14270 46AC  
                                   u14350 290C                                     u15230 2020  
                                   u14246 67EA                                     u13295 0B14  
                                   u14431 203E                                     u11880 59C8  
                                   u14280 46C6                                     u14520 219A  
                                   u12840 1B56                                     u15320 2BC0  
                                   u16008 526C                                     u12497 55BC  
                                   u14441 2050                                     u16009 529A  
                                   u11970 60A2                                     u14370 2920  
               ?_USBCtrlEPServiceComplete 0001                                     u14451 2062  
                                   u15340 2C02                                     u12870 1B90  
                                   u15350 2C1A                                     u15327 2BB6  
                                   u16048 31DE                                     u16049 320C  
                                   u12890 1BA0                                     u15347 2BF8  
                                   u15391 550A                                     u13960 04BE  
                                   u15751 4E76                                     u15761 4E8E  
                                   u15770 0DD6                           __end_of___lwdiv 59F8  
                         __end_of___lwmod 5EF4                 TurnOnModem@TurnOnMdmState 01F4  
                      ??_UpdateOsCounters 0019                                     i1l742 25E0  
                                   i1l747 271C                                     i2l680 3E30  
                                   i2l681 3D80                                     i2l690 3DCA  
                                   i2l682 3D8E                                     i2l686 3DB0  
                                   i2l688 3E22                                     i2l689 3DEA  
                                   _UADDR 000F38                           ___awdiv@counter 0081  
                                   _AlCfg 03B0              Led_SetLedBlinkTime@OffTimeMs 007F  
                 I2cSendMsgSm@I2cComState 01E6                                     _USTAT 000F64  
                 __end_of_LedStateMachine 4792        __size_of_USBCtrlEPAllowStatusStage 00CC  
                     ___lmul@multiplicand 0081                      ??_InitModemInterface 007D  
                                   _RxLen 00C2           __end_of_USBCtrlEPAllowDataStage 4972  
                           _StringCompare 5A4A                                     _sd000 FE5B  
                                   _sd001 FE14                                     _sd002 FDEE  
          ?_USBIncrement1msInternalTimers 0001               Rtcc_GetRtccValue@RtccPtrVal 007E  
                    __end_of_Led_MainTask 3CAA                               _ApnLenLocal 01EE  
                  ??_OsTmr_GetTimerStatus 0097              LedPulseStateMachine@LedPulse 008A  
                         __end_of_initFsm 5D9E                           __end_of_isalpha 62F6  
                         __end_of_isdigit 65B0                 saveNumberInMemory@address 0098  
                                   atoi@a 0088                                     atoi@s 0083  
                  Eeprom_Write@DataLength 0091                               _ClearBuffer 6198  
                         __end_of_isspace 6402               I2cSlv_QueryI2cData@RxBuffer 00A5  
              I2c_WriteData@I2cWriteState 0037                 Rtcc_GetRtccValue@RegValue 0080  
                 __size_of_Rtcc_RtcConfig 00A0                           __end_of_isupper 656C  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi1___wmul 6476                 __end_of_Rtcc_GetRtccValue 4CFC  
             I2cSlv_QueryI2cData@TxBuffer 00A2                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 530C                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 5854  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                        parseCommand@text 0088                                     wtemp6 0043  
                         __end_of_sprintf 3BDE                           __end_of_tolower 6726  
                     __end_of_Mcu_Int0Isr 68F6                       __end_of_Mcu_Int1Isr 68F2  
                                   xtoi@c 008A                                     xtoi@s 0083  
                         __end_of_toupper 673E                    __end_of_GetElapsedTime 3FD0  
                   __end_of_UartSetConfig 574C                      __end_of_Eeprom_Write 5A4A  
                  __size_of_initGprsModem 0090                            ?_isNumberValid 007D  
             Rtcc_SetRtccValue@RtccPtrVal 0088                  Eeprom_Read@MemoryAddress 00AC  
                   __end_of_Term_MainTask 66DA                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 2EBA                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 63AE  
                          _InitSchedTimer 6326                           __initialization 2472  
             __size_of_saveNumberInMemory 001A                          __end_of_MdmCntSm 46EA  
                    __end_of_I2c_ReadData 2472                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 415C                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 0DC8                              __end_of_atoi 3A3E  
                            __end_of_main 6888                       StringCompare@Result 0085  
                            __end_of_itoa 5EB0                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 01DE                              __end_of_utoa 4642  
                            __end_of_xtoi 36CE                  __end_of_Rtcm_SetRtccDate 58FC  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 68B2              __size_of_I2cSlv_QueryI2cData 00D2  
                    Term_MainSm@TermDelay 03CF                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE49                 __size_of_USBCtrlEPService 0094  
                                  ??_atoi 0085                                    ??_main 00B0  
            __size_of_Uart_InitUartModule 030C                                    ??_itoa 0099  
                                  ??_utoa 0090                                    ??_xtoi 0085  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                        __end_of_TmrBInit 4B3E                             ?_initPreamble 007D  
                              _ReceiveEvt 6354          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                        _Mdm_RequestSmsData 6830  
                          ?_StringCompare 007D                          __end_of_Terminal 05EC  
                    initFsm@isInitialized 0103              isNumberInMemory@searchFailed 0110  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 50CA                              _cdc_mem_type 01DF  
                      ??_Mcu_ConfigExtInt 007D                         CheckModem@Timeout 03F0  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00BC        __size_of_initMemorizedNumbersCount 001A  
                         ??_StopCondition 007D                        ??_Led_SetLedStatus 007E  
                        ___awdiv@dividend 007D        __end_of_Uart_MdmGsmGprsReadService 3E40  
              _Uart_MdmGsmGprsReadService 3D76                __end_of_UsbDevice_MainTask 649A  
                         getsUSBUSART@len 0086                      __end_of_getSetupCall 6612  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 6632  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F                               _Eeprom_Read 58FC  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1412 615C                               _GenerateEvt 673E  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                 Uart_Uart1RxIsr@UartRxData 002B  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC30  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                          ?_GetCallerNumber 0083  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F5                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 5378                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 6354                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 68E6  
                              _UartConfig 0320                      __end_of_Mdm_MainTask 5B3C  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00CB  
                           ??_Term_MainSm 00A7                                    _Relay1 01D9  
                                  _Relay2 01D8                                    _Relay3 01D7  
                                  _Relay4 02EB                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 5DE4  
                                  _SmsLen 00D2                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 5C76                                    ___lmul 574C  
                    _I2cSlv_ReceiveI2cMsg 5F38                        TurnOnModem@Counter 02D8  
                            ?_putUSBUSART 0083                                    ___wmul 6402  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 5B3C  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 5950  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 4BD4  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
                       _USBEnableEndpoint 5E28           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                                  _memcpy 5D0E                    __size_of_HttpGetMethod 04D0  
                                  _memset 6296                                    clear_0 252A  
                                  clear_1 253C                                    clear_2 2548  
                                  clear_3 2554                                    clear_4 2560  
                                  clear_5 256C                         parseCommand@F9021 FC28  
                                  clear_6 2578                                    clear_7 2584  
                                  clear_8 2590                                    clear_9 259C  
                       parseCommand@F9019 FC2B                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02E2                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01EB                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 01F1  
                      ?_USBEnableEndpoint 0085                            ??_initPreamble 007F  
                                  _strcat 5698                                    _strcpy 6234  
                                  _strlen 5FF8                                    _strtol 1B0E  
                        ClearBuffer@Index 0081             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 60EE                  HttpGetMethod@UartMessage 0100  
                               ??_initFsm 00B0                             _initGprsModem 4CFC  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                       ModemEvtParser@F9110 03C1  
                     ModemEvtParser@F9112 03BC                       ModemEvtParser@F9114 04D6  
                     ModemEvtParser@F9108 03C6                              _CDCTxService 2B0A  
                     MdmCntSm@MdmCntState 002D                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC10  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 0335                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 68DE  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 0039  
                 __end_of_I2cSlv_MainTask 58A8                           _InitGprsNetwork 10BA  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 68F2  
                             _Mcu_Int1Isr 68EE                      ?_Led_SetLedBlinkTime 007D  
                               ??_sprintf 0083                                 ??_tolower 007D  
                       parseCommand@state 0090                    __size_of_ScheduleTasks 0122  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 00A7                      _controlTransferState 00CA  
       __end_of_initMemorizedNumbersCount 670E                     __end_ofi1_GenerateEvt 67B0  
                 Eeprom_Read@SlaveAddress 00AD                     __end_of_Rtcm_MainTask 4EAA  
              __size_of_Rtcc_GetRtccValue 0094                             ?_parseCommand 0088  
                      _ExtInt1IsrCallback 02E0                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 25BA  
                      Eeprom_Read@ReadSts 00AE                    Tmr_TmrBPrSet@Prescaler 0098  
           findEmptySpot@searchInProgress 010E                              __pbssBIGRAMl 0AC8  
                         ??_isNumberValid 007F                    __end_of_EnableReceiver 68EA  
                      __size_of_WriteByte 000A                   __size_of_ModemEvtParser 0182  
             Uart_WriteConstString@Module 0082                 Uart_WriteStringLen@Module 0084  
                           ___rparam_used 000001                               _ReadAddress 01FC  
                __size_of_USBStallHandler 0044                           ?_InitSchedTimer 0001  
              __end_of_UartTxBufferStatus 5C28           I2cSlv_QueryI2cData@TimeoutTimer 0342  
                    Terminal@FormatOption 02ED                           __CFG_IOL1WAY$ON 000000  
                              _StringCopy 557A                            __pcstackBANK10 0A00  
                   I2cDummyTx@DummyBuffer 01FD                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 0032                       initFsm@currentState 01D3  
Uart_MdmGsmGprsReadService@ServiceCounter 0005                           MdmCntSm@Counter 02DC  
                   ?_I2cSlv_ReceiveI2cMsg 0080                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 5E6C                               _InitNetwork 00D9  
                             ?_MyApp_Task 0001                  LedStateMachine@LedOutSts 0098  
                           __end_of_sd000 FE5F                             __end_of_sd001 FE32  
                           __end_of_sd002 FE14                              __pidataBANK0 68F6  
                            __pidataBANK1 68F8                              __pidataBANK2 686E  
                            __pidataBANK3 5FB8                              __pidataBANK4 6756  
                            __pidataBANK5 5A9C                 __end_ofparseCommand@F9021 FC2B  
               __end_ofparseCommand@F9019 FC2E                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 5EF4  
        isNumberInMemory@searchInProgress 010F                       __size_of_CheckModem 0152  
              __end_of_Uart_ClearRxBuffer 6202             __size_of_USBConfigureEndpoint 0098  
             parseCommand@deleteNumberCmd 008D                  __size_of_InitializeTasks 0070  
                      __end_of_I2cDummyTx 66A6               __end_of_USBCtrlTrfInHandler 421E  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 007D  
                    StringCompare@String2 007F                        ??_UartSetConfigLow 007D  
               __size_of_isNumberInMemory 009E                       __end_of_Term_MainSm 164C  
               initGprsModem@currentState 01D5                     LedStateMachine@LedOut 0091  
                   LedStateMachine@LedSts 008F                        LedStateMachine@Led 0099  
                               ?i1___wmul 0019                            ?_initGprsModem 0001  
                     __end_of_RtccIrqInit 679A                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 0083             I2cSlv_QueryI2cData@I2cOpState 01E5  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 0040  
                              _SystemInit 6266                                _cdc_notice 0459  
                   __end_of_Tmr_TmrBPrSet 341A                     __end_of_waitSetupCall 5BDA  
                     __end_of_Rtcc_RtcIsr 68EE                                _cdc_rx_len 00C6  
                       __end_of_MsgFormat FD22                                _cdc_tx_len 00C4  
                     Terminal@UsbRxBuffer 0A00                               ?_OsTmr_Wait 009B  
                   ??_Led_SetLedBlinkTime 0081                       Terminal@UsbTxBuffer 0200  
                   _memorizedNumbersCount 0038                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 6162                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01E0                            ClearBuffer@Len 007F  
                         _secondsAppTimer 4792          __end_of_GetLastInteractionNumber 6894  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 63AE  
                  _USBStdGetStatusHandler 42DC                         __end_of_SendSmsSm 1E9C  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01ED  
                          _Rtcc_RtcConfig 4834                     __size_of_Eeprom_Write 0052  
                              __pbssBANK0 00B0                                __pbssBANK1 01C9  
                          ??_parseCommand 008A                                __pbssBANK2 02C8  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                             _HttpGetMethod 05EC  
                 ?_Pm_DsReleasePinControl 0001                               _MessageText 08C8  
                          ??_Wdg_MainTask 007E                     __end_ofi2_GenerateEvt 67C6  
             isNumberInMemory@phoneNumber 0100                  __end_of_Uart_WriteString 60B2  
            getSetupCall@isCalledReceived 0083                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 6506  
                             _SetBaudRate 5C28                     __end_of_findEmptySpot 53E0  
               initGprsModem@modemCounter 03BA               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01EF                               _pBDTEntryIn 00B6  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 332C  
                               ?_TmrBInit 007D                             _CheckTxStatus 68B2  
                           ??_TurnOnModem 0080                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                       MyApp_Task@cmpString 0122  
                               ?_Terminal 0001                      Eeprom_Write@WriteSts 0092  
                                 ?___lmul 007D                              _Led_MainTask 3BDE  
                          _Rtcc_UnlockRtc 6810                              _I2cBusStatus 01E7  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 310C                 Uart_InitUartModule@Module 00A1  
                   __end_of_I2c_WriteData 2314                        ??_GetOsTickCounter 0081  
                                 ?_memcpy 007D                                   ?_memset 007D  
                          ___lmul@product 0085                                _device_dsc FE49  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 4BD4  
                   __end_of_UpdateSchFlag 668A                              _EepromBuffer 04B1  
                              _ep_data_in 02D1                           _I2cWriteDataEvt 00D7  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 13A8                                   ?_strcpy 007D  
                                 ?_strlen 007D                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 310C  
                       __end_of_WriteByte 68A8                        _USBCheckStdRequest 36CE  
                       _configDescriptor1 FDAB                       Wdg_MainTask@Options 0001  
                             _PhoneNumber 0572                              _Eeprom_Write 59F8  
                   __size_of_getSetupCall 0020               __end_of_USBCtrlTrfTxService 3966  
                       triggerRelay@F9027 03CD                       _USBStdSetCfgHandler 3502  
                 __size_of_ConfigureModem 00DC                    I2cSlv_QueryI2cData@Ret 01E4  
               Eeprom_Write@MemoryAddress 0093                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 6382                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 48D4  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 008F  
                                 _SSP2BUF 000F75                              _I2c_ReadData 2314  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 4098                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01DC            __end_of_Pm_DsReleasePinControl 68D4  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 02F2                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00E0                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 0029                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FB                       _I2cSlv_QueryI2cData 3A3E  
                                 _Led2Sts 01F9                                   _Led3Sts 01F7  
              __end_of_Sch_SchmIntService 686E                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 008F                             _cdc_trf_state 00C5  
                              ??_ReadByte 007D                       _Uart_InitUartModule 0ABC  
                   __end_of_Mdm_DrvMainFn 68DA                      __end_of_initPreamble 6450  
                  initEeprom@currentState 01D4                          _ComChecCompleted 002A  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C8                     __end_of_Mdm_IsRinging 64BE  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CB  
                   __size_of_getsUSBUSART 0096                                   _RelayB1 01DB  
                                 _RelayB2 01DA                               ?_StringCopy 0085  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 00D6  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 52A0                    __end_of_Rtcc_UnlockRtc 6820  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 67DA                                _initEeprom 4F36  
                             _Term_MainSm 13A8   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD22                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 6650                    ?_Uart_WriteConstString 0080  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 0097  
                             _RtccIrqInit 6784             __size_of_USBCtrlTrfOutHandler 0066  
                                 ___awdiv 4FC0                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 514C                                   ___lldiv 5046  
                        ??_USBDeviceTasks 0098                           __size_of___wmul 0028  
                                 ___lwdiv 59A4                         ??_USBStallHandler 007D  
                                 ___lwmod 5EB0                         ?_Rtcm_SetRtccDate 0089  
            __size_of_Uart_WriteStringLen 0040                        ?_Sch_MainScheduler 0001  
                            _getSetupCall 65F2                      ?_I2cSlv_QueryI2cData 00A2  
                         ??_initGprsModem 0099                               _Rtcc_RtcIsr 68EA  
                    __size_of_putUSBUSART 0022                                   __pcinit 2472  
                      getsUSBUSART@buffer 0084                           __size_of_memcpy 0048  
                               _I2cComSts 00CD                       __end_of_TurnOnModem 5D0E  
                         __size_of_memset 0030                   initEeprom@isInitialized 0102  
                               _I2cConfig 034D                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FDEE                                   __ramtop 0F00  
              Mdm_GetSmsData@GetSmsStatus 0091                               Terminal@Len 03AC  
                      ??_Rtcm_SetRtccDate 0091                     Tmr_TmrBIrqSet@TmrNumb 007F  
                    ?_Uart_InitUartModule 009D                                   __ptext0 687C  
                                 __ptext1 6266                                   __ptext2 6894  
                                 __ptext3 68CE                                   __ptext4 6632  
                                 __ptext5 66A6                                   __ptext6 63AE  
                                 __ptext7 6326                                   __ptext8 3E40  
                                 __ptext9 332C                                   _inPipes 00B0  
                   __size_of_Mcu_ClearWdg 0004                 GsmGprsTerminal@UartBuffer 0900  
             _USBDeferOUTDataStagePackets 0025                           __size_of_strcat 005C  
                 __end_of_secondsAppTimer 4834                           __size_of_strcpy 0032  
                         __size_of_strlen 003E              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                      InitGprsNetwork@Apn 009B                                   _initFsm 5D56  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 62C6                                   _isdigit 658E  
          isNumberInMemory@memoryOpResult 0111                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00B0                               ?_SystemInit 0001  
                                 clear_10 25A8                                   clear_11 25B4  
                        ___awmod@dividend 007D                         ??_InitializeTasks 03FB  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 02E8  
     __end_of_Tmr_RegisterTmr2IsrCallback 689E               _Tmr_RegisterTmr2IsrCallback 6894  
               findEmptySpot@searchFailed 010D                                   _isspace 63D8  
                            _Mdm_MainTask 5AEC                                   _isupper 654A  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                   MyApp_Task@emptyNumber 0115                    ?_Irq_InitIntController 007D  
                                 _smsText 049D                    Term_MainSm@FwkBuildStr 013A  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 25C8  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC30  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 64E2  
                                 _sprintf 3B10                                   _tolower 670E  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 6850  
                        _HttpGetDataLocal 03A3                  __end_of_Mdm_SetSmsFormat 5B8C  
                  Term_MainSm@FwkMajorStr 0132                            __pintcode_body 44EC  
                                 _toupper 6726           secondsAppTimer@destinationTicks 0091  
                       ClearBuffer@Buffer 007D                      end_of_initialization 25BA  
                            _getsUSBUSART 4B3E                              ?_Eeprom_Read 00A9  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00DA  
             ?_Uart_MdmGsmGprsReadService 0004                    MyApp_Task@cmdAddNumber 0125  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F4             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC24       Irq_InitIntController@PerInt_LowPInt 007E  
                                 memcpy@d 0084                                   memcpy@n 0081  
                                 memcpy@s 0086                       _pBDTEntryEP0OutNext 00BE  
                                 itoa@buf 0093                                   memset@c 007F  
                                 itoa@val 0095                                   memset@n 0081  
                  Term_MainSm@FwkMinorStr 0136                                   memset@p 0083  
                           __Lmediumconst FC10                            _ModemEvtParser 2024  
                                 int_func 44EC                           _USB1msTickCount 0310  
         _dummy_encapsulated_cmd_response 0372                  _GetLastInteractionNumber 6888  
                               i1u1608_28 64F2                                 i1u1570_28 26FE  
                               i1u1570_29 2712                                 i1u1566_20 25DE  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
              __end_of_saveNumberInMemory 66F4                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 666E                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 18E0  
                       _Rtcc_SetRtcStatus 676E                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 6234                             StringCopy@Len 0089  
                       ?_MdmHttp_MainTask 0001                  I2cSlv_QueryI2cData@RxLen 00A7  
                 _USBCtrlEPAllowDataStage 48D4                        _UsbDevice_MainTask 6476  
                I2cSlv_QueryI2cData@TxLen 00A4                              _Mcu_ClearWdg 68DA  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0085                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                     ??_I2cSlv_QueryI2cData 00A9  
                                 utoa@buf 008A                        ??_MdmHttp_MainTask 00A1  
                _USBCtrlEPServiceComplete 322E                                   utoa@val 008C  
                 HttpGetMethod@GetMOutSts 01E8                     i1___wmul@multiplicand 001B  
                      __end_of_CheckModem 29C2                           _RtccIsrCallback 02E4  
        OsAlrm_ProcessOsAlarms@AlarmIndex 0021                        Terminal@EchoOption 02F3  
           __size_of_LedPulseStateMachine 00E8                                   strlen@s 007D  
                        _isNumberInMemory 4972                      __end_of_parseCommand 44EC  
              _USBStatusStageEnabledFlag1 0028                _USBStatusStageEnabledFlag2 0027  
                   ??_Uart_InitUartModule 009F                      __end_of_Wdg_MainTask 6528  
                                 strtol@a 0094                                   strtol@c 0098  
                          _Rtcm_RtccAlarm 0300                                   strtol@s 0089  
                      USBEnableEndpoint@p 0086                       ?_UsbDevice_MainTask 0001  
                                 xtoi@val 0088                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                       ??_Rtcc_SetRtccValue 0086  
                     ??_Rtcc_SetRtcStatus 007D                          __CFG_DSBOREN$OFF 000000  
                        ?_InitGprsNetwork 009B                         _Mdm_HangPhoneCall 67EC  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 65D2  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 0087  
                        __CFG_CPUDIV$OSC1 000000                        ?_Mdm_HangPhoneCall 0001  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 02E6  
                        _HttpGetMethodSts 01EC                                 _TRISBbits 000F93  
                    SendSmsSm@UartMessage 0100                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0062                  isNumberValid@phoneNumber 007D  
                      _BothEP0OutUOWNsSet 01E1                           ??_HttpGetMethod 009D  
                 __size_of_Mdm_GetSmsData 0068                              strtol@endptr 008B  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
               I2c_WriteData@I2cNextState 0036                 USBConfigureEndpoint@EPNum 0082  
              ?_USBCtrlEPAllowStatusStage 0001                    __end_of_ModemEvtParser 21A6  
                        ??_InitSchedTimer 00A4       USER_USB_CALLBACK_EVENT_HANDLER@size 008D  
                               _USTATcopy 00D4                     __end_of_StopCondition 68E2  
                __size_of_HighPriorityIsr 4590                       ??_Mdm_HangPhoneCall 0083  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 0369  
                               _Led2Blink 0360                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 0357              __end_of_USBTransferOnePacket 42DC  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 038D  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 1B0E                 __end_of_Rtcc_SetRtcStatus 6784  
                               _Led2Pulse 0387                                 _Led3Pulse 0381  
                       _I2cSlv_SendI2cMsg 6036           SetBaudRate@DesiredI2cBusClockHz 0096  
                     Eeprom_Read@QuerySts 00AF                           ??_ScheduleTasks 03FB  
                          _Tmr_TmrBConfig 3E40                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 67EC                         _OsAlrm_SetOsAlarm 3FD0  
                    Terminal@TermRxBuffer 0540                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 5C76  
                             ?_initEeprom 0001                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 5CC2                                 _ClipEvent 00DD  
                            ??_MyApp_Task 0113                      Terminal@TermTxBuffer 0100  
           saveNumberInMemory@phoneNumber 0096                                 _GetMethod 00D8  
                  _USBCtrlTrfSetupHandler 4EAA                        ?_OsAlrm_SetOsAlarm 0083  
                __size_of_GetCallerNumber 0036                     __end_of_USBDeviceInit 2870  
   __end_of_USBIncrement1msInternalTimers 654A    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 6528               __size_of_Mdm_RequestSmsData 0010  
                          __end_of___lmul 57A4                            _CheckAckStatus 68BC  
                          __end_of___wmul 642A                       ??_I2cSlv_SendI2cMsg 0084  
               __end_of_Mdm_HangPhoneCall 67FE                    __size_of_UartWriteByte 0020  
                          __end_of_memcpy 5D56                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002C                            __end_of_memset 62C6  
                      _UartTxBufferStatus 5BDA                       ??_OsAlrm_SetOsAlarm 008B  
                        __CFG_DSWDTEN$OFF 000000                              ??_ReceiveEvt 007F  
                       _USBBusIsSuspended 01E2                                 _Mdm_SmsRx 0700  
                        ?_secondsAppTimer 008A                         ??_SetUartBaudRate 0098  
                 __end_of_Uart_Uart1RxIsr 6860                                 _MdmStatus 00D0  
                          __end_of_strcat 56F4                            __end_of_strcpy 6266  
                          __end_of_strlen 6036                            __end_of_strtol 1CE4  
                     start_initialization 2472           isNumberInMemory@currentPosition 00E2  
                       __size_ofi1___wmul 0026                   ?_USBStdGetStatusHandler 0001  
                          _ConfigureModem 37B2                              ??_OsTmr_Wait 00A1  
                  Uart_WriteString@Module 0082             USBCtrlTrfRxService@byteToRead 007E  
                 __size_of_StartCondition 0004                      Rtcm_SetRtccDate@Date 0089  
                         _MdmResetRequest 003D                       ?_UartTxBufferStatus 0001  
                      _Uart_ClearRxBuffer 61CE                 __size_of_UartSetConfigLow 0058  
                        ??_EnableReceiver 007D                               _cdc_data_rx 0500  
                             _cdc_data_tx 07B6              __end_of_USBConfigureEndpoint 4AA8  
                   __size_of_initPreamble 0026           __end_of_USBStdFeatureReqHandler 18E0  
                               _MsgFormat FC32                        __end_of_MyApp_Task 10BA  
                        _UpdateOsCounters 6840                           ?_ModemEvtParser 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3D76                 __end_of_I2cSlv_SendI2cMsg 6074  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 4C68                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
              ?_initMemorizedNumbersCount 0001                      __size_of_ClearBuffer 0036  
                    __end_of_Rtcc_LockRtc 6830                       ?_Uart_ClearRxBuffer 0001  
                            ?_SetBaudRate 0096                    __end_of_Tmr_TmrBConfig 3F08  
                               _SendSmsSm 1CE4                 __end_of_OsAlrm_SetOsAlarm 4098  
                  __end_of_Tmr_TmrBIrqSet 5CC2                                 _TaskTable 0586  
                               _RingEvent 00DE                 ??_USBCtrlEPAllowDataStage 007E  
                      ??_Uart_WriteString 0082                               _SystemState 00D3  
                   __end_of_isNumberValid 557A                         __size_of_ReadByte 000A  
                               _RtcConfig 03B4                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 56F4  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 6382  
                  _pBDTEntryEP0OutCurrent 00C0                             _Term_MainTask 66C0  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                    __end_of_CheckAckStatus 68C6  
                                ??___lmul 0085                             _isxdigit$6642 0081  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2EBA                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 514C                        HttpGetMethod@Index 01C8  
                             __pdataBANK0 00E1                               __pdataBANK1 01FE  
                             __pdataBANK2 02F3                               __pdataBANK3 03BC  
              isNumberInMemory@readBuffer 0102                               __pdataBANK4 04D6  
                             __pdataBANK5 0586                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 051C                                  ??_memcpy 0083  
                                ??_memset 0083                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 007D                      ??_Uart_ClearRxBuffer 007D  
     __size_of_Uart_MdmGsmGprsReadService 00CA                                  ??_strcat 0081  
                                ??_strcpy 0081                                  ??_strlen 007F  
                  __size_of_Rtcm_MainTask 008E                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 59A4                    __end_of_ConfigureModem 388E  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D5  
          __end_of_USBStdGetStatusHandler 438E                              _initPreamble 642A  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC32  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 5A9C                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200                             __pcstackBANK3 03FB  
            __size_of_USBCtrlTrfInHandler 00C2                           RiSm@MdmDrvState 002E  
                            _SetAckStatus 67C6                              _isalpha$6632 0081  
                  GenerateEvt@EventStatus 007F                                 _WriteByte 689E  
                     __size_of_initEeprom 008A                      ?_USBStdGetDscHandler 0001  
                            _isdigit$6366 007E             UpdateSchFlag@InterruptCounter 02DA  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 5F78  
     InitGprsNetwork@GprsNetInitNextState 00CF                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 6612                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 6128              __end_of_LedBlinkStateMachine 2B0A  
                             sprintf@flag 0083                      __size_of_Eeprom_Read 0054  
                         _USBStallHandler 5DE4                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 0306                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 66A6  
              __end_of_USBCheckCDCRequest 443E              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 57FC                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 65F2                              ??_StringCopy 008B  
                        _Led_SetLedStatus 62F6                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 65B0  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_parseCommand 00AE                    __size_of_waitSetupCall 004E  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
             findEmptySpot@memoryOpResult 0110             Uart_WriteString@StringToWrite 0080  
                           __pmediumconst FC10                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 007E  
                       __size_of_isxdigit 003C                                  ?___awdiv 007D  
                               __ptext100 5D56                                 __ptext101 4CFC  
                               __ptext110 6036                                 __ptext102 4792  
                               __ptext111 5F38                                 __ptext103 5B3C  
                               __ptext120 5CC2                                 __ptext112 65B0  
                               __ptext104 4F36                                 __ptext121 1CE4  
                               __ptext113 6830                                 __ptext105 5378  
                               __ptext130 574C                                 __ptext122 5F78  
                               __ptext114 64BE                                 __ptext106 5514  
                           Terminal@Index 00A6                                 __ptext131 57A4  
                               __ptext123 2024                                 __ptext115 53E0  
                               __ptext107 58FC                                 __ptext140 5BDA  
                               __ptext132 2870                                 __ptext124 61CE  
                               __ptext116 5950                                 __ptext108 3A3E  
                               __ptext141 557A                                 __ptext133 4642  
                               __ptext125 5A4A                                 __ptext117 6888  
                               __ptext109 50CA                                 __ptext150 29C2  
                               __ptext142 563A                                 __ptext134 68C6  
                               __ptext126 2D88                                 __ptext118 6162  
                               __ptext151 59A4                                 __ptext143 4D8C  
                               __ptext135 10BA                                 __ptext127 37B2  
                               __ptext119 56F4                                 __ptext160 21A6  
                               __ptext152 3FD0                                 __ptext144 3F08  
                               __ptext136 05EC                                 __ptext128 0ABC  
                               __ptext161 2314                                 __ptext153 6402  
                               __ptext145 67FE                                 __ptext137 6074  
                               __ptext129 2C50                                 __ptext170 68BC  
                               __ptext162 689E                                 __ptext154 51BE  
                               __ptext146 6198                                 __ptext138 5EF4  
                               __ptext163 68DE                                 __ptext155 5C28  
                               __ptext147 46EA                                 __ptext139 6612  
                               __ptext180 6128                                 __ptext172 64E2  
                               __ptext164 68E2                                 __ptext156 5046  
                               __ptext148 341A                                 __ptext181 679A  
                               __ptext173 6860                                 __ptext165 67C6  
                               __ptext157 6382                                 __ptext149 62F6  
                               __ptext174 666E                                 __ptext166 68A8  
                               __ptext158 4098                                 __ptext183 6850  
                               __ptext175 6840                                 __ptext167 673E  
                               __ptext159 6354                                 __ptext184 3D76  
                               __ptext176 25C8                                 __ptext168 68E6  
                               __ptext185 67B0                                 __ptext177 6450  
                               __ptext169 68B2                                 __ptext186 68EA  
                               __ptext178 57FC                                 __ptext187 68EE  
                               __ptext179 668A                                  ?___awmod 007D  
                      _Sch_SchmIntService 6860                                 __ptext188 68F2  
                               __ptext189 0000                           _InitializeTasks 5230  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                 findEmptySpot@readBuffer 0100                           _CallClosedEvent 003E  
                            ?_Rtcc_RtcIsr 0001                               __pintcodelo 0018  
              __size_of_Mdm_HangPhoneCall 0012                   isNumberValid@isNumberOk 0080  
                  __size_ofi2_GenerateEvt 0016             I2cSlv_QueryI2cData@QueryTimer 04CB  
                 Eeprom_Write@WriteBuffer 008F                          ??_Rtcc_RtcConfig 0080  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 0393  
                     Mdm_MainTask@Options 0001                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 421E                           ?_ConfigureModem 0001  
                 ??_Irq_InitIntController 007F        Uart_MdmGsmGprsReadService@UartData 0004  
                             _I2cTxBuffer 044F                                  ?_initFsm 0001  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                       ??_GetCallerNumber 0085                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 039E            InitializeTasks@ActiveTaskIndex 03FD  
                  __size_of_findEmptySpot 0068                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                            _Mdm_GetSmsData 53E0  
                    InitGprsNetwork@Index 0132                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 02EC                ??_GetLastInteractionNumber 007F  
                         Terminal@Payload 0766                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 54AE                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 54AE  
              ConfigureModem@DelayCounter 031E                        __end_of_StringCopy 55DC  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00DF  
                         Terminal@SwTimer 04C0                  initEeprom@memoryOpResult 0101  
                                ?_sprintf 007D                                  ?_tolower 0001  
               __size_of_Rtcm_SetRtccDate 0054                            _setupCallTicks 03B8  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                  _I2cReady 02EA  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                MyApp_Task@numberInMemory 012A                    __size_of_I2c_WriteData 016E  
              ConfigureModem@DelayValueMs 02D6                          _OsTmr_StartTimer 563A  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 007D                __size_of_I2cSlv_SendI2cMsg 003E  
                __end_of_isNumberInMemory 4A10              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 007D                             i1_GenerateEvt 679A  
              __end_of_Mcu_StartSystemPll 6650                              _parseCommand 443E  
                            _PhoneNumbLen 00D1                        ??_Mdm_SetSmsFormat 0083  
                            _Wdg_MainTask 6506                             _Rtcm_MainTask 4E1C  
                          ___wmul@product 0081                  ModemEvtParser@ClipString 0099  
                        SendSmsSm@SwTimer 03E5                     Terminal@ReceivedBytes 00A5  
                    ??_Sch_SchmIntService 0023                    __size_of_UpdateSchFlag 001C  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 007E  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 008C                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
            ConfigureModem@MdmConfigState 01F3           HttpGetMethod@GetMethodNextState 00CE  
                   ?_I2cSlv_I2cReadMsgSts 0001                         _I2c_InitI2cModule 51BE  
                       _IncomingCallEvent 003F                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_LedStateMachine 0097                        __end_of_SystemInit 6296  
                                _RCONbits 000FD0                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 4E1C  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 00A8                      _USBConfigureEndpoint 4A10  
                    _UsbMasterPhoneNumber 0440          __size_of_USBStdFeatureReqHandler 0294  
                      _saveNumberInMemory 66DA                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 271E                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 6450                     __end_of_initGprsModem 4D8C  
                     ??_I2c_InitI2cModule 00A4                 __size_of_Rtcc_AlarmConfig 006C  
              __end_of_InitModemInterface 68CE                    __end_of_Mdm_GetSmsData 5448  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 0089  
                  __size_of_Mdm_DrvMainFn 0006                              _RemoteWakeup 01E3  
                                _ApnLocal 031C                            _StartCondition 68E2  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0081  
             HttpGetMethod@GetMethodState 01E9                             _Tmr_TmrBPrSet 332C  
                           _waitSetupCall 5B8C                       ?_saveNumberInMemory 0096  
                       _NewStringReceived 003C                              _isspace$6635 007E  
                        _UartSetConfigLow 57A4                                  _GetSmsSm 2D88  
                 __end_of_USBStallHandler 5E28                      Mdm_DrvMainFn@Options 0001  
                          _memoryPreamble 0399                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03DA                                  _MdmCntSm 4642  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 2486                                 copy_data1 24A6  
                               copy_data2 24C6                                 copy_data3 24FE  
            __end_of_LedPulseStateMachine 3502                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 35E8  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 68A8                             i2_GenerateEvt 67B0  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                      __end_of_device_dsc FE5B                 __end_of_I2c_InitI2cModule 5230  
                                _MsgReady FE32                           ??_Term_MainTask 00A7  
                 __end_of_InitializeTasks 52A0                initGprsModem@isInitialized 0099  
                 ?_USBCtrlTrfSetupHandler 0001                            isNumberValid@i 0081  
                           _findEmptySpot 5378               __end_of_I2cSlv_QueryI2cData 3B10  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 4AA8                      __size_of_SetBaudRate 004E  
                            ??_initEeprom 00B0                      ??_saveNumberInMemory 0098  
                            ?_TurnOnModem 0001                                  _TxBuffer 0318  
                          _LowPriorityIsr 0018                                 memcpy@tmp 0083  
                    Tmr_TmrBPrSet@Divisor 009C                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0081               __end_of_Uart_InitUartModule 0DC8  
                                _SmsEvent 00DC                           _SetUartBaudRate 2C50  
            i1I2cSlv_SendI2cMsg@SlaveAddr 001E                                  _Terminal 00D0  
                                _SetupPkt 000430                 I2cSlv_SendI2cMsg@TxBuffer 0080  
                   SetBaudRate@McuClockHz 009A                     ?_USBConfigureEndpoint 007D  
            OsAlrm_ClearOsAlarm@OsAlarmId 0019                             _I2c_WriteData 21A6  
                        __size_of___awdiv 0086                          __size_of___awmod 0072  
                         MyApp_Task@F9033 FC11                           MyApp_Task@F9036 FC24  
                         MyApp_Task@F9038 03CA                  __end_of_UpdateOsCounters 6850  
                        __size_of___lldiv 0084                         Terminal@SlaveAddr 02EE  
                     OsTmr_Wait@WaitTimer 009B                          __size_of___lwdiv 0054  
                    Tmr_TmrBPrSet@TmrNumb 009B                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                           _UpdateSchFlag 666E                       __end_of_putUSBUSART 658E  
                             _line_coding 037A                              _Rtcc_LockRtc 6820  
            I2cSlv_QueryI2cData@SlaveAddr 00A8                      _LedBlinkStateMachine 29C2  
                  __end_of_StartCondition 68E6                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01F0  
               Rtcm_GetRtccDate@LocalDate 008A                  parseCommand@addNumberCmd 008A  
                         ?_Mdm_GetSmsData 008F                  I2c_WriteData@WriteStatus 0034  
                            _isupper$6638 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0032                            ?_Tmr_TmrBPrSet 0096  
                        __size_of_initFsm 0048                            ?_waitSetupCall 0001  
                        ??_ModemEvtParser 008F                          _GetOsTickCounter 67FE  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0188                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03A8                  ModemEvtParser@RingString 00A3  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                                  __ptext10 5C76  
                                __ptext11 65D2                                  __ptext20 6476  
                                __ptext12 4AA8                                  __ptext21 5D9E  
                                __ptext13 6650                           ??_UartWriteByte 007E  
                                __ptext30 6202                                  __ptext22 5AEC  
                                __ptext14 310C                                  __ptext31 5DE4  
                                __ptext23 5854                                  __ptext15 5230  
                                __ptext40 3502                                  __ptext32 6528  
                                __ptext24 68D4                                  __ptext16 0DC8  
                                __ptext41 42DC                                  __ptext33 271E  
                                __ptext25 6506                                  __ptext17 66C0  
                                __ptext50 2FE8                                  __ptext42 2EBA  
                                __ptext34 4BD4                                  __ptext26 67DA  
                                __ptext18 4E1C                                  __ptext51 3CAA  
                                __ptext43 164C                                  __ptext35 5D0E  
                                __ptext27 68DA                                  __ptext19 3BDE  
                                __ptext60 00D0                                  __ptext52 415C  
                                __ptext44 55DC                                  __ptext36 4EAA  
                                __ptext28 1E9C                                  __ptext61 35E8  
                                __ptext53 388E                                  __ptext45 438E  
                                __ptext37 322E                                  __ptext29 60EE  
                                __ptext70 656C                                  __ptext62 670E  
                                __ptext54 2B0A                                  __ptext46 52A0  
                                __ptext38 48D4                                  __ptext71 5E6C  
                                __ptext63 60B2                                  __ptext55 13A8  
                                __ptext47 5E28                                  __ptext39 36CE  
                                __ptext80 18E0                                  __ptext72 4598  
                                __ptext64 1B0E                                  __ptext56 5FF8  
                                __ptext48 4A10                                  __ptext81 514C  
                                __ptext73 5EB0                                  __ptext65 6726  
                                __ptext57 5698                                  __ptext49 5448  
                                __ptext90 5B8C                                  __ptext82 4FC0  
                                __ptext74 4B3E                                  __ptext66 63D8  
                                __ptext58 3B10                                  __ptext91 65F2  
                                __ptext83 6820                                  __ptext75 421E  
                                __ptext67 62C6                                  __ptext59 6296  
                                __ptext92 649A                                  __ptext84 54AE  
                                __ptext76 3966                                  __ptext68 654A  
                                __ptext93 67EC                                  __ptext85 4C68  
                                __ptext77 658E                                  __ptext69 6234  
                                __ptext94 66DA                                  __ptext86 676E  
                                __ptext78 58A8                                  __ptext95 443E  
                                __ptext87 4834                                  __ptext79 6810  
                                __ptext96 4972                                  __ptext88 6784  
                                __ptext97 66F4                                  __ptext89 530C  
                                __ptext98 642A                                  __ptext99 59F8  
                        __size_of_isupper 0022                   initEeprom@addressToRead 0100  
                              _I2cDummyTx 668A                    Tmr_TmrBIrqSet@Priority 007D  
                      __end_of_initEeprom 4FC0                     __end_of_HttpGetMethod 0ABC  
                __size_of_InitGprsNetwork 02EE                              _SSP2CON2bits 000F71  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 007F  
                       _Mmd_RingIndicator 002F                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0019                         _Mdm_IsSmsReceived 64BE  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 4F36  
                           __size_of_main 000C               ??_initMemorizedNumbersCount 0096  
                       ?_USBCtrlEPService 0001                             __size_of_itoa 0044  
               Mdm_GetSmsData@MessageText 008F                             __size_of_utoa 00AA  
                     Led_MainTask@Options 0001                             __size_of_xtoi 00E6  
                  ??_I2cSlv_I2cReadMsgSts 0081                            ?_findEmptySpot 0001  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 68BC  
                      ?_Mdm_IsSmsReceived 0001                             _Mdm_DrvMainFn 68D4  
                      ??_USBCtrlEPService 0097                                  _isxdigit 60B2  
                           _Mdm_IsRinging 649A                       _USBCtrlTrfInHandler 415C  
                I2c_ReadData@I2cReadState 0033                __end_of_Mdm_RequestSmsData 6840  
                   __end_of_ScheduleTasks 322E                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                                  _outPipes 01C9  
                    _USBCtrlTrfOutHandler 5448                       Led_SetLedStatus@Led 007E  
                                int$flags 0042                                strtol@base 008D  
                          ?_I2c_WriteData 007E                                  atoi@sign 0087  
                       ??_I2cSlv_MainTask 00A6                           StringCopy@Index 008D  
               _USBCtrlEPAllowStatusStage 3CAA                       ??_Mdm_IsSmsReceived 0081  
                    __size_of_Term_MainSm 02A4              ScheduleTasks@ActiveTaskIndex 03FF  
                              strtol@sign 0093                           Term_MainSm@Data 046B  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 008A  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 6128  
                __end_of_Mcu_ConfigExtInt 66C0                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00C7                  CDCTxService@byte_to_send 0085  
                           ?_Eeprom_Write 008F             I2c_WriteData@TentativeCounter 0035  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                UartWriteByte@ByteToWrite 007D                              _Tmr_StartTmr 65D2  
                __end_of_Led_SetLedStatus 6326                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 007D                                  memcpy@s1 007F  
              I2cSlv_I2cReadMsgSts@Result 0081             USBCtrlTrfTxService@byteToSend 007D  
                           ?_I2cSetConfig 0001                                  itoa@base 0097  
             i1I2cSlv_SendI2cMsg@TxBuffer 001C                             ?_I2c_ReadData 0080  
                           ?_I2cSendMsgSm 0001                                  isalpha@c 0082  
                  __size_of_Mcu_SetWdgSts 0012                                  isdigit@c 007F  
                                memset@p1 007D                     Eeprom_Read@DataLength 00AB  
                        ?_USBStallHandler 0001                           ??i1_GenerateEvt 001B  
                        _Rtcm_SetRtccDate 58A8                  USBStdFeatureReqHandler@p 0095  
                        ??_Tmr_TmrBConfig 00A2                             ??_ClearBuffer 0081  
                         _HighPriorityIsr 0008                           ??_Rtcm_MainTask 0092  
               __end_of_Mdm_IsSmsReceived 64E2                          ??_Tmr_TmrBIrqSet 007F  
                __size_of_secondsAppTimer 00A2                                  intlevel1 0000  
                                intlevel2 0000                      _OsTmr_GetTimerStatus 4D8C  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0152  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 563A  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 55DC                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                   __end_of_SetUartBaudRate 2D88  
                                isspace@c 007F                          ___lldiv@dividend 0089  
                GsmGprsTerminal@UsbBuffer 0800                      ?i1_I2cSlv_SendI2cMsg 001C  
              __size_of_I2c_InitI2cModule 0072                            ?_Mdm_DrvMainFn 0001  
                        ??_CheckAckStatus 007D                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                   __end_ofMyApp_Task@F9033 FC1E  
                 __end_ofMyApp_Task@F9036 FC28                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084                    MyApp_Task@currentState 01D6  
          __size_of_Uart_WriteConstString 0044                   ModemEvtParser@SmsString 009E  
                          ??_Led_MainTask 009A             __end_of_Uart_WriteConstString 5F38  
                           OsTmr_Wait@Ret 00A1                         OsTmr_Wait@DelayMs 009D  
                 __size_of_InitSchedTimer 002E                    ??_USBConfigureEndpoint 007E  
                   ?_USBCtrlTrfOutHandler 0001               __size_of_UartTxBufferStatus 004E  
                         _GetCallerNumber 6162                  __end_of_Rtcm_GetRtccDate 5514  
                             _putUSBUSART 656C                 Eeprom_Write@CommandLength 0095  
                     _USBCtrlTrfRxService 2FE8                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 60EE  
                           ?_getSetupCall 0001                   _USBStdFeatureReqHandler 164C  
                __end_of_OsTmr_StartTimer 5698                      _LedPulseStateMachine 341A  
                      _USBCheckCDCRequest 438E                       _USBCtrlTrfTxService 388E  
                     RtccIrqInit@Priority 007D                 _initMemorizedNumbersCount 66F4  
                                utoa@base 008E                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                             _isMemoryEmpty 01FE  
                          ??_Eeprom_Write 0092                          _Rtcc_AlarmConfig 530C  
                         ??_Tmr_TmrBPrSet 009A                           ??_waitSetupCall 0093  
                                sprintf@c 0086                                  sprintf@f 007F  
                                tolower@c 007D                                  strcat@cp 0081  
                                strcat@to 007D                       ?_USBWakeFromSuspend 0001  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0091  
              InitGprsNetwork@GprsInitSts 01FF                           ___lwmod@divisor 007F  
             GsmGprsTerminal@FirstRecFlag 01DD                     ??_USBCtrlTrfInHandler 007E  
                                strcpy@cp 0081                                  strlen@cp 0081  
                                strcpy@to 007D                 UsbDevice_MainTask@Options 0001  
                   _USBAlternateInterface 02F1                           ___lwmod@counter 0081  
                           ?_Mdm_MainTask 0001                            ??_I2cSetConfig 007D  
          __size_of_Irq_InitIntController 002A                                  toupper@c 007D  
         SetUartBaudRate@BaudRateRegister 009A                       ?_USBCheckCDCRequest 0001  
                        _MdmHttp_MainTask 5D9E                    __size_of_isNumberValid 0066  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 63D8                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00C9                                _WDTCONbits 000FC0  
                  MyApp_Task@memoryResult 0129                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                             ??_Eeprom_Read 00AC  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 46EA  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                           ??_findEmptySpot 00B0  
                           _StopCondition 68DE                  MyApp_Task@receivedNumber 04E0  
                   ??i1_I2cSlv_SendI2cMsg 0020                         ?_isNumberInMemory 0100  
                  Led_SetLedStatus@LedSts 007D              _USBStatusStageTimeoutCounter 00C8  
                        Mdm_IsRinging@Ret 0081                      ??_USBWakeFromSuspend 0091  
              USBTransferOnePacket@handle 0082                         ??_InitGprsNetwork 009E  
                     __end_of_ClearBuffer 61CE                      __end_of_CDCTxService 2C50  
                      ??_isNumberInMemory 00B0                      ??_USBCheckCDCRequest 007D  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FC2E  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01F2                   _UsbMasterPhoneNumberLen 031A  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 67DA  
