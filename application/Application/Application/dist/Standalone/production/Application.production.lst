

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 20 10:03:07 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    30                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    31                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    32                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    33                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    35                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	text0,global,reloc=2,class=CODE,delta=1
    37                           	psect	text1,global,reloc=2,class=CODE,delta=1
    38                           	psect	text2,global,reloc=2,class=CODE,delta=1
    39                           	psect	text3,global,reloc=2,class=CODE,delta=1
    40                           	psect	text4,global,reloc=2,class=CODE,delta=1
    41                           	psect	text5,global,reloc=2,class=CODE,delta=1
    42                           	psect	text6,global,reloc=2,class=CODE,delta=1
    43                           	psect	text7,global,reloc=2,class=CODE,delta=1
    44                           	psect	text8,global,reloc=2,class=CODE,delta=1
    45                           	psect	text9,global,reloc=2,class=CODE,delta=1
    46                           	psect	text10,global,reloc=2,class=CODE,delta=1
    47                           	psect	text11,global,reloc=2,class=CODE,delta=1
    48                           	psect	text12,global,reloc=2,class=CODE,delta=1
    49                           	psect	text13,global,reloc=2,class=CODE,delta=1
    50                           	psect	text14,global,reloc=2,class=CODE,delta=1
    51                           	psect	text15,global,reloc=2,class=CODE,delta=1
    52                           	psect	text16,global,reloc=2,class=CODE,delta=1
    53                           	psect	text17,global,reloc=2,class=CODE,delta=1
    54                           	psect	text18,global,reloc=2,class=CODE,delta=1
    55                           	psect	text19,global,reloc=2,class=CODE,delta=1
    56                           	psect	text20,global,reloc=2,class=CODE,delta=1
    57                           	psect	text21,global,reloc=2,class=CODE,delta=1
    58                           	psect	text22,global,reloc=2,class=CODE,delta=1
    59                           	psect	text23,global,reloc=2,class=CODE,delta=1
    60                           	psect	text24,global,reloc=2,class=CODE,delta=1
    61                           	psect	text25,global,reloc=2,class=CODE,delta=1
    62                           	psect	text26,global,reloc=2,class=CODE,delta=1
    63                           	psect	text27,global,reloc=2,class=CODE,delta=1
    64                           	psect	text28,global,reloc=2,class=CODE,delta=1
    65                           	psect	text29,global,reloc=2,class=CODE,delta=1
    66                           	psect	text30,global,reloc=2,class=CODE,delta=1
    67                           	psect	text31,global,reloc=2,class=CODE,delta=1
    68                           	psect	text32,global,reloc=2,class=CODE,delta=1
    69                           	psect	text33,global,reloc=2,class=CODE,delta=1
    70                           	psect	text34,global,reloc=2,class=CODE,delta=1
    71                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text36,global,reloc=2,class=CODE,delta=1
    73                           	psect	text37,global,reloc=2,class=CODE,delta=1
    74                           	psect	text38,global,reloc=2,class=CODE,delta=1
    75                           	psect	text39,global,reloc=2,class=CODE,delta=1
    76                           	psect	text40,global,reloc=2,class=CODE,delta=1
    77                           	psect	text41,global,reloc=2,class=CODE,delta=1
    78                           	psect	text42,global,reloc=2,class=CODE,delta=1
    79                           	psect	text43,global,reloc=2,class=CODE,delta=1
    80                           	psect	text44,global,reloc=2,class=CODE,delta=1
    81                           	psect	text45,global,reloc=2,class=CODE,delta=1
    82                           	psect	text46,global,reloc=2,class=CODE,delta=1
    83                           	psect	text47,global,reloc=2,class=CODE,delta=1
    84                           	psect	text48,global,reloc=2,class=CODE,delta=1
    85                           	psect	text49,global,reloc=2,class=CODE,delta=1
    86                           	psect	text50,global,reloc=2,class=CODE,delta=1
    87                           	psect	text51,global,reloc=2,class=CODE,delta=1
    88                           	psect	text52,global,reloc=2,class=CODE,delta=1
    89                           	psect	text53,global,reloc=2,class=CODE,delta=1
    90                           	psect	text54,global,reloc=2,class=CODE,delta=1
    91                           	psect	text55,global,reloc=2,class=CODE,delta=1
    92                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text58,global,reloc=2,class=CODE,delta=1
    95                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text60,global,reloc=2,class=CODE,delta=1
    97                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text70,global,reloc=2,class=CODE,delta=1
   107                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text74,global,reloc=2,class=CODE,delta=1
   111                           	psect	text75,global,reloc=2,class=CODE,delta=1
   112                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text78,global,reloc=2,class=CODE,delta=1
   115                           	psect	text79,global,reloc=2,class=CODE,delta=1
   116                           	psect	text80,global,reloc=2,class=CODE,delta=1
   117                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text83,global,reloc=2,class=CODE,delta=1
   120                           	psect	text84,global,reloc=2,class=CODE,delta=1
   121                           	psect	text85,global,reloc=2,class=CODE,delta=1
   122                           	psect	text86,global,reloc=2,class=CODE,delta=1
   123                           	psect	text87,global,reloc=2,class=CODE,delta=1
   124                           	psect	text88,global,reloc=2,class=CODE,delta=1
   125                           	psect	text89,global,reloc=2,class=CODE,delta=1
   126                           	psect	text90,global,reloc=2,class=CODE,delta=1
   127                           	psect	text91,global,reloc=2,class=CODE,delta=1
   128                           	psect	text92,global,reloc=2,class=CODE,delta=1
   129                           	psect	text93,global,reloc=2,class=CODE,delta=1
   130                           	psect	text94,global,reloc=2,class=CODE,delta=1
   131                           	psect	text95,global,reloc=2,class=CODE,delta=1
   132                           	psect	text96,global,reloc=2,class=CODE,delta=1
   133                           	psect	text97,global,reloc=2,class=CODE,delta=1
   134                           	psect	text98,global,reloc=2,class=CODE,delta=1
   135                           	psect	text99,global,reloc=2,class=CODE,delta=1
   136                           	psect	text100,global,reloc=2,class=CODE,delta=1
   137                           	psect	text101,global,reloc=2,class=CODE,delta=1
   138                           	psect	text102,global,reloc=2,class=CODE,delta=1
   139                           	psect	text103,global,reloc=2,class=CODE,delta=1
   140                           	psect	text104,global,reloc=2,class=CODE,delta=1
   141                           	psect	text105,global,reloc=2,class=CODE,delta=1
   142                           	psect	text106,global,reloc=2,class=CODE,delta=1
   143                           	psect	text107,global,reloc=2,class=CODE,delta=1
   144                           	psect	text108,global,reloc=2,class=CODE,delta=1
   145                           	psect	text109,global,reloc=2,class=CODE,delta=1
   146                           	psect	text110,global,reloc=2,class=CODE,delta=1
   147                           	psect	text111,global,reloc=2,class=CODE,delta=1
   148                           	psect	text112,global,reloc=2,class=CODE,delta=1
   149                           	psect	text113,global,reloc=2,class=CODE,delta=1
   150                           	psect	text114,global,reloc=2,class=CODE,delta=1
   151                           	psect	text115,global,reloc=2,class=CODE,delta=1
   152                           	psect	text116,global,reloc=2,class=CODE,delta=1
   153                           	psect	text117,global,reloc=2,class=CODE,delta=1
   154                           	psect	text118,global,reloc=2,class=CODE,delta=1
   155                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   156                           	psect	text120,global,reloc=2,class=CODE,delta=1
   157                           	psect	text121,global,reloc=2,class=CODE,delta=1
   158                           	psect	text122,global,reloc=2,class=CODE,delta=1
   159                           	psect	text123,global,reloc=2,class=CODE,delta=1
   160                           	psect	text124,global,reloc=2,class=CODE,delta=1
   161                           	psect	text125,global,reloc=2,class=CODE,delta=1
   162                           	psect	text126,global,reloc=2,class=CODE,delta=1
   163                           	psect	text127,global,reloc=2,class=CODE,delta=1
   164                           	psect	text128,global,reloc=2,class=CODE,delta=1
   165                           	psect	text129,global,reloc=2,class=CODE,delta=1
   166                           	psect	text130,global,reloc=2,class=CODE,delta=1
   167                           	psect	text131,global,reloc=2,class=CODE,delta=1
   168                           	psect	text132,global,reloc=2,class=CODE,delta=1
   169                           	psect	text133,global,reloc=2,class=CODE,delta=1
   170                           	psect	text134,global,reloc=2,class=CODE,delta=1
   171                           	psect	text135,global,reloc=2,class=CODE,delta=1
   172                           	psect	text136,global,reloc=2,class=CODE,delta=1
   173                           	psect	text137,global,reloc=2,class=CODE,delta=1
   174                           	psect	text138,global,reloc=2,class=CODE,delta=1
   175                           	psect	text139,global,reloc=2,class=CODE,delta=1
   176                           	psect	text140,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text141,global,reloc=2,class=CODE,delta=1
   178                           	psect	text142,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text143,global,reloc=2,class=CODE,delta=1
   180                           	psect	text144,global,reloc=2,class=CODE,delta=1
   181                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   182                           	psect	text146,global,reloc=2,class=CODE,delta=1
   183                           	psect	text147,global,reloc=2,class=CODE,delta=1
   184                           	psect	text148,global,reloc=2,class=CODE,delta=1
   185                           	psect	text149,global,reloc=2,class=CODE,delta=1
   186                           	psect	text150,global,reloc=2,class=CODE,delta=1
   187                           	psect	text151,global,reloc=2,class=CODE,delta=1
   188                           	psect	text152,global,reloc=2,class=CODE,delta=1
   189                           	psect	text153,global,reloc=2,class=CODE,delta=1
   190                           	psect	text154,global,reloc=2,class=CODE,delta=1
   191                           	psect	text155,global,reloc=2,class=CODE,delta=1
   192                           	psect	text156,global,reloc=2,class=CODE,delta=1
   193                           	psect	text157,global,reloc=2,class=CODE,delta=1
   194                           	psect	text158,global,reloc=2,class=CODE,delta=1
   195                           	psect	text159,global,reloc=2,class=CODE,delta=1
   196                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   197                           	psect	text161,global,reloc=2,class=CODE,delta=1
   198                           	psect	text162,global,reloc=2,class=CODE,delta=1
   199                           	psect	text163,global,reloc=2,class=CODE,delta=1
   200                           	psect	text164,global,reloc=2,class=CODE,delta=1
   201                           	psect	text165,global,reloc=2,class=CODE,delta=1
   202                           	psect	text166,global,reloc=2,class=CODE,delta=1
   203                           	psect	text167,global,reloc=2,class=CODE,delta=1
   204                           	psect	text168,global,reloc=2,class=CODE,delta=1
   205                           	psect	text169,global,reloc=2,class=CODE,delta=1
   206                           	psect	text170,global,reloc=2,class=CODE,delta=1
   207                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   208                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   209                           	psect	text172,global,reloc=2,class=CODE,delta=1
   210                           	psect	text173,global,reloc=2,class=CODE,delta=1
   211                           	psect	text174,global,reloc=2,class=CODE,delta=1
   212                           	psect	text175,global,reloc=2,class=CODE,delta=1
   213                           	psect	text176,global,reloc=2,class=CODE,delta=1
   214                           	psect	text177,global,reloc=2,class=CODE,delta=1
   215                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   216                           	psect	text178,global,reloc=2,class=CODE,delta=1
   217                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   218                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   219                           	dabs	1,0x400,48,_BDT
   220                           	dabs	1,0x438,8,_CtrlTrfData
   221                           	dabs	1,0x430,8,_SetupPkt
   222  0000                     
   223                           ; Version 1.45
   224                           ; Generated 16/11/2017 GMT
   225                           ; 
   226                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   227                           ; All rights reserved.
   228                           ; 
   229                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   230                           ; 
   231                           ; Redistribution and use in source and binary forms, with or without modification, are
   232                           ; permitted provided that the following conditions are met:
   233                           ; 
   234                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   235                           ;        conditions and the following disclaimer.
   236                           ; 
   237                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   238                           ;        of conditions and the following disclaimer in the documentation and/or other
   239                           ;        materials provided with the distribution.
   240                           ; 
   241                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   242                           ;        software without specific prior written permission.
   243                           ; 
   244                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   245                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   246                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   247                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   248                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   249                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   250                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   251                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   252                           ; 
   253                           ; 
   254                           ; Code-generator required, PIC18F46J50 Definitions
   255                           ; 
   256                           ; SFR Addresses
   257  0000                     
   258                           	psect	idataBANK1
   259  0063AE                     __pidataBANK1:
   260                           	opt stack 0
   261                           
   262                           ;initializer for _isMemoryEmpty
   263  0063AE  01                 	db	1
   264                           
   265                           ;initializer for InitGprsNetwork@GprsInitSts
   266  0063AF  01                 	db	1
   267                           
   268                           	psect	idataBANK2
   269  006332                     __pidataBANK2:
   270                           	opt stack 0
   271                           
   272                           ;initializer for Terminal@EchoOption
   273  006332  01                 	db	1
   274                           
   275                           ;initializer for _MainSystemTimebaseFlag
   276  006333  01                 	db	1
   277                           
   278                           ;initializer for _ConnTimeout
   279  006334  00                 	db	0
   280  006335  01                 	db	1
   281  006336  0000               	dw	0
   282  006338  0000               	dw	0
   283  00633A  0000               	dw	0
   284  00633C  0000               	dw	0
   285  00633E  00                 	db	0
   286                           
   287                           	psect	idataBANK3
   288  005A3A                     __pidataBANK3:
   289                           	opt stack 0
   290                           
   291                           ;initializer for ModemEvtParser@F9111
   292  005A3A  2B                 	db	43
   293  005A3B  43                 	db	67
   294  005A3C  4D                 	db	77
   295  005A3D  54                 	db	84
   296  005A3E  49                 	db	73
   297                           
   298                           ;initializer for ModemEvtParser@F9109
   299  005A3F  2B                 	db	43
   300  005A40  43                 	db	67
   301  005A41  4C                 	db	76
   302  005A42  49                 	db	73
   303  005A43  50                 	db	80
   304                           
   305                           ;initializer for ModemEvtParser@F9107
   306  005A44  52                 	db	82
   307  005A45  49                 	db	73
   308  005A46  4E                 	db	78
   309  005A47  47                 	db	71
   310                           
   311                           ;initializer for MyApp_Task@F9003
   312  005A48  63                 	db	99
   313  005A49  61                 	db	97
   314  005A4A  74                 	db	116
   315                           
   316                           ;initializer for triggerRelay@F8993
   317  005A4B  50                 	db	80
   318  005A4C  00                 	db	0
   319                           
   320                           ;initializer for Term_MainSm@TermDelay
   321  005A4D  01                 	db	1
   322  005A4E  01                 	db	1
   323  005A4F  0000               	dw	0
   324  005A51  0000               	dw	0
   325  005A53  0000               	dw	0
   326  005A55  0000               	dw	0
   327  005A57  00                 	db	0
   328                           
   329                           ;initializer for _ConnWait
   330  005A58  00                 	db	0
   331  005A59  01                 	db	1
   332  005A5A  0000               	dw	0
   333  005A5C  0000               	dw	0
   334  005A5E  0000               	dw	0
   335  005A60  0000               	dw	0
   336  005A62  00                 	db	0
   337                           
   338                           ;initializer for SendSmsSm@SwTimer
   339  005A63  01                 	db	1
   340  005A64  01                 	db	1
   341  005A65  0000               	dw	0
   342  005A67  0000               	dw	0
   343  005A69  0000               	dw	0
   344  005A6B  0000               	dw	0
   345  005A6D  00                 	db	0
   346                           
   347                           ;initializer for CheckModem@Timeout
   348  005A6E  00                 	db	0
   349  005A6F  01                 	db	1
   350  005A70  0000               	dw	0
   351  005A72  0000               	dw	0
   352  005A74  0000               	dw	0
   353  005A76  0000               	dw	0
   354  005A78  00                 	db	0
   355                           
   356                           ;initializer for MyApp_Task@blinkTicks
   357  005A79  FFFF               	dw	65535
   358                           
   359                           	psect	idataBANK4
   360  0061D2                     __pidataBANK4:
   361                           	opt stack 0
   362                           
   363                           ;initializer for ModemEvtParser@F9113
   364  0061D2  43                 	db	67
   365  0061D3  61                 	db	97
   366  0061D4  6C                 	db	108
   367  0061D5  6C                 	db	108
   368  0061D6  20                 	db	32
   369  0061D7  52                 	db	82
   370  0061D8  65                 	db	101
   371  0061D9  61                 	db	97
   372  0061DA  64                 	db	100
   373  0061DB  79                 	db	121
   374                           
   375                           ;initializer for MyApp_Task@phone
   376  0061DC  2B                 	db	43
   377  0061DD  33                 	db	51
   378  0061DE  39                 	db	57
   379  0061DF  30                 	db	48
   380  0061E0  31                 	db	49
   381  0061E1  32                 	db	50
   382  0061E2  33                 	db	51
   383  0061E3  34                 	db	52
   384  0061E4  35                 	db	53
   385  0061E5  36                 	db	54
   386  0061E6  37                 	db	55
   387  0061E7  38                 	db	56
   388  0061E8  39                 	db	57
   389  0061E9  00                 	db	0
   390                           
   391                           	psect	idataBANK5
   392  0055F2                     __pidataBANK5:
   393                           	opt stack 0
   394                           
   395                           ;initializer for _TaskTable
   396  0055F2  8C                 	db	low _Mdm_DrvMainFn
   397  0055F3  63                 	db	high _Mdm_DrvMainFn
   398  0055F4  00                 	db	0
   399  0055F5  0000               	dw	0
   400  0055F7  000A               	dw	10
   401  0055F9  00                 	db	0
   402  0055FA  FC                 	db	low _I2cSlv_MainTask
   403  0055FB  53                 	db	high _I2cSlv_MainTask
   404  0055FC  00                 	db	0
   405  0055FD  0000               	dw	0
   406  0055FF  0001               	dw	1
   407  005601  00                 	db	0
   408  005602  42                 	db	low _Mdm_MainTask
   409  005603  56                 	db	high _Mdm_MainTask
   410  005604  00                 	db	0
   411  005605  0000               	dw	0
   412  005607  0001               	dw	1
   413  005609  00                 	db	0
   414  00560A  5A                 	db	low _MdmHttp_MainTask
   415  00560B  58                 	db	high _MdmHttp_MainTask
   416  00560C  00                 	db	0
   417  00560D  0000               	dw	0
   418  00560F  0001               	dw	1
   419  005611  00                 	db	0
   420  005612  8E                 	db	low _UsbDevice_MainTask
   421  005613  5F                 	db	high _UsbDevice_MainTask
   422  005614  00                 	db	0
   423  005615  0000               	dw	0
   424  005617  0001               	dw	1
   425  005619  00                 	db	0
   426  00561A  1E                 	db	low _Wdg_MainTask
   427  00561B  60                 	db	high _Wdg_MainTask
   428  00561C  00                 	db	0
   429  00561D  0000               	dw	0
   430  00561F  0064               	dw	100
   431  005621  00                 	db	0
   432  005622  EA                 	db	low _Led_MainTask
   433  005623  39                 	db	high _Led_MainTask
   434  005624  00                 	db	0
   435  005625  0000               	dw	0
   436  005627  0032               	dw	50
   437  005629  00                 	db	0
   438  00562A  80                 	db	low _Rtcm_MainTask
   439  00562B  4B                 	db	high _Rtcm_MainTask
   440  00562C  00                 	db	0
   441  00562D  0000               	dw	0
   442  00562F  0064               	dw	100
   443  005631  00                 	db	0
   444  005632  B8                 	db	low _Term_MainTask
   445  005633  61                 	db	high _Term_MainTask
   446  005634  00                 	db	0
   447  005635  0000               	dw	0
   448  005637  0001               	dw	1
   449  005639  00                 	db	0
   450  00563A  2C                 	db	low _MyApp_Task
   451  00563B  2F                 	db	high _MyApp_Task
   452  00563C  00                 	db	0
   453  00563D  0000               	dw	0
   454  00563F  0064               	dw	100
   455  005641  00                 	db	0
   456                           
   457                           	psect	mediumconst
   458  00FC34                     __pmediumconst:
   459                           	opt stack 0
   460  00FC34  00                 	db	0
   461  00FC35                     _USB_SD_Ptr:
   462                           	opt stack 0
   463  00FC35  68                 	db	low _sd000
   464  00FC36  FE                 	db	high _sd000
   465  00FC37  21                 	db	low _sd001
   466  00FC38  FE                 	db	high _sd001
   467  00FC39  FB                 	db	low _sd002
   468  00FC3A  FD                 	db	high _sd002
   469  00FC3B                     __end_of_USB_SD_Ptr:
   470                           	opt stack 0
   471  00FC3B                     _USB_CD_Ptr:
   472                           	opt stack 0
   473  00FC3B  B8                 	db	low _configDescriptor1
   474  00FC3C  FD                 	db	high _configDescriptor1
   475  00FC3D                     __end_of_USB_CD_Ptr:
   476                           	opt stack 0
   477  00FC3D                     _TaskNumber:
   478                           	opt stack 0
   479  00FC3D  000A               	dw	10
   480  00FC3F                     __end_of_TaskNumber:
   481                           	opt stack 0
   482  00FC3F                     _MsgFormat:
   483                           	opt stack 0
   484  00FC3F  48                 	db	72
   485  00FC40  6F                 	db	111
   486  00FC41  73                 	db	115
   487  00FC42  74                 	db	116
   488  00FC43  20                 	db	32
   489  00FC44  6D                 	db	109
   490  00FC45  65                 	db	101
   491  00FC46  73                 	db	115
   492  00FC47  73                 	db	115
   493  00FC48  61                 	db	97
   494  00FC49  67                 	db	103
   495  00FC4A  65                 	db	101
   496  00FC4B  20                 	db	32
   497  00FC4C  66                 	db	102
   498  00FC4D  6F                 	db	111
   499  00FC4E  72                 	db	114
   500  00FC4F  6D                 	db	109
   501  00FC50  61                 	db	97
   502  00FC51  74                 	db	116
   503  00FC52  3A                 	db	58
   504  00FC53  20                 	db	32
   505  00FC54  0D                 	db	13
   506  00FC55  0A                 	db	10
   507  00FC56  5B                 	db	91
   508  00FC57  6F                 	db	111
   509  00FC58  70                 	db	112
   510  00FC59  5F                 	db	95
   511  00FC5A  74                 	db	116
   512  00FC5B  79                 	db	121
   513  00FC5C  70                 	db	112
   514  00FC5D  65                 	db	101
   515  00FC5E  5D                 	db	93
   516  00FC5F  3A                 	db	58
   517  00FC60  5B                 	db	91
   518  00FC61  6F                 	db	111
   519  00FC62  70                 	db	112
   520  00FC63  5D                 	db	93
   521  00FC64  3A                 	db	58
   522  00FC65  5B                 	db	91
   523  00FC66  6C                 	db	108
   524  00FC67  65                 	db	101
   525  00FC68  6E                 	db	110
   526  00FC69  5D                 	db	93
   527  00FC6A  3A                 	db	58
   528  00FC6B  5B                 	db	91
   529  00FC6C  61                 	db	97
   530  00FC6D  64                 	db	100
   531  00FC6E  64                 	db	100
   532  00FC6F  72                 	db	114
   533  00FC70  5D                 	db	93
   534  00FC71  3A                 	db	58
   535  00FC72  5B                 	db	91
   536  00FC73  70                 	db	112
   537  00FC74  61                 	db	97
   538  00FC75  79                 	db	121
   539  00FC76  6C                 	db	108
   540  00FC77  6F                 	db	111
   541  00FC78  61                 	db	97
   542  00FC79  64                 	db	100
   543  00FC7A  5D                 	db	93
   544  00FC7B  0D                 	db	13
   545  00FC7C  0A                 	db	10
   546  00FC7D  0D                 	db	13
   547  00FC7E  0A                 	db	10
   548  00FC7F  5B                 	db	91
   549  00FC80  6F                 	db	111
   550  00FC81  70                 	db	112
   551  00FC82  5F                 	db	95
   552  00FC83  74                 	db	116
   553  00FC84  79                 	db	121
   554  00FC85  70                 	db	112
   555  00FC86  65                 	db	101
   556  00FC87  5D                 	db	93
   557  00FC88  20                 	db	32
   558  00FC89  3D                 	db	61
   559  00FC8A  20                 	db	32
   560  00FC8B  53                 	db	83
   561  00FC8C  4F                 	db	79
   562  00FC8D  2C                 	db	44
   563  00FC8E  53                 	db	83
   564  00FC8F  42                 	db	66
   565  00FC90  0D                 	db	13
   566  00FC91  0A                 	db	10
   567  00FC92  5B                 	db	91
   568  00FC93  6F                 	db	111
   569  00FC94  70                 	db	112
   570  00FC95  5D                 	db	93
   571  00FC96  20                 	db	32
   572  00FC97  3D                 	db	61
   573  00FC98  20                 	db	32
   574  00FC99  52                 	db	82
   575  00FC9A  3A                 	db	58
   576  00FC9B  20                 	db	32
   577  00FC9C  72                 	db	114
   578  00FC9D  65                 	db	101
   579  00FC9E  61                 	db	97
   580  00FC9F  64                 	db	100
   581  00FCA0  2C                 	db	44
   582  00FCA1  57                 	db	87
   583  00FCA2  3A                 	db	58
   584  00FCA3  20                 	db	32
   585  00FCA4  77                 	db	119
   586  00FCA5  72                 	db	114
   587  00FCA6  69                 	db	105
   588  00FCA7  74                 	db	116
   589  00FCA8  65                 	db	101
   590  00FCA9  0D                 	db	13
   591  00FCAA  0A                 	db	10
   592  00FCAB  5B                 	db	91
   593  00FCAC  6C                 	db	108
   594  00FCAD  65                 	db	101
   595  00FCAE  6E                 	db	110
   596  00FCAF  5D                 	db	93
   597  00FCB0  20                 	db	32
   598  00FCB1  3D                 	db	61
   599  00FCB2  20                 	db	32
   600  00FCB3  32                 	db	50
   601  00FCB4  20                 	db	32
   602  00FCB5  62                 	db	98
   603  00FCB6  79                 	db	121
   604  00FCB7  74                 	db	116
   605  00FCB8  65                 	db	101
   606  00FCB9  20                 	db	32
   607  00FCBA  41                 	db	65
   608  00FCBB  53                 	db	83
   609  00FCBC  43                 	db	67
   610  00FCBD  49                 	db	73
   611  00FCBE  49                 	db	73
   612  00FCBF  0D                 	db	13
   613  00FCC0  0A                 	db	10
   614  00FCC1  5B                 	db	91
   615  00FCC2  61                 	db	97
   616  00FCC3  64                 	db	100
   617  00FCC4  64                 	db	100
   618  00FCC5  72                 	db	114
   619  00FCC6  5D                 	db	93
   620  00FCC7  20                 	db	32
   621  00FCC8  3D                 	db	61
   622  00FCC9  20                 	db	32
   623  00FCCA  32                 	db	50
   624  00FCCB  20                 	db	32
   625  00FCCC  62                 	db	98
   626  00FCCD  79                 	db	121
   627  00FCCE  74                 	db	116
   628  00FCCF  65                 	db	101
   629  00FCD0  20                 	db	32
   630  00FCD1  41                 	db	65
   631  00FCD2  53                 	db	83
   632  00FCD3  43                 	db	67
   633  00FCD4  49                 	db	73
   634  00FCD5  49                 	db	73
   635  00FCD6  0D                 	db	13
   636  00FCD7  0A                 	db	10
   637  00FCD8  5B                 	db	91
   638  00FCD9  70                 	db	112
   639  00FCDA  61                 	db	97
   640  00FCDB  79                 	db	121
   641  00FCDC  6C                 	db	108
   642  00FCDD  6F                 	db	111
   643  00FCDE  61                 	db	97
   644  00FCDF  64                 	db	100
   645  00FCE0  5D                 	db	93
   646  00FCE1  20                 	db	32
   647  00FCE2  3D                 	db	61
   648  00FCE3  20                 	db	32
   649  00FCE4  6D                 	db	109
   650  00FCE5  61                 	db	97
   651  00FCE6  78                 	db	120
   652  00FCE7  20                 	db	32
   653  00FCE8  32                 	db	50
   654  00FCE9  30                 	db	48
   655  00FCEA  20                 	db	32
   656  00FCEB  62                 	db	98
   657  00FCEC  79                 	db	121
   658  00FCED  74                 	db	116
   659  00FCEE  65                 	db	101
   660  00FCEF  20                 	db	32
   661  00FCF0  41                 	db	65
   662  00FCF1  53                 	db	83
   663  00FCF2  43                 	db	67
   664  00FCF3  49                 	db	73
   665  00FCF4  49                 	db	73
   666  00FCF5  0D                 	db	13
   667  00FCF6  0A                 	db	10
   668  00FCF7  0D                 	db	13
   669  00FCF8  0A                 	db	10
   670  00FCF9  54                 	db	84
   671  00FCFA  65                 	db	101
   672  00FCFB  72                 	db	114
   673  00FCFC  6D                 	db	109
   674  00FCFD  69                 	db	105
   675  00FCFE  6E                 	db	110
   676  00FCFF  61                 	db	97
   677  00FD00  6C                 	db	108
   678  00FD01  20                 	db	32
   679  00FD02  4D                 	db	77
   680  00FD03  6F                 	db	111
   681  00FD04  64                 	db	100
   682  00FD05  65                 	db	101
   683  00FD06  3A                 	db	58
   684  00FD07  20                 	db	32
   685  00FD08  43                 	db	67
   686  00FD09  4F                 	db	79
   687  00FD0A  4D                 	db	77
   688  00FD0B  4D                 	db	77
   689  00FD0C  41                 	db	65
   690  00FD0D  4E                 	db	78
   691  00FD0E  44                 	db	68
   692  00FD0F  20                 	db	32
   693  00FD10  4D                 	db	77
   694  00FD11  4F                 	db	79
   695  00FD12  44                 	db	68
   696  00FD13  45                 	db	69
   697  00FD14  0D                 	db	13
   698  00FD15  0A                 	db	10
   699  00FD16  4D                 	db	77
   700  00FD17  6F                 	db	111
   701  00FD18  64                 	db	100
   702  00FD19  65                 	db	101
   703  00FD1A  6D                 	db	109
   704  00FD1B  20                 	db	32
   705  00FD1C  54                 	db	84
   706  00FD1D  79                 	db	121
   707  00FD1E  70                 	db	112
   708  00FD1F  65                 	db	101
   709  00FD20  3A                 	db	58
   710  00FD21  20                 	db	32
   711  00FD22  47                 	db	71
   712  00FD23  53                 	db	83
   713  00FD24  4D                 	db	77
   714  00FD25  2F                 	db	47
   715  00FD26  47                 	db	71
   716  00FD27  50                 	db	80
   717  00FD28  52                 	db	82
   718  00FD29  53                 	db	83
   719  00FD2A  0D                 	db	13
   720  00FD2B  0A                 	db	10
   721  00FD2C  0D                 	db	13
   722  00FD2D  0A                 	db	10
   723  00FD2E  00                 	db	0
   724  00FD2F                     __end_of_MsgFormat:
   725                           	opt stack 0
   726  00FD2F                     _Welcome:
   727                           	opt stack 0
   728  00FD2F  2A                 	db	42
   729  00FD30  2A                 	db	42
   730  00FD31  2A                 	db	42
   731  00FD32  2A                 	db	42
   732  00FD33  2A                 	db	42
   733  00FD34  2A                 	db	42
   734  00FD35  2A                 	db	42
   735  00FD36  2A                 	db	42
   736  00FD37  2A                 	db	42
   737  00FD38  2A                 	db	42
   738  00FD39  2A                 	db	42
   739  00FD3A  2A                 	db	42
   740  00FD3B  2A                 	db	42
   741  00FD3C  2A                 	db	42
   742  00FD3D  2A                 	db	42
   743  00FD3E  2A                 	db	42
   744  00FD3F  2A                 	db	42
   745  00FD40  2A                 	db	42
   746  00FD41  2A                 	db	42
   747  00FD42  2A                 	db	42
   748  00FD43  2A                 	db	42
   749  00FD44  2A                 	db	42
   750  00FD45  2A                 	db	42
   751  00FD46  2A                 	db	42
   752  00FD47  2A                 	db	42
   753  00FD48  2A                 	db	42
   754  00FD49  2A                 	db	42
   755  00FD4A  2A                 	db	42
   756  00FD4B  2A                 	db	42
   757  00FD4C  2A                 	db	42
   758  00FD4D  2A                 	db	42
   759  00FD4E  2A                 	db	42
   760  00FD4F  2A                 	db	42
   761  00FD50  2A                 	db	42
   762  00FD51  2A                 	db	42
   763  00FD52  2A                 	db	42
   764  00FD53  2A                 	db	42
   765  00FD54  2A                 	db	42
   766  00FD55  2A                 	db	42
   767  00FD56  2A                 	db	42
   768  00FD57  2A                 	db	42
   769  00FD58  2A                 	db	42
   770  00FD59  2A                 	db	42
   771  00FD5A  2A                 	db	42
   772  00FD5B  2A                 	db	42
   773  00FD5C  2A                 	db	42
   774  00FD5D  2A                 	db	42
   775  00FD5E  2A                 	db	42
   776  00FD5F  2A                 	db	42
   777  00FD60  0D                 	db	13
   778  00FD61  0A                 	db	10
   779  00FD62  20                 	db	32
   780  00FD63  20                 	db	32
   781  00FD64  20                 	db	32
   782  00FD65  20                 	db	32
   783  00FD66  20                 	db	32
   784  00FD67  20                 	db	32
   785  00FD68  20                 	db	32
   786  00FD69  20                 	db	32
   787  00FD6A  20                 	db	32
   788  00FD6B  20                 	db	32
   789  00FD6C  20                 	db	32
   790  00FD6D  20                 	db	32
   791  00FD6E  20                 	db	32
   792  00FD6F  20                 	db	32
   793  00FD70  20                 	db	32
   794  00FD71  20                 	db	32
   795  00FD72  20                 	db	32
   796  00FD73  20                 	db	32
   797  00FD74  4D                 	db	77
   798  00FD75  45                 	db	69
   799  00FD76  52                 	db	82
   800  00FD77  43                 	db	67
   801  00FD78  55                 	db	85
   802  00FD79  52                 	db	82
   803  00FD7A  59                 	db	89
   804  00FD7B  20                 	db	32
   805  00FD7C  53                 	db	83
   806  00FD7D  59                 	db	89
   807  00FD7E  53                 	db	83
   808  00FD7F  54                 	db	84
   809  00FD80  45                 	db	69
   810  00FD81  4D                 	db	77
   811  00FD82  0D                 	db	13
   812  00FD83  0A                 	db	10
   813  00FD84  2A                 	db	42
   814  00FD85  2A                 	db	42
   815  00FD86  2A                 	db	42
   816  00FD87  2A                 	db	42
   817  00FD88  2A                 	db	42
   818  00FD89  2A                 	db	42
   819  00FD8A  2A                 	db	42
   820  00FD8B  2A                 	db	42
   821  00FD8C  2A                 	db	42
   822  00FD8D  2A                 	db	42
   823  00FD8E  2A                 	db	42
   824  00FD8F  2A                 	db	42
   825  00FD90  2A                 	db	42
   826  00FD91  2A                 	db	42
   827  00FD92  2A                 	db	42
   828  00FD93  2A                 	db	42
   829  00FD94  2A                 	db	42
   830  00FD95  2A                 	db	42
   831  00FD96  2A                 	db	42
   832  00FD97  2A                 	db	42
   833  00FD98  2A                 	db	42
   834  00FD99  2A                 	db	42
   835  00FD9A  2A                 	db	42
   836  00FD9B  2A                 	db	42
   837  00FD9C  2A                 	db	42
   838  00FD9D  2A                 	db	42
   839  00FD9E  2A                 	db	42
   840  00FD9F  2A                 	db	42
   841  00FDA0  2A                 	db	42
   842  00FDA1  2A                 	db	42
   843  00FDA2  2A                 	db	42
   844  00FDA3  2A                 	db	42
   845  00FDA4  2A                 	db	42
   846  00FDA5  2A                 	db	42
   847  00FDA6  2A                 	db	42
   848  00FDA7  2A                 	db	42
   849  00FDA8  2A                 	db	42
   850  00FDA9  2A                 	db	42
   851  00FDAA  2A                 	db	42
   852  00FDAB  2A                 	db	42
   853  00FDAC  2A                 	db	42
   854  00FDAD  2A                 	db	42
   855  00FDAE  2A                 	db	42
   856  00FDAF  2A                 	db	42
   857  00FDB0  2A                 	db	42
   858  00FDB1  2A                 	db	42
   859  00FDB2  2A                 	db	42
   860  00FDB3  2A                 	db	42
   861  00FDB4  2A                 	db	42
   862  00FDB5  0D                 	db	13
   863  00FDB6  0A                 	db	10
   864  00FDB7  00                 	db	0
   865  00FDB8                     __end_of_Welcome:
   866                           	opt stack 0
   867  00FDB8                     _configDescriptor1:
   868                           	opt stack 0
   869  00FDB8  09                 	db	9
   870  00FDB9  02                 	db	2
   871  00FDBA  43                 	db	67
   872  00FDBB  00                 	db	0
   873  00FDBC  02                 	db	2
   874  00FDBD  01                 	db	1
   875  00FDBE  00                 	db	0
   876  00FDBF  C0                 	db	192
   877  00FDC0  32                 	db	50
   878  00FDC1  09                 	db	9
   879  00FDC2  04                 	db	4
   880  00FDC3  00                 	db	0
   881  00FDC4  00                 	db	0
   882  00FDC5  01                 	db	1
   883  00FDC6  02                 	db	2
   884  00FDC7  02                 	db	2
   885  00FDC8  01                 	db	1
   886  00FDC9  00                 	db	0
   887  00FDCA  05                 	db	5
   888  00FDCB  24                 	db	36
   889  00FDCC  00                 	db	0
   890  00FDCD  10                 	db	16
   891  00FDCE  01                 	db	1
   892  00FDCF  04                 	db	4
   893  00FDD0  24                 	db	36
   894  00FDD1  02                 	db	2
   895  00FDD2  02                 	db	2
   896  00FDD3  05                 	db	5
   897  00FDD4  24                 	db	36
   898  00FDD5  06                 	db	6
   899  00FDD6  00                 	db	0
   900  00FDD7  01                 	db	1
   901  00FDD8  05                 	db	5
   902  00FDD9  24                 	db	36
   903  00FDDA  01                 	db	1
   904  00FDDB  00                 	db	0
   905  00FDDC  01                 	db	1
   906  00FDDD  07                 	db	7
   907  00FDDE  05                 	db	5
   908  00FDDF  81                 	db	129
   909  00FDE0  03                 	db	3
   910  00FDE1  08                 	db	8
   911  00FDE2  00                 	db	0
   912  00FDE3  02                 	db	2
   913  00FDE4  09                 	db	9
   914  00FDE5  04                 	db	4
   915  00FDE6  01                 	db	1
   916  00FDE7  00                 	db	0
   917  00FDE8  02                 	db	2
   918  00FDE9  0A                 	db	10
   919  00FDEA  00                 	db	0
   920  00FDEB  00                 	db	0
   921  00FDEC  00                 	db	0
   922  00FDED  07                 	db	7
   923  00FDEE  05                 	db	5
   924  00FDEF  02                 	db	2
   925  00FDF0  02                 	db	2
   926  00FDF1  40                 	db	64
   927  00FDF2  00                 	db	0
   928  00FDF3  00                 	db	0
   929  00FDF4  07                 	db	7
   930  00FDF5  05                 	db	5
   931  00FDF6  82                 	db	130
   932  00FDF7  02                 	db	2
   933  00FDF8  40                 	db	64
   934  00FDF9  00                 	db	0
   935  00FDFA  00                 	db	0
   936  00FDFB                     __end_of_configDescriptor1:
   937                           	opt stack 0
   938  00FDFB                     _sd002:
   939                           	opt stack 0
   940  00FDFB  26                 	db	38
   941  00FDFC  03                 	db	3
   942  00FDFD  0054               	dw	84
   943  00FDFF  0065               	dw	101
   944  00FE01  0072               	dw	114
   945  00FE03  006D               	dw	109
   946  00FE05  0069               	dw	105
   947  00FE07  006E               	dw	110
   948  00FE09  0061               	dw	97
   949  00FE0B  006C               	dw	108
   950  00FE0D  0020               	dw	32
   951  00FE0F  0049               	dw	73
   952  00FE11  006E               	dw	110
   953  00FE13  0074               	dw	116
   954  00FE15  0065               	dw	101
   955  00FE17  0072               	dw	114
   956  00FE19  0066               	dw	102
   957  00FE1B  0061               	dw	97
   958  00FE1D  0063               	dw	99
   959  00FE1F  0065               	dw	101
   960  00FE21                     __end_of_sd002:
   961                           	opt stack 0
   962  00FE21                     _sd001:
   963                           	opt stack 0
   964  00FE21  1E                 	db	30
   965  00FE22  03                 	db	3
   966  00FE23  004D               	dw	77
   967  00FE25  0065               	dw	101
   968  00FE27  0072               	dw	114
   969  00FE29  0063               	dw	99
   970  00FE2B  0075               	dw	117
   971  00FE2D  0072               	dw	114
   972  00FE2F  0079               	dw	121
   973  00FE31  0020               	dw	32
   974  00FE33  0053               	dw	83
   975  00FE35  0079               	dw	121
   976  00FE37  0073               	dw	115
   977  00FE39  0074               	dw	116
   978  00FE3B  0065               	dw	101
   979  00FE3D  006D               	dw	109
   980  00FE3F                     __end_of_sd001:
   981                           	opt stack 0
   982  00FE3F                     _MsgReady:
   983                           	opt stack 0
   984  00FE3F  0D                 	db	13
   985  00FE40  0A                 	db	10
   986  00FE41  53                 	db	83
   987  00FE42  79                 	db	121
   988  00FE43  73                 	db	115
   989  00FE44  74                 	db	116
   990  00FE45  65                 	db	101
   991  00FE46  6D                 	db	109
   992  00FE47  20                 	db	32
   993  00FE48  52                 	db	82
   994  00FE49  65                 	db	101
   995  00FE4A  61                 	db	97
   996  00FE4B  64                 	db	100
   997  00FE4C  79                 	db	121
   998  00FE4D  2E                 	db	46
   999  00FE4E  2E                 	db	46
  1000  00FE4F  2E                 	db	46
  1001  00FE50  20                 	db	32
  1002  00FE51  0D                 	db	13
  1003  00FE52  0A                 	db	10
  1004  00FE53  0D                 	db	13
  1005  00FE54  0A                 	db	10
  1006  00FE55  00                 	db	0
  1007  00FE56                     __end_of_MsgReady:
  1008                           	opt stack 0
  1009  00FE56                     _device_dsc:
  1010                           	opt stack 0
  1011  00FE56  12                 	db	18
  1012  00FE57  01                 	db	1
  1013  00FE58  0200               	dw	512
  1014  00FE5A  02                 	db	2
  1015  00FE5B  00                 	db	0
  1016  00FE5C  00                 	db	0
  1017  00FE5D  08                 	db	8
  1018  00FE5E  04D8               	dw	1240
  1019  00FE60  000A               	dw	10
  1020  00FE62  0100               	dw	256
  1021  00FE64  01                 	db	1
  1022  00FE65  02                 	db	2
  1023  00FE66  00                 	db	0
  1024  00FE67  01                 	db	1
  1025  00FE68                     __end_of_device_dsc:
  1026                           	opt stack 0
  1027  00FE68                     _sd000:
  1028                           	opt stack 0
  1029  00FE68  04                 	db	4
  1030  00FE69  03                 	db	3
  1031  00FE6A  0409               	dw	1033
  1032  00FE6C                     __end_of_sd000:
  1033                           	opt stack 0
  1034  0000                     _RPINR1	set	3815
  1035  0000                     _UEP0bits	set	3878
  1036  0000                     _UIEbits	set	3894
  1037  0000                     _UADDR	set	3896
  1038  0000                     _UIE	set	3894
  1039  0000                     _UEIE	set	3895
  1040  0000                     _UCFG	set	3897
  1041  0000                     _RTCCAL	set	3902
  1042  0000                     _PADCFG1bits	set	3900
  1043  0000                     _RTCCFGbits	set	3903
  1044  0000                     _DSCONLbits	set	3916
  1045  0000                     _DSGPR1	set	3919
  1046  0000                     _DSGPR0	set	3918
  1047  0000                     _DSCONHbits	set	3917
  1048  0000                     _ANCON1bits	set	3913
  1049  0000                     _UEP1	set	3879
  1050  0000                     _UEP0	set	3878
  1051  0000                     _T1CONbits	set	4045
  1052  0000                     _PORTDbits	set	3971
  1053  0000                     _USTAT	set	3940
  1054  0000                     _PIR2bits	set	4001
  1055  0000                     _UCON	set	3941
  1056  0000                     _UIRbits	set	3938
  1057  0000                     _UCONbits	set	3941
  1058  0000                     _UIR	set	3938
  1059  0000                     _UEIR	set	3939
  1060  0000                     _PIE2bits	set	4000
  1061  0000                     _BAUDCON2	set	3964
  1062  0000                     _RCSTA2	set	3996
  1063  0000                     _BAUDCON1	set	3966
  1064  0000                     _RCSTA1	set	4012
  1065  0000                     _TRISCbits	set	3988
  1066  0000                     _TXSTA2	set	4008
  1067  0000                     _TXSTA1	set	4013
  1068  0000                     _RCREG2	set	4010
  1069  0000                     _RCREG1	set	4015
  1070  0000                     _TXREG2	set	4009
  1071  0000                     _TXREG1	set	4014
  1072  0000                     _SPBRG2	set	4011
  1073  0000                     _SPBRGH2	set	3965
  1074  0000                     _SPBRG1	set	4016
  1075  0000                     _SPBRGH1	set	3967
  1076  0000                     _PR4	set	3959
  1077  0000                     _PR2	set	4043
  1078  0000                     _PIE1bits	set	3997
  1079  0000                     _IPR1bits	set	3999
  1080  0000                     _T4CONbits	set	3958
  1081  0000                     _T2CONbits	set	4042
  1082  0000                     _ALRMVALL	set	3982
  1083  0000                     _ALRMVALH	set	3983
  1084  0000                     _RTCVALH	set	3993
  1085  0000                     _RTCVALL	set	3992
  1086  0000                     _ALRMRPTbits	set	3984
  1087  0000                     _ALRMCFGbits	set	3985
  1088  0000                     _PIE3bits	set	4003
  1089  0000                     _IPR3bits	set	4005
  1090  0000                     _OSCCONbits	set	4051
  1091  0000                     _PORTEbits	set	3972
  1092  0000                     _TRISEbits	set	3990
  1093  0000                     _WDTCONbits	set	4032
  1094  0000                     _INTCON2bits	set	4081
  1095  0000                     _TRISBbits	set	3987
  1096  0000                     _OSCTUNEbits	set	3995
  1097  0000                     _SSP2CON1	set	3954
  1098  0000                     _TRISDbits	set	3989
  1099  0000                     _SSP2BUF	set	3957
  1100  0000                     _SSP2CON2bits	set	3953
  1101  0000                     _SSP2STAT	set	3955
  1102  0000                     _SSP2CON2	set	3953
  1103  0000                     _SSP2ADD	set	3956
  1104  0000                     _PIR1bits	set	3998
  1105  0000                     _PIR3bits	set	4004
  1106  0000                     _INTCON3bits	set	4080
  1107  0000                     _INTCONbits	set	4082
  1108  0000                     _RCONbits	set	4048
  1109  00FE6C                     STR_21:
  1110  00FE6C  20                 	db	32
  1111  00FE6D  4C                 	db	76	;'L'
  1112  00FE6E  61                 	db	97	;'a'
  1113  00FE6F  7A                 	db	122	;'z'
  1114  00FE70  79                 	db	121	;'y'
  1115  00FE71  20                 	db	32
  1116  00FE72  64                 	db	100	;'d'
  1117  00FE73  65                 	db	101	;'e'
  1118  00FE74  76                 	db	118	;'v'
  1119  00FE75  69                 	db	105	;'i'
  1120  00FE76  63                 	db	99	;'c'
  1121  00FE77  65                 	db	101	;'e'
  1122  00FE78  2E                 	db	46
  1123  00FE79  2E                 	db	46
  1124  00FE7A  2E                 	db	46
  1125  00FE7B  79                 	db	121	;'y'
  1126  00FE7C  6F                 	db	111	;'o'
  1127  00FE7D  75                 	db	117	;'u'
  1128  00FE7E  27                 	db	39
  1129  00FE7F  76                 	db	118	;'v'
  1130  00FE80  65                 	db	101	;'e'
  1131  00FE81  20                 	db	32
  1132  00FE82  62                 	db	98	;'b'
  1133  00FE83  65                 	db	101	;'e'
  1134  00FE84  65                 	db	101	;'e'
  1135  00FE85  6E                 	db	110	;'n'
  1136  00FE86  20                 	db	32
  1137  00FE87  74                 	db	116	;'t'
  1138  00FE88  69                 	db	105	;'i'
  1139  00FE89  6D                 	db	109	;'m'
  1140  00FE8A  65                 	db	101	;'e'
  1141  00FE8B  64                 	db	100	;'d'
  1142  00FE8C  2D                 	db	45
  1143  00FE8D  6F                 	db	111	;'o'
  1144  00FE8E  75                 	db	117	;'u'
  1145  00FE8F  74                 	db	116	;'t'
  1146  00FE90  21                 	db	33
  1147  00FE91  21                 	db	33
  1148  00FE92  21                 	db	33
  1149  00FE93  0D                 	db	13
  1150  00FE94  0A                 	db	10
  1151  00FE95  00                 	db	0
  1152  00FE96                     STR_8:
  1153  00FE96  41                 	db	65	;'A'
  1154  00FE97  54                 	db	84	;'T'
  1155  00FE98  2B                 	db	43
  1156  00FE99  53                 	db	83	;'S'
  1157  00FE9A  41                 	db	65	;'A'
  1158  00FE9B  50                 	db	80	;'P'
  1159  00FE9C  42                 	db	66	;'B'
  1160  00FE9D  52                 	db	82	;'R'
  1161  00FE9E  3D                 	db	61	;'='
  1162  00FE9F  33                 	db	51	;'3'
  1163  00FEA0  2C                 	db	44
  1164  00FEA1  31                 	db	49	;'1'
  1165  00FEA2  2C                 	db	44
  1166  00FEA3  22                 	db	34
  1167  00FEA4  43                 	db	67	;'C'
  1168  00FEA5  6F                 	db	111	;'o'
  1169  00FEA6  6E                 	db	110	;'n'
  1170  00FEA7  74                 	db	116	;'t'
  1171  00FEA8  79                 	db	121	;'y'
  1172  00FEA9  70                 	db	112	;'p'
  1173  00FEAA  65                 	db	101	;'e'
  1174  00FEAB  22                 	db	34
  1175  00FEAC  2C                 	db	44
  1176  00FEAD  22                 	db	34
  1177  00FEAE  47                 	db	71	;'G'
  1178  00FEAF  50                 	db	80	;'P'
  1179  00FEB0  52                 	db	82	;'R'
  1180  00FEB1  53                 	db	83	;'S'
  1181  00FEB2  22                 	db	34
  1182  00FEB3  0D                 	db	13
  1183  00FEB4  00                 	db	0
  1184  00FEB5                     STR_14:
  1185  00FEB5  41                 	db	65	;'A'
  1186  00FEB6  54                 	db	84	;'T'
  1187  00FEB7  2B                 	db	43
  1188  00FEB8  48                 	db	72	;'H'
  1189  00FEB9  54                 	db	84	;'T'
  1190  00FEBA  54                 	db	84	;'T'
  1191  00FEBB  50                 	db	80	;'P'
  1192  00FEBC  50                 	db	80	;'P'
  1193  00FEBD  41                 	db	65	;'A'
  1194  00FEBE  52                 	db	82	;'R'
  1195  00FEBF  41                 	db	65	;'A'
  1196  00FEC0  3D                 	db	61	;'='
  1197  00FEC1  22                 	db	34
  1198  00FEC2  43                 	db	67	;'C'
  1199  00FEC3  49                 	db	73	;'I'
  1200  00FEC4  44                 	db	68	;'D'
  1201  00FEC5  22                 	db	34
  1202  00FEC6  2C                 	db	44
  1203  00FEC7  31                 	db	49	;'1'
  1204  00FEC8  0D                 	db	13
  1205  00FEC9  00                 	db	0
  1206  00FECA                     STR_9:
  1207  00FECA  41                 	db	65	;'A'
  1208  00FECB  54                 	db	84	;'T'
  1209  00FECC  2B                 	db	43
  1210  00FECD  53                 	db	83	;'S'
  1211  00FECE  41                 	db	65	;'A'
  1212  00FECF  50                 	db	80	;'P'
  1213  00FED0  42                 	db	66	;'B'
  1214  00FED1  52                 	db	82	;'R'
  1215  00FED2  3D                 	db	61	;'='
  1216  00FED3  33                 	db	51	;'3'
  1217  00FED4  2C                 	db	44
  1218  00FED5  31                 	db	49	;'1'
  1219  00FED6  2C                 	db	44
  1220  00FED7  22                 	db	34
  1221  00FED8  41                 	db	65	;'A'
  1222  00FED9  50                 	db	80	;'P'
  1223  00FEDA  4E                 	db	78	;'N'
  1224  00FEDB  22                 	db	34
  1225  00FEDC  2C                 	db	44
  1226  00FEDD  22                 	db	34
  1227  00FEDE  00                 	db	0
  1228  00FEDF                     STR_23:
  1229  00FEDF  46                 	db	70	;'F'
  1230  00FEE0  72                 	db	114	;'r'
  1231  00FEE1  61                 	db	97	;'a'
  1232  00FEE2  6D                 	db	109	;'m'
  1233  00FEE3  65                 	db	101	;'e'
  1234  00FEE4  77                 	db	119	;'w'
  1235  00FEE5  6F                 	db	111	;'o'
  1236  00FEE6  72                 	db	114	;'r'
  1237  00FEE7  6B                 	db	107	;'k'
  1238  00FEE8  20                 	db	32
  1239  00FEE9  56                 	db	86	;'V'
  1240  00FEEA  65                 	db	101	;'e'
  1241  00FEEB  72                 	db	114	;'r'
  1242  00FEEC  73                 	db	115	;'s'
  1243  00FEED  69                 	db	105	;'i'
  1244  00FEEE  6F                 	db	111	;'o'
  1245  00FEEF  6E                 	db	110	;'n'
  1246  00FEF0  3A                 	db	58	;':'
  1247  00FEF1  20                 	db	32
  1248  00FEF2  00                 	db	0
  1249  00FEF3                     STR_15:
  1250  00FEF3  41                 	db	65	;'A'
  1251  00FEF4  54                 	db	84	;'T'
  1252  00FEF5  2B                 	db	43
  1253  00FEF6  48                 	db	72	;'H'
  1254  00FEF7  54                 	db	84	;'T'
  1255  00FEF8  54                 	db	84	;'T'
  1256  00FEF9  50                 	db	80	;'P'
  1257  00FEFA  50                 	db	80	;'P'
  1258  00FEFB  41                 	db	65	;'A'
  1259  00FEFC  52                 	db	82	;'R'
  1260  00FEFD  41                 	db	65	;'A'
  1261  00FEFE  3D                 	db	61	;'='
  1262  00FEFF  22                 	db	34
  1263  00FF00  55                 	db	85	;'U'
  1264  00FF01  52                 	db	82	;'R'
  1265  00FF02  4C                 	db	76	;'L'
  1266  00FF03  22                 	db	34
  1267  00FF04  2C                 	db	44
  1268  00FF05  22                 	db	34
  1269  00FF06  00                 	db	0
  1270  00FF07                     STR_29:
  1271  00FF07  41                 	db	65	;'A'
  1272  00FF08  54                 	db	84	;'T'
  1273  00FF09  2B                 	db	43
  1274  00FF0A  43                 	db	67	;'C'
  1275  00FF0B  4D                 	db	77	;'M'
  1276  00FF0C  47                 	db	71	;'G'
  1277  00FF0D  44                 	db	68	;'D'
  1278  00FF0E  41                 	db	65	;'A'
  1279  00FF0F  3D                 	db	61	;'='
  1280  00FF10  44                 	db	68	;'D'
  1281  00FF11  45                 	db	69	;'E'
  1282  00FF12  4C                 	db	76	;'L'
  1283  00FF13  20                 	db	32
  1284  00FF14  41                 	db	65	;'A'
  1285  00FF15  4C                 	db	76	;'L'
  1286  00FF16  4C                 	db	76	;'L'
  1287  00FF17  0D                 	db	13
  1288  00FF18  0A                 	db	10
  1289  00FF19  00                 	db	0
  1290  00FF1A                     STR_27:
  1291  00FF1A  42                 	db	66	;'B'
  1292  00FF1B  75                 	db	117	;'u'
  1293  00FF1C  69                 	db	105	;'i'
  1294  00FF1D  6C                 	db	108	;'l'
  1295  00FF1E  64                 	db	100	;'d'
  1296  00FF1F  20                 	db	32
  1297  00FF20  44                 	db	68	;'D'
  1298  00FF21  61                 	db	97	;'a'
  1299  00FF22  74                 	db	116	;'t'
  1300  00FF23  65                 	db	101	;'e'
  1301  00FF24  3A                 	db	58	;':'
  1302  00FF25  20                 	db	32
  1303  00FF26  25                 	db	37
  1304  00FF27  73                 	db	115	;'s'
  1305  00FF28  0D                 	db	13
  1306  00FF29  0A                 	db	10
  1307  00FF2A  00                 	db	0
  1308  00FF2B                     STR_16:
  1309  00FF2B  41                 	db	65	;'A'
  1310  00FF2C  54                 	db	84	;'T'
  1311  00FF2D  2B                 	db	43
  1312  00FF2E  48                 	db	72	;'H'
  1313  00FF2F  54                 	db	84	;'T'
  1314  00FF30  54                 	db	84	;'T'
  1315  00FF31  50                 	db	80	;'P'
  1316  00FF32  41                 	db	65	;'A'
  1317  00FF33  43                 	db	67	;'C'
  1318  00FF34  54                 	db	84	;'T'
  1319  00FF35  49                 	db	73	;'I'
  1320  00FF36  4F                 	db	79	;'O'
  1321  00FF37  4E                 	db	78	;'N'
  1322  00FF38  3D                 	db	61	;'='
  1323  00FF39  30                 	db	48	;'0'
  1324  00FF3A  0D                 	db	13
  1325  00FF3B  00                 	db	0
  1326  00FF3C  41                 	db	65	;'A'
  1327  00FF3D  54                 	db	84	;'T'
  1328  00FF3E  2B                 	db	43
  1329  00FF3F  48                 	db	72	;'H'
  1330  00FF40  54                 	db	84	;'T'
  1331  00FF41  54                 	db	84	;'T'
  1332  00FF42  50                 	db	80	;'P'
  1333  00FF43  53                 	db	83	;'S'
  1334  00FF44  53                 	db	83	;'S'
  1335  00FF45  4C                 	db	76	;'L'
  1336  00FF46  3D                 	db	61	;'='
  1337  00FF47  30                 	db	48	;'0'
  1338  00FF48  0D                 	db	13
  1339  00FF49  00                 	db	0
  1340  00FF4A                     STR_10:
  1341  00FF4A  41                 	db	65	;'A'
  1342  00FF4B  54                 	db	84	;'T'
  1343  00FF4C  2B                 	db	43
  1344  00FF4D  53                 	db	83	;'S'
  1345  00FF4E  41                 	db	65	;'A'
  1346  00FF4F  50                 	db	80	;'P'
  1347  00FF50  42                 	db	66	;'B'
  1348  00FF51  52                 	db	82	;'R'
  1349  00FF52  3D                 	db	61	;'='
  1350  00FF53  31                 	db	49	;'1'
  1351  00FF54  2C                 	db	44
  1352  00FF55  31                 	db	49	;'1'
  1353  00FF56  0D                 	db	13
  1354  00FF57  00                 	db	0
  1355  00FF58                     STR_11:
  1356  00FF58  41                 	db	65	;'A'
  1357  00FF59  54                 	db	84	;'T'
  1358  00FF5A  2B                 	db	43
  1359  00FF5B  53                 	db	83	;'S'
  1360  00FF5C  41                 	db	65	;'A'
  1361  00FF5D  50                 	db	80	;'P'
  1362  00FF5E  42                 	db	66	;'B'
  1363  00FF5F  52                 	db	82	;'R'
  1364  00FF60  3D                 	db	61	;'='
  1365  00FF61  32                 	db	50	;'2'
  1366  00FF62  2C                 	db	44
  1367  00FF63  31                 	db	49	;'1'
  1368  00FF64  0D                 	db	13
  1369  00FF65  00                 	db	0
  1370  00FF66                     STR_13:
  1371  00FF66  41                 	db	65	;'A'
  1372  00FF67  54                 	db	84	;'T'
  1373  00FF68  2B                 	db	43
  1374  00FF69  48                 	db	72	;'H'
  1375  00FF6A  54                 	db	84	;'T'
  1376  00FF6B  54                 	db	84	;'T'
  1377  00FF6C  50                 	db	80	;'P'
  1378  00FF6D  53                 	db	83	;'S'
  1379  00FF6E  53                 	db	83	;'S'
  1380  00FF6F  4C                 	db	76	;'L'
  1381  00FF70  3D                 	db	61	;'='
  1382  00FF71  31                 	db	49	;'1'
  1383  00FF72  0D                 	db	13
  1384  00FF73  00                 	db	0
  1385  00FF74                     STR_2:
  1386  00FF74  41                 	db	65	;'A'
  1387  00FF75  54                 	db	84	;'T'
  1388  00FF76  2B                 	db	43
  1389  00FF77  49                 	db	73	;'I'
  1390  00FF78  50                 	db	80	;'P'
  1391  00FF79  52                 	db	82	;'R'
  1392  00FF7A  3D                 	db	61	;'='
  1393  00FF7B  39                 	db	57	;'9'
  1394  00FF7C  36                 	db	54	;'6'
  1395  00FF7D  30                 	db	48	;'0'
  1396  00FF7E  30                 	db	48	;'0'
  1397  00FF7F  0D                 	db	13
  1398  00FF80  0A                 	db	10
  1399  00FF81  00                 	db	0
  1400  00FF82                     STR_17:
  1401  00FF82  41                 	db	65	;'A'
  1402  00FF83  54                 	db	84	;'T'
  1403  00FF84  2B                 	db	43
  1404  00FF85  48                 	db	72	;'H'
  1405  00FF86  54                 	db	84	;'T'
  1406  00FF87  54                 	db	84	;'T'
  1407  00FF88  50                 	db	80	;'P'
  1408  00FF89  52                 	db	82	;'R'
  1409  00FF8A  45                 	db	69	;'E'
  1410  00FF8B  41                 	db	65	;'A'
  1411  00FF8C  44                 	db	68	;'D'
  1412  00FF8D  0D                 	db	13
  1413  00FF8E  00                 	db	0
  1414  00FF8F                     STR_18:
  1415  00FF8F  41                 	db	65	;'A'
  1416  00FF90  54                 	db	84	;'T'
  1417  00FF91  2B                 	db	43
  1418  00FF92  48                 	db	72	;'H'
  1419  00FF93  54                 	db	84	;'T'
  1420  00FF94  54                 	db	84	;'T'
  1421  00FF95  50                 	db	80	;'P'
  1422  00FF96  54                 	db	84	;'T'
  1423  00FF97  45                 	db	69	;'E'
  1424  00FF98  52                 	db	82	;'R'
  1425  00FF99  4D                 	db	77	;'M'
  1426  00FF9A  0D                 	db	13
  1427  00FF9B  00                 	db	0
  1428  00FF9C                     STR_12:
  1429  00FF9C  41                 	db	65	;'A'
  1430  00FF9D  54                 	db	84	;'T'
  1431  00FF9E  2B                 	db	43
  1432  00FF9F  48                 	db	72	;'H'
  1433  00FFA0  54                 	db	84	;'T'
  1434  00FFA1  54                 	db	84	;'T'
  1435  00FFA2  50                 	db	80	;'P'
  1436  00FFA3  49                 	db	73	;'I'
  1437  00FFA4  4E                 	db	78	;'N'
  1438  00FFA5  49                 	db	73	;'I'
  1439  00FFA6  54                 	db	84	;'T'
  1440  00FFA7  0D                 	db	13
  1441  00FFA8  00                 	db	0
  1442  00FFA9                     STR_30:
  1443  00FFA9  41                 	db	65	;'A'
  1444  00FFAA  54                 	db	84	;'T'
  1445  00FFAB  2B                 	db	43
  1446  00FFAC  43                 	db	67	;'C'
  1447  00FFAD  4C                 	db	76	;'L'
  1448  00FFAE  49                 	db	73	;'I'
  1449  00FFAF  50                 	db	80	;'P'
  1450  00FFB0  3D                 	db	61	;'='
  1451  00FFB1  31                 	db	49	;'1'
  1452  00FFB2  0D                 	db	13
  1453  00FFB3  0A                 	db	10
  1454  00FFB4  00                 	db	0
  1455  00FFB5                     STR_28:
  1456  00FFB5  4D                 	db	77	;'M'
  1457  00FFB6  61                 	db	97	;'a'
  1458  00FFB7  72                 	db	114	;'r'
  1459  00FFB8  20                 	db	32
  1460  00FFB9  32                 	db	50	;'2'
  1461  00FFBA  30                 	db	48	;'0'
  1462  00FFBB  20                 	db	32
  1463  00FFBC  32                 	db	50	;'2'
  1464  00FFBD  30                 	db	48	;'0'
  1465  00FFBE  32                 	db	50	;'2'
  1466  00FFBF  32                 	db	50	;'2'
  1467  00FFC0  00                 	db	0
  1468  00FFC1                     STR_4:
  1469  00FFC1  41                 	db	65	;'A'
  1470  00FFC2  54                 	db	84	;'T'
  1471  00FFC3  2B                 	db	43
  1472  00FFC4  43                 	db	67	;'C'
  1473  00FFC5  4D                 	db	77	;'M'
  1474  00FFC6  47                 	db	71	;'G'
  1475  00FFC7  52                 	db	82	;'R'
  1476  00FFC8  3D                 	db	61	;'='
  1477  00FFC9  31                 	db	49	;'1'
  1478  00FFCA  0D                 	db	13
  1479  00FFCB  0A                 	db	10
  1480  00FFCC  00                 	db	0
  1481  00FFCD                     STR_5:
  1482  00FFCD  41                 	db	65	;'A'
  1483  00FFCE  54                 	db	84	;'T'
  1484  00FFCF  2B                 	db	43
  1485  00FFD0  43                 	db	67	;'C'
  1486  00FFD1  4D                 	db	77	;'M'
  1487  00FFD2  47                 	db	71	;'G'
  1488  00FFD3  53                 	db	83	;'S'
  1489  00FFD4  3D                 	db	61	;'='
  1490  00FFD5  22                 	db	34
  1491  00FFD6  00                 	db	0
  1492  00FFD7                     STR_31:
  1493  00FFD7  28                 	db	40
  1494  00FFD8  6E                 	db	110	;'n'
  1495  00FFD9  75                 	db	117	;'u'
  1496  00FFDA  6C                 	db	108	;'l'
  1497  00FFDB  6C                 	db	108	;'l'
  1498  00FFDC  29                 	db	41
  1499  00FFDD  00                 	db	0
  1500  00FFDE                     STR_3:
  1501  00FFDE  41                 	db	65	;'A'
  1502  00FFDF  54                 	db	84	;'T'
  1503  00FFE0  45                 	db	69	;'E'
  1504  00FFE1  30                 	db	48	;'0'
  1505  00FFE2  0D                 	db	13
  1506  00FFE3  0A                 	db	10
  1507  00FFE4  00                 	db	0
  1508  00FFE5                     STR_1:
  1509  00FFE5  41                 	db	65	;'A'
  1510  00FFE6  54                 	db	84	;'T'
  1511  00FFE7  0D                 	db	13
  1512  00FFE8  0A                 	db	10
  1513  00FFE9  00                 	db	0
  1514  00FFEA  41                 	db	65	;'A'
  1515  00FFEB  54                 	db	84	;'T'
  1516  00FFEC  41                 	db	65	;'A'
  1517  00FFED  0D                 	db	13
  1518  00FFEE  00                 	db	0
  1519  00FFEF                     STR_6:
  1520  00FFEF  41                 	db	65	;'A'
  1521  00FFF0  54                 	db	84	;'T'
  1522  00FFF1  48                 	db	72	;'H'
  1523  00FFF2  0D                 	db	13
  1524  00FFF3  00                 	db	0
  1525  00FFF4                     STR_24:
  1526  00FFF4  2E                 	db	46
  1527  00FFF5  00                 	db	0
  1528  0000                     
  1529                           ; #config settings
  1530  00FFF6  00                 	db	0	; dummy byte at the end
  1531  0000                     
  1532                           	psect	cinit
  1533  00280C                     __pcinit:
  1534                           	opt stack 0
  1535  00280C                     start_initialization:
  1536                           	opt stack 0
  1537  00280C                     __initialization:
  1538                           	opt stack 0
  1539                           
  1540                           ; Initialize objects allocated to BANK5 (80 bytes)
  1541                           ; load TBLPTR registers with __pidataBANK5
  1542  00280C  0EF2               	movlw	low __pidataBANK5
  1543  00280E  6EF6               	movwf	tblptrl,c
  1544  002810  0E55               	movlw	high __pidataBANK5
  1545  002812  6EF7               	movwf	tblptrh,c
  1546  002814  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1547  002816  6EF8               	movwf	tblptru,c
  1548  002818  EE05  F0A4         	lfsr	0,__pdataBANK5
  1549  00281C  EE10 F050          	lfsr	1,80
  1550  002820                     copy_data0:
  1551  002820  0009               	tblrd		*+
  1552  002822  CFF5 FFEE          	movff	tablat,postinc0
  1553  002826  50E5               	movf	postdec1,w,c
  1554  002828  50E1               	movf	fsr1l,w,c
  1555  00282A  E1FA               	bnz	copy_data0
  1556                           
  1557                           ; Initialize objects allocated to BANK3 (65 bytes)
  1558                           ; load TBLPTR registers with __pidataBANK3
  1559  00282C  0E3A               	movlw	low __pidataBANK3
  1560  00282E  6EF6               	movwf	tblptrl,c
  1561  002830  0E5A               	movlw	high __pidataBANK3
  1562  002832  6EF7               	movwf	tblptrh,c
  1563  002834  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1564  002836  6EF8               	movwf	tblptru,c
  1565  002838  EE03  F0BD         	lfsr	0,__pdataBANK3
  1566  00283C  EE10 F041          	lfsr	1,65
  1567  002840                     copy_data1:
  1568  002840  0009               	tblrd		*+
  1569  002842  CFF5 FFEE          	movff	tablat,postinc0
  1570  002846  50E5               	movf	postdec1,w,c
  1571  002848  50E1               	movf	fsr1l,w,c
  1572  00284A  E1FA               	bnz	copy_data1
  1573                           
  1574                           ; Initialize objects allocated to BANK2 (13 bytes)
  1575                           ; load TBLPTR registers with __pidataBANK2
  1576  00284C  0E32               	movlw	low __pidataBANK2
  1577  00284E  6EF6               	movwf	tblptrl,c
  1578  002850  0E63               	movlw	high __pidataBANK2
  1579  002852  6EF7               	movwf	tblptrh,c
  1580  002854  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1581  002856  6EF8               	movwf	tblptru,c
  1582  002858  EE02  F0F3         	lfsr	0,__pdataBANK2
  1583  00285C  EE10 F00D          	lfsr	1,13
  1584  002860                     copy_data2:
  1585  002860  0009               	tblrd		*+
  1586  002862  CFF5 FFEE          	movff	tablat,postinc0
  1587  002866  50E5               	movf	postdec1,w,c
  1588  002868  50E1               	movf	fsr1l,w,c
  1589  00286A  E1FA               	bnz	copy_data2
  1590                           
  1591                           ; Initialize objects allocated to BANK1 (2 bytes)
  1592                           ; load TBLPTR registers with __pidataBANK1
  1593  00286C  0EAE               	movlw	low __pidataBANK1
  1594  00286E  6EF6               	movwf	tblptrl,c
  1595  002870  0E63               	movlw	high __pidataBANK1
  1596  002872  6EF7               	movwf	tblptrh,c
  1597  002874  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1598  002876  6EF8               	movwf	tblptru,c
  1599  002878  0009               	tblrd		*+	;fetch initializer
  1600  00287A  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1601  00287E  0009               	tblrd		*+	;fetch initializer
  1602  002880  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1603                           
  1604                           ; Initialize objects allocated to BANK4 (24 bytes)
  1605                           ; load TBLPTR registers with __pidataBANK4
  1606  002884  0ED2               	movlw	low __pidataBANK4
  1607  002886  6EF6               	movwf	tblptrl,c
  1608  002888  0E61               	movlw	high __pidataBANK4
  1609  00288A  6EF7               	movwf	tblptrh,c
  1610  00288C  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1611  00288E  6EF8               	movwf	tblptru,c
  1612  002890  EE04  F0D0         	lfsr	0,__pdataBANK4
  1613  002894  EE10 F018          	lfsr	1,24
  1614  002898                     copy_data3:
  1615  002898  0009               	tblrd		*+
  1616  00289A  CFF5 FFEE          	movff	tablat,postinc0
  1617  00289E  50E5               	movf	postdec1,w,c
  1618  0028A0  50E1               	movf	fsr1l,w,c
  1619  0028A2  E1FA               	bnz	copy_data3
  1620                           
  1621                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1622  0028A4  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1623  0028A8  EE13 F020          	lfsr	1,800
  1624  0028AC                     clear_0:
  1625  0028AC  6AEE               	clrf	postinc0,c
  1626  0028AE  50E5               	movf	postdec1,w,c
  1627  0028B0  50E1               	movf	fsr1l,w,c
  1628  0028B2  E1FC               	bnz	clear_0
  1629  0028B4  50E2               	movf	fsr1h,w,c
  1630  0028B6  E1FA               	bnz	clear_0
  1631                           
  1632                           ; Clear objects allocated to BANK9 (200 bytes)
  1633  0028B8  EE09  F000         	lfsr	0,__pbssBANK9
  1634  0028BC  0EC8               	movlw	200
  1635  0028BE                     clear_1:
  1636  0028BE  6AEE               	clrf	postinc0,c
  1637  0028C0  06E8               	decf	wreg,f,c
  1638  0028C2  E1FD               	bnz	clear_1
  1639                           
  1640                           ; Clear objects allocated to BANK8 (200 bytes)
  1641  0028C4  EE08  F000         	lfsr	0,__pbssBANK8
  1642  0028C8  0EC8               	movlw	200
  1643  0028CA                     clear_2:
  1644  0028CA  6AEE               	clrf	postinc0,c
  1645  0028CC  06E8               	decf	wreg,f,c
  1646  0028CE  E1FD               	bnz	clear_2
  1647                           
  1648                           ; Clear objects allocated to BANK7 (246 bytes)
  1649  0028D0  EE07  F000         	lfsr	0,__pbssBANK7
  1650  0028D4  0EF6               	movlw	246
  1651  0028D6                     clear_3:
  1652  0028D6  6AEE               	clrf	postinc0,c
  1653  0028D8  06E8               	decf	wreg,f,c
  1654  0028DA  E1FD               	bnz	clear_3
  1655                           
  1656                           ; Clear objects allocated to BANK6 (220 bytes)
  1657  0028DC  EE06  F000         	lfsr	0,__pbssBANK6
  1658  0028E0  0EDC               	movlw	220
  1659  0028E2                     clear_4:
  1660  0028E2  6AEE               	clrf	postinc0,c
  1661  0028E4  06E8               	decf	wreg,f,c
  1662  0028E6  E1FD               	bnz	clear_4
  1663                           
  1664                           ; Clear objects allocated to BANK5 (164 bytes)
  1665  0028E8  EE05  F000         	lfsr	0,__pbssBANK5
  1666  0028EC  0EA4               	movlw	164
  1667  0028EE                     clear_5:
  1668  0028EE  6AEE               	clrf	postinc0,c
  1669  0028F0  06E8               	decf	wreg,f,c
  1670  0028F2  E1FD               	bnz	clear_5
  1671                           
  1672                           ; Clear objects allocated to BANK3 (189 bytes)
  1673  0028F4  EE03  F000         	lfsr	0,__pbssBANK3
  1674  0028F8  0EBD               	movlw	189
  1675  0028FA                     clear_6:
  1676  0028FA  6AEE               	clrf	postinc0,c
  1677  0028FC  06E8               	decf	wreg,f,c
  1678  0028FE  E1FD               	bnz	clear_6
  1679                           
  1680                           ; Clear objects allocated to BANK2 (43 bytes)
  1681  002900  EE02  F0C8         	lfsr	0,__pbssBANK2
  1682  002904  0E2B               	movlw	43
  1683  002906                     clear_7:
  1684  002906  6AEE               	clrf	postinc0,c
  1685  002908  06E8               	decf	wreg,f,c
  1686  00290A  E1FD               	bnz	clear_7
  1687                           
  1688                           ; Clear objects allocated to BANK1 (53 bytes)
  1689  00290C  EE01  F0C9         	lfsr	0,__pbssBANK1
  1690  002910  0E35               	movlw	53
  1691  002912                     clear_8:
  1692  002912  6AEE               	clrf	postinc0,c
  1693  002914  06E8               	decf	wreg,f,c
  1694  002916  E1FD               	bnz	clear_8
  1695                           
  1696                           ; Clear objects allocated to BANK4 (144 bytes)
  1697  002918  EE04  F040         	lfsr	0,__pbssBANK4
  1698  00291C  0E90               	movlw	144
  1699  00291E                     clear_9:
  1700  00291E  6AEE               	clrf	postinc0,c
  1701  002920  06E8               	decf	wreg,f,c
  1702  002922  E1FD               	bnz	clear_9
  1703                           
  1704                           ; Clear objects allocated to BANK0 (51 bytes)
  1705  002924  EE00  F0B0         	lfsr	0,__pbssBANK0
  1706  002928  0E33               	movlw	51
  1707  00292A                     clear_10:
  1708  00292A  6AEE               	clrf	postinc0,c
  1709  00292C  06E8               	decf	wreg,f,c
  1710  00292E  E1FD               	bnz	clear_10
  1711                           
  1712                           ; Clear objects allocated to COMRAM (31 bytes)
  1713  002930  EE00  F023         	lfsr	0,__pbssCOMRAM
  1714  002934  0E1F               	movlw	31
  1715  002936                     clear_11:
  1716  002936  6AEE               	clrf	postinc0,c
  1717  002938  06E8               	decf	wreg,f,c
  1718  00293A  E1FD               	bnz	clear_11
  1719  00293C                     end_of_initialization:
  1720                           	opt stack 0
  1721  00293C                     __end_of__initialization:
  1722                           	opt stack 0
  1723  00293C  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1724  00293E  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1725  002940  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1726  002942  6EF8               	movwf	tblptru,c
  1727  002944  0100               	movlb	0
  1728  002946  EFA0  F031         	goto	_main	;jump to C main() function
  1729                           tblptru	equ	0xFF8
  1730                           tblptrh	equ	0xFF7
  1731                           tblptrl	equ	0xFF6
  1732                           tablat	equ	0xFF5
  1733                           postinc0	equ	0xFEE
  1734                           wreg	equ	0xFE8
  1735                           postdec1	equ	0xFE5
  1736                           fsr1h	equ	0xFE2
  1737                           fsr1l	equ	0xFE1
  1738                           
  1739                           	psect	bssCOMRAM
  1740  000023                     __pbssCOMRAM:
  1741                           	opt stack 0
  1742  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1743                           	opt stack 0
  1744  000023                     	ds	2
  1745  000025                     _USBDeferOUTDataStagePackets:
  1746                           	opt stack 0
  1747  000025                     	ds	1
  1748  000026                     _USBDeferINDataStagePackets:
  1749                           	opt stack 0
  1750  000026                     	ds	1
  1751  000027                     _USBStatusStageEnabledFlag2:
  1752                           	opt stack 0
  1753  000027                     	ds	1
  1754  000028                     ConfigureModem@MdmConfigState:
  1755                           	opt stack 0
  1756  000028                     	ds	1
  1757  000029                     TurnOnModem@TurnOnMdmState:
  1758                           	opt stack 0
  1759  000029                     	ds	1
  1760  00002A                     CheckModem@CheckMdmSts:
  1761                           	opt stack 0
  1762  00002A                     	ds	1
  1763  00002B                     _ComChecCompleted:
  1764                           	opt stack 0
  1765  00002B                     	ds	1
  1766  00002C                     Uart_Uart1RxIsr@UartRxData:
  1767                           	opt stack 0
  1768  00002C                     	ds	1
  1769  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1770                           	opt stack 0
  1771  00002D                     	ds	1
  1772  00002E                     MdmCntSm@MdmCntState:
  1773                           	opt stack 0
  1774  00002E                     	ds	1
  1775  00002F                     RiSm@MdmDrvState:
  1776                           	opt stack 0
  1777  00002F                     	ds	1
  1778  000030                     _Mmd_RingIndicator:
  1779                           	opt stack 0
  1780  000030                     	ds	1
  1781  000031                     I2c_ReadData@ReadStatus:
  1782                           	opt stack 0
  1783  000031                     	ds	1
  1784  000032                     I2c_ReadData@TentativeCounter:
  1785                           	opt stack 0
  1786  000032                     	ds	1
  1787  000033                     I2c_ReadData@DataCounter:
  1788                           	opt stack 0
  1789  000033                     	ds	1
  1790  000034                     I2c_ReadData@I2cReadState:
  1791                           	opt stack 0
  1792  000034                     	ds	1
  1793  000035                     I2c_WriteData@WriteStatus:
  1794                           	opt stack 0
  1795  000035                     	ds	1
  1796  000036                     I2c_WriteData@TentativeCounter:
  1797                           	opt stack 0
  1798  000036                     	ds	1
  1799  000037                     I2c_WriteData@I2cNextState:
  1800                           	opt stack 0
  1801  000037                     	ds	1
  1802  000038                     I2c_WriteData@I2cWriteState:
  1803                           	opt stack 0
  1804  000038                     	ds	1
  1805  000039                     _MdmStsReady:
  1806                           	opt stack 0
  1807  000039                     	ds	1
  1808  00003A                     _NewStringMdmTerminal:
  1809                           	opt stack 0
  1810  00003A                     	ds	1
  1811  00003B                     _NewMdmEvtParserRequest:
  1812                           	opt stack 0
  1813  00003B                     	ds	1
  1814  00003C                     _NewStringReceived:
  1815                           	opt stack 0
  1816  00003C                     	ds	1
  1817  00003D                     _MdmResetRequest:
  1818                           	opt stack 0
  1819  00003D                     	ds	1
  1820  00003E                     _CallClosedEvent:
  1821                           	opt stack 0
  1822  00003E                     	ds	1
  1823  00003F                     _IncomingCallEvent:
  1824                           	opt stack 0
  1825  00003F                     	ds	1
  1826  000040                     _NewSmsEvent:
  1827                           	opt stack 0
  1828  000040                     	ds	1
  1829  000041                     _ActivateRiDetection:
  1830                           	opt stack 0
  1831  000041                     	ds	1
  1832                           tblptru	equ	0xFF8
  1833                           tblptrh	equ	0xFF7
  1834                           tblptrl	equ	0xFF6
  1835                           tablat	equ	0xFF5
  1836                           postinc0	equ	0xFEE
  1837                           wreg	equ	0xFE8
  1838                           postdec1	equ	0xFE5
  1839                           fsr1h	equ	0xFE2
  1840                           fsr1l	equ	0xFE1
  1841                           
  1842                           	psect	bssBANK0
  1843  0000B0                     __pbssBANK0:
  1844                           	opt stack 0
  1845  0000B0                     _inPipes:
  1846                           	opt stack 0
  1847  0000B0                     	ds	6
  1848  0000B6                     _pBDTEntryIn:
  1849                           	opt stack 0
  1850  0000B6                     	ds	6
  1851  0000BC                     _CDCDataOutHandle:
  1852                           	opt stack 0
  1853  0000BC                     	ds	2
  1854  0000BE                     _pBDTEntryEP0OutNext:
  1855                           	opt stack 0
  1856  0000BE                     	ds	2
  1857  0000C0                     _pBDTEntryEP0OutCurrent:
  1858                           	opt stack 0
  1859  0000C0                     	ds	2
  1860  0000C2                     _RxLen:
  1861                           	opt stack 0
  1862  0000C2                     	ds	2
  1863  0000C4                     MyApp_Task@memoryFlag:
  1864                           	opt stack 0
  1865  0000C4                     	ds	1
  1866  0000C5                     _cdc_tx_len:
  1867                           	opt stack 0
  1868  0000C5                     	ds	1
  1869  0000C6                     _cdc_trf_state:
  1870                           	opt stack 0
  1871  0000C6                     	ds	1
  1872  0000C7                     _cdc_rx_len:
  1873                           	opt stack 0
  1874  0000C7                     	ds	1
  1875  0000C8                     _USBStatusStageEnabledFlag1:
  1876                           	opt stack 0
  1877  0000C8                     	ds	1
  1878  0000C9                     _USBDeferStatusStagePacket:
  1879                           	opt stack 0
  1880  0000C9                     	ds	1
  1881  0000CA                     _USBStatusStageTimeoutCounter:
  1882                           	opt stack 0
  1883  0000CA                     	ds	1
  1884  0000CB                     _endpoint_number:
  1885                           	opt stack 0
  1886  0000CB                     	ds	1
  1887  0000CC                     _controlTransferState:
  1888                           	opt stack 0
  1889  0000CC                     	ds	1
  1890  0000CD                     _shortPacketStatus:
  1891                           	opt stack 0
  1892  0000CD                     	ds	1
  1893  0000CE                     _USBDeviceState:
  1894                           	opt stack 0
  1895  0000CE                     	ds	1
  1896  0000CF                     _I2cComSts:
  1897                           	opt stack 0
  1898  0000CF                     	ds	1
  1899  0000D0                     HttpGetMethod@GetMethodNextState:
  1900                           	opt stack 0
  1901  0000D0                     	ds	1
  1902  0000D1                     InitGprsNetwork@GprsNetInitNextState:
  1903                           	opt stack 0
  1904  0000D1                     	ds	1
  1905  0000D2                     _MdmStatus:
  1906                           	opt stack 0
  1907  0000D2                     	ds	1
  1908  0000D3                     _PhoneNumbLen:
  1909                           	opt stack 0
  1910  0000D3                     	ds	1
  1911  0000D4                     _SmsLen:
  1912                           	opt stack 0
  1913  0000D4                     	ds	1
  1914  0000D5                     _SystemState:
  1915                           	opt stack 0
  1916  0000D5                     	ds	1
  1917  0000D6                     _USTATcopy:
  1918                           	opt stack 0
  1919  0000D6                     	ds	1
  1920  0000D7                     _USBActiveConfiguration:
  1921                           	opt stack 0
  1922  0000D7                     	ds	1
  1923  0000D8                     _I2cReadDataEvt:
  1924                           	opt stack 0
  1925  0000D8                     	ds	1
  1926  0000D9                     _I2cWriteDataEvt:
  1927                           	opt stack 0
  1928  0000D9                     	ds	1
  1929  0000DA                     _GetMethod:
  1930                           	opt stack 0
  1931  0000DA                     	ds	1
  1932  0000DB                     _InitNetwork:
  1933                           	opt stack 0
  1934  0000DB                     	ds	1
  1935  0000DC                     _SmsTxtReady:
  1936                           	opt stack 0
  1937  0000DC                     	ds	1
  1938  0000DD                     _GetSmsText:
  1939                           	opt stack 0
  1940  0000DD                     	ds	1
  1941  0000DE                     _SmsEvent:
  1942                           	opt stack 0
  1943  0000DE                     	ds	1
  1944  0000DF                     _ClipEvent:
  1945                           	opt stack 0
  1946  0000DF                     	ds	1
  1947  0000E0                     _RingEvent:
  1948                           	opt stack 0
  1949  0000E0                     	ds	1
  1950  0000E1                     _SendSmsEvent:
  1951                           	opt stack 0
  1952  0000E1                     	ds	1
  1953  0000E2                     _MdmOnOffPulseRequest:
  1954                           	opt stack 0
  1955  0000E2                     	ds	1
  1956                           tblptru	equ	0xFF8
  1957                           tblptrh	equ	0xFF7
  1958                           tblptrl	equ	0xFF6
  1959                           tablat	equ	0xFF5
  1960                           postinc0	equ	0xFEE
  1961                           wreg	equ	0xFE8
  1962                           postdec1	equ	0xFE5
  1963                           fsr1h	equ	0xFE2
  1964                           fsr1l	equ	0xFE1
  1965                           
  1966                           	psect	bssBANK1
  1967  0001C9                     __pbssBANK1:
  1968                           	opt stack 0
  1969  0001C9                     _outPipes:
  1970                           	opt stack 0
  1971  0001C9                     	ds	8
  1972  0001D1                     _CDCDataInHandle:
  1973                           	opt stack 0
  1974  0001D1                     	ds	2
  1975  0001D3                     initFsm@currentState:
  1976                           	opt stack 0
  1977  0001D3                     	ds	1
  1978  0001D4                     initEeprom@currentState:
  1979                           	opt stack 0
  1980  0001D4                     	ds	1
  1981  0001D5                     initGprsModem@currentState:
  1982                           	opt stack 0
  1983  0001D5                     	ds	1
  1984  0001D6                     MyApp_Task@blinkSeconds:
  1985                           	opt stack 0
  1986  0001D6                     	ds	1
  1987  0001D7                     	ds	1
  1988  0001D8                     	ds	1
  1989  0001D9                     	ds	1
  1990  0001DA                     	ds	1
  1991  0001DB                     	ds	1
  1992  0001DC                     	ds	1
  1993  0001DD                     	ds	1
  1994  0001DE                     GsmGprsTerminal@SMS:
  1995                           	opt stack 0
  1996  0001DE                     	ds	1
  1997  0001DF                     	ds	1
  1998  0001E0                     _control_signal_bitmap:
  1999                           	opt stack 0
  2000  0001E0                     	ds	1
  2001  0001E1                     _cdc_mem_type:
  2002                           	opt stack 0
  2003  0001E1                     	ds	1
  2004  0001E2                     _USBTicksSinceSuspendEnd:
  2005                           	opt stack 0
  2006  0001E2                     	ds	1
  2007  0001E3                     _BothEP0OutUOWNsSet:
  2008                           	opt stack 0
  2009  0001E3                     	ds	1
  2010  0001E4                     _USBBusIsSuspended:
  2011                           	opt stack 0
  2012  0001E4                     	ds	1
  2013  0001E5                     _RemoteWakeup:
  2014                           	opt stack 0
  2015  0001E5                     	ds	1
  2016  0001E6                     I2cSlv_QueryI2cData@Ret:
  2017                           	opt stack 0
  2018  0001E6                     	ds	1
  2019  0001E7                     I2cSlv_QueryI2cData@I2cOpState:
  2020                           	opt stack 0
  2021  0001E7                     	ds	1
  2022  0001E8                     I2cSendMsgSm@I2cComState:
  2023                           	opt stack 0
  2024  0001E8                     	ds	1
  2025  0001E9                     _I2cBusStatus:
  2026                           	opt stack 0
  2027  0001E9                     	ds	1
  2028  0001EA                     HttpGetMethod@GetMOutSts:
  2029                           	opt stack 0
  2030  0001EA                     	ds	1
  2031  0001EB                     HttpGetMethod@GetMethodState:
  2032                           	opt stack 0
  2033  0001EB                     	ds	1
  2034  0001EC                     InitGprsNetwork@GprsNetInitState:
  2035                           	opt stack 0
  2036  0001EC                     	ds	1
  2037  0001ED                     _PostMethod:
  2038                           	opt stack 0
  2039  0001ED                     	ds	1
  2040  0001EE                     _HttpGetMethodSts:
  2041                           	opt stack 0
  2042  0001EE                     	ds	1
  2043  0001EF                     _GprsNetworkSts:
  2044                           	opt stack 0
  2045  0001EF                     	ds	1
  2046  0001F0                     _ApnLenLocal:
  2047                           	opt stack 0
  2048  0001F0                     	ds	1
  2049  0001F1                     SendSmsSm@SendSms_NextState:
  2050                           	opt stack 0
  2051  0001F1                     	ds	1
  2052  0001F2                     SendSmsSm@SendSms_State:
  2053                           	opt stack 0
  2054  0001F2                     	ds	1
  2055  0001F3                     GetSmsSm@GetSmsState:
  2056                           	opt stack 0
  2057  0001F3                     	ds	1
  2058  0001F4                     ConfigureModem@NextState:
  2059                           	opt stack 0
  2060  0001F4                     	ds	1
  2061  0001F5                     _ReadAddress:
  2062                           	opt stack 0
  2063  0001F5                     	ds	1
  2064  0001F6                     _AlarmEvent:
  2065                           	opt stack 0
  2066  0001F6                     	ds	1
  2067  0001F7                     _Led3OutSts:
  2068                           	opt stack 0
  2069  0001F7                     	ds	1
  2070  0001F8                     _Led3Sts:
  2071                           	opt stack 0
  2072  0001F8                     	ds	1
  2073  0001F9                     _Led2OutSts:
  2074                           	opt stack 0
  2075  0001F9                     	ds	1
  2076  0001FA                     _Led2Sts:
  2077                           	opt stack 0
  2078  0001FA                     	ds	1
  2079  0001FB                     _Led1OutSts:
  2080                           	opt stack 0
  2081  0001FB                     	ds	1
  2082  0001FC                     _Led1Sts:
  2083                           	opt stack 0
  2084  0001FC                     	ds	1
  2085  0001FD                     I2cDummyTx@DummyBuffer:
  2086                           	opt stack 0
  2087  0001FD                     	ds	1
  2088                           tblptru	equ	0xFF8
  2089                           tblptrh	equ	0xFF7
  2090                           tblptrl	equ	0xFF6
  2091                           tablat	equ	0xFF5
  2092                           postinc0	equ	0xFEE
  2093                           wreg	equ	0xFE8
  2094                           postdec1	equ	0xFE5
  2095                           fsr1h	equ	0xFE2
  2096                           fsr1l	equ	0xFE1
  2097                           
  2098                           	psect	dataBANK1
  2099  0001FE                     __pdataBANK1:
  2100                           	opt stack 0
  2101  0001FE                     _isMemoryEmpty:
  2102                           	opt stack 0
  2103  0001FE                     	ds	1
  2104  0001FF                     InitGprsNetwork@GprsInitSts:
  2105                           	opt stack 0
  2106  0001FF                     	ds	1
  2107                           tblptru	equ	0xFF8
  2108                           tblptrh	equ	0xFF7
  2109                           tblptrl	equ	0xFF6
  2110                           tablat	equ	0xFF5
  2111                           postinc0	equ	0xFEE
  2112                           wreg	equ	0xFE8
  2113                           postdec1	equ	0xFE5
  2114                           fsr1h	equ	0xFE2
  2115                           fsr1l	equ	0xFE1
  2116                           
  2117                           	psect	bssBANK2
  2118  0002C8                     __pbssBANK2:
  2119                           	opt stack 0
  2120  0002C8                     _pCDCDst:
  2121                           	opt stack 0
  2122  0002C8                     	ds	3
  2123  0002CB                     _pCDCSrc:
  2124                           	opt stack 0
  2125  0002CB                     	ds	3
  2126  0002CE                     _ep_data_out:
  2127                           	opt stack 0
  2128  0002CE                     	ds	3
  2129  0002D1                     _ep_data_in:
  2130                           	opt stack 0
  2131  0002D1                     	ds	3
  2132  0002D4                     _pDst:
  2133                           	opt stack 0
  2134  0002D4                     	ds	2
  2135  0002D6                     ConfigureModem@DelayCounter:
  2136                           	opt stack 0
  2137  0002D6                     	ds	2
  2138  0002D8                     ConfigureModem@DelayValueMs:
  2139                           	opt stack 0
  2140  0002D8                     	ds	2
  2141  0002DA                     TurnOnModem@Counter:
  2142                           	opt stack 0
  2143  0002DA                     	ds	2
  2144  0002DC                     UpdateSchFlag@InterruptCounter:
  2145                           	opt stack 0
  2146  0002DC                     	ds	2
  2147  0002DE                     MdmCntSm@Counter:
  2148                           	opt stack 0
  2149  0002DE                     	ds	2
  2150  0002E0                     RiSm@Counter:
  2151                           	opt stack 0
  2152  0002E0                     	ds	2
  2153  0002E2                     _ExtInt1IsrCallback:
  2154                           	opt stack 0
  2155  0002E2                     	ds	2
  2156  0002E4                     _ExtInt0IsrCallback:
  2157                           	opt stack 0
  2158  0002E4                     	ds	2
  2159  0002E6                     _RtccIsrCallback:
  2160                           	opt stack 0
  2161  0002E6                     	ds	2
  2162  0002E8                     _Tmr4IsrCallback:
  2163                           	opt stack 0
  2164  0002E8                     	ds	2
  2165  0002EA                     _Tmr2IsrCallback:
  2166                           	opt stack 0
  2167  0002EA                     	ds	2
  2168  0002EC                     Term_MainSm@TermMainSmState:
  2169                           	opt stack 0
  2170  0002EC                     	ds	1
  2171  0002ED                     Terminal@FormatOption:
  2172                           	opt stack 0
  2173  0002ED                     	ds	1
  2174  0002EE                     Terminal@SlaveAddr:
  2175                           	opt stack 0
  2176  0002EE                     	ds	1
  2177  0002EF                     Terminal@PackageLen:
  2178                           	opt stack 0
  2179  0002EF                     	ds	1
  2180  0002F0                     Terminal@TermState:
  2181                           	opt stack 0
  2182  0002F0                     	ds	1
  2183  0002F1                     _USBAlternateInterface:
  2184                           	opt stack 0
  2185  0002F1                     	ds	2
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           postinc0	equ	0xFEE
  2191                           wreg	equ	0xFE8
  2192                           postdec1	equ	0xFE5
  2193                           fsr1h	equ	0xFE2
  2194                           fsr1l	equ	0xFE1
  2195                           
  2196                           	psect	dataBANK2
  2197  0002F3                     __pdataBANK2:
  2198                           	opt stack 0
  2199  0002F3                     Terminal@EchoOption:
  2200                           	opt stack 0
  2201  0002F3                     	ds	1
  2202  0002F4                     _MainSystemTimebaseFlag:
  2203                           	opt stack 0
  2204  0002F4                     	ds	1
  2205  0002F5                     _ConnTimeout:
  2206                           	opt stack 0
  2207  0002F5                     	ds	11
  2208                           tblptru	equ	0xFF8
  2209                           tblptrh	equ	0xFF7
  2210                           tblptrl	equ	0xFF6
  2211                           tablat	equ	0xFF5
  2212                           postinc0	equ	0xFEE
  2213                           wreg	equ	0xFE8
  2214                           postdec1	equ	0xFE5
  2215                           fsr1h	equ	0xFE2
  2216                           fsr1l	equ	0xFE1
  2217                           
  2218                           	psect	bssBANK3
  2219  000300                     __pbssBANK3:
  2220                           	opt stack 0
  2221  000300                     _Rtcm_SystemDate:
  2222                           	opt stack 0
  2223  000300                     	ds	8
  2224  000308                     _Rtcm_RtccAlarm:
  2225                           	opt stack 0
  2226  000308                     	ds	6
  2227  00030E                     _pBDTEntryOut:
  2228                           	opt stack 0
  2229  00030E                     	ds	6
  2230  000314                     _BaudRateGen:
  2231                           	opt stack 0
  2232  000314                     	ds	4
  2233  000318                     _USB1msTickCount:
  2234                           	opt stack 0
  2235  000318                     	ds	4
  2236  00031C                     _OsTmr_OsTickCounter:
  2237                           	opt stack 0
  2238  00031C                     	ds	4
  2239  000320                     	ds	2
  2240  000322                     _UsbMasterPhoneNumberLen:
  2241                           	opt stack 0
  2242  000322                     	ds	2
  2243  000324                     _ApnLocal:
  2244                           	opt stack 0
  2245  000324                     	ds	2
  2246  000326                     _UartConfig:
  2247                           	opt stack 0
  2248  000326                     	ds	21
  2249  00033B                     I2cSlv_QueryI2cData@TimeoutTimer:
  2250                           	opt stack 0
  2251  00033B                     	ds	11
  2252  000346                     I2cSlv_QueryI2cData@QueryTimer:
  2253                           	opt stack 0
  2254  000346                     	ds	11
  2255  000351                     _I2cConfig:
  2256                           	opt stack 0
  2257  000351                     	ds	10
  2258  00035B                     _Led3Blink:
  2259                           	opt stack 0
  2260  00035B                     	ds	9
  2261  000364                     _Led2Blink:
  2262                           	opt stack 0
  2263  000364                     	ds	9
  2264  00036D                     _Led1Blink:
  2265                           	opt stack 0
  2266  00036D                     	ds	9
  2267  000376                     _dummy_encapsulated_cmd_response:
  2268                           	opt stack 0
  2269  000376                     	ds	8
  2270  00037E                     _line_coding:
  2271                           	opt stack 0
  2272  00037E                     	ds	7
  2273  000385                     _Led3Pulse:
  2274                           	opt stack 0
  2275  000385                     	ds	6
  2276  00038B                     _Led2Pulse:
  2277                           	opt stack 0
  2278  00038B                     	ds	6
  2279  000391                     _Led1Pulse:
  2280                           	opt stack 0
  2281  000391                     	ds	6
  2282  000397                     _I2cRxPacket:
  2283                           	opt stack 0
  2284  000397                     	ds	6
  2285  00039D                     _I2cTxPacket:
  2286                           	opt stack 0
  2287  00039D                     	ds	5
  2288  0003A2                     _HttpGetDataLocal:
  2289                           	opt stack 0
  2290  0003A2                     	ds	5
  2291  0003A7                     _memoryPreamble:
  2292                           	opt stack 0
  2293  0003A7                     	ds	4
  2294  0003AB                     Terminal@Addr:
  2295                           	opt stack 0
  2296  0003AB                     	ds	4
  2297  0003AF                     Terminal@Len:
  2298                           	opt stack 0
  2299  0003AF                     	ds	4
  2300  0003B3                     _AlCfg:
  2301                           	opt stack 0
  2302  0003B3                     	ds	4
  2303  0003B7                     _RtcConfig:
  2304                           	opt stack 0
  2305  0003B7                     	ds	4
  2306  0003BB                     initGprsModem@modemCounter:
  2307                           	opt stack 0
  2308  0003BB                     	ds	2
  2309                           tblptru	equ	0xFF8
  2310                           tblptrh	equ	0xFF7
  2311                           tblptrl	equ	0xFF6
  2312                           tablat	equ	0xFF5
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           fsr1h	equ	0xFE2
  2317                           fsr1l	equ	0xFE1
  2318                           
  2319                           	psect	dataBANK3
  2320  0003BD                     __pdataBANK3:
  2321                           	opt stack 0
  2322  0003BD                     ModemEvtParser@F9111:
  2323                           	opt stack 0
  2324  0003BD                     	ds	5
  2325  0003C2                     ModemEvtParser@F9109:
  2326                           	opt stack 0
  2327  0003C2                     	ds	5
  2328  0003C7                     ModemEvtParser@F9107:
  2329                           	opt stack 0
  2330  0003C7                     	ds	4
  2331  0003CB                     MyApp_Task@F9003:
  2332                           	opt stack 0
  2333  0003CB                     	ds	3
  2334  0003CE                     triggerRelay@F8993:
  2335                           	opt stack 0
  2336  0003CE                     	ds	2
  2337  0003D0                     Term_MainSm@TermDelay:
  2338                           	opt stack 0
  2339  0003D0                     	ds	11
  2340  0003DB                     _ConnWait:
  2341                           	opt stack 0
  2342  0003DB                     	ds	11
  2343  0003E6                     SendSmsSm@SwTimer:
  2344                           	opt stack 0
  2345  0003E6                     	ds	11
  2346  0003F1                     CheckModem@Timeout:
  2347                           	opt stack 0
  2348  0003F1                     	ds	11
  2349  0003FC                     MyApp_Task@blinkTicks:
  2350                           	opt stack 0
  2351  0003FC                     	ds	2
  2352                           tblptru	equ	0xFF8
  2353                           tblptrh	equ	0xFF7
  2354                           tblptrl	equ	0xFF6
  2355                           tablat	equ	0xFF5
  2356                           postinc0	equ	0xFEE
  2357                           wreg	equ	0xFE8
  2358                           postdec1	equ	0xFE5
  2359                           fsr1h	equ	0xFE2
  2360                           fsr1l	equ	0xFE1
  2361                           
  2362                           	psect	bssBANK4
  2363  000440                     __pbssBANK4:
  2364                           	opt stack 0
  2365  000440                     _UsbMasterPhoneNumber:
  2366                           	opt stack 0
  2367  000440                     	ds	15
  2368  00044F                     	ds	10
  2369  000459                     _cdc_notice:
  2370                           	opt stack 0
  2371  000459                     	ds	10
  2372  000463                     Term_MainSm@Data:
  2373                           	opt stack 0
  2374  000463                     	ds	50
  2375  000495                     _PhoneNumber:
  2376                           	opt stack 0
  2377  000495                     	ds	20
  2378  0004A9                     _EepromBuffer:
  2379                           	opt stack 0
  2380  0004A9                     	ds	15
  2381  0004B8                     _callerNumber:
  2382                           	opt stack 0
  2383  0004B8                     	ds	13
  2384  0004C5                     Terminal@SwTimer:
  2385                           	opt stack 0
  2386  0004C5                     	ds	11
  2387                           tblptru	equ	0xFF8
  2388                           tblptrh	equ	0xFF7
  2389                           tblptrl	equ	0xFF6
  2390                           tablat	equ	0xFF5
  2391                           postinc0	equ	0xFEE
  2392                           wreg	equ	0xFE8
  2393                           postdec1	equ	0xFE5
  2394                           fsr1h	equ	0xFE2
  2395                           fsr1l	equ	0xFE1
  2396                           
  2397                           	psect	dataBANK4
  2398  0004D0                     __pdataBANK4:
  2399                           	opt stack 0
  2400  0004D0                     ModemEvtParser@F9113:
  2401                           	opt stack 0
  2402  0004D0                     	ds	10
  2403  0004DA                     MyApp_Task@phone:
  2404                           	opt stack 0
  2405  0004DA                     	ds	14
  2406                           tblptru	equ	0xFF8
  2407                           tblptrh	equ	0xFF7
  2408                           tblptrl	equ	0xFF6
  2409                           tablat	equ	0xFF5
  2410                           postinc0	equ	0xFEE
  2411                           wreg	equ	0xFE8
  2412                           postdec1	equ	0xFE5
  2413                           fsr1h	equ	0xFE2
  2414                           fsr1l	equ	0xFE1
  2415                           
  2416                           	psect	bssBANK5
  2417  000500                     __pbssBANK5:
  2418                           	opt stack 0
  2419  000500                     _cdc_data_rx:
  2420                           	opt stack 0
  2421  000500                     	ds	64
  2422  000540                     Terminal@TermRxBuffer:
  2423                           	opt stack 0
  2424  000540                     	ds	50
  2425  000572                     _MessageText:
  2426                           	opt stack 0
  2427  000572                     	ds	50
  2428                           tblptru	equ	0xFF8
  2429                           tblptrh	equ	0xFF7
  2430                           tblptrl	equ	0xFF6
  2431                           tablat	equ	0xFF5
  2432                           postinc0	equ	0xFEE
  2433                           wreg	equ	0xFE8
  2434                           postdec1	equ	0xFE5
  2435                           fsr1h	equ	0xFE2
  2436                           fsr1l	equ	0xFE1
  2437                           
  2438                           	psect	dataBANK5
  2439  0005A4                     __pdataBANK5:
  2440                           	opt stack 0
  2441  0005A4                     _TaskTable:
  2442                           	opt stack 0
  2443  0005A4                     	ds	80
  2444                           tblptru	equ	0xFF8
  2445                           tblptrh	equ	0xFF7
  2446                           tblptrl	equ	0xFF6
  2447                           tablat	equ	0xFF5
  2448                           postinc0	equ	0xFEE
  2449                           wreg	equ	0xFE8
  2450                           postdec1	equ	0xFE5
  2451                           fsr1h	equ	0xFE2
  2452                           fsr1l	equ	0xFE1
  2453                           
  2454                           	psect	bssBANK6
  2455  000600                     __pbssBANK6:
  2456                           	opt stack 0
  2457  000600                     _OsAlarms:
  2458                           	opt stack 0
  2459  000600                     	ds	220
  2460                           tblptru	equ	0xFF8
  2461                           tblptrh	equ	0xFF7
  2462                           tblptrl	equ	0xFF6
  2463                           tablat	equ	0xFF5
  2464                           postinc0	equ	0xFEE
  2465                           wreg	equ	0xFE8
  2466                           postdec1	equ	0xFE5
  2467                           fsr1h	equ	0xFE2
  2468                           fsr1l	equ	0xFE1
  2469                           
  2470                           	psect	bssBANK7
  2471  000700                     __pbssBANK7:
  2472                           	opt stack 0
  2473  000700                     _Mdm_SmsRx:
  2474                           	opt stack 0
  2475  000700                     	ds	102
  2476  000766                     Terminal@Payload:
  2477                           	opt stack 0
  2478  000766                     	ds	80
  2479  0007B6                     _cdc_data_tx:
  2480                           	opt stack 0
  2481  0007B6                     	ds	64
  2482                           tblptru	equ	0xFF8
  2483                           tblptrh	equ	0xFF7
  2484                           tblptrl	equ	0xFF6
  2485                           tablat	equ	0xFF5
  2486                           postinc0	equ	0xFEE
  2487                           wreg	equ	0xFE8
  2488                           postdec1	equ	0xFE5
  2489                           fsr1h	equ	0xFE2
  2490                           fsr1l	equ	0xFE1
  2491                           
  2492                           	psect	bssBANK8
  2493  000800                     __pbssBANK8:
  2494                           	opt stack 0
  2495  000800                     GsmGprsTerminal@UsbBuffer:
  2496                           	opt stack 0
  2497  000800                     	ds	200
  2498                           tblptru	equ	0xFF8
  2499                           tblptrh	equ	0xFF7
  2500                           tblptrl	equ	0xFF6
  2501                           tablat	equ	0xFF5
  2502                           postinc0	equ	0xFEE
  2503                           wreg	equ	0xFE8
  2504                           postdec1	equ	0xFE5
  2505                           fsr1h	equ	0xFE2
  2506                           fsr1l	equ	0xFE1
  2507                           
  2508                           	psect	bssBANK9
  2509  000900                     __pbssBANK9:
  2510                           	opt stack 0
  2511  000900                     GsmGprsTerminal@UartBuffer:
  2512                           	opt stack 0
  2513  000900                     	ds	200
  2514                           tblptru	equ	0xFF8
  2515                           tblptrh	equ	0xFF7
  2516                           tblptrl	equ	0xFF6
  2517                           tablat	equ	0xFF5
  2518                           postinc0	equ	0xFEE
  2519                           wreg	equ	0xFE8
  2520                           postdec1	equ	0xFE5
  2521                           fsr1h	equ	0xFE2
  2522                           fsr1l	equ	0xFE1
  2523                           
  2524                           	psect	bssBIGRAMl
  2525  000AC8                     __pbssBIGRAMl:
  2526                           	opt stack 0
  2527  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2528                           	opt stack 0
  2529  000AC8                     	ds	400
  2530  000C58                     _RxBuffer:
  2531                           	opt stack 0
  2532  000C58                     	ds	400
  2533                           tblptru	equ	0xFF8
  2534                           tblptrh	equ	0xFF7
  2535                           tblptrl	equ	0xFF6
  2536                           tablat	equ	0xFF5
  2537                           postinc0	equ	0xFEE
  2538                           wreg	equ	0xFE8
  2539                           postdec1	equ	0xFE5
  2540                           fsr1h	equ	0xFE2
  2541                           fsr1l	equ	0xFE1
  2542                           
  2543                           	psect	cstackBANK10
  2544  000A00                     __pcstackBANK10:
  2545                           	opt stack 0
  2546  000A00                     Terminal@UsbRxBuffer:
  2547                           	opt stack 0
  2548                           
  2549                           ; 200 bytes @ 0x0
  2550  000A00                     	ds	200
  2551                           tblptru	equ	0xFF8
  2552                           tblptrh	equ	0xFF7
  2553                           tblptrl	equ	0xFF6
  2554                           tablat	equ	0xFF5
  2555                           postinc0	equ	0xFEE
  2556                           wreg	equ	0xFE8
  2557                           postdec1	equ	0xFE5
  2558                           fsr1h	equ	0xFE2
  2559                           fsr1l	equ	0xFE1
  2560                           
  2561                           	psect	cstackBANK4
  2562  0004E8                     __pcstackBANK4:
  2563                           	opt stack 0
  2564  0004E8                     ??_ScheduleTasks:
  2565  0004E8                     InitializeTasks@ActiveTaskIndex:
  2566                           	opt stack 0
  2567                           
  2568                           ; 1 bytes @ 0x0
  2569  0004E8                     	ds	4
  2570                           tblptru	equ	0xFF8
  2571                           tblptrh	equ	0xFF7
  2572                           tblptrl	equ	0xFF6
  2573                           tablat	equ	0xFF5
  2574                           postinc0	equ	0xFEE
  2575                           wreg	equ	0xFE8
  2576                           postdec1	equ	0xFE5
  2577                           fsr1h	equ	0xFE2
  2578                           fsr1l	equ	0xFE1
  2579                           
  2580                           	psect	cstackBANK3
  2581  0003FE                     __pcstackBANK3:
  2582                           	opt stack 0
  2583  0003FE                     ??_InitializeTasks:
  2584  0003FE                     ScheduleTasks@ActiveTaskIndex:
  2585                           	opt stack 0
  2586                           
  2587                           ; 1 bytes @ 0x0
  2588  0003FE                     	ds	2
  2589                           tblptru	equ	0xFF8
  2590                           tblptrh	equ	0xFF7
  2591                           tblptrl	equ	0xFF6
  2592                           tablat	equ	0xFF5
  2593                           postinc0	equ	0xFEE
  2594                           wreg	equ	0xFE8
  2595                           postdec1	equ	0xFE5
  2596                           fsr1h	equ	0xFE2
  2597                           fsr1l	equ	0xFE1
  2598                           
  2599                           	psect	cstackBANK2
  2600  000200                     __pcstackBANK2:
  2601                           	opt stack 0
  2602  000200                     Terminal@UsbTxBuffer:
  2603                           	opt stack 0
  2604                           
  2605                           ; 200 bytes @ 0x0
  2606  000200                     	ds	200
  2607                           tblptru	equ	0xFF8
  2608                           tblptrh	equ	0xFF7
  2609                           tblptrl	equ	0xFF6
  2610                           tablat	equ	0xFF5
  2611                           postinc0	equ	0xFEE
  2612                           wreg	equ	0xFE8
  2613                           postdec1	equ	0xFE5
  2614                           fsr1h	equ	0xFE2
  2615                           fsr1l	equ	0xFE1
  2616                           
  2617                           	psect	cstackBANK1
  2618  000100                     __pcstackBANK1:
  2619                           	opt stack 0
  2620  000100                     initEeprom@addressToRead:
  2621                           	opt stack 0
  2622  000100                     SendSmsSm@UartMessage:
  2623                           	opt stack 0
  2624  000100                     InitGprsNetwork@UartMessage:
  2625                           	opt stack 0
  2626  000100                     Terminal@TermTxBuffer:
  2627                           	opt stack 0
  2628  000100                     HttpGetMethod@UartMessage:
  2629                           	opt stack 0
  2630                           
  2631                           ; 200 bytes @ 0x0
  2632  000100                     	ds	1
  2633  000101                     initEeprom@memoryOpResult:
  2634                           	opt stack 0
  2635                           
  2636                           ; 1 bytes @ 0x1
  2637  000101                     	ds	1
  2638  000102                     initEeprom@isInitialized:
  2639                           	opt stack 0
  2640                           
  2641                           ; 1 bytes @ 0x2
  2642  000102                     	ds	1
  2643  000103                     initFsm@isInitialized:
  2644                           	opt stack 0
  2645                           
  2646                           ; 1 bytes @ 0x3
  2647  000103                     	ds	1
  2648  000104                     MyApp_Task@cmpString:
  2649                           	opt stack 0
  2650                           
  2651                           ; 3 bytes @ 0x4
  2652  000104                     	ds	3
  2653  000107                     MyApp_Task@memoryResult:
  2654                           	opt stack 0
  2655                           
  2656                           ; 1 bytes @ 0x7
  2657  000107                     	ds	43
  2658  000132                     InitGprsNetwork@Index:
  2659                           	opt stack 0
  2660  000132                     Term_MainSm@FwkMajorStr:
  2661                           	opt stack 0
  2662                           
  2663                           ; 4 bytes @ 0x32
  2664  000132                     	ds	4
  2665  000136                     Term_MainSm@FwkMinorStr:
  2666                           	opt stack 0
  2667                           
  2668                           ; 4 bytes @ 0x36
  2669  000136                     	ds	4
  2670  00013A                     Term_MainSm@FwkBuildStr:
  2671                           	opt stack 0
  2672                           
  2673                           ; 4 bytes @ 0x3A
  2674  00013A                     	ds	142
  2675  0001C8                     HttpGetMethod@Index:
  2676                           	opt stack 0
  2677                           
  2678                           ; 1 bytes @ 0xC8
  2679  0001C8                     	ds	1
  2680                           tblptru	equ	0xFF8
  2681                           tblptrh	equ	0xFF7
  2682                           tblptrl	equ	0xFF6
  2683                           tablat	equ	0xFF5
  2684                           postinc0	equ	0xFEE
  2685                           wreg	equ	0xFE8
  2686                           postdec1	equ	0xFE5
  2687                           fsr1h	equ	0xFE2
  2688                           fsr1l	equ	0xFE1
  2689                           
  2690                           	psect	cstackBANK0
  2691  000060                     __pcstackBANK0:
  2692                           	opt stack 0
  2693  000060                     
  2694                           ; 1 bytes @ 0x0
  2695  000060                     	ds	8
  2696  000068                     ??_LowPriorityIsr:
  2697                           
  2698                           ; 1 bytes @ 0x8
  2699  000068                     	ds	21
  2700  00007D                     ??_isdigit:
  2701  00007D                     ??_isspace:
  2702  00007D                     ??_isupper:
  2703  00007D                     ??_Rtcc_GetRtccValue:
  2704  00007D                     ??_UartTxBufferStatus:
  2705  00007D                     ??_USBStdGetDscHandler:
  2706  00007D                     ??_USBStdGetStatusHandler:
  2707  00007D                     ?_USBTransferOnePacket:
  2708                           	opt stack 0
  2709  00007D                     ?_strlen:
  2710                           	opt stack 0
  2711  00007D                     ?_sprintf:
  2712                           	opt stack 0
  2713  00007D                     ?___wmul:
  2714                           	opt stack 0
  2715  00007D                     ?___awdiv:
  2716                           	opt stack 0
  2717  00007D                     ?___awmod:
  2718                           	opt stack 0
  2719  00007D                     ?___lwmod:
  2720                           	opt stack 0
  2721  00007D                     ?_GetOsTickCounter:
  2722                           	opt stack 0
  2723  00007D                     ?___lmul:
  2724                           	opt stack 0
  2725  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2726                           	opt stack 0
  2727  00007D                     SetAckStatus@AckSts:
  2728                           	opt stack 0
  2729  00007D                     WriteByte@Byte:
  2730                           	opt stack 0
  2731  00007D                     ReadByte@Byte:
  2732                           	opt stack 0
  2733  00007D                     Mcu_SetWdgSts@WdgSts:
  2734                           	opt stack 0
  2735  00007D                     RtccIrqInit@Priority:
  2736                           	opt stack 0
  2737  00007D                     Rtcc_SetRtcStatus@Status:
  2738                           	opt stack 0
  2739  00007D                     TmrBInit@Prescaler:
  2740                           	opt stack 0
  2741  00007D                     Tmr_TmrBIrqSet@Priority:
  2742                           	opt stack 0
  2743  00007D                     Tmr_StartTmr@TmrNumb:
  2744                           	opt stack 0
  2745  00007D                     UartWriteByte@ByteToWrite:
  2746                           	opt stack 0
  2747  00007D                     USBTransferOnePacket@dir:
  2748                           	opt stack 0
  2749  00007D                     USBConfigureEndpoint@direction:
  2750                           	opt stack 0
  2751  00007D                     USBCtrlTrfTxService@byteToSend:
  2752                           	opt stack 0
  2753  00007D                     USBCtrlTrfRxService@i:
  2754                           	opt stack 0
  2755  00007D                     Led_SetLedStatus@LedSts:
  2756                           	opt stack 0
  2757  00007D                     toupper@c:
  2758                           	opt stack 0
  2759  00007D                     tolower@c:
  2760                           	opt stack 0
  2761  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2762                           	opt stack 0
  2763  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2764                           	opt stack 0
  2765  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2766                           	opt stack 0
  2767  00007D                     Uart_ClearRxBuffer@Index:
  2768                           	opt stack 0
  2769  00007D                     GenerateEvt@Event:
  2770                           	opt stack 0
  2771  00007D                     ReceiveEvt@Event:
  2772                           	opt stack 0
  2773  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2774                           	opt stack 0
  2775  00007D                     StringCopy@SourceStr:
  2776                           	opt stack 0
  2777  00007D                     ClearBuffer@Buffer:
  2778                           	opt stack 0
  2779  00007D                     sprintf@sp:
  2780                           	opt stack 0
  2781  00007D                     ___wmul@multiplier:
  2782                           	opt stack 0
  2783  00007D                     ___awdiv@dividend:
  2784                           	opt stack 0
  2785  00007D                     ___awmod@dividend:
  2786                           	opt stack 0
  2787  00007D                     ___lwmod@dividend:
  2788                           	opt stack 0
  2789  00007D                     memcpy@d1:
  2790                           	opt stack 0
  2791  00007D                     memset@p1:
  2792                           	opt stack 0
  2793  00007D                     strcat@to:
  2794                           	opt stack 0
  2795  00007D                     strcpy@to:
  2796                           	opt stack 0
  2797  00007D                     strlen@s:
  2798                           	opt stack 0
  2799  00007D                     ___lmul@multiplier:
  2800                           	opt stack 0
  2801                           
  2802                           ; 4 bytes @ 0x1D
  2803  00007D                     	ds	1
  2804  00007E                     ??_USBConfigureEndpoint:
  2805  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2806                           	opt stack 0
  2807  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2808                           	opt stack 0
  2809  00007E                     TmrBInit@Postscaler:
  2810                           	opt stack 0
  2811  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2812                           	opt stack 0
  2813  00007E                     UartWriteByte@Module:
  2814                           	opt stack 0
  2815  00007E                     UartTxBufferStatus@Module:
  2816                           	opt stack 0
  2817  00007E                     USBCtrlTrfRxService@byteToRead:
  2818                           	opt stack 0
  2819  00007E                     USBCtrlTrfInHandler@lastDTS:
  2820                           	opt stack 0
  2821  00007E                     Led_SetLedStatus@Led:
  2822                           	opt stack 0
  2823  00007E                     _isdigit$6254:
  2824                           	opt stack 0
  2825  00007E                     _isspace$6523:
  2826                           	opt stack 0
  2827  00007E                     _isupper$6526:
  2828                           	opt stack 0
  2829  00007E                     I2c_WriteData@WritePacket:
  2830                           	opt stack 0
  2831  00007E                     Rtcc_RtcConfig@RtcConfig:
  2832                           	opt stack 0
  2833  00007E                     USBTransferOnePacket@data:
  2834                           	opt stack 0
  2835  00007E                     USBStdGetStatusHandler@p:
  2836                           	opt stack 0
  2837                           
  2838                           ; 2 bytes @ 0x1E
  2839  00007E                     	ds	1
  2840  00007F                     ??_strlen:
  2841  00007F                     ??_Rtcc_AlarmConfig:
  2842  00007F                     ??_TmrBInit:
  2843  00007F                     Irq_InitIntController@IntPriorityEn:
  2844                           	opt stack 0
  2845  00007F                     Rtcc_GetRtccValue@RetValue:
  2846                           	opt stack 0
  2847  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2848                           	opt stack 0
  2849  00007F                     UartTxBufferStatus@TxBufferStatus:
  2850                           	opt stack 0
  2851  00007F                     GenerateEvt@EventStatus:
  2852                           	opt stack 0
  2853  00007F                     isdigit@c:
  2854                           	opt stack 0
  2855  00007F                     isspace@c:
  2856                           	opt stack 0
  2857  00007F                     isupper@c:
  2858                           	opt stack 0
  2859  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2860                           	opt stack 0
  2861  00007F                     StringCopy@DestStr:
  2862                           	opt stack 0
  2863  00007F                     ClearBuffer@Len:
  2864                           	opt stack 0
  2865  00007F                     sprintf@f:
  2866                           	opt stack 0
  2867  00007F                     ___wmul@multiplicand:
  2868                           	opt stack 0
  2869  00007F                     ___awdiv@divisor:
  2870                           	opt stack 0
  2871  00007F                     ___awmod@divisor:
  2872                           	opt stack 0
  2873  00007F                     ___lwmod@divisor:
  2874                           	opt stack 0
  2875  00007F                     memcpy@s1:
  2876                           	opt stack 0
  2877  00007F                     memset@c:
  2878                           	opt stack 0
  2879  00007F                     strcat@from:
  2880                           	opt stack 0
  2881  00007F                     strcpy@from:
  2882                           	opt stack 0
  2883                           
  2884                           ; 2 bytes @ 0x1F
  2885  00007F                     	ds	1
  2886  000080                     ??_isalpha:
  2887  000080                     ??_isxdigit:
  2888  000080                     ??_I2c_WriteData:
  2889  000080                     ??_Rtcc_RtcConfig:
  2890  000080                     Rtcc_GetRtccValue@RegValue:
  2891                           	opt stack 0
  2892  000080                     TmrBInit@TmrNumb:
  2893                           	opt stack 0
  2894  000080                     ReceiveEvt@EventStatus:
  2895                           	opt stack 0
  2896  000080                     USBTransferOnePacket@len:
  2897                           	opt stack 0
  2898  000080                     I2c_ReadData@ReadPacket:
  2899                           	opt stack 0
  2900  000080                     Uart_WriteConstString@ConstStringToWrite:
  2901                           	opt stack 0
  2902  000080                     Uart_WriteString@StringToWrite:
  2903                           	opt stack 0
  2904  000080                     Uart_WriteStringLen@StringToWrite:
  2905                           	opt stack 0
  2906  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  2907                           	opt stack 0
  2908  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2909                           	opt stack 0
  2910                           
  2911                           ; 2 bytes @ 0x20
  2912  000080                     	ds	1
  2913  000081                     ?_GetElapsedTime:
  2914                           	opt stack 0
  2915  000081                     ?_Rtcm_GetRtccDate:
  2916                           	opt stack 0
  2917  000081                     Mdm_IsSmsReceived@Ret:
  2918                           	opt stack 0
  2919  000081                     Mdm_IsRinging@Ret:
  2920                           	opt stack 0
  2921  000081                     I2cSlv_I2cReadMsgSts@Result:
  2922                           	opt stack 0
  2923  000081                     USBTransferOnePacket@ep:
  2924                           	opt stack 0
  2925  000081                     Led_SetLedBlinkTime@Led:
  2926                           	opt stack 0
  2927  000081                     ___awdiv@counter:
  2928                           	opt stack 0
  2929  000081                     ___awmod@counter:
  2930                           	opt stack 0
  2931  000081                     ___lwmod@counter:
  2932                           	opt stack 0
  2933  000081                     _isalpha$6520:
  2934                           	opt stack 0
  2935  000081                     _isxdigit$6530:
  2936                           	opt stack 0
  2937  000081                     OsTmr_StartTimer@Timer:
  2938                           	opt stack 0
  2939  000081                     StringCopy@Len:
  2940                           	opt stack 0
  2941  000081                     ClearBuffer@Index:
  2942                           	opt stack 0
  2943  000081                     ___wmul@product:
  2944                           	opt stack 0
  2945  000081                     memcpy@n:
  2946                           	opt stack 0
  2947  000081                     memset@n:
  2948                           	opt stack 0
  2949  000081                     strcat@cp:
  2950                           	opt stack 0
  2951  000081                     strcpy@cp:
  2952                           	opt stack 0
  2953  000081                     strlen@cp:
  2954                           	opt stack 0
  2955  000081                     GetElapsedTime@StartTime:
  2956                           	opt stack 0
  2957  000081                     ___lmul@multiplicand:
  2958                           	opt stack 0
  2959                           
  2960                           ; 4 bytes @ 0x21
  2961  000081                     	ds	1
  2962  000082                     ??_I2c_ReadData:
  2963  000082                     Uart_WriteConstString@Module:
  2964                           	opt stack 0
  2965  000082                     Uart_WriteString@Module:
  2966                           	opt stack 0
  2967  000082                     Uart_WriteStringLen@Len:
  2968                           	opt stack 0
  2969  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  2970                           	opt stack 0
  2971  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2972                           	opt stack 0
  2973  000082                     USBConfigureEndpoint@EPNum:
  2974                           	opt stack 0
  2975  000082                     ___awdiv@sign:
  2976                           	opt stack 0
  2977  000082                     ___awmod@sign:
  2978                           	opt stack 0
  2979  000082                     isalpha@c:
  2980                           	opt stack 0
  2981  000082                     isxdigit@c:
  2982                           	opt stack 0
  2983  000082                     USBTransferOnePacket@handle:
  2984                           	opt stack 0
  2985                           
  2986                           ; 2 bytes @ 0x22
  2987  000082                     	ds	1
  2988  000083                     ??_StringCopy:
  2989  000083                     ?_GetCallerNumber:
  2990                           	opt stack 0
  2991  000083                     ?_atoi:
  2992                           	opt stack 0
  2993  000083                     ?_xtoi:
  2994                           	opt stack 0
  2995  000083                     ?___lwdiv:
  2996                           	opt stack 0
  2997  000083                     Uart_WriteStringLen@Index:
  2998                           	opt stack 0
  2999  000083                     Mdm_SetSmsFormat@Index:
  3000                           	opt stack 0
  3001  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3002                           	opt stack 0
  3003  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3004                           	opt stack 0
  3005  000083                     sprintf@flag:
  3006                           	opt stack 0
  3007  000083                     memcpy@tmp:
  3008                           	opt stack 0
  3009  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3010                           	opt stack 0
  3011  000083                     USBConfigureEndpoint@handle:
  3012                           	opt stack 0
  3013  000083                     putUSBUSART@data:
  3014                           	opt stack 0
  3015  000083                     atoi@s:
  3016                           	opt stack 0
  3017  000083                     ___awdiv@quotient:
  3018                           	opt stack 0
  3019  000083                     ___lwdiv@dividend:
  3020                           	opt stack 0
  3021  000083                     memset@p:
  3022                           	opt stack 0
  3023  000083                     xtoi@s:
  3024                           	opt stack 0
  3025  000083                     OsTmr_StartTimer@Timeout:
  3026                           	opt stack 0
  3027                           
  3028                           ; 4 bytes @ 0x23
  3029  000083                     	ds	1
  3030  000084                     Uart_WriteStringLen@Module:
  3031                           	opt stack 0
  3032  000084                     I2cSlv_SendI2cMsg@TxSts:
  3033                           	opt stack 0
  3034  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3035                           	opt stack 0
  3036  000084                     CDCTxService@i:
  3037                           	opt stack 0
  3038  000084                     getsUSBUSART@buffer:
  3039                           	opt stack 0
  3040  000084                     sprintf@ap:
  3041                           	opt stack 0
  3042  000084                     memcpy@d:
  3043                           	opt stack 0
  3044  000084                     Mdm_SetSmsFormat@UartMessage:
  3045                           	opt stack 0
  3046                           
  3047                           ; 20 bytes @ 0x24
  3048  000084                     	ds	1
  3049  000085                     ??_atoi:
  3050  000085                     ??_xtoi:
  3051  000085                     ??_GetElapsedTime:
  3052  000085                     Rtcc_SetRtccValue@Value:
  3053                           	opt stack 0
  3054  000085                     USBDeviceInit@i:
  3055                           	opt stack 0
  3056  000085                     USBEnableEndpoint@options:
  3057                           	opt stack 0
  3058  000085                     putUSBUSART@length:
  3059                           	opt stack 0
  3060  000085                     CDCTxService@byte_to_send:
  3061                           	opt stack 0
  3062  000085                     StringCompare@String1:
  3063                           	opt stack 0
  3064  000085                     StringCopy@Index:
  3065                           	opt stack 0
  3066  000085                     ___lwdiv@divisor:
  3067                           	opt stack 0
  3068  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3069                           	opt stack 0
  3070  000085                     ___lmul@product:
  3071                           	opt stack 0
  3072                           
  3073                           ; 4 bytes @ 0x25
  3074  000085                     	ds	1
  3075  000086                     ??_Rtcc_SetRtccValue:
  3076  000086                     getsUSBUSART@len:
  3077                           	opt stack 0
  3078  000086                     sprintf@c:
  3079                           	opt stack 0
  3080  000086                     USBEnableEndpoint@p:
  3081                           	opt stack 0
  3082  000086                     memcpy@s:
  3083                           	opt stack 0
  3084                           
  3085                           ; 2 bytes @ 0x26
  3086  000086                     	ds	1
  3087  000087                     atoi@sign:
  3088                           	opt stack 0
  3089  000087                     ___lwdiv@counter:
  3090                           	opt stack 0
  3091  000087                     xtoi@sign:
  3092                           	opt stack 0
  3093  000087                     StringCompare@String2:
  3094                           	opt stack 0
  3095  000087                     sprintf@cp:
  3096                           	opt stack 0
  3097                           
  3098                           ; 2 bytes @ 0x27
  3099  000087                     	ds	1
  3100  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3101                           	opt stack 0
  3102  000088                     USBEnableEndpoint@ep:
  3103                           	opt stack 0
  3104  000088                     atoi@a:
  3105                           	opt stack 0
  3106  000088                     ___lwdiv@quotient:
  3107                           	opt stack 0
  3108  000088                     xtoi@val:
  3109                           	opt stack 0
  3110                           
  3111                           ; 2 bytes @ 0x28
  3112  000088                     	ds	1
  3113  000089                     ??_Rtcm_GetRtccDate:
  3114  000089                     ?_strtol:
  3115                           	opt stack 0
  3116  000089                     ?___lldiv:
  3117                           	opt stack 0
  3118  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3119                           	opt stack 0
  3120  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3121                           	opt stack 0
  3122  000089                     StringCompare@Len:
  3123                           	opt stack 0
  3124  000089                     strtol@s:
  3125                           	opt stack 0
  3126  000089                     ___lldiv@dividend:
  3127                           	opt stack 0
  3128  000089                     Rtcm_SetRtccDate@Date:
  3129                           	opt stack 0
  3130                           
  3131                           ; 8 bytes @ 0x29
  3132  000089                     	ds	1
  3133  00008A                     xtoi@c:
  3134                           	opt stack 0
  3135  00008A                     LedBlinkStateMachine@LedBlink:
  3136                           	opt stack 0
  3137  00008A                     LedPulseStateMachine@LedPulse:
  3138                           	opt stack 0
  3139  00008A                     secondsAppTimer@counter:
  3140                           	opt stack 0
  3141  00008A                     utoa@buf:
  3142                           	opt stack 0
  3143  00008A                     Rtcm_GetRtccDate@LocalDate:
  3144                           	opt stack 0
  3145                           
  3146                           ; 8 bytes @ 0x2A
  3147  00008A                     	ds	1
  3148  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3149                           	opt stack 0
  3150  00008B                     strtol@endptr:
  3151                           	opt stack 0
  3152                           
  3153                           ; 2 bytes @ 0x2B
  3154  00008B                     	ds	1
  3155  00008C                     LedPulseStateMachine@Led:
  3156                           	opt stack 0
  3157  00008C                     secondsAppTimer@isCyclic:
  3158                           	opt stack 0
  3159  00008C                     utoa@val:
  3160                           	opt stack 0
  3161                           
  3162                           ; 2 bytes @ 0x2C
  3163  00008C                     	ds	1
  3164  00008D                     StringCompare@Result:
  3165                           	opt stack 0
  3166  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3167                           	opt stack 0
  3168  00008D                     strtol@base:
  3169                           	opt stack 0
  3170  00008D                     GetElapsedTime@TimeValue:
  3171                           	opt stack 0
  3172  00008D                     ___lldiv@divisor:
  3173                           	opt stack 0
  3174                           
  3175                           ; 4 bytes @ 0x2D
  3176  00008D                     	ds	1
  3177  00008E                     StringCompare@Index:
  3178                           	opt stack 0
  3179  00008E                     utoa@base:
  3180                           	opt stack 0
  3181                           
  3182                           ; 2 bytes @ 0x2E
  3183  00008E                     	ds	1
  3184  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3185  00008F                     ??_strtol:
  3186  00008F                     secondsAppTimer@seconds:
  3187                           	opt stack 0
  3188  00008F                     LedStateMachine@LedSts:
  3189                           	opt stack 0
  3190                           
  3191                           ; 2 bytes @ 0x2F
  3192  00008F                     	ds	1
  3193  000090                     secondsAppTimer@isExpired:
  3194                           	opt stack 0
  3195  000090                     utoa@v:
  3196                           	opt stack 0
  3197  000090                     ModemEvtParser@CallReadyString:
  3198                           	opt stack 0
  3199                           
  3200                           ; 10 bytes @ 0x30
  3201  000090                     	ds	1
  3202  000091                     ??_USBStdFeatureReqHandler:
  3203  000091                     USBStdSetCfgHandler@i:
  3204                           	opt stack 0
  3205  000091                     LedStateMachine@LedOut:
  3206                           	opt stack 0
  3207  000091                     secondsAppTimer@destinationTicks:
  3208                           	opt stack 0
  3209  000091                     GetElapsedTime@CurrentTimestamp:
  3210                           	opt stack 0
  3211  000091                     ___lldiv@quotient:
  3212                           	opt stack 0
  3213                           
  3214                           ; 4 bytes @ 0x31
  3215  000091                     	ds	1
  3216  000092                     utoa@c:
  3217                           	opt stack 0
  3218  000092                     USBStdFeatureReqHandler@pUEP:
  3219                           	opt stack 0
  3220                           
  3221                           ; 2 bytes @ 0x32
  3222  000092                     	ds	1
  3223  000093                     strtol@sign:
  3224                           	opt stack 0
  3225  000093                     LedStateMachine@LedBlink:
  3226                           	opt stack 0
  3227  000093                     blinkForSeconds@blinkTicks:
  3228                           	opt stack 0
  3229  000093                     itoa@buf:
  3230                           	opt stack 0
  3231                           
  3232                           ; 2 bytes @ 0x33
  3233  000093                     	ds	1
  3234  000094                     USBStdFeatureReqHandler@current_ep_data:
  3235                           	opt stack 0
  3236  000094                     strtol@a:
  3237                           	opt stack 0
  3238                           
  3239                           ; 4 bytes @ 0x34
  3240  000094                     	ds	1
  3241  000095                     blinkForSeconds@seconds:
  3242                           	opt stack 0
  3243  000095                     ___lldiv@counter:
  3244                           	opt stack 0
  3245  000095                     OsTmr_GetTimerStatus@Timer:
  3246                           	opt stack 0
  3247  000095                     USBStdFeatureReqHandler@p:
  3248                           	opt stack 0
  3249  000095                     LedStateMachine@LedPulse:
  3250                           	opt stack 0
  3251  000095                     itoa@val:
  3252                           	opt stack 0
  3253                           
  3254                           ; 2 bytes @ 0x35
  3255  000095                     	ds	1
  3256  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3257                           	opt stack 0
  3258  000096                     SetUartBaudRate@UartConfig:
  3259                           	opt stack 0
  3260  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3261                           	opt stack 0
  3262                           
  3263                           ; 4 bytes @ 0x36
  3264  000096                     	ds	1
  3265  000097                     ??_USBCtrlEPService:
  3266  000097                     itoa@base:
  3267                           	opt stack 0
  3268                           
  3269                           ; 2 bytes @ 0x37
  3270  000097                     	ds	1
  3271  000098                     Tmr_TmrBPrSet@Prescaler:
  3272                           	opt stack 0
  3273  000098                     Mdm_SetSmsFormat@TextFormat:
  3274                           	opt stack 0
  3275  000098                     USBDeviceTasks@i:
  3276                           	opt stack 0
  3277  000098                     LedStateMachine@LedOutSts:
  3278                           	opt stack 0
  3279  000098                     strtol@c:
  3280                           	opt stack 0
  3281                           
  3282                           ; 1 bytes @ 0x38
  3283  000098                     	ds	1
  3284  000099                     Tmr_TmrBPrSet@Postscaler:
  3285                           	opt stack 0
  3286  000099                     SetUartBaudRate@Module:
  3287                           	opt stack 0
  3288  000099                     LedStateMachine@Led:
  3289                           	opt stack 0
  3290  000099                     initGprsModem@isInitialized:
  3291                           	opt stack 0
  3292  000099                     itoa@cp:
  3293                           	opt stack 0
  3294                           
  3295                           ; 2 bytes @ 0x39
  3296  000099                     	ds	1
  3297  00009A                     ??_Led_MainTask:
  3298  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3299                           	opt stack 0
  3300  00009A                     SetUartBaudRate@BaudRateRegister:
  3301                           	opt stack 0
  3302  00009A                     SetBaudRate@McuClockHz:
  3303                           	opt stack 0
  3304  00009A                     ModemEvtParser@ClipString:
  3305                           	opt stack 0
  3306                           
  3307                           ; 5 bytes @ 0x3A
  3308  00009A                     	ds	1
  3309  00009B                     ??_SendSmsSm:
  3310  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3311                           	opt stack 0
  3312  00009B                     OsTmr_Wait@WaitTimer:
  3313                           	opt stack 0
  3314  00009B                     InitGprsNetwork@Apn:
  3315                           	opt stack 0
  3316  00009B                     HttpGetMethod@GetData:
  3317                           	opt stack 0
  3318                           
  3319                           ; 2 bytes @ 0x3B
  3320  00009B                     	ds	1
  3321  00009C                     SetUartBaudRate@DivisionFactor:
  3322                           	opt stack 0
  3323  00009C                     Tmr_TmrBPrSet@Divisor:
  3324                           	opt stack 0
  3325                           
  3326                           ; 4 bytes @ 0x3C
  3327  00009C                     	ds	1
  3328  00009D                     ??_HttpGetMethod:
  3329  00009D                     InitGprsNetwork@ApnLen:
  3330                           	opt stack 0
  3331  00009D                     Uart_InitUartModule@UartConfig:
  3332                           	opt stack 0
  3333  00009D                     OsTmr_Wait@DelayMs:
  3334                           	opt stack 0
  3335                           
  3336                           ; 4 bytes @ 0x3D
  3337  00009D                     	ds	1
  3338  00009E                     ??_SetBaudRate:
  3339  00009E                     ??_InitGprsNetwork:
  3340                           
  3341                           ; 1 bytes @ 0x3E
  3342  00009E                     	ds	1
  3343  00009F                     ??_Uart_InitUartModule:
  3344  00009F                     ModemEvtParser@SmsString:
  3345                           	opt stack 0
  3346                           
  3347                           ; 5 bytes @ 0x3F
  3348  00009F                     	ds	1
  3349  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3350                           	opt stack 0
  3351                           
  3352                           ; 2 bytes @ 0x40
  3353  0000A0                     	ds	1
  3354  0000A1                     Uart_InitUartModule@Module:
  3355                           	opt stack 0
  3356  0000A1                     OsTmr_Wait@Ret:
  3357                           	opt stack 0
  3358                           
  3359                           ; 1 bytes @ 0x41
  3360  0000A1                     	ds	1
  3361  0000A2                     ??_Terminal:
  3362  0000A2                     I2c_InitI2cModule@I2cConfig:
  3363                           	opt stack 0
  3364  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3365                           	opt stack 0
  3366                           
  3367                           ; 2 bytes @ 0x42
  3368  0000A2                     	ds	1
  3369  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3370                           	opt stack 0
  3371                           
  3372                           ; 1 bytes @ 0x43
  3373  0000A3                     	ds	1
  3374  0000A4                     ??_I2c_InitI2cModule:
  3375  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3376                           	opt stack 0
  3377  0000A4                     Terminal@i:
  3378                           	opt stack 0
  3379  0000A4                     ModemEvtParser@RingString:
  3380                           	opt stack 0
  3381  0000A4                     InitSchedTimer@TmrBConfig:
  3382                           	opt stack 0
  3383                           
  3384                           ; 7 bytes @ 0x44
  3385  0000A4                     	ds	1
  3386  0000A5                     Terminal@ReceivedBytes:
  3387                           	opt stack 0
  3388  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3389                           	opt stack 0
  3390                           
  3391                           ; 2 bytes @ 0x45
  3392  0000A5                     	ds	1
  3393  0000A6                     Terminal@Index:
  3394                           	opt stack 0
  3395                           
  3396                           ; 1 bytes @ 0x46
  3397  0000A6                     	ds	1
  3398  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3399                           	opt stack 0
  3400                           
  3401                           ; 1 bytes @ 0x47
  3402  0000A7                     	ds	1
  3403  0000A8                     ModemEvtParser@Match:
  3404                           	opt stack 0
  3405  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3406                           	opt stack 0
  3407                           
  3408                           ; 1 bytes @ 0x48
  3409  0000A8                     	ds	1
  3410  0000A9                     ModemEvtParser@CompareIdx:
  3411                           	opt stack 0
  3412  0000A9                     Eeprom_Read@ReadBuffer:
  3413                           	opt stack 0
  3414                           
  3415                           ; 2 bytes @ 0x49
  3416  0000A9                     	ds	1
  3417  0000AA                     
  3418                           ; 1 bytes @ 0x4A
  3419  0000AA                     	ds	1
  3420  0000AB                     Eeprom_Read@DataLength:
  3421                           	opt stack 0
  3422                           
  3423                           ; 1 bytes @ 0x4B
  3424  0000AB                     	ds	1
  3425  0000AC                     Eeprom_Read@MemoryAddress:
  3426                           	opt stack 0
  3427                           
  3428                           ; 1 bytes @ 0x4C
  3429  0000AC                     	ds	1
  3430  0000AD                     Eeprom_Read@SlaveAddress:
  3431                           	opt stack 0
  3432                           
  3433                           ; 1 bytes @ 0x4D
  3434  0000AD                     	ds	1
  3435  0000AE                     Eeprom_Read@ReadSts:
  3436                           	opt stack 0
  3437                           
  3438                           ; 1 bytes @ 0x4E
  3439  0000AE                     	ds	1
  3440  0000AF                     Eeprom_Read@QuerySts:
  3441                           	opt stack 0
  3442                           
  3443                           ; 1 bytes @ 0x4F
  3444  0000AF                     	ds	1
  3445  0000B0                     tblptru	equ	0xFF8
  3446                           tblptrh	equ	0xFF7
  3447                           tblptrl	equ	0xFF6
  3448                           tablat	equ	0xFF5
  3449                           postinc0	equ	0xFEE
  3450                           wreg	equ	0xFE8
  3451                           postdec1	equ	0xFE5
  3452                           fsr1h	equ	0xFE2
  3453                           fsr1l	equ	0xFE1
  3454                           
  3455                           ; 1 bytes @ 0x50
  3456                           
  3457                           	psect	cstackCOMRAM
  3458  000001                     __pcstackCOMRAM:
  3459                           	opt stack 0
  3460  000001                     i2GenerateEvt@Event:
  3461                           	opt stack 0
  3462                           
  3463                           ; 2 bytes @ 0x0
  3464  000001                     	ds	2
  3465  000003                     i2GenerateEvt@EventStatus:
  3466                           	opt stack 0
  3467                           
  3468                           ; 1 bytes @ 0x2
  3469  000003                     	ds	1
  3470  000004                     Uart_MdmGsmGprsReadService@UartData:
  3471                           	opt stack 0
  3472                           
  3473                           ; 1 bytes @ 0x3
  3474  000004                     	ds	1
  3475  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3476                           	opt stack 0
  3477                           
  3478                           ; 2 bytes @ 0x4
  3479  000005                     	ds	2
  3480  000007                     ??_HighPriorityIsr:
  3481                           
  3482                           ; 1 bytes @ 0x6
  3483  000007                     	ds	18
  3484  000019                     ?i1___wmul:
  3485                           	opt stack 0
  3486  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3487                           	opt stack 0
  3488  000019                     i1GenerateEvt@Event:
  3489                           	opt stack 0
  3490  000019                     i1___wmul@multiplier:
  3491                           	opt stack 0
  3492                           
  3493                           ; 2 bytes @ 0x18
  3494  000019                     	ds	2
  3495  00001B                     i1GenerateEvt@EventStatus:
  3496                           	opt stack 0
  3497  00001B                     i1___wmul@multiplicand:
  3498                           	opt stack 0
  3499                           
  3500                           ; 2 bytes @ 0x1A
  3501  00001B                     	ds	1
  3502  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3503                           	opt stack 0
  3504                           
  3505                           ; 2 bytes @ 0x1B
  3506  00001C                     	ds	1
  3507  00001D                     i1___wmul@product:
  3508                           	opt stack 0
  3509                           
  3510                           ; 2 bytes @ 0x1C
  3511  00001D                     	ds	1
  3512  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3513                           	opt stack 0
  3514                           
  3515                           ; 1 bytes @ 0x1D
  3516  00001E                     	ds	1
  3517  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3518                           	opt stack 0
  3519                           
  3520                           ; 1 bytes @ 0x1E
  3521  00001F                     	ds	1
  3522  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3523                           	opt stack 0
  3524                           
  3525                           ; 1 bytes @ 0x1F
  3526  000020                     	ds	1
  3527  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3528                           	opt stack 0
  3529                           
  3530                           ; 2 bytes @ 0x20
  3531  000021                     	ds	2
  3532  000023                     tblptru	equ	0xFF8
  3533                           tblptrh	equ	0xFF7
  3534                           tblptrl	equ	0xFF6
  3535                           tablat	equ	0xFF5
  3536                           postinc0	equ	0xFEE
  3537                           wreg	equ	0xFE8
  3538                           postdec1	equ	0xFE5
  3539                           fsr1h	equ	0xFE2
  3540                           fsr1l	equ	0xFE1
  3541                           
  3542                           ; 1 bytes @ 0x22
  3543 ;;
  3544 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3545 ;;
  3546 ;; *************** function _main *****************
  3547 ;; Defined at:
  3548 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  2   14[None  ] short 
  3555 ;; Registers used:
  3556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels required when called:   23
  3568 ;; This function calls:
  3569 ;;		_Sch_MainScheduler
  3570 ;;		_SystemInit
  3571 ;; This function is called by:
  3572 ;;		Startup code after reset
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text0
  3577  006340                     __ptext0:
  3578                           	opt stack 0
  3579  006340                     _main:
  3580                           	opt stack 8
  3581                           
  3582                           ;main.c: 61: SystemInit();
  3583                           
  3584                           ;incstack = 0
  3585  006340  ECD2  F02E         	call	_SystemInit	;wreg free
  3586                           
  3587                           ;main.c: 64: Sch_MainScheduler();
  3588  006344  ECA4  F030         	call	_Sch_MainScheduler	;wreg free
  3589                           
  3590                           ;main.c: 67: return 0;
  3591                           ;	Return value of _main is never used
  3592  006348  EF66  F000         	goto	start
  3593  00634C                     __end_of_main:
  3594                           	opt stack 0
  3595                           tblptru	equ	0xFF8
  3596                           tblptrh	equ	0xFF7
  3597                           tblptrl	equ	0xFF6
  3598                           tablat	equ	0xFF5
  3599                           postinc0	equ	0xFEE
  3600                           wreg	equ	0xFE8
  3601                           postdec1	equ	0xFE5
  3602                           fsr1h	equ	0xFE2
  3603                           fsr1l	equ	0xFE1
  3604                           
  3605 ;; *************** function _SystemInit *****************
  3606 ;; Defined at:
  3607 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;		None
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;		None
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3625 ;;Total ram usage:        0 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:   15
  3628 ;; This function calls:
  3629 ;;		_InitSchedTimer
  3630 ;;		_Irq_InitIntController
  3631 ;;		_Mcu_ConfigExtInt
  3632 ;;		_Mcu_StartSystemPll
  3633 ;;		_Pm_DsReleasePinControl
  3634 ;;		_Tmr_RegisterTmr2IsrCallback
  3635 ;; This function is called by:
  3636 ;;		_main
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text1
  3641  005DA4                     __ptext1:
  3642                           	opt stack 0
  3643  005DA4                     _SystemInit:
  3644                           	opt stack 15
  3645                           
  3646                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3647                           
  3648                           ;incstack = 0
  3649  005DA4  ECC3  F031         	call	_Pm_DsReleasePinControl	;wreg free
  3650                           
  3651                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3652  005DA8  EC95  F030         	call	_Mcu_StartSystemPll	;wreg free
  3653                           
  3654                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3655  005DAC  0E01               	movlw	1
  3656  005DAE  0100               	movlb	0	; () banked
  3657  005DB0  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3658  005DB2  0E01               	movlw	1
  3659  005DB4  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3660  005DB6  0E01               	movlw	1
  3661  005DB8  EC76  F02F         	call	_Irq_InitIntController
  3662                           
  3663                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3664  005DBC  0E24               	movlw	low _Sch_SchmIntService
  3665  005DBE  0100               	movlb	0	; () banked
  3666  005DC0  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3667  005DC2  0E63               	movlw	high _Sch_SchmIntService
  3668  005DC4  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3669  005DC6  ECA6  F031         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3670                           
  3671                           ;sys_init.c: 132: InitSchedTimer();
  3672  005DCA  EC32  F02F         	call	_InitSchedTimer	;wreg free
  3673                           
  3674                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3675  005DCE  ECCF  F030         	call	_Mcu_ConfigExtInt	;wreg free
  3676  005DD2  0012               	return		;funcret
  3677  005DD4                     __end_of_SystemInit:
  3678                           	opt stack 0
  3679                           tblptru	equ	0xFF8
  3680                           tblptrh	equ	0xFF7
  3681                           tblptrl	equ	0xFF6
  3682                           tablat	equ	0xFF5
  3683                           postinc0	equ	0xFEE
  3684                           wreg	equ	0xFE8
  3685                           postdec1	equ	0xFE5
  3686                           fsr1h	equ	0xFE2
  3687                           fsr1l	equ	0xFE1
  3688                           
  3689 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3690 ;; Defined at:
  3691 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3694 ;;		 -> Sch_SchmIntService(1), 
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1    wreg      void 
  3699 ;; Registers used:
  3700 ;;		wreg, status,2, status,0
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3706 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3709 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3710 ;;Total ram usage:        2 bytes
  3711 ;; Hardware stack levels used:    1
  3712 ;; Hardware stack levels required when called:   11
  3713 ;; This function calls:
  3714 ;;		Nothing
  3715 ;; This function is called by:
  3716 ;;		_SystemInit
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	text2
  3721  00634C                     __ptext2:
  3722                           	opt stack 0
  3723  00634C                     _Tmr_RegisterTmr2IsrCallback:
  3724                           	opt stack 18
  3725                           
  3726                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3727                           
  3728                           ;incstack = 0
  3729  00634C  C07D  F2EA         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3730  006350  C07E  F2EB         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3731  006354  0012               	return		;funcret
  3732  006356                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3733                           	opt stack 0
  3734                           tblptru	equ	0xFF8
  3735                           tblptrh	equ	0xFF7
  3736                           tblptrl	equ	0xFF6
  3737                           tablat	equ	0xFF5
  3738                           postinc0	equ	0xFEE
  3739                           wreg	equ	0xFE8
  3740                           postdec1	equ	0xFE5
  3741                           fsr1h	equ	0xFE2
  3742                           fsr1l	equ	0xFE1
  3743                           
  3744 ;; *************** function _Pm_DsReleasePinControl *****************
  3745 ;; Defined at:
  3746 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		None
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3764 ;;Total ram usage:        0 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:   11
  3767 ;; This function calls:
  3768 ;;		Nothing
  3769 ;; This function is called by:
  3770 ;;		_SystemInit
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	text3
  3775  006386                     __ptext3:
  3776                           	opt stack 0
  3777  006386                     _Pm_DsReleasePinControl:
  3778                           	opt stack 18
  3779                           
  3780                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3781                           
  3782                           ;incstack = 0
  3783  006386  010F               	movlb	15	; () banked
  3784  006388  914C               	bcf	76,0,b	;volatile
  3785                           
  3786                           ; BSR set to: 15
  3787  00638A  0012               	return		;funcret
  3788  00638C                     __end_of_Pm_DsReleasePinControl:
  3789                           	opt stack 0
  3790                           tblptru	equ	0xFF8
  3791                           tblptrh	equ	0xFF7
  3792                           tblptrl	equ	0xFF6
  3793                           tablat	equ	0xFF5
  3794                           postinc0	equ	0xFEE
  3795                           wreg	equ	0xFE8
  3796                           postdec1	equ	0xFE5
  3797                           fsr1h	equ	0xFE2
  3798                           fsr1l	equ	0xFE1
  3799                           
  3800 ;; *************** function _Mcu_StartSystemPll *****************
  3801 ;; Defined at:
  3802 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;		None
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      void 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3817 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3819 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3820 ;;Total ram usage:        2 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:   11
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_SystemInit
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text4
  3831  00612A                     __ptext4:
  3832                           	opt stack 0
  3833  00612A                     _Mcu_StartSystemPll:
  3834                           	opt stack 18
  3835                           
  3836                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3837                           
  3838                           ; BSR set to: 15
  3839                           ;incstack = 0
  3840  00612A  0E03               	movlw	3
  3841  00612C  0100               	movlb	0	; () banked
  3842  00612E  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3843  006130  0EE8               	movlw	232
  3844  006132  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3848  006134  8C9B               	bsf	3995,6,c	;volatile
  3849  006136                     l11286:
  3850                           
  3851                           ; BSR set to: 0
  3852  006136  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3853  006138  A0D8               	btfss	status,0,c
  3854  00613A  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3855  00613C  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3856  00613E  E1FB               	bnz	l11286
  3857  006140  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3858  006142  B4D8               	btfsc	status,2,c
  3859  006144  0012               	return	
  3860  006146  D7F7               	goto	l237
  3861  006148                     __end_of_Mcu_StartSystemPll:
  3862                           	opt stack 0
  3863                           tblptru	equ	0xFF8
  3864                           tblptrh	equ	0xFF7
  3865                           tblptrl	equ	0xFF6
  3866                           tablat	equ	0xFF5
  3867                           postinc0	equ	0xFEE
  3868                           wreg	equ	0xFE8
  3869                           postdec1	equ	0xFE5
  3870                           fsr1h	equ	0xFE2
  3871                           fsr1l	equ	0xFE1
  3872                           status	equ	0xFD8
  3873                           
  3874 ;; *************** function _Mcu_ConfigExtInt *****************
  3875 ;; Defined at:
  3876 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3894 ;;Total ram usage:        0 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:   11
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_SystemInit
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text5
  3905  00619E                     __ptext5:
  3906                           	opt stack 0
  3907  00619E                     _Mcu_ConfigExtInt:
  3908                           	opt stack 18
  3909                           
  3910                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;incstack = 0
  3914  00619E  8093               	bsf	3987,0,c	;volatile
  3915                           
  3916                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  3917  0061A0  8695               	bsf	3989,3,c	;volatile
  3918                           
  3919                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  3920  0061A2  010F               	movlb	15	; () banked
  3921  0061A4  8949               	bsf	73,4,b	;volatile
  3922                           
  3923                           ; BSR set to: 15
  3924                           ;mcu_drv.c: 108: RPINR1 = 20;
  3925  0061A6  0E14               	movlw	20
  3926  0061A8  010E               	movlb	14	; () banked
  3927  0061AA  6FE7               	movwf	231,b	;volatile
  3928                           
  3929                           ; BSR set to: 14
  3930                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  3931  0061AC  88F2               	bsf	intcon,4,c	;volatile
  3932                           
  3933                           ; BSR set to: 14
  3934                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  3935  0061AE  86F0               	bsf	intcon3,3,c	;volatile
  3936                           
  3937                           ; BSR set to: 14
  3938                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  3939  0061B0  8CF0               	bsf	intcon3,6,c	;volatile
  3940                           
  3941                           ; BSR set to: 14
  3942                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  3943  0061B2  9CF1               	bcf	intcon2,6,c	;volatile
  3944                           
  3945                           ; BSR set to: 14
  3946                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  3947  0061B4  9AF1               	bcf	intcon2,5,c	;volatile
  3948                           
  3949                           ; BSR set to: 14
  3950  0061B6  0012               	return		;funcret
  3951  0061B8                     __end_of_Mcu_ConfigExtInt:
  3952                           	opt stack 0
  3953                           tblptru	equ	0xFF8
  3954                           tblptrh	equ	0xFF7
  3955                           tblptrl	equ	0xFF6
  3956                           tablat	equ	0xFF5
  3957                           intcon	equ	0xFF2
  3958                           intcon2	equ	0xFF1
  3959                           intcon3	equ	0xFF0
  3960                           postinc0	equ	0xFEE
  3961                           wreg	equ	0xFE8
  3962                           postdec1	equ	0xFE5
  3963                           fsr1h	equ	0xFE2
  3964                           fsr1l	equ	0xFE1
  3965                           status	equ	0xFD8
  3966                           
  3967 ;; *************** function _Irq_InitIntController *****************
  3968 ;; Defined at:
  3969 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  IntPriorityE    1    wreg     enum E7720
  3972 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  3973 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3985 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3986 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3988 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3989 ;;Total ram usage:        3 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:   11
  3992 ;; This function calls:
  3993 ;;		Nothing
  3994 ;; This function is called by:
  3995 ;;		_SystemInit
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text6
  4000  005EEC                     __ptext6:
  4001                           	opt stack 0
  4002  005EEC                     _Irq_InitIntController:
  4003                           	opt stack 18
  4004                           
  4005                           ; BSR set to: 14
  4006                           ;incstack = 0
  4007                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4008  005EEC  0100               	movlb	0	; () banked
  4009  005EEE  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4010                           
  4011                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4012  005EF0  0100               	movlb	0	; () banked
  4013  005EF2  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4014  005EF4  D002               	bra	u9825
  4015  005EF6  9ED0               	bcf	4048,7,c	;volatile
  4016  005EF8  D001               	bra	u9826
  4017  005EFA                     u9825:
  4018  005EFA  8ED0               	bsf	4048,7,c	;volatile
  4019  005EFC                     u9826:
  4020                           
  4021                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4022  005EFC  0100               	movlb	0	; () banked
  4023  005EFE  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4024  005F00  D002               	bra	u9835
  4025  005F02  9EF2               	bcf	intcon,7,c	;volatile
  4026  005F04  D001               	bra	u9836
  4027  005F06                     u9835:
  4028  005F06  8EF2               	bsf	intcon,7,c	;volatile
  4029  005F08                     u9836:
  4030                           
  4031                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4032  005F08  0100               	movlb	0	; () banked
  4033  005F0A  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4034  005F0C  D002               	bra	u9845
  4035  005F0E  9CF2               	bcf	intcon,6,c	;volatile
  4036  005F10  D001               	bra	u9846
  4037  005F12                     u9845:
  4038  005F12  8CF2               	bsf	intcon,6,c	;volatile
  4039  005F14                     u9846:
  4040  005F14  0012               	return		;funcret
  4041  005F16                     __end_of_Irq_InitIntController:
  4042                           	opt stack 0
  4043                           tblptru	equ	0xFF8
  4044                           tblptrh	equ	0xFF7
  4045                           tblptrl	equ	0xFF6
  4046                           tablat	equ	0xFF5
  4047                           intcon	equ	0xFF2
  4048                           intcon2	equ	0xFF1
  4049                           intcon3	equ	0xFF0
  4050                           postinc0	equ	0xFEE
  4051                           wreg	equ	0xFE8
  4052                           postdec1	equ	0xFE5
  4053                           fsr1h	equ	0xFE2
  4054                           fsr1l	equ	0xFE1
  4055                           status	equ	0xFD8
  4056                           
  4057 ;; *************** function _InitSchedTimer *****************
  4058 ;; Defined at:
  4059 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;		None
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  1    wreg      void 
  4066 ;; Registers used:
  4067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4074 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4076 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4077 ;;Total ram usage:        7 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:   14
  4080 ;; This function calls:
  4081 ;;		_Tmr_TmrBConfig
  4082 ;; This function is called by:
  4083 ;;		_SystemInit
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text7
  4088  005E64                     __ptext7:
  4089                           	opt stack 0
  4090  005E64                     _InitSchedTimer:
  4091                           	opt stack 15
  4092                           
  4093                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4094                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4095                           
  4096                           ;incstack = 0
  4097  005E64  0E04               	movlw	4
  4098  005E66  0100               	movlb	0	; () banked
  4099  005E68  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4100                           
  4101                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4102  005E6A  0E0C               	movlw	12
  4103  005E6C  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4104                           
  4105                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4106  005E6E  0E00               	movlw	0
  4107  005E70  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4108                           
  4109                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4110  005E72  0E01               	movlw	1
  4111  005E74  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4112                           
  4113                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4114  005E76  0E03               	movlw	3
  4115  005E78  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4116  005E7A  0EE8               	movlw	232
  4117  005E7C  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4118                           
  4119                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4120  005E7E  0E01               	movlw	1
  4121  005E80  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4125  005E82  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4126  005E84  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4127  005E86  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4128  005E88  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4129  005E8A  0E02               	movlw	2
  4130  005E8C  EC26  F01E         	call	_Tmr_TmrBConfig
  4131  005E90  0012               	return		;funcret
  4132  005E92                     __end_of_InitSchedTimer:
  4133                           	opt stack 0
  4134                           tblptru	equ	0xFF8
  4135                           tblptrh	equ	0xFF7
  4136                           tblptrl	equ	0xFF6
  4137                           tablat	equ	0xFF5
  4138                           intcon	equ	0xFF2
  4139                           intcon2	equ	0xFF1
  4140                           intcon3	equ	0xFF0
  4141                           postinc0	equ	0xFEE
  4142                           wreg	equ	0xFE8
  4143                           postdec1	equ	0xFE5
  4144                           fsr1h	equ	0xFE2
  4145                           fsr1l	equ	0xFE1
  4146                           status	equ	0xFD8
  4147                           
  4148 ;; *************** function _Tmr_TmrBConfig *****************
  4149 ;; Defined at:
  4150 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  TmrNumb         1    wreg     unsigned char 
  4153 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4154 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4166 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4167 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4168 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4169 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4170 ;;Total ram usage:        4 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:   13
  4173 ;; This function calls:
  4174 ;;		_TmrBInit
  4175 ;;		_Tmr_StartTmr
  4176 ;;		_Tmr_TmrBIrqSet
  4177 ;;		_Tmr_TmrBPrSet
  4178 ;; This function is called by:
  4179 ;;		_InitSchedTimer
  4180 ;;		_InitAuxTimer
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text8
  4185  003C4C                     __ptext8:
  4186                           	opt stack 0
  4187  003C4C                     _Tmr_TmrBConfig:
  4188                           	opt stack 15
  4189                           
  4190                           ;incstack = 0
  4191                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4192  003C4C  0100               	movlb	0	; () banked
  4193  003C4E  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4194                           
  4195                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4196  003C50  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4197  003C54  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4198  003C58  50DF               	movf	indf2,w,c
  4199  003C5A  0100               	movlb	0	; () banked
  4200  003C5C  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4201  003C5E  EE20 F001          	lfsr	2,1
  4202  003C62  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4203  003C64  26D9               	addwf	fsr2l,f,c
  4204  003C66  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4205  003C68  22DA               	addwfc	fsr2h,f,c
  4206  003C6A  50DF               	movf	indf2,w,c
  4207  003C6C  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4208  003C6E  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4209  003C70  EC06  F024         	call	_TmrBInit
  4210                           
  4211                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4212  003C74  0100               	movlb	0	; () banked
  4213  003C76  EE20 F002          	lfsr	2,2
  4214  003C7A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4215  003C7C  26D9               	addwf	fsr2l,f,c
  4216  003C7E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4217  003C80  22DA               	addwfc	fsr2h,f,c
  4218  003C82  04DE               	decf	postinc2,w,c
  4219  003C84  A4D8               	btfss	status,2,c
  4220  003C86  D00E               	goto	l546
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;tmr_drv.c: 277: {
  4224                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4225  003C88  EE20 F003          	lfsr	2,3
  4226  003C8C  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4227  003C8E  26D9               	addwf	fsr2l,f,c
  4228  003C90  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4229  003C92  22DA               	addwfc	fsr2h,f,c
  4230  003C94  50DF               	movf	indf2,w,c
  4231  003C96  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4232  003C98  0E01               	movlw	1
  4233  003C9A  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4234  003C9C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4235  003C9E  ECBF  F02B         	call	_Tmr_TmrBIrqSet
  4236                           
  4237                           ;tmr_drv.c: 280: }
  4238  003CA2  D00E               	goto	l547
  4239  003CA4                     l546:
  4240                           
  4241                           ;tmr_drv.c: 281: else
  4242                           ;tmr_drv.c: 282: {
  4243                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4244  003CA4  0100               	movlb	0	; () banked
  4245  003CA6  EE20 F003          	lfsr	2,3
  4246  003CAA  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4247  003CAC  26D9               	addwf	fsr2l,f,c
  4248  003CAE  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4249  003CB0  22DA               	addwfc	fsr2h,f,c
  4250  003CB2  50DF               	movf	indf2,w,c
  4251  003CB4  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4252  003CB6  0E00               	movlw	0
  4253  003CB8  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4254  003CBA  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4255  003CBC  ECBF  F02B         	call	_Tmr_TmrBIrqSet
  4256  003CC0                     l547:
  4257                           
  4258                           ;tmr_drv.c: 285: }
  4259                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4260  003CC0  0100               	movlb	0	; () banked
  4261  003CC2  EE20 F004          	lfsr	2,4
  4262  003CC6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4263  003CC8  26D9               	addwf	fsr2l,f,c
  4264  003CCA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4265  003CCC  22DA               	addwfc	fsr2h,f,c
  4266  003CCE  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4267  003CD2  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4268  003CD6  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4269  003CDA  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4270  003CDE  50DF               	movf	indf2,w,c
  4271  003CE0  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4272  003CE2  EE20 F001          	lfsr	2,1
  4273  003CE6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4274  003CE8  26D9               	addwf	fsr2l,f,c
  4275  003CEA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4276  003CEC  22DA               	addwfc	fsr2h,f,c
  4277  003CEE  50DF               	movf	indf2,w,c
  4278  003CF0  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4279  003CF2  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4280  003CF4  ECA3  F018         	call	_Tmr_TmrBPrSet
  4281                           
  4282                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4283  003CF8  0100               	movlb	0	; () banked
  4284  003CFA  EE20 F006          	lfsr	2,6
  4285  003CFE  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4286  003D00  26D9               	addwf	fsr2l,f,c
  4287  003D02  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4288  003D04  22DA               	addwfc	fsr2h,f,c
  4289  003D06  04DE               	decf	postinc2,w,c
  4290  003D08  A4D8               	btfss	status,2,c
  4291  003D0A  0012               	return	
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;tmr_drv.c: 290: {
  4295                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4296  003D0C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4297  003D0E  EC75  F030         	call	_Tmr_StartTmr
  4298                           
  4299                           ;tmr_drv.c: 293: }
  4300  003D12  0012               	return	
  4301  003D14                     __end_of_Tmr_TmrBConfig:
  4302                           	opt stack 0
  4303                           tblptru	equ	0xFF8
  4304                           tblptrh	equ	0xFF7
  4305                           tblptrl	equ	0xFF6
  4306                           tablat	equ	0xFF5
  4307                           intcon	equ	0xFF2
  4308                           intcon2	equ	0xFF1
  4309                           intcon3	equ	0xFF0
  4310                           postinc0	equ	0xFEE
  4311                           wreg	equ	0xFE8
  4312                           postdec1	equ	0xFE5
  4313                           fsr1h	equ	0xFE2
  4314                           fsr1l	equ	0xFE1
  4315                           indf2	equ	0xFDF
  4316                           postinc2	equ	0xFDE
  4317                           postdec2	equ	0xFDD
  4318                           fsr2h	equ	0xFDA
  4319                           fsr2l	equ	0xFD9
  4320                           status	equ	0xFD8
  4321                           
  4322 ;; *************** function _Tmr_TmrBPrSet *****************
  4323 ;; Defined at:
  4324 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  TmrNumb         1    wreg     unsigned char 
  4327 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4328 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4329 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4332 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4333 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      enum E7736
  4336 ;; Registers used:
  4337 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4343 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4344 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4346 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4347 ;;Total ram usage:       10 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; Hardware stack levels required when called:   12
  4350 ;; This function calls:
  4351 ;;		___lldiv
  4352 ;;		___lmul
  4353 ;; This function is called by:
  4354 ;;		_Tmr_TmrBConfig
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text9
  4359  003146                     __ptext9:
  4360                           	opt stack 0
  4361  003146                     _Tmr_TmrBPrSet:
  4362                           	opt stack 15
  4363                           
  4364                           ;incstack = 0
  4365                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4366  003146  0100               	movlb	0	; () banked
  4367  003148  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4368                           
  4369                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4370                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4371  00314A  0E00               	movlw	0
  4372  00314C  0100               	movlb	0	; () banked
  4373  00314E  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4374  003150  0E00               	movlw	0
  4375  003152  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4376  003154  0E00               	movlw	0
  4377  003156  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4378  003158  0E00               	movlw	0
  4379  00315A  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4383  00315C  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4384  00315E  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4385  003160  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4386  003164  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4387  003168  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4388  00316A  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4389  00316C  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4390  003170  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4391  003174  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4392  003176  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4393  003178  EC7A  F029         	call	___lmul	;wreg free
  4394  00317C  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4395  003180  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4396  003184  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4397  003188  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4398                           
  4399                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4400  00318C  0E00               	movlw	0
  4401  00318E  0100               	movlb	0	; () banked
  4402  003190  6F89               	movwf	___lldiv@dividend& (0+255),b
  4403  003192  0E1B               	movlw	27
  4404  003194  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4405  003196  0EB7               	movlw	183
  4406  003198  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4407  00319A  0E00               	movlw	0
  4408  00319C  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4409  00319E  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4410  0031A2  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4411  0031A6  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4412  0031AA  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4413  0031AE  EC90  F026         	call	___lldiv	;wreg free
  4414  0031B2  0100               	movlb	0	; () banked
  4415  0031B4  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4416  0031B6  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4417  0031B8  E13A               	bnz	l14176
  4418  0031BA  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4419  0031BC  A0D8               	btfss	status,0,c
  4420  0031BE  D02D               	goto	l529
  4421  0031C0  D036               	goto	l528
  4422  0031C2                     
  4423                           ; BSR set to: 0
  4424                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4425                           
  4426                           ; BSR set to: 0
  4427  0031C2  0E00               	movlw	0
  4428  0031C4  6F89               	movwf	___lldiv@dividend& (0+255),b
  4429  0031C6  0E1B               	movlw	27
  4430  0031C8  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4431  0031CA  0EB7               	movlw	183
  4432  0031CC  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4433  0031CE  0E00               	movlw	0
  4434  0031D0  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4435  0031D2  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4436  0031D6  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4437  0031DA  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4438  0031DE  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4439  0031E2  EC90  F026         	call	___lldiv	;wreg free
  4440  0031E6  0100               	movlb	0	; () banked
  4441  0031E8  5189               	movf	?___lldiv& (0+255),w,b
  4442  0031EA  6ECB               	movwf	4043,c	;volatile
  4443                           
  4444                           ;tmr_drv.c: 210: break;
  4445  0031EC  D01D               	goto	l531
  4446  0031EE                     
  4447                           ; BSR set to: 0
  4448                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4449                           
  4450                           ; BSR set to: 0
  4451  0031EE  0E00               	movlw	0
  4452  0031F0  6F89               	movwf	___lldiv@dividend& (0+255),b
  4453  0031F2  0E1B               	movlw	27
  4454  0031F4  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4455  0031F6  0EB7               	movlw	183
  4456  0031F8  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4457  0031FA  0E00               	movlw	0
  4458  0031FC  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4459  0031FE  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4460  003202  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4461  003206  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4462  00320A  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4463  00320E  EC90  F026         	call	___lldiv	;wreg free
  4464  003212  0100               	movlb	0	; () banked
  4465  003214  5189               	movf	?___lldiv& (0+255),w,b
  4466  003216  6E77               	movwf	3959,c	;volatile
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;tmr_drv.c: 219: }
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;tmr_drv.c: 218: break;
  4473                           
  4474                           ;tmr_drv.c: 217: default:
  4475                           
  4476                           ;tmr_drv.c: 215: break;
  4477  003218  D007               	goto	l531
  4478  00321A                     l529:
  4479                           
  4480                           ; BSR set to: 0
  4481                           
  4482                           ; BSR set to: 0
  4483  00321A  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4484                           
  4485                           ; Switch size 1, requested type "space"
  4486                           ; Number of cases is 2, Range of values is 2 to 4
  4487                           ; switch strategies available:
  4488                           ; Name         Instructions Cycles
  4489                           ; simple_byte            7     4 (average)
  4490                           ;	Chosen strategy is simple_byte
  4491  00321C  0A02               	xorlw	2	; case 2
  4492  00321E  B4D8               	btfsc	status,2,c
  4493  003220  D7D0               	goto	l530
  4494  003222  0A06               	xorlw	6	; case 4
  4495  003224  B4D8               	btfsc	status,2,c
  4496  003226  D7E3               	goto	l532
  4497  003228                     l531:
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4501                           
  4502                           ; BSR set to: 0
  4503  003228  0E00               	movlw	0
  4504  00322A  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4505                           
  4506                           ;tmr_drv.c: 223: }
  4507  00322C  0012               	return	
  4508  00322E                     l528:
  4509  00322E                     l14176:
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;tmr_drv.c: 224: else
  4513                           ;tmr_drv.c: 225: {
  4514                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4515  00322E  0E01               	movlw	1
  4516  003230  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4517                           
  4518                           ; BSR set to: 0
  4519  003232  0012               	return	
  4520  003234                     __end_of_Tmr_TmrBPrSet:
  4521                           	opt stack 0
  4522                           tblptru	equ	0xFF8
  4523                           tblptrh	equ	0xFF7
  4524                           tblptrl	equ	0xFF6
  4525                           tablat	equ	0xFF5
  4526                           prodh	equ	0xFF4
  4527                           prodl	equ	0xFF3
  4528                           intcon	equ	0xFF2
  4529                           intcon2	equ	0xFF1
  4530                           intcon3	equ	0xFF0
  4531                           postinc0	equ	0xFEE
  4532                           wreg	equ	0xFE8
  4533                           postdec1	equ	0xFE5
  4534                           fsr1h	equ	0xFE2
  4535                           fsr1l	equ	0xFE1
  4536                           indf2	equ	0xFDF
  4537                           postinc2	equ	0xFDE
  4538                           postdec2	equ	0xFDD
  4539                           fsr2h	equ	0xFDA
  4540                           fsr2l	equ	0xFD9
  4541                           status	equ	0xFD8
  4542                           
  4543 ;; *************** function _Tmr_TmrBIrqSet *****************
  4544 ;; Defined at:
  4545 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  TmrNumb         1    wreg     unsigned char 
  4548 ;;  Priority        1   29[BANK0 ] enum E7716
  4549 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4561 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4562 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4564 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4565 ;;Total ram usage:        3 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:   11
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_Tmr_TmrBConfig
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text10
  4576  00577E                     __ptext10:
  4577                           	opt stack 0
  4578  00577E                     _Tmr_TmrBIrqSet:
  4579                           	opt stack 16
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;incstack = 0
  4583                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4584  00577E  0100               	movlb	0	; () banked
  4585  005780  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4586                           
  4587                           ;tmr_drv.c: 156: switch (TmrNumb)
  4588  005782  D01A               	goto	l520
  4589  005784                     l521:
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4593  005784  929E               	bcf	3998,1,c	;volatile
  4594                           
  4595                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4596  005786  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4597  005788  D002               	bra	u8355
  4598  00578A  929F               	bcf	3999,1,c	;volatile
  4599  00578C  D001               	bra	u8356
  4600  00578E                     u8355:
  4601  00578E  829F               	bsf	3999,1,c	;volatile
  4602  005790                     u8356:
  4603                           
  4604                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4605  005790  0100               	movlb	0	; () banked
  4606  005792  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4607  005794  D002               	bra	u8365
  4608  005796  929D               	bcf	3997,1,c	;volatile
  4609  005798  D001               	bra	u8366
  4610  00579A                     u8365:
  4611  00579A  829D               	bsf	3997,1,c	;volatile
  4612  00579C                     u8366:
  4613                           
  4614                           ;tmr_drv.c: 165: break;
  4615  00579C  0012               	return	
  4616  00579E                     l523:
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4620  00579E  96A4               	bcf	4004,3,c	;volatile
  4621                           
  4622                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4623  0057A0  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4624  0057A2  D002               	bra	u8375
  4625  0057A4  96A5               	bcf	4005,3,c	;volatile
  4626  0057A6  D001               	bra	u8376
  4627  0057A8                     u8375:
  4628  0057A8  86A5               	bsf	4005,3,c	;volatile
  4629  0057AA                     u8376:
  4630                           
  4631                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4632  0057AA  0100               	movlb	0	; () banked
  4633  0057AC  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4634  0057AE  D002               	bra	u8385
  4635  0057B0  96A3               	bcf	4003,3,c	;volatile
  4636  0057B2  D001               	bra	u8386
  4637  0057B4                     u8385:
  4638  0057B4  86A3               	bsf	4003,3,c	;volatile
  4639  0057B6                     u8386:
  4640                           
  4641                           ;tmr_drv.c: 178: }
  4642                           
  4643                           ;tmr_drv.c: 177: break;
  4644                           
  4645                           ;tmr_drv.c: 176: default:
  4646                           
  4647                           ;tmr_drv.c: 174: break;
  4648  0057B6  0012               	return	
  4649  0057B8                     l520:
  4650  0057B8  0100               	movlb	0	; () banked
  4651  0057BA  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4652                           
  4653                           ; Switch size 1, requested type "space"
  4654                           ; Number of cases is 2, Range of values is 2 to 4
  4655                           ; switch strategies available:
  4656                           ; Name         Instructions Cycles
  4657                           ; simple_byte            7     4 (average)
  4658                           ;	Chosen strategy is simple_byte
  4659  0057BC  0A02               	xorlw	2	; case 2
  4660  0057BE  B4D8               	btfsc	status,2,c
  4661  0057C0  D7E1               	goto	l521
  4662  0057C2  0A06               	xorlw	6	; case 4
  4663  0057C4  A4D8               	btfss	status,2,c
  4664  0057C6  0012               	return	
  4665  0057C8  D7EA               	goto	l523
  4666  0057CA                     __end_of_Tmr_TmrBIrqSet:
  4667                           	opt stack 0
  4668                           tblptru	equ	0xFF8
  4669                           tblptrh	equ	0xFF7
  4670                           tblptrl	equ	0xFF6
  4671                           tablat	equ	0xFF5
  4672                           prodh	equ	0xFF4
  4673                           prodl	equ	0xFF3
  4674                           intcon	equ	0xFF2
  4675                           intcon2	equ	0xFF1
  4676                           intcon3	equ	0xFF0
  4677                           postinc0	equ	0xFEE
  4678                           wreg	equ	0xFE8
  4679                           postdec1	equ	0xFE5
  4680                           fsr1h	equ	0xFE2
  4681                           fsr1l	equ	0xFE1
  4682                           indf2	equ	0xFDF
  4683                           postinc2	equ	0xFDE
  4684                           postdec2	equ	0xFDD
  4685                           fsr2h	equ	0xFDA
  4686                           fsr2l	equ	0xFD9
  4687                           status	equ	0xFD8
  4688                           
  4689 ;; *************** function _Tmr_StartTmr *****************
  4690 ;; Defined at:
  4691 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  TmrNumb         1    wreg     unsigned char 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      void 
  4698 ;; Registers used:
  4699 ;;		wreg, status,2, status,0
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4706 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4708 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4709 ;;Total ram usage:        1 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:   11
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		_Tmr_TmrBConfig
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text11
  4720  0060EA                     __ptext11:
  4721                           	opt stack 0
  4722  0060EA                     _Tmr_StartTmr:
  4723                           	opt stack 16
  4724                           
  4725                           ;incstack = 0
  4726                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4727  0060EA  0100               	movlb	0	; () banked
  4728  0060EC  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4729                           
  4730                           ;tmr_drv.c: 245: switch (TmrNumb)
  4731  0060EE  D004               	goto	l538
  4732  0060F0                     l539:
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4736  0060F0  84CA               	bsf	4042,2,c	;volatile
  4737                           
  4738                           ;tmr_drv.c: 250: break;
  4739  0060F2  0012               	return	
  4740  0060F4                     l541:
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4744  0060F4  8476               	bsf	3958,2,c	;volatile
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;tmr_drv.c: 259: }
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;tmr_drv.c: 258: break;
  4751                           
  4752                           ;tmr_drv.c: 257: default:
  4753                           
  4754                           ;tmr_drv.c: 255: break;
  4755  0060F6  0012               	return	
  4756  0060F8                     l538:
  4757                           
  4758                           ; BSR set to: 0
  4759  0060F8  0100               	movlb	0	; () banked
  4760  0060FA  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4761                           
  4762                           ; Switch size 1, requested type "space"
  4763                           ; Number of cases is 2, Range of values is 2 to 4
  4764                           ; switch strategies available:
  4765                           ; Name         Instructions Cycles
  4766                           ; simple_byte            7     4 (average)
  4767                           ;	Chosen strategy is simple_byte
  4768  0060FC  0A02               	xorlw	2	; case 2
  4769  0060FE  B4D8               	btfsc	status,2,c
  4770  006100  D7F7               	goto	l539
  4771  006102  0A06               	xorlw	6	; case 4
  4772  006104  A4D8               	btfss	status,2,c
  4773  006106  0012               	return	
  4774  006108  D7F5               	goto	l541
  4775  00610A                     __end_of_Tmr_StartTmr:
  4776                           	opt stack 0
  4777                           tblptru	equ	0xFF8
  4778                           tblptrh	equ	0xFF7
  4779                           tblptrl	equ	0xFF6
  4780                           tablat	equ	0xFF5
  4781                           prodh	equ	0xFF4
  4782                           prodl	equ	0xFF3
  4783                           intcon	equ	0xFF2
  4784                           intcon2	equ	0xFF1
  4785                           intcon3	equ	0xFF0
  4786                           postinc0	equ	0xFEE
  4787                           wreg	equ	0xFE8
  4788                           postdec1	equ	0xFE5
  4789                           fsr1h	equ	0xFE2
  4790                           fsr1l	equ	0xFE1
  4791                           indf2	equ	0xFDF
  4792                           postinc2	equ	0xFDE
  4793                           postdec2	equ	0xFDD
  4794                           fsr2h	equ	0xFDA
  4795                           fsr2l	equ	0xFD9
  4796                           status	equ	0xFD8
  4797                           
  4798 ;; *************** function _TmrBInit *****************
  4799 ;; Defined at:
  4800 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  TmrNumb         1    wreg     unsigned char 
  4803 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4804 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      void 
  4809 ;; Registers used:
  4810 ;;		wreg, status,2, status,0
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4816 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4819 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4820 ;;Total ram usage:        4 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; Hardware stack levels required when called:   11
  4823 ;; This function calls:
  4824 ;;		Nothing
  4825 ;; This function is called by:
  4826 ;;		_Tmr_TmrBConfig
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           	psect	text12
  4831  00480C                     __ptext12:
  4832                           	opt stack 0
  4833  00480C                     _TmrBInit:
  4834                           	opt stack 16
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;incstack = 0
  4838                           ;TmrBInit@TmrNumb stored from wreg
  4839  00480C  0100               	movlb	0	; () banked
  4840  00480E  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4841                           
  4842                           ;tmr_drv.c: 75: switch (TmrNumb)
  4843  004810  D03F               	goto	l500
  4844  004812                     l503:
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4848  004812  90CA               	bcf	4042,0,c	;volatile
  4849  004814  D001               	goto	L1
  4850  004816                     l505:
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4854  004816  80CA               	bsf	4042,0,c	;volatile
  4855  004818                     L1:
  4856                           
  4857                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4858  004818  92CA               	bcf	4042,1,c	;volatile
  4859                           
  4860                           ;tmr_drv.c: 91: break;
  4861  00481A  D00E               	goto	l504
  4862  00481C                     l506:
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4866  00481C  80CA               	bsf	4042,0,c	;volatile
  4867                           
  4868                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4869  00481E  82CA               	bsf	4042,1,c	;volatile
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;tmr_drv.c: 100: }
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;tmr_drv.c: 99: break;
  4876                           
  4877                           ;tmr_drv.c: 98: default:
  4878                           
  4879                           ;tmr_drv.c: 96: break;
  4880  004820  D00B               	goto	l504
  4881  004822                     
  4882                           ; BSR set to: 0
  4883  004822  0100               	movlb	0	; () banked
  4884  004824  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4885                           
  4886                           ; Switch size 1, requested type "space"
  4887                           ; Number of cases is 3, Range of values is 1 to 16
  4888                           ; switch strategies available:
  4889                           ; Name         Instructions Cycles
  4890                           ; simple_byte           10     6 (average)
  4891                           ;	Chosen strategy is simple_byte
  4892  004826  0A01               	xorlw	1	; case 1
  4893  004828  B4D8               	btfsc	status,2,c
  4894  00482A  D7F3               	goto	l503
  4895  00482C  0A05               	xorlw	5	; case 4
  4896  00482E  B4D8               	btfsc	status,2,c
  4897  004830  D7F2               	goto	l505
  4898  004832  0A14               	xorlw	20	; case 16
  4899  004834  B4D8               	btfsc	status,2,c
  4900  004836  D7F2               	goto	l506
  4901  004838                     l504:
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4905                           
  4906                           ; BSR set to: 0
  4907  004838  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4908  00483C  0EFF               	movlw	255
  4909  00483E  277F               	addwf	??_TmrBInit& (0+255),f,b
  4910  004840  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4911  004842  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4912  004844  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4913  004846  50CA               	movf	4042,w,c	;volatile
  4914  004848  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4915  00484A  0B87               	andlw	-121
  4916  00484C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4917  00484E  6ECA               	movwf	4042,c	;volatile
  4918                           
  4919                           ;tmr_drv.c: 104: break;
  4920  004850  0012               	return	
  4921  004852                     l511:
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4925  004852  9076               	bcf	3958,0,c	;volatile
  4926  004854  D001               	goto	L2
  4927  004856                     l513:
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4931  004856  8076               	bsf	3958,0,c	;volatile
  4932  004858                     L2:
  4933                           
  4934                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4935  004858  9276               	bcf	3958,1,c	;volatile
  4936                           
  4937                           ;tmr_drv.c: 120: break;
  4938  00485A  D00D               	goto	l512
  4939  00485C                     l514:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4943  00485C  8076               	bsf	3958,0,c	;volatile
  4944                           
  4945                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4946  00485E  8276               	bsf	3958,1,c	;volatile
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;tmr_drv.c: 129: }
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;tmr_drv.c: 128: break;
  4953                           
  4954                           ;tmr_drv.c: 127: default:
  4955                           
  4956                           ;tmr_drv.c: 125: break;
  4957  004860  D00A               	goto	l512
  4958  004862                     
  4959                           ; BSR set to: 0
  4960                           
  4961                           ; BSR set to: 0
  4962  004862  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4963                           
  4964                           ; Switch size 1, requested type "space"
  4965                           ; Number of cases is 3, Range of values is 1 to 16
  4966                           ; switch strategies available:
  4967                           ; Name         Instructions Cycles
  4968                           ; simple_byte           10     6 (average)
  4969                           ;	Chosen strategy is simple_byte
  4970  004864  0A01               	xorlw	1	; case 1
  4971  004866  B4D8               	btfsc	status,2,c
  4972  004868  D7F4               	goto	l511
  4973  00486A  0A05               	xorlw	5	; case 4
  4974  00486C  B4D8               	btfsc	status,2,c
  4975  00486E  D7F3               	goto	l513
  4976  004870  0A14               	xorlw	20	; case 16
  4977  004872  B4D8               	btfsc	status,2,c
  4978  004874  D7F3               	goto	l514
  4979  004876                     l512:
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4983                           
  4984                           ; BSR set to: 0
  4985  004876  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4986  00487A  0EFF               	movlw	255
  4987  00487C  277F               	addwf	??_TmrBInit& (0+255),f,b
  4988  00487E  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4989  004880  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4990  004882  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4991  004884  5076               	movf	3958,w,c	;volatile
  4992  004886  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4993  004888  0B87               	andlw	-121
  4994  00488A  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4995  00488C  6E76               	movwf	3958,c	;volatile
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;tmr_drv.c: 137: }
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;tmr_drv.c: 136: break;
  5002                           
  5003                           ;tmr_drv.c: 135: default:
  5004                           
  5005                           ;tmr_drv.c: 133: break;
  5006  00488E  0012               	return	
  5007  004890                     l500:
  5008                           
  5009                           ; BSR set to: 0
  5010  004890  0100               	movlb	0	; () banked
  5011  004892  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5012                           
  5013                           ; Switch size 1, requested type "space"
  5014                           ; Number of cases is 2, Range of values is 2 to 4
  5015                           ; switch strategies available:
  5016                           ; Name         Instructions Cycles
  5017                           ; simple_byte            7     4 (average)
  5018                           ;	Chosen strategy is simple_byte
  5019  004894  0A02               	xorlw	2	; case 2
  5020  004896  B4D8               	btfsc	status,2,c
  5021  004898  D7C4               	goto	l502
  5022  00489A  0A06               	xorlw	6	; case 4
  5023  00489C  A4D8               	btfss	status,2,c
  5024  00489E  0012               	return	
  5025  0048A0  D7E0               	goto	l510
  5026  0048A2                     __end_of_TmrBInit:
  5027                           	opt stack 0
  5028                           tblptru	equ	0xFF8
  5029                           tblptrh	equ	0xFF7
  5030                           tblptrl	equ	0xFF6
  5031                           tablat	equ	0xFF5
  5032                           prodh	equ	0xFF4
  5033                           prodl	equ	0xFF3
  5034                           intcon	equ	0xFF2
  5035                           intcon2	equ	0xFF1
  5036                           intcon3	equ	0xFF0
  5037                           postinc0	equ	0xFEE
  5038                           wreg	equ	0xFE8
  5039                           postdec1	equ	0xFE5
  5040                           fsr1h	equ	0xFE2
  5041                           fsr1l	equ	0xFE1
  5042                           indf2	equ	0xFDF
  5043                           postinc2	equ	0xFDE
  5044                           postdec2	equ	0xFDD
  5045                           fsr2h	equ	0xFDA
  5046                           fsr2l	equ	0xFD9
  5047                           status	equ	0xFD8
  5048                           
  5049 ;; *************** function _Sch_MainScheduler *****************
  5050 ;; Defined at:
  5051 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;		None
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;		None
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  1    wreg      void 
  5058 ;; Registers used:
  5059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5069 ;;Total ram usage:        0 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; Hardware stack levels required when called:   22
  5072 ;; This function calls:
  5073 ;;		_InitializeTasks
  5074 ;;		_ScheduleTasks
  5075 ;; This function is called by:
  5076 ;;		_main
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           	psect	text13
  5081  006148                     __ptext13:
  5082                           	opt stack 0
  5083  006148                     _Sch_MainScheduler:
  5084                           	opt stack 8
  5085                           
  5086                           ;os_sched.c: 178: InitializeTasks();
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;incstack = 0
  5090  006148  EC13  F027         	call	_InitializeTasks	;wreg free
  5091                           
  5092                           ;os_sched.c: 180: SystemState = RunningState;
  5093  00614C  0E01               	movlw	1
  5094  00614E  0100               	movlb	0	; () banked
  5095  006150  6FD5               	movwf	_SystemState& (0+255),b
  5096  006152                     
  5097                           ;os_sched.c: 188: {
  5098                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5099                           
  5100                           ; BSR set to: 0
  5101  006152  0102               	movlb	2	; () banked
  5102  006154  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5103  006156  A4D8               	btfss	status,2,c
  5104  006158  D7FC               	goto	l790
  5105                           
  5106                           ; BSR set to: 2
  5107                           ;os_sched.c: 191: {
  5108                           ;os_sched.c: 196: ScheduleTasks();
  5109  00615A  EC71  F016         	call	_ScheduleTasks	;wreg free
  5110                           
  5111                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5112  00615E  0E01               	movlw	1
  5113  006160  0102               	movlb	2	; () banked
  5114  006162  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5115                           
  5116                           ; BSR set to: 2
  5117                           
  5118                           ; BSR set to: 2
  5119  006164  D7F6               	goto	l790
  5120  006166                     __end_of_Sch_MainScheduler:
  5121                           	opt stack 0
  5122                           tblptru	equ	0xFF8
  5123                           tblptrh	equ	0xFF7
  5124                           tblptrl	equ	0xFF6
  5125                           tablat	equ	0xFF5
  5126                           prodh	equ	0xFF4
  5127                           prodl	equ	0xFF3
  5128                           intcon	equ	0xFF2
  5129                           intcon2	equ	0xFF1
  5130                           intcon3	equ	0xFF0
  5131                           postinc0	equ	0xFEE
  5132                           wreg	equ	0xFE8
  5133                           postdec1	equ	0xFE5
  5134                           fsr1h	equ	0xFE2
  5135                           fsr1l	equ	0xFE1
  5136                           indf2	equ	0xFDF
  5137                           postinc2	equ	0xFDE
  5138                           postdec2	equ	0xFDD
  5139                           fsr2h	equ	0xFDA
  5140                           fsr2l	equ	0xFD9
  5141                           status	equ	0xFD8
  5142                           
  5143 ;; *************** function _ScheduleTasks *****************
  5144 ;; Defined at:
  5145 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;		None
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  ActiveTaskIn    1    0[BANK3 ] unsigned char 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      void 
  5152 ;; Registers used:
  5153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5160 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5161 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5162 ;;      Totals:         0       0       0       0       1       4       0       0       0       0       0       0       
      +0       0       0       0
  5163 ;;Total ram usage:        5 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:   21
  5166 ;; This function calls:
  5167 ;;		_I2cSlv_MainTask
  5168 ;;		_Led_MainTask
  5169 ;;		_MdmHttp_MainTask
  5170 ;;		_Mdm_DrvMainFn
  5171 ;;		_Mdm_MainTask
  5172 ;;		_MyApp_Task
  5173 ;;		_Rtcm_MainTask
  5174 ;;		_Term_MainTask
  5175 ;;		_UsbDevice_MainTask
  5176 ;;		_Wdg_MainTask
  5177 ;; This function is called by:
  5178 ;;		_Sch_MainScheduler
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text14
  5183  002CE2                     __ptext14:
  5184                           	opt stack 0
  5185  002CE2                     _ScheduleTasks:
  5186                           	opt stack 8
  5187                           
  5188                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5189                           
  5190                           ; BSR set to: 2
  5191                           ;incstack = 0
  5192  002CE2  0E00               	movlw	0
  5193  002CE4  0103               	movlb	3	; () banked
  5194  002CE6  6FFE               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5195                           
  5196                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5197  002CE8  0E00               	movlw	0
  5198  002CEA  6FFE               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5199  002CEC                     l15298:
  5200                           
  5201                           ; BSR set to: 3
  5202  002CEC  0E3D               	movlw	low _TaskNumber
  5203  002CEE  6EF6               	movwf	tblptrl,c
  5204  002CF0                     	if	1	;There is more than 1 active tblptr byte
  5205  002CF0  0EFC               	movlw	high _TaskNumber
  5206  002CF2  6EF7               	movwf	tblptrh,c
  5207  002CF4                     	endif
  5208  002CF4                     	if	0	;There are less than 3 active tblptr bytes
  5209  002CF4                     	endif
  5210  002CF4  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5211  002CF6  0104               	movlb	4	; () banked
  5212  002CF8  6FE8               	movwf	??_ScheduleTasks& (0+255),b
  5213  002CFA  6BE9               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5214  002CFC  0009               	tblrd		*+
  5215  002CFE  50F5               	movf	tablat,w,c
  5216  002D00  5DE8               	subwf	??_ScheduleTasks& (0+255),w,b
  5217  002D02  0009               	tblrd		*+
  5218  002D04  50F5               	movf	tablat,w,c
  5219  002D06  59E9               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5220  002D08  B0D8               	btfsc	status,0,c
  5221  002D0A  0012               	return	
  5222                           
  5223                           ; BSR set to: 4
  5224                           ;os_sched.c: 106: {
  5225                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5226                           
  5227                           ; BSR set to: 4
  5228                           
  5229                           ; BSR set to: 4
  5230  002D0C  0103               	movlb	3	; () banked
  5231  002D0E  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5232  002D10  0D08               	mullw	8
  5233  002D12  0E03               	movlw	3
  5234  002D14  26F3               	addwf	prodl,f,c
  5235  002D16  0E00               	movlw	0
  5236  002D18  22F4               	addwfc	prodh,f,c
  5237  002D1A  0EA4               	movlw	low _TaskTable
  5238  002D1C  24F3               	addwf	prodl,w,c
  5239  002D1E  6ED9               	movwf	fsr2l,c
  5240  002D20  0E05               	movlw	high _TaskTable
  5241  002D22  20F4               	addwfc	prodh,w,c
  5242  002D24  6EDA               	movwf	fsr2h,c
  5243  002D26  2ADE               	incf	postinc2,f,c
  5244  002D28  0E00               	movlw	0
  5245  002D2A  22DD               	addwfc	postdec2,f,c
  5246                           
  5247                           ; BSR set to: 3
  5248                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5249  002D2C  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5250  002D2E  0D08               	mullw	8
  5251  002D30  0E05               	movlw	5
  5252  002D32  26F3               	addwf	prodl,f,c
  5253  002D34  0E00               	movlw	0
  5254  002D36  22F4               	addwfc	prodh,f,c
  5255  002D38  0EA4               	movlw	low _TaskTable
  5256  002D3A  24F3               	addwf	prodl,w,c
  5257  002D3C  6ED9               	movwf	fsr2l,c
  5258  002D3E  0E05               	movlw	high _TaskTable
  5259  002D40  20F4               	addwfc	prodh,w,c
  5260  002D42  6EDA               	movwf	fsr2h,c
  5261  002D44  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5262  002D46  0D08               	mullw	8
  5263  002D48  0E03               	movlw	3
  5264  002D4A  26F3               	addwf	prodl,f,c
  5265  002D4C  0E00               	movlw	0
  5266  002D4E  22F4               	addwfc	prodh,f,c
  5267  002D50  0EA4               	movlw	low _TaskTable
  5268  002D52  24F3               	addwf	prodl,w,c
  5269  002D54  6EE1               	movwf	fsr1l,c
  5270  002D56  0E05               	movlw	high _TaskTable
  5271  002D58  20F4               	addwfc	prodh,w,c
  5272  002D5A  6EE2               	movwf	fsr1h,c
  5273  002D5C  50DE               	movf	postinc2,w,c
  5274  002D5E  5CE6               	subwf	postinc1,w,c
  5275  002D60  50DE               	movf	postinc2,w,c
  5276  002D62  58E6               	subwfb	postinc1,w,c
  5277  002D64  A0D8               	btfss	status,0,c
  5278  002D66  D04E               	goto	l775
  5279                           
  5280                           ; BSR set to: 3
  5281                           ;os_sched.c: 111: {
  5282                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5283  002D68  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5284  002D6A  0D08               	mullw	8
  5285  002D6C  0E03               	movlw	3
  5286  002D6E  26F3               	addwf	prodl,f,c
  5287  002D70  0E00               	movlw	0
  5288  002D72  22F4               	addwfc	prodh,f,c
  5289  002D74  0EA4               	movlw	low _TaskTable
  5290  002D76  24F3               	addwf	prodl,w,c
  5291  002D78  6ED9               	movwf	fsr2l,c
  5292  002D7A  0E05               	movlw	high _TaskTable
  5293  002D7C  20F4               	addwfc	prodh,w,c
  5294  002D7E  6EDA               	movwf	fsr2h,c
  5295  002D80  0E00               	movlw	0
  5296  002D82  6EDE               	movwf	postinc2,c
  5297  002D84  0E00               	movlw	0
  5298  002D86  6EDD               	movwf	postdec2,c
  5299                           
  5300                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5301  002D88  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5302  002D8A  0D08               	mullw	8
  5303  002D8C  0E02               	movlw	2
  5304  002D8E  26F3               	addwf	prodl,f,c
  5305  002D90  0E00               	movlw	0
  5306  002D92  22F4               	addwfc	prodh,f,c
  5307  002D94  0EA4               	movlw	low _TaskTable
  5308  002D96  24F3               	addwf	prodl,w,c
  5309  002D98  6ED9               	movwf	fsr2l,c
  5310  002D9A  0E05               	movlw	high _TaskTable
  5311  002D9C  20F4               	addwfc	prodh,w,c
  5312  002D9E  6EDA               	movwf	fsr2h,c
  5313  002DA0  0E01               	movlw	1
  5314  002DA2  6EDF               	movwf	indf2,c
  5315                           
  5316                           ; BSR set to: 3
  5317                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5318  002DA4  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5319  002DA6  0D08               	mullw	8
  5320  002DA8  0EA4               	movlw	low _TaskTable
  5321  002DAA  24F3               	addwf	prodl,w,c
  5322  002DAC  6ED9               	movwf	fsr2l,c
  5323  002DAE  0E05               	movlw	high _TaskTable
  5324  002DB0  20F4               	addwfc	prodh,w,c
  5325  002DB2  6EDA               	movwf	fsr2h,c
  5326  002DB4  D801               	call	u15008
  5327  002DB6  D017               	goto	u15009
  5328  002DB8                     u15008:
  5329  002DB8  0005               	push	
  5330  002DBA  6EFA               	movwf	pclath,c
  5331  002DBC  50DE               	movf	postinc2,w,c
  5332  002DBE  6EFD               	movwf	tosl,c
  5333  002DC0  50DE               	movf	postinc2,w,c
  5334  002DC2  6EFE               	movwf	tosh,c
  5335  002DC4  50F8               	movf	tblptru,w,c
  5336  002DC6  6EFF               	movwf	tosu,c
  5337  002DC8  50FA               	movf	pclath,w,c
  5338  002DCA  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5339  002DCC  0D08               	mullw	8
  5340  002DCE  0E07               	movlw	7
  5341  002DD0  26F3               	addwf	prodl,f,c
  5342  002DD2  0E00               	movlw	0
  5343  002DD4  22F4               	addwfc	prodh,f,c
  5344  002DD6  0EA4               	movlw	low _TaskTable
  5345  002DD8  24F3               	addwf	prodl,w,c
  5346  002DDA  6ED9               	movwf	fsr2l,c
  5347  002DDC  0E05               	movlw	high _TaskTable
  5348  002DDE  20F4               	addwfc	prodh,w,c
  5349  002DE0  6EDA               	movwf	fsr2h,c
  5350  002DE2  50DF               	movf	indf2,w,c
  5351  002DE4  0012               	return		;indir
  5352  002DE6                     u15009:
  5353                           
  5354                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5355  002DE6  0103               	movlb	3	; () banked
  5356  002DE8  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5357  002DEA  0D08               	mullw	8
  5358  002DEC  0E02               	movlw	2
  5359  002DEE  26F3               	addwf	prodl,f,c
  5360  002DF0  0E00               	movlw	0
  5361  002DF2  22F4               	addwfc	prodh,f,c
  5362  002DF4  0EA4               	movlw	low _TaskTable
  5363  002DF6  24F3               	addwf	prodl,w,c
  5364  002DF8  6ED9               	movwf	fsr2l,c
  5365  002DFA  0E05               	movlw	high _TaskTable
  5366  002DFC  20F4               	addwfc	prodh,w,c
  5367  002DFE  6EDA               	movwf	fsr2h,c
  5368  002E00  0E00               	movlw	0
  5369  002E02  6EDF               	movwf	indf2,c
  5370  002E04                     l775:
  5371                           
  5372                           ; BSR set to: 3
  5373                           
  5374                           ; BSR set to: 3
  5375                           
  5376                           ;os_sched.c: 117: else
  5377                           ;os_sched.c: 118: {
  5378                           
  5379                           ; BSR set to: 3
  5380  002E04  2BFE               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5381  002E06  D772               	goto	l15298
  5382  002E08                     __end_of_ScheduleTasks:
  5383                           	opt stack 0
  5384                           tosu	equ	0xFFF
  5385                           tosh	equ	0xFFE
  5386                           tosl	equ	0xFFD
  5387                           pclath	equ	0xFFA
  5388                           tblptru	equ	0xFF8
  5389                           tblptrh	equ	0xFF7
  5390                           tblptrl	equ	0xFF6
  5391                           tablat	equ	0xFF5
  5392                           prodh	equ	0xFF4
  5393                           prodl	equ	0xFF3
  5394                           intcon	equ	0xFF2
  5395                           intcon2	equ	0xFF1
  5396                           intcon3	equ	0xFF0
  5397                           postinc0	equ	0xFEE
  5398                           wreg	equ	0xFE8
  5399                           postinc1	equ	0xFE6
  5400                           postdec1	equ	0xFE5
  5401                           fsr1h	equ	0xFE2
  5402                           fsr1l	equ	0xFE1
  5403                           indf2	equ	0xFDF
  5404                           postinc2	equ	0xFDE
  5405                           postdec2	equ	0xFDD
  5406                           fsr2h	equ	0xFDA
  5407                           fsr2l	equ	0xFD9
  5408                           status	equ	0xFD8
  5409                           
  5410 ;; *************** function _InitializeTasks *****************
  5411 ;; Defined at:
  5412 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;		None
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  ActiveTaskIn    1    0[BANK4 ] unsigned char 
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  1    wreg      void 
  5419 ;; Registers used:
  5420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5427 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0
  5428 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  5429 ;;      Totals:         0       0       0       0       2       1       0       0       0       0       0       0       
      +0       0       0       0
  5430 ;;Total ram usage:        3 bytes
  5431 ;; Hardware stack levels used:    1
  5432 ;; Hardware stack levels required when called:   21
  5433 ;; This function calls:
  5434 ;;		_I2cSlv_MainTask
  5435 ;;		_Led_MainTask
  5436 ;;		_MdmHttp_MainTask
  5437 ;;		_Mdm_DrvMainFn
  5438 ;;		_Mdm_MainTask
  5439 ;;		_MyApp_Task
  5440 ;;		_Rtcm_MainTask
  5441 ;;		_Term_MainTask
  5442 ;;		_UsbDevice_MainTask
  5443 ;;		_Wdg_MainTask
  5444 ;; This function is called by:
  5445 ;;		_Sch_MainScheduler
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text15
  5450  004E26                     __ptext15:
  5451                           	opt stack 0
  5452  004E26                     _InitializeTasks:
  5453                           	opt stack 8
  5454                           
  5455                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5456                           
  5457                           ; BSR set to: 4
  5458                           ;incstack = 0
  5459  004E26  0E00               	movlw	0
  5460  004E28  0104               	movlb	4	; () banked
  5461  004E2A  6FE8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5462                           
  5463                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5464  004E2C  0E00               	movlw	0
  5465  004E2E  6FE8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5466  004E30                     l15286:
  5467                           
  5468                           ; BSR set to: 4
  5469  004E30  0E3D               	movlw	low _TaskNumber
  5470  004E32  6EF6               	movwf	tblptrl,c
  5471  004E34                     	if	1	;There is more than 1 active tblptr byte
  5472  004E34  0EFC               	movlw	high _TaskNumber
  5473  004E36  6EF7               	movwf	tblptrh,c
  5474  004E38                     	endif
  5475  004E38                     	if	0	;There are less than 3 active tblptr bytes
  5476  004E38                     	endif
  5477  004E38  51E8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5478  004E3A  0103               	movlb	3	; () banked
  5479  004E3C  6FFE               	movwf	??_InitializeTasks& (0+255),b
  5480  004E3E  6BFF               	clrf	(??_InitializeTasks+1)& (0+255),b
  5481  004E40  0009               	tblrd		*+
  5482  004E42  50F5               	movf	tablat,w,c
  5483  004E44  5DFE               	subwf	??_InitializeTasks& (0+255),w,b
  5484  004E46  0009               	tblrd		*+
  5485  004E48  50F5               	movf	tablat,w,c
  5486  004E4A  59FF               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5487  004E4C  B0D8               	btfsc	status,0,c
  5488  004E4E  0012               	return	
  5489                           
  5490                           ; BSR set to: 3
  5491                           ;os_sched.c: 86: {
  5492                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5493                           
  5494                           ; BSR set to: 3
  5495                           
  5496                           ; BSR set to: 3
  5497  004E50  0104               	movlb	4	; () banked
  5498  004E52  51E8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5499  004E54  0D08               	mullw	8
  5500  004E56  0EA4               	movlw	low _TaskTable
  5501  004E58  24F3               	addwf	prodl,w,c
  5502  004E5A  6ED9               	movwf	fsr2l,c
  5503  004E5C  0E05               	movlw	high _TaskTable
  5504  004E5E  20F4               	addwfc	prodh,w,c
  5505  004E60  6EDA               	movwf	fsr2h,c
  5506  004E62  D801               	call	u14968
  5507  004E64  D017               	goto	u14969
  5508  004E66                     u14968:
  5509  004E66  0005               	push	
  5510  004E68  6EFA               	movwf	pclath,c
  5511  004E6A  50DE               	movf	postinc2,w,c
  5512  004E6C  6EFD               	movwf	tosl,c
  5513  004E6E  50DE               	movf	postinc2,w,c
  5514  004E70  6EFE               	movwf	tosh,c
  5515  004E72  50F8               	movf	tblptru,w,c
  5516  004E74  6EFF               	movwf	tosu,c
  5517  004E76  50FA               	movf	pclath,w,c
  5518  004E78  51E8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5519  004E7A  0D08               	mullw	8
  5520  004E7C  0E07               	movlw	7
  5521  004E7E  26F3               	addwf	prodl,f,c
  5522  004E80  0E00               	movlw	0
  5523  004E82  22F4               	addwfc	prodh,f,c
  5524  004E84  0EA4               	movlw	low _TaskTable
  5525  004E86  24F3               	addwf	prodl,w,c
  5526  004E88  6ED9               	movwf	fsr2l,c
  5527  004E8A  0E05               	movlw	high _TaskTable
  5528  004E8C  20F4               	addwfc	prodh,w,c
  5529  004E8E  6EDA               	movwf	fsr2h,c
  5530  004E90  50DF               	movf	indf2,w,c
  5531  004E92  0012               	return		;indir
  5532  004E94                     u14969:
  5533  004E94  0104               	movlb	4	; () banked
  5534  004E96  2BE8               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5535  004E98  D7CB               	goto	l15286
  5536  004E9A                     __end_of_InitializeTasks:
  5537                           	opt stack 0
  5538                           tosu	equ	0xFFF
  5539                           tosh	equ	0xFFE
  5540                           tosl	equ	0xFFD
  5541                           pclath	equ	0xFFA
  5542                           tblptru	equ	0xFF8
  5543                           tblptrh	equ	0xFF7
  5544                           tblptrl	equ	0xFF6
  5545                           tablat	equ	0xFF5
  5546                           prodh	equ	0xFF4
  5547                           prodl	equ	0xFF3
  5548                           intcon	equ	0xFF2
  5549                           intcon2	equ	0xFF1
  5550                           intcon3	equ	0xFF0
  5551                           postinc0	equ	0xFEE
  5552                           wreg	equ	0xFE8
  5553                           postinc1	equ	0xFE6
  5554                           postdec1	equ	0xFE5
  5555                           fsr1h	equ	0xFE2
  5556                           fsr1l	equ	0xFE1
  5557                           indf2	equ	0xFDF
  5558                           postinc2	equ	0xFDE
  5559                           postdec2	equ	0xFDD
  5560                           fsr2h	equ	0xFDA
  5561                           fsr2l	equ	0xFD9
  5562                           status	equ	0xFD8
  5563                           
  5564 ;; *************** function _MyApp_Task *****************
  5565 ;; Defined at:
  5566 ;;		line 133 in file "../Source/c/04_App/app.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;  Options         1    wreg     unsigned char 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;  Options         1    0[COMRAM] unsigned char 
  5571 ;;  smsText        20    0        unsigned char [20]
  5572 ;;  cmpString       3    4[BANK1 ] unsigned char [3]
  5573 ;;  memoryResult    1    7[BANK1 ] enum E8114
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5584 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5586 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5587 ;;Total ram usage:        4 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:   19
  5590 ;; This function calls:
  5591 ;;		_ClearBuffer
  5592 ;;		_Eeprom_Read
  5593 ;;		_GetCallerNumber
  5594 ;;		_Led_SetLedBlinkTime
  5595 ;;		_Mdm_HangPhoneCall
  5596 ;;		_Mdm_IsRinging
  5597 ;;		_Mdm_IsSmsReceived
  5598 ;;		_Mdm_RequestSmsData
  5599 ;;		_StringCompare
  5600 ;;		_blinkForSeconds
  5601 ;;		_initFsm
  5602 ;; This function is called by:
  5603 ;;		_InitializeTasks
  5604 ;;		_ScheduleTasks
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           	psect	text16
  5609  002F2C                     __ptext16:
  5610                           	opt stack 0
  5611  002F2C                     _MyApp_Task:
  5612                           	opt stack 9
  5613                           
  5614                           ;app.c: 135: static UINT8 phone[] = {'+', '3', '9', '0', '1', '2', '3', '4', '5', '6', '
      +                          7', '8', '9', '\0'};
  5615                           ;app.c: 137: static uint16_t blinkTicks = 0xFFFF;
  5616                           ;app.c: 138: static uint8_t blinkSeconds = 0;
  5617                           ;app.c: 140: uint8_t smsText[((UINT8)(20))];
  5618                           ;app.c: 141: uint8_t cmpString[] = {'c', 'a', 't'};
  5619                           
  5620                           ; BSR set to: 3
  5621                           ;incstack = 0
  5622  002F2C  C3CB  F104         	movff	MyApp_Task@F9003,MyApp_Task@cmpString
  5623  002F30  C3CC  F105         	movff	MyApp_Task@F9003+1,MyApp_Task@cmpString+1
  5624  002F34  C3CD  F106         	movff	MyApp_Task@F9003+2,MyApp_Task@cmpString+2
  5625                           
  5626                           ;app.c: 143: static uint8_t memoryFlag = 0;
  5627                           ;app.c: 144: I2cOpStsType memoryResult = OP_COMPLETE;
  5628  002F38  0E01               	movlw	1
  5629  002F3A  0101               	movlb	1	; () banked
  5630  002F3C  6F07               	movwf	MyApp_Task@memoryResult& (0+255),b
  5631                           
  5632                           ;app.c: 146: switch (SystemState)
  5633  002F3E  D07A               	goto	l2546
  5634  002F40                     
  5635                           ;app.c: 151: Led_SetLedBlinkTime(1u,100,900);
  5636                           
  5637                           ; BSR set to: 1
  5638  002F40  0E00               	movlw	0
  5639  002F42  0100               	movlb	0	; () banked
  5640  002F44  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5641  002F46  0E64               	movlw	100
  5642  002F48  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5643  002F4A  0E03               	movlw	3
  5644  002F4C  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5645  002F4E  0E84               	movlw	132
  5646  002F50  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5647  002F52  0E01               	movlw	1
  5648  002F54  EC7C  F02A         	call	_Led_SetLedBlinkTime
  5649                           
  5650                           ;app.c: 152: break;
  5651  002F58  0012               	return	
  5652  002F5A                     
  5653                           ;app.c: 156: if (initFsm())
  5654  002F5A  EC09  F02C         	call	_initFsm	;wreg free
  5655  002F5E  0900               	iorlw	0
  5656  002F60  B4D8               	btfsc	status,2,c
  5657  002F62  0012               	return	
  5658                           
  5659                           ;app.c: 157: {
  5660                           ;app.c: 159: if (Mdm_IsRinging())
  5661  002F64  ECEB  F02F         	call	_Mdm_IsRinging	;wreg free
  5662  002F68  0900               	iorlw	0
  5663  002F6A  B4D8               	btfsc	status,2,c
  5664  002F6C  D025               	goto	l2551
  5665                           
  5666                           ;app.c: 160: {
  5667                           ;app.c: 161: blinkTicks = 0;
  5668  002F6E  0E00               	movlw	0
  5669  002F70  0103               	movlb	3	; () banked
  5670  002F72  6FFD               	movwf	(MyApp_Task@blinkTicks+1)& (0+255),b
  5671  002F74  0E00               	movlw	0
  5672  002F76  6FFC               	movwf	MyApp_Task@blinkTicks& (0+255),b
  5673                           
  5674                           ; BSR set to: 3
  5675                           ;app.c: 162: if (StringCompare(phone, GetCallerNumber(), 14))
  5676  002F78  0EDA               	movlw	low MyApp_Task@phone
  5677  002F7A  0100               	movlb	0	; () banked
  5678  002F7C  6F85               	movwf	StringCompare@String1& (0+255),b
  5679  002F7E  0E04               	movlw	high MyApp_Task@phone
  5680  002F80  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
  5681  002F82  EC50  F02E         	call	_GetCallerNumber	;wreg free
  5682  002F86  C083  F087         	movff	?_GetCallerNumber,StringCompare@String2
  5683  002F8A  C084  F088         	movff	?_GetCallerNumber+1,StringCompare@String2+1
  5684  002F8E  0E00               	movlw	0
  5685  002F90  0100               	movlb	0	; () banked
  5686  002F92  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
  5687  002F94  0E0E               	movlw	14
  5688  002F96  6F89               	movwf	StringCompare@Len& (0+255),b
  5689  002F98  ECD0  F02A         	call	_StringCompare	;wreg free
  5690  002F9C  0900               	iorlw	0
  5691  002F9E  B4D8               	btfsc	status,2,c
  5692  002FA0  D003               	goto	l2552
  5693                           
  5694                           ;app.c: 163: {
  5695                           ;app.c: 164: blinkSeconds = 5;
  5696  002FA2  0E05               	movlw	5
  5697  002FA4  0101               	movlb	1	; () banked
  5698  002FA6  6FD6               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5699  002FA8                     l2552:
  5700                           
  5701                           ;app.c: 165: }
  5702                           ;app.c: 166: blinkSeconds = 3;
  5703  002FA8  0E03               	movlw	3
  5704  002FAA  0101               	movlb	1	; () banked
  5705  002FAC  6FD6               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5706                           
  5707                           ; BSR set to: 1
  5708                           ;app.c: 167: Mdm_HangPhoneCall();
  5709  002FAE  EC58  F031         	call	_Mdm_HangPhoneCall	;wreg free
  5710                           
  5711                           ;app.c: 168: memoryFlag = 1;
  5712  002FB2  0E01               	movlw	1
  5713  002FB4  0100               	movlb	0	; () banked
  5714  002FB6  6FC4               	movwf	MyApp_Task@memoryFlag& (0+255),b
  5715  002FB8                     l2551:
  5716                           
  5717                           ;app.c: 169: }
  5718                           ;app.c: 170: if (Mdm_IsSmsReceived())
  5719                           
  5720                           ; BSR set to: 0
  5721  002FB8  ECD9  F02F         	call	_Mdm_IsSmsReceived	;wreg free
  5722  002FBC  0900               	iorlw	0
  5723  002FBE  A4D8               	btfss	status,2,c
  5724                           
  5725                           ;app.c: 171: {
  5726                           ;app.c: 172: Mdm_RequestSmsData();
  5727  002FC0  EC7A  F031         	call	_Mdm_RequestSmsData	;wreg free
  5728                           
  5729                           ;app.c: 173: }
  5730                           ;app.c: 190: blinkForSeconds(blinkSeconds, &blinkTicks);
  5731  002FC4  0EFC               	movlw	low MyApp_Task@blinkTicks
  5732  002FC6  0100               	movlb	0	; () banked
  5733  002FC8  6F93               	movwf	blinkForSeconds@blinkTicks& (0+255),b
  5734  002FCA  0E03               	movlw	high MyApp_Task@blinkTicks
  5735  002FCC  6F94               	movwf	(blinkForSeconds@blinkTicks+1)& (0+255),b
  5736  002FCE  0101               	movlb	1	; () banked
  5737  002FD0  51D6               	movf	MyApp_Task@blinkSeconds& (0+255),w,b
  5738  002FD2  EC16  F02E         	call	_blinkForSeconds
  5739                           
  5740                           ;app.c: 192: if (memoryFlag == 1)
  5741  002FD6  0100               	movlb	0	; () banked
  5742  002FD8  05C4               	decf	MyApp_Task@memoryFlag& (0+255),w,b
  5743  002FDA  A4D8               	btfss	status,2,c
  5744  002FDC  D00D               	goto	l2554
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;app.c: 193: {
  5748                           ;app.c: 195: ClearBuffer(phone, 14);
  5749  002FDE  0EDA               	movlw	low MyApp_Task@phone
  5750  002FE0  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
  5751  002FE2  0E04               	movlw	high MyApp_Task@phone
  5752  002FE4  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
  5753  002FE6  0E00               	movlw	0
  5754  002FE8  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
  5755  002FEA  0E0E               	movlw	14
  5756  002FEC  6F7F               	movwf	ClearBuffer@Len& (0+255),b
  5757  002FEE  EC6B  F02E         	call	_ClearBuffer	;wreg free
  5758                           
  5759                           ;app.c: 196: memoryFlag++;
  5760  002FF2  0100               	movlb	0	; () banked
  5761  002FF4  2BC4               	incf	MyApp_Task@memoryFlag& (0+255),f,b
  5762                           
  5763                           ;app.c: 197: }
  5764  002FF6  0012               	return	
  5765  002FF8                     l2554:
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;app.c: 198: else if (memoryFlag >= 2 && memoryFlag <= 250)
  5769                           
  5770                           ; BSR set to: 0
  5771  002FF8  0E01               	movlw	1
  5772  002FFA  65C4               	cpfsgt	MyApp_Task@memoryFlag& (0+255),b
  5773  002FFC  0012               	return	
  5774                           
  5775                           ; BSR set to: 0
  5776  002FFE  0EFB               	movlw	251
  5777  003000  61C4               	cpfslt	MyApp_Task@memoryFlag& (0+255),b
  5778  003002  0012               	return	
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;app.c: 199: {
  5782                           ;app.c: 200: if (memoryFlag == 100)
  5783  003004  0E64               	movlw	100
  5784  003006  19C4               	xorwf	MyApp_Task@memoryFlag& (0+255),w,b
  5785  003008  A4D8               	btfss	status,2,c
  5786  00300A  D012               	goto	l2557
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;app.c: 201: {
  5790                           ;app.c: 202: memoryResult = Eeprom_Read(0, phone, 13);
  5791  00300C  0EDA               	movlw	low MyApp_Task@phone
  5792  00300E  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
  5793  003010  0E04               	movlw	high MyApp_Task@phone
  5794  003012  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
  5795  003014  0E0D               	movlw	13
  5796  003016  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
  5797  003018  0E00               	movlw	0
  5798  00301A  EC52  F02A         	call	_Eeprom_Read
  5799  00301E  0101               	movlb	1	; () banked
  5800  003020  6F07               	movwf	MyApp_Task@memoryResult& (0+255),b
  5801                           
  5802                           ; BSR set to: 1
  5803                           ;app.c: 203: if (memoryResult != OP_PENDING)
  5804  003022  0E02               	movlw	2
  5805  003024  1907               	xorwf	MyApp_Task@memoryResult& (0+255),w,b
  5806  003026  B4D8               	btfsc	status,2,c
  5807  003028  0012               	return	
  5808                           
  5809                           ; BSR set to: 1
  5810                           ;app.c: 204: {
  5811                           ;app.c: 205: memoryFlag++;
  5812  00302A  0100               	movlb	0	; () banked
  5813  00302C  2BC4               	incf	MyApp_Task@memoryFlag& (0+255),f,b
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;app.c: 206: }
  5817                           ;app.c: 207: }
  5818  00302E  0012               	return	
  5819  003030                     l2557:
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;app.c: 208: else
  5823                           ;app.c: 209: {
  5824                           ;app.c: 210: memoryFlag++;
  5825                           
  5826                           ; BSR set to: 0
  5827  003030  2BC4               	incf	MyApp_Task@memoryFlag& (0+255),f,b
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;app.c: 219: }
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;app.c: 218: break;
  5834                           
  5835                           ;app.c: 217: default:
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;app.c: 211: }
  5839                           ;app.c: 212: }
  5840                           ;app.c: 213: }
  5841                           ;app.c: 214: break;
  5842                           
  5843                           ; BSR set to: 0
  5844                           
  5845                           ; BSR set to: 0
  5846                           
  5847                           ; BSR set to: 0
  5848  003032  0012               	return	
  5849  003034                     l2546:
  5850                           
  5851                           ; BSR set to: 0
  5852  003034  0100               	movlb	0	; () banked
  5853  003036  51D5               	movf	_SystemState& (0+255),w,b
  5854                           
  5855                           ; Switch size 1, requested type "space"
  5856                           ; Number of cases is 2, Range of values is 0 to 1
  5857                           ; switch strategies available:
  5858                           ; Name         Instructions Cycles
  5859                           ; simple_byte            7     4 (average)
  5860                           ;	Chosen strategy is simple_byte
  5861  003038  0A00               	xorlw	0	; case 0
  5862  00303A  B4D8               	btfsc	status,2,c
  5863  00303C  D781               	goto	l2547
  5864  00303E  0A01               	xorlw	1	; case 1
  5865  003040  A4D8               	btfss	status,2,c
  5866  003042  0012               	return	
  5867  003044  D78A               	goto	l2549
  5868  003046                     __end_of_MyApp_Task:
  5869                           	opt stack 0
  5870                           tosu	equ	0xFFF
  5871                           tosh	equ	0xFFE
  5872                           tosl	equ	0xFFD
  5873                           pclath	equ	0xFFA
  5874                           tblptru	equ	0xFF8
  5875                           tblptrh	equ	0xFF7
  5876                           tblptrl	equ	0xFF6
  5877                           tablat	equ	0xFF5
  5878                           prodh	equ	0xFF4
  5879                           prodl	equ	0xFF3
  5880                           intcon	equ	0xFF2
  5881                           intcon2	equ	0xFF1
  5882                           intcon3	equ	0xFF0
  5883                           postinc0	equ	0xFEE
  5884                           wreg	equ	0xFE8
  5885                           postinc1	equ	0xFE6
  5886                           postdec1	equ	0xFE5
  5887                           fsr1h	equ	0xFE2
  5888                           fsr1l	equ	0xFE1
  5889                           indf2	equ	0xFDF
  5890                           postinc2	equ	0xFDE
  5891                           postdec2	equ	0xFDD
  5892                           fsr2h	equ	0xFDA
  5893                           fsr2l	equ	0xFD9
  5894                           status	equ	0xFD8
  5895                           
  5896 ;; *************** function _Term_MainTask *****************
  5897 ;; Defined at:
  5898 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;  Options         1    wreg     unsigned char 
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;  Options         1    0[COMRAM] unsigned char 
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5916 ;;Total ram usage:        0 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:   17
  5919 ;; This function calls:
  5920 ;;		_Term_MainSm
  5921 ;; This function is called by:
  5922 ;;		_InitializeTasks
  5923 ;;		_ScheduleTasks
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text17
  5928  0061B8                     __ptext17:
  5929                           	opt stack 0
  5930  0061B8                     _Term_MainTask:
  5931                           	opt stack 11
  5932                           
  5933                           ;term.c: 847: switch (SystemState)
  5934                           
  5935                           ;incstack = 0
  5936  0061B8  D003               	goto	l2452
  5937  0061BA                     
  5938                           ;term.c: 858: Term_MainSm();
  5939  0061BA  EC5B  F008         	call	_Term_MainSm	;wreg free
  5940                           
  5941                           ;term.c: 865: }
  5942                           
  5943                           ;term.c: 864: break;
  5944                           
  5945                           ;term.c: 863: default:
  5946                           
  5947                           ;term.c: 860: break;
  5948  0061BE  0012               	return	
  5949  0061C0                     l2452:
  5950  0061C0  0100               	movlb	0	; () banked
  5951  0061C2  51D5               	movf	_SystemState& (0+255),w,b
  5952                           
  5953                           ; Switch size 1, requested type "space"
  5954                           ; Number of cases is 2, Range of values is 0 to 1
  5955                           ; switch strategies available:
  5956                           ; Name         Instructions Cycles
  5957                           ; simple_byte            7     4 (average)
  5958                           ;	Chosen strategy is simple_byte
  5959  0061C4  0A00               	xorlw	0	; case 0
  5960  0061C6  B4D8               	btfsc	status,2,c
  5961  0061C8  0012               	return	
  5962  0061CA  0A01               	xorlw	1	; case 1
  5963  0061CC  A4D8               	btfss	status,2,c
  5964  0061CE  0012               	return	
  5965  0061D0  D7F4               	goto	l2455
  5966  0061D2                     __end_of_Term_MainTask:
  5967                           	opt stack 0
  5968                           tosu	equ	0xFFF
  5969                           tosh	equ	0xFFE
  5970                           tosl	equ	0xFFD
  5971                           pclath	equ	0xFFA
  5972                           tblptru	equ	0xFF8
  5973                           tblptrh	equ	0xFF7
  5974                           tblptrl	equ	0xFF6
  5975                           tablat	equ	0xFF5
  5976                           prodh	equ	0xFF4
  5977                           prodl	equ	0xFF3
  5978                           intcon	equ	0xFF2
  5979                           intcon2	equ	0xFF1
  5980                           intcon3	equ	0xFF0
  5981                           postinc0	equ	0xFEE
  5982                           wreg	equ	0xFE8
  5983                           postinc1	equ	0xFE6
  5984                           postdec1	equ	0xFE5
  5985                           fsr1h	equ	0xFE2
  5986                           fsr1l	equ	0xFE1
  5987                           indf2	equ	0xFDF
  5988                           postinc2	equ	0xFDE
  5989                           postdec2	equ	0xFDD
  5990                           fsr2h	equ	0xFDA
  5991                           fsr2l	equ	0xFD9
  5992                           status	equ	0xFD8
  5993                           
  5994 ;; *************** function _Rtcm_MainTask *****************
  5995 ;; Defined at:
  5996 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;  Options         1    wreg     unsigned char 
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;  Options         1    0[COMRAM] unsigned char 
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  1    wreg      void 
  6003 ;; Registers used:
  6004 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6014 ;;Total ram usage:        0 bytes
  6015 ;; Hardware stack levels used:    1
  6016 ;; Hardware stack levels required when called:   14
  6017 ;; This function calls:
  6018 ;;		_Rtcc_AlarmConfig
  6019 ;;		_Rtcc_LockRtc
  6020 ;;		_Rtcc_RtcConfig
  6021 ;;		_Rtcc_SetRtcStatus
  6022 ;;		_Rtcc_UnlockRtc
  6023 ;;		_Rtcm_GetRtccDate
  6024 ;;		_Rtcm_SetRtccDate
  6025 ;; This function is called by:
  6026 ;;		_InitializeTasks
  6027 ;;		_ScheduleTasks
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           	psect	text18
  6032  004B80                     __ptext18:
  6033                           	opt stack 0
  6034  004B80                     _Rtcm_MainTask:
  6035                           	opt stack 14
  6036                           
  6037                           ;rtcm.c: 101: switch (SystemState)
  6038                           
  6039                           ;incstack = 0
  6040  004B80  D03D               	goto	l2182
  6041  004B82                     l2183:
  6042                           
  6043                           ; BSR set to: 0
  6044                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6045  004B82  86CD               	bsf	4045,3,c	;volatile
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6049  004B84  0E00               	movlw	0
  6050  004B86  0103               	movlb	3	; () banked
  6051  004B88  6FB7               	movwf	_RtcConfig& (0+255),b
  6052                           
  6053                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6054  004B8A  0E00               	movlw	0
  6055  004B8C  6FB8               	movwf	(_RtcConfig+1)& (0+255),b
  6056                           
  6057                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6058  004B8E  0E01               	movlw	1
  6059  004B90  6FB9               	movwf	(_RtcConfig+2)& (0+255),b
  6060                           
  6061                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6062  004B92  0E01               	movlw	1
  6063  004B94  6FBA               	movwf	(_RtcConfig+3)& (0+255),b
  6064                           
  6065                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6066  004B96  0E01               	movlw	1
  6067  004B98  6FB3               	movwf	_AlCfg& (0+255),b
  6068                           
  6069                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6070  004B9A  0E01               	movlw	1
  6071  004B9C  6FB4               	movwf	(_AlCfg+1)& (0+255),b
  6072                           
  6073                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6074  004B9E  0E01               	movlw	1
  6075  004BA0  6FB5               	movwf	(_AlCfg+2)& (0+255),b
  6076                           
  6077                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6078  004BA2  0E00               	movlw	0
  6079  004BA4  6FB6               	movwf	(_AlCfg+3)& (0+255),b
  6080                           
  6081                           ; BSR set to: 3
  6082                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6083  004BA6  EC6A  F031         	call	_Rtcc_UnlockRtc	;wreg free
  6084                           
  6085                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6086  004BAA  0EB7               	movlw	low _RtcConfig
  6087  004BAC  0100               	movlb	0	; () banked
  6088  004BAE  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6089  004BB0  0E03               	movlw	high _RtcConfig
  6090  004BB2  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6091  004BB4  EC1B  F023         	call	_Rtcc_RtcConfig	;wreg free
  6092                           
  6093                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6094  004BB8  0EB3               	movlw	low _AlCfg
  6095  004BBA  0100               	movlb	0	; () banked
  6096  004BBC  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6097  004BBE  0E03               	movlw	high _AlCfg
  6098  004BC0  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6099  004BC2  ECF5  F027         	call	_Rtcc_AlarmConfig	;wreg free
  6100                           
  6101                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6102  004BC6  0E01               	movlw	1
  6103  004BC8  EC19  F031         	call	_Rtcc_SetRtcStatus
  6104                           
  6105                           ;rtcm.c: 127: Rtcc_LockRtc();
  6106  004BCC  EC72  F031         	call	_Rtcc_LockRtc	;wreg free
  6107                           
  6108                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6109  004BD0  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6110  004BD4  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6111  004BD8  0E07               	movlw	7
  6112  004BDA                     u14841:
  6113  004BDA  CFDB FFEB          	movff	plusw2,plusw0
  6114  004BDE  06E8               	decf	wreg,f,c
  6115  004BE0  E2FC               	bc	u14841
  6116  004BE2  EC28  F02A         	call	_Rtcm_SetRtccDate	;wreg free
  6117                           
  6118                           ;rtcm.c: 154: break;
  6119  004BE6  0012               	return	
  6120  004BE8                     
  6121                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6122  004BE8  EC5E  F028         	call	_Rtcm_GetRtccDate	;wreg free
  6123  004BEC  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6124  004BF0  0E07               	movlw	7
  6125  004BF2                     u14851:
  6126  004BF2  CFEB FFDB          	movff	plusw0,plusw2
  6127  004BF6  06E8               	decf	wreg,f,c
  6128  004BF8  E2FC               	bc	u14851
  6129                           
  6130                           ;rtcm.c: 165: }
  6131                           
  6132                           ;rtcm.c: 164: break;
  6133                           
  6134                           ;rtcm.c: 163: default:
  6135                           
  6136                           ;rtcm.c: 160: break;
  6137  004BFA  0012               	return	
  6138  004BFC                     l2182:
  6139  004BFC  0100               	movlb	0	; () banked
  6140  004BFE  51D5               	movf	_SystemState& (0+255),w,b
  6141                           
  6142                           ; Switch size 1, requested type "space"
  6143                           ; Number of cases is 2, Range of values is 0 to 1
  6144                           ; switch strategies available:
  6145                           ; Name         Instructions Cycles
  6146                           ; simple_byte            7     4 (average)
  6147                           ;	Chosen strategy is simple_byte
  6148  004C00  0A00               	xorlw	0	; case 0
  6149  004C02  B4D8               	btfsc	status,2,c
  6150  004C04  D7BE               	goto	l2183
  6151  004C06  0A01               	xorlw	1	; case 1
  6152  004C08  A4D8               	btfss	status,2,c
  6153  004C0A  0012               	return	
  6154  004C0C  D7ED               	goto	l2185
  6155  004C0E                     __end_of_Rtcm_MainTask:
  6156                           	opt stack 0
  6157                           tosu	equ	0xFFF
  6158                           tosh	equ	0xFFE
  6159                           tosl	equ	0xFFD
  6160                           pclath	equ	0xFFA
  6161                           tblptru	equ	0xFF8
  6162                           tblptrh	equ	0xFF7
  6163                           tblptrl	equ	0xFF6
  6164                           tablat	equ	0xFF5
  6165                           prodh	equ	0xFF4
  6166                           prodl	equ	0xFF3
  6167                           intcon	equ	0xFF2
  6168                           intcon2	equ	0xFF1
  6169                           intcon3	equ	0xFF0
  6170                           postinc0	equ	0xFEE
  6171                           plusw0	equ	0xFEB
  6172                           wreg	equ	0xFE8
  6173                           postinc1	equ	0xFE6
  6174                           postdec1	equ	0xFE5
  6175                           fsr1h	equ	0xFE2
  6176                           fsr1l	equ	0xFE1
  6177                           indf2	equ	0xFDF
  6178                           postinc2	equ	0xFDE
  6179                           postdec2	equ	0xFDD
  6180                           plusw2	equ	0xFDB
  6181                           fsr2h	equ	0xFDA
  6182                           fsr2l	equ	0xFD9
  6183                           status	equ	0xFD8
  6184                           
  6185 ;; *************** function _Led_MainTask *****************
  6186 ;; Defined at:
  6187 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  Options         1    wreg     unsigned char 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;  Options         1    0[COMRAM] unsigned char 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  1    wreg      void 
  6194 ;; Registers used:
  6195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6203 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6204 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6205 ;;Total ram usage:        1 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:   14
  6208 ;; This function calls:
  6209 ;;		_LedStateMachine
  6210 ;; This function is called by:
  6211 ;;		_InitializeTasks
  6212 ;;		_ScheduleTasks
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           	psect	text19
  6217  0039EA                     __ptext19:
  6218                           	opt stack 0
  6219  0039EA                     _Led_MainTask:
  6220                           	opt stack 14
  6221                           
  6222                           ;led.c: 300: switch (SystemState)
  6223                           
  6224                           ;incstack = 0
  6225  0039EA  D05C               	goto	l2096
  6226  0039EC                     l2097:
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6230  0039EC  9895               	bcf	3989,4,c	;volatile
  6231                           
  6232                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6233  0039EE  9A95               	bcf	3989,5,c	;volatile
  6234                           
  6235                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6236  0039F0  9C95               	bcf	3989,6,c	;volatile
  6237                           
  6238                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6239  0039F2  9883               	bcf	3971,4,c	;volatile
  6240                           
  6241                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6242  0039F4  9A83               	bcf	3971,5,c	;volatile
  6243                           
  6244                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6245  0039F6  9C83               	bcf	3971,6,c	;volatile
  6246                           
  6247                           ;led.c: 311: break;
  6248  0039F8  0012               	return	
  6249  0039FA                     
  6250                           ; BSR set to: 0
  6251                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6252                           
  6253                           ; BSR set to: 0
  6254  0039FA  0EFC               	movlw	low _Led1Sts
  6255  0039FC  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6256  0039FE  0E01               	movlw	high _Led1Sts
  6257  003A00  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6258  003A02  0EFB               	movlw	low _Led1OutSts
  6259  003A04  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6260  003A06  0E01               	movlw	high _Led1OutSts
  6261  003A08  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6262  003A0A  0E6D               	movlw	low _Led1Blink
  6263  003A0C  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6264  003A0E  0E03               	movlw	high _Led1Blink
  6265  003A10  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6266  003A12  0E91               	movlw	low _Led1Pulse
  6267  003A14  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6268  003A16  0E03               	movlw	high _Led1Pulse
  6269  003A18  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6270  003A1A  0E01               	movlw	1
  6271  003A1C  EC24  F022         	call	_LedStateMachine
  6272  003A20  0100               	movlb	0	; () banked
  6273  003A22  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6274  003A24  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6275  003A26  5083               	movf	3971,w,c	;volatile
  6276  003A28  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6277  003A2A  0BEF               	andlw	-17
  6278  003A2C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6279  003A2E  6E83               	movwf	3971,c	;volatile
  6280                           
  6281                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6282  003A30  0EFA               	movlw	low _Led2Sts
  6283  003A32  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6284  003A34  0E01               	movlw	high _Led2Sts
  6285  003A36  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6286  003A38  0EF9               	movlw	low _Led2OutSts
  6287  003A3A  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6288  003A3C  0E01               	movlw	high _Led2OutSts
  6289  003A3E  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6290  003A40  0E64               	movlw	low _Led2Blink
  6291  003A42  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6292  003A44  0E03               	movlw	high _Led2Blink
  6293  003A46  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6294  003A48  0E8B               	movlw	low _Led2Pulse
  6295  003A4A  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6296  003A4C  0E03               	movlw	high _Led2Pulse
  6297  003A4E  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6298  003A50  0E02               	movlw	2
  6299  003A52  EC24  F022         	call	_LedStateMachine
  6300  003A56  0100               	movlb	0	; () banked
  6301  003A58  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6302  003A5A  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6303  003A5C  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6304  003A5E  5083               	movf	3971,w,c	;volatile
  6305  003A60  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6306  003A62  0BDF               	andlw	-33
  6307  003A64  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6308  003A66  6E83               	movwf	3971,c	;volatile
  6309                           
  6310                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6311  003A68  0EF8               	movlw	low _Led3Sts
  6312  003A6A  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6313  003A6C  0E01               	movlw	high _Led3Sts
  6314  003A6E  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6315  003A70  0EF7               	movlw	low _Led3OutSts
  6316  003A72  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6317  003A74  0E01               	movlw	high _Led3OutSts
  6318  003A76  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6319  003A78  0E5B               	movlw	low _Led3Blink
  6320  003A7A  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6321  003A7C  0E03               	movlw	high _Led3Blink
  6322  003A7E  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6323  003A80  0E85               	movlw	low _Led3Pulse
  6324  003A82  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6325  003A84  0E03               	movlw	high _Led3Pulse
  6326  003A86  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6327  003A88  0E03               	movlw	3
  6328  003A8A  EC24  F022         	call	_LedStateMachine
  6329  003A8E  0100               	movlb	0	; () banked
  6330  003A90  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6331  003A92  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6332  003A94  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6333  003A96  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6334  003A98  5083               	movf	3971,w,c	;volatile
  6335  003A9A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6336  003A9C  0BBF               	andlw	-65
  6337  003A9E  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6338  003AA0  6E83               	movwf	3971,c	;volatile
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;led.c: 326: }
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;led.c: 325: break;
  6345                           
  6346                           ;led.c: 324: default:
  6347                           
  6348                           ;led.c: 321: break;
  6349  003AA2  0012               	return	
  6350  003AA4                     l2096:
  6351                           
  6352                           ; BSR set to: 0
  6353  003AA4  0100               	movlb	0	; () banked
  6354  003AA6  51D5               	movf	_SystemState& (0+255),w,b
  6355                           
  6356                           ; Switch size 1, requested type "space"
  6357                           ; Number of cases is 2, Range of values is 0 to 1
  6358                           ; switch strategies available:
  6359                           ; Name         Instructions Cycles
  6360                           ; simple_byte            7     4 (average)
  6361                           ;	Chosen strategy is simple_byte
  6362  003AA8  0A00               	xorlw	0	; case 0
  6363  003AAA  B4D8               	btfsc	status,2,c
  6364  003AAC  D79F               	goto	l2097
  6365  003AAE  0A01               	xorlw	1	; case 1
  6366  003AB0  A4D8               	btfss	status,2,c
  6367  003AB2  0012               	return	
  6368  003AB4  D7A2               	goto	l2099
  6369  003AB6                     __end_of_Led_MainTask:
  6370                           	opt stack 0
  6371                           tosu	equ	0xFFF
  6372                           tosh	equ	0xFFE
  6373                           tosl	equ	0xFFD
  6374                           pclath	equ	0xFFA
  6375                           tblptru	equ	0xFF8
  6376                           tblptrh	equ	0xFF7
  6377                           tblptrl	equ	0xFF6
  6378                           tablat	equ	0xFF5
  6379                           prodh	equ	0xFF4
  6380                           prodl	equ	0xFF3
  6381                           intcon	equ	0xFF2
  6382                           intcon2	equ	0xFF1
  6383                           intcon3	equ	0xFF0
  6384                           postinc0	equ	0xFEE
  6385                           plusw0	equ	0xFEB
  6386                           wreg	equ	0xFE8
  6387                           postinc1	equ	0xFE6
  6388                           postdec1	equ	0xFE5
  6389                           fsr1h	equ	0xFE2
  6390                           fsr1l	equ	0xFE1
  6391                           indf2	equ	0xFDF
  6392                           postinc2	equ	0xFDE
  6393                           postdec2	equ	0xFDD
  6394                           plusw2	equ	0xFDB
  6395                           fsr2h	equ	0xFDA
  6396                           fsr2l	equ	0xFD9
  6397                           status	equ	0xFD8
  6398                           
  6399 ;; *************** function _UsbDevice_MainTask *****************
  6400 ;; Defined at:
  6401 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  Options         1    wreg     unsigned char 
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;  Options         1    0[COMRAM] unsigned char 
  6406 ;; Return value:  Size  Location     Type
  6407 ;;                  1    wreg      void 
  6408 ;; Registers used:
  6409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6419 ;;Total ram usage:        0 bytes
  6420 ;; Hardware stack levels used:    1
  6421 ;; Hardware stack levels required when called:   20
  6422 ;; This function calls:
  6423 ;;		_CDCTxService
  6424 ;;		_USBDeviceInit
  6425 ;;		_USBDeviceTasks
  6426 ;; This function is called by:
  6427 ;;		_InitializeTasks
  6428 ;;		_ScheduleTasks
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text20
  6433  005F8E                     __ptext20:
  6434                           	opt stack 0
  6435  005F8E                     _UsbDevice_MainTask:
  6436                           	opt stack 8
  6437                           
  6438                           ;usb_device_mgr.c: 74: switch (SystemState)
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;incstack = 0
  6442  005F8E  D008               	goto	l1989
  6443  005F90                     
  6444                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6445  005F90  ECC0  F010         	call	_USBDeviceInit	;wreg free
  6446                           
  6447                           ;usb_device_mgr.c: 80: ;
  6448                           ;usb_device_mgr.c: 81: break;
  6449  005F94  0012               	return	
  6450  005F96                     
  6451                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6452  005F96  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6453                           
  6454                           ;usb_device_mgr.c: 90: CDCTxService();
  6455  005F9A  EC63  F013         	call	_CDCTxService	;wreg free
  6456                           
  6457                           ;usb_device_mgr.c: 101: }
  6458                           
  6459                           ;usb_device_mgr.c: 100: break;
  6460                           
  6461                           ;usb_device_mgr.c: 99: default:
  6462                           
  6463                           ;usb_device_mgr.c: 96: break;
  6464  005F9E  0012               	return	
  6465  005FA0                     l1989:
  6466  005FA0  0100               	movlb	0	; () banked
  6467  005FA2  51D5               	movf	_SystemState& (0+255),w,b
  6468                           
  6469                           ; Switch size 1, requested type "space"
  6470                           ; Number of cases is 2, Range of values is 0 to 1
  6471                           ; switch strategies available:
  6472                           ; Name         Instructions Cycles
  6473                           ; simple_byte            7     4 (average)
  6474                           ;	Chosen strategy is simple_byte
  6475  005FA4  0A00               	xorlw	0	; case 0
  6476  005FA6  B4D8               	btfsc	status,2,c
  6477  005FA8  D7F3               	goto	l1990
  6478  005FAA  0A01               	xorlw	1	; case 1
  6479  005FAC  A4D8               	btfss	status,2,c
  6480  005FAE  0012               	return	
  6481  005FB0  D7F2               	goto	l1992
  6482  005FB2                     __end_of_UsbDevice_MainTask:
  6483                           	opt stack 0
  6484                           tosu	equ	0xFFF
  6485                           tosh	equ	0xFFE
  6486                           tosl	equ	0xFFD
  6487                           pclath	equ	0xFFA
  6488                           tblptru	equ	0xFF8
  6489                           tblptrh	equ	0xFF7
  6490                           tblptrl	equ	0xFF6
  6491                           tablat	equ	0xFF5
  6492                           prodh	equ	0xFF4
  6493                           prodl	equ	0xFF3
  6494                           intcon	equ	0xFF2
  6495                           intcon2	equ	0xFF1
  6496                           intcon3	equ	0xFF0
  6497                           postinc0	equ	0xFEE
  6498                           plusw0	equ	0xFEB
  6499                           wreg	equ	0xFE8
  6500                           postinc1	equ	0xFE6
  6501                           postdec1	equ	0xFE5
  6502                           fsr1h	equ	0xFE2
  6503                           fsr1l	equ	0xFE1
  6504                           indf2	equ	0xFDF
  6505                           postinc2	equ	0xFDE
  6506                           postdec2	equ	0xFDD
  6507                           plusw2	equ	0xFDB
  6508                           fsr2h	equ	0xFDA
  6509                           fsr2l	equ	0xFD9
  6510                           status	equ	0xFD8
  6511                           
  6512 ;; *************** function _MdmHttp_MainTask *****************
  6513 ;; Defined at:
  6514 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;  Options         1    wreg     unsigned char 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;  Options         1    0[COMRAM] unsigned char 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6532 ;;Total ram usage:        0 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:   15
  6535 ;; This function calls:
  6536 ;;		_HttpGetMethod
  6537 ;;		_InitGprsNetwork
  6538 ;; This function is called by:
  6539 ;;		_InitializeTasks
  6540 ;;		_ScheduleTasks
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text21
  6545  00585A                     __ptext21:
  6546                           	opt stack 0
  6547  00585A                     _MdmHttp_MainTask:
  6548                           	opt stack 13
  6549                           
  6550                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6551                           
  6552                           ;incstack = 0
  6553  00585A  D019               	goto	l1288
  6554  00585C                     
  6555                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6556  00585C  0E03               	movlw	3
  6557  00585E  0100               	movlb	0	; () banked
  6558  005860  19D2               	xorwf	_MdmStatus& (0+255),w,b
  6559  005862  A4D8               	btfss	status,2,c
  6560  005864  0012               	return	
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;mdm_gsm_gprs_http.c: 570: {
  6564                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6565  005866  C324  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6566  00586A  C325  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6567  00586E  C1F0  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6568  005872  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6569  005876  0101               	movlb	1	; () banked
  6570  005878  6FEF               	movwf	_GprsNetworkSts& (0+255),b
  6571                           
  6572                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6573  00587A  0EA2               	movlw	low _HttpGetDataLocal
  6574  00587C  0100               	movlb	0	; () banked
  6575  00587E  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6576  005880  0E03               	movlw	high _HttpGetDataLocal
  6577  005882  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6578  005884  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6579  005888  0101               	movlb	1	; () banked
  6580  00588A  6FEE               	movwf	_HttpGetMethodSts& (0+255),b
  6581                           
  6582                           ; BSR set to: 1
  6583                           ;mdm_gsm_gprs_http.c: 581: }
  6584                           
  6585                           ; BSR set to: 1
  6586                           ;mdm_gsm_gprs_http.c: 580: break;
  6587                           
  6588                           ;mdm_gsm_gprs_http.c: 579: default:
  6589                           
  6590                           ; BSR set to: 1
  6591                           ;mdm_gsm_gprs_http.c: 575: }
  6592                           ;mdm_gsm_gprs_http.c: 576: break;
  6593  00588C  0012               	return	
  6594  00588E                     l1288:
  6595                           
  6596                           ; BSR set to: 1
  6597  00588E  0100               	movlb	0	; () banked
  6598  005890  51D5               	movf	_SystemState& (0+255),w,b
  6599                           
  6600                           ; Switch size 1, requested type "space"
  6601                           ; Number of cases is 2, Range of values is 0 to 1
  6602                           ; switch strategies available:
  6603                           ; Name         Instructions Cycles
  6604                           ; simple_byte            7     4 (average)
  6605                           ;	Chosen strategy is simple_byte
  6606  005892  0A00               	xorlw	0	; case 0
  6607  005894  B4D8               	btfsc	status,2,c
  6608  005896  0012               	return	
  6609  005898  0A01               	xorlw	1	; case 1
  6610  00589A  A4D8               	btfss	status,2,c
  6611  00589C  0012               	return	
  6612  00589E  D7DE               	goto	l1291
  6613  0058A0                     __end_of_MdmHttp_MainTask:
  6614                           	opt stack 0
  6615                           tosu	equ	0xFFF
  6616                           tosh	equ	0xFFE
  6617                           tosl	equ	0xFFD
  6618                           pclath	equ	0xFFA
  6619                           tblptru	equ	0xFF8
  6620                           tblptrh	equ	0xFF7
  6621                           tblptrl	equ	0xFF6
  6622                           tablat	equ	0xFF5
  6623                           prodh	equ	0xFF4
  6624                           prodl	equ	0xFF3
  6625                           intcon	equ	0xFF2
  6626                           intcon2	equ	0xFF1
  6627                           intcon3	equ	0xFF0
  6628                           postinc0	equ	0xFEE
  6629                           plusw0	equ	0xFEB
  6630                           wreg	equ	0xFE8
  6631                           postinc1	equ	0xFE6
  6632                           postdec1	equ	0xFE5
  6633                           fsr1h	equ	0xFE2
  6634                           fsr1l	equ	0xFE1
  6635                           indf2	equ	0xFDF
  6636                           postinc2	equ	0xFDE
  6637                           postdec2	equ	0xFDD
  6638                           plusw2	equ	0xFDB
  6639                           fsr2h	equ	0xFDA
  6640                           fsr2l	equ	0xFD9
  6641                           status	equ	0xFD8
  6642                           
  6643 ;; *************** function _Mdm_MainTask *****************
  6644 ;; Defined at:
  6645 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  Options         1    wreg     unsigned char 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  Options         1    0[COMRAM] unsigned char 
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1    wreg      void 
  6652 ;; Registers used:
  6653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6663 ;;Total ram usage:        0 bytes
  6664 ;; Hardware stack levels used:    1
  6665 ;; Hardware stack levels required when called:   15
  6666 ;; This function calls:
  6667 ;;		_CheckModem
  6668 ;;		_ConfigureModem
  6669 ;;		_GetSmsSm
  6670 ;;		_ModemEvtParser
  6671 ;;		_SendSmsSm
  6672 ;;		_TurnOnModem
  6673 ;;		_UartSetConfig
  6674 ;;		_Uart_InitUartModule
  6675 ;; This function is called by:
  6676 ;;		_InitializeTasks
  6677 ;;		_ScheduleTasks
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           	psect	text22
  6682  005642                     __ptext22:
  6683                           	opt stack 0
  6684  005642                     _Mdm_MainTask:
  6685                           	opt stack 13
  6686                           
  6687                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6688                           
  6689                           ;incstack = 0
  6690  005642  D01E               	goto	l1107
  6691  005644                     
  6692                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6693  005644  EC4E  F029         	call	_UartSetConfig	;wreg free
  6694                           
  6695                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6696  005648  0E26               	movlw	low _UartConfig
  6697  00564A  0100               	movlb	0	; () banked
  6698  00564C  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6699  00564E  0E03               	movlw	high _UartConfig
  6700  005650  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6701  005652  0E01               	movlw	1
  6702  005654  EC5E  F005         	call	_Uart_InitUartModule
  6703                           
  6704                           ;mdm_gsm_gprs.c: 764: break;
  6705  005658  0012               	return	
  6706  00565A                     
  6707                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6708  00565A  EC16  F012         	call	_CheckModem	;wreg free
  6709                           
  6710                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6711  00565E  042B               	decf	_ComChecCompleted,w,c
  6712  005660  A4D8               	btfss	status,2,c
  6713  005662  D005               	goto	l1111
  6714  005664  0100               	movlb	0	; () banked
  6715  005666  51D2               	movf	_MdmStatus& (0+255),w,b
  6716  005668  B4D8               	btfsc	status,2,c
  6717                           
  6718                           ; BSR set to: 0
  6719                           ;mdm_gsm_gprs.c: 772: {
  6720                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6721  00566A  EC50  F02C         	call	_TurnOnModem	;wreg free
  6722  00566E                     l1111:
  6723                           
  6724                           ;mdm_gsm_gprs.c: 775: }
  6725                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6726  00566E  EC8E  F01C         	call	_ConfigureModem	;wreg free
  6727                           
  6728                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6729  005672  EC99  F00E         	call	_ModemEvtParser	;wreg free
  6730                           
  6731                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6732  005676  EC41  F015         	call	_GetSmsSm	;wreg free
  6733                           
  6734                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6735  00567A  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6736                           
  6737                           ;mdm_gsm_gprs.c: 789: }
  6738                           
  6739                           ;mdm_gsm_gprs.c: 788: break;
  6740                           
  6741                           ;mdm_gsm_gprs.c: 787: default:
  6742                           
  6743                           ;mdm_gsm_gprs.c: 784: break;
  6744  00567E  0012               	return	
  6745  005680                     l1107:
  6746  005680  0100               	movlb	0	; () banked
  6747  005682  51D5               	movf	_SystemState& (0+255),w,b
  6748                           
  6749                           ; Switch size 1, requested type "space"
  6750                           ; Number of cases is 2, Range of values is 0 to 1
  6751                           ; switch strategies available:
  6752                           ; Name         Instructions Cycles
  6753                           ; simple_byte            7     4 (average)
  6754                           ;	Chosen strategy is simple_byte
  6755  005684  0A00               	xorlw	0	; case 0
  6756  005686  B4D8               	btfsc	status,2,c
  6757  005688  D7DD               	goto	l1108
  6758  00568A  0A01               	xorlw	1	; case 1
  6759  00568C  A4D8               	btfss	status,2,c
  6760  00568E  0012               	return	
  6761  005690  D7E4               	goto	l1110
  6762  005692                     __end_of_Mdm_MainTask:
  6763                           	opt stack 0
  6764                           tosu	equ	0xFFF
  6765                           tosh	equ	0xFFE
  6766                           tosl	equ	0xFFD
  6767                           pclath	equ	0xFFA
  6768                           tblptru	equ	0xFF8
  6769                           tblptrh	equ	0xFF7
  6770                           tblptrl	equ	0xFF6
  6771                           tablat	equ	0xFF5
  6772                           prodh	equ	0xFF4
  6773                           prodl	equ	0xFF3
  6774                           intcon	equ	0xFF2
  6775                           intcon2	equ	0xFF1
  6776                           intcon3	equ	0xFF0
  6777                           postinc0	equ	0xFEE
  6778                           plusw0	equ	0xFEB
  6779                           wreg	equ	0xFE8
  6780                           postinc1	equ	0xFE6
  6781                           postdec1	equ	0xFE5
  6782                           fsr1h	equ	0xFE2
  6783                           fsr1l	equ	0xFE1
  6784                           indf2	equ	0xFDF
  6785                           postinc2	equ	0xFDE
  6786                           postdec2	equ	0xFDD
  6787                           plusw2	equ	0xFDB
  6788                           fsr2h	equ	0xFDA
  6789                           fsr2l	equ	0xFD9
  6790                           status	equ	0xFD8
  6791                           
  6792 ;; *************** function _I2cSlv_MainTask *****************
  6793 ;; Defined at:
  6794 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;  Options         1    wreg     unsigned char 
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;  Options         1    0[COMRAM] unsigned char 
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  1    wreg      void 
  6801 ;; Registers used:
  6802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6812 ;;Total ram usage:        0 bytes
  6813 ;; Hardware stack levels used:    1
  6814 ;; Hardware stack levels required when called:   14
  6815 ;; This function calls:
  6816 ;;		_I2cSendMsgSm
  6817 ;;		_I2cSetConfig
  6818 ;;		_I2c_InitI2cModule
  6819 ;;		_OsAlrm_SetOsAlarm
  6820 ;; This function is called by:
  6821 ;;		_InitializeTasks
  6822 ;;		_ScheduleTasks
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           	psect	text23
  6827  0053FC                     __ptext23:
  6828                           	opt stack 0
  6829  0053FC                     _I2cSlv_MainTask:
  6830                           	opt stack 14
  6831                           
  6832                           ;i2c_slv.c: 217: switch (SystemState)
  6833                           
  6834                           ;incstack = 0
  6835  0053FC  D020               	goto	l1401
  6836  0053FE                     
  6837                           ;i2c_slv.c: 222: I2cSetConfig();
  6838  0053FE  EC60  F02F         	call	_I2cSetConfig	;wreg free
  6839                           
  6840                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6841  005402  0E51               	movlw	low _I2cConfig
  6842  005404  0100               	movlb	0	; () banked
  6843  005406  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6844  005408  0E03               	movlw	high _I2cConfig
  6845  00540A  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6846  00540C  EC86  F027         	call	_I2c_InitI2cModule	;wreg free
  6847                           
  6848                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6849  005410  0E00               	movlw	0
  6850  005412  0100               	movlb	0	; () banked
  6851  005414  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  6852  005416  0E00               	movlw	0
  6853  005418  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  6854  00541A  0E32               	movlw	50
  6855  00541C  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  6856  00541E  0E00               	movlw	0
  6857  005420  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  6858  005422  0E00               	movlw	0
  6859  005424  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  6860  005426  0E00               	movlw	0
  6861  005428  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  6862  00542A  0E82               	movlw	low _I2cDummyTx
  6863  00542C  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  6864  00542E  0E61               	movlw	high _I2cDummyTx
  6865  005430  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  6866  005432  ECEE  F01E         	call	_OsAlrm_SetOsAlarm	;wreg free
  6867                           
  6868                           ;i2c_slv.c: 227: break;
  6869  005436  0012               	return	
  6870  005438                     
  6871                           ;i2c_slv.c: 232: I2cSendMsgSm();
  6872  005438  EC52  F01F         	call	_I2cSendMsgSm	;wreg free
  6873                           
  6874                           ;i2c_slv.c: 238: }
  6875                           
  6876                           ;i2c_slv.c: 237: break;
  6877                           
  6878                           ;i2c_slv.c: 236: default:
  6879                           
  6880                           ;i2c_slv.c: 233: break;
  6881  00543C  0012               	return	
  6882  00543E                     l1401:
  6883  00543E  0100               	movlb	0	; () banked
  6884  005440  51D5               	movf	_SystemState& (0+255),w,b
  6885                           
  6886                           ; Switch size 1, requested type "space"
  6887                           ; Number of cases is 2, Range of values is 0 to 1
  6888                           ; switch strategies available:
  6889                           ; Name         Instructions Cycles
  6890                           ; simple_byte            7     4 (average)
  6891                           ;	Chosen strategy is simple_byte
  6892  005442  0A00               	xorlw	0	; case 0
  6893  005444  B4D8               	btfsc	status,2,c
  6894  005446  D7DB               	goto	l1402
  6895  005448  0A01               	xorlw	1	; case 1
  6896  00544A  A4D8               	btfss	status,2,c
  6897  00544C  0012               	return	
  6898  00544E  D7F4               	goto	l1404
  6899  005450                     __end_of_I2cSlv_MainTask:
  6900                           	opt stack 0
  6901                           tosu	equ	0xFFF
  6902                           tosh	equ	0xFFE
  6903                           tosl	equ	0xFFD
  6904                           pclath	equ	0xFFA
  6905                           tblptru	equ	0xFF8
  6906                           tblptrh	equ	0xFF7
  6907                           tblptrl	equ	0xFF6
  6908                           tablat	equ	0xFF5
  6909                           prodh	equ	0xFF4
  6910                           prodl	equ	0xFF3
  6911                           intcon	equ	0xFF2
  6912                           intcon2	equ	0xFF1
  6913                           intcon3	equ	0xFF0
  6914                           postinc0	equ	0xFEE
  6915                           plusw0	equ	0xFEB
  6916                           wreg	equ	0xFE8
  6917                           postinc1	equ	0xFE6
  6918                           postdec1	equ	0xFE5
  6919                           fsr1h	equ	0xFE2
  6920                           fsr1l	equ	0xFE1
  6921                           indf2	equ	0xFDF
  6922                           postinc2	equ	0xFDE
  6923                           postdec2	equ	0xFDD
  6924                           plusw2	equ	0xFDB
  6925                           fsr2h	equ	0xFDA
  6926                           fsr2l	equ	0xFD9
  6927                           status	equ	0xFD8
  6928                           
  6929 ;; *************** function _Mdm_DrvMainFn *****************
  6930 ;; Defined at:
  6931 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  Options         1    wreg     unsigned char 
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;  Options         1    0[COMRAM] unsigned char 
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  1    wreg      void 
  6938 ;; Registers used:
  6939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6949 ;;Total ram usage:        0 bytes
  6950 ;; Hardware stack levels used:    1
  6951 ;; Hardware stack levels required when called:   13
  6952 ;; This function calls:
  6953 ;;		_MdmCntSm
  6954 ;; This function is called by:
  6955 ;;		_InitializeTasks
  6956 ;;		_ScheduleTasks
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960                           	psect	text24
  6961  00638C                     __ptext24:
  6962                           	opt stack 0
  6963  00638C                     _Mdm_DrvMainFn:
  6964                           	opt stack 15
  6965                           
  6966                           ;mdm_drv.c: 307: MdmCntSm();
  6967                           
  6968                           ;incstack = 0
  6969  00638C  ECD0  F021         	call	_MdmCntSm	;wreg free
  6970  006390  0012               	return		;funcret
  6971  006392                     __end_of_Mdm_DrvMainFn:
  6972                           	opt stack 0
  6973                           tosu	equ	0xFFF
  6974                           tosh	equ	0xFFE
  6975                           tosl	equ	0xFFD
  6976                           pclath	equ	0xFFA
  6977                           tblptru	equ	0xFF8
  6978                           tblptrh	equ	0xFF7
  6979                           tblptrl	equ	0xFF6
  6980                           tablat	equ	0xFF5
  6981                           prodh	equ	0xFF4
  6982                           prodl	equ	0xFF3
  6983                           intcon	equ	0xFF2
  6984                           intcon2	equ	0xFF1
  6985                           intcon3	equ	0xFF0
  6986                           postinc0	equ	0xFEE
  6987                           plusw0	equ	0xFEB
  6988                           wreg	equ	0xFE8
  6989                           postinc1	equ	0xFE6
  6990                           postdec1	equ	0xFE5
  6991                           fsr1h	equ	0xFE2
  6992                           fsr1l	equ	0xFE1
  6993                           indf2	equ	0xFDF
  6994                           postinc2	equ	0xFDE
  6995                           postdec2	equ	0xFDD
  6996                           plusw2	equ	0xFDB
  6997                           fsr2h	equ	0xFDA
  6998                           fsr2l	equ	0xFD9
  6999                           status	equ	0xFD8
  7000                           
  7001 ;; *************** function _Wdg_MainTask *****************
  7002 ;; Defined at:
  7003 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  Options         1    wreg     unsigned char 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  Options         1    0[COMRAM] unsigned char 
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  1    wreg      void 
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0, cstack
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7021 ;;Total ram usage:        0 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; Hardware stack levels required when called:   12
  7024 ;; This function calls:
  7025 ;;		_Mcu_ClearWdg
  7026 ;;		_Mcu_SetWdgSts
  7027 ;; This function is called by:
  7028 ;;		_InitializeTasks
  7029 ;;		_ScheduleTasks
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           	psect	text25
  7034  00601E                     __ptext25:
  7035                           	opt stack 0
  7036  00601E                     _Wdg_MainTask:
  7037                           	opt stack 16
  7038                           
  7039                           ;wdg.c: 75: switch (SystemState)
  7040                           
  7041                           ;incstack = 0
  7042  00601E  D007               	goto	l2472
  7043  006020                     
  7044                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7045  006020  0E01               	movlw	1
  7046  006022  EC4F  F031         	call	_Mcu_SetWdgSts
  7047                           
  7048                           ;wdg.c: 81: break;
  7049  006026  0012               	return	
  7050  006028                     
  7051                           ;wdg.c: 86: Mcu_ClearWdg();
  7052  006028  ECC9  F031         	call	_Mcu_ClearWdg	;wreg free
  7053                           
  7054                           ;wdg.c: 92: }
  7055                           
  7056                           ;wdg.c: 91: break;
  7057                           
  7058                           ;wdg.c: 90: default:
  7059                           
  7060                           ;wdg.c: 87: break;
  7061  00602C  0012               	return	
  7062  00602E                     l2472:
  7063  00602E  0100               	movlb	0	; () banked
  7064  006030  51D5               	movf	_SystemState& (0+255),w,b
  7065                           
  7066                           ; Switch size 1, requested type "space"
  7067                           ; Number of cases is 2, Range of values is 0 to 1
  7068                           ; switch strategies available:
  7069                           ; Name         Instructions Cycles
  7070                           ; simple_byte            7     4 (average)
  7071                           ;	Chosen strategy is simple_byte
  7072  006032  0A00               	xorlw	0	; case 0
  7073  006034  B4D8               	btfsc	status,2,c
  7074  006036  D7F4               	goto	l2473
  7075  006038  0A01               	xorlw	1	; case 1
  7076  00603A  A4D8               	btfss	status,2,c
  7077  00603C  0012               	return	
  7078  00603E  D7F4               	goto	l2475
  7079  006040                     __end_of_Wdg_MainTask:
  7080                           	opt stack 0
  7081                           tosu	equ	0xFFF
  7082                           tosh	equ	0xFFE
  7083                           tosl	equ	0xFFD
  7084                           pclath	equ	0xFFA
  7085                           tblptru	equ	0xFF8
  7086                           tblptrh	equ	0xFF7
  7087                           tblptrl	equ	0xFF6
  7088                           tablat	equ	0xFF5
  7089                           prodh	equ	0xFF4
  7090                           prodl	equ	0xFF3
  7091                           intcon	equ	0xFF2
  7092                           intcon2	equ	0xFF1
  7093                           intcon3	equ	0xFF0
  7094                           postinc0	equ	0xFEE
  7095                           plusw0	equ	0xFEB
  7096                           wreg	equ	0xFE8
  7097                           postinc1	equ	0xFE6
  7098                           postdec1	equ	0xFE5
  7099                           fsr1h	equ	0xFE2
  7100                           fsr1l	equ	0xFE1
  7101                           indf2	equ	0xFDF
  7102                           postinc2	equ	0xFDE
  7103                           postdec2	equ	0xFDD
  7104                           plusw2	equ	0xFDB
  7105                           fsr2h	equ	0xFDA
  7106                           fsr2l	equ	0xFD9
  7107                           status	equ	0xFD8
  7108                           
  7109 ;; *************** function _Mcu_SetWdgSts *****************
  7110 ;; Defined at:
  7111 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  WdgSts          1    wreg     unsigned char 
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  1    wreg      void 
  7118 ;; Registers used:
  7119 ;;		wreg
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7126 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7128 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7129 ;;Total ram usage:        1 bytes
  7130 ;; Hardware stack levels used:    1
  7131 ;; Hardware stack levels required when called:   11
  7132 ;; This function calls:
  7133 ;;		Nothing
  7134 ;; This function is called by:
  7135 ;;		_Wdg_MainTask
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           	psect	text26
  7140  00629E                     __ptext26:
  7141                           	opt stack 0
  7142  00629E                     _Mcu_SetWdgSts:
  7143                           	opt stack 16
  7144                           
  7145                           ;incstack = 0
  7146                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7147  00629E  0100               	movlb	0	; () banked
  7148  0062A0  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7149                           
  7150                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7151  0062A2  0100               	movlb	0	; () banked
  7152  0062A4  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7153  0062A6  D002               	bra	u13465
  7154  0062A8  90C0               	bcf	4032,0,c	;volatile
  7155  0062AA  D001               	bra	u13466
  7156  0062AC                     u13465:
  7157  0062AC  80C0               	bsf	4032,0,c	;volatile
  7158  0062AE                     u13466:
  7159  0062AE  0012               	return		;funcret
  7160  0062B0                     __end_of_Mcu_SetWdgSts:
  7161                           	opt stack 0
  7162                           tosu	equ	0xFFF
  7163                           tosh	equ	0xFFE
  7164                           tosl	equ	0xFFD
  7165                           pclath	equ	0xFFA
  7166                           tblptru	equ	0xFF8
  7167                           tblptrh	equ	0xFF7
  7168                           tblptrl	equ	0xFF6
  7169                           tablat	equ	0xFF5
  7170                           prodh	equ	0xFF4
  7171                           prodl	equ	0xFF3
  7172                           intcon	equ	0xFF2
  7173                           intcon2	equ	0xFF1
  7174                           intcon3	equ	0xFF0
  7175                           postinc0	equ	0xFEE
  7176                           plusw0	equ	0xFEB
  7177                           wreg	equ	0xFE8
  7178                           postinc1	equ	0xFE6
  7179                           postdec1	equ	0xFE5
  7180                           fsr1h	equ	0xFE2
  7181                           fsr1l	equ	0xFE1
  7182                           indf2	equ	0xFDF
  7183                           postinc2	equ	0xFDE
  7184                           postdec2	equ	0xFDD
  7185                           plusw2	equ	0xFDB
  7186                           fsr2h	equ	0xFDA
  7187                           fsr2l	equ	0xFD9
  7188                           status	equ	0xFD8
  7189                           
  7190 ;; *************** function _Mcu_ClearWdg *****************
  7191 ;; Defined at:
  7192 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;		None
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		None
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7210 ;;Total ram usage:        0 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:   11
  7213 ;; This function calls:
  7214 ;;		Nothing
  7215 ;; This function is called by:
  7216 ;;		_Wdg_MainTask
  7217 ;; This function uses a non-reentrant model
  7218 ;;
  7219                           
  7220                           	psect	text27
  7221  006392                     __ptext27:
  7222                           	opt stack 0
  7223  006392                     _Mcu_ClearWdg:
  7224                           	opt stack 16
  7225                           
  7226                           ;incstack = 0
  7227  006392  0004               	clrwdt		;# 
  7228  006394  0012               	return		;funcret
  7229  006396                     __end_of_Mcu_ClearWdg:
  7230                           	opt stack 0
  7231                           tosu	equ	0xFFF
  7232                           tosh	equ	0xFFE
  7233                           tosl	equ	0xFFD
  7234                           pclath	equ	0xFFA
  7235                           tblptru	equ	0xFF8
  7236                           tblptrh	equ	0xFF7
  7237                           tblptrl	equ	0xFF6
  7238                           tablat	equ	0xFF5
  7239                           prodh	equ	0xFF4
  7240                           prodl	equ	0xFF3
  7241                           intcon	equ	0xFF2
  7242                           intcon2	equ	0xFF1
  7243                           intcon3	equ	0xFF0
  7244                           postinc0	equ	0xFEE
  7245                           plusw0	equ	0xFEB
  7246                           wreg	equ	0xFE8
  7247                           postinc1	equ	0xFE6
  7248                           postdec1	equ	0xFE5
  7249                           fsr1h	equ	0xFE2
  7250                           fsr1l	equ	0xFE1
  7251                           indf2	equ	0xFDF
  7252                           postinc2	equ	0xFDE
  7253                           postdec2	equ	0xFDD
  7254                           plusw2	equ	0xFDB
  7255                           fsr2h	equ	0xFDA
  7256                           fsr2l	equ	0xFD9
  7257                           status	equ	0xFD8
  7258                           
  7259 ;; *************** function _USBDeviceTasks *****************
  7260 ;; Defined at:
  7261 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;		None
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  i               1   56[BANK0 ] unsigned char 
  7266 ;; Return value:  Size  Location     Type
  7267 ;;                  1    wreg      void 
  7268 ;; Registers used:
  7269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7270 ;; Tracked objects:
  7271 ;;		On entry : 0/0
  7272 ;;		On exit  : 0/0
  7273 ;;		Unchanged: 0/0
  7274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7276 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7278 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7279 ;;Total ram usage:        1 bytes
  7280 ;; Hardware stack levels used:    1
  7281 ;; Hardware stack levels required when called:   19
  7282 ;; This function calls:
  7283 ;;		_USBCtrlEPAllowStatusStage
  7284 ;;		_USBCtrlEPService
  7285 ;;		_USBDeviceInit
  7286 ;;		_USBIncrement1msInternalTimers
  7287 ;;		_USBStallHandler
  7288 ;;		_USBSuspend
  7289 ;;		_USBWakeFromSuspend
  7290 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7291 ;; This function is called by:
  7292 ;;		_UsbDevice_MainTask
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           	psect	text28
  7297  001BAA                     __ptext28:
  7298                           	opt stack 0
  7299  001BAA                     _USBDeviceTasks:
  7300                           	opt stack 8
  7301                           
  7302                           ;usb_device.c: 562: }
  7303                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7304                           
  7305                           ; BSR set to: 0
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;usb_device.c: 561: return;
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7312                           
  7313                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7314                           
  7315                           ;usb_device.c: 529: UIE = 0;
  7316                           
  7317                           ;usb_device.c: 524: {
  7318                           ;usb_device.c: 526: UCON = 0;
  7319                           
  7320                           ;usb_device.c: 497: uint8_t i;
  7321                           ;usb_device.c: 523: if (1 != 1)
  7322                           
  7323                           ;incstack = 0
  7324  001BAA  0100               	movlb	0	; () banked
  7325  001BAC  51CE               	movf	_USBDeviceState& (0+255),w,b
  7326  001BAE  A4D8               	btfss	status,2,c
  7327  001BB0  D012               	goto	l1612
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;usb_device.c: 585: {
  7331                           ;usb_device.c: 587: UCON = 0;
  7332  001BB2  0E00               	movlw	0
  7333  001BB4  6E65               	movwf	3941,c	;volatile
  7334                           
  7335                           ;usb_device.c: 590: UIE = 0;
  7336  001BB6  0E00               	movlw	0
  7337  001BB8  010F               	movlb	15	; () banked
  7338  001BBA  6F36               	movwf	54,b	;volatile
  7339                           
  7340                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7341  001BBC  0E16               	movlw	22
  7342  001BBE  6F39               	movwf	57,b	;volatile
  7343  001BC0  0E9F               	movlw	159
  7344  001BC2  6F37               	movwf	55,b	;volatile
  7345  001BC4  0E7B               	movlw	123
  7346  001BC6  6F36               	movwf	54,b	;volatile
  7347                           
  7348                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7349  001BC8  D001               	goto	l1613
  7350  001BCA                     l1614:
  7351  001BCA  8665               	bsf	3941,3,c	;volatile
  7352  001BCC                     l1613:
  7353  001BCC  A665               	btfss	3941,3,c	;volatile
  7354  001BCE  D7FD               	goto	l1614
  7355                           
  7356                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7357  001BD0  0E01               	movlw	1
  7358  001BD2  0100               	movlb	0	; () banked
  7359  001BD4  6FCE               	movwf	_USBDeviceState& (0+255),b
  7360  001BD6                     l1612:
  7361                           
  7362                           ; BSR set to: 0
  7363                           ;usb_device.c: 605: }
  7364                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7365                           
  7366                           ; BSR set to: 0
  7367  001BD6  05CE               	decf	_USBDeviceState& (0+255),w,b
  7368  001BD8  B4D8               	btfsc	status,2,c
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;usb_device.c: 609: {
  7372                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7373  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7374  001BDC  D00A               	goto	l1617
  7375                           
  7376                           ; BSR set to: 0
  7377                           ;usb_device.c: 620: {
  7378                           ;usb_device.c: 626: {UIR = 0;};
  7379  001BDE  0E00               	movlw	0
  7380  001BE0  6E62               	movwf	3938,c	;volatile
  7381                           
  7382                           ;usb_device.c: 630: UIE=0;
  7383  001BE2  0E00               	movlw	0
  7384  001BE4  010F               	movlb	15	; () banked
  7385  001BE6  6F36               	movwf	54,b	;volatile
  7386                           
  7387                           ; BSR set to: 15
  7388                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7389  001BE8  8136               	bsf	54,0,b	;volatile
  7390                           
  7391                           ; BSR set to: 15
  7392                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7393  001BEA  8936               	bsf	54,4,b	;volatile
  7394                           
  7395                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7396  001BEC  0E02               	movlw	2
  7397  001BEE  0100               	movlb	0	; () banked
  7398  001BF0  6FCE               	movwf	_USBDeviceState& (0+255),b
  7399  001BF2                     l1617:
  7400                           
  7401                           ; BSR set to: 0
  7402                           ;usb_device.c: 635: }
  7403                           ;usb_device.c: 636: }
  7404                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7405                           
  7406                           ; BSR set to: 0
  7407                           
  7408                           ; BSR set to: 0
  7409  001BF2  A462               	btfss	3938,2,c	;volatile
  7410  001BF4  D006               	goto	l1618
  7411                           
  7412                           ; BSR set to: 0
  7413  001BF6  010F               	movlb	15	; () banked
  7414  001BF8  A536               	btfss	54,2,b	;volatile
  7415  001BFA  D003               	goto	l1618
  7416                           
  7417                           ; BSR set to: 15
  7418                           ;usb_device.c: 653: {
  7419                           ;usb_device.c: 654: (UIR &= 0xFB);
  7420  001BFC  9462               	bcf	3938,2,c	;volatile
  7421                           
  7422                           ; BSR set to: 15
  7423                           ;usb_device.c: 658: USBWakeFromSuspend();
  7424  001BFE  ECF9  F02D         	call	_USBWakeFromSuspend	;wreg free
  7425  001C02                     l1618:
  7426                           
  7427                           ;usb_device.c: 660: }
  7428                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7429  001C02  A265               	btfss	3941,1,c	;volatile
  7430  001C04  D002               	goto	l1619
  7431                           
  7432                           ;usb_device.c: 666: {
  7433                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7434  001C06  98A1               	bcf	4001,4,c	;volatile
  7435                           
  7436                           ;usb_device.c: 668: return;
  7437  001C08  0012               	return	
  7438  001C0A                     l1619:
  7439                           
  7440                           ;usb_device.c: 669: }
  7441                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7442  001C0A  A062               	btfss	3938,0,c	;volatile
  7443  001C0C  D009               	goto	l1620
  7444  001C0E  010F               	movlb	15	; () banked
  7445  001C10  A136               	btfss	54,0,b	;volatile
  7446  001C12  D006               	goto	l1620
  7447                           
  7448                           ; BSR set to: 15
  7449                           ;usb_device.c: 682: {
  7450                           ;usb_device.c: 683: USBDeviceInit();
  7451  001C14  ECC0  F010         	call	_USBDeviceInit	;wreg free
  7452                           
  7453                           ;usb_device.c: 687: ;
  7454                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7455  001C18  0E04               	movlw	4
  7456  001C1A  0100               	movlb	0	; () banked
  7457  001C1C  6FCE               	movwf	_USBDeviceState& (0+255),b
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;usb_device.c: 699: (UIR &= 0xFE);
  7461  001C1E  9062               	bcf	3938,0,c	;volatile
  7462  001C20                     l1620:
  7463                           
  7464                           ;usb_device.c: 700: }
  7465                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7466                           
  7467                           ; BSR set to: 0
  7468  001C20  A862               	btfss	3938,4,c	;volatile
  7469  001C22  D004               	goto	l1621
  7470  001C24  010F               	movlb	15	; () banked
  7471  001C26  B936               	btfsc	54,4,b	;volatile
  7472                           
  7473                           ; BSR set to: 15
  7474                           ;usb_device.c: 706: {
  7475                           ;usb_device.c: 712: USBSuspend();
  7476  001C28  ECA0  F02E         	call	_USBSuspend	;wreg free
  7477  001C2C                     l1621:
  7478                           
  7479                           ;usb_device.c: 714: }
  7480                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7481  001C2C  AC62               	btfss	3938,6,c	;volatile
  7482  001C2E  D01D               	goto	l1625
  7483                           
  7484                           ;usb_device.c: 727: {
  7485                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7486  001C30  010F               	movlb	15	; () banked
  7487  001C32  AD36               	btfss	54,6,b	;volatile
  7488  001C34  D00F               	goto	l1623
  7489                           
  7490                           ; BSR set to: 15
  7491                           ;usb_device.c: 730: {
  7492                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7493  001C36  0E00               	movlw	0
  7494  001C38  0100               	movlb	0	; () banked
  7495  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7496  001C3C  0E73               	movlw	115
  7497  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7498  001C40  0E00               	movlw	0
  7499  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7500  001C44  0E00               	movlw	0
  7501  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7502  001C48  0E00               	movlw	0
  7503  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7504  001C4C  0E01               	movlw	1
  7505  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7506  001C50  ECC2  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7507  001C54                     l1623:
  7508                           
  7509                           ;usb_device.c: 732: }
  7510                           ;usb_device.c: 733: (UIR &= 0xBF);
  7511  001C54  9C62               	bcf	3938,6,c	;volatile
  7512                           
  7513                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7514  001C56  EC20  F030         	call	_USBIncrement1msInternalTimers	;wreg free
  7515                           
  7516                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7517  001C5A  0100               	movlb	0	; () banked
  7518  001C5C  51CA               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7519  001C5E  A4D8               	btfss	status,2,c
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;usb_device.c: 754: {
  7523                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7524  001C60  07CA               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;usb_device.c: 756: }
  7528                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7529                           
  7530                           ; BSR set to: 0
  7531  001C62  51CA               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7532  001C64  B4D8               	btfsc	status,2,c
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;usb_device.c: 763: {
  7536                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7537  001C66  EC5B  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7538  001C6A                     l1625:
  7539                           
  7540                           ;usb_device.c: 765: }
  7541                           ;usb_device.c: 767: }
  7542                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7543  001C6A  AA62               	btfss	3938,5,c	;volatile
  7544  001C6C  D004               	goto	l1626
  7545  001C6E  010F               	movlb	15	; () banked
  7546  001C70  BB36               	btfsc	54,5,b	;volatile
  7547                           
  7548                           ; BSR set to: 15
  7549                           ;usb_device.c: 770: {
  7550                           ;usb_device.c: 771: USBStallHandler();
  7551  001C72  EC73  F02C         	call	_USBStallHandler	;wreg free
  7552  001C76                     l1626:
  7553                           
  7554                           ;usb_device.c: 772: }
  7555                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7556  001C76  A262               	btfss	3938,1,c	;volatile
  7557  001C78  D013               	goto	l1627
  7558  001C7A  010F               	movlb	15	; () banked
  7559  001C7C  A336               	btfss	54,1,b	;volatile
  7560  001C7E  D010               	goto	l1627
  7561                           
  7562                           ; BSR set to: 15
  7563                           ;usb_device.c: 775: {
  7564                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7565  001C80  0E7F               	movlw	127
  7566  001C82  0100               	movlb	0	; () banked
  7567  001C84  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7568  001C86  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7569  001C88  0E00               	movlw	0
  7570  001C8A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7571  001C8C  0E00               	movlw	0
  7572  001C8E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7573  001C90  0E00               	movlw	0
  7574  001C92  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7575  001C94  0E01               	movlw	1
  7576  001C96  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7577  001C98  ECC2  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7578                           
  7579                           ;usb_device.c: 777: {UEIR = 0;};
  7580  001C9C  0E00               	movlw	0
  7581  001C9E  6E63               	movwf	3939,c	;volatile
  7582  001CA0                     l1627:
  7583                           
  7584                           ;usb_device.c: 785: }
  7585                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7586  001CA0  0E04               	movlw	4
  7587  001CA2  0100               	movlb	0	; () banked
  7588  001CA4  61CE               	cpfslt	_USBDeviceState& (0+255),b
  7589  001CA6  D002               	goto	l1628
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;usb_device.c: 793: {
  7593                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7594  001CA8  98A1               	bcf	4001,4,c	;volatile
  7595                           
  7596                           ;usb_device.c: 795: return;
  7597  001CAA  0012               	return	
  7598  001CAC                     l1628:
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;usb_device.c: 796: }
  7602                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7603  001CAC  010F               	movlb	15	; () banked
  7604  001CAE  A736               	btfss	54,3,b	;volatile
  7605  001CB0  D03E               	goto	u14450
  7606                           
  7607                           ; BSR set to: 15
  7608                           ;usb_device.c: 802: {
  7609                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7610  001CB2  0E00               	movlw	0
  7611  001CB4  0100               	movlb	0	; () banked
  7612  001CB6  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7613  001CB8                     l14840:
  7614                           
  7615                           ; BSR set to: 0
  7616  001CB8  0E03               	movlw	3
  7617  001CBA  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7618  001CBC  D001               	goto	l1630
  7619  001CBE  D037               	goto	u14450
  7620  001CC0                     l1630:
  7621                           
  7622                           ; BSR set to: 0
  7623                           ;usb_device.c: 804: {
  7624                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7625  001CC0  A662               	btfss	3938,3,c	;volatile
  7626  001CC2  D035               	goto	u14450
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;usb_device.c: 806: {
  7630                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7631  001CC4  CF64 F0D6          	movff	3940,_USTATcopy	;volatile
  7632                           
  7633                           ; BSR set to: 0
  7634                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7635  001CC8  31D6               	rrcf	_USTATcopy& (0+255),w,b
  7636  001CCA  32E8               	rrcf	wreg,f,c
  7637  001CCC  32E8               	rrcf	wreg,f,c
  7638  001CCE  0B0F               	andlw	15
  7639  001CD0  6FCB               	movwf	_endpoint_number& (0+255),b
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;usb_device.c: 811: (UIR &= 0xF7);
  7643  001CD2  9662               	bcf	3938,3,c	;volatile
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7647  001CD4  B5D6               	btfsc	_USTATcopy& (0+255),2,b
  7648  001CD6  D007               	goto	l1633
  7649                           
  7650                           ; BSR set to: 0
  7651                           ;usb_device.c: 817: {
  7652                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7653  001CD8  51CB               	movf	_endpoint_number& (0+255),w,b
  7654  001CDA  0D01               	mullw	1
  7655  001CDC  0ECE               	movlw	low _ep_data_out
  7656  001CDE  24F3               	addwf	prodl,w,c
  7657  001CE0  6ED9               	movwf	fsr2l,c
  7658  001CE2  0E02               	movlw	high _ep_data_out
  7659  001CE4  D007               	goto	L3
  7660  001CE6                     l1633:
  7661                           
  7662                           ;usb_device.c: 820: else
  7663                           ;usb_device.c: 821: {
  7664                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7665                           
  7666                           ; BSR set to: 2
  7667  001CE6  0100               	movlb	0	; () banked
  7668  001CE8  51CB               	movf	_endpoint_number& (0+255),w,b
  7669  001CEA  0D01               	mullw	1
  7670  001CEC  0ED1               	movlw	low _ep_data_in
  7671  001CEE  24F3               	addwf	prodl,w,c
  7672  001CF0  6ED9               	movwf	fsr2l,c
  7673  001CF2  0E02               	movlw	high _ep_data_in
  7674  001CF4                     L3:
  7675  001CF4  20F4               	addwfc	prodh,w,c
  7676  001CF6  6EDA               	movwf	fsr2h,c
  7677  001CF8  0102               	movlb	2	; () banked
  7678  001CFA  70DF               	btg	indf2,0,c
  7679                           
  7680                           ; BSR set to: 2
  7681                           ;usb_device.c: 823: }
  7682                           ;usb_device.c: 828: if(endpoint_number == 0)
  7683                           
  7684                           ; BSR set to: 2
  7685  001CFC  0100               	movlb	0	; () banked
  7686  001CFE  51CB               	movf	_endpoint_number& (0+255),w,b
  7687  001D00  A4D8               	btfss	status,2,c
  7688  001D02  D003               	goto	l1635
  7689                           
  7690                           ; BSR set to: 0
  7691                           ;usb_device.c: 829: {
  7692                           ;usb_device.c: 830: USBCtrlEPService();
  7693  001D04  EC9C  F024         	call	_USBCtrlEPService	;wreg free
  7694                           
  7695                           ;usb_device.c: 831: }
  7696  001D08  D00F               	goto	l1637
  7697  001D0A                     l1635:
  7698                           
  7699                           ;usb_device.c: 832: else
  7700                           ;usb_device.c: 833: {
  7701                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7702  001D0A  0E00               	movlw	0
  7703  001D0C  0100               	movlb	0	; () banked
  7704  001D0E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7705  001D10  0E72               	movlw	114
  7706  001D12  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7707  001D14  0ED6               	movlw	low _USTATcopy
  7708  001D16  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7709  001D18  0E00               	movlw	high _USTATcopy
  7710  001D1A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7711  001D1C  0E00               	movlw	0
  7712  001D1E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7713  001D20  0E00               	movlw	0
  7714  001D22  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7715  001D24  ECC2  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7716  001D28                     l1637:
  7717  001D28  0100               	movlb	0	; () banked
  7718  001D2A  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7719  001D2C  D7C5               	goto	l14840
  7720  001D2E                     u14450:
  7721                           
  7722                           ;usb_device.c: 840: }
  7723                           ;usb_device.c: 841: }
  7724                           ;usb_device.c: 842: }
  7725                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7726                           
  7727                           ; BSR set to: 0
  7728  001D2E  98A1               	bcf	4001,4,c	;volatile
  7729  001D30  0012               	return		;funcret
  7730  001D32                     __end_of_USBDeviceTasks:
  7731                           	opt stack 0
  7732                           tosu	equ	0xFFF
  7733                           tosh	equ	0xFFE
  7734                           tosl	equ	0xFFD
  7735                           pclath	equ	0xFFA
  7736                           tblptru	equ	0xFF8
  7737                           tblptrh	equ	0xFF7
  7738                           tblptrl	equ	0xFF6
  7739                           tablat	equ	0xFF5
  7740                           prodh	equ	0xFF4
  7741                           prodl	equ	0xFF3
  7742                           intcon	equ	0xFF2
  7743                           intcon2	equ	0xFF1
  7744                           intcon3	equ	0xFF0
  7745                           postinc0	equ	0xFEE
  7746                           plusw0	equ	0xFEB
  7747                           wreg	equ	0xFE8
  7748                           postinc1	equ	0xFE6
  7749                           postdec1	equ	0xFE5
  7750                           fsr1h	equ	0xFE2
  7751                           fsr1l	equ	0xFE1
  7752                           indf2	equ	0xFDF
  7753                           postinc2	equ	0xFDE
  7754                           postdec2	equ	0xFDD
  7755                           plusw2	equ	0xFDB
  7756                           fsr2h	equ	0xFDA
  7757                           fsr2l	equ	0xFD9
  7758                           status	equ	0xFD8
  7759                           
  7760 ;; *************** function _USBWakeFromSuspend *****************
  7761 ;; Defined at:
  7762 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;		None
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;		None
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  1    wreg      void 
  7769 ;; Registers used:
  7770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7780 ;;Total ram usage:        0 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; Hardware stack levels required when called:   15
  7783 ;; This function calls:
  7784 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7785 ;; This function is called by:
  7786 ;;		_USBDeviceTasks
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           	psect	text29
  7791  005BF2                     __ptext29:
  7792                           	opt stack 0
  7793  005BF2                     _USBWakeFromSuspend:
  7794                           	opt stack 11
  7795                           
  7796                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7797                           
  7798                           ;incstack = 0
  7799  005BF2  0E00               	movlw	0
  7800  005BF4  0101               	movlb	1	; () banked
  7801  005BF6  6FE4               	movwf	_USBBusIsSuspended& (0+255),b
  7802                           
  7803                           ; BSR set to: 1
  7804                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7805  005BF8  0E00               	movlw	0
  7806  005BFA  0100               	movlb	0	; () banked
  7807  005BFC  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7808  005BFE  0E74               	movlw	116
  7809  005C00  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7810  005C02  0E00               	movlw	0
  7811  005C04  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7812  005C06  0E00               	movlw	0
  7813  005C08  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7814  005C0A  0E00               	movlw	0
  7815  005C0C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7816  005C0E  0E00               	movlw	0
  7817  005C10  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7818  005C12  ECC2  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7819                           
  7820                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7821  005C16  9265               	bcf	3941,1,c	;volatile
  7822                           
  7823                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7824  005C18  010F               	movlb	15	; () banked
  7825  005C1A  9536               	bcf	54,2,b	;volatile
  7826                           
  7827                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7828  005C1C  D001               	goto	l1765
  7829  005C1E                     
  7830                           ;usb_device.c: 2361: {
  7831                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7832                           
  7833                           ; BSR set to: 15
  7834  005C1E  9462               	bcf	3938,2,c	;volatile
  7835  005C20                     l1765:
  7836  005C20  B462               	btfsc	3938,2,c	;volatile
  7837  005C22  D7FD               	goto	l1766
  7838                           
  7839                           ;usb_device.c: 2363: }
  7840                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7841  005C24  0E00               	movlw	0
  7842  005C26  0101               	movlb	1	; () banked
  7843  005C28  6FE2               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7844                           
  7845                           ; BSR set to: 1
  7846  005C2A  0012               	return		;funcret
  7847  005C2C                     __end_of_USBWakeFromSuspend:
  7848                           	opt stack 0
  7849                           tosu	equ	0xFFF
  7850                           tosh	equ	0xFFE
  7851                           tosl	equ	0xFFD
  7852                           pclath	equ	0xFFA
  7853                           tblptru	equ	0xFF8
  7854                           tblptrh	equ	0xFF7
  7855                           tblptrl	equ	0xFF6
  7856                           tablat	equ	0xFF5
  7857                           prodh	equ	0xFF4
  7858                           prodl	equ	0xFF3
  7859                           intcon	equ	0xFF2
  7860                           intcon2	equ	0xFF1
  7861                           intcon3	equ	0xFF0
  7862                           postinc0	equ	0xFEE
  7863                           plusw0	equ	0xFEB
  7864                           wreg	equ	0xFE8
  7865                           postinc1	equ	0xFE6
  7866                           postdec1	equ	0xFE5
  7867                           fsr1h	equ	0xFE2
  7868                           fsr1l	equ	0xFE1
  7869                           indf2	equ	0xFDF
  7870                           postinc2	equ	0xFDE
  7871                           postdec2	equ	0xFDD
  7872                           plusw2	equ	0xFDB
  7873                           fsr2h	equ	0xFDA
  7874                           fsr2l	equ	0xFD9
  7875                           status	equ	0xFD8
  7876                           
  7877 ;; *************** function _USBSuspend *****************
  7878 ;; Defined at:
  7879 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;		None
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;		None
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  1    wreg      void 
  7886 ;; Registers used:
  7887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7897 ;;Total ram usage:        0 bytes
  7898 ;; Hardware stack levels used:    1
  7899 ;; Hardware stack levels required when called:   15
  7900 ;; This function calls:
  7901 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7902 ;; This function is called by:
  7903 ;;		_USBDeviceTasks
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907                           	psect	text30
  7908  005D40                     __ptext30:
  7909                           	opt stack 0
  7910  005D40                     _USBSuspend:
  7911                           	opt stack 11
  7912                           
  7913                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  7914                           
  7915                           ; BSR set to: 1
  7916                           ;incstack = 0
  7917  005D40  010F               	movlb	15	; () banked
  7918  005D42  8536               	bsf	54,2,b	;volatile
  7919                           
  7920                           ; BSR set to: 15
  7921                           ;usb_device.c: 2289: (UIR &= 0xEF);
  7922  005D44  9862               	bcf	3938,4,c	;volatile
  7923                           
  7924                           ; BSR set to: 15
  7925                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  7926  005D46  8265               	bsf	3941,1,c	;volatile
  7927                           
  7928                           ; BSR set to: 15
  7929                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  7930  005D48  0E01               	movlw	1
  7931  005D4A  0101               	movlb	1	; () banked
  7932  005D4C  6FE4               	movwf	_USBBusIsSuspended& (0+255),b
  7933                           
  7934                           ; BSR set to: 1
  7935                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  7936  005D4E  0E00               	movlw	0
  7937  005D50  6FE2               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7938                           
  7939                           ; BSR set to: 1
  7940                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7941  005D52  0E00               	movlw	0
  7942  005D54  0100               	movlb	0	; () banked
  7943  005D56  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7944  005D58  0E75               	movlw	117
  7945  005D5A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7946  005D5C  0E00               	movlw	0
  7947  005D5E  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7948  005D60  0E00               	movlw	0
  7949  005D62  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7950  005D64  0E00               	movlw	0
  7951  005D66  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7952  005D68  0E00               	movlw	0
  7953  005D6A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7954  005D6C  ECC2  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7955  005D70  0012               	return		;funcret
  7956  005D72                     __end_of_USBSuspend:
  7957                           	opt stack 0
  7958                           tosu	equ	0xFFF
  7959                           tosh	equ	0xFFE
  7960                           tosl	equ	0xFFD
  7961                           pclath	equ	0xFFA
  7962                           tblptru	equ	0xFF8
  7963                           tblptrh	equ	0xFF7
  7964                           tblptrl	equ	0xFF6
  7965                           tablat	equ	0xFF5
  7966                           prodh	equ	0xFF4
  7967                           prodl	equ	0xFF3
  7968                           intcon	equ	0xFF2
  7969                           intcon2	equ	0xFF1
  7970                           intcon3	equ	0xFF0
  7971                           postinc0	equ	0xFEE
  7972                           plusw0	equ	0xFEB
  7973                           wreg	equ	0xFE8
  7974                           postinc1	equ	0xFE6
  7975                           postdec1	equ	0xFE5
  7976                           fsr1h	equ	0xFE2
  7977                           fsr1l	equ	0xFE1
  7978                           indf2	equ	0xFDF
  7979                           postinc2	equ	0xFDE
  7980                           postdec2	equ	0xFDD
  7981                           plusw2	equ	0xFDB
  7982                           fsr2h	equ	0xFDA
  7983                           fsr2l	equ	0xFD9
  7984                           status	equ	0xFD8
  7985                           
  7986 ;; *************** function _USBStallHandler *****************
  7987 ;; Defined at:
  7988 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;		None
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;		None
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      void 
  7995 ;; Registers used:
  7996 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8004 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8005 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8006 ;;Total ram usage:        1 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; Hardware stack levels required when called:   11
  8009 ;; This function calls:
  8010 ;;		Nothing
  8011 ;; This function is called by:
  8012 ;;		_USBDeviceTasks
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           	psect	text31
  8017  0058E6                     __ptext31:
  8018                           	opt stack 0
  8019  0058E6                     _USBStallHandler:
  8020                           	opt stack 15
  8021                           
  8022                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8023                           
  8024                           ;incstack = 0
  8025  0058E6  010F               	movlb	15	; () banked
  8026  0058E8  A126               	btfss	38,0,b	;volatile
  8027  0058EA  D01D               	goto	l1757
  8028                           
  8029                           ; BSR set to: 15
  8030                           ;usb_device.c: 2233: {
  8031                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8032  0058EC  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8033  0058F0  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8034  0058F4  0E80               	movlw	128
  8035  0058F6  18DE               	xorwf	postinc2,w,c
  8036  0058F8  A4D8               	btfss	status,2,c
  8037  0058FA  D014               	goto	l1758
  8038                           
  8039                           ; BSR set to: 15
  8040  0058FC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8041  005900  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8042  005904  0E84               	movlw	132
  8043  005906  18DE               	xorwf	postinc2,w,c
  8044  005908  A4D8               	btfss	status,2,c
  8045  00590A  D00C               	goto	l1758
  8046                           
  8047                           ; BSR set to: 15
  8048                           ;usb_device.c: 2236: {
  8049                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8050  00590C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8051  005910  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8052  005914  0E0C               	movlw	12
  8053  005916  6EDF               	movwf	indf2,c
  8054                           
  8055                           ; BSR set to: 15
  8056                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8057  005918  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8058  00591C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8059  005920  0E00               	movlw	0
  8060  005922  8EDB               	bsf	plusw2,7,c
  8061  005924                     l1758:
  8062                           
  8063                           ; BSR set to: 15
  8064                           ;usb_device.c: 2240: }
  8065                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8066                           
  8067                           ; BSR set to: 15
  8068  005924  9126               	bcf	38,0,b	;volatile
  8069  005926                     l1757:
  8070                           
  8071                           ; BSR set to: 15
  8072                           ;usb_device.c: 2242: }
  8073                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8074  005926  9A62               	bcf	3938,5,c	;volatile
  8075                           
  8076                           ; BSR set to: 15
  8077  005928  0012               	return		;funcret
  8078  00592A                     __end_of_USBStallHandler:
  8079                           	opt stack 0
  8080                           tosu	equ	0xFFF
  8081                           tosh	equ	0xFFE
  8082                           tosl	equ	0xFFD
  8083                           pclath	equ	0xFFA
  8084                           tblptru	equ	0xFF8
  8085                           tblptrh	equ	0xFF7
  8086                           tblptrl	equ	0xFF6
  8087                           tablat	equ	0xFF5
  8088                           prodh	equ	0xFF4
  8089                           prodl	equ	0xFF3
  8090                           intcon	equ	0xFF2
  8091                           intcon2	equ	0xFF1
  8092                           intcon3	equ	0xFF0
  8093                           postinc0	equ	0xFEE
  8094                           plusw0	equ	0xFEB
  8095                           wreg	equ	0xFE8
  8096                           postinc1	equ	0xFE6
  8097                           postdec1	equ	0xFE5
  8098                           fsr1h	equ	0xFE2
  8099                           fsr1l	equ	0xFE1
  8100                           indf2	equ	0xFDF
  8101                           postinc2	equ	0xFDE
  8102                           postdec2	equ	0xFDD
  8103                           plusw2	equ	0xFDB
  8104                           fsr2h	equ	0xFDA
  8105                           fsr2l	equ	0xFD9
  8106                           status	equ	0xFD8
  8107                           
  8108 ;; *************** function _USBIncrement1msInternalTimers *****************
  8109 ;; Defined at:
  8110 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;		None
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;		None
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1    wreg      void 
  8117 ;; Registers used:
  8118 ;;		wreg, status,2, status,0
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8128 ;;Total ram usage:        0 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:   11
  8131 ;; This function calls:
  8132 ;;		Nothing
  8133 ;; This function is called by:
  8134 ;;		_USBDeviceTasks
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           	psect	text32
  8139  006040                     __ptext32:
  8140                           	opt stack 0
  8141  006040                     _USBIncrement1msInternalTimers:
  8142                           	opt stack 15
  8143                           
  8144                           ;usb_device.c: 3050: USB1msTickCount++;
  8145                           
  8146                           ; BSR set to: 15
  8147                           ;incstack = 0
  8148  006040  0E01               	movlw	1
  8149  006042  0103               	movlb	3	; () banked
  8150  006044  2718               	addwf	_USB1msTickCount& (0+255),f,b
  8151  006046  0E00               	movlw	0
  8152  006048  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8153  00604A  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8154  00604C  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8155                           
  8156                           ; BSR set to: 3
  8157                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8158  00604E  0101               	movlb	1	; () banked
  8159  006050  51E4               	movf	_USBBusIsSuspended& (0+255),w,b
  8160  006052  A4D8               	btfss	status,2,c
  8161  006054  0012               	return	
  8162                           
  8163                           ; BSR set to: 1
  8164                           ;usb_device.c: 3052: {
  8165                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8166  006056  2BE2               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8167                           
  8168                           ; BSR set to: 1
  8169                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8170  006058  51E2               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8171  00605A  A4D8               	btfss	status,2,c
  8172  00605C  0012               	return	
  8173                           
  8174                           ; BSR set to: 1
  8175                           ;usb_device.c: 3056: {
  8176                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8177  00605E  69E2               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8178                           
  8179                           ; BSR set to: 1
  8180  006060  0012               	return	
  8181  006062                     __end_of_USBIncrement1msInternalTimers:
  8182                           	opt stack 0
  8183                           tosu	equ	0xFFF
  8184                           tosh	equ	0xFFE
  8185                           tosl	equ	0xFFD
  8186                           pclath	equ	0xFFA
  8187                           tblptru	equ	0xFF8
  8188                           tblptrh	equ	0xFF7
  8189                           tblptrl	equ	0xFF6
  8190                           tablat	equ	0xFF5
  8191                           prodh	equ	0xFF4
  8192                           prodl	equ	0xFF3
  8193                           intcon	equ	0xFF2
  8194                           intcon2	equ	0xFF1
  8195                           intcon3	equ	0xFF0
  8196                           postinc0	equ	0xFEE
  8197                           plusw0	equ	0xFEB
  8198                           wreg	equ	0xFE8
  8199                           postinc1	equ	0xFE6
  8200                           postdec1	equ	0xFE5
  8201                           fsr1h	equ	0xFE2
  8202                           fsr1l	equ	0xFE1
  8203                           indf2	equ	0xFDF
  8204                           postinc2	equ	0xFDE
  8205                           postdec2	equ	0xFDD
  8206                           plusw2	equ	0xFDB
  8207                           fsr2h	equ	0xFDA
  8208                           fsr2l	equ	0xFD9
  8209                           status	equ	0xFD8
  8210                           
  8211 ;; *************** function _USBDeviceInit *****************
  8212 ;; Defined at:
  8213 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8214 ;; Parameters:    Size  Location     Type
  8215 ;;		None
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;  i               1   37[BANK0 ] unsigned char 
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  1    wreg      void 
  8220 ;; Registers used:
  8221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8228 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8230 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8231 ;;Total ram usage:        1 bytes
  8232 ;; Hardware stack levels used:    1
  8233 ;; Hardware stack levels required when called:   12
  8234 ;; This function calls:
  8235 ;;		_memset
  8236 ;; This function is called by:
  8237 ;;		_USBDeviceTasks
  8238 ;;		_UsbDevice_MainTask
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           	psect	text33
  8243  002180                     __ptext33:
  8244                           	opt stack 0
  8245  002180                     _USBDeviceInit:
  8246                           	opt stack 14
  8247                           
  8248                           ;usb_device.c: 297: uint8_t i;
  8249                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8250                           
  8251                           ; BSR set to: 1
  8252                           ;incstack = 0
  8253  002180  98A0               	bcf	4000,4,c	;volatile
  8254                           
  8255                           ;usb_device.c: 303: ;
  8256                           ;usb_device.c: 306: {UEIR = 0;};
  8257  002182  0E00               	movlw	0
  8258  002184  6E63               	movwf	3939,c	;volatile
  8259                           
  8260                           ;usb_device.c: 309: {UIR = 0;};
  8261  002186  0E00               	movlw	0
  8262  002188  6E62               	movwf	3938,c	;volatile
  8263                           
  8264                           ;usb_device.c: 312: UEP0 = 0;
  8265  00218A  0E00               	movlw	0
  8266  00218C  010F               	movlb	15	; () banked
  8267  00218E  6F26               	movwf	38,b	;volatile
  8268                           
  8269                           ; BSR set to: 15
  8270                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8271  002190  0E27               	movlw	39
  8272  002192  0100               	movlb	0	; () banked
  8273  002194  6F7D               	movwf	memset@p1& (0+255),b
  8274  002196  0E0F               	movlw	15
  8275  002198  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8276  00219A  0E00               	movlw	0
  8277  00219C  6F80               	movwf	(memset@c+1)& (0+255),b
  8278  00219E  0E00               	movlw	0
  8279  0021A0  6F7F               	movwf	memset@c& (0+255),b
  8280  0021A2  0E00               	movlw	0
  8281  0021A4  6F82               	movwf	(memset@n+1)& (0+255),b
  8282  0021A6  0E02               	movlw	2
  8283  0021A8  6F81               	movwf	memset@n& (0+255),b
  8284  0021AA  ECEA  F02E         	call	_memset	;wreg free
  8285                           
  8286                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8287  0021AE  0E16               	movlw	22
  8288  0021B0  010F               	movlb	15	; () banked
  8289  0021B2  6F39               	movwf	57,b	;volatile
  8290                           
  8291                           ; BSR set to: 15
  8292  0021B4  0E9F               	movlw	159
  8293  0021B6  6F37               	movwf	55,b	;volatile
  8294                           
  8295                           ; BSR set to: 15
  8296  0021B8  0E7B               	movlw	123
  8297  0021BA  6F36               	movwf	54,b	;volatile
  8298                           
  8299                           ; BSR set to: 15
  8300                           ;usb_device.c: 319: ;
  8301                           ;usb_device.c: 322: ;
  8302                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8303  0021BC  0E00               	movlw	0
  8304  0021BE  0100               	movlb	0	; () banked
  8305  0021C0  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8306  0021C2                     l13618:
  8307                           
  8308                           ; BSR set to: 0
  8309  0021C2  0E0B               	movlw	11
  8310  0021C4  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8311  0021C6  D001               	goto	l1601
  8312  0021C8  D00E               	goto	u12720
  8313  0021CA                     l1601:
  8314                           
  8315                           ; BSR set to: 0
  8316                           ;usb_device.c: 326: {
  8317                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8318                           
  8319                           ; BSR set to: 0
  8320  0021CA  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8321  0021CC  0D04               	mullw	4
  8322  0021CE  0E00               	movlw	0
  8323  0021D0  24F3               	addwf	prodl,w,c
  8324  0021D2  6ED9               	movwf	fsr2l,c
  8325  0021D4  0E04               	movlw	4
  8326  0021D6  20F4               	addwfc	prodh,w,c
  8327  0021D8  6EDA               	movwf	fsr2h,c
  8328  0021DA  6ADE               	clrf	postinc2,c
  8329  0021DC  6ADE               	clrf	postinc2,c
  8330  0021DE  6ADE               	clrf	postinc2,c
  8331  0021E0  6ADD               	clrf	postdec2,c
  8332                           
  8333                           ; BSR set to: 0
  8334  0021E2  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8335  0021E4  D7EE               	goto	l13618
  8336  0021E6                     u12720:
  8337                           
  8338                           ; BSR set to: 0
  8339                           ;usb_device.c: 328: }
  8340                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8341  0021E6  8C65               	bsf	3941,6,c	;volatile
  8342                           
  8343                           ; BSR set to: 0
  8344                           ;usb_device.c: 334: UADDR = 0x00;
  8345  0021E8  0E00               	movlw	0
  8346  0021EA  010F               	movlb	15	; () banked
  8347  0021EC  6F38               	movwf	56,b	;volatile
  8348                           
  8349                           ; BSR set to: 15
  8350                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8351  0021EE  9865               	bcf	3941,4,c	;volatile
  8352                           
  8353                           ; BSR set to: 15
  8354                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8355  0021F0  9C65               	bcf	3941,6,c	;volatile
  8356  0021F2                     
  8357                           ;usb_device.c: 344: {
  8358                           ;usb_device.c: 345: (UIR &= 0xF7);
  8359                           
  8360                           ; BSR set to: 15
  8361  0021F2  9662               	bcf	3938,3,c	;volatile
  8362                           
  8363                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8364  0021F4  0E00               	movlw	0
  8365  0021F6  0100               	movlb	0	; () banked
  8366  0021F8  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8367                           
  8368                           ; BSR set to: 0
  8369                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8370  0021FA  0E00               	movlw	0
  8371  0021FC  0101               	movlb	1	; () banked
  8372  0021FE  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8373                           
  8374                           ; BSR set to: 1
  8375                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8376  002200  0E00               	movlw	0
  8377  002202  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8378  002204  0E00               	movlw	0
  8379  002206  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8380                           
  8381                           ; BSR set to: 1
  8382                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8383  002208  B662               	btfsc	3938,3,c	;volatile
  8384  00220A  D7F3               	goto	l1603
  8385                           
  8386                           ; BSR set to: 1
  8387                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8388                           
  8389                           ; BSR set to: 1
  8390  00220C  0E01               	movlw	1
  8391  00220E  0100               	movlb	0	; () banked
  8392  002210  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8393                           
  8394                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8395  002212  0E01               	movlw	1
  8396  002214  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8397                           
  8398                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8399  002216  0E00               	movlw	0
  8400  002218  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8401                           
  8402                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8403  00221A  0E00               	movlw	0
  8404  00221C  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8405                           
  8406                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8407  00221E  0E00               	movlw	0
  8408  002220  0101               	movlb	1	; () banked
  8409  002222  6FE4               	movwf	_USBBusIsSuspended& (0+255),b
  8410                           
  8411                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8412  002224  0E00               	movlw	0
  8413  002226  0100               	movlb	0	; () banked
  8414  002228  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8415  00222A                     l13646:
  8416                           
  8417                           ; BSR set to: 0
  8418  00222A  0E02               	movlw	2
  8419  00222C  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8420  00222E  D001               	goto	l1605
  8421  002230  D02E               	goto	u12750
  8422  002232                     l1605:
  8423                           
  8424                           ; BSR set to: 0
  8425                           ;usb_device.c: 364: {
  8426                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8427                           
  8428                           ; BSR set to: 0
  8429  002232  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8430  002234  0D02               	mullw	2
  8431  002236  0EB6               	movlw	low _pBDTEntryIn
  8432  002238  24F3               	addwf	prodl,w,c
  8433  00223A  6ED9               	movwf	fsr2l,c
  8434  00223C  0E00               	movlw	high _pBDTEntryIn
  8435  00223E  20F4               	addwfc	prodh,w,c
  8436  002240  6EDA               	movwf	fsr2h,c
  8437  002242  0E00               	movlw	0
  8438  002244  6EDE               	movwf	postinc2,c
  8439  002246  0E00               	movlw	0
  8440  002248  6EDD               	movwf	postdec2,c
  8441                           
  8442                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8443  00224A  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8444  00224C  0D02               	mullw	2
  8445  00224E  0E0E               	movlw	low _pBDTEntryOut
  8446  002250  24F3               	addwf	prodl,w,c
  8447  002252  6ED9               	movwf	fsr2l,c
  8448  002254  0E03               	movlw	high _pBDTEntryOut
  8449  002256  20F4               	addwfc	prodh,w,c
  8450  002258  6EDA               	movwf	fsr2h,c
  8451  00225A  0E00               	movlw	0
  8452  00225C  6EDE               	movwf	postinc2,c
  8453  00225E  0E00               	movlw	0
  8454  002260  6EDD               	movwf	postdec2,c
  8455                           
  8456                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8457  002262  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8458  002264  0D01               	mullw	1
  8459  002266  0ED1               	movlw	low _ep_data_in
  8460  002268  24F3               	addwf	prodl,w,c
  8461  00226A  6ED9               	movwf	fsr2l,c
  8462  00226C  0E02               	movlw	high _ep_data_in
  8463  00226E  20F4               	addwfc	prodh,w,c
  8464  002270  6EDA               	movwf	fsr2h,c
  8465  002272  0E00               	movlw	0
  8466  002274  6EDF               	movwf	indf2,c
  8467                           
  8468                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8469  002276  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8470  002278  0D01               	mullw	1
  8471  00227A  0ECE               	movlw	low _ep_data_out
  8472  00227C  24F3               	addwf	prodl,w,c
  8473  00227E  6ED9               	movwf	fsr2l,c
  8474  002280  0E02               	movlw	high _ep_data_out
  8475  002282  20F4               	addwfc	prodh,w,c
  8476  002284  6EDA               	movwf	fsr2h,c
  8477  002286  0E00               	movlw	0
  8478  002288  6EDF               	movwf	indf2,c
  8479                           
  8480                           ; BSR set to: 0
  8481  00228A  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8482  00228C  D7CE               	goto	l13646
  8483  00228E                     u12750:
  8484                           
  8485                           ; BSR set to: 0
  8486                           ;usb_device.c: 369: }
  8487                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8488                           
  8489                           ; BSR set to: 0
  8490  00228E  0E08               	movlw	8
  8491  002290  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8492  002292  0E04               	movlw	4
  8493  002294  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8497  002296  0E16               	movlw	22
  8498  002298  010F               	movlb	15	; () banked
  8499  00229A  6F26               	movwf	38,b	;volatile
  8500                           
  8501                           ; BSR set to: 15
  8502                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8503  00229C  0E04               	movlw	4
  8504  00229E  0104               	movlb	4	; () banked
  8505  0022A0  6F03               	movwf	3,b	;volatile
  8506  0022A2  0E30               	movlw	48
  8507  0022A4  6F02               	movwf	2,b	;volatile
  8508                           
  8509                           ; BSR set to: 4
  8510                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8511  0022A6  0E08               	movlw	8
  8512  0022A8  6F01               	movwf	1,b	;volatile
  8513                           
  8514                           ; BSR set to: 4
  8515                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8516  0022AA  0E04               	movlw	4
  8517  0022AC  6F00               	movwf	0,b	;volatile
  8518                           
  8519                           ; BSR set to: 4
  8520                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8521  0022AE  8F00               	bsf	0,7,b	;volatile
  8522                           
  8523                           ; BSR set to: 4
  8524                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8525  0022B0  0E00               	movlw	0
  8526  0022B2  0100               	movlb	0	; () banked
  8527  0022B4  6FD7               	movwf	_USBActiveConfiguration& (0+255),b
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;usb_device.c: 384: USB1msTickCount = 0;
  8531  0022B6  0E00               	movlw	0
  8532  0022B8  0103               	movlb	3	; () banked
  8533  0022BA  6F18               	movwf	_USB1msTickCount& (0+255),b
  8534  0022BC  0E00               	movlw	0
  8535  0022BE  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8536  0022C0  0E00               	movlw	0
  8537  0022C2  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8538  0022C4  0E00               	movlw	0
  8539  0022C6  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8540                           
  8541                           ; BSR set to: 3
  8542                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8543  0022C8  0E00               	movlw	0
  8544  0022CA  0101               	movlb	1	; () banked
  8545  0022CC  6FE2               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8546                           
  8547                           ; BSR set to: 1
  8548                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8549  0022CE  0E00               	movlw	0
  8550  0022D0  0100               	movlb	0	; () banked
  8551  0022D2  6FCE               	movwf	_USBDeviceState& (0+255),b
  8552                           
  8553                           ; BSR set to: 0
  8554  0022D4  0012               	return		;funcret
  8555  0022D6                     __end_of_USBDeviceInit:
  8556                           	opt stack 0
  8557                           tosu	equ	0xFFF
  8558                           tosh	equ	0xFFE
  8559                           tosl	equ	0xFFD
  8560                           pclath	equ	0xFFA
  8561                           tblptru	equ	0xFF8
  8562                           tblptrh	equ	0xFF7
  8563                           tblptrl	equ	0xFF6
  8564                           tablat	equ	0xFF5
  8565                           prodh	equ	0xFF4
  8566                           prodl	equ	0xFF3
  8567                           intcon	equ	0xFF2
  8568                           intcon2	equ	0xFF1
  8569                           intcon3	equ	0xFF0
  8570                           postinc0	equ	0xFEE
  8571                           plusw0	equ	0xFEB
  8572                           wreg	equ	0xFE8
  8573                           postinc1	equ	0xFE6
  8574                           postdec1	equ	0xFE5
  8575                           fsr1h	equ	0xFE2
  8576                           fsr1l	equ	0xFE1
  8577                           indf2	equ	0xFDF
  8578                           postinc2	equ	0xFDE
  8579                           postdec2	equ	0xFDD
  8580                           plusw2	equ	0xFDB
  8581                           fsr2h	equ	0xFDA
  8582                           fsr2l	equ	0xFD9
  8583                           status	equ	0xFD8
  8584                           
  8585 ;; *************** function _USBCtrlEPService *****************
  8586 ;; Defined at:
  8587 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;		None
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;		None
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1    wreg      void 
  8594 ;; Registers used:
  8595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8603 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8604 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8605 ;;Total ram usage:        1 bytes
  8606 ;; Hardware stack levels used:    1
  8607 ;; Hardware stack levels required when called:   18
  8608 ;; This function calls:
  8609 ;;		_USBCtrlTrfInHandler
  8610 ;;		_USBCtrlTrfOutHandler
  8611 ;;		_USBCtrlTrfSetupHandler
  8612 ;;		_memcpy
  8613 ;; This function is called by:
  8614 ;;		_USBDeviceTasks
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           	psect	text34
  8619  004938                     __ptext34:
  8620                           	opt stack 0
  8621  004938                     _USBCtrlEPService:
  8622                           	opt stack 8
  8623                           
  8624                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8625                           
  8626                           ; BSR set to: 0
  8627                           ;incstack = 0
  8628  004938  0E2D               	movlw	45
  8629  00493A  0100               	movlb	0	; () banked
  8630  00493C  6FCA               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  8631                           
  8632                           ; BSR set to: 0
  8633                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8634  00493E  C0D6  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8635  004942  0EFD               	movlw	253
  8636  004944  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8637  004946  A4D8               	btfss	status,2,c
  8638  004948  D038               	goto	l1771
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;usb_device.c: 2401: {
  8642                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8643  00494A  C0D6  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8644  00494E  90D8               	bcf	status,0,c
  8645  004950  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8646  004952  0E3F               	movlw	63
  8647  004954  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8648  004956  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8649  004958  0D04               	mullw	4
  8650  00495A  0E00               	movlw	0
  8651  00495C  24F3               	addwf	prodl,w,c
  8652  00495E  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8653  004960  0E04               	movlw	4
  8654  004962  20F4               	addwfc	prodh,w,c
  8655  004964  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8659  004966  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8660  00496A  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8664  00496E  0E04               	movlw	4
  8665  004970  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8666                           
  8667                           ; BSR set to: 0
  8668                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8669  004972  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8670  004976  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8671  00497A  30DF               	rrcf	223,w,c
  8672  00497C  32E8               	rrcf	wreg,f,c
  8673  00497E  0B0F               	andlw	15
  8674  004980  0A0D               	xorlw	13
  8675  004982  A4D8               	btfss	status,2,c
  8676  004984  D017               	goto	l1772
  8677                           
  8678                           ; BSR set to: 0
  8679                           ;usb_device.c: 2418: {
  8680                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8681  004986  0E30               	movlw	48
  8682  004988  6F7D               	movwf	memcpy@d1& (0+255),b
  8683  00498A  0E04               	movlw	4
  8684  00498C  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8685  00498E  EE20 F002          	lfsr	2,2
  8686  004992  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8687  004994  26D9               	addwf	fsr2l,f,c
  8688  004996  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8689  004998  22DA               	addwfc	fsr2h,f,c
  8690  00499A  CFDE F07F          	movff	postinc2,memcpy@s1
  8691  00499E  CFDD F080          	movff	postdec2,memcpy@s1+1
  8692  0049A2  0E00               	movlw	0
  8693  0049A4  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8694  0049A6  0E08               	movlw	8
  8695  0049A8  6F81               	movwf	memcpy@n& (0+255),b
  8696  0049AA  ECE5  F02B         	call	_memcpy	;wreg free
  8697                           
  8698                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8699  0049AE  EC07  F026         	call	_USBCtrlTrfSetupHandler	;wreg free
  8700                           
  8701                           ;usb_device.c: 2427: }
  8702  0049B2  0012               	return	
  8703  0049B4                     l1772:
  8704                           
  8705                           ;usb_device.c: 2428: else
  8706                           ;usb_device.c: 2429: {
  8707                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8708  0049B4  EC2B  F028         	call	_USBCtrlTrfOutHandler	;wreg free
  8709                           
  8710                           ;usb_device.c: 2432: }
  8711                           ;usb_device.c: 2433: }
  8712  0049B8  0012               	return	
  8713  0049BA                     l1771:
  8714                           
  8715                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8716  0049BA  0100               	movlb	0	; () banked
  8717  0049BC  51D6               	movf	_USTATcopy& (0+255),w,b
  8718  0049BE  0BFD               	andlw	253
  8719  0049C0  0A04               	xorlw	4
  8720  0049C2  A4D8               	btfss	status,2,c
  8721  0049C4  0012               	return	
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;usb_device.c: 2435: {
  8725                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8726  0049C6  ECB4  F01F         	call	_USBCtrlTrfInHandler	;wreg free
  8727  0049CA  0012               	return	
  8728  0049CC                     __end_of_USBCtrlEPService:
  8729                           	opt stack 0
  8730                           tosu	equ	0xFFF
  8731                           tosh	equ	0xFFE
  8732                           tosl	equ	0xFFD
  8733                           pclath	equ	0xFFA
  8734                           tblptru	equ	0xFF8
  8735                           tblptrh	equ	0xFF7
  8736                           tblptrl	equ	0xFF6
  8737                           tablat	equ	0xFF5
  8738                           prodh	equ	0xFF4
  8739                           prodl	equ	0xFF3
  8740                           intcon	equ	0xFF2
  8741                           intcon2	equ	0xFF1
  8742                           intcon3	equ	0xFF0
  8743                           postinc0	equ	0xFEE
  8744                           plusw0	equ	0xFEB
  8745                           wreg	equ	0xFE8
  8746                           postinc1	equ	0xFE6
  8747                           postdec1	equ	0xFE5
  8748                           fsr1h	equ	0xFE2
  8749                           fsr1l	equ	0xFE1
  8750                           indf2	equ	0xFDF
  8751                           postinc2	equ	0xFDE
  8752                           postdec2	equ	0xFDD
  8753                           plusw2	equ	0xFDB
  8754                           fsr2h	equ	0xFDA
  8755                           fsr2l	equ	0xFD9
  8756                           status	equ	0xFD8
  8757                           
  8758 ;; *************** function _memcpy *****************
  8759 ;; Defined at:
  8760 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;  d1              2   29[BANK0 ] PTR void 
  8763 ;;		 -> SetupPkt(8), 
  8764 ;;  s1              2   31[BANK0 ] PTR const void 
  8765 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8766 ;;  n               2   33[BANK0 ] unsigned int 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  8769 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8770 ;;  d               2   36[BANK0 ] PTR unsigned char 
  8771 ;;		 -> SetupPkt(8), 
  8772 ;;  tmp             1   35[BANK0 ] unsigned char 
  8773 ;; Return value:  Size  Location     Type
  8774 ;;                  2   29[BANK0 ] PTR void 
  8775 ;; Registers used:
  8776 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8777 ;; Tracked objects:
  8778 ;;		On entry : 0/0
  8779 ;;		On exit  : 0/0
  8780 ;;		Unchanged: 0/0
  8781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8782 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8783 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8785 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8786 ;;Total ram usage:       11 bytes
  8787 ;; Hardware stack levels used:    1
  8788 ;; Hardware stack levels required when called:   11
  8789 ;; This function calls:
  8790 ;;		Nothing
  8791 ;; This function is called by:
  8792 ;;		_USBCtrlEPService
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           	psect	text35
  8797  0057CA                     __ptext35:
  8798                           	opt stack 0
  8799  0057CA                     _memcpy:
  8800                           	opt stack 14
  8801                           
  8802                           ;incstack = 0
  8803  0057CA  C07F  F086         	movff	memcpy@s1,memcpy@s
  8804  0057CE  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  8805  0057D2  C07D  F084         	movff	memcpy@d1,memcpy@d
  8806  0057D6  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  8807  0057DA  D011               	goto	l3157
  8808  0057DC                     l12882:
  8809  0057DC  C086  FFD9         	movff	memcpy@s,fsr2l
  8810  0057E0  C087  FFDA         	movff	memcpy@s+1,fsr2h
  8811  0057E4  50DF               	movf	indf2,w,c
  8812  0057E6  0100               	movlb	0	; () banked
  8813  0057E8  6F83               	movwf	memcpy@tmp& (0+255),b
  8814                           
  8815                           ; BSR set to: 0
  8816  0057EA  4B86               	infsnz	memcpy@s& (0+255),f,b
  8817  0057EC  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  8818                           
  8819                           ; BSR set to: 0
  8820  0057EE  C084  FFD9         	movff	memcpy@d,fsr2l
  8821  0057F2  C085  FFDA         	movff	memcpy@d+1,fsr2h
  8822  0057F6  C083  FFDF         	movff	memcpy@tmp,indf2
  8823                           
  8824                           ; BSR set to: 0
  8825  0057FA  4B84               	infsnz	memcpy@d& (0+255),f,b
  8826  0057FC  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  8827  0057FE                     l3157:
  8828                           
  8829                           ; BSR set to: 0
  8830  0057FE  0100               	movlb	0	; () banked
  8831  005800  0781               	decf	memcpy@n& (0+255),f,b
  8832  005802  A0D8               	btfss	status,0,c
  8833  005804  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8834  005806  2981               	incf	memcpy@n& (0+255),w,b
  8835  005808  E1E9               	bnz	l12882
  8836  00580A  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8837  00580C  B4D8               	btfsc	status,2,c
  8838  00580E  0012               	return	
  8839  005810  D7E5               	goto	l3158
  8840  005812                     __end_of_memcpy:
  8841                           	opt stack 0
  8842                           tosu	equ	0xFFF
  8843                           tosh	equ	0xFFE
  8844                           tosl	equ	0xFFD
  8845                           pclath	equ	0xFFA
  8846                           tblptru	equ	0xFF8
  8847                           tblptrh	equ	0xFF7
  8848                           tblptrl	equ	0xFF6
  8849                           tablat	equ	0xFF5
  8850                           prodh	equ	0xFF4
  8851                           prodl	equ	0xFF3
  8852                           intcon	equ	0xFF2
  8853                           intcon2	equ	0xFF1
  8854                           intcon3	equ	0xFF0
  8855                           postinc0	equ	0xFEE
  8856                           plusw0	equ	0xFEB
  8857                           wreg	equ	0xFE8
  8858                           postinc1	equ	0xFE6
  8859                           postdec1	equ	0xFE5
  8860                           fsr1h	equ	0xFE2
  8861                           fsr1l	equ	0xFE1
  8862                           indf2	equ	0xFDF
  8863                           postinc2	equ	0xFDE
  8864                           postdec2	equ	0xFDD
  8865                           plusw2	equ	0xFDB
  8866                           fsr2h	equ	0xFDA
  8867                           fsr2l	equ	0xFD9
  8868                           status	equ	0xFD8
  8869                           
  8870 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8871 ;; Defined at:
  8872 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8873 ;; Parameters:    Size  Location     Type
  8874 ;;		None
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;		None
  8877 ;; Return value:  Size  Location     Type
  8878 ;;                  1    wreg      void 
  8879 ;; Registers used:
  8880 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8881 ;; Tracked objects:
  8882 ;;		On entry : 0/0
  8883 ;;		On exit  : 0/0
  8884 ;;		Unchanged: 0/0
  8885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8890 ;;Total ram usage:        0 bytes
  8891 ;; Hardware stack levels used:    1
  8892 ;; Hardware stack levels required when called:   17
  8893 ;; This function calls:
  8894 ;;		_USBCheckStdRequest
  8895 ;;		_USBCtrlEPServiceComplete
  8896 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8897 ;; This function is called by:
  8898 ;;		_USBCtrlEPService
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           	psect	text36
  8903  004C0E                     __ptext36:
  8904                           	opt stack 0
  8905  004C0E                     _USBCtrlTrfSetupHandler:
  8906                           	opt stack 8
  8907                           
  8908                           ;usb_device.c: 2488: shortPacketStatus = 0;
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;incstack = 0
  8912  004C0E  0E00               	movlw	0
  8913  004C10  0100               	movlb	0	; () banked
  8914  004C12  6FCD               	movwf	_shortPacketStatus& (0+255),b
  8915                           
  8916                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  8917  004C14  0E00               	movlw	0
  8918  004C16  6FC9               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  8919                           
  8920                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  8921  004C18  0E00               	movlw	0
  8922  004C1A  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8923                           
  8924                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  8925  004C1C  0E00               	movlw	0
  8926  004C1E  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8927                           
  8928                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  8929  004C20  0E00               	movlw	0
  8930  004C22  0101               	movlb	1	; () banked
  8931  004C24  6FE3               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8932                           
  8933                           ;usb_device.c: 2493: controlTransferState = 0;
  8934  004C26  0E00               	movlw	0
  8935  004C28  0100               	movlb	0	; () banked
  8936  004C2A  6FCC               	movwf	_controlTransferState& (0+255),b
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8940  004C2C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8941  004C30  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8942  004C34  0E7F               	movlw	127
  8943  004C36  16DF               	andwf	indf2,f,c
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8947  004C38  0E04               	movlw	4
  8948  004C3A  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  8949                           
  8950                           ; BSR set to: 0
  8951                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8952  004C3C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8953  004C40  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8954  004C44  0E7F               	movlw	127
  8955  004C46  16DF               	andwf	indf2,f,c
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8959  004C48  0E04               	movlw	4
  8960  004C4A  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8964  004C4C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8965  004C50  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8966  004C54  0E7F               	movlw	127
  8967  004C56  16DF               	andwf	indf2,f,c
  8968                           
  8969                           ; BSR set to: 0
  8970                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  8971  004C58  0E00               	movlw	0
  8972  004C5A  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8973                           
  8974                           ; BSR set to: 0
  8975                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  8976  004C5C  0E00               	movlw	0
  8977  004C5E  6FB5               	movwf	(_inPipes+5)& (0+255),b
  8978  004C60  0E00               	movlw	0
  8979  004C62  6FB4               	movwf	(_inPipes+4)& (0+255),b
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  8983  004C64  0E00               	movlw	0
  8984  004C66  0101               	movlb	1	; () banked
  8985  004C68  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8986                           
  8987                           ; BSR set to: 1
  8988                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  8989  004C6A  0E00               	movlw	0
  8990  004C6C  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8991  004C6E  0E00               	movlw	0
  8992  004C70  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8993                           
  8994                           ; BSR set to: 1
  8995                           ;usb_device.c: 2517: USBCheckStdRequest();
  8996  004C72  EC74  F01A         	call	_USBCheckStdRequest	;wreg free
  8997                           
  8998                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8999  004C76  0E00               	movlw	0
  9000  004C78  0100               	movlb	0	; () banked
  9001  004C7A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9002  004C7C  0E03               	movlw	3
  9003  004C7E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9004  004C80  0E00               	movlw	0
  9005  004C82  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9006  004C84  0E00               	movlw	0
  9007  004C86  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9008  004C88  0E00               	movlw	0
  9009  004C8A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9010  004C8C  0E00               	movlw	0
  9011  004C8E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9012  004C90  ECC2  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9013                           
  9014                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9015  004C94  EC23  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9016  004C98  0012               	return		;funcret
  9017  004C9A                     __end_of_USBCtrlTrfSetupHandler:
  9018                           	opt stack 0
  9019                           tosu	equ	0xFFF
  9020                           tosh	equ	0xFFE
  9021                           tosl	equ	0xFFD
  9022                           pclath	equ	0xFFA
  9023                           tblptru	equ	0xFF8
  9024                           tblptrh	equ	0xFF7
  9025                           tblptrl	equ	0xFF6
  9026                           tablat	equ	0xFF5
  9027                           prodh	equ	0xFF4
  9028                           prodl	equ	0xFF3
  9029                           intcon	equ	0xFF2
  9030                           intcon2	equ	0xFF1
  9031                           intcon3	equ	0xFF0
  9032                           postinc0	equ	0xFEE
  9033                           plusw0	equ	0xFEB
  9034                           wreg	equ	0xFE8
  9035                           postinc1	equ	0xFE6
  9036                           postdec1	equ	0xFE5
  9037                           fsr1h	equ	0xFE2
  9038                           fsr1l	equ	0xFE1
  9039                           indf2	equ	0xFDF
  9040                           postinc2	equ	0xFDE
  9041                           postdec2	equ	0xFDD
  9042                           plusw2	equ	0xFDB
  9043                           fsr2h	equ	0xFDA
  9044                           fsr2l	equ	0xFD9
  9045                           status	equ	0xFD8
  9046                           
  9047 ;; *************** function _USBCtrlEPServiceComplete *****************
  9048 ;; Defined at:
  9049 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;		None
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;		None
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  1    wreg      void 
  9056 ;; Registers used:
  9057 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9067 ;;Total ram usage:        0 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:   13
  9070 ;; This function calls:
  9071 ;;		_USBCtrlEPAllowDataStage
  9072 ;;		_USBCtrlEPAllowStatusStage
  9073 ;; This function is called by:
  9074 ;;		_USBCtrlTrfSetupHandler
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text37
  9079  003046                     __ptext37:
  9080                           	opt stack 0
  9081  003046                     _USBCtrlEPServiceComplete:
  9082                           	opt stack 11
  9083                           
  9084                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9085                           
  9086                           ;incstack = 0
  9087  003046  9865               	bcf	3941,4,c	;volatile
  9088                           
  9089                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9090  003048  0100               	movlb	0	; () banked
  9091  00304A  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9092  00304C  D03C               	goto	l1681
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;usb_device.c: 1647: {
  9096                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9097  00304E  0101               	movlb	1	; () banked
  9098  003050  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9099  003052  D00D               	goto	l1682
  9100                           
  9101                           ; BSR set to: 1
  9102                           ;usb_device.c: 1649: {
  9103                           ;usb_device.c: 1650: controlTransferState = 2;
  9104  003054  0E02               	movlw	2
  9105  003056  0100               	movlb	0	; () banked
  9106  003058  6FCC               	movwf	_controlTransferState& (0+255),b
  9107                           
  9108                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9109  00305A  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9110  00305C  B4D8               	btfsc	status,2,c
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;usb_device.c: 1662: {
  9114                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9115  00305E  EC6B  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9116                           
  9117                           ;usb_device.c: 1664: }
  9118                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9119  003062  0E00               	movlw	0
  9120  003064  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9121                           
  9122                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9123  003066  0E00               	movlw	0
  9124  003068  0100               	movlb	0	; () banked
  9125  00306A  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9126                           
  9127                           ;usb_device.c: 1670: }
  9128  00306C  0012               	return	
  9129  00306E                     l1682:
  9130                           
  9131                           ;usb_device.c: 1671: else
  9132                           ;usb_device.c: 1672: {
  9133                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9134                           
  9135                           ; BSR set to: 0
  9136  00306E  0100               	movlb	0	; () banked
  9137  003070  EE20 F001          	lfsr	2,1
  9138  003074  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9139  003076  26D9               	addwf	fsr2l,f,c
  9140  003078  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9141  00307A  22DA               	addwfc	fsr2h,f,c
  9142  00307C  0E08               	movlw	8
  9143  00307E  6EDF               	movwf	indf2,c
  9144                           
  9145                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9146  003080  EE20 F002          	lfsr	2,2
  9147  003084  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9148  003086  26D9               	addwf	fsr2l,f,c
  9149  003088  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9150  00308A  22DA               	addwfc	fsr2h,f,c
  9151  00308C  0E30               	movlw	48
  9152  00308E  6EDE               	movwf	postinc2,c
  9153  003090  0E04               	movlw	4
  9154  003092  6EDD               	movwf	postdec2,c
  9155                           
  9156                           ; BSR set to: 0
  9157                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9158  003094  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9159  003098  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9160  00309C  0E0C               	movlw	12
  9161  00309E  6EDF               	movwf	indf2,c
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9165  0030A0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9166  0030A4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9167  0030A8  0E00               	movlw	0
  9168  0030AA  8EDB               	bsf	plusw2,7,c
  9169                           
  9170                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9171  0030AC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9172  0030B0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9173  0030B4  0E04               	movlw	4
  9174  0030B6  6EDF               	movwf	indf2,c
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9178  0030B8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9179  0030BC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9180  0030C0  0E00               	movlw	0
  9181  0030C2  8EDB               	bsf	plusw2,7,c
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;usb_device.c: 1683: }
  9185                           ;usb_device.c: 1684: }
  9186  0030C4  0012               	return	
  9187  0030C6                     l1681:
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;usb_device.c: 1685: else
  9191                           ;usb_device.c: 1686: {
  9192                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9193  0030C6  0104               	movlb	4	; () banked
  9194  0030C8  AF30               	btfss	48,7,b	;volatile
  9195  0030CA  D012               	goto	l1686
  9196                           
  9197                           ; BSR set to: 4
  9198                           ;usb_device.c: 1688: {
  9199                           ;usb_device.c: 1689: controlTransferState = 1;
  9200  0030CC  0E01               	movlw	1
  9201  0030CE  0100               	movlb	0	; () banked
  9202  0030D0  6FCC               	movwf	_controlTransferState& (0+255),b
  9203                           
  9204                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9205  0030D2  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9206  0030D4  B4D8               	btfsc	status,2,c
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;usb_device.c: 1704: {
  9210                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9211  0030D6  EC6B  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9212                           
  9213                           ;usb_device.c: 1706: }
  9214                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9215  0030DA  0E00               	movlw	0
  9216  0030DC  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9217                           
  9218                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9219  0030DE  0E00               	movlw	0
  9220  0030E0  0100               	movlb	0	; () banked
  9221  0030E2  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9222                           
  9223                           ; BSR set to: 0
  9224                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9225  0030E4  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9226  0030E6  A4D8               	btfss	status,2,c
  9227  0030E8  0012               	return	
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;usb_device.c: 1731: {
  9231                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9232  0030EA  EC5B  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9233                           
  9234                           ;usb_device.c: 1733: }
  9235                           ;usb_device.c: 1734: }
  9236  0030EE  0012               	return	
  9237  0030F0                     l1686:
  9238                           
  9239                           ;usb_device.c: 1735: else
  9240                           ;usb_device.c: 1736: {
  9241                           ;usb_device.c: 1747: controlTransferState = 2;
  9242  0030F0  0E02               	movlw	2
  9243  0030F2  0100               	movlb	0	; () banked
  9244  0030F4  6FCC               	movwf	_controlTransferState& (0+255),b
  9245                           
  9246                           ; BSR set to: 0
  9247                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9248  0030F6  EE20 F001          	lfsr	2,1
  9249  0030FA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9250  0030FC  26D9               	addwf	fsr2l,f,c
  9251  0030FE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9252  003100  22DA               	addwfc	fsr2h,f,c
  9253  003102  0E08               	movlw	8
  9254  003104  6EDF               	movwf	indf2,c
  9255                           
  9256                           ; BSR set to: 0
  9257                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9258  003106  EE20 F002          	lfsr	2,2
  9259  00310A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9260  00310C  26D9               	addwf	fsr2l,f,c
  9261  00310E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9262  003110  22DA               	addwfc	fsr2h,f,c
  9263  003112  0E30               	movlw	48
  9264  003114  6EDE               	movwf	postinc2,c
  9265  003116  0E04               	movlw	4
  9266  003118  6EDD               	movwf	postdec2,c
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9270  00311A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9271  00311E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9272  003122  0E04               	movlw	4
  9273  003124  6EDF               	movwf	indf2,c
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9277  003126  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9278  00312A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9279  00312E  0E00               	movlw	0
  9280  003130  8EDB               	bsf	plusw2,7,c
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9284  003132  0E00               	movlw	0
  9285  003134  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9289  003136  0E00               	movlw	0
  9290  003138  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9291                           
  9292                           ; BSR set to: 0
  9293                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9294  00313A  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9295  00313C  A4D8               	btfss	status,2,c
  9296  00313E  0012               	return	
  9297                           
  9298                           ; BSR set to: 0
  9299                           ;usb_device.c: 1759: {
  9300                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9301  003140  EC5B  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9302  003144  0012               	return	
  9303  003146                     __end_of_USBCtrlEPServiceComplete:
  9304                           	opt stack 0
  9305                           tosu	equ	0xFFF
  9306                           tosh	equ	0xFFE
  9307                           tosl	equ	0xFFD
  9308                           pclath	equ	0xFFA
  9309                           tblptru	equ	0xFF8
  9310                           tblptrh	equ	0xFF7
  9311                           tblptrl	equ	0xFF6
  9312                           tablat	equ	0xFF5
  9313                           prodh	equ	0xFF4
  9314                           prodl	equ	0xFF3
  9315                           intcon	equ	0xFF2
  9316                           intcon2	equ	0xFF1
  9317                           intcon3	equ	0xFF0
  9318                           postinc0	equ	0xFEE
  9319                           plusw0	equ	0xFEB
  9320                           wreg	equ	0xFE8
  9321                           postinc1	equ	0xFE6
  9322                           postdec1	equ	0xFE5
  9323                           fsr1h	equ	0xFE2
  9324                           fsr1l	equ	0xFE1
  9325                           indf2	equ	0xFDF
  9326                           postinc2	equ	0xFDE
  9327                           postdec2	equ	0xFDD
  9328                           plusw2	equ	0xFDB
  9329                           fsr2h	equ	0xFDA
  9330                           fsr2l	equ	0xFD9
  9331                           status	equ	0xFD8
  9332                           
  9333 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9334 ;; Defined at:
  9335 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;		None
  9338 ;; Auto vars:     Size  Location     Type
  9339 ;;		None
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  1    wreg      void 
  9342 ;; Registers used:
  9343 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9344 ;; Tracked objects:
  9345 ;;		On entry : 0/0
  9346 ;;		On exit  : 0/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9353 ;;Total ram usage:        0 bytes
  9354 ;; Hardware stack levels used:    1
  9355 ;; Hardware stack levels required when called:   12
  9356 ;; This function calls:
  9357 ;;		_USBCtrlTrfTxService
  9358 ;; This function is called by:
  9359 ;;		_USBCtrlEPServiceComplete
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           
  9363                           	psect	text38
  9364  0046D6                     __ptext38:
  9365                           	opt stack 0
  9366  0046D6                     _USBCtrlEPAllowDataStage:
  9367                           	opt stack 11
  9368                           
  9369                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9370                           
  9371                           ;incstack = 0
  9372  0046D6  0E00               	movlw	0
  9373  0046D8  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9374                           
  9375                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9376  0046DA  0E00               	movlw	0
  9377  0046DC  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9378                           
  9379                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9380  0046DE  0E02               	movlw	2
  9381  0046E0  0100               	movlb	0	; () banked
  9382  0046E2  19CC               	xorwf	_controlTransferState& (0+255),w,b
  9383  0046E4  A4D8               	btfss	status,2,c
  9384  0046E6  D01F               	goto	l1670
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;usb_device.c: 1512: {
  9388                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9389  0046E8  EE20 F001          	lfsr	2,1
  9390  0046EC  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9391  0046EE  26D9               	addwf	fsr2l,f,c
  9392  0046F0  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9393  0046F2  22DA               	addwfc	fsr2h,f,c
  9394  0046F4  0E08               	movlw	8
  9395  0046F6  6EDF               	movwf	indf2,c
  9396                           
  9397                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9398  0046F8  EE20 F002          	lfsr	2,2
  9399  0046FC  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9400  0046FE  26D9               	addwf	fsr2l,f,c
  9401  004700  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9402  004702  22DA               	addwfc	fsr2h,f,c
  9403  004704  0E38               	movlw	56
  9404  004706  6EDE               	movwf	postinc2,c
  9405  004708  0E04               	movlw	4
  9406  00470A  6EDD               	movwf	postdec2,c
  9407                           
  9408                           ; BSR set to: 0
  9409                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9410  00470C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9411  004710  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9412  004714  0E48               	movlw	72
  9413  004716  6EDF               	movwf	indf2,c
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9417  004718  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9418  00471C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9419  004720  0E00               	movlw	0
  9420  004722  8EDB               	bsf	plusw2,7,c
  9421                           
  9422                           ;usb_device.c: 1518: }
  9423  004724  0012               	return	
  9424  004726                     l1670:
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;usb_device.c: 1519: else
  9428                           ;usb_device.c: 1520: {
  9429                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9430                           
  9431                           ; BSR set to: 0
  9432  004726  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9433  004728  0104               	movlb	4	; () banked
  9434  00472A  5D36               	subwf	54,w,b	;volatile
  9435  00472C  0100               	movlb	0	; () banked
  9436  00472E  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9437  004730  0104               	movlb	4	; () banked
  9438  004732  5937               	subwfb	55,w,b	;volatile
  9439  004734  B0D8               	btfsc	status,0,c
  9440  004736  D004               	goto	l1672
  9441                           
  9442                           ; BSR set to: 4
  9443                           ;usb_device.c: 1524: {
  9444                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9445  004738  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9446  00473C  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9447  004740                     l1672:
  9448                           
  9449                           ; BSR set to: 4
  9450                           ;usb_device.c: 1526: }
  9451                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9452                           
  9453                           ; BSR set to: 4
  9454  004740  ECE6  F01A         	call	_USBCtrlTrfTxService	;wreg free
  9455                           
  9456                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9457  004744  0100               	movlb	0	; () banked
  9458  004746  EE20 F002          	lfsr	2,2
  9459  00474A  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9460  00474C  26D9               	addwf	fsr2l,f,c
  9461  00474E  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9462  004750  22DA               	addwfc	fsr2h,f,c
  9463  004752  0E38               	movlw	56
  9464  004754  6EDE               	movwf	postinc2,c
  9465  004756  0E04               	movlw	4
  9466  004758  6EDD               	movwf	postdec2,c
  9467                           
  9468                           ; BSR set to: 0
  9469                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9470  00475A  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9471  00475E  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9472  004762  0E48               	movlw	72
  9473  004764  6EDF               	movwf	indf2,c
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9477  004766  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9478  00476A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9479  00476E  0E00               	movlw	0
  9480  004770  8EDB               	bsf	plusw2,7,c
  9481  004772  0012               	return	
  9482  004774                     __end_of_USBCtrlEPAllowDataStage:
  9483                           	opt stack 0
  9484                           tosu	equ	0xFFF
  9485                           tosh	equ	0xFFE
  9486                           tosl	equ	0xFFD
  9487                           pclath	equ	0xFFA
  9488                           tblptru	equ	0xFF8
  9489                           tblptrh	equ	0xFF7
  9490                           tblptrl	equ	0xFF6
  9491                           tablat	equ	0xFF5
  9492                           prodh	equ	0xFF4
  9493                           prodl	equ	0xFF3
  9494                           intcon	equ	0xFF2
  9495                           intcon2	equ	0xFF1
  9496                           intcon3	equ	0xFF0
  9497                           postinc0	equ	0xFEE
  9498                           plusw0	equ	0xFEB
  9499                           wreg	equ	0xFE8
  9500                           postinc1	equ	0xFE6
  9501                           postdec1	equ	0xFE5
  9502                           fsr1h	equ	0xFE2
  9503                           fsr1l	equ	0xFE1
  9504                           indf2	equ	0xFDF
  9505                           postinc2	equ	0xFDE
  9506                           postdec2	equ	0xFDD
  9507                           plusw2	equ	0xFDB
  9508                           fsr2h	equ	0xFDA
  9509                           fsr2l	equ	0xFD9
  9510                           status	equ	0xFD8
  9511                           
  9512 ;; *************** function _USBCheckStdRequest *****************
  9513 ;; Defined at:
  9514 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9515 ;; Parameters:    Size  Location     Type
  9516 ;;		None
  9517 ;; Auto vars:     Size  Location     Type
  9518 ;;		None
  9519 ;; Return value:  Size  Location     Type
  9520 ;;                  1    wreg      void 
  9521 ;; Registers used:
  9522 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9523 ;; Tracked objects:
  9524 ;;		On entry : 0/0
  9525 ;;		On exit  : 0/0
  9526 ;;		Unchanged: 0/0
  9527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9532 ;;Total ram usage:        0 bytes
  9533 ;; Hardware stack levels used:    1
  9534 ;; Hardware stack levels required when called:   16
  9535 ;; This function calls:
  9536 ;;		_USBStdFeatureReqHandler
  9537 ;;		_USBStdGetDscHandler
  9538 ;;		_USBStdGetStatusHandler
  9539 ;;		_USBStdSetCfgHandler
  9540 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9541 ;; This function is called by:
  9542 ;;		_USBCtrlTrfSetupHandler
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545                           
  9546                           	psect	text39
  9547  0034E8                     __ptext39:
  9548                           	opt stack 0
  9549  0034E8                     _USBCheckStdRequest:
  9550                           	opt stack 8
  9551                           
  9552                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9553                           
  9554                           ; BSR set to: 0
  9555                           ;incstack = 0
  9556  0034E8  0104               	movlb	4	; () banked
  9557  0034EA  3930               	swapf	48,w,b	;volatile
  9558  0034EC  32E8               	rrcf	wreg,f,c
  9559  0034EE  0B03               	andlw	3
  9560  0034F0  0900               	iorlw	0
  9561  0034F2  A4D8               	btfss	status,2,c
  9562  0034F4  0012               	return	
  9563  0034F6  D048               	goto	l1805
  9564  0034F8                     l1806:
  9565                           
  9566                           ; BSR set to: 4
  9567                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9568  0034F8  0100               	movlb	0	; () banked
  9569  0034FA  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9570                           
  9571                           ; BSR set to: 0
  9572                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9573  0034FC  0E08               	movlw	8
  9574  0034FE  6FCE               	movwf	_USBDeviceState& (0+255),b
  9575                           
  9576                           ;usb_device.c: 2713: break;
  9577  003500  0012               	return	
  9578  003502                     
  9579                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9580                           
  9581                           ; BSR set to: 0
  9582  003502  ECDA  F015         	call	_USBStdGetDscHandler	;wreg free
  9583                           
  9584                           ;usb_device.c: 2716: break;
  9585  003506  0012               	return	
  9586  003508                     
  9587                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9588  003508  EC8E  F019         	call	_USBStdSetCfgHandler	;wreg free
  9589                           
  9590                           ;usb_device.c: 2719: break;
  9591  00350C  0012               	return	
  9592  00350E                     
  9593                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9594  00350E  0ED7               	movlw	low _USBActiveConfiguration
  9595  003510  0100               	movlb	0	; () banked
  9596  003512  6FB0               	movwf	_inPipes& (0+255),b
  9597  003514  0E00               	movlw	high _USBActiveConfiguration
  9598  003516  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9599                           
  9600                           ; BSR set to: 0
  9601                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9602  003518  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9603                           
  9604                           ; BSR set to: 0
  9605                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9606  00351A  0E01               	movlw	1
  9607  00351C  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9611  00351E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9612                           
  9613                           ;usb_device.c: 2725: break;
  9614  003520  0012               	return	
  9615  003522                     
  9616                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9617                           
  9618                           ; BSR set to: 0
  9619  003522  EC74  F020         	call	_USBStdGetStatusHandler	;wreg free
  9620                           
  9621                           ;usb_device.c: 2728: break;
  9622  003526  0012               	return	
  9623  003528                     
  9624                           ;usb_device.c: 2730: case 3:
  9625                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9626  003528  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9627                           
  9628                           ;usb_device.c: 2732: break;
  9629  00352C  0012               	return	
  9630  00352E                     
  9631                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9632  00352E  0104               	movlb	4	; () banked
  9633  003530  5134               	movf	52,w,b	;volatile
  9634  003532  0D01               	mullw	1
  9635  003534  0EF1               	movlw	low _USBAlternateInterface
  9636  003536  24F3               	addwf	prodl,w,c
  9637  003538  0100               	movlb	0	; () banked
  9638  00353A  6FB0               	movwf	_inPipes& (0+255),b
  9639  00353C  0E02               	movlw	high _USBAlternateInterface
  9640  00353E  20F4               	addwfc	prodh,w,c
  9641  003540  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9645  003542  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9646                           
  9647                           ; BSR set to: 0
  9648                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9649  003544  0E01               	movlw	1
  9650  003546  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9651                           
  9652                           ; BSR set to: 0
  9653                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9654  003548  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9655                           
  9656                           ;usb_device.c: 2738: break;
  9657  00354A  0012               	return	
  9658  00354C                     l1815:
  9659                           
  9660                           ; BSR set to: 4
  9661                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9662  00354C  0100               	movlb	0	; () banked
  9663  00354E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9664                           
  9665                           ; BSR set to: 0
  9666                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9667  003550  0104               	movlb	4	; () banked
  9668  003552  5134               	movf	52,w,b	;volatile
  9669  003554  0D01               	mullw	1
  9670  003556  0EF1               	movlw	low _USBAlternateInterface
  9671  003558  24F3               	addwf	prodl,w,c
  9672  00355A  6ED9               	movwf	fsr2l,c
  9673  00355C  0E02               	movlw	high _USBAlternateInterface
  9674  00355E  20F4               	addwfc	prodh,w,c
  9675  003560  6EDA               	movwf	fsr2h,c
  9676  003562  C432 FFDF          	movff	1074,indf2	;volatile
  9677                           
  9678                           ;usb_device.c: 2742: break;
  9679  003566  0012               	return	
  9680  003568                     
  9681                           ; BSR set to: 4
  9682                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9683                           
  9684                           ; BSR set to: 4
  9685  003568  0E00               	movlw	0
  9686  00356A  0100               	movlb	0	; () banked
  9687  00356C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9688  00356E  0E02               	movlw	2
  9689  003570  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9690  003572  0E00               	movlw	0
  9691  003574  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9692  003576  0E00               	movlw	0
  9693  003578  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9694  00357A  0E00               	movlw	0
  9695  00357C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9696  00357E  0E00               	movlw	0
  9697  003580  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9698  003582  ECC2  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9699                           
  9700                           ;usb_device.c: 2749: }
  9701                           
  9702                           ;usb_device.c: 2748: break;
  9703                           
  9704                           ;usb_device.c: 2747: default:
  9705                           
  9706                           ;usb_device.c: 2746: case 12:
  9707                           
  9708                           ;usb_device.c: 2745: break;
  9709  003586  0012               	return	
  9710  003588                     l1805:
  9711  003588  0104               	movlb	4	; () banked
  9712  00358A  5131               	movf	49,w,b	;volatile
  9713                           
  9714                           ; Switch size 1, requested type "space"
  9715                           ; Number of cases is 11, Range of values is 0 to 12
  9716                           ; switch strategies available:
  9717                           ; Name         Instructions Cycles
  9718                           ; simple_byte           34    18 (average)
  9719                           ;	Chosen strategy is simple_byte
  9720  00358C  0A00               	xorlw	0	; case 0
  9721  00358E  B4D8               	btfsc	status,2,c
  9722  003590  D7C8               	goto	l1811
  9723  003592  0A01               	xorlw	1	; case 1
  9724  003594  B4D8               	btfsc	status,2,c
  9725  003596  D7C8               	goto	l1812
  9726  003598  0A02               	xorlw	2	; case 3
  9727  00359A  B4D8               	btfsc	status,2,c
  9728  00359C  D7C5               	goto	l1812
  9729  00359E  0A06               	xorlw	6	; case 5
  9730  0035A0  B4D8               	btfsc	status,2,c
  9731  0035A2  D7AA               	goto	l1806
  9732  0035A4  0A03               	xorlw	3	; case 6
  9733  0035A6  B4D8               	btfsc	status,2,c
  9734  0035A8  D7AC               	goto	l1808
  9735  0035AA  0A01               	xorlw	1	; case 7
  9736  0035AC  B4D8               	btfsc	status,2,c
  9737  0035AE  D7DC               	goto	l1816
  9738  0035B0  0A0F               	xorlw	15	; case 8
  9739  0035B2  B4D8               	btfsc	status,2,c
  9740  0035B4  D7AC               	goto	l1810
  9741  0035B6  0A01               	xorlw	1	; case 9
  9742  0035B8  B4D8               	btfsc	status,2,c
  9743  0035BA  D7A6               	goto	l1809
  9744  0035BC  0A03               	xorlw	3	; case 10
  9745  0035BE  B4D8               	btfsc	status,2,c
  9746  0035C0  D7B6               	goto	l1814
  9747  0035C2  0A01               	xorlw	1	; case 11
  9748  0035C4  B4D8               	btfsc	status,2,c
  9749  0035C6  D7C2               	goto	l1815
  9750  0035C8  0A07               	xorlw	7	; case 12
  9751  0035CA  0012               	return	
  9752  0035CC                     __end_of_USBCheckStdRequest:
  9753                           	opt stack 0
  9754                           tosu	equ	0xFFF
  9755                           tosh	equ	0xFFE
  9756                           tosl	equ	0xFFD
  9757                           pclath	equ	0xFFA
  9758                           tblptru	equ	0xFF8
  9759                           tblptrh	equ	0xFF7
  9760                           tblptrl	equ	0xFF6
  9761                           tablat	equ	0xFF5
  9762                           prodh	equ	0xFF4
  9763                           prodl	equ	0xFF3
  9764                           intcon	equ	0xFF2
  9765                           intcon2	equ	0xFF1
  9766                           intcon3	equ	0xFF0
  9767                           postinc0	equ	0xFEE
  9768                           plusw0	equ	0xFEB
  9769                           wreg	equ	0xFE8
  9770                           postinc1	equ	0xFE6
  9771                           postdec1	equ	0xFE5
  9772                           fsr1h	equ	0xFE2
  9773                           fsr1l	equ	0xFE1
  9774                           indf2	equ	0xFDF
  9775                           postinc2	equ	0xFDE
  9776                           postdec2	equ	0xFDD
  9777                           plusw2	equ	0xFDB
  9778                           fsr2h	equ	0xFDA
  9779                           fsr2l	equ	0xFD9
  9780                           status	equ	0xFD8
  9781                           
  9782 ;; *************** function _USBStdSetCfgHandler *****************
  9783 ;; Defined at:
  9784 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9785 ;; Parameters:    Size  Location     Type
  9786 ;;		None
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;  i               1   49[BANK0 ] unsigned char 
  9789 ;; Return value:  Size  Location     Type
  9790 ;;                  1    wreg      void 
  9791 ;; Registers used:
  9792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9793 ;; Tracked objects:
  9794 ;;		On entry : 0/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9799 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9801 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9802 ;;Total ram usage:        1 bytes
  9803 ;; Hardware stack levels used:    1
  9804 ;; Hardware stack levels required when called:   15
  9805 ;; This function calls:
  9806 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9807 ;;		_memset
  9808 ;; This function is called by:
  9809 ;;		_USBCheckStdRequest
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813                           	psect	text40
  9814  00331C                     __ptext40:
  9815                           	opt stack 0
  9816  00331C                     _USBStdSetCfgHandler:
  9817                           	opt stack 8
  9818                           
  9819                           ;usb_device.c: 1988: uint8_t i;
  9820                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9821                           
  9822                           ;incstack = 0
  9823  00331C  0100               	movlb	0	; () banked
  9824  00331E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9825                           
  9826                           ; BSR set to: 0
  9827                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9828  003320  0E27               	movlw	39
  9829  003322  6F7D               	movwf	memset@p1& (0+255),b
  9830  003324  0E0F               	movlw	15
  9831  003326  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9832  003328  0E00               	movlw	0
  9833  00332A  6F80               	movwf	(memset@c+1)& (0+255),b
  9834  00332C  0E00               	movlw	0
  9835  00332E  6F7F               	movwf	memset@c& (0+255),b
  9836  003330  0E00               	movlw	0
  9837  003332  6F82               	movwf	(memset@n+1)& (0+255),b
  9838  003334  0E02               	movlw	2
  9839  003336  6F81               	movwf	memset@n& (0+255),b
  9840  003338  ECEA  F02E         	call	_memset	;wreg free
  9841                           
  9842                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9843  00333C  0E00               	movlw	0
  9844  00333E  0100               	movlb	0	; () banked
  9845  003340  6F7D               	movwf	memset@p1& (0+255),b
  9846  003342  0E04               	movlw	4
  9847  003344  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9848  003346  0E00               	movlw	0
  9849  003348  6F80               	movwf	(memset@c+1)& (0+255),b
  9850  00334A  0E00               	movlw	0
  9851  00334C  6F7F               	movwf	memset@c& (0+255),b
  9852  00334E  0E00               	movlw	0
  9853  003350  6F82               	movwf	(memset@n+1)& (0+255),b
  9854  003352  0E30               	movlw	48
  9855  003354  6F81               	movwf	memset@n& (0+255),b
  9856  003356  ECEA  F02E         	call	_memset	;wreg free
  9857                           
  9858                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9859  00335A  8C65               	bsf	3941,6,c	;volatile
  9860                           
  9861                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9862  00335C  0E00               	movlw	0
  9863  00335E  0100               	movlb	0	; () banked
  9864  003360  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
  9865  003362                     l12248:
  9866                           
  9867                           ; BSR set to: 0
  9868  003362  0E02               	movlw	2
  9869  003364  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  9870  003366  D001               	goto	l1722
  9871  003368  D016               	goto	u10840
  9872  00336A                     l1722:
  9873                           
  9874                           ; BSR set to: 0
  9875                           ;usb_device.c: 2006: {
  9876                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  9877                           
  9878                           ; BSR set to: 0
  9879  00336A  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9880  00336C  0D01               	mullw	1
  9881  00336E  0ED1               	movlw	low _ep_data_in
  9882  003370  24F3               	addwf	prodl,w,c
  9883  003372  6ED9               	movwf	fsr2l,c
  9884  003374  0E02               	movlw	high _ep_data_in
  9885  003376  20F4               	addwfc	prodh,w,c
  9886  003378  6EDA               	movwf	fsr2h,c
  9887  00337A  0E00               	movlw	0
  9888  00337C  6EDF               	movwf	indf2,c
  9889                           
  9890                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  9891  00337E  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9892  003380  0D01               	mullw	1
  9893  003382  0ECE               	movlw	low _ep_data_out
  9894  003384  24F3               	addwf	prodl,w,c
  9895  003386  6ED9               	movwf	fsr2l,c
  9896  003388  0E02               	movlw	high _ep_data_out
  9897  00338A  20F4               	addwfc	prodh,w,c
  9898  00338C  6EDA               	movwf	fsr2h,c
  9899  00338E  0E00               	movlw	0
  9900  003390  6EDF               	movwf	indf2,c
  9901                           
  9902                           ; BSR set to: 0
  9903  003392  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  9904  003394  D7E6               	goto	l12248
  9905  003396                     u10840:
  9906                           
  9907                           ; BSR set to: 0
  9908                           ;usb_device.c: 2009: }
  9909                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  9910                           
  9911                           ; BSR set to: 0
  9912  003396  0EF1               	movlw	low _USBAlternateInterface
  9913  003398  6F7D               	movwf	memset@p1& (0+255),b
  9914  00339A  0E02               	movlw	high _USBAlternateInterface
  9915  00339C  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9916  00339E  0E00               	movlw	0
  9917  0033A0  6F80               	movwf	(memset@c+1)& (0+255),b
  9918  0033A2  0E00               	movlw	0
  9919  0033A4  6F7F               	movwf	memset@c& (0+255),b
  9920  0033A6  0E00               	movlw	0
  9921  0033A8  6F82               	movwf	(memset@n+1)& (0+255),b
  9922  0033AA  0E02               	movlw	2
  9923  0033AC  6F81               	movwf	memset@n& (0+255),b
  9924  0033AE  ECEA  F02E         	call	_memset	;wreg free
  9925                           
  9926                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  9927  0033B2  9C65               	bcf	3941,6,c	;volatile
  9928                           
  9929                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9930  0033B4  0E08               	movlw	8
  9931  0033B6  0100               	movlb	0	; () banked
  9932  0033B8  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  9933  0033BA  0E04               	movlw	4
  9934  0033BC  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9935                           
  9936                           ; BSR set to: 0
  9937                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9938  0033BE  0E00               	movlw	0
  9939  0033C0  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9940  0033C2  0E04               	movlw	4
  9941  0033C4  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9945  0033C6  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9946  0033CA  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9947                           
  9948                           ; BSR set to: 0
  9949                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9950  0033CE  C432 F0D7          	movff	1074,_USBActiveConfiguration	;volatile
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  9954  0033D2  51D7               	movf	_USBActiveConfiguration& (0+255),w,b
  9955  0033D4  A4D8               	btfss	status,2,c
  9956  0033D6  D003               	goto	l1724
  9957                           
  9958                           ; BSR set to: 0
  9959                           ;usb_device.c: 2028: {
  9960                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  9961  0033D8  0E10               	movlw	16
  9962  0033DA  6FCE               	movwf	_USBDeviceState& (0+255),b
  9963                           
  9964                           ;usb_device.c: 2031: }
  9965  0033DC  0012               	return	
  9966  0033DE                     l1724:
  9967                           
  9968                           ; BSR set to: 0
  9969                           ;usb_device.c: 2032: else
  9970                           ;usb_device.c: 2033: {
  9971                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9972                           
  9973                           ; BSR set to: 0
  9974  0033DE  0E00               	movlw	0
  9975  0033E0  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9976  0033E2  0E01               	movlw	1
  9977  0033E4  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9978  0033E6  0ED7               	movlw	low _USBActiveConfiguration
  9979  0033E8  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9980  0033EA  0E00               	movlw	high _USBActiveConfiguration
  9981  0033EC  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9982  0033EE  0E00               	movlw	0
  9983  0033F0  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9984  0033F2  0E01               	movlw	1
  9985  0033F4  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9986  0033F6  ECC2  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9987                           
  9988                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  9989  0033FA  0E20               	movlw	32
  9990  0033FC  0100               	movlb	0	; () banked
  9991  0033FE  6FCE               	movwf	_USBDeviceState& (0+255),b
  9992  003400  0012               	return	
  9993  003402                     __end_of_USBStdSetCfgHandler:
  9994                           	opt stack 0
  9995                           tosu	equ	0xFFF
  9996                           tosh	equ	0xFFE
  9997                           tosl	equ	0xFFD
  9998                           pclath	equ	0xFFA
  9999                           tblptru	equ	0xFF8
 10000                           tblptrh	equ	0xFF7
 10001                           tblptrl	equ	0xFF6
 10002                           tablat	equ	0xFF5
 10003                           prodh	equ	0xFF4
 10004                           prodl	equ	0xFF3
 10005                           intcon	equ	0xFF2
 10006                           intcon2	equ	0xFF1
 10007                           intcon3	equ	0xFF0
 10008                           postinc0	equ	0xFEE
 10009                           plusw0	equ	0xFEB
 10010                           wreg	equ	0xFE8
 10011                           postinc1	equ	0xFE6
 10012                           postdec1	equ	0xFE5
 10013                           fsr1h	equ	0xFE2
 10014                           fsr1l	equ	0xFE1
 10015                           indf2	equ	0xFDF
 10016                           postinc2	equ	0xFDE
 10017                           postdec2	equ	0xFDD
 10018                           plusw2	equ	0xFDB
 10019                           fsr2h	equ	0xFDA
 10020                           fsr2l	equ	0xFD9
 10021                           status	equ	0xFD8
 10022                           
 10023 ;; *************** function _USBStdGetStatusHandler *****************
 10024 ;; Defined at:
 10025 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10026 ;; Parameters:    Size  Location     Type
 10027 ;;		None
 10028 ;; Auto vars:     Size  Location     Type
 10029 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10030 ;;		 -> NULL(0), BDT(48), 
 10031 ;; Return value:  Size  Location     Type
 10032 ;;                  1    wreg      void 
 10033 ;; Registers used:
 10034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10035 ;; Tracked objects:
 10036 ;;		On entry : 0/0
 10037 ;;		On exit  : 0/0
 10038 ;;		Unchanged: 0/0
 10039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10041 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10042 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10043 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10044 ;;Total ram usage:        3 bytes
 10045 ;; Hardware stack levels used:    1
 10046 ;; Hardware stack levels required when called:   11
 10047 ;; This function calls:
 10048 ;;		Nothing
 10049 ;; This function is called by:
 10050 ;;		_USBCheckStdRequest
 10051 ;; This function uses a non-reentrant model
 10052 ;;
 10053                           
 10054                           	psect	text41
 10055  0040E8                     __ptext41:
 10056                           	opt stack 0
 10057  0040E8                     _USBStdGetStatusHandler:
 10058                           	opt stack 12
 10059                           
 10060                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10061                           
 10062                           ; BSR set to: 0
 10063                           ;incstack = 0
 10064  0040E8  0E00               	movlw	0
 10065  0040EA  0104               	movlb	4	; () banked
 10066  0040EC  6F38               	movwf	56,b	;volatile
 10067                           
 10068                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10069  0040EE  0E00               	movlw	0
 10070  0040F0  6F39               	movwf	57,b	;volatile
 10071                           
 10072                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10073  0040F2  D03D               	goto	l1743
 10074  0040F4                     l1744:
 10075                           
 10076                           ; BSR set to: 4
 10077                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10078  0040F4  0100               	movlb	0	; () banked
 10079  0040F6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10080                           
 10081                           ;usb_device.c: 2163: }
 10082                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10083                           
 10084                           ; BSR set to: 4
 10085                           
 10086                           ; BSR set to: 0
 10087                           ;usb_device.c: 2161: {
 10088                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10089                           
 10090                           ;usb_device.c: 2160: if(0 == 1)
 10091  0040F8  0101               	movlb	1	; () banked
 10092  0040FA  05E5               	decf	_RemoteWakeup& (0+255),w,b
 10093  0040FC  A4D8               	btfss	status,2,c
 10094  0040FE  D042               	goto	l1747
 10095                           
 10096                           ; BSR set to: 1
 10097                           ;usb_device.c: 2166: {
 10098                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10099  004100  0104               	movlb	4	; () banked
 10100  004102  8338               	bsf	56,1,b	;volatile
 10101                           
 10102                           ; BSR set to: 4
 10103                           ;usb_device.c: 2168: }
 10104                           ;usb_device.c: 2169: break;
 10105  004104  D03F               	goto	l1747
 10106  004106                     l1748:
 10107                           
 10108                           ; BSR set to: 4
 10109                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10110  004106  0100               	movlb	0	; () banked
 10111  004108  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10112                           
 10113                           ;usb_device.c: 2172: break;
 10114  00410A  D03C               	goto	l1747
 10115  00410C                     l1749:
 10116                           
 10117                           ; BSR set to: 4
 10118                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10119  00410C  0100               	movlb	0	; () banked
 10120  00410E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10121                           
 10122                           ;usb_device.c: 2178: {
 10123                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10124                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10125  004110  0104               	movlb	4	; () banked
 10126  004112  BF34               	btfsc	52,7,b	;volatile
 10127  004114  D00B               	goto	l1750
 10128                           
 10129                           ; BSR set to: 4
 10130                           ;usb_device.c: 2182: {
 10131                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10132  004116  5134               	movf	52,w,b	;volatile
 10133  004118  0B0F               	andlw	15
 10134  00411A  0100               	movlb	0	; () banked
 10135  00411C  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10136  00411E  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10137  004120  0D02               	mullw	2
 10138  004122  0E0E               	movlw	low _pBDTEntryOut
 10139  004124  24F3               	addwf	prodl,w,c
 10140  004126  6ED9               	movwf	fsr2l,c
 10141  004128  0E03               	movlw	high _pBDTEntryOut
 10142  00412A  D00B               	goto	L4
 10143  00412C                     l1750:
 10144                           
 10145                           ;usb_device.c: 2185: else
 10146                           ;usb_device.c: 2186: {
 10147                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10148                           
 10149                           ; BSR set to: 0
 10150  00412C  0104               	movlb	4	; () banked
 10151  00412E  5134               	movf	52,w,b	;volatile
 10152  004130  0B0F               	andlw	15
 10153  004132  0100               	movlb	0	; () banked
 10154  004134  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10155  004136  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10156  004138  0D02               	mullw	2
 10157  00413A  0EB6               	movlw	low _pBDTEntryIn
 10158  00413C  24F3               	addwf	prodl,w,c
 10159  00413E  6ED9               	movwf	fsr2l,c
 10160  004140  0E00               	movlw	high _pBDTEntryIn
 10161  004142                     L4:
 10162  004142  20F4               	addwfc	prodh,w,c
 10163  004144  6EDA               	movwf	fsr2h,c
 10164  004146  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10165  00414A  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10166                           
 10167                           ; BSR set to: 0
 10168                           ;usb_device.c: 2188: }
 10169                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10170                           
 10171                           ; BSR set to: 0
 10172  00414E  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10173  004152  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10174  004156  AEDF               	btfss	indf2,7,c
 10175  004158  D015               	goto	l1747
 10176                           
 10177                           ; BSR set to: 0
 10178  00415A  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10179  00415E  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10180  004162  A4DF               	btfss	indf2,2,c
 10181  004164  D00F               	goto	l1747
 10182                           
 10183                           ; BSR set to: 0
 10184                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10185  004166  0E01               	movlw	1
 10186  004168  0104               	movlb	4	; () banked
 10187  00416A  6F38               	movwf	56,b	;volatile
 10188                           
 10189                           ; BSR set to: 4
 10190                           ;usb_device.c: 2193: }
 10191                           ;usb_device.c: 2194: }
 10192                           
 10193                           ; BSR set to: 4
 10194                           ;usb_device.c: 2192: break;
 10195  00416C  D00B               	goto	l1747
 10196  00416E                     l1743:
 10197                           
 10198                           ; BSR set to: 4
 10199                           
 10200                           ; BSR set to: 4
 10201  00416E  5130               	movf	48,w,b	;volatile
 10202  004170  0B1F               	andlw	31
 10203                           
 10204                           ; Switch size 1, requested type "space"
 10205                           ; Number of cases is 3, Range of values is 0 to 2
 10206                           ; switch strategies available:
 10207                           ; Name         Instructions Cycles
 10208                           ; simple_byte           10     6 (average)
 10209                           ;	Chosen strategy is simple_byte
 10210  004172  0A00               	xorlw	0	; case 0
 10211  004174  B4D8               	btfsc	status,2,c
 10212  004176  D7BE               	goto	l1744
 10213  004178  0A01               	xorlw	1	; case 1
 10214  00417A  B4D8               	btfsc	status,2,c
 10215  00417C  D7C4               	goto	l1748
 10216  00417E  0A03               	xorlw	3	; case 2
 10217  004180  B4D8               	btfsc	status,2,c
 10218  004182  D7C4               	goto	l1749
 10219  004184                     l1747:
 10220                           
 10221                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10222  004184  0100               	movlb	0	; () banked
 10223  004186  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10224  004188  0012               	return	
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;usb_device.c: 2197: {
 10228                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10229  00418A  0E38               	movlw	56
 10230  00418C  6FB0               	movwf	_inPipes& (0+255),b
 10231  00418E  0E04               	movlw	4
 10232  004190  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10236  004192  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10240  004194  0E02               	movlw	2
 10241  004196  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10242  004198  0012               	return	
 10243  00419A                     __end_of_USBStdGetStatusHandler:
 10244                           	opt stack 0
 10245                           tosu	equ	0xFFF
 10246                           tosh	equ	0xFFE
 10247                           tosl	equ	0xFFD
 10248                           pclath	equ	0xFFA
 10249                           tblptru	equ	0xFF8
 10250                           tblptrh	equ	0xFF7
 10251                           tblptrl	equ	0xFF6
 10252                           tablat	equ	0xFF5
 10253                           prodh	equ	0xFF4
 10254                           prodl	equ	0xFF3
 10255                           intcon	equ	0xFF2
 10256                           intcon2	equ	0xFF1
 10257                           intcon3	equ	0xFF0
 10258                           postinc0	equ	0xFEE
 10259                           plusw0	equ	0xFEB
 10260                           wreg	equ	0xFE8
 10261                           postinc1	equ	0xFE6
 10262                           postdec1	equ	0xFE5
 10263                           fsr1h	equ	0xFE2
 10264                           fsr1l	equ	0xFE1
 10265                           indf2	equ	0xFDF
 10266                           postinc2	equ	0xFDE
 10267                           postdec2	equ	0xFDD
 10268                           plusw2	equ	0xFDB
 10269                           fsr2h	equ	0xFDA
 10270                           fsr2l	equ	0xFD9
 10271                           status	equ	0xFD8
 10272                           
 10273 ;; *************** function _USBStdGetDscHandler *****************
 10274 ;; Defined at:
 10275 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10276 ;; Parameters:    Size  Location     Type
 10277 ;;		None
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;		None
 10280 ;; Return value:  Size  Location     Type
 10281 ;;                  1    wreg      void 
 10282 ;; Registers used:
 10283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10284 ;; Tracked objects:
 10285 ;;		On entry : 0/0
 10286 ;;		On exit  : 0/0
 10287 ;;		Unchanged: 0/0
 10288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10291 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10292 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10293 ;;Total ram usage:        2 bytes
 10294 ;; Hardware stack levels used:    1
 10295 ;; Hardware stack levels required when called:   11
 10296 ;; This function calls:
 10297 ;;		Nothing
 10298 ;; This function is called by:
 10299 ;;		_USBCheckStdRequest
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302                           
 10303                           	psect	text42
 10304  002BB4                     __ptext42:
 10305                           	opt stack 0
 10306  002BB4                     _USBStdGetDscHandler:
 10307                           	opt stack 12
 10308                           
 10309                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;incstack = 0
 10313  002BB4  0E80               	movlw	128
 10314  002BB6  0104               	movlb	4	; () banked
 10315  002BB8  1930               	xorwf	48,w,b	;volatile
 10316  002BBA  A4D8               	btfss	status,2,c
 10317  002BBC  0012               	return	
 10318                           
 10319                           ; BSR set to: 4
 10320                           ;usb_device.c: 2064: {
 10321                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10322  002BBE  0EC0               	movlw	192
 10323  002BC0  0100               	movlb	0	; () banked
 10324  002BC2  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10325                           
 10326                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10327  002BC4  D082               	goto	l1730
 10328  002BC6                     
 10329                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10330                           
 10331                           ; BSR set to: 0
 10332  002BC6  0E56               	movlw	low _device_dsc
 10333  002BC8  0100               	movlb	0	; () banked
 10334  002BCA  6FB0               	movwf	_inPipes& (0+255),b
 10335  002BCC  0EFE               	movlw	high _device_dsc
 10336  002BCE  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10337                           
 10338                           ; BSR set to: 0
 10339                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10340  002BD0  0E00               	movlw	0
 10341  002BD2  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10342  002BD4  0E12               	movlw	18
 10343  002BD6  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10344                           
 10345                           ;usb_device.c: 2076: break;
 10346  002BD8  0012               	return	
 10347  002BDA                     
 10348                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10349                           
 10350                           ; BSR set to: 0
 10351  002BDA  0104               	movlb	4	; () banked
 10352  002BDC  5132               	movf	50,w,b	;volatile
 10353  002BDE  A4D8               	btfss	status,2,c
 10354  002BE0  D040               	goto	l1734
 10355                           
 10356                           ; BSR set to: 4
 10357                           ;usb_device.c: 2082: {
 10358                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10359  002BE2  5132               	movf	50,w,b	;volatile
 10360  002BE4  0D02               	mullw	2
 10361  002BE6  0E3B               	movlw	low _USB_CD_Ptr
 10362  002BE8  24F3               	addwf	prodl,w,c
 10363  002BEA  6EF6               	movwf	tblptrl,c
 10364  002BEC  0EFC               	movlw	high _USB_CD_Ptr
 10365  002BEE  20F4               	addwfc	prodh,w,c
 10366  002BF0  6EF7               	movwf	tblptrh,c
 10367  002BF2                     	if	0	;There are less than 3 active tblptr bytes
 10368  002BF2                     	endif
 10369  002BF2  0009               	tblrd		*+
 10370  002BF4  CFF5 F0B0          	movff	tablat,_inPipes
 10371  002BF8  000A               	tblrd		*-
 10372  002BFA  CFF5 F0B1          	movff	tablat,_inPipes+1
 10373                           
 10374                           ; BSR set to: 4
 10375                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10376  002BFE  0E02               	movlw	2
 10377  002C00  0100               	movlb	0	; () banked
 10378  002C02  25B0               	addwf	_inPipes& (0+255),w,b
 10379  002C04  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10380  002C06  0E00               	movlw	0
 10381  002C08  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10382  002C0A  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10383  002C0C  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10384  002C10  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10385  002C14  6AF8               	clrf	tblptru,c
 10386  002C16  0E0E               	movlw	(high __ramtop+-1)
 10387  002C18  64F7               	cpfsgt	tblptrh,c
 10388  002C1A  D003               	bra	u10887
 10389  002C1C  0008               	tblrd		*
 10390  002C1E  50F5               	movf	tablat,w,c
 10391  002C20  D005               	bra	u10880
 10392  002C22                     u10887:
 10393  002C22  CFF6 FFE9          	movff	tblptrl,fsr0l
 10394  002C26  CFF7 FFEA          	movff	tblptrh,fsr0h
 10395  002C2A  50EF               	movf	indf0,w,c
 10396  002C2C                     u10880:
 10397  002C2C  0100               	movlb	0	; () banked
 10398  002C2E  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10399                           
 10400                           ; BSR set to: 0
 10401                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10402  002C30  0E03               	movlw	3
 10403  002C32  25B0               	addwf	_inPipes& (0+255),w,b
 10404  002C34  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10405  002C36  0E00               	movlw	0
 10406  002C38  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10407  002C3A  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10408  002C3C  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10409  002C40  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10410  002C44  6AF8               	clrf	tblptru,c
 10411  002C46  0E0E               	movlw	(high __ramtop+-1)
 10412  002C48  64F7               	cpfsgt	tblptrh,c
 10413  002C4A  D003               	bra	u10897
 10414  002C4C  0008               	tblrd		*
 10415  002C4E  50F5               	movf	tablat,w,c
 10416  002C50  D005               	bra	u10890
 10417  002C52                     u10897:
 10418  002C52  CFF6 FFE9          	movff	tblptrl,fsr0l
 10419  002C56  CFF7 FFEA          	movff	tblptrh,fsr0h
 10420  002C5A  50EF               	movf	indf0,w,c
 10421  002C5C                     u10890:
 10422  002C5C  0100               	movlb	0	; () banked
 10423  002C5E  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10424                           
 10425                           ;usb_device.c: 2094: }
 10426  002C60  0012               	return	
 10427  002C62                     l1734:
 10428                           
 10429                           ;usb_device.c: 2095: else
 10430                           ;usb_device.c: 2096: {
 10431                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10432                           
 10433                           ; BSR set to: 0
 10434  002C62  0E00               	movlw	0
 10435  002C64  0100               	movlb	0	; () banked
 10436  002C66  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10437                           
 10438                           ; BSR set to: 0
 10439                           ;usb_device.c: 2098: }
 10440                           ;usb_device.c: 2099: break;
 10441  002C68  0012               	return	
 10442  002C6A                     
 10443                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10444                           
 10445                           ; BSR set to: 0
 10446  002C6A  0E03               	movlw	3
 10447  002C6C  0104               	movlb	4	; () banked
 10448  002C6E  6132               	cpfslt	50,b	;volatile
 10449  002C70  D024               	goto	l1737
 10450                           
 10451                           ; BSR set to: 4
 10452                           ;usb_device.c: 2105: {
 10453                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10454  002C72  5132               	movf	50,w,b	;volatile
 10455  002C74  0D02               	mullw	2
 10456  002C76  0E35               	movlw	low _USB_SD_Ptr
 10457  002C78  24F3               	addwf	prodl,w,c
 10458  002C7A  6EF6               	movwf	tblptrl,c
 10459  002C7C  0EFC               	movlw	high _USB_SD_Ptr
 10460  002C7E  20F4               	addwfc	prodh,w,c
 10461  002C80  6EF7               	movwf	tblptrh,c
 10462  002C82                     	if	0	;There are less than 3 active tblptr bytes
 10463  002C82                     	endif
 10464  002C82  0009               	tblrd		*+
 10465  002C84  CFF5 F0B0          	movff	tablat,_inPipes
 10466  002C88  000A               	tblrd		*-
 10467  002C8A  CFF5 F0B1          	movff	tablat,_inPipes+1
 10468                           
 10469                           ; BSR set to: 4
 10470                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10471  002C8E  C0B0  FFF6         	movff	_inPipes,tblptrl
 10472  002C92  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10473  002C96  6AF8               	clrf	tblptru,c
 10474  002C98  0E0E               	movlw	(high __ramtop+-1)
 10475  002C9A  64F7               	cpfsgt	tblptrh,c
 10476  002C9C  D003               	bra	u10917
 10477  002C9E  0008               	tblrd		*
 10478  002CA0  50F5               	movf	tablat,w,c
 10479  002CA2  D005               	bra	u10910
 10480  002CA4                     u10917:
 10481  002CA4  CFF6 FFE9          	movff	tblptrl,fsr0l
 10482  002CA8  CFF7 FFEA          	movff	tblptrh,fsr0h
 10483  002CAC  50EF               	movf	indf0,w,c
 10484  002CAE                     u10910:
 10485  002CAE  0100               	movlb	0	; () banked
 10486  002CB0  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10487  002CB2  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10488  002CB4  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10489  002CB6  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10490                           
 10491                           ;usb_device.c: 2110: }
 10492  002CB8  0012               	return	
 10493  002CBA                     l1737:
 10494                           
 10495                           ;usb_device.c: 2120: else
 10496                           ;usb_device.c: 2121: {
 10497                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10498                           
 10499                           ; BSR set to: 0
 10500  002CBA  0E00               	movlw	0
 10501  002CBC  0100               	movlb	0	; () banked
 10502  002CBE  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10503                           
 10504                           ; BSR set to: 0
 10505                           ;usb_device.c: 2123: }
 10506                           ;usb_device.c: 2124: break;
 10507  002CC0  0012               	return	
 10508  002CC2                     
 10509                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10510                           
 10511                           ; BSR set to: 0
 10512  002CC2  0E00               	movlw	0
 10513  002CC4  0100               	movlb	0	; () banked
 10514  002CC6  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10515                           
 10516                           ; BSR set to: 0
 10517                           ;usb_device.c: 2128: }
 10518                           
 10519                           ;usb_device.c: 2127: break;
 10520  002CC8  0012               	return	
 10521  002CCA                     l1730:
 10522                           
 10523                           ; BSR set to: 0
 10524                           
 10525                           ; BSR set to: 0
 10526  002CCA  0104               	movlb	4	; () banked
 10527  002CCC  5133               	movf	51,w,b	;volatile
 10528                           
 10529                           ; Switch size 1, requested type "space"
 10530                           ; Number of cases is 3, Range of values is 1 to 3
 10531                           ; switch strategies available:
 10532                           ; Name         Instructions Cycles
 10533                           ; simple_byte           10     6 (average)
 10534                           ;	Chosen strategy is simple_byte
 10535  002CCE  0A01               	xorlw	1	; case 1
 10536  002CD0  B4D8               	btfsc	status,2,c
 10537  002CD2  D779               	goto	l1731
 10538  002CD4  0A03               	xorlw	3	; case 2
 10539  002CD6  B4D8               	btfsc	status,2,c
 10540  002CD8  D780               	goto	l1733
 10541  002CDA  0A01               	xorlw	1	; case 3
 10542  002CDC  B4D8               	btfsc	status,2,c
 10543  002CDE  D7C5               	goto	l1736
 10544  002CE0  D7F0               	goto	l1739
 10545  002CE2                     __end_of_USBStdGetDscHandler:
 10546                           	opt stack 0
 10547                           tosu	equ	0xFFF
 10548                           tosh	equ	0xFFE
 10549                           tosl	equ	0xFFD
 10550                           pclath	equ	0xFFA
 10551                           tblptru	equ	0xFF8
 10552                           tblptrh	equ	0xFF7
 10553                           tblptrl	equ	0xFF6
 10554                           tablat	equ	0xFF5
 10555                           prodh	equ	0xFF4
 10556                           prodl	equ	0xFF3
 10557                           intcon	equ	0xFF2
 10558                           intcon2	equ	0xFF1
 10559                           intcon3	equ	0xFF0
 10560                           indf0	equ	0xFEF
 10561                           postinc0	equ	0xFEE
 10562                           plusw0	equ	0xFEB
 10563                           fsr0h	equ	0xFEA
 10564                           fsr0l	equ	0xFE9
 10565                           wreg	equ	0xFE8
 10566                           postinc1	equ	0xFE6
 10567                           postdec1	equ	0xFE5
 10568                           fsr1h	equ	0xFE2
 10569                           fsr1l	equ	0xFE1
 10570                           indf2	equ	0xFDF
 10571                           postinc2	equ	0xFDE
 10572                           postdec2	equ	0xFDD
 10573                           plusw2	equ	0xFDB
 10574                           fsr2h	equ	0xFDA
 10575                           fsr2l	equ	0xFD9
 10576                           status	equ	0xFD8
 10577                           
 10578 ;; *************** function _USBStdFeatureReqHandler *****************
 10579 ;; Defined at:
 10580 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10581 ;; Parameters:    Size  Location     Type
 10582 ;;		None
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10585 ;;		 -> NULL(0), BDT(48), 
 10586 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10587 ;;		 -> UEP0(1), 
 10588 ;;  current_ep_d    1   52[BANK0 ] struct .
 10589 ;; Return value:  Size  Location     Type
 10590 ;;                  1    wreg      void 
 10591 ;; Registers used:
 10592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10593 ;; Tracked objects:
 10594 ;;		On entry : 0/0
 10595 ;;		On exit  : 0/0
 10596 ;;		Unchanged: 0/0
 10597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10599 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10600 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10601 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10602 ;;Total ram usage:        6 bytes
 10603 ;; Hardware stack levels used:    1
 10604 ;; Hardware stack levels required when called:   15
 10605 ;; This function calls:
 10606 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10607 ;; This function is called by:
 10608 ;;		_USBCheckStdRequest
 10609 ;; This function uses a non-reentrant model
 10610 ;;
 10611                           
 10612                           	psect	text43
 10613  00135A                     __ptext43:
 10614                           	opt stack 0
 10615  00135A                     _USBStdFeatureReqHandler:
 10616                           	opt stack 8
 10617                           
 10618                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10619                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10620                           ;usb_device.c: 2778: unsigned char* pUEP;
 10621                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10622                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10623                           
 10624                           ;incstack = 0
 10625  00135A  0104               	movlb	4	; () banked
 10626  00135C  0532               	decf	50,w,b	;volatile
 10627  00135E  A4D8               	btfss	status,2,c
 10628  001360  D011               	goto	l1823
 10629                           
 10630                           ; BSR set to: 4
 10631  001362  5130               	movf	48,w,b	;volatile
 10632  001364  0B1F               	andlw	31
 10633  001366  0900               	iorlw	0
 10634  001368  A4D8               	btfss	status,2,c
 10635  00136A  D00C               	goto	l1823
 10636                           
 10637                           ; BSR set to: 4
 10638                           ;usb_device.c: 2818: {
 10639                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10640  00136C  0100               	movlb	0	; () banked
 10641  00136E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10642                           
 10643                           ; BSR set to: 0
 10644                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10645  001370  0E03               	movlw	3
 10646  001372  0104               	movlb	4	; () banked
 10647  001374  1931               	xorwf	49,w,b	;volatile
 10648  001376  A4D8               	btfss	status,2,c
 10649  001378  D002               	goto	l1822
 10650                           
 10651                           ; BSR set to: 4
 10652                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10653  00137A  0E01               	movlw	1
 10654  00137C  D001               	goto	L5
 10655  00137E                     l1822:
 10656                           
 10657                           ;usb_device.c: 2822: else
 10658                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10659                           
 10660                           ; BSR set to: 1
 10661  00137E  0E00               	movlw	0
 10662  001380                     L5:
 10663  001380  0101               	movlb	1	; () banked
 10664  001382  6FE5               	movwf	_RemoteWakeup& (0+255),b
 10665  001384                     l1823:
 10666                           
 10667                           ;usb_device.c: 2824: }
 10668                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10669                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10670                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10671                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10672                           
 10673                           ; BSR set to: 1
 10674  001384  0104               	movlb	4	; () banked
 10675  001386  5132               	movf	50,w,b	;volatile
 10676  001388  A4D8               	btfss	status,2,c
 10677  00138A  0012               	return	
 10678                           
 10679                           ; BSR set to: 4
 10680  00138C  5130               	movf	48,w,b	;volatile
 10681  00138E  0B1F               	andlw	31
 10682  001390  0A02               	xorlw	2
 10683  001392  A4D8               	btfss	status,2,c
 10684  001394  0012               	return	
 10685                           
 10686                           ; BSR set to: 4
 10687  001396  5134               	movf	52,w,b	;volatile
 10688  001398  0B0F               	andlw	15
 10689  00139A  0900               	iorlw	0
 10690  00139C  B4D8               	btfsc	status,2,c
 10691  00139E  0012               	return	
 10692                           
 10693                           ; BSR set to: 4
 10694  0013A0  5134               	movf	52,w,b	;volatile
 10695  0013A2  0B0F               	andlw	15
 10696  0013A4  0100               	movlb	0	; () banked
 10697  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10698  0013A8  0E03               	movlw	3
 10699  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10700  0013AC  0012               	return	
 10701                           
 10702                           ; BSR set to: 0
 10703  0013AE  0E20               	movlw	32
 10704  0013B0  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 10705  0013B2  A4D8               	btfss	status,2,c
 10706  0013B4  0012               	return	
 10707                           
 10708                           ; BSR set to: 0
 10709                           ;usb_device.c: 2831: {
 10710                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10711  0013B6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10712                           
 10713                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10714  0013B8  0104               	movlb	4	; () banked
 10715  0013BA  BF34               	btfsc	52,7,b	;volatile
 10716  0013BC  D01C               	goto	l1825
 10717                           
 10718                           ; BSR set to: 4
 10719                           ;usb_device.c: 2838: {
 10720                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10721  0013BE  5134               	movf	52,w,b	;volatile
 10722  0013C0  0B0F               	andlw	15
 10723  0013C2  0100               	movlb	0	; () banked
 10724  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10725  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10726  0013C8  0D02               	mullw	2
 10727  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10728  0013CC  24F3               	addwf	prodl,w,c
 10729  0013CE  6ED9               	movwf	fsr2l,c
 10730  0013D0  0E03               	movlw	high _pBDTEntryOut
 10731  0013D2  20F4               	addwfc	prodh,w,c
 10732  0013D4  6EDA               	movwf	fsr2h,c
 10733  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10734  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10735                           
 10736                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10737  0013DE  0104               	movlb	4	; () banked
 10738  0013E0  5134               	movf	52,w,b	;volatile
 10739  0013E2  0B0F               	andlw	15
 10740  0013E4  0100               	movlb	0	; () banked
 10741  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10742  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10743  0013EA  0D01               	mullw	1
 10744  0013EC  0ECE               	movlw	low _ep_data_out
 10745  0013EE  24F3               	addwf	prodl,w,c
 10746  0013F0  6ED9               	movwf	fsr2l,c
 10747  0013F2  0E02               	movlw	high _ep_data_out
 10748  0013F4  D01C               	goto	L6
 10749  0013F6                     l1825:
 10750                           
 10751                           ;usb_device.c: 2842: else
 10752                           ;usb_device.c: 2843: {
 10753                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10754                           
 10755                           ; BSR set to: 0
 10756  0013F6  0104               	movlb	4	; () banked
 10757  0013F8  5134               	movf	52,w,b	;volatile
 10758  0013FA  0B0F               	andlw	15
 10759  0013FC  0100               	movlb	0	; () banked
 10760  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10761  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10762  001402  0D02               	mullw	2
 10763  001404  0EB6               	movlw	low _pBDTEntryIn
 10764  001406  24F3               	addwf	prodl,w,c
 10765  001408  6ED9               	movwf	fsr2l,c
 10766  00140A  0E00               	movlw	high _pBDTEntryIn
 10767  00140C  20F4               	addwfc	prodh,w,c
 10768  00140E  6EDA               	movwf	fsr2h,c
 10769  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10770  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10771                           
 10772                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10773  001418  0104               	movlb	4	; () banked
 10774  00141A  5134               	movf	52,w,b	;volatile
 10775  00141C  0B0F               	andlw	15
 10776  00141E  0100               	movlb	0	; () banked
 10777  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10778  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10779  001424  0D01               	mullw	1
 10780  001426  0ED1               	movlw	low _ep_data_in
 10781  001428  24F3               	addwf	prodl,w,c
 10782  00142A  6ED9               	movwf	fsr2l,c
 10783  00142C  0E02               	movlw	high _ep_data_in
 10784  00142E                     L6:
 10785  00142E  20F4               	addwfc	prodh,w,c
 10786  001430  6EDA               	movwf	fsr2h,c
 10787  001432  50DF               	movf	indf2,w,c
 10788  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;usb_device.c: 2846: }
 10792                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10793                           
 10794                           ; BSR set to: 0
 10795  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10796  001438  D002               	goto	l1827
 10797                           
 10798                           ; BSR set to: 0
 10799                           ;usb_device.c: 2853: {
 10800                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10801  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10802                           
 10803                           ;usb_device.c: 2855: }
 10804  00143C  D001               	goto	l1828
 10805  00143E                     l1827:
 10806                           
 10807                           ; BSR set to: 0
 10808                           ;usb_device.c: 2856: else
 10809                           ;usb_device.c: 2857: {
 10810                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10811                           
 10812                           ; BSR set to: 0
 10813  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10814  001440                     l1828:
 10815                           
 10816                           ; BSR set to: 0
 10817                           ;usb_device.c: 2859: }
 10818                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10819                           
 10820                           ; BSR set to: 0
 10821  001440  0104               	movlb	4	; () banked
 10822  001442  BF34               	btfsc	52,7,b	;volatile
 10823  001444  D00B               	goto	l1829
 10824                           
 10825                           ; BSR set to: 4
 10826                           ;usb_device.c: 2865: {
 10827                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10828  001446  5134               	movf	52,w,b	;volatile
 10829  001448  0B0F               	andlw	15
 10830  00144A  0100               	movlb	0	; () banked
 10831  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10832  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10833  001450  0D02               	mullw	2
 10834  001452  0E0E               	movlw	low _pBDTEntryOut
 10835  001454  24F3               	addwf	prodl,w,c
 10836  001456  6ED9               	movwf	fsr2l,c
 10837  001458  0E03               	movlw	high _pBDTEntryOut
 10838  00145A  D00B               	goto	L7
 10839  00145C                     l1829:
 10840                           
 10841                           ;usb_device.c: 2868: else
 10842                           ;usb_device.c: 2869: {
 10843                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10844                           
 10845                           ; BSR set to: 0
 10846  00145C  0104               	movlb	4	; () banked
 10847  00145E  5134               	movf	52,w,b	;volatile
 10848  001460  0B0F               	andlw	15
 10849  001462  0100               	movlb	0	; () banked
 10850  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10851  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10852  001468  0D02               	mullw	2
 10853  00146A  0EB6               	movlw	low _pBDTEntryIn
 10854  00146C  24F3               	addwf	prodl,w,c
 10855  00146E  6ED9               	movwf	fsr2l,c
 10856  001470  0E00               	movlw	high _pBDTEntryIn
 10857  001472                     L7:
 10858  001472  20F4               	addwfc	prodh,w,c
 10859  001474  6EDA               	movwf	fsr2h,c
 10860  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10861  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;usb_device.c: 2871: }
 10865                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 10866                           
 10867                           ; BSR set to: 0
 10868  00147E  0E03               	movlw	3
 10869  001480  0104               	movlb	4	; () banked
 10870  001482  1931               	xorwf	49,w,b	;volatile
 10871  001484  A4D8               	btfss	status,2,c
 10872  001486  D031               	goto	l1831
 10873                           
 10874                           ; BSR set to: 4
 10875                           ;usb_device.c: 2875: {
 10876                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 10877  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10878  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10879  001490  0100               	movlb	0	; () banked
 10880  001492  AEDF               	btfss	indf2,7,c
 10881  001494  D01D               	goto	l1834
 10882                           
 10883                           ; BSR set to: 0
 10884                           ;usb_device.c: 2877: {
 10885                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 10886  001496  0104               	movlb	4	; () banked
 10887  001498  BF34               	btfsc	52,7,b	;volatile
 10888  00149A  D00B               	goto	l1833
 10889                           
 10890                           ; BSR set to: 4
 10891                           ;usb_device.c: 2881: {
 10892                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10893  00149C  5134               	movf	52,w,b	;volatile
 10894  00149E  0B0F               	andlw	15
 10895  0014A0  0100               	movlb	0	; () banked
 10896  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10897  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10898  0014A6  0D01               	mullw	1
 10899  0014A8  0ECE               	movlw	low _ep_data_out
 10900  0014AA  24F3               	addwf	prodl,w,c
 10901  0014AC  6ED9               	movwf	fsr2l,c
 10902  0014AE  0E02               	movlw	high _ep_data_out
 10903  0014B0  D00B               	goto	L8
 10904  0014B2                     l1833:
 10905                           
 10906                           ;usb_device.c: 2884: else
 10907                           ;usb_device.c: 2885: {
 10908                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10909                           
 10910                           ; BSR set to: 2
 10911  0014B2  0104               	movlb	4	; () banked
 10912  0014B4  5134               	movf	52,w,b	;volatile
 10913  0014B6  0B0F               	andlw	15
 10914  0014B8  0100               	movlb	0	; () banked
 10915  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10916  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10917  0014BE  0D01               	mullw	1
 10918  0014C0  0ED1               	movlw	low _ep_data_in
 10919  0014C2  24F3               	addwf	prodl,w,c
 10920  0014C4  6ED9               	movwf	fsr2l,c
 10921  0014C6  0E02               	movlw	high _ep_data_in
 10922  0014C8                     L8:
 10923  0014C8  20F4               	addwfc	prodh,w,c
 10924  0014CA  6EDA               	movwf	fsr2h,c
 10925  0014CC  0102               	movlb	2	; () banked
 10926  0014CE  82DF               	bsf	indf2,1,c
 10927  0014D0                     l1834:
 10928                           
 10929                           ;usb_device.c: 2887: }
 10930                           ;usb_device.c: 2888: }
 10931                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 10932                           
 10933                           ; BSR set to: 2
 10934                           
 10935                           ; BSR set to: 2
 10936  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10937  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10938  0014D8  0E00               	movlw	0
 10939  0014DA  84DB               	bsf	plusw2,2,c
 10940                           
 10941                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 10942  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10943  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10944  0014E4  0E00               	movlw	0
 10945  0014E6  8EDB               	bsf	plusw2,7,c
 10946                           
 10947                           ;usb_device.c: 2893: }
 10948  0014E8  0012               	return	
 10949  0014EA                     l1831:
 10950                           
 10951                           ;usb_device.c: 2894: else
 10952                           ;usb_device.c: 2895: {
 10953                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10954  0014EA  0E04               	movlw	4
 10955  0014EC  0100               	movlb	0	; () banked
 10956  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10957                           
 10958                           ; BSR set to: 0
 10959                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 10960  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10961  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10962  0014F8  AEDF               	btfss	indf2,7,c
 10963  0014FA  D01B               	goto	l1836
 10964                           
 10965                           ; BSR set to: 0
 10966                           ;usb_device.c: 2902: {
 10967                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 10968  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10969  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10970  001504  0E7F               	movlw	127
 10971  001506  16DF               	andwf	indf2,f,c
 10972                           
 10973                           ; BSR set to: 0
 10974                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 10975  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10976  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10977  001510  0E00               	movlw	0
 10978  001512  8CDB               	bsf	plusw2,6,c
 10979                           
 10980                           ; BSR set to: 0
 10981                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10982  001514  0E00               	movlw	0
 10983  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10984  001518  0E05               	movlw	5
 10985  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10986  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10987  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10988  001524  0E00               	movlw	0
 10989  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10990  001528  0E02               	movlw	2
 10991  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10992  00152C  ECC2  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10993                           
 10994                           ;usb_device.c: 2908: }
 10995  001530  D006               	goto	l1837
 10996  001532                     l1836:
 10997                           
 10998                           ;usb_device.c: 2909: else
 10999                           ;usb_device.c: 2910: {
 11000                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11001  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11002  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11003  00153A  0E00               	movlw	0
 11004  00153C  8CDB               	bsf	plusw2,6,c
 11005  00153E                     l1837:
 11006                           
 11007                           ;usb_device.c: 2913: }
 11008                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11009  00153E  0E04               	movlw	4
 11010  001540  0100               	movlb	0	; () banked
 11011  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11012                           
 11013                           ; BSR set to: 0
 11014                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11015  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11016  001546  D006               	goto	u11130
 11017                           
 11018                           ; BSR set to: 0
 11019  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11020  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11021  001550  AEDF               	btfss	indf2,7,c
 11022  001552  D033               	goto	l1838
 11023  001554                     u11130:
 11024                           
 11025                           ; BSR set to: 0
 11026                           ;usb_device.c: 2924: {
 11027                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11028  001554  0104               	movlb	4	; () banked
 11029  001556  BF34               	btfsc	52,7,b	;volatile
 11030  001558  D00B               	goto	l1841
 11031                           
 11032                           ; BSR set to: 4
 11033                           ;usb_device.c: 2926: {
 11034                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11035  00155A  5134               	movf	52,w,b	;volatile
 11036  00155C  0B0F               	andlw	15
 11037  00155E  0100               	movlb	0	; () banked
 11038  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11039  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11040  001564  0D01               	mullw	1
 11041  001566  0ECE               	movlw	low _ep_data_out
 11042  001568  24F3               	addwf	prodl,w,c
 11043  00156A  6ED9               	movwf	fsr2l,c
 11044  00156C  0E02               	movlw	high _ep_data_out
 11045  00156E  D00B               	goto	L9
 11046  001570                     l1841:
 11047                           
 11048                           ;usb_device.c: 2929: else
 11049                           ;usb_device.c: 2930: {
 11050                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11051                           
 11052                           ; BSR set to: 2
 11053  001570  0104               	movlb	4	; () banked
 11054  001572  5134               	movf	52,w,b	;volatile
 11055  001574  0B0F               	andlw	15
 11056  001576  0100               	movlb	0	; () banked
 11057  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11058  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11059  00157C  0D01               	mullw	1
 11060  00157E  0ED1               	movlw	low _ep_data_in
 11061  001580  24F3               	addwf	prodl,w,c
 11062  001582  6ED9               	movwf	fsr2l,c
 11063  001584  0E02               	movlw	high _ep_data_in
 11064  001586                     L9:
 11065  001586  20F4               	addwfc	prodh,w,c
 11066  001588  6EDA               	movwf	fsr2h,c
 11067  00158A  0102               	movlb	2	; () banked
 11068  00158C  92DF               	bcf	indf2,1,c
 11069                           
 11070                           ; BSR set to: 2
 11071                           ;usb_device.c: 2932: }
 11072                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11073                           
 11074                           ; BSR set to: 2
 11075  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11076  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11077  001596  0E3B               	movlw	59
 11078  001598  16DF               	andwf	indf2,f,c
 11079                           
 11080                           ; BSR set to: 2
 11081                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11082  00159A  0E00               	movlw	0
 11083  00159C  0100               	movlb	0	; () banked
 11084  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11085  0015A0  0E05               	movlw	5
 11086  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11087  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11088  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11089  0015AC  0E00               	movlw	0
 11090  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11091  0015B0  0E02               	movlw	2
 11092  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11093  0015B4  ECC2  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11094                           
 11095                           ;usb_device.c: 2938: }
 11096  0015B8  D006               	goto	l1843
 11097  0015BA                     l1838:
 11098                           
 11099                           ;usb_device.c: 2939: else
 11100                           ;usb_device.c: 2940: {
 11101                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11102  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11103  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11104  0015C2  0E3B               	movlw	59
 11105  0015C4  16DF               	andwf	indf2,f,c
 11106  0015C6                     l1843:
 11107                           
 11108                           ;usb_device.c: 2943: }
 11109                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11110  0015C6  0104               	movlb	4	; () banked
 11111  0015C8  5134               	movf	52,w,b	;volatile
 11112  0015CA  0B0F               	andlw	15
 11113  0015CC  0100               	movlb	0	; () banked
 11114  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11115  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11116  0015D2  0D01               	mullw	1
 11117  0015D4  0E26               	movlw	38
 11118  0015D6  24F3               	addwf	prodl,w,c
 11119  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11120  0015DA  0E0F               	movlw	15
 11121  0015DC  20F4               	addwfc	prodh,w,c
 11122  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11123                           
 11124                           ; BSR set to: 0
 11125                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11126  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11127  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11128  0015E8  0EFE               	movlw	254
 11129  0015EA  16DF               	andwf	indf2,f,c
 11130                           
 11131                           ; BSR set to: 0
 11132  0015EC  0012               	return	
 11133  0015EE                     __end_of_USBStdFeatureReqHandler:
 11134                           	opt stack 0
 11135                           tosu	equ	0xFFF
 11136                           tosh	equ	0xFFE
 11137                           tosl	equ	0xFFD
 11138                           pclath	equ	0xFFA
 11139                           tblptru	equ	0xFF8
 11140                           tblptrh	equ	0xFF7
 11141                           tblptrl	equ	0xFF6
 11142                           tablat	equ	0xFF5
 11143                           prodh	equ	0xFF4
 11144                           prodl	equ	0xFF3
 11145                           intcon	equ	0xFF2
 11146                           intcon2	equ	0xFF1
 11147                           intcon3	equ	0xFF0
 11148                           indf0	equ	0xFEF
 11149                           postinc0	equ	0xFEE
 11150                           plusw0	equ	0xFEB
 11151                           fsr0h	equ	0xFEA
 11152                           fsr0l	equ	0xFE9
 11153                           wreg	equ	0xFE8
 11154                           postinc1	equ	0xFE6
 11155                           postdec1	equ	0xFE5
 11156                           fsr1h	equ	0xFE2
 11157                           fsr1l	equ	0xFE1
 11158                           indf2	equ	0xFDF
 11159                           postinc2	equ	0xFDE
 11160                           postdec2	equ	0xFDD
 11161                           plusw2	equ	0xFDB
 11162                           fsr2h	equ	0xFDA
 11163                           fsr2l	equ	0xFD9
 11164                           status	equ	0xFD8
 11165                           
 11166 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11167 ;; Defined at:
 11168 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11169 ;; Parameters:    Size  Location     Type
 11170 ;;  event           2   41[BANK0 ] enum E8363
 11171 ;;  pdata           2   43[BANK0 ] PTR void 
 11172 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11173 ;;  size            2   45[BANK0 ] unsigned int 
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;		None
 11176 ;; Return value:  Size  Location     Type
 11177 ;;                  1    wreg      unsigned char 
 11178 ;; Registers used:
 11179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11180 ;; Tracked objects:
 11181 ;;		On entry : 0/0
 11182 ;;		On exit  : 0/0
 11183 ;;		Unchanged: 0/0
 11184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11185 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11187 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11188 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11189 ;;Total ram usage:        8 bytes
 11190 ;; Hardware stack levels used:    1
 11191 ;; Hardware stack levels required when called:   14
 11192 ;; This function calls:
 11193 ;;		_CDCInitEP
 11194 ;;		_USBCheckCDCRequest
 11195 ;; This function is called by:
 11196 ;;		_USBDeviceTasks
 11197 ;;		_USBStdSetCfgHandler
 11198 ;;		_USBSuspend
 11199 ;;		_USBWakeFromSuspend
 11200 ;;		_USBCtrlTrfSetupHandler
 11201 ;;		_USBCheckStdRequest
 11202 ;;		_USBStdFeatureReqHandler
 11203 ;; This function uses a non-reentrant model
 11204 ;;
 11205                           
 11206                           	psect	text44
 11207  005184                     __ptext44:
 11208                           	opt stack 0
 11209  005184                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11210                           	opt stack 12
 11211                           
 11212                           ;usb_device_mgr.c: 106: switch( (int) event )
 11213                           
 11214                           ;incstack = 0
 11215  005184  D006               	goto	l1997
 11216  005186                     
 11217                           ;usb_device_mgr.c: 134: CDCInitEP();
 11218  005186  ECBF  F027         	call	_CDCInitEP	;wreg free
 11219                           
 11220                           ;usb_device_mgr.c: 142: break;
 11221                           
 11222                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11223                           
 11224                           ;usb_device_mgr.c: 139: break;
 11225  00518A  0012               	return	
 11226  00518C                     
 11227                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11228  00518C  ECCD  F020         	call	_USBCheckCDCRequest	;wreg free
 11229                           
 11230                           ;usb_device_mgr.c: 163: }
 11231                           
 11232                           ;usb_device_mgr.c: 162: break;
 11233                           
 11234                           ;usb_device_mgr.c: 161: default:
 11235                           
 11236                           ;usb_device_mgr.c: 159: break;
 11237                           
 11238                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11239                           
 11240                           ;usb_device_mgr.c: 156: break;
 11241                           
 11242                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11243                           
 11244                           ;usb_device_mgr.c: 153: break;
 11245  005190  0012               	return	
 11246  005192                     l1997:
 11247  005192  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11248  005196  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11249                           
 11250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11251                           ; Switch size 1, requested type "space"
 11252                           ; Number of cases is 2, Range of values is 0 to 127
 11253                           ; switch strategies available:
 11254                           ; Name         Instructions Cycles
 11255                           ; simple_byte            7     4 (average)
 11256                           ;	Chosen strategy is simple_byte
 11257  00519A  0100               	movlb	0	; () banked
 11258  00519C  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11259  00519E  0A00               	xorlw	0	; case 0
 11260  0051A0  B4D8               	btfsc	status,2,c
 11261  0051A2  D004               	goto	l15648
 11262  0051A4  0A7F               	xorlw	127	; case 127
 11263  0051A6  A4D8               	btfss	status,2,c
 11264  0051A8  0012               	return	
 11265  0051AA  D018               	goto	l15650
 11266  0051AC                     l15648:
 11267                           
 11268                           ; BSR set to: 0
 11269                           ; Switch size 1, requested type "space"
 11270                           ; Number of cases is 8, Range of values is 1 to 117
 11271                           ; switch strategies available:
 11272                           ; Name         Instructions Cycles
 11273                           ; simple_byte           25    13 (average)
 11274                           ;	Chosen strategy is simple_byte
 11275  0051AC  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11276  0051AE  0A01               	xorlw	1	; case 1
 11277  0051B0  B4D8               	btfsc	status,2,c
 11278  0051B2  D7E9               	goto	l2003
 11279  0051B4  0A03               	xorlw	3	; case 2
 11280  0051B6  B4D8               	btfsc	status,2,c
 11281  0051B8  0012               	return	
 11282  0051BA  0A01               	xorlw	1	; case 3
 11283  0051BC  B4D8               	btfsc	status,2,c
 11284  0051BE  D7E6               	goto	l2005
 11285  0051C0  0A06               	xorlw	6	; case 5
 11286  0051C2  B4D8               	btfsc	status,2,c
 11287  0051C4  0012               	return	
 11288  0051C6  0A77               	xorlw	119	; case 114
 11289  0051C8  B4D8               	btfsc	status,2,c
 11290  0051CA  0012               	return	
 11291  0051CC  0A01               	xorlw	1	; case 115
 11292  0051CE  B4D8               	btfsc	status,2,c
 11293  0051D0  0012               	return	
 11294  0051D2  0A07               	xorlw	7	; case 116
 11295  0051D4  B4D8               	btfsc	status,2,c
 11296  0051D6  0012               	return	
 11297  0051D8  0A01               	xorlw	1	; case 117
 11298  0051DA  0012               	return	
 11299  0051DC                     l15650:
 11300                           
 11301                           ; BSR set to: 0
 11302                           ; Switch size 1, requested type "space"
 11303                           ; Number of cases is 1, Range of values is 255 to 255
 11304                           ; switch strategies available:
 11305                           ; Name         Instructions Cycles
 11306                           ; simple_byte            4     3 (average)
 11307                           ;	Chosen strategy is simple_byte
 11308  0051DC  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11309  0051DE  0AFF               	xorlw	255	; case 255
 11310  0051E0  0012               	return	
 11311  0051E2                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11312                           	opt stack 0
 11313                           tosu	equ	0xFFF
 11314                           tosh	equ	0xFFE
 11315                           tosl	equ	0xFFD
 11316                           pclath	equ	0xFFA
 11317                           tblptru	equ	0xFF8
 11318                           tblptrh	equ	0xFF7
 11319                           tblptrl	equ	0xFF6
 11320                           tablat	equ	0xFF5
 11321                           prodh	equ	0xFF4
 11322                           prodl	equ	0xFF3
 11323                           intcon	equ	0xFF2
 11324                           intcon2	equ	0xFF1
 11325                           intcon3	equ	0xFF0
 11326                           indf0	equ	0xFEF
 11327                           postinc0	equ	0xFEE
 11328                           plusw0	equ	0xFEB
 11329                           fsr0h	equ	0xFEA
 11330                           fsr0l	equ	0xFE9
 11331                           wreg	equ	0xFE8
 11332                           postinc1	equ	0xFE6
 11333                           postdec1	equ	0xFE5
 11334                           fsr1h	equ	0xFE2
 11335                           fsr1l	equ	0xFE1
 11336                           indf2	equ	0xFDF
 11337                           postinc2	equ	0xFDE
 11338                           postdec2	equ	0xFDD
 11339                           plusw2	equ	0xFDB
 11340                           fsr2h	equ	0xFDA
 11341                           fsr2l	equ	0xFD9
 11342                           status	equ	0xFD8
 11343                           
 11344 ;; *************** function _USBCheckCDCRequest *****************
 11345 ;; Defined at:
 11346 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11347 ;; Parameters:    Size  Location     Type
 11348 ;;		None
 11349 ;; Auto vars:     Size  Location     Type
 11350 ;;		None
 11351 ;; Return value:  Size  Location     Type
 11352 ;;                  1    wreg      void 
 11353 ;; Registers used:
 11354 ;;		wreg, status,2, status,0
 11355 ;; Tracked objects:
 11356 ;;		On entry : 0/0
 11357 ;;		On exit  : 0/0
 11358 ;;		Unchanged: 0/0
 11359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11364 ;;Total ram usage:        0 bytes
 11365 ;; Hardware stack levels used:    1
 11366 ;; Hardware stack levels required when called:   11
 11367 ;; This function calls:
 11368 ;;		Nothing
 11369 ;; This function is called by:
 11370 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11371 ;; This function uses a non-reentrant model
 11372 ;;
 11373                           
 11374                           	psect	text45
 11375  00419A                     __ptext45:
 11376                           	opt stack 0
 11377  00419A                     _USBCheckCDCRequest:
 11378                           	opt stack 14
 11379                           
 11380                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11381                           
 11382                           ;incstack = 0
 11383  00419A  0104               	movlb	4	; () banked
 11384  00419C  5130               	movf	48,w,b	;volatile
 11385  00419E  0B1F               	andlw	31
 11386  0041A0  06E8               	decf	wreg,f,c
 11387  0041A2  A4D8               	btfss	status,2,c
 11388  0041A4  0012               	return	
 11389                           
 11390                           ; BSR set to: 4
 11391                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11392                           
 11393                           ; BSR set to: 4
 11394                           
 11395                           ; BSR set to: 4
 11396  0041A6  3930               	swapf	48,w,b	;volatile
 11397  0041A8  32E8               	rrcf	wreg,f,c
 11398  0041AA  0B03               	andlw	3
 11399  0041AC  06E8               	decf	wreg,f,c
 11400  0041AE  A4D8               	btfss	status,2,c
 11401  0041B0  0012               	return	
 11402                           
 11403                           ; BSR set to: 4
 11404                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11405                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11406                           
 11407                           ; BSR set to: 4
 11408                           
 11409                           ; BSR set to: 4
 11410  0041B2  5134               	movf	52,w,b	;volatile
 11411  0041B4  B4D8               	btfsc	status,2,c
 11412  0041B6  D037               	goto	l1899
 11413                           
 11414                           ; BSR set to: 4
 11415  0041B8  0534               	decf	52,w,b	;volatile
 11416  0041BA  A4D8               	btfss	status,2,c
 11417  0041BC  0012               	return	
 11418  0041BE  D033               	goto	l1899
 11419  0041C0                     
 11420                           ; BSR set to: 4
 11421                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11422                           
 11423                           ; BSR set to: 4
 11424  0041C0  0E76               	movlw	low _dummy_encapsulated_cmd_response
 11425  0041C2  0100               	movlb	0	; () banked
 11426  0041C4  6FB0               	movwf	_inPipes& (0+255),b
 11427  0041C6  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11428  0041C8  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11429                           
 11430                           ; BSR set to: 0
 11431                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11432  0041CA  0E00               	movlw	0
 11433  0041CC  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11434  0041CE  0E08               	movlw	8
 11435  0041D0  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11436                           
 11437                           ; BSR set to: 0
 11438                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11439  0041D2  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11440                           
 11441                           ; BSR set to: 0
 11442                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11443  0041D4  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11444                           
 11445                           ;usb_device_cdc.c: 178: break;
 11446  0041D6  0012               	return	
 11447  0041D8                     
 11448                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11449                           
 11450                           ; BSR set to: 0
 11451  0041D8  0E76               	movlw	low _dummy_encapsulated_cmd_response
 11452  0041DA  0100               	movlb	0	; () banked
 11453  0041DC  6FB0               	movwf	_inPipes& (0+255),b
 11454  0041DE  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11455  0041E0  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11456                           
 11457                           ; BSR set to: 0
 11458                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11459  0041E2  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11460                           
 11461                           ;usb_device_cdc.c: 183: break;
 11462  0041E4  0012               	return	
 11463  0041E6                     l1903:
 11464                           
 11465                           ; BSR set to: 4
 11466                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11467  0041E6  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11468  0041EA  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11469                           
 11470                           ; BSR set to: 4
 11471                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11472  0041EE  0E7E               	movlw	low _line_coding
 11473  0041F0  0101               	movlb	1	; () banked
 11474  0041F2  6FC9               	movwf	_outPipes& (0+255),b
 11475  0041F4  0E03               	movlw	high _line_coding
 11476  0041F6  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11477                           
 11478                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11479  0041F8  0E00               	movlw	0
 11480  0041FA  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11481  0041FC  0E00               	movlw	0
 11482  0041FE  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11483                           
 11484                           ; BSR set to: 1
 11485                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11486  004200  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11487                           
 11488                           ;usb_device_cdc.c: 192: break;
 11489  004202  0012               	return	
 11490  004204                     
 11491                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11492                           
 11493                           ; BSR set to: 1
 11494  004204  0E7E               	movlw	low _line_coding
 11495  004206  0100               	movlb	0	; () banked
 11496  004208  6FB0               	movwf	_inPipes& (0+255),b
 11497  00420A  0E03               	movlw	high _line_coding
 11498  00420C  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11499                           
 11500                           ; BSR set to: 0
 11501  00420E  0E00               	movlw	0
 11502  004210  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11503  004212  0E07               	movlw	7
 11504  004214  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11505                           
 11506                           ; BSR set to: 0
 11507  004216  0EC1               	movlw	193
 11508  004218  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11509                           
 11510                           ;usb_device_cdc.c: 199: break;
 11511  00421A  0012               	return	
 11512  00421C                     l1905:
 11513                           
 11514                           ; BSR set to: 4
 11515                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11516  00421C  C432 F1E0          	movff	1074,_control_signal_bitmap	;volatile
 11517                           
 11518                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11519  004220  0100               	movlb	0	; () banked
 11520  004222  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11521                           
 11522                           ; BSR set to: 0
 11523                           ;usb_device_cdc.c: 261: }
 11524                           
 11525                           ; BSR set to: 0
 11526                           ;usb_device_cdc.c: 260: break;
 11527                           
 11528                           ;usb_device_cdc.c: 259: default:
 11529                           
 11530                           ;usb_device_cdc.c: 235: break;
 11531  004224  0012               	return	
 11532  004226                     l1899:
 11533                           
 11534                           ; BSR set to: 0
 11535  004226  0104               	movlb	4	; () banked
 11536  004228  5131               	movf	49,w,b	;volatile
 11537                           
 11538                           ; Switch size 1, requested type "space"
 11539                           ; Number of cases is 5, Range of values is 0 to 34
 11540                           ; switch strategies available:
 11541                           ; Name         Instructions Cycles
 11542                           ; simple_byte           16     9 (average)
 11543                           ;	Chosen strategy is simple_byte
 11544  00422A  0A00               	xorlw	0	; case 0
 11545  00422C  B4D8               	btfsc	status,2,c
 11546  00422E  D7C8               	goto	l1900
 11547  004230  0A01               	xorlw	1	; case 1
 11548  004232  B4D8               	btfsc	status,2,c
 11549  004234  D7D1               	goto	l1902
 11550  004236  0A21               	xorlw	33	; case 32
 11551  004238  B4D8               	btfsc	status,2,c
 11552  00423A  D7D5               	goto	l1903
 11553  00423C  0A01               	xorlw	1	; case 33
 11554  00423E  B4D8               	btfsc	status,2,c
 11555  004240  D7E1               	goto	l1904
 11556  004242  0A03               	xorlw	3	; case 34
 11557  004244  A4D8               	btfss	status,2,c
 11558  004246  0012               	return	
 11559  004248  D7E9               	goto	l1905
 11560  00424A                     __end_of_USBCheckCDCRequest:
 11561                           	opt stack 0
 11562                           tosu	equ	0xFFF
 11563                           tosh	equ	0xFFE
 11564                           tosl	equ	0xFFD
 11565                           pclath	equ	0xFFA
 11566                           tblptru	equ	0xFF8
 11567                           tblptrh	equ	0xFF7
 11568                           tblptrl	equ	0xFF6
 11569                           tablat	equ	0xFF5
 11570                           prodh	equ	0xFF4
 11571                           prodl	equ	0xFF3
 11572                           intcon	equ	0xFF2
 11573                           intcon2	equ	0xFF1
 11574                           intcon3	equ	0xFF0
 11575                           indf0	equ	0xFEF
 11576                           postinc0	equ	0xFEE
 11577                           plusw0	equ	0xFEB
 11578                           fsr0h	equ	0xFEA
 11579                           fsr0l	equ	0xFE9
 11580                           wreg	equ	0xFE8
 11581                           postinc1	equ	0xFE6
 11582                           postdec1	equ	0xFE5
 11583                           fsr1h	equ	0xFE2
 11584                           fsr1l	equ	0xFE1
 11585                           indf2	equ	0xFDF
 11586                           postinc2	equ	0xFDE
 11587                           postdec2	equ	0xFDD
 11588                           plusw2	equ	0xFDB
 11589                           fsr2h	equ	0xFDA
 11590                           fsr2l	equ	0xFD9
 11591                           status	equ	0xFD8
 11592                           
 11593 ;; *************** function _CDCInitEP *****************
 11594 ;; Defined at:
 11595 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;		None
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;		None
 11600 ;; Return value:  Size  Location     Type
 11601 ;;                  1    wreg      void 
 11602 ;; Registers used:
 11603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11604 ;; Tracked objects:
 11605 ;;		On entry : 0/0
 11606 ;;		On exit  : 0/0
 11607 ;;		Unchanged: 0/0
 11608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11613 ;;Total ram usage:        0 bytes
 11614 ;; Hardware stack levels used:    1
 11615 ;; Hardware stack levels required when called:   13
 11616 ;; This function calls:
 11617 ;;		_USBEnableEndpoint
 11618 ;;		_USBTransferOnePacket
 11619 ;; This function is called by:
 11620 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11621 ;; This function uses a non-reentrant model
 11622 ;;
 11623                           
 11624                           	psect	text46
 11625  004F7E                     __ptext46:
 11626                           	opt stack 0
 11627  004F7E                     _CDCInitEP:
 11628                           	opt stack 12
 11629                           
 11630                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11631                           
 11632                           ;incstack = 0
 11633  004F7E  0E80               	movlw	128
 11634  004F80  0103               	movlb	3	; () banked
 11635  004F82  6F7E               	movwf	_line_coding& (0+255),b
 11636  004F84  0E25               	movlw	37
 11637  004F86  6F7F               	movwf	(_line_coding+1)& (0+255),b
 11638  004F88  0E00               	movlw	0
 11639  004F8A  6F80               	movwf	(_line_coding+2)& (0+255),b
 11640  004F8C  0E00               	movlw	0
 11641  004F8E  6F81               	movwf	(_line_coding+3)& (0+255),b
 11642                           
 11643                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11644  004F90  0E00               	movlw	0
 11645  004F92  6F82               	movwf	(_line_coding+4)& (0+255),b
 11646                           
 11647                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11648  004F94  0E00               	movlw	0
 11649  004F96  6F83               	movwf	(_line_coding+5)& (0+255),b
 11650                           
 11651                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11652  004F98  0E08               	movlw	8
 11653  004F9A  6F84               	movwf	(_line_coding+6)& (0+255),b
 11654                           
 11655                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11656  004F9C  0E00               	movlw	0
 11657  004F9E  0100               	movlb	0	; () banked
 11658  004FA0  6FC7               	movwf	_cdc_rx_len& (0+255),b
 11659                           
 11660                           ; BSR set to: 0
 11661                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11662  004FA2  0E1A               	movlw	26
 11663  004FA4  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11664  004FA6  0E01               	movlw	1
 11665  004FA8  EC95  F02C         	call	_USBEnableEndpoint
 11666                           
 11667                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11668  004FAC  0E1E               	movlw	30
 11669  004FAE  0100               	movlb	0	; () banked
 11670  004FB0  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11671  004FB2  0E02               	movlw	2
 11672  004FB4  EC95  F02C         	call	_USBEnableEndpoint
 11673                           
 11674                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11675  004FB8  0E00               	movlw	0
 11676  004FBA  0100               	movlb	0	; () banked
 11677  004FBC  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11678  004FBE  0E00               	movlw	low _cdc_data_rx
 11679  004FC0  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11680  004FC2  0E05               	movlw	high _cdc_data_rx
 11681  004FC4  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11682  004FC6  0E40               	movlw	64
 11683  004FC8  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11684  004FCA  0E02               	movlw	2
 11685  004FCC  EC15  F020         	call	_USBTransferOnePacket
 11686  004FD0  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11687  004FD4  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11688                           
 11689                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11690  004FD8  0E00               	movlw	0
 11691  004FDA  0101               	movlb	1	; () banked
 11692  004FDC  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11693  004FDE  0E00               	movlw	0
 11694  004FE0  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11695                           
 11696                           ; BSR set to: 1
 11697                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11698  004FE2  0E00               	movlw	0
 11699  004FE4  0100               	movlb	0	; () banked
 11700  004FE6  6FC6               	movwf	_cdc_trf_state& (0+255),b
 11701                           
 11702                           ; BSR set to: 0
 11703  004FE8  0012               	return		;funcret
 11704  004FEA                     __end_of_CDCInitEP:
 11705                           	opt stack 0
 11706                           tosu	equ	0xFFF
 11707                           tosh	equ	0xFFE
 11708                           tosl	equ	0xFFD
 11709                           pclath	equ	0xFFA
 11710                           tblptru	equ	0xFF8
 11711                           tblptrh	equ	0xFF7
 11712                           tblptrl	equ	0xFF6
 11713                           tablat	equ	0xFF5
 11714                           prodh	equ	0xFF4
 11715                           prodl	equ	0xFF3
 11716                           intcon	equ	0xFF2
 11717                           intcon2	equ	0xFF1
 11718                           intcon3	equ	0xFF0
 11719                           indf0	equ	0xFEF
 11720                           postinc0	equ	0xFEE
 11721                           plusw0	equ	0xFEB
 11722                           fsr0h	equ	0xFEA
 11723                           fsr0l	equ	0xFE9
 11724                           wreg	equ	0xFE8
 11725                           postinc1	equ	0xFE6
 11726                           postdec1	equ	0xFE5
 11727                           fsr1h	equ	0xFE2
 11728                           fsr1l	equ	0xFE1
 11729                           indf2	equ	0xFDF
 11730                           postinc2	equ	0xFDE
 11731                           postdec2	equ	0xFDD
 11732                           plusw2	equ	0xFDB
 11733                           fsr2h	equ	0xFDA
 11734                           fsr2l	equ	0xFD9
 11735                           status	equ	0xFD8
 11736                           
 11737 ;; *************** function _USBEnableEndpoint *****************
 11738 ;; Defined at:
 11739 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11740 ;; Parameters:    Size  Location     Type
 11741 ;;  ep              1    wreg     unsigned char 
 11742 ;;  options         1   37[BANK0 ] unsigned char 
 11743 ;; Auto vars:     Size  Location     Type
 11744 ;;  ep              1   40[BANK0 ] unsigned char 
 11745 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11746 ;;		 -> UEP0(1), 
 11747 ;; Return value:  Size  Location     Type
 11748 ;;                  1    wreg      void 
 11749 ;; Registers used:
 11750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11751 ;; Tracked objects:
 11752 ;;		On entry : 0/0
 11753 ;;		On exit  : 0/0
 11754 ;;		Unchanged: 0/0
 11755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11756 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11757 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11759 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11760 ;;Total ram usage:        4 bytes
 11761 ;; Hardware stack levels used:    1
 11762 ;; Hardware stack levels required when called:   12
 11763 ;; This function calls:
 11764 ;;		_USBConfigureEndpoint
 11765 ;; This function is called by:
 11766 ;;		_CDCInitEP
 11767 ;; This function uses a non-reentrant model
 11768 ;;
 11769                           
 11770                           	psect	text47
 11771  00592A                     __ptext47:
 11772                           	opt stack 0
 11773  00592A                     _USBEnableEndpoint:
 11774                           	opt stack 12
 11775                           
 11776                           ; BSR set to: 0
 11777                           ;incstack = 0
 11778                           ;USBEnableEndpoint@ep stored from wreg
 11779  00592A  0100               	movlb	0	; () banked
 11780  00592C  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11781                           
 11782                           ;usb_device.c: 898: unsigned char* p;
 11783                           ;usb_device.c: 902: if(options & 0x04)
 11784  00592E  0100               	movlb	0	; () banked
 11785  005930  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11786  005932  D005               	goto	l1640
 11787                           
 11788                           ; BSR set to: 0
 11789                           ;usb_device.c: 903: {
 11790                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11791  005934  0E00               	movlw	0
 11792  005936  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11793  005938  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11794  00593A  ECBA  F023         	call	_USBConfigureEndpoint
 11795  00593E                     l1640:
 11796                           
 11797                           ;usb_device.c: 905: }
 11798                           ;usb_device.c: 906: if(options & 0x02)
 11799  00593E  0100               	movlb	0	; () banked
 11800  005940  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11801  005942  D005               	goto	l1641
 11802                           
 11803                           ; BSR set to: 0
 11804                           ;usb_device.c: 907: {
 11805                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11806  005944  0E01               	movlw	1
 11807  005946  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11808  005948  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11809  00594A  ECBA  F023         	call	_USBConfigureEndpoint
 11810  00594E                     l1641:
 11811                           
 11812                           ;usb_device.c: 909: }
 11813                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11814  00594E  0100               	movlb	0	; () banked
 11815  005950  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11816  005952  0D01               	mullw	1
 11817  005954  0E26               	movlw	38
 11818  005956  24F3               	addwf	prodl,w,c
 11819  005958  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11820  00595A  0E0F               	movlw	15
 11821  00595C  20F4               	addwfc	prodh,w,c
 11822  00595E  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11823                           
 11824                           ; BSR set to: 0
 11825                           ;usb_device.c: 919: *p = options;
 11826  005960  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11827  005964  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11828  005968  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11829                           
 11830                           ; BSR set to: 0
 11831  00596C  0012               	return		;funcret
 11832  00596E                     __end_of_USBEnableEndpoint:
 11833                           	opt stack 0
 11834                           tosu	equ	0xFFF
 11835                           tosh	equ	0xFFE
 11836                           tosl	equ	0xFFD
 11837                           pclath	equ	0xFFA
 11838                           tblptru	equ	0xFF8
 11839                           tblptrh	equ	0xFF7
 11840                           tblptrl	equ	0xFF6
 11841                           tablat	equ	0xFF5
 11842                           prodh	equ	0xFF4
 11843                           prodl	equ	0xFF3
 11844                           intcon	equ	0xFF2
 11845                           intcon2	equ	0xFF1
 11846                           intcon3	equ	0xFF0
 11847                           indf0	equ	0xFEF
 11848                           postinc0	equ	0xFEE
 11849                           plusw0	equ	0xFEB
 11850                           fsr0h	equ	0xFEA
 11851                           fsr0l	equ	0xFE9
 11852                           wreg	equ	0xFE8
 11853                           postinc1	equ	0xFE6
 11854                           postdec1	equ	0xFE5
 11855                           fsr1h	equ	0xFE2
 11856                           fsr1l	equ	0xFE1
 11857                           indf2	equ	0xFDF
 11858                           postinc2	equ	0xFDE
 11859                           postdec2	equ	0xFDD
 11860                           plusw2	equ	0xFDB
 11861                           fsr2h	equ	0xFDA
 11862                           fsr2l	equ	0xFD9
 11863                           status	equ	0xFD8
 11864                           
 11865 ;; *************** function _USBConfigureEndpoint *****************
 11866 ;; Defined at:
 11867 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11868 ;; Parameters:    Size  Location     Type
 11869 ;;  EPNum           1    wreg     unsigned char 
 11870 ;;  direction       1   29[BANK0 ] unsigned char 
 11871 ;; Auto vars:     Size  Location     Type
 11872 ;;  EPNum           1   34[BANK0 ] unsigned char 
 11873 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 11874 ;;		 -> BDT(48), 
 11875 ;; Return value:  Size  Location     Type
 11876 ;;                  1    wreg      void 
 11877 ;; Registers used:
 11878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11879 ;; Tracked objects:
 11880 ;;		On entry : 0/0
 11881 ;;		On exit  : 0/0
 11882 ;;		Unchanged: 0/0
 11883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11884 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11885 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11886 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11887 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11888 ;;Total ram usage:        8 bytes
 11889 ;; Hardware stack levels used:    1
 11890 ;; Hardware stack levels required when called:   11
 11891 ;; This function calls:
 11892 ;;		Nothing
 11893 ;; This function is called by:
 11894 ;;		_USBEnableEndpoint
 11895 ;; This function uses a non-reentrant model
 11896 ;;
 11897                           
 11898                           	psect	text48
 11899  004774                     __ptext48:
 11900                           	opt stack 0
 11901  004774                     _USBConfigureEndpoint:
 11902                           	opt stack 12
 11903                           
 11904                           ; BSR set to: 0
 11905                           ;incstack = 0
 11906                           ;USBConfigureEndpoint@EPNum stored from wreg
 11907  004774  0100               	movlb	0	; () banked
 11908  004776  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 11909                           
 11910                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 11911                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 11912  004778  0E00               	movlw	0
 11913  00477A  0100               	movlb	0	; () banked
 11914  00477C  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 11915  00477E  0E04               	movlw	4
 11916  004780  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 11917                           
 11918                           ; BSR set to: 0
 11919                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 11920  004782  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11921  004784  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 11922  004786  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 11923  004788  90D8               	bcf	status,0,c
 11924  00478A  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 11925  00478C  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 11926  00478E  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11927  004790  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 11928  004792  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 11929  004794  90D8               	bcf	status,0,c
 11930  004796  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11931  004798  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11932  00479A  90D8               	bcf	status,0,c
 11933  00479C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11934  00479E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11935  0047A0  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 11936  0047A2  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11937  0047A4  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 11938  0047A6  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11939  0047A8  90D8               	bcf	status,0,c
 11940  0047AA  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11941  0047AC  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11942  0047AE  90D8               	bcf	status,0,c
 11943  0047B0  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11944  0047B2  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11945  0047B4  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 11946  0047B6  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 11947  0047B8  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 11948  0047BA  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 11952  0047BC  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11953  0047C0  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11954  0047C4  9EDF               	bcf	indf2,7,c
 11955                           
 11956                           ; BSR set to: 0
 11957                           ;usb_device.c: 1575: if(direction == 0)
 11958  0047C6  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11959  0047C8  A4D8               	btfss	status,2,c
 11960  0047CA  D007               	goto	l1676
 11961                           
 11962                           ; BSR set to: 0
 11963                           ;usb_device.c: 1576: {
 11964                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 11965  0047CC  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11966  0047CE  0D02               	mullw	2
 11967  0047D0  0E0E               	movlw	low _pBDTEntryOut
 11968  0047D2  24F3               	addwf	prodl,w,c
 11969  0047D4  6ED9               	movwf	fsr2l,c
 11970  0047D6  0E03               	movlw	high _pBDTEntryOut
 11971  0047D8  D006               	goto	L10
 11972  0047DA                     l1676:
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;usb_device.c: 1579: else
 11976                           ;usb_device.c: 1580: {
 11977                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 11978                           
 11979                           ; BSR set to: 0
 11980  0047DA  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11981  0047DC  0D02               	mullw	2
 11982  0047DE  0EB6               	movlw	low _pBDTEntryIn
 11983  0047E0  24F3               	addwf	prodl,w,c
 11984  0047E2  6ED9               	movwf	fsr2l,c
 11985  0047E4  0E00               	movlw	high _pBDTEntryIn
 11986  0047E6                     L10:
 11987  0047E6  20F4               	addwfc	prodh,w,c
 11988  0047E8  6EDA               	movwf	fsr2h,c
 11989  0047EA  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 11990  0047EE  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 11991                           
 11992                           ; BSR set to: 0
 11993                           ;usb_device.c: 1582: }
 11994                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 11995                           
 11996                           ; BSR set to: 0
 11997  0047F2  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11998  0047F6  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11999  0047FA  9CDF               	bcf	indf2,6,c
 12000                           
 12001                           ; BSR set to: 0
 12002                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12003  0047FC  EE20 F004          	lfsr	2,4
 12004  004800  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12005  004802  26D9               	addwf	fsr2l,f,c
 12006  004804  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12007  004806  22DA               	addwfc	fsr2h,f,c
 12008  004808  8CDF               	bsf	indf2,6,c
 12009                           
 12010                           ; BSR set to: 0
 12011  00480A  0012               	return		;funcret
 12012  00480C                     __end_of_USBConfigureEndpoint:
 12013                           	opt stack 0
 12014                           tosu	equ	0xFFF
 12015                           tosh	equ	0xFFE
 12016                           tosl	equ	0xFFD
 12017                           pclath	equ	0xFFA
 12018                           tblptru	equ	0xFF8
 12019                           tblptrh	equ	0xFF7
 12020                           tblptrl	equ	0xFF6
 12021                           tablat	equ	0xFF5
 12022                           prodh	equ	0xFF4
 12023                           prodl	equ	0xFF3
 12024                           intcon	equ	0xFF2
 12025                           intcon2	equ	0xFF1
 12026                           intcon3	equ	0xFF0
 12027                           indf0	equ	0xFEF
 12028                           postinc0	equ	0xFEE
 12029                           plusw0	equ	0xFEB
 12030                           fsr0h	equ	0xFEA
 12031                           fsr0l	equ	0xFE9
 12032                           wreg	equ	0xFE8
 12033                           postinc1	equ	0xFE6
 12034                           postdec1	equ	0xFE5
 12035                           fsr1h	equ	0xFE2
 12036                           fsr1l	equ	0xFE1
 12037                           indf2	equ	0xFDF
 12038                           postinc2	equ	0xFDE
 12039                           postdec2	equ	0xFDD
 12040                           plusw2	equ	0xFDB
 12041                           fsr2h	equ	0xFDA
 12042                           fsr2l	equ	0xFD9
 12043                           status	equ	0xFD8
 12044                           
 12045 ;; *************** function _USBCtrlTrfOutHandler *****************
 12046 ;; Defined at:
 12047 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12048 ;; Parameters:    Size  Location     Type
 12049 ;;		None
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;		None
 12052 ;; Return value:  Size  Location     Type
 12053 ;;                  1    wreg      void 
 12054 ;; Registers used:
 12055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12056 ;; Tracked objects:
 12057 ;;		On entry : 0/0
 12058 ;;		On exit  : 0/0
 12059 ;;		Unchanged: 0/0
 12060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12065 ;;Total ram usage:        0 bytes
 12066 ;; Hardware stack levels used:    1
 12067 ;; Hardware stack levels required when called:   13
 12068 ;; This function calls:
 12069 ;;		_USBCtrlTrfRxService
 12070 ;; This function is called by:
 12071 ;;		_USBCtrlEPService
 12072 ;; This function uses a non-reentrant model
 12073 ;;
 12074                           
 12075                           	psect	text49
 12076  005056                     __ptext49:
 12077                           	opt stack 0
 12078  005056                     _USBCtrlTrfOutHandler:
 12079                           	opt stack 12
 12080                           
 12081                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12082                           
 12083                           ; BSR set to: 0
 12084                           ;incstack = 0
 12085  005056  0E02               	movlw	2
 12086  005058  0100               	movlb	0	; () banked
 12087  00505A  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12088  00505C  A4D8               	btfss	status,2,c
 12089  00505E  D003               	goto	l1782
 12090                           
 12091                           ; BSR set to: 0
 12092                           ;usb_device.c: 2558: {
 12093                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12094  005060  EC04  F017         	call	_USBCtrlTrfRxService	;wreg free
 12095                           
 12096                           ;usb_device.c: 2560: }
 12097  005064  0012               	return	
 12098  005066                     l1782:
 12099                           
 12100                           ;usb_device.c: 2561: else
 12101                           ;usb_device.c: 2562: {
 12102                           ;usb_device.c: 2565: controlTransferState = 0;
 12103  005066  0E00               	movlw	0
 12104  005068  0100               	movlb	0	; () banked
 12105  00506A  6FCC               	movwf	_controlTransferState& (0+255),b
 12106                           
 12107                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12108  00506C  0101               	movlb	1	; () banked
 12109  00506E  51E3               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12110  005070  A4D8               	btfss	status,2,c
 12111  005072  D020               	goto	l1784
 12112                           
 12113                           ; BSR set to: 1
 12114                           ;usb_device.c: 2573: {
 12115                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12116  005074  0100               	movlb	0	; () banked
 12117  005076  EE20 F001          	lfsr	2,1
 12118  00507A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12119  00507C  26D9               	addwf	fsr2l,f,c
 12120  00507E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12121  005080  22DA               	addwfc	fsr2h,f,c
 12122  005082  0E08               	movlw	8
 12123  005084  6EDF               	movwf	indf2,c
 12124                           
 12125                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12126  005086  EE20 F002          	lfsr	2,2
 12127  00508A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12128  00508C  26D9               	addwf	fsr2l,f,c
 12129  00508E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12130  005090  22DA               	addwfc	fsr2h,f,c
 12131  005092  0E30               	movlw	48
 12132  005094  6EDE               	movwf	postinc2,c
 12133  005096  0E04               	movlw	4
 12134  005098  6EDD               	movwf	postdec2,c
 12135                           
 12136                           ; BSR set to: 0
 12137                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12138  00509A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12139  00509E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12140  0050A2  0E0C               	movlw	12
 12141  0050A4  6EDF               	movwf	indf2,c
 12142                           
 12143                           ; BSR set to: 0
 12144                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12145  0050A6  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12146  0050AA  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12147  0050AE  0E00               	movlw	0
 12148  0050B0  8EDB               	bsf	plusw2,7,c
 12149                           
 12150                           ;usb_device.c: 2578: }
 12151  0050B2  0012               	return	
 12152  0050B4                     l1784:
 12153                           
 12154                           ;usb_device.c: 2579: else
 12155                           ;usb_device.c: 2580: {
 12156                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12157                           
 12158                           ; BSR set to: 0
 12159  0050B4  0E00               	movlw	0
 12160  0050B6  0101               	movlb	1	; () banked
 12161  0050B8  6FE3               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12162                           
 12163                           ; BSR set to: 1
 12164  0050BA  0012               	return	
 12165  0050BC                     __end_of_USBCtrlTrfOutHandler:
 12166                           	opt stack 0
 12167                           tosu	equ	0xFFF
 12168                           tosh	equ	0xFFE
 12169                           tosl	equ	0xFFD
 12170                           pclath	equ	0xFFA
 12171                           tblptru	equ	0xFF8
 12172                           tblptrh	equ	0xFF7
 12173                           tblptrl	equ	0xFF6
 12174                           tablat	equ	0xFF5
 12175                           prodh	equ	0xFF4
 12176                           prodl	equ	0xFF3
 12177                           intcon	equ	0xFF2
 12178                           intcon2	equ	0xFF1
 12179                           intcon3	equ	0xFF0
 12180                           indf0	equ	0xFEF
 12181                           postinc0	equ	0xFEE
 12182                           plusw0	equ	0xFEB
 12183                           fsr0h	equ	0xFEA
 12184                           fsr0l	equ	0xFE9
 12185                           wreg	equ	0xFE8
 12186                           postinc1	equ	0xFE6
 12187                           postdec1	equ	0xFE5
 12188                           fsr1h	equ	0xFE2
 12189                           fsr1l	equ	0xFE1
 12190                           indf2	equ	0xFDF
 12191                           postinc2	equ	0xFDE
 12192                           postdec2	equ	0xFDD
 12193                           plusw2	equ	0xFDB
 12194                           fsr2h	equ	0xFDA
 12195                           fsr2l	equ	0xFD9
 12196                           status	equ	0xFD8
 12197                           
 12198 ;; *************** function _USBCtrlTrfRxService *****************
 12199 ;; Defined at:
 12200 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12201 ;; Parameters:    Size  Location     Type
 12202 ;;		None
 12203 ;; Auto vars:     Size  Location     Type
 12204 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12205 ;;  i               1   29[BANK0 ] unsigned char 
 12206 ;; Return value:  Size  Location     Type
 12207 ;;                  1    wreg      void 
 12208 ;; Registers used:
 12209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12210 ;; Tracked objects:
 12211 ;;		On entry : 0/0
 12212 ;;		On exit  : 0/0
 12213 ;;		Unchanged: 0/0
 12214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12218 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12219 ;;Total ram usage:        2 bytes
 12220 ;; Hardware stack levels used:    1
 12221 ;; Hardware stack levels required when called:   12
 12222 ;; This function calls:
 12223 ;;		_USBCtrlEPAllowStatusStage
 12224 ;; This function is called by:
 12225 ;;		_USBCtrlTrfOutHandler
 12226 ;; This function uses a non-reentrant model
 12227 ;;
 12228                           
 12229                           	psect	text50
 12230  002E08                     __ptext50:
 12231                           	opt stack 0
 12232  002E08                     _USBCtrlTrfRxService:
 12233                           	opt stack 12
 12234                           
 12235                           ;usb_device.c: 1872: uint8_t byteToRead;
 12236                           ;usb_device.c: 1873: uint8_t i;
 12237                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12238                           
 12239                           ;incstack = 0
 12240  002E08  0100               	movlb	0	; () banked
 12241  002E0A  EE20 F001          	lfsr	2,1
 12242  002E0E  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12243  002E10  26D9               	addwf	fsr2l,f,c
 12244  002E12  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12245  002E14  22DA               	addwfc	fsr2h,f,c
 12246  002E16  50DF               	movf	indf2,w,c
 12247  002E18  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12248                           
 12249                           ; BSR set to: 0
 12250                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12251  002E1A  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12252  002E1C  0101               	movlb	1	; () banked
 12253  002E1E  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12254  002E20  0E00               	movlw	0
 12255  002E22  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12256  002E24  A0D8               	btfss	status,0,c
 12257                           
 12258                           ; BSR set to: 1
 12259                           ;usb_device.c: 1884: {
 12260                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12261  002E26  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12262                           
 12263                           ; BSR set to: 1
 12264                           ;usb_device.c: 1886: }
 12265                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12266                           
 12267                           ; BSR set to: 1
 12268  002E2A  0100               	movlb	0	; () banked
 12269  002E2C  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12270  002E2E  0101               	movlb	1	; () banked
 12271  002E30  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12272  002E32  0E00               	movlw	0
 12273  002E34  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12274                           
 12275                           ; BSR set to: 1
 12276                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12277  002E36  0E00               	movlw	0
 12278  002E38  0100               	movlb	0	; () banked
 12279  002E3A  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12280  002E3C  D013               	goto	l1710
 12281  002E3E                     
 12282                           ; BSR set to: 0
 12283                           ;usb_device.c: 1893: {
 12284                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12285                           
 12286                           ; BSR set to: 0
 12287  002E3E  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12288  002E40  0D01               	mullw	1
 12289  002E42  0E38               	movlw	56
 12290  002E44  24F3               	addwf	prodl,w,c
 12291  002E46  6ED9               	movwf	fsr2l,c
 12292  002E48  0E04               	movlw	4
 12293  002E4A  20F4               	addwfc	prodh,w,c
 12294  002E4C  6EDA               	movwf	fsr2h,c
 12295  002E4E  C1C9  FFE1         	movff	_outPipes,fsr1l
 12296  002E52  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12297  002E56  CFDF FFE7          	movff	indf2,indf1
 12298                           
 12299                           ; BSR set to: 0
 12300  002E5A  0101               	movlb	1	; () banked
 12301  002E5C  4BC9               	infsnz	_outPipes& (0+255),f,b
 12302  002E5E  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12303                           
 12304                           ; BSR set to: 1
 12305  002E60  0100               	movlb	0	; () banked
 12306  002E62  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12307  002E64                     l1710:
 12308                           
 12309                           ; BSR set to: 0
 12310                           
 12311                           ; BSR set to: 0
 12312  002E64  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12313  002E66  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12314  002E68  A0D8               	btfss	status,0,c
 12315  002E6A  D7E9               	goto	l1711
 12316                           
 12317                           ; BSR set to: 0
 12318                           ;usb_device.c: 1895: }
 12319                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12320                           
 12321                           ; BSR set to: 0
 12322  002E6C  0101               	movlb	1	; () banked
 12323  002E6E  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12324  002E70  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12325  002E72  B4D8               	btfsc	status,2,c
 12326  002E74  D033               	goto	l1713
 12327                           
 12328                           ; BSR set to: 1
 12329                           ;usb_device.c: 1900: {
 12330                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12331  002E76  0100               	movlb	0	; () banked
 12332  002E78  EE20 F001          	lfsr	2,1
 12333  002E7C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12334  002E7E  26D9               	addwf	fsr2l,f,c
 12335  002E80  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12336  002E82  22DA               	addwfc	fsr2h,f,c
 12337  002E84  0E08               	movlw	8
 12338  002E86  6EDF               	movwf	indf2,c
 12339                           
 12340                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12341  002E88  EE20 F002          	lfsr	2,2
 12342  002E8C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12343  002E8E  26D9               	addwf	fsr2l,f,c
 12344  002E90  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12345  002E92  22DA               	addwfc	fsr2h,f,c
 12346  002E94  0E38               	movlw	56
 12347  002E96  6EDE               	movwf	postinc2,c
 12348  002E98  0E04               	movlw	4
 12349  002E9A  6EDD               	movwf	postdec2,c
 12350                           
 12351                           ; BSR set to: 0
 12352                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12353  002E9C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12354  002EA0  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12355  002EA4  BCDF               	btfsc	indf2,6,c
 12356  002EA6  D00D               	goto	l1714
 12357                           
 12358                           ; BSR set to: 0
 12359                           ;usb_device.c: 1904: {
 12360                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12361  002EA8  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12362  002EAC  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12363  002EB0  0E48               	movlw	72
 12364  002EB2  6EDF               	movwf	indf2,c
 12365                           
 12366                           ; BSR set to: 0
 12367                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12368  002EB4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12369  002EB8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12370  002EBC  0E00               	movlw	0
 12371  002EBE  8EDB               	bsf	plusw2,7,c
 12372                           
 12373                           ;usb_device.c: 1907: }
 12374  002EC0  0012               	return	
 12375  002EC2                     l1714:
 12376                           
 12377                           ; BSR set to: 0
 12378                           ;usb_device.c: 1908: else
 12379                           ;usb_device.c: 1909: {
 12380                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12381                           
 12382                           ; BSR set to: 0
 12383  002EC2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12384  002EC6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12385  002ECA  0E08               	movlw	8
 12386  002ECC  6EDF               	movwf	indf2,c
 12387                           
 12388                           ; BSR set to: 0
 12389                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12390  002ECE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12391  002ED2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12392  002ED6  0E00               	movlw	0
 12393  002ED8  8EDB               	bsf	plusw2,7,c
 12394                           
 12395                           ; BSR set to: 0
 12396                           ;usb_device.c: 1912: }
 12397                           ;usb_device.c: 1913: }
 12398  002EDA  0012               	return	
 12399  002EDC                     l1713:
 12400                           
 12401                           ;usb_device.c: 1914: else
 12402                           ;usb_device.c: 1915: {
 12403                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12404                           
 12405                           ; BSR set to: 0
 12406  002EDC  0100               	movlb	0	; () banked
 12407  002EDE  EE20 F001          	lfsr	2,1
 12408  002EE2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12409  002EE4  26D9               	addwf	fsr2l,f,c
 12410  002EE6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12411  002EE8  22DA               	addwfc	fsr2h,f,c
 12412  002EEA  0E08               	movlw	8
 12413  002EEC  6EDF               	movwf	indf2,c
 12414                           
 12415                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12416  002EEE  EE20 F002          	lfsr	2,2
 12417  002EF2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12418  002EF4  26D9               	addwf	fsr2l,f,c
 12419  002EF6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12420  002EF8  22DA               	addwfc	fsr2h,f,c
 12421  002EFA  0E30               	movlw	48
 12422  002EFC  6EDE               	movwf	postinc2,c
 12423  002EFE  0E04               	movlw	4
 12424  002F00  6EDD               	movwf	postdec2,c
 12425                           
 12426                           ; BSR set to: 0
 12427                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12428  002F02  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12429  002F06  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12430  002F0A  0E04               	movlw	4
 12431  002F0C  6EDF               	movwf	indf2,c
 12432                           
 12433                           ; BSR set to: 0
 12434                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12435  002F0E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12436  002F12  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12437  002F16  0E00               	movlw	0
 12438  002F18  8EDB               	bsf	plusw2,7,c
 12439                           
 12440                           ; BSR set to: 0
 12441                           ;usb_device.c: 1944: }
 12442                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12443                           
 12444                           ; BSR set to: 0
 12445  002F1A  0101               	movlb	1	; () banked
 12446  002F1C  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12447                           
 12448                           ; BSR set to: 1
 12449                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12450  002F1E  0100               	movlb	0	; () banked
 12451  002F20  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12452  002F22  A4D8               	btfss	status,2,c
 12453  002F24  0012               	return	
 12454                           
 12455                           ; BSR set to: 0
 12456                           ;usb_device.c: 1960: {
 12457                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12458  002F26  EC5B  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12459  002F2A  0012               	return	
 12460  002F2C                     __end_of_USBCtrlTrfRxService:
 12461                           	opt stack 0
 12462                           tosu	equ	0xFFF
 12463                           tosh	equ	0xFFE
 12464                           tosl	equ	0xFFD
 12465                           pclath	equ	0xFFA
 12466                           tblptru	equ	0xFF8
 12467                           tblptrh	equ	0xFF7
 12468                           tblptrl	equ	0xFF6
 12469                           tablat	equ	0xFF5
 12470                           prodh	equ	0xFF4
 12471                           prodl	equ	0xFF3
 12472                           intcon	equ	0xFF2
 12473                           intcon2	equ	0xFF1
 12474                           intcon3	equ	0xFF0
 12475                           indf0	equ	0xFEF
 12476                           postinc0	equ	0xFEE
 12477                           plusw0	equ	0xFEB
 12478                           fsr0h	equ	0xFEA
 12479                           fsr0l	equ	0xFE9
 12480                           wreg	equ	0xFE8
 12481                           indf1	equ	0xFE7
 12482                           postinc1	equ	0xFE6
 12483                           postdec1	equ	0xFE5
 12484                           fsr1h	equ	0xFE2
 12485                           fsr1l	equ	0xFE1
 12486                           indf2	equ	0xFDF
 12487                           postinc2	equ	0xFDE
 12488                           postdec2	equ	0xFDD
 12489                           plusw2	equ	0xFDB
 12490                           fsr2h	equ	0xFDA
 12491                           fsr2l	equ	0xFD9
 12492                           status	equ	0xFD8
 12493                           
 12494 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12495 ;; Defined at:
 12496 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;		None
 12499 ;; Auto vars:     Size  Location     Type
 12500 ;;		None
 12501 ;; Return value:  Size  Location     Type
 12502 ;;                  1    wreg      void 
 12503 ;; Registers used:
 12504 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12505 ;; Tracked objects:
 12506 ;;		On entry : 0/0
 12507 ;;		On exit  : 0/0
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12514 ;;Total ram usage:        0 bytes
 12515 ;; Hardware stack levels used:    1
 12516 ;; Hardware stack levels required when called:   11
 12517 ;; This function calls:
 12518 ;;		Nothing
 12519 ;; This function is called by:
 12520 ;;		_USBDeviceTasks
 12521 ;;		_USBCtrlEPServiceComplete
 12522 ;;		_USBCtrlTrfRxService
 12523 ;; This function uses a non-reentrant model
 12524 ;;
 12525                           
 12526                           	psect	text51
 12527  003AB6                     __ptext51:
 12528                           	opt stack 0
 12529  003AB6                     _USBCtrlEPAllowStatusStage:
 12530                           	opt stack 12
 12531                           
 12532                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12533                           
 12534                           ;incstack = 0
 12535  003AB6  0100               	movlb	0	; () banked
 12536  003AB8  51C8               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 12537  003ABA  A4D8               	btfss	status,2,c
 12538  003ABC  0012               	return	
 12539                           
 12540                           ; BSR set to: 0
 12541                           ;usb_device.c: 1442: {
 12542                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12543  003ABE  0E01               	movlw	1
 12544  003AC0  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12545                           
 12546                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12547  003AC2  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12548  003AC4  A4D8               	btfss	status,2,c
 12549  003AC6  0012               	return	
 12550                           
 12551                           ; BSR set to: 0
 12552                           ;usb_device.c: 1445: {
 12553                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12554  003AC8  0E01               	movlw	1
 12555  003ACA  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12556                           
 12557                           ; BSR set to: 0
 12558                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12559  003ACC  0E02               	movlw	2
 12560  003ACE  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12561  003AD0  A4D8               	btfss	status,2,c
 12562  003AD2  D015               	goto	l1664
 12563                           
 12564                           ; BSR set to: 0
 12565                           ;usb_device.c: 1451: {
 12566                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12567  003AD4  EE20 F001          	lfsr	2,1
 12568  003AD8  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12569  003ADA  26D9               	addwf	fsr2l,f,c
 12570  003ADC  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12571  003ADE  22DA               	addwfc	fsr2h,f,c
 12572  003AE0  0E00               	movlw	0
 12573  003AE2  6EDF               	movwf	indf2,c
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12577  003AE4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12578  003AE8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12579  003AEC  0E48               	movlw	72
 12580  003AEE  6EDF               	movwf	indf2,c
 12581                           
 12582                           ; BSR set to: 0
 12583                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12584  003AF0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12585  003AF4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12586  003AF8  0E00               	movlw	0
 12587  003AFA  8EDB               	bsf	plusw2,7,c
 12588                           
 12589                           ;usb_device.c: 1455: }
 12590  003AFC  0012               	return	
 12591  003AFE                     l1664:
 12592                           
 12593                           ; BSR set to: 0
 12594                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12595                           
 12596                           ; BSR set to: 0
 12597  003AFE  05CC               	decf	_controlTransferState& (0+255),w,b
 12598  003B00  A4D8               	btfss	status,2,c
 12599  003B02  0012               	return	
 12600                           
 12601                           ; BSR set to: 0
 12602                           ;usb_device.c: 1457: {
 12603                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12604  003B04  0E00               	movlw	0
 12605  003B06  0101               	movlb	1	; () banked
 12606  003B08  6FE3               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12607                           
 12608                           ; BSR set to: 1
 12609                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12610  003B0A  0100               	movlb	0	; () banked
 12611  003B0C  EE20 F001          	lfsr	2,1
 12612  003B10  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12613  003B12  26D9               	addwf	fsr2l,f,c
 12614  003B14  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12615  003B16  22DA               	addwfc	fsr2h,f,c
 12616  003B18  0E08               	movlw	8
 12617  003B1A  6EDF               	movwf	indf2,c
 12618                           
 12619                           ; BSR set to: 0
 12620                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12621  003B1C  EE20 F002          	lfsr	2,2
 12622  003B20  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12623  003B22  26D9               	addwf	fsr2l,f,c
 12624  003B24  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12625  003B26  22DA               	addwfc	fsr2h,f,c
 12626  003B28  0E30               	movlw	48
 12627  003B2A  6EDE               	movwf	postinc2,c
 12628  003B2C  0E04               	movlw	4
 12629  003B2E  6EDD               	movwf	postdec2,c
 12630                           
 12631                           ; BSR set to: 0
 12632                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12633  003B30  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12634  003B34  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12635  003B38  0E04               	movlw	4
 12636  003B3A  6EDF               	movwf	indf2,c
 12637                           
 12638                           ; BSR set to: 0
 12639                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12640  003B3C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12641  003B40  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12642  003B44  0E00               	movlw	0
 12643  003B46  8EDB               	bsf	plusw2,7,c
 12644                           
 12645                           ; BSR set to: 0
 12646                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12647  003B48  0E01               	movlw	1
 12648  003B4A  0101               	movlb	1	; () banked
 12649  003B4C  6FE3               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12650                           
 12651                           ; BSR set to: 1
 12652                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12653  003B4E  0100               	movlb	0	; () banked
 12654  003B50  EE20 F001          	lfsr	2,1
 12655  003B54  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12656  003B56  26D9               	addwf	fsr2l,f,c
 12657  003B58  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12658  003B5A  22DA               	addwfc	fsr2h,f,c
 12659  003B5C  0E08               	movlw	8
 12660  003B5E  6EDF               	movwf	indf2,c
 12661                           
 12662                           ; BSR set to: 0
 12663                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12664  003B60  EE20 F002          	lfsr	2,2
 12665  003B64  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12666  003B66  26D9               	addwf	fsr2l,f,c
 12667  003B68  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12668  003B6A  22DA               	addwfc	fsr2h,f,c
 12669  003B6C  0E30               	movlw	48
 12670  003B6E  6EDE               	movwf	postinc2,c
 12671  003B70  0E04               	movlw	4
 12672  003B72  6EDD               	movwf	postdec2,c
 12673                           
 12674                           ; BSR set to: 0
 12675                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12676  003B74  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12677  003B78  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12678  003B7C  0E80               	movlw	128
 12679  003B7E  6EDF               	movwf	indf2,c
 12680                           
 12681                           ; BSR set to: 0
 12682                           
 12683                           ; BSR set to: 0
 12684                           
 12685                           ; BSR set to: 0
 12686  003B80  0012               	return	
 12687  003B82                     __end_of_USBCtrlEPAllowStatusStage:
 12688                           	opt stack 0
 12689                           tosu	equ	0xFFF
 12690                           tosh	equ	0xFFE
 12691                           tosl	equ	0xFFD
 12692                           pclath	equ	0xFFA
 12693                           tblptru	equ	0xFF8
 12694                           tblptrh	equ	0xFF7
 12695                           tblptrl	equ	0xFF6
 12696                           tablat	equ	0xFF5
 12697                           prodh	equ	0xFF4
 12698                           prodl	equ	0xFF3
 12699                           intcon	equ	0xFF2
 12700                           intcon2	equ	0xFF1
 12701                           intcon3	equ	0xFF0
 12702                           indf0	equ	0xFEF
 12703                           postinc0	equ	0xFEE
 12704                           plusw0	equ	0xFEB
 12705                           fsr0h	equ	0xFEA
 12706                           fsr0l	equ	0xFE9
 12707                           wreg	equ	0xFE8
 12708                           indf1	equ	0xFE7
 12709                           postinc1	equ	0xFE6
 12710                           postdec1	equ	0xFE5
 12711                           fsr1h	equ	0xFE2
 12712                           fsr1l	equ	0xFE1
 12713                           indf2	equ	0xFDF
 12714                           postinc2	equ	0xFDE
 12715                           postdec2	equ	0xFDD
 12716                           plusw2	equ	0xFDB
 12717                           fsr2h	equ	0xFDA
 12718                           fsr2l	equ	0xFD9
 12719                           status	equ	0xFD8
 12720                           
 12721 ;; *************** function _USBCtrlTrfInHandler *****************
 12722 ;; Defined at:
 12723 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12724 ;; Parameters:    Size  Location     Type
 12725 ;;		None
 12726 ;; Auto vars:     Size  Location     Type
 12727 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12728 ;; Return value:  Size  Location     Type
 12729 ;;                  1    wreg      void 
 12730 ;; Registers used:
 12731 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12732 ;; Tracked objects:
 12733 ;;		On entry : 0/0
 12734 ;;		On exit  : 0/0
 12735 ;;		Unchanged: 0/0
 12736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12740 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12741 ;;Total ram usage:        1 bytes
 12742 ;; Hardware stack levels used:    1
 12743 ;; Hardware stack levels required when called:   12
 12744 ;; This function calls:
 12745 ;;		_USBCtrlTrfTxService
 12746 ;; This function is called by:
 12747 ;;		_USBCtrlEPService
 12748 ;; This function uses a non-reentrant model
 12749 ;;
 12750                           
 12751                           	psect	text52
 12752  003F68                     __ptext52:
 12753                           	opt stack 0
 12754  003F68                     _USBCtrlTrfInHandler:
 12755                           	opt stack 13
 12756                           
 12757                           ;usb_device.c: 2611: uint8_t lastDTS;
 12758                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12759                           
 12760                           ; BSR set to: 0
 12761                           ;incstack = 0
 12762  003F68  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12763  003F6C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12764  003F70  0100               	movlb	0	; () banked
 12765  003F72  0E00               	movlw	0
 12766  003F74  BCDF               	btfsc	indf2,6,c
 12767  003F76  0E01               	movlw	1
 12768  003F78  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12769                           
 12770                           ; BSR set to: 0
 12771                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12772  003F7A  0E04               	movlw	4
 12773  003F7C  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 12774                           
 12775                           ; BSR set to: 0
 12776                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12777  003F7E  0E08               	movlw	8
 12778  003F80  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 12779  003F82  A4D8               	btfss	status,2,c
 12780  003F84  D00D               	goto	l1791
 12781                           
 12782                           ; BSR set to: 0
 12783                           ;usb_device.c: 2622: {
 12784                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12785  003F86  0104               	movlb	4	; () banked
 12786  003F88  5132               	movf	50,w,b	;volatile
 12787  003F8A  0B7F               	andlw	127
 12788  003F8C  010F               	movlb	15	; () banked
 12789  003F8E  6F38               	movwf	56,b	;volatile
 12790                           
 12791                           ; BSR set to: 15
 12792                           ;usb_device.c: 2624: if(UADDR != 0u)
 12793  003F90  5138               	movf	56,w,b	;volatile
 12794  003F92  B4D8               	btfsc	status,2,c
 12795  003F94  D002               	goto	l1790
 12796                           
 12797                           ; BSR set to: 15
 12798                           ;usb_device.c: 2625: {
 12799                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12800  003F96  0E10               	movlw	16
 12801  003F98  D001               	goto	L11
 12802  003F9A                     l1790:
 12803                           
 12804                           ;usb_device.c: 2628: else
 12805                           ;usb_device.c: 2629: {
 12806                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12807                           
 12808                           ; BSR set to: 0
 12809  003F9A  0E04               	movlw	4
 12810  003F9C                     L11:
 12811  003F9C  0100               	movlb	0	; () banked
 12812  003F9E  6FCE               	movwf	_USBDeviceState& (0+255),b
 12813  003FA0                     l1791:
 12814                           
 12815                           ; BSR set to: 0
 12816                           ;usb_device.c: 2631: }
 12817                           ;usb_device.c: 2632: }
 12818                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12819                           
 12820                           ; BSR set to: 0
 12821                           
 12822                           ; BSR set to: 0
 12823  003FA0  05CC               	decf	_controlTransferState& (0+255),w,b
 12824  003FA2  A4D8               	btfss	status,2,c
 12825  003FA4  D03B               	goto	l1792
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;usb_device.c: 2636: {
 12829                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12830  003FA6  EE20 F002          	lfsr	2,2
 12831  003FAA  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12832  003FAC  26D9               	addwf	fsr2l,f,c
 12833  003FAE  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12834  003FB0  22DA               	addwfc	fsr2h,f,c
 12835  003FB2  0E38               	movlw	56
 12836  003FB4  6EDE               	movwf	postinc2,c
 12837  003FB6  0E04               	movlw	4
 12838  003FB8  6EDD               	movwf	postdec2,c
 12839                           
 12840                           ; BSR set to: 0
 12841                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12842  003FBA  ECE6  F01A         	call	_USBCtrlTrfTxService	;wreg free
 12843                           
 12844                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12845  003FBE  0E02               	movlw	2
 12846  003FC0  0100               	movlb	0	; () banked
 12847  003FC2  19CD               	xorwf	_shortPacketStatus& (0+255),w,b
 12848  003FC4  A4D8               	btfss	status,2,c
 12849  003FC6  D00D               	goto	l1793
 12850                           
 12851                           ; BSR set to: 0
 12852                           ;usb_device.c: 2645: {
 12853                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12854  003FC8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12855  003FCC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12856  003FD0  0E04               	movlw	4
 12857  003FD2  6EDF               	movwf	indf2,c
 12858                           
 12859                           ; BSR set to: 0
 12860                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12861  003FD4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12862  003FD8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12863  003FDC  0E00               	movlw	0
 12864  003FDE  8EDB               	bsf	plusw2,7,c
 12865                           
 12866                           ;usb_device.c: 2650: }
 12867  003FE0  0012               	return	
 12868  003FE2                     l1793:
 12869                           
 12870                           ; BSR set to: 0
 12871                           ;usb_device.c: 2651: else
 12872                           ;usb_device.c: 2652: {
 12873                           ;usb_device.c: 2653: if(lastDTS == 0)
 12874                           
 12875                           ; BSR set to: 0
 12876  003FE2  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 12877  003FE4  A4D8               	btfss	status,2,c
 12878  003FE6  D00D               	goto	l1795
 12879                           
 12880                           ; BSR set to: 0
 12881                           ;usb_device.c: 2654: {
 12882                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12883  003FE8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12884  003FEC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12885  003FF0  0E48               	movlw	72
 12886  003FF2  6EDF               	movwf	indf2,c
 12887                           
 12888                           ; BSR set to: 0
 12889                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12890  003FF4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12891  003FF8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12892  003FFC  0E00               	movlw	0
 12893  003FFE  8EDB               	bsf	plusw2,7,c
 12894                           
 12895                           ;usb_device.c: 2657: }
 12896  004000  0012               	return	
 12897  004002                     l1795:
 12898                           
 12899                           ; BSR set to: 0
 12900                           ;usb_device.c: 2658: else
 12901                           ;usb_device.c: 2659: {
 12902                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 12903                           
 12904                           ; BSR set to: 0
 12905  004002  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12906  004006  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12907  00400A  0E08               	movlw	8
 12908  00400C  6EDF               	movwf	indf2,c
 12909                           
 12910                           ; BSR set to: 0
 12911                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12912  00400E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12913  004012  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12914  004016  0E00               	movlw	0
 12915  004018  8EDB               	bsf	plusw2,7,c
 12916                           
 12917                           ; BSR set to: 0
 12918                           ;usb_device.c: 2662: }
 12919                           ;usb_device.c: 2663: }
 12920                           ;usb_device.c: 2664: }
 12921                           
 12922                           ; BSR set to: 0
 12923  00401A  0012               	return	
 12924  00401C                     l1792:
 12925                           
 12926                           ; BSR set to: 0
 12927                           ;usb_device.c: 2665: else
 12928                           ;usb_device.c: 2666: {
 12929                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 12930  00401C  0101               	movlb	1	; () banked
 12931  00401E  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 12932                           
 12933                           ; BSR set to: 1
 12934                           ;usb_device.c: 2675: }
 12935                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 12936                           
 12937                           ; BSR set to: 1
 12938  004020  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12939                           
 12940                           ; BSR set to: 1
 12941                           ;usb_device.c: 2677: }
 12942                           ;usb_device.c: 2679: controlTransferState = 0;
 12943                           
 12944                           ; BSR set to: 1
 12945  004022  0E00               	movlw	0
 12946  004024  0100               	movlb	0	; () banked
 12947  004026  6FCC               	movwf	_controlTransferState& (0+255),b
 12948  004028  0012               	return	
 12949  00402A                     __end_of_USBCtrlTrfInHandler:
 12950                           	opt stack 0
 12951                           tosu	equ	0xFFF
 12952                           tosh	equ	0xFFE
 12953                           tosl	equ	0xFFD
 12954                           pclath	equ	0xFFA
 12955                           tblptru	equ	0xFF8
 12956                           tblptrh	equ	0xFF7
 12957                           tblptrl	equ	0xFF6
 12958                           tablat	equ	0xFF5
 12959                           prodh	equ	0xFF4
 12960                           prodl	equ	0xFF3
 12961                           intcon	equ	0xFF2
 12962                           intcon2	equ	0xFF1
 12963                           intcon3	equ	0xFF0
 12964                           indf0	equ	0xFEF
 12965                           postinc0	equ	0xFEE
 12966                           plusw0	equ	0xFEB
 12967                           fsr0h	equ	0xFEA
 12968                           fsr0l	equ	0xFE9
 12969                           wreg	equ	0xFE8
 12970                           indf1	equ	0xFE7
 12971                           postinc1	equ	0xFE6
 12972                           postdec1	equ	0xFE5
 12973                           fsr1h	equ	0xFE2
 12974                           fsr1l	equ	0xFE1
 12975                           indf2	equ	0xFDF
 12976                           postinc2	equ	0xFDE
 12977                           postdec2	equ	0xFDD
 12978                           plusw2	equ	0xFDB
 12979                           fsr2h	equ	0xFDA
 12980                           fsr2l	equ	0xFD9
 12981                           status	equ	0xFD8
 12982                           
 12983 ;; *************** function _USBCtrlTrfTxService *****************
 12984 ;; Defined at:
 12985 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12986 ;; Parameters:    Size  Location     Type
 12987 ;;		None
 12988 ;; Auto vars:     Size  Location     Type
 12989 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 12990 ;; Return value:  Size  Location     Type
 12991 ;;                  1    wreg      void 
 12992 ;; Registers used:
 12993 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12994 ;; Tracked objects:
 12995 ;;		On entry : 0/0
 12996 ;;		On exit  : 0/0
 12997 ;;		Unchanged: 0/0
 12998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13002 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13003 ;;Total ram usage:        1 bytes
 13004 ;; Hardware stack levels used:    1
 13005 ;; Hardware stack levels required when called:   11
 13006 ;; This function calls:
 13007 ;;		Nothing
 13008 ;; This function is called by:
 13009 ;;		_USBCtrlEPAllowDataStage
 13010 ;;		_USBCtrlTrfInHandler
 13011 ;; This function uses a non-reentrant model
 13012 ;;
 13013                           
 13014                           	psect	text53
 13015  0035CC                     __ptext53:
 13016                           	opt stack 0
 13017  0035CC                     _USBCtrlTrfTxService:
 13018                           	opt stack 11
 13019                           
 13020                           ;usb_device.c: 1791: uint8_t byteToSend;
 13021                           ;usb_device.c: 1795: byteToSend = 8;
 13022                           
 13023                           ; BSR set to: 0
 13024                           ;incstack = 0
 13025  0035CC  0E08               	movlw	8
 13026  0035CE  0100               	movlb	0	; () banked
 13027  0035D0  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13028                           
 13029                           ; BSR set to: 0
 13030                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13031  0035D2  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13032  0035D4  E110               	bnz	l12052
 13033  0035D6  0E08               	movlw	8
 13034  0035D8  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13035  0035DA  B0D8               	btfsc	status,0,c
 13036  0035DC  D00C               	goto	l1697
 13037                           
 13038                           ; BSR set to: 0
 13039                           ;usb_device.c: 1797: {
 13040                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13041  0035DE  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13045  0035E2  51CD               	movf	_shortPacketStatus& (0+255),w,b
 13046  0035E4  A4D8               	btfss	status,2,c
 13047  0035E6  D002               	goto	l1695
 13048                           
 13049                           ; BSR set to: 0
 13050                           ;usb_device.c: 1806: {
 13051                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13052  0035E8  0E01               	movlw	1
 13053  0035EA  D004               	goto	L12
 13054  0035EC                     l1695:
 13055                           
 13056                           ; BSR set to: 0
 13057                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13058                           
 13059                           ; BSR set to: 0
 13060  0035EC  05CD               	decf	_shortPacketStatus& (0+255),w,b
 13061  0035EE  A4D8               	btfss	status,2,c
 13062  0035F0  D002               	goto	l1697
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;usb_device.c: 1810: {
 13066                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13067  0035F2  0E02               	movlw	2
 13068  0035F4                     L12:
 13069  0035F4  6FCD               	movwf	_shortPacketStatus& (0+255),b
 13070  0035F6                     l1697:
 13071  0035F6                     l12052:
 13072                           
 13073                           ; BSR set to: 0
 13074                           ;usb_device.c: 1812: }
 13075                           ;usb_device.c: 1813: }
 13076                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13077  0035F6  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13078  0035F8  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13079  0035FA  0E00               	movlw	0
 13080  0035FC  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13084  0035FE  EE20 F001          	lfsr	2,1
 13085  003602  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13086  003604  26D9               	addwf	fsr2l,f,c
 13087  003606  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13088  003608  22DA               	addwfc	fsr2h,f,c
 13089  00360A  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13093  00360E  0E38               	movlw	56
 13094  003610  0102               	movlb	2	; () banked
 13095  003612  6FD4               	movwf	_pDst& (0+255),b
 13096  003614  0E04               	movlw	4
 13097  003616  6FD5               	movwf	(_pDst+1)& (0+255),b
 13098                           
 13099                           ; BSR set to: 2
 13100                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13101  003618  0100               	movlb	0	; () banked
 13102  00361A  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13103  00361C  D01E               	goto	l1699
 13104  00361E  D03E               	goto	l1703
 13105  003620                     
 13106                           ; BSR set to: 0
 13107                           ;usb_device.c: 1830: {
 13108                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13109                           
 13110                           ; BSR set to: 0
 13111  003620  C0B0  FFF6         	movff	_inPipes,tblptrl
 13112  003624  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13113  003628  6AF8               	clrf	tblptru,c
 13114  00362A  C2D4  FFD9         	movff	_pDst,fsr2l
 13115  00362E  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13116  003632  0E0E               	movlw	(high __ramtop+-1)
 13117  003634  64F7               	cpfsgt	tblptrh,c
 13118  003636  D003               	bra	u10617
 13119  003638  0008               	tblrd		*
 13120  00363A  50F5               	movf	tablat,w,c
 13121  00363C  D005               	bra	u10610
 13122  00363E                     u10617:
 13123  00363E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13124  003642  CFF7 FFEA          	movff	tblptrh,fsr0h
 13125  003646  50EF               	movf	indf0,w,c
 13126  003648                     u10610:
 13127  003648  6EDF               	movwf	indf2,c
 13128  00364A  0100               	movlb	0	; () banked
 13129  00364C  4BB0               	infsnz	_inPipes& (0+255),f,b
 13130  00364E  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13131                           
 13132                           ; BSR set to: 0
 13133  003650  0102               	movlb	2	; () banked
 13134  003652  4BD4               	infsnz	_pDst& (0+255),f,b
 13135  003654  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13136                           
 13137                           ; BSR set to: 2
 13138                           ;usb_device.c: 1832: byteToSend--;
 13139  003656  0100               	movlb	0	; () banked
 13140  003658  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13141  00365A                     l1699:
 13142                           
 13143                           ; BSR set to: 0
 13144                           
 13145                           ; BSR set to: 0
 13146  00365A  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13147  00365C  B4D8               	btfsc	status,2,c
 13148  00365E  0012               	return	
 13149  003660  D7DF               	goto	l1700
 13150  003662                     
 13151                           ; BSR set to: 0
 13152                           ;usb_device.c: 1838: {
 13153                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13154                           
 13155                           ; BSR set to: 0
 13156  003662  C0B0  FFF6         	movff	_inPipes,tblptrl
 13157  003666  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13158  00366A  6AF8               	clrf	tblptru,c
 13159  00366C  C2D4  FFD9         	movff	_pDst,fsr2l
 13160  003670  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13161  003674  0E0E               	movlw	(high __ramtop+-1)
 13162  003676  64F7               	cpfsgt	tblptrh,c
 13163  003678  D003               	bra	u10637
 13164  00367A  0008               	tblrd		*
 13165  00367C  50F5               	movf	tablat,w,c
 13166  00367E  D005               	bra	u10630
 13167  003680                     u10637:
 13168  003680  CFF6 FFE9          	movff	tblptrl,fsr0l
 13169  003684  CFF7 FFEA          	movff	tblptrh,fsr0h
 13170  003688  50EF               	movf	indf0,w,c
 13171  00368A                     u10630:
 13172  00368A  6EDF               	movwf	indf2,c
 13173  00368C  0100               	movlb	0	; () banked
 13174  00368E  4BB0               	infsnz	_inPipes& (0+255),f,b
 13175  003690  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13176                           
 13177                           ; BSR set to: 0
 13178  003692  0102               	movlb	2	; () banked
 13179  003694  4BD4               	infsnz	_pDst& (0+255),f,b
 13180  003696  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13181                           
 13182                           ; BSR set to: 2
 13183                           ;usb_device.c: 1840: byteToSend--;
 13184  003698  0100               	movlb	0	; () banked
 13185  00369A  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13186  00369C                     l1703:
 13187                           
 13188                           ; BSR set to: 0
 13189                           
 13190                           ; BSR set to: 0
 13191  00369C  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13192  00369E  B4D8               	btfsc	status,2,c
 13193  0036A0  0012               	return	
 13194  0036A2  D7DF               	goto	l1704
 13195  0036A4                     __end_of_USBCtrlTrfTxService:
 13196                           	opt stack 0
 13197                           tosu	equ	0xFFF
 13198                           tosh	equ	0xFFE
 13199                           tosl	equ	0xFFD
 13200                           pclath	equ	0xFFA
 13201                           tblptru	equ	0xFF8
 13202                           tblptrh	equ	0xFF7
 13203                           tblptrl	equ	0xFF6
 13204                           tablat	equ	0xFF5
 13205                           prodh	equ	0xFF4
 13206                           prodl	equ	0xFF3
 13207                           intcon	equ	0xFF2
 13208                           intcon2	equ	0xFF1
 13209                           intcon3	equ	0xFF0
 13210                           indf0	equ	0xFEF
 13211                           postinc0	equ	0xFEE
 13212                           plusw0	equ	0xFEB
 13213                           fsr0h	equ	0xFEA
 13214                           fsr0l	equ	0xFE9
 13215                           wreg	equ	0xFE8
 13216                           indf1	equ	0xFE7
 13217                           postinc1	equ	0xFE6
 13218                           postdec1	equ	0xFE5
 13219                           fsr1h	equ	0xFE2
 13220                           fsr1l	equ	0xFE1
 13221                           indf2	equ	0xFDF
 13222                           postinc2	equ	0xFDE
 13223                           postdec2	equ	0xFDD
 13224                           plusw2	equ	0xFDB
 13225                           fsr2h	equ	0xFDA
 13226                           fsr2l	equ	0xFD9
 13227                           status	equ	0xFD8
 13228                           
 13229 ;; *************** function _CDCTxService *****************
 13230 ;; Defined at:
 13231 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13232 ;; Parameters:    Size  Location     Type
 13233 ;;		None
 13234 ;; Auto vars:     Size  Location     Type
 13235 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13236 ;;  i               1   36[BANK0 ] unsigned char 
 13237 ;; Return value:  Size  Location     Type
 13238 ;;                  1    wreg      void 
 13239 ;; Registers used:
 13240 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13241 ;; Tracked objects:
 13242 ;;		On entry : 0/0
 13243 ;;		On exit  : 0/0
 13244 ;;		Unchanged: 0/0
 13245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13247 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13249 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13250 ;;Total ram usage:        2 bytes
 13251 ;; Hardware stack levels used:    1
 13252 ;; Hardware stack levels required when called:   12
 13253 ;; This function calls:
 13254 ;;		_USBTransferOnePacket
 13255 ;; This function is called by:
 13256 ;;		_UsbDevice_MainTask
 13257 ;; This function uses a non-reentrant model
 13258 ;;
 13259                           
 13260                           	psect	text54
 13261  0026C6                     __ptext54:
 13262                           	opt stack 0
 13263  0026C6                     _CDCTxService:
 13264                           	opt stack 15
 13265                           
 13266                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13267                           ;usb_device_cdc.c: 842: uint8_t i;
 13268                           ;usb_device_cdc.c: 844: ;
 13269                           ;usb_device_cdc.c: 846: {};
 13270                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13271                           
 13272                           ; BSR set to: 0
 13273                           ;incstack = 0
 13274  0026C6  0101               	movlb	1	; () banked
 13275  0026C8  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13276  0026CA  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13277  0026CC  B4D8               	btfsc	status,2,c
 13278  0026CE  D006               	goto	l1949
 13279                           
 13280                           ; BSR set to: 1
 13281  0026D0  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13282  0026D4  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13283  0026D8  BEDF               	btfsc	indf2,7,c
 13284  0026DA  0012               	return	
 13285  0026DC                     l1949:
 13286                           
 13287                           ; BSR set to: 1
 13288                           ;usb_device_cdc.c: 852: }
 13289                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13290                           
 13291                           ; BSR set to: 1
 13292  0026DC  0E03               	movlw	3
 13293  0026DE  0100               	movlb	0	; () banked
 13294  0026E0  19C6               	xorwf	_cdc_trf_state& (0+255),w,b
 13295  0026E2  A4D8               	btfss	status,2,c
 13296  0026E4  D002               	goto	l1951
 13297                           
 13298                           ; BSR set to: 0
 13299                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13300  0026E6  0E00               	movlw	0
 13301  0026E8  6FC6               	movwf	_cdc_trf_state& (0+255),b
 13302  0026EA                     l1951:
 13303                           
 13304                           ; BSR set to: 0
 13305                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13306  0026EA  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13307  0026EC  B4D8               	btfsc	status,2,c
 13308  0026EE  0012               	return	
 13309                           
 13310                           ; BSR set to: 0
 13311                           ;usb_device_cdc.c: 869: }
 13312                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13313                           
 13314                           ; BSR set to: 0
 13315                           
 13316                           ; BSR set to: 0
 13317                           ;usb_device_cdc.c: 866: {
 13318                           ;usb_device_cdc.c: 867: ;
 13319                           ;usb_device_cdc.c: 868: return;
 13320  0026F0  0E02               	movlw	2
 13321  0026F2  19C6               	xorwf	_cdc_trf_state& (0+255),w,b
 13322  0026F4  A4D8               	btfss	status,2,c
 13323  0026F6  D013               	goto	l1953
 13324                           
 13325                           ; BSR set to: 0
 13326                           ;usb_device_cdc.c: 875: {
 13327                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13328  0026F8  0E01               	movlw	1
 13329  0026FA  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13330  0026FC  0E00               	movlw	0
 13331  0026FE  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13332  002700  0E00               	movlw	0
 13333  002702  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13334  002704  0E00               	movlw	0
 13335  002706  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13336  002708  0E02               	movlw	2
 13337  00270A  EC15  F020         	call	_USBTransferOnePacket
 13338  00270E  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13339  002712  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13340                           
 13341                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13342  002716  0E03               	movlw	3
 13343  002718  0100               	movlb	0	; () banked
 13344  00271A  6FC6               	movwf	_cdc_trf_state& (0+255),b
 13345                           
 13346                           ;usb_device_cdc.c: 879: }
 13347  00271C  0012               	return	
 13348  00271E                     l1953:
 13349                           
 13350                           ; BSR set to: 0
 13351                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13352                           
 13353                           ; BSR set to: 0
 13354  00271E  05C6               	decf	_cdc_trf_state& (0+255),w,b
 13355  002720  A4D8               	btfss	status,2,c
 13356  002722  0012               	return	
 13357                           
 13358                           ; BSR set to: 0
 13359                           ;usb_device_cdc.c: 881: {
 13360                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13361  002724  0E40               	movlw	64
 13362  002726  65C5               	cpfsgt	_cdc_tx_len& (0+255),b
 13363  002728  D003               	goto	l1956
 13364                           
 13365                           ; BSR set to: 0
 13366                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13367  00272A  0E40               	movlw	64
 13368  00272C  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13369  00272E  D002               	goto	l1957
 13370  002730                     l1956:
 13371                           
 13372                           ; BSR set to: 0
 13373                           ;usb_device_cdc.c: 887: else
 13374                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13375  002730  C0C5  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13376  002734                     l1957:
 13377                           
 13378                           ; BSR set to: 0
 13379                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13380                           
 13381                           ; BSR set to: 0
 13382  002734  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13383  002736  0800               	sublw	0
 13384  002738  25C5               	addwf	_cdc_tx_len& (0+255),w,b
 13385  00273A  6FC5               	movwf	_cdc_tx_len& (0+255),b
 13386                           
 13387                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13388  00273C  0EB6               	movlw	low _cdc_data_tx
 13389  00273E  0102               	movlb	2	; () banked
 13390  002740  6FC8               	movwf	_pCDCDst& (0+255),b
 13391  002742  0E07               	movlw	high _cdc_data_tx
 13392  002744  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13393                           
 13394                           ; BSR set to: 2
 13395                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13396  002746  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13397                           
 13398                           ; BSR set to: 2
 13399                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13400  00274A  0101               	movlb	1	; () banked
 13401  00274C  51E1               	movf	_cdc_mem_type& (0+255),w,b
 13402  00274E  B4D8               	btfsc	status,2,c
 13403  002750  D01D               	goto	l1959
 13404  002752  D03D               	goto	l1963
 13405  002754                     
 13406                           ;usb_device_cdc.c: 901: {
 13407                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13408                           
 13409                           ; BSR set to: 1
 13410  002754  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13411  002758  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13412  00275C  6AF8               	clrf	tblptru,c
 13413  00275E  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13414  002762  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13415  002766  0E0E               	movlw	(high __ramtop+-1)
 13416  002768  64F7               	cpfsgt	tblptrh,c
 13417  00276A  D003               	bra	u14547
 13418  00276C  0008               	tblrd		*
 13419  00276E  50F5               	movf	tablat,w,c
 13420  002770  D005               	bra	u14540
 13421  002772                     u14547:
 13422  002772  CFF6 FFE9          	movff	tblptrl,fsr0l
 13423  002776  CFF7 FFEA          	movff	tblptrh,fsr0h
 13424  00277A  50EF               	movf	indf0,w,c
 13425  00277C                     u14540:
 13426  00277C  6EDF               	movwf	indf2,c
 13427                           
 13428                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13429  00277E  0102               	movlb	2	; () banked
 13430  002780  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13431  002782  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13432                           
 13433                           ; BSR set to: 2
 13434                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13435  002784  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13436  002786  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13437                           
 13438                           ; BSR set to: 2
 13439                           ;usb_device_cdc.c: 905: i--;
 13440  002788  0100               	movlb	0	; () banked
 13441  00278A  0784               	decf	CDCTxService@i& (0+255),f,b
 13442  00278C                     l1959:
 13443                           
 13444                           ; BSR set to: 0
 13445  00278C  0100               	movlb	0	; () banked
 13446  00278E  5184               	movf	CDCTxService@i& (0+255),w,b
 13447  002790  B4D8               	btfsc	status,2,c
 13448  002792  D021               	goto	u14570
 13449  002794  D7DF               	goto	l1960
 13450  002796                     
 13451                           ; BSR set to: 0
 13452                           ;usb_device_cdc.c: 911: {
 13453                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13454                           
 13455                           ; BSR set to: 0
 13456  002796  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13457  00279A  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13458  00279E  6AF8               	clrf	tblptru,c
 13459  0027A0  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13460  0027A4  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13461  0027A8  0E0E               	movlw	(high __ramtop+-1)
 13462  0027AA  64F7               	cpfsgt	tblptrh,c
 13463  0027AC  D003               	bra	u14567
 13464  0027AE  0008               	tblrd		*
 13465  0027B0  50F5               	movf	tablat,w,c
 13466  0027B2  D005               	bra	u14560
 13467  0027B4                     u14567:
 13468  0027B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 13469  0027B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 13470  0027BC  50EF               	movf	indf0,w,c
 13471  0027BE                     u14560:
 13472  0027BE  6EDF               	movwf	indf2,c
 13473                           
 13474                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13475  0027C0  0102               	movlb	2	; () banked
 13476  0027C2  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13477  0027C4  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13478                           
 13479                           ; BSR set to: 2
 13480                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13481  0027C6  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13482  0027C8  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13483                           
 13484                           ; BSR set to: 2
 13485                           ;usb_device_cdc.c: 915: i--;
 13486  0027CA  0100               	movlb	0	; () banked
 13487  0027CC  0784               	decf	CDCTxService@i& (0+255),f,b
 13488  0027CE                     l1963:
 13489                           
 13490                           ; BSR set to: 0
 13491  0027CE  0100               	movlb	0	; () banked
 13492  0027D0  5184               	movf	CDCTxService@i& (0+255),w,b
 13493  0027D2  A4D8               	btfss	status,2,c
 13494  0027D4  D7E0               	goto	l1964
 13495  0027D6                     u14570:
 13496                           
 13497                           ; BSR set to: 0
 13498                           ;usb_device_cdc.c: 916: }
 13499                           ;usb_device_cdc.c: 917: }
 13500                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13501                           
 13502                           ; BSR set to: 0
 13503                           
 13504                           ; BSR set to: 0
 13505  0027D6  51C5               	movf	_cdc_tx_len& (0+255),w,b
 13506  0027D8  A4D8               	btfss	status,2,c
 13507  0027DA  D008               	goto	l1968
 13508                           
 13509                           ; BSR set to: 0
 13510                           ;usb_device_cdc.c: 924: {
 13511                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13512  0027DC  0E40               	movlw	64
 13513  0027DE  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13514  0027E0  A4D8               	btfss	status,2,c
 13515  0027E2  D002               	goto	l1967
 13516                           
 13517                           ; BSR set to: 0
 13518                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13519  0027E4  0E02               	movlw	2
 13520  0027E6  D001               	goto	L13
 13521  0027E8                     l1967:
 13522                           
 13523                           ; BSR set to: 0
 13524                           ;usb_device_cdc.c: 927: else
 13525                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13526                           
 13527                           ; BSR set to: 0
 13528  0027E8  0E03               	movlw	3
 13529  0027EA                     L13:
 13530  0027EA  6FC6               	movwf	_cdc_trf_state& (0+255),b
 13531  0027EC                     l1968:
 13532                           
 13533                           ; BSR set to: 0
 13534                           ;usb_device_cdc.c: 929: }
 13535                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13536                           
 13537                           ; BSR set to: 0
 13538                           
 13539                           ; BSR set to: 0
 13540  0027EC  0E01               	movlw	1
 13541  0027EE  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13542  0027F0  0EB6               	movlw	low _cdc_data_tx
 13543  0027F2  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13544  0027F4  0E07               	movlw	high _cdc_data_tx
 13545  0027F6  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13546  0027F8  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13547  0027FC  0E02               	movlw	2
 13548  0027FE  EC15  F020         	call	_USBTransferOnePacket
 13549  002802  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13550  002806  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13551  00280A  0012               	return	
 13552  00280C                     __end_of_CDCTxService:
 13553                           	opt stack 0
 13554                           tosu	equ	0xFFF
 13555                           tosh	equ	0xFFE
 13556                           tosl	equ	0xFFD
 13557                           pclath	equ	0xFFA
 13558                           tblptru	equ	0xFF8
 13559                           tblptrh	equ	0xFF7
 13560                           tblptrl	equ	0xFF6
 13561                           tablat	equ	0xFF5
 13562                           prodh	equ	0xFF4
 13563                           prodl	equ	0xFF3
 13564                           intcon	equ	0xFF2
 13565                           intcon2	equ	0xFF1
 13566                           intcon3	equ	0xFF0
 13567                           indf0	equ	0xFEF
 13568                           postinc0	equ	0xFEE
 13569                           plusw0	equ	0xFEB
 13570                           fsr0h	equ	0xFEA
 13571                           fsr0l	equ	0xFE9
 13572                           wreg	equ	0xFE8
 13573                           indf1	equ	0xFE7
 13574                           postinc1	equ	0xFE6
 13575                           postdec1	equ	0xFE5
 13576                           fsr1h	equ	0xFE2
 13577                           fsr1l	equ	0xFE1
 13578                           indf2	equ	0xFDF
 13579                           postinc2	equ	0xFDE
 13580                           postdec2	equ	0xFDD
 13581                           plusw2	equ	0xFDB
 13582                           fsr2h	equ	0xFDA
 13583                           fsr2l	equ	0xFD9
 13584                           status	equ	0xFD8
 13585                           
 13586 ;; *************** function _Term_MainSm *****************
 13587 ;; Defined at:
 13588 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13589 ;; Parameters:    Size  Location     Type
 13590 ;;		None
 13591 ;; Auto vars:     Size  Location     Type
 13592 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13593 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13594 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13595 ;;  FwkBuildYear    4    0        unsigned char [4]
 13596 ;;  FwkBuildMont    4    0        unsigned char [4]
 13597 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13598 ;; Return value:  Size  Location     Type
 13599 ;;                  1    wreg      void 
 13600 ;; Registers used:
 13601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13602 ;; Tracked objects:
 13603 ;;		On entry : 0/0
 13604 ;;		On exit  : 0/0
 13605 ;;		Unchanged: 0/0
 13606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13608 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13610 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13611 ;;Total ram usage:       12 bytes
 13612 ;; Hardware stack levels used:    1
 13613 ;; Hardware stack levels required when called:   16
 13614 ;; This function calls:
 13615 ;;		_OsTmr_GetTimerStatus
 13616 ;;		_OsTmr_StartTimer
 13617 ;;		_Terminal
 13618 ;;		_memset
 13619 ;;		_putUSBUSART
 13620 ;;		_sprintf
 13621 ;;		_strcat
 13622 ;;		_strcpy
 13623 ;;		_strlen
 13624 ;;		_utoa
 13625 ;; This function is called by:
 13626 ;;		_Term_MainTask
 13627 ;; This function uses a non-reentrant model
 13628 ;;
 13629                           
 13630                           	psect	text55
 13631  0010B6                     __ptext55:
 13632                           	opt stack 0
 13633  0010B6                     _Term_MainSm:
 13634                           	opt stack 11
 13635                           
 13636                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13637                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13638                           ;term.c: 711: static UINT8 Data[50];
 13639                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13640                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13641                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13642                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13643                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13644                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13645                           ;term.c: 719: switch (TermMainSmState)
 13646                           
 13647                           ;incstack = 0
 13648  0010B6  D133               	goto	l2427
 13649  0010B8                     
 13650                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13651  0010B8  0ED0               	movlw	low Term_MainSm@TermDelay
 13652  0010BA  0100               	movlb	0	; () banked
 13653  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13654  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13655  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13656  0010C2  0ED0               	movlw	208
 13657  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13658  0010C6  0E07               	movlw	7
 13659  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13660  0010CA  0E00               	movlw	0
 13661  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13662  0010CE  0E00               	movlw	0
 13663  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13664  0010D2  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 13665                           
 13666                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13667  0010D6  0E01               	movlw	1
 13668  0010D8  0102               	movlb	2	; () banked
 13669  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13670                           
 13671                           ;term.c: 726: break;
 13672  0010DC  0012               	return	
 13673  0010DE                     
 13674                           ; BSR set to: 2
 13675                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13676                           
 13677                           ; BSR set to: 2
 13678  0010DE  0ED0               	movlw	low Term_MainSm@TermDelay
 13679  0010E0  0100               	movlb	0	; () banked
 13680  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13681  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13682  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13683  0010E8  EC78  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 13684  0010EC  06E8               	decf	wreg,f,c
 13685  0010EE  A4D8               	btfss	status,2,c
 13686  0010F0  0012               	return	
 13687                           
 13688                           ;term.c: 731: {
 13689                           ;term.c: 733: TermMainSmState = Term_InitState;
 13690  0010F2  0E02               	movlw	2
 13691  0010F4  0102               	movlb	2	; () banked
 13692  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13693                           
 13694                           ; BSR set to: 2
 13695                           ;term.c: 734: }
 13696                           ;term.c: 735: break;
 13697  0010F8  0012               	return	
 13698  0010FA                     
 13699                           ; BSR set to: 2
 13700                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13701                           
 13702                           ; BSR set to: 2
 13703  0010FA  0E1F               	movlw	31
 13704  0010FC  0100               	movlb	0	; () banked
 13705  0010FE  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 13706  001100  0012               	return	
 13707                           
 13708                           ; BSR set to: 0
 13709  001102  B265               	btfsc	3941,1,c	;volatile
 13710  001104  0012               	return	
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;term.c: 743: else
 13714                           ;term.c: 744: {
 13715                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13716                           
 13717                           ; BSR set to: 0
 13718                           
 13719                           ; BSR set to: 0
 13720                           ;term.c: 740: {
 13721                           ;term.c: 742: }
 13722  001106  0E03               	movlw	3
 13723  001108  0102               	movlb	2	; () banked
 13724  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13725                           
 13726                           ; BSR set to: 2
 13727                           ;term.c: 747: }
 13728                           ;term.c: 748: break;
 13729  00110C  0012               	return	
 13730  00110E                     
 13731                           ; BSR set to: 2
 13732                           ;term.c: 752: if((cdc_trf_state == 0))
 13733                           
 13734                           ; BSR set to: 2
 13735  00110E  0100               	movlb	0	; () banked
 13736  001110  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13737  001112  A4D8               	btfss	status,2,c
 13738  001114  0012               	return	
 13739                           
 13740                           ; BSR set to: 0
 13741                           ;term.c: 753: {
 13742                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13743  001116  0E2F               	movlw	low _Welcome
 13744  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13745  00111A  0EFD               	movlw	high _Welcome
 13746  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13747  00111E  0E88               	movlw	136
 13748  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13749  001122  EC42  F030         	call	_putUSBUSART	;wreg free
 13750                           
 13751                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13752  001126  0E04               	movlw	4
 13753  001128  0102               	movlb	2	; () banked
 13754  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13755                           
 13756                           ; BSR set to: 2
 13757                           ;term.c: 758: }
 13758                           ;term.c: 759: break;
 13759  00112C  0012               	return	
 13760  00112E                     
 13761                           ; BSR set to: 2
 13762                           ;term.c: 763: if((cdc_trf_state == 0))
 13763                           
 13764                           ; BSR set to: 2
 13765  00112E  0100               	movlb	0	; () banked
 13766  001130  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13767  001132  A4D8               	btfss	status,2,c
 13768  001134  0012               	return	
 13769                           
 13770                           ; BSR set to: 0
 13771                           ;term.c: 764: {
 13772                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13773  001136  0E3F               	movlw	low _MsgFormat
 13774  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13775  00113A  0EFC               	movlw	high _MsgFormat
 13776  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13777  00113E  0EEF               	movlw	239
 13778  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13779  001142  EC42  F030         	call	_putUSBUSART	;wreg free
 13780                           
 13781                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13782  001146  0E05               	movlw	5
 13783  001148  0102               	movlb	2	; () banked
 13784  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13785                           
 13786                           ; BSR set to: 2
 13787                           ;term.c: 769: }
 13788                           ;term.c: 770: break;
 13789  00114C  0012               	return	
 13790  00114E                     
 13791                           ; BSR set to: 2
 13792                           ;term.c: 774: if((cdc_trf_state == 0))
 13793                           
 13794                           ; BSR set to: 2
 13795  00114E  0100               	movlb	0	; () banked
 13796  001150  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13797  001152  A4D8               	btfss	status,2,c
 13798  001154  0012               	return	
 13799                           
 13800                           ; BSR set to: 0
 13801                           ;term.c: 775: {
 13802                           ;term.c: 777: memset(Data,0,50);
 13803  001156  0E63               	movlw	low Term_MainSm@Data
 13804  001158  6F7D               	movwf	memset@p1& (0+255),b
 13805  00115A  0E04               	movlw	high Term_MainSm@Data
 13806  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13807  00115E  0E00               	movlw	0
 13808  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13809  001162  0E00               	movlw	0
 13810  001164  6F7F               	movwf	memset@c& (0+255),b
 13811  001166  0E00               	movlw	0
 13812  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13813  00116A  0E32               	movlw	50
 13814  00116C  6F81               	movwf	memset@n& (0+255),b
 13815  00116E  ECEA  F02E         	call	_memset	;wreg free
 13816                           
 13817                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13818  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13819  001174  0100               	movlb	0	; () banked
 13820  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13821  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13822  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13823  00117C  0E00               	movlw	0
 13824  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13825  001180  0E01               	movlw	1
 13826  001182  6F8C               	movwf	utoa@val& (0+255),b
 13827  001184  0E00               	movlw	0
 13828  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13829  001188  0E0A               	movlw	10
 13830  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13831  00118C  EC7B  F021         	call	_utoa	;wreg free
 13832                           
 13833                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13834  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13835  001192  0100               	movlb	0	; () banked
 13836  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13837  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13838  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13839  00119A  0E00               	movlw	0
 13840  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13841  00119E  0E02               	movlw	2
 13842  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13843  0011A2  0E00               	movlw	0
 13844  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13845  0011A6  0E0A               	movlw	10
 13846  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13847  0011AA  EC7B  F021         	call	_utoa	;wreg free
 13848                           
 13849                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13850  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13851  0011B0  0100               	movlb	0	; () banked
 13852  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13853  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13854  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13855  0011B8  0E00               	movlw	0
 13856  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13857  0011BC  0E00               	movlw	0
 13858  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 13859  0011C0  0E00               	movlw	0
 13860  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13861  0011C4  0E0A               	movlw	10
 13862  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 13863  0011C8  EC7B  F021         	call	_utoa	;wreg free
 13864                           
 13865                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13866  0011CC  0E63               	movlw	low Term_MainSm@Data
 13867  0011CE  0100               	movlb	0	; () banked
 13868  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 13869  0011D2  0E04               	movlw	high Term_MainSm@Data
 13870  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 13871  0011D6  0EDF               	movlw	low STR_23
 13872  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 13873  0011DA  0EFE               	movlw	high STR_23
 13874  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 13875  0011DE  ECB9  F02E         	call	_strcpy	;wreg free
 13876                           
 13877                           ;term.c: 783: strcat(Data,FwkMajorStr);
 13878  0011E2  0E63               	movlw	low Term_MainSm@Data
 13879  0011E4  0100               	movlb	0	; () banked
 13880  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 13881  0011E8  0E04               	movlw	high Term_MainSm@Data
 13882  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13883  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13884  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 13885  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13886  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 13887  0011F4  EC20  F029         	call	_strcat	;wreg free
 13888                           
 13889                           ;term.c: 784: strcat(Data,".");
 13890  0011F8  0E63               	movlw	low Term_MainSm@Data
 13891  0011FA  0100               	movlb	0	; () banked
 13892  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 13893  0011FE  0E04               	movlw	high Term_MainSm@Data
 13894  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13895  001202  0EF4               	movlw	low STR_24
 13896  001204  6F7F               	movwf	strcat@from& (0+255),b
 13897  001206  0EFF               	movlw	high STR_24
 13898  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 13899  00120A  EC20  F029         	call	_strcat	;wreg free
 13900                           
 13901                           ;term.c: 785: strcat(Data,FwkMinorStr);
 13902  00120E  0E63               	movlw	low Term_MainSm@Data
 13903  001210  0100               	movlb	0	; () banked
 13904  001212  6F7D               	movwf	strcat@to& (0+255),b
 13905  001214  0E04               	movlw	high Term_MainSm@Data
 13906  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13907  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13908  00121A  6F7F               	movwf	strcat@from& (0+255),b
 13909  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13910  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 13911  001220  EC20  F029         	call	_strcat	;wreg free
 13912                           
 13913                           ;term.c: 786: strcat(Data,".");
 13914  001224  0E63               	movlw	low Term_MainSm@Data
 13915  001226  0100               	movlb	0	; () banked
 13916  001228  6F7D               	movwf	strcat@to& (0+255),b
 13917  00122A  0E04               	movlw	high Term_MainSm@Data
 13918  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13919  00122E  0EF4               	movlw	low STR_24
 13920  001230  6F7F               	movwf	strcat@from& (0+255),b
 13921  001232  0EFF               	movlw	high STR_24
 13922  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 13923  001236  EC20  F029         	call	_strcat	;wreg free
 13924                           
 13925                           ;term.c: 787: strcat(Data,FwkBuildStr);
 13926  00123A  0E63               	movlw	low Term_MainSm@Data
 13927  00123C  0100               	movlb	0	; () banked
 13928  00123E  6F7D               	movwf	strcat@to& (0+255),b
 13929  001240  0E04               	movlw	high Term_MainSm@Data
 13930  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13931  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13932  001246  6F7F               	movwf	strcat@from& (0+255),b
 13933  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13934  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 13935  00124C  EC20  F029         	call	_strcat	;wreg free
 13936                           
 13937                           ;term.c: 788: strcat(Data,"\r\n");
 13938  001250  0E63               	movlw	low Term_MainSm@Data
 13939  001252  0100               	movlb	0	; () banked
 13940  001254  6F7D               	movwf	strcat@to& (0+255),b
 13941  001256  0E04               	movlw	high Term_MainSm@Data
 13942  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13943  00125A  0E93               	movlw	low (STR_21+39)
 13944  00125C  6F7F               	movwf	strcat@from& (0+255),b
 13945  00125E  0EFE               	movlw	high (STR_21+39)
 13946  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 13947  001262  EC20  F029         	call	_strcat	;wreg free
 13948                           
 13949                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 13950  001266  0E63               	movlw	low Term_MainSm@Data
 13951  001268  0100               	movlb	0	; () banked
 13952  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 13953  00126C  0E04               	movlw	high Term_MainSm@Data
 13954  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13955  001270  0E63               	movlw	low Term_MainSm@Data
 13956  001272  6F7D               	movwf	strlen@s& (0+255),b
 13957  001274  0E04               	movlw	high Term_MainSm@Data
 13958  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13959  001278  EC7E  F02D         	call	_strlen	;wreg free
 13960  00127C  0100               	movlb	0	; () banked
 13961  00127E  517D               	movf	?_strlen& (0+255),w,b
 13962  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 13963  001282  EC42  F030         	call	_putUSBUSART	;wreg free
 13964                           
 13965                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 13966  001286  0E06               	movlw	6
 13967  001288  0102               	movlb	2	; () banked
 13968  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13969                           
 13970                           ; BSR set to: 2
 13971                           ;term.c: 793: }
 13972                           ;term.c: 794: break;
 13973  00128C  0012               	return	
 13974  00128E                     
 13975                           ; BSR set to: 2
 13976                           ;term.c: 798: if((cdc_trf_state == 0))
 13977                           
 13978                           ; BSR set to: 2
 13979  00128E  0100               	movlb	0	; () banked
 13980  001290  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13981  001292  A4D8               	btfss	status,2,c
 13982  001294  0012               	return	
 13983                           
 13984                           ; BSR set to: 0
 13985                           ;term.c: 799: {
 13986                           ;term.c: 801: memset(Data,0,50);
 13987  001296  0E63               	movlw	low Term_MainSm@Data
 13988  001298  6F7D               	movwf	memset@p1& (0+255),b
 13989  00129A  0E04               	movlw	high Term_MainSm@Data
 13990  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13991  00129E  0E00               	movlw	0
 13992  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 13993  0012A2  0E00               	movlw	0
 13994  0012A4  6F7F               	movwf	memset@c& (0+255),b
 13995  0012A6  0E00               	movlw	0
 13996  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 13997  0012AA  0E32               	movlw	50
 13998  0012AC  6F81               	movwf	memset@n& (0+255),b
 13999  0012AE  ECEA  F02E         	call	_memset	;wreg free
 14000                           
 14001                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 20 2022");
 14002  0012B2  0E63               	movlw	low Term_MainSm@Data
 14003  0012B4  0100               	movlb	0	; () banked
 14004  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 14005  0012B8  0E04               	movlw	high Term_MainSm@Data
 14006  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14007  0012BC  0E1A               	movlw	low STR_27
 14008  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 14009  0012C0  0EFF               	movlw	high STR_27
 14010  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14011  0012C4  0EB5               	movlw	low STR_28
 14012  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14013  0012C8  0EFF               	movlw	high STR_28
 14014  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14015  0012CC  EC27  F01C         	call	_sprintf	;wreg free
 14016                           
 14017                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14018  0012D0  0E63               	movlw	low Term_MainSm@Data
 14019  0012D2  0100               	movlb	0	; () banked
 14020  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 14021  0012D6  0E04               	movlw	high Term_MainSm@Data
 14022  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14023  0012DA  0E63               	movlw	low Term_MainSm@Data
 14024  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 14025  0012DE  0E04               	movlw	high Term_MainSm@Data
 14026  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14027  0012E2  EC7E  F02D         	call	_strlen	;wreg free
 14028  0012E6  0100               	movlb	0	; () banked
 14029  0012E8  517D               	movf	?_strlen& (0+255),w,b
 14030  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14031  0012EC  EC42  F030         	call	_putUSBUSART	;wreg free
 14032                           
 14033                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14034  0012F0  0E07               	movlw	7
 14035  0012F2  0102               	movlb	2	; () banked
 14036  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14037                           
 14038                           ; BSR set to: 2
 14039                           ;term.c: 808: }
 14040                           ;term.c: 809: break;
 14041  0012F6  0012               	return	
 14042  0012F8                     
 14043                           ; BSR set to: 2
 14044                           ;term.c: 813: if((cdc_trf_state == 0))
 14045                           
 14046                           ; BSR set to: 2
 14047  0012F8  0100               	movlb	0	; () banked
 14048  0012FA  51C6               	movf	_cdc_trf_state& (0+255),w,b
 14049  0012FC  A4D8               	btfss	status,2,c
 14050  0012FE  0012               	return	
 14051                           
 14052                           ; BSR set to: 0
 14053                           ;term.c: 814: {
 14054                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14055  001300  0E3F               	movlw	low _MsgReady
 14056  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14057  001304  0EFE               	movlw	high _MsgReady
 14058  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14059  001308  0E16               	movlw	22
 14060  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14061  00130C  EC42  F030         	call	_putUSBUSART	;wreg free
 14062                           
 14063                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14064  001310  0E08               	movlw	8
 14065  001312  0102               	movlb	2	; () banked
 14066  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14067                           
 14068                           ; BSR set to: 2
 14069                           ;term.c: 819: }
 14070                           ;term.c: 820: break;
 14071  001316  0012               	return	
 14072  001318                     
 14073                           ; BSR set to: 2
 14074                           ;term.c: 824: Terminal();
 14075                           
 14076                           ; BSR set to: 2
 14077  001318  EC68  F000         	call	_Terminal	;wreg free
 14078                           
 14079                           ;term.c: 829: }
 14080                           
 14081                           ;term.c: 828: break;
 14082                           
 14083                           ;term.c: 827: default:
 14084                           
 14085                           ;term.c: 825: break;
 14086  00131C  0012               	return	
 14087  00131E                     l2427:
 14088  00131E  0102               	movlb	2	; () banked
 14089  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14090                           
 14091                           ; Switch size 1, requested type "space"
 14092                           ; Number of cases is 9, Range of values is 0 to 8
 14093                           ; switch strategies available:
 14094                           ; Name         Instructions Cycles
 14095                           ; simple_byte           28    15 (average)
 14096                           ;	Chosen strategy is simple_byte
 14097  001322  0A00               	xorlw	0	; case 0
 14098  001324  B4D8               	btfsc	status,2,c
 14099  001326  D6C8               	goto	l2428
 14100  001328  0A01               	xorlw	1	; case 1
 14101  00132A  B4D8               	btfsc	status,2,c
 14102  00132C  D6D8               	goto	l2430
 14103  00132E  0A03               	xorlw	3	; case 2
 14104  001330  B4D8               	btfsc	status,2,c
 14105  001332  D6E3               	goto	l2432
 14106  001334  0A01               	xorlw	1	; case 3
 14107  001336  B4D8               	btfsc	status,2,c
 14108  001338  D6EA               	goto	l2437
 14109  00133A  0A07               	xorlw	7	; case 4
 14110  00133C  B4D8               	btfsc	status,2,c
 14111  00133E  D6F7               	goto	l2439
 14112  001340  0A01               	xorlw	1	; case 5
 14113  001342  B4D8               	btfsc	status,2,c
 14114  001344  D704               	goto	l2441
 14115  001346  0A03               	xorlw	3	; case 6
 14116  001348  B4D8               	btfsc	status,2,c
 14117  00134A  D7A1               	goto	l2443
 14118  00134C  0A01               	xorlw	1	; case 7
 14119  00134E  B4D8               	btfsc	status,2,c
 14120  001350  D7D3               	goto	l2445
 14121  001352  0A0F               	xorlw	15	; case 8
 14122  001354  A4D8               	btfss	status,2,c
 14123  001356  0012               	return	
 14124  001358  D7DF               	goto	l2447
 14125  00135A                     __end_of_Term_MainSm:
 14126                           	opt stack 0
 14127                           tosu	equ	0xFFF
 14128                           tosh	equ	0xFFE
 14129                           tosl	equ	0xFFD
 14130                           pclath	equ	0xFFA
 14131                           tblptru	equ	0xFF8
 14132                           tblptrh	equ	0xFF7
 14133                           tblptrl	equ	0xFF6
 14134                           tablat	equ	0xFF5
 14135                           prodh	equ	0xFF4
 14136                           prodl	equ	0xFF3
 14137                           intcon	equ	0xFF2
 14138                           intcon2	equ	0xFF1
 14139                           intcon3	equ	0xFF0
 14140                           indf0	equ	0xFEF
 14141                           postinc0	equ	0xFEE
 14142                           plusw0	equ	0xFEB
 14143                           fsr0h	equ	0xFEA
 14144                           fsr0l	equ	0xFE9
 14145                           wreg	equ	0xFE8
 14146                           indf1	equ	0xFE7
 14147                           postinc1	equ	0xFE6
 14148                           postdec1	equ	0xFE5
 14149                           fsr1h	equ	0xFE2
 14150                           fsr1l	equ	0xFE1
 14151                           indf2	equ	0xFDF
 14152                           postinc2	equ	0xFDE
 14153                           postdec2	equ	0xFDD
 14154                           plusw2	equ	0xFDB
 14155                           fsr2h	equ	0xFDA
 14156                           fsr2l	equ	0xFD9
 14157                           status	equ	0xFD8
 14158                           
 14159 ;; *************** function _strlen *****************
 14160 ;; Defined at:
 14161 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14162 ;; Parameters:    Size  Location     Type
 14163 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14164 ;;		 -> Term_MainSm@Data(50), 
 14165 ;; Auto vars:     Size  Location     Type
 14166 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14167 ;;		 -> Term_MainSm@Data(50), 
 14168 ;; Return value:  Size  Location     Type
 14169 ;;                  2   29[BANK0 ] unsigned int 
 14170 ;; Registers used:
 14171 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14172 ;; Tracked objects:
 14173 ;;		On entry : 0/0
 14174 ;;		On exit  : 0/0
 14175 ;;		Unchanged: 0/0
 14176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14177 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14178 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14179 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14180 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14181 ;;Total ram usage:        6 bytes
 14182 ;; Hardware stack levels used:    1
 14183 ;; Hardware stack levels required when called:   11
 14184 ;; This function calls:
 14185 ;;		Nothing
 14186 ;; This function is called by:
 14187 ;;		_Term_MainSm
 14188 ;; This function uses a non-reentrant model
 14189 ;;
 14190                           
 14191                           	psect	text56
 14192  005AFC                     __ptext56:
 14193                           	opt stack 0
 14194  005AFC                     _strlen:
 14195                           	opt stack 15
 14196                           
 14197                           ;incstack = 0
 14198  005AFC  C07D  F081         	movff	strlen@s,strlen@cp
 14199  005B00  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14200  005B04  D003               	goto	l3304
 14201  005B06  0100               	movlb	0	; () banked
 14202  005B08  4B81               	infsnz	strlen@cp& (0+255),f,b
 14203  005B0A  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14204  005B0C                     l3304:
 14205                           
 14206                           ; BSR set to: 0
 14207  005B0C  C081  FFD9         	movff	strlen@cp,fsr2l
 14208  005B10  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14209  005B14  50DF               	movf	indf2,w,c
 14210  005B16  A4D8               	btfss	status,2,c
 14211  005B18  D7F6               	goto	l3305
 14212  005B1A  C07D  F07F         	movff	strlen@s,??_strlen
 14213  005B1E  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14214  005B22  0100               	movlb	0	; () banked
 14215  005B24  1F7F               	comf	??_strlen& (0+255),f,b
 14216  005B26  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14217  005B28  4B7F               	infsnz	??_strlen& (0+255),f,b
 14218  005B2A  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14219  005B2C  5181               	movf	strlen@cp& (0+255),w,b
 14220  005B2E  257F               	addwf	??_strlen& (0+255),w,b
 14221  005B30  6F7D               	movwf	?_strlen& (0+255),b
 14222  005B32  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14223  005B34  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14224  005B36  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14225  005B38  0012               	return	
 14226  005B3A                     __end_of_strlen:
 14227                           	opt stack 0
 14228                           tosu	equ	0xFFF
 14229                           tosh	equ	0xFFE
 14230                           tosl	equ	0xFFD
 14231                           pclath	equ	0xFFA
 14232                           tblptru	equ	0xFF8
 14233                           tblptrh	equ	0xFF7
 14234                           tblptrl	equ	0xFF6
 14235                           tablat	equ	0xFF5
 14236                           prodh	equ	0xFF4
 14237                           prodl	equ	0xFF3
 14238                           intcon	equ	0xFF2
 14239                           intcon2	equ	0xFF1
 14240                           intcon3	equ	0xFF0
 14241                           indf0	equ	0xFEF
 14242                           postinc0	equ	0xFEE
 14243                           plusw0	equ	0xFEB
 14244                           fsr0h	equ	0xFEA
 14245                           fsr0l	equ	0xFE9
 14246                           wreg	equ	0xFE8
 14247                           indf1	equ	0xFE7
 14248                           postinc1	equ	0xFE6
 14249                           postdec1	equ	0xFE5
 14250                           fsr1h	equ	0xFE2
 14251                           fsr1l	equ	0xFE1
 14252                           indf2	equ	0xFDF
 14253                           postinc2	equ	0xFDE
 14254                           postdec2	equ	0xFDD
 14255                           plusw2	equ	0xFDB
 14256                           fsr2h	equ	0xFDA
 14257                           fsr2l	equ	0xFD9
 14258                           status	equ	0xFD8
 14259                           
 14260 ;; *************** function _strcat *****************
 14261 ;; Defined at:
 14262 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14263 ;; Parameters:    Size  Location     Type
 14264 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14265 ;;		 -> Term_MainSm@Data(50), 
 14266 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14267 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14268 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14269 ;; Auto vars:     Size  Location     Type
 14270 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14271 ;;		 -> Term_MainSm@Data(50), 
 14272 ;; Return value:  Size  Location     Type
 14273 ;;                  2   29[BANK0 ] PTR unsigned char 
 14274 ;; Registers used:
 14275 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14276 ;; Tracked objects:
 14277 ;;		On entry : 0/0
 14278 ;;		On exit  : 0/0
 14279 ;;		Unchanged: 0/0
 14280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14281 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14282 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14284 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14285 ;;Total ram usage:        6 bytes
 14286 ;; Hardware stack levels used:    1
 14287 ;; Hardware stack levels required when called:   11
 14288 ;; This function calls:
 14289 ;;		Nothing
 14290 ;; This function is called by:
 14291 ;;		_Term_MainSm
 14292 ;; This function uses a non-reentrant model
 14293 ;;
 14294                           
 14295                           	psect	text57
 14296  005240                     __ptext57:
 14297                           	opt stack 0
 14298  005240                     _strcat:
 14299                           	opt stack 15
 14300                           
 14301                           ; BSR set to: 0
 14302                           ;incstack = 0
 14303  005240  C07D  F081         	movff	strcat@to,strcat@cp
 14304  005244  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14305  005248  D003               	goto	l3289
 14306  00524A  0100               	movlb	0	; () banked
 14307  00524C  4B81               	infsnz	strcat@cp& (0+255),f,b
 14308  00524E  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14309  005250                     l3289:
 14310                           
 14311                           ; BSR set to: 0
 14312  005250  C081  FFD9         	movff	strcat@cp,fsr2l
 14313  005254  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14314  005258  50DF               	movf	indf2,w,c
 14315  00525A  B4D8               	btfsc	status,2,c
 14316  00525C  D006               	goto	l3292
 14317  00525E  D7F5               	goto	l3290
 14318  005260  0100               	movlb	0	; () banked
 14319  005262  4B81               	infsnz	strcat@cp& (0+255),f,b
 14320  005264  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14321  005266  4B7F               	infsnz	strcat@from& (0+255),f,b
 14322  005268  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14323  00526A                     l3292:
 14324                           
 14325                           ; BSR set to: 0
 14326  00526A  C07F  FFF6         	movff	strcat@from,tblptrl
 14327  00526E  C080  FFF7         	movff	strcat@from+1,tblptrh
 14328  005272  6AF8               	clrf	tblptru,c
 14329  005274  C081  FFD9         	movff	strcat@cp,fsr2l
 14330  005278  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14331  00527C  0E0E               	movlw	(high __ramtop+-1)
 14332  00527E  64F7               	cpfsgt	tblptrh,c
 14333  005280  D003               	bra	u13307
 14334  005282  0008               	tblrd		*
 14335  005284  50F5               	movf	tablat,w,c
 14336  005286  D005               	bra	u13300
 14337  005288                     u13307:
 14338  005288  CFF6 FFE9          	movff	tblptrl,fsr0l
 14339  00528C  CFF7 FFEA          	movff	tblptrh,fsr0h
 14340  005290  50EF               	movf	indf0,w,c
 14341  005292                     u13300:
 14342  005292  6EDF               	movwf	indf2,c
 14343  005294  50DF               	movf	indf2,w,c
 14344  005296  B4D8               	btfsc	status,2,c
 14345  005298  0012               	return	
 14346  00529A  D7E2               	goto	l3293
 14347  00529C                     __end_of_strcat:
 14348                           	opt stack 0
 14349                           tosu	equ	0xFFF
 14350                           tosh	equ	0xFFE
 14351                           tosl	equ	0xFFD
 14352                           pclath	equ	0xFFA
 14353                           tblptru	equ	0xFF8
 14354                           tblptrh	equ	0xFF7
 14355                           tblptrl	equ	0xFF6
 14356                           tablat	equ	0xFF5
 14357                           prodh	equ	0xFF4
 14358                           prodl	equ	0xFF3
 14359                           intcon	equ	0xFF2
 14360                           intcon2	equ	0xFF1
 14361                           intcon3	equ	0xFF0
 14362                           indf0	equ	0xFEF
 14363                           postinc0	equ	0xFEE
 14364                           plusw0	equ	0xFEB
 14365                           fsr0h	equ	0xFEA
 14366                           fsr0l	equ	0xFE9
 14367                           wreg	equ	0xFE8
 14368                           indf1	equ	0xFE7
 14369                           postinc1	equ	0xFE6
 14370                           postdec1	equ	0xFE5
 14371                           fsr1h	equ	0xFE2
 14372                           fsr1l	equ	0xFE1
 14373                           indf2	equ	0xFDF
 14374                           postinc2	equ	0xFDE
 14375                           postdec2	equ	0xFDD
 14376                           plusw2	equ	0xFDB
 14377                           fsr2h	equ	0xFDA
 14378                           fsr2l	equ	0xFD9
 14379                           status	equ	0xFD8
 14380                           
 14381 ;; *************** function _sprintf *****************
 14382 ;; Defined at:
 14383 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14384 ;; Parameters:    Size  Location     Type
 14385 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14386 ;;		 -> Term_MainSm@Data(50), 
 14387 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14388 ;;		 -> STR_27(17), 
 14389 ;; Auto vars:     Size  Location     Type
 14390 ;;  tmpval          4    0        struct .
 14391 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14392 ;;		 -> STR_31(7), STR_28(12), 
 14393 ;;  ap              2   36[BANK0 ] PTR void [1]
 14394 ;;		 -> ?_sprintf(2), 
 14395 ;;  len             2    0        unsigned int 
 14396 ;;  val             2    0        unsigned int 
 14397 ;;  c               1   38[BANK0 ] char 
 14398 ;;  flag            1   35[BANK0 ] unsigned char 
 14399 ;;  prec            1    0        char 
 14400 ;; Return value:  Size  Location     Type
 14401 ;;                  2   29[BANK0 ] int 
 14402 ;; Registers used:
 14403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14404 ;; Tracked objects:
 14405 ;;		On entry : 0/0
 14406 ;;		On exit  : 0/0
 14407 ;;		Unchanged: 0/0
 14408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14409 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14410 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14412 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14413 ;;Total ram usage:       12 bytes
 14414 ;; Hardware stack levels used:    1
 14415 ;; Hardware stack levels required when called:   11
 14416 ;; This function calls:
 14417 ;;		Nothing
 14418 ;; This function is called by:
 14419 ;;		_Term_MainSm
 14420 ;; This function uses a non-reentrant model
 14421 ;;
 14422                           
 14423                           	psect	text58
 14424  00384E                     __ptext58:
 14425                           	opt stack 0
 14426  00384E                     _sprintf:
 14427                           	opt stack 15
 14428                           
 14429                           ;doprnt.c: 494: va_list ap;
 14430                           ;doprnt.c: 499: signed char c;
 14431                           ;doprnt.c: 506: signed char prec;
 14432                           ;doprnt.c: 508: unsigned char flag;
 14433                           ;doprnt.c: 523: union {
 14434                           ;doprnt.c: 524: unsigned long vd;
 14435                           ;doprnt.c: 525: double integ;
 14436                           ;doprnt.c: 526: } tmpval;
 14437                           ;doprnt.c: 528: unsigned int val;
 14438                           ;doprnt.c: 529: unsigned len;
 14439                           ;doprnt.c: 530: const char * cp;
 14440                           ;doprnt.c: 533: *ap = __va_start();
 14441                           
 14442                           ;incstack = 0
 14443  00384E  0E81               	movlw	low (?_sprintf+4)
 14444  003850  0100               	movlb	0	; () banked
 14445  003852  6F84               	movwf	sprintf@ap& (0+255),b
 14446  003854  0E00               	movlw	high (?_sprintf+4)
 14447  003856  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14448                           
 14449                           ;doprnt.c: 536: while(c = *f++) {
 14450  003858  D04E               	goto	l2693
 14451  00385A                     
 14452                           ; BSR set to: 0
 14453                           ;doprnt.c: 538: if(c != '%')
 14454                           
 14455                           ; BSR set to: 0
 14456  00385A  0E25               	movlw	37
 14457  00385C  1986               	xorwf	sprintf@c& (0+255),w,b
 14458  00385E  B4D8               	btfsc	status,2,c
 14459  003860  D009               	goto	l2683
 14460                           
 14461                           ; BSR set to: 0
 14462                           ;doprnt.c: 540: {
 14463                           ;doprnt.c: 541: ((*sp++ = (c)));
 14464  003862  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14465  003866  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14466  00386A  C086  FFDF         	movff	sprintf@c,indf2
 14467                           
 14468                           ; BSR set to: 0
 14469  00386E  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14470  003870  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14471                           
 14472                           ;doprnt.c: 542: continue;
 14473  003872  D041               	goto	l2693
 14474  003874                     l2683:
 14475                           
 14476                           ; BSR set to: 0
 14477                           ;doprnt.c: 543: }
 14478                           ;doprnt.c: 548: flag = 0;
 14479                           
 14480                           ; BSR set to: 0
 14481  003874  0E00               	movlw	0
 14482  003876  6F83               	movwf	sprintf@flag& (0+255),b
 14483                           
 14484                           ;doprnt.c: 635: switch(c = *f++) {
 14485  003878  D02E               	goto	l2684
 14486  00387A                     
 14487                           ; BSR set to: 0
 14488                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14489                           
 14490                           ; BSR set to: 0
 14491  00387A  C084  FFD9         	movff	sprintf@ap,fsr2l
 14492  00387E  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14493  003882  CFDE F087          	movff	postinc2,sprintf@cp
 14494  003886  CFDD F088          	movff	postdec2,sprintf@cp+1
 14495                           
 14496                           ; BSR set to: 0
 14497  00388A  0E02               	movlw	2
 14498  00388C  2784               	addwf	sprintf@ap& (0+255),f,b
 14499  00388E  0E00               	movlw	0
 14500  003890  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14501                           
 14502                           ; BSR set to: 0
 14503                           ;doprnt.c: 740: if(!cp)
 14504  003892  5187               	movf	sprintf@cp& (0+255),w,b
 14505  003894  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14506  003896  A4D8               	btfss	status,2,c
 14507  003898  D014               	goto	l2689
 14508                           
 14509                           ; BSR set to: 0
 14510                           ;doprnt.c: 741: cp = "(null)";
 14511  00389A  0ED7               	movlw	low STR_31
 14512  00389C  6F87               	movwf	sprintf@cp& (0+255),b
 14513  00389E  0EFF               	movlw	high STR_31
 14514  0038A0  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14515                           
 14516                           ; BSR set to: 0
 14517                           ;doprnt.c: 777: while(*cp)
 14518  0038A2  D00F               	goto	l2689
 14519  0038A4                     
 14520                           ; BSR set to: 0
 14521                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14522                           
 14523                           ; BSR set to: 0
 14524  0038A4  C087  FFF6         	movff	sprintf@cp,tblptrl
 14525  0038A8  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14526  0038AC                     	if	0	;tblptru may be non-zero
 14527  0038AC                     	endif
 14528  0038AC                     	if	0	;tblptru may be non-zero
 14529  0038AC                     	endif
 14530  0038AC  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14531  0038B0  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14532  0038B4  0008               	tblrd		*
 14533  0038B6  CFF5 FFDF          	movff	tablat,indf2
 14534                           
 14535                           ; BSR set to: 0
 14536  0038BA  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14537  0038BC  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14538                           
 14539                           ; BSR set to: 0
 14540  0038BE  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14541  0038C0  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14542  0038C2                     l2689:
 14543                           
 14544                           ; BSR set to: 0
 14545                           
 14546                           ; BSR set to: 0
 14547  0038C2  C087  FFF6         	movff	sprintf@cp,tblptrl
 14548  0038C6  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14549  0038CA                     	if	0	;tblptru may be non-zero
 14550  0038CA                     	endif
 14551  0038CA                     	if	0	;tblptru may be non-zero
 14552  0038CA                     	endif
 14553  0038CA  0008               	tblrd		*
 14554  0038CC  50F5               	movf	tablat,w,c
 14555  0038CE  0900               	iorlw	0
 14556  0038D0  B4D8               	btfsc	status,2,c
 14557  0038D2  D011               	goto	l2693
 14558  0038D4  D7E7               	goto	l2690
 14559  0038D6                     l2684:
 14560                           
 14561                           ; BSR set to: 0
 14562                           
 14563                           ; BSR set to: 0
 14564  0038D6  C07F  FFF6         	movff	sprintf@f,tblptrl
 14565  0038DA  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14566  0038DE  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14567  0038E0  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14568  0038E2                     	if	0	;tblptru may be non-zero
 14569  0038E2                     	endif
 14570  0038E2                     	if	0	;tblptru may be non-zero
 14571  0038E2                     	endif
 14572  0038E2  0008               	tblrd		*
 14573  0038E4  CFF5 F086          	movff	tablat,sprintf@c
 14574  0038E8  5186               	movf	sprintf@c& (0+255),w,b
 14575                           
 14576                           ; Switch size 1, requested type "space"
 14577                           ; Number of cases is 2, Range of values is 0 to 115
 14578                           ; switch strategies available:
 14579                           ; Name         Instructions Cycles
 14580                           ; simple_byte            7     4 (average)
 14581                           ;	Chosen strategy is simple_byte
 14582  0038EA  0A00               	xorlw	0	; case 0
 14583  0038EC  B4D8               	btfsc	status,2,c
 14584  0038EE  D00F               	goto	u13360
 14585  0038F0  0A73               	xorlw	115	; case 115
 14586  0038F2  B4D8               	btfsc	status,2,c
 14587  0038F4  D7C2               	goto	l2687
 14588  0038F6                     l2693:
 14589                           
 14590                           ; BSR set to: 0
 14591                           
 14592                           ; BSR set to: 0
 14593                           
 14594                           ;doprnt.c: 1422: {
 14595                           
 14596                           ; BSR set to: 0
 14597  0038F6  C07F  FFF6         	movff	sprintf@f,tblptrl
 14598  0038FA  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14599  0038FE  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14600  003900  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14601  003902                     	if	0	;tblptru may be non-zero
 14602  003902                     	endif
 14603  003902                     	if	0	;tblptru may be non-zero
 14604  003902                     	endif
 14605  003902  0008               	tblrd		*
 14606  003904  CFF5 F086          	movff	tablat,sprintf@c
 14607  003908  5186               	movf	sprintf@c& (0+255),w,b
 14608  00390A  A4D8               	btfss	status,2,c
 14609  00390C  D7A6               	goto	l2682
 14610  00390E                     u13360:
 14611                           
 14612                           ; BSR set to: 0
 14613                           ;doprnt.c: 1538: *sp = 0;
 14614                           
 14615                           ; BSR set to: 0
 14616                           
 14617                           ;doprnt.c: 1469: }
 14618                           ;doprnt.c: 1533: }
 14619                           ;doprnt.c: 1535: alldone:
 14620                           
 14621                           ; BSR set to: 0
 14622  00390E  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14623  003912  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14624  003916  0E00               	movlw	0
 14625  003918  6EDF               	movwf	indf2,c
 14626  00391A  0012               	return	
 14627  00391C                     __end_of_sprintf:
 14628                           	opt stack 0
 14629                           tosu	equ	0xFFF
 14630                           tosh	equ	0xFFE
 14631                           tosl	equ	0xFFD
 14632                           pclath	equ	0xFFA
 14633                           tblptru	equ	0xFF8
 14634                           tblptrh	equ	0xFF7
 14635                           tblptrl	equ	0xFF6
 14636                           tablat	equ	0xFF5
 14637                           prodh	equ	0xFF4
 14638                           prodl	equ	0xFF3
 14639                           intcon	equ	0xFF2
 14640                           intcon2	equ	0xFF1
 14641                           intcon3	equ	0xFF0
 14642                           indf0	equ	0xFEF
 14643                           postinc0	equ	0xFEE
 14644                           plusw0	equ	0xFEB
 14645                           fsr0h	equ	0xFEA
 14646                           fsr0l	equ	0xFE9
 14647                           wreg	equ	0xFE8
 14648                           indf1	equ	0xFE7
 14649                           postinc1	equ	0xFE6
 14650                           postdec1	equ	0xFE5
 14651                           fsr1h	equ	0xFE2
 14652                           fsr1l	equ	0xFE1
 14653                           indf2	equ	0xFDF
 14654                           postinc2	equ	0xFDE
 14655                           postdec2	equ	0xFDD
 14656                           plusw2	equ	0xFDB
 14657                           fsr2h	equ	0xFDA
 14658                           fsr2l	equ	0xFD9
 14659                           status	equ	0xFD8
 14660                           
 14661 ;; *************** function _memset *****************
 14662 ;; Defined at:
 14663 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14664 ;; Parameters:    Size  Location     Type
 14665 ;;  p1              2   29[BANK0 ] PTR void 
 14666 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14667 ;;  c               2   31[BANK0 ] int 
 14668 ;;  n               2   33[BANK0 ] unsigned int 
 14669 ;; Auto vars:     Size  Location     Type
 14670 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14671 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14672 ;; Return value:  Size  Location     Type
 14673 ;;                  2   29[BANK0 ] PTR void 
 14674 ;; Registers used:
 14675 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14676 ;; Tracked objects:
 14677 ;;		On entry : 0/0
 14678 ;;		On exit  : 0/0
 14679 ;;		Unchanged: 0/0
 14680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14681 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14682 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14684 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14685 ;;Total ram usage:        8 bytes
 14686 ;; Hardware stack levels used:    1
 14687 ;; Hardware stack levels required when called:   11
 14688 ;; This function calls:
 14689 ;;		Nothing
 14690 ;; This function is called by:
 14691 ;;		_USBDeviceInit
 14692 ;;		_USBStdSetCfgHandler
 14693 ;;		_Term_MainSm
 14694 ;; This function uses a non-reentrant model
 14695 ;;
 14696                           
 14697                           	psect	text59
 14698  005DD4                     __ptext59:
 14699                           	opt stack 0
 14700  005DD4                     _memset:
 14701                           	opt stack 14
 14702                           
 14703                           ; BSR set to: 0
 14704                           ;incstack = 0
 14705  005DD4  C07D  F083         	movff	memset@p1,memset@p
 14706  005DD8  C07E  F084         	movff	memset@p1+1,memset@p+1
 14707  005DDC  D009               	goto	l3163
 14708  005DDE                     l12014:
 14709  005DDE  C083  FFD9         	movff	memset@p,fsr2l
 14710  005DE2  C084  FFDA         	movff	memset@p+1,fsr2h
 14711  005DE6  C07F  FFDF         	movff	memset@c,indf2
 14712  005DEA  0100               	movlb	0	; () banked
 14713  005DEC  4B83               	infsnz	memset@p& (0+255),f,b
 14714  005DEE  2B84               	incf	(memset@p+1)& (0+255),f,b
 14715  005DF0                     l3163:
 14716                           
 14717                           ; BSR set to: 0
 14718  005DF0  0100               	movlb	0	; () banked
 14719  005DF2  0781               	decf	memset@n& (0+255),f,b
 14720  005DF4  A0D8               	btfss	status,0,c
 14721  005DF6  0782               	decf	(memset@n+1)& (0+255),f,b
 14722  005DF8  2981               	incf	memset@n& (0+255),w,b
 14723  005DFA  E1F1               	bnz	l12014
 14724  005DFC  2982               	incf	(memset@n+1)& (0+255),w,b
 14725  005DFE  B4D8               	btfsc	status,2,c
 14726  005E00  0012               	return	
 14727  005E02  D7ED               	goto	l3164
 14728  005E04                     __end_of_memset:
 14729                           	opt stack 0
 14730                           tosu	equ	0xFFF
 14731                           tosh	equ	0xFFE
 14732                           tosl	equ	0xFFD
 14733                           pclath	equ	0xFFA
 14734                           tblptru	equ	0xFF8
 14735                           tblptrh	equ	0xFF7
 14736                           tblptrl	equ	0xFF6
 14737                           tablat	equ	0xFF5
 14738                           prodh	equ	0xFF4
 14739                           prodl	equ	0xFF3
 14740                           intcon	equ	0xFF2
 14741                           intcon2	equ	0xFF1
 14742                           intcon3	equ	0xFF0
 14743                           indf0	equ	0xFEF
 14744                           postinc0	equ	0xFEE
 14745                           plusw0	equ	0xFEB
 14746                           fsr0h	equ	0xFEA
 14747                           fsr0l	equ	0xFE9
 14748                           wreg	equ	0xFE8
 14749                           indf1	equ	0xFE7
 14750                           postinc1	equ	0xFE6
 14751                           postdec1	equ	0xFE5
 14752                           fsr1h	equ	0xFE2
 14753                           fsr1l	equ	0xFE1
 14754                           indf2	equ	0xFDF
 14755                           postinc2	equ	0xFDE
 14756                           postdec2	equ	0xFDD
 14757                           plusw2	equ	0xFDB
 14758                           fsr2h	equ	0xFDA
 14759                           fsr2l	equ	0xFD9
 14760                           status	equ	0xFD8
 14761                           
 14762 ;; *************** function _Terminal *****************
 14763 ;; Defined at:
 14764 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14765 ;; Parameters:    Size  Location     Type
 14766 ;;		None
 14767 ;; Auto vars:     Size  Location     Type
 14768 ;;  i               1   68[BANK0 ] unsigned char 
 14769 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14770 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14771 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14772 ;;  Index           1   70[BANK0 ] unsigned char 
 14773 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14774 ;; Return value:  Size  Location     Type
 14775 ;;                  1    wreg      void 
 14776 ;; Registers used:
 14777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14778 ;; Tracked objects:
 14779 ;;		On entry : 0/0
 14780 ;;		On exit  : 0/0
 14781 ;;		Unchanged: 0/0
 14782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14784 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14785 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14786 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14787 ;;Total ram usage:      455 bytes
 14788 ;; Hardware stack levels used:    1
 14789 ;; Hardware stack levels required when called:   15
 14790 ;; This function calls:
 14791 ;;		_I2cSlv_I2cReadMsgSts
 14792 ;;		_I2cSlv_ReceiveI2cMsg
 14793 ;;		_I2cSlv_SendI2cMsg
 14794 ;;		_OsTmr_Wait
 14795 ;;		_atoi
 14796 ;;		_getsUSBUSART
 14797 ;;		_itoa
 14798 ;;		_putUSBUSART
 14799 ;;		_strcpy
 14800 ;;		_strtol
 14801 ;;		_xtoi
 14802 ;; This function is called by:
 14803 ;;		_Term_MainSm
 14804 ;; This function uses a non-reentrant model
 14805 ;;
 14806                           
 14807                           	psect	text60
 14808  0000D0                     __ptext60:
 14809                           	opt stack 0
 14810  0000D0                     _Terminal:
 14811                           	opt stack 11
 14812                           
 14813                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14814                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14815                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14816                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14817                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14818                           ;term.c: 435: UINT8 Index;
 14819                           ;term.c: 436: static UINT8 Len[4];
 14820                           ;term.c: 437: static UINT8 PackageLen;
 14821                           ;term.c: 438: static UINT8 Addr[4];
 14822                           ;term.c: 439: static UINT8 SlaveAddr;
 14823                           ;term.c: 440: static PayloadType Payload[20u];
 14824                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14825                           
 14826                           ; BSR set to: 0
 14827                           ;incstack = 0
 14828  0000D0  0E00               	movlw	0
 14829  0000D2  0100               	movlb	0	; () banked
 14830  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14831                           
 14832                           ; BSR set to: 0
 14833                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14834                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14835                           ;term.c: 445: static SwTimerType SwTimer;
 14836                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14837  0000D6  0E1F               	movlw	31
 14838  0000D8  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 14839  0000DA  0012               	return	
 14840                           
 14841                           ; BSR set to: 0
 14842  0000DC  B265               	btfsc	3941,1,c	;volatile
 14843  0000DE  0012               	return	
 14844  0000E0  D278               	goto	l2367
 14845  0000E2                     
 14846                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14847                           
 14848                           ; BSR set to: 0
 14849  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14850  0000E4  0100               	movlb	0	; () banked
 14851  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14852  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14853  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14854  0000EC  0EC8               	movlw	200
 14855  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14856  0000F0  EC51  F024         	call	_getsUSBUSART	;wreg free
 14857  0000F4  0100               	movlb	0	; () banked
 14858  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14859                           
 14860                           ; BSR set to: 0
 14861                           ;term.c: 458: if (ReceivedBytes > 0)
 14862  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14863  0000FA  B4D8               	btfsc	status,2,c
 14864  0000FC  0012               	return	
 14865                           
 14866                           ; BSR set to: 0
 14867                           ;term.c: 459: {
 14868                           ;term.c: 461: if (EchoOption == 1u)
 14869  0000FE  0102               	movlb	2	; () banked
 14870  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 14871  000102  A4D8               	btfss	status,2,c
 14872  000104  D026               	goto	l2371
 14873                           
 14874                           ; BSR set to: 2
 14875                           ;term.c: 462: {
 14876                           ;term.c: 464: if((cdc_trf_state == 0))
 14877  000106  0100               	movlb	0	; () banked
 14878  000108  51C6               	movf	_cdc_trf_state& (0+255),w,b
 14879  00010A  A4D8               	btfss	status,2,c
 14880  00010C  D022               	goto	l2371
 14881                           
 14882                           ; BSR set to: 0
 14883                           ;term.c: 465: {
 14884                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 14885  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14886  000110  0D01               	mullw	1
 14887  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 14888  000114  24F3               	addwf	prodl,w,c
 14889  000116  6ED9               	movwf	fsr2l,c
 14890  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 14891  00011A  20F4               	addwfc	prodh,w,c
 14892  00011C  6EDA               	movwf	fsr2h,c
 14893  00011E  0E0D               	movlw	13
 14894  000120  6EDF               	movwf	indf2,c
 14895                           
 14896                           ; BSR set to: 0
 14897                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 14898  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14899  000124  6FA2               	movwf	??_Terminal& (0+255),b
 14900  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 14901  000128  0E01               	movlw	1
 14902  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 14903  00012C  0E00               	movlw	0
 14904  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 14905  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 14906  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 14907  000134  6ED9               	movwf	fsr2l,c
 14908  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 14909  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 14910  00013A  6EDA               	movwf	fsr2h,c
 14911  00013C  0E0A               	movlw	10
 14912  00013E  6EDF               	movwf	indf2,c
 14913                           
 14914                           ; BSR set to: 0
 14915                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 14916  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 14917  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 14918  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 14919  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14920  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14921  00014A  0F02               	addlw	2
 14922  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 14923  00014E  EC42  F030         	call	_putUSBUSART	;wreg free
 14924  000152                     l2371:
 14925                           
 14926                           ;term.c: 469: }
 14927                           ;term.c: 470: }
 14928                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 14929                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 14930                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14931  000152  0E53               	movlw	83
 14932  000154  010A               	movlb	10	; () banked
 14933  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14934  000158  A4D8               	btfss	status,2,c
 14935  00015A  D043               	goto	l2372
 14936                           
 14937                           ; BSR set to: 10
 14938  00015C  0E4F               	movlw	79
 14939  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14940  000160  A4D8               	btfss	status,2,c
 14941  000162  D03F               	goto	l2372
 14942                           
 14943                           ; BSR set to: 10
 14944  000164  0E3A               	movlw	58
 14945  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14946  000168  A4D8               	btfss	status,2,c
 14947  00016A  D03B               	goto	l2372
 14948                           
 14949                           ; BSR set to: 10
 14950                           ;term.c: 476: {
 14951                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14952  00016C  0E47               	movlw	71
 14953  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14954  000170  A4D8               	btfss	status,2,c
 14955  000172  0012               	return	
 14956                           
 14957                           ; BSR set to: 10
 14958  000174  0E3A               	movlw	58
 14959  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14960  000178  A4D8               	btfss	status,2,c
 14961  00017A  0012               	return	
 14962                           
 14963                           ; BSR set to: 10
 14964                           ;term.c: 479: {
 14965                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 14966  00017C  0E44               	movlw	68
 14967  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14968  000180  A4D8               	btfss	status,2,c
 14969  000182  D015               	goto	l2374
 14970                           
 14971                           ; BSR set to: 10
 14972  000184  0E46               	movlw	70
 14973  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14974  000188  A4D8               	btfss	status,2,c
 14975  00018A  D011               	goto	l2374
 14976                           
 14977                           ; BSR set to: 10
 14978                           ;term.c: 482: {
 14979                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 14980  00018C  0E41               	movlw	65
 14981  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14982  000190  A4D8               	btfss	status,2,c
 14983  000192  D004               	goto	l2375
 14984                           
 14985                           ; BSR set to: 10
 14986                           ;term.c: 484: {
 14987                           ;term.c: 485: FormatOption = 1u;
 14988  000194  0E01               	movlw	1
 14989  000196  0102               	movlb	2	; () banked
 14990  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14991                           
 14992                           ;term.c: 486: }
 14993  00019A  0012               	return	
 14994  00019C                     l2375:
 14995                           
 14996                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 14997                           
 14998                           ; BSR set to: 2
 14999  00019C  0E42               	movlw	66
 15000  00019E  010A               	movlb	10	; () banked
 15001  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15002  0001A2  A4D8               	btfss	status,2,c
 15003  0001A4  0012               	return	
 15004                           
 15005                           ; BSR set to: 10
 15006                           ;term.c: 488: {
 15007                           ;term.c: 489: FormatOption = 0u;
 15008  0001A6  0E00               	movlw	0
 15009  0001A8  0102               	movlb	2	; () banked
 15010  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15011                           
 15012                           ; BSR set to: 2
 15013                           ;term.c: 490: }
 15014                           ;term.c: 491: }
 15015                           
 15016                           ; BSR set to: 2
 15017  0001AC  0012               	return	
 15018  0001AE                     l2374:
 15019                           
 15020                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15021                           
 15022                           ; BSR set to: 2
 15023  0001AE  0E45               	movlw	69
 15024  0001B0  010A               	movlb	10	; () banked
 15025  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15026  0001B4  A4D8               	btfss	status,2,c
 15027  0001B6  0012               	return	
 15028                           
 15029                           ; BSR set to: 10
 15030  0001B8  0E4D               	movlw	77
 15031  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15032  0001BC  A4D8               	btfss	status,2,c
 15033  0001BE  0012               	return	
 15034                           
 15035                           ; BSR set to: 10
 15036                           ;term.c: 494: {
 15037                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15038  0001C0  0E31               	movlw	49
 15039  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15040  0001C4  A4D8               	btfss	status,2,c
 15041  0001C6  D004               	goto	l2380
 15042                           
 15043                           ; BSR set to: 10
 15044                           ;term.c: 496: {
 15045                           ;term.c: 497: EchoOption = 1u;
 15046  0001C8  0E01               	movlw	1
 15047  0001CA  0102               	movlb	2	; () banked
 15048  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15049                           
 15050                           ;term.c: 498: }
 15051  0001CE  0012               	return	
 15052  0001D0                     l2380:
 15053                           
 15054                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15055                           
 15056                           ; BSR set to: 2
 15057  0001D0  0E30               	movlw	48
 15058  0001D2  010A               	movlb	10	; () banked
 15059  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15060  0001D6  A4D8               	btfss	status,2,c
 15061  0001D8  0012               	return	
 15062                           
 15063                           ; BSR set to: 10
 15064                           ;term.c: 500: {
 15065                           ;term.c: 501: EchoOption = 0u;
 15066  0001DA  0E00               	movlw	0
 15067  0001DC  0102               	movlb	2	; () banked
 15068  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15069                           
 15070                           ; BSR set to: 2
 15071                           ;term.c: 507: }
 15072                           ;term.c: 508: }
 15073                           ;term.c: 509: }
 15074                           
 15075                           ; BSR set to: 2
 15076                           
 15077                           ; BSR set to: 2
 15078                           
 15079                           ;term.c: 504: else
 15080                           ;term.c: 505: {
 15081                           
 15082                           ; BSR set to: 2
 15083                           
 15084                           ; BSR set to: 2
 15085                           ;term.c: 502: }
 15086                           ;term.c: 503: }
 15087                           
 15088                           ; BSR set to: 2
 15089  0001E0  0012               	return	
 15090  0001E2                     l2372:
 15091                           
 15092                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15093                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15094                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15095                           
 15096                           ; BSR set to: 2
 15097  0001E2  0E53               	movlw	83
 15098  0001E4  010A               	movlb	10	; () banked
 15099  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15100  0001E8  A4D8               	btfss	status,2,c
 15101  0001EA  D0D3               	goto	l2385
 15102                           
 15103                           ; BSR set to: 10
 15104  0001EC  0E42               	movlw	66
 15105  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15106  0001F0  A4D8               	btfss	status,2,c
 15107  0001F2  D0CF               	goto	l2385
 15108                           
 15109                           ; BSR set to: 10
 15110  0001F4  0E3A               	movlw	58
 15111  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15112  0001F8  A4D8               	btfss	status,2,c
 15113  0001FA  D0CB               	goto	l2385
 15114                           
 15115                           ; BSR set to: 10
 15116                           ;term.c: 513: {
 15117                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15118  0001FC  0E57               	movlw	87
 15119  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15120  000200  A4D8               	btfss	status,2,c
 15121  000202  D091               	goto	l2386
 15122                           
 15123                           ; BSR set to: 10
 15124  000204  0E3A               	movlw	58
 15125  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15126  000208  A4D8               	btfss	status,2,c
 15127  00020A  D08D               	goto	l2386
 15128                           
 15129                           ; BSR set to: 10
 15130                           ;term.c: 515: {
 15131                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15132  00020C  CA05  F3AF         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15133                           
 15134                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15135  000210  CA06  F3B0         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15136                           
 15137                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15138  000214  CA08  F3AB         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15139                           
 15140                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15141  000218  CA09  F3AC         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15142                           
 15143                           ; BSR set to: 10
 15144                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15145  00021C  0EAF               	movlw	low Terminal@Len
 15146  00021E  0100               	movlb	0	; () banked
 15147  000220  6F83               	movwf	atoi@s& (0+255),b
 15148  000222  0E03               	movlw	high Terminal@Len
 15149  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15150  000226  EC52  F01B         	call	_atoi	;wreg free
 15151  00022A  0100               	movlb	0	; () banked
 15152  00022C  5183               	movf	?_atoi& (0+255),w,b
 15153  00022E  0102               	movlb	2	; () banked
 15154  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15155                           
 15156                           ; BSR set to: 2
 15157                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15158  000232  0EAB               	movlw	low Terminal@Addr
 15159  000234  0100               	movlb	0	; () banked
 15160  000236  6F83               	movwf	xtoi@s& (0+255),b
 15161  000238  0E03               	movlw	high Terminal@Addr
 15162  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15163  00023C  EC01  F01A         	call	_xtoi	;wreg free
 15164  000240  0100               	movlb	0	; () banked
 15165  000242  5183               	movf	?_xtoi& (0+255),w,b
 15166  000244  0102               	movlb	2	; () banked
 15167  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15168                           
 15169                           ; BSR set to: 2
 15170                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15171  000248  0E00               	movlw	0
 15172  00024A  0100               	movlb	0	; () banked
 15173  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15174  00024E  D032               	goto	l2387
 15175  000250                     
 15176                           ;term.c: 527: {
 15177                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15178                           
 15179                           ; BSR set to: 0
 15180  000250  0100               	movlb	0	; () banked
 15181  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15182  000254  0D02               	mullw	2
 15183  000256  0E0B               	movlw	11
 15184  000258  26F3               	addwf	prodl,f,c
 15185  00025A  0E00               	movlw	0
 15186  00025C  22F4               	addwfc	prodh,f,c
 15187  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15188  000260  24F3               	addwf	prodl,w,c
 15189  000262  6ED9               	movwf	fsr2l,c
 15190  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15191  000266  20F4               	addwfc	prodh,w,c
 15192  000268  6EDA               	movwf	fsr2h,c
 15193  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15194  00026C  0D04               	mullw	4
 15195  00026E  0E66               	movlw	low Terminal@Payload
 15196  000270  24F3               	addwf	prodl,w,c
 15197  000272  6EE1               	movwf	fsr1l,c
 15198  000274  0E07               	movlw	high Terminal@Payload
 15199  000276  20F4               	addwfc	prodh,w,c
 15200  000278  6EE2               	movwf	fsr1h,c
 15201  00027A  CFDF FFE7          	movff	indf2,indf1
 15202                           
 15203                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15204  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15205  000280  0D02               	mullw	2
 15206  000282  0E0C               	movlw	12
 15207  000284  26F3               	addwf	prodl,f,c
 15208  000286  0E00               	movlw	0
 15209  000288  22F4               	addwfc	prodh,f,c
 15210  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15211  00028C  24F3               	addwf	prodl,w,c
 15212  00028E  6ED9               	movwf	fsr2l,c
 15213  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15214  000292  20F4               	addwfc	prodh,w,c
 15215  000294  6EDA               	movwf	fsr2h,c
 15216  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15217  000298  0D04               	mullw	4
 15218  00029A  0E01               	movlw	1
 15219  00029C  26F3               	addwf	prodl,f,c
 15220  00029E  0E00               	movlw	0
 15221  0002A0  22F4               	addwfc	prodh,f,c
 15222  0002A2  0E66               	movlw	low Terminal@Payload
 15223  0002A4  24F3               	addwf	prodl,w,c
 15224  0002A6  6EE1               	movwf	fsr1l,c
 15225  0002A8  0E07               	movlw	high Terminal@Payload
 15226  0002AA  20F4               	addwfc	prodh,w,c
 15227  0002AC  6EE2               	movwf	fsr1h,c
 15228  0002AE  CFDF FFE7          	movff	indf2,indf1
 15229                           
 15230                           ; BSR set to: 0
 15231  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15232  0002B4                     l2387:
 15233                           
 15234                           ; BSR set to: 0
 15235                           
 15236                           ; BSR set to: 0
 15237  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15238  0002B6  0102               	movlb	2	; () banked
 15239  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15240  0002BA  B0D8               	btfsc	status,0,c
 15241  0002BC  D7C9               	goto	l2388
 15242                           
 15243                           ; BSR set to: 2
 15244                           ;term.c: 530: }
 15245                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15246                           
 15247                           ; BSR set to: 2
 15248  0002BE  0E00               	movlw	0
 15249  0002C0  0100               	movlb	0	; () banked
 15250  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15251  0002C4  D01F               	goto	l2390
 15252  0002C6                     
 15253                           ;term.c: 533: {
 15254                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15255                           
 15256                           ; BSR set to: 0
 15257  0002C6  0100               	movlb	0	; () banked
 15258  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15259  0002CA  0D04               	mullw	4
 15260  0002CC  0E66               	movlw	low Terminal@Payload
 15261  0002CE  24F3               	addwf	prodl,w,c
 15262  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15263  0002D2  0E07               	movlw	high Terminal@Payload
 15264  0002D4  20F4               	addwfc	prodh,w,c
 15265  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15266  0002D8  0E00               	movlw	0
 15267  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15268  0002DC  0E00               	movlw	0
 15269  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15270  0002E0  0E00               	movlw	0
 15271  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15272  0002E4  0E10               	movlw	16
 15273  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15274  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15275  0002EC  0100               	movlb	0	; () banked
 15276  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15277  0002F0  0D01               	mullw	1
 15278  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15279  0002F4  24F3               	addwf	prodl,w,c
 15280  0002F6  6ED9               	movwf	fsr2l,c
 15281  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15282  0002FA  20F4               	addwfc	prodh,w,c
 15283  0002FC  6EDA               	movwf	fsr2h,c
 15284  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15285                           
 15286                           ; BSR set to: 0
 15287  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15288  000304                     l2390:
 15289                           
 15290                           ; BSR set to: 0
 15291                           
 15292                           ; BSR set to: 0
 15293  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15294  000306  0102               	movlb	2	; () banked
 15295  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15296  00030A  B0D8               	btfsc	status,0,c
 15297  00030C  D7DC               	goto	l2391
 15298                           
 15299                           ; BSR set to: 2
 15300                           ;term.c: 539: }
 15301                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15302                           
 15303                           ; BSR set to: 2
 15304  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15305  000310  0100               	movlb	0	; () banked
 15306  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15307  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15308  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15309  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15310  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15311  000320  EC9D  F02D         	call	_I2cSlv_SendI2cMsg	;wreg free
 15312                           
 15313                           ;term.c: 543: }
 15314  000324  0012               	return	
 15315  000326                     l2386:
 15316                           
 15317                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15318  000326  0E52               	movlw	82
 15319  000328  010A               	movlb	10	; () banked
 15320  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15321  00032C  A4D8               	btfss	status,2,c
 15322  00032E  0012               	return	
 15323                           
 15324                           ; BSR set to: 10
 15325  000330  0E3A               	movlw	58
 15326  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15327  000334  A4D8               	btfss	status,2,c
 15328  000336  0012               	return	
 15329                           
 15330                           ; BSR set to: 10
 15331                           ;term.c: 545: {
 15332                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15333  000338  CA05  F3AF         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15334                           
 15335                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15336  00033C  CA06  F3B0         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15337                           
 15338                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15339  000340  CA08  F3AB         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15340                           
 15341                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15342  000344  CA09  F3AC         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15343                           
 15344                           ; BSR set to: 10
 15345                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15346  000348  0EAF               	movlw	low Terminal@Len
 15347  00034A  0100               	movlb	0	; () banked
 15348  00034C  6F83               	movwf	atoi@s& (0+255),b
 15349  00034E  0E03               	movlw	high Terminal@Len
 15350  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15351  000352  EC52  F01B         	call	_atoi	;wreg free
 15352  000356  0100               	movlb	0	; () banked
 15353  000358  5183               	movf	?_atoi& (0+255),w,b
 15354  00035A  0102               	movlb	2	; () banked
 15355  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15356                           
 15357                           ; BSR set to: 2
 15358                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15359  00035E  0EAB               	movlw	low Terminal@Addr
 15360  000360  0100               	movlb	0	; () banked
 15361  000362  6F83               	movwf	xtoi@s& (0+255),b
 15362  000364  0E03               	movlw	high Terminal@Addr
 15363  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15364  000368  EC01  F01A         	call	_xtoi	;wreg free
 15365  00036C  0100               	movlb	0	; () banked
 15366  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15367  000370  0102               	movlb	2	; () banked
 15368  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15369                           
 15370                           ; BSR set to: 2
 15371                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15372  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15373  000376  0100               	movlb	0	; () banked
 15374  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15375  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15376  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15377  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15378  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15379  000386  EC3E  F02D         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15380                           
 15381                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15382  00038A  0E01               	movlw	1
 15383  00038C  0102               	movlb	2	; () banked
 15384  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15385                           
 15386                           ; BSR set to: 2
 15387                           ;term.c: 561: }
 15388                           ;term.c: 562: }
 15389                           
 15390                           ; BSR set to: 2
 15391  000390  0012               	return	
 15392  000392                     l2385:
 15393                           
 15394                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15395                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15396                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15397                           
 15398                           ; BSR set to: 2
 15399  000392  0E54               	movlw	84
 15400  000394  010A               	movlb	10	; () banked
 15401  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15402  000398  A4D8               	btfss	status,2,c
 15403  00039A  0012               	return	
 15404                           
 15405                           ; BSR set to: 10
 15406  00039C  0E45               	movlw	69
 15407  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15408  0003A0  A4D8               	btfss	status,2,c
 15409  0003A2  0012               	return	
 15410                           
 15411                           ; BSR set to: 10
 15412  0003A4  0E4C               	movlw	76
 15413  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15414  0003A8  A4D8               	btfss	status,2,c
 15415  0003AA  0012               	return	
 15416                           
 15417                           ; BSR set to: 10
 15418                           ;term.c: 566: {
 15419                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15420  0003AC  CA03  F3AF         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15421                           
 15422                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15423  0003B0  CA04  F3B0         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15424                           
 15425                           ; BSR set to: 10
 15426                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 15427  0003B4  0EAF               	movlw	low Terminal@Len
 15428  0003B6  0100               	movlb	0	; () banked
 15429  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15430  0003BA  0E03               	movlw	high Terminal@Len
 15431  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15432  0003BE  EC52  F01B         	call	_atoi	;wreg free
 15433  0003C2  C083  F322         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15434  0003C6  C084  F323         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15435                           
 15436                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15437  0003CA  0E00               	movlw	0
 15438  0003CC  0100               	movlb	0	; () banked
 15439  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15440  0003D0  D018               	goto	l2397
 15441  0003D2                     
 15442                           ; BSR set to: 0
 15443                           ;term.c: 573: {
 15444                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15445                           
 15446                           ; BSR set to: 0
 15447  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15448  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15449  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15450  0003D8  0E05               	movlw	5
 15451  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15452  0003DC  0E00               	movlw	0
 15453  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15454  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15455  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15456  0003E4  6ED9               	movwf	fsr2l,c
 15457  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15458  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15459  0003EA  6EDA               	movwf	fsr2h,c
 15460  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15461  0003EE  0D01               	mullw	1
 15462  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 15463  0003F2  24F3               	addwf	prodl,w,c
 15464  0003F4  6EE1               	movwf	fsr1l,c
 15465  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15466  0003F8  20F4               	addwfc	prodh,w,c
 15467  0003FA  6EE2               	movwf	fsr1h,c
 15468  0003FC  CFDF FFE7          	movff	indf2,indf1
 15469                           
 15470                           ; BSR set to: 0
 15471  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15472  000402                     l2397:
 15473                           
 15474                           ; BSR set to: 0
 15475                           
 15476                           ; BSR set to: 0
 15477  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15478  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15479  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15480  000408  0103               	movlb	3	; () banked
 15481  00040A  5122               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15482  00040C  0100               	movlb	0	; () banked
 15483  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15484  000410  0103               	movlb	3	; () banked
 15485  000412  5123               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15486  000414  0100               	movlb	0	; () banked
 15487  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15488  000418  B0D8               	btfsc	status,0,c
 15489  00041A  0012               	return	
 15490  00041C  D7DA               	goto	l2398
 15491  00041E                     
 15492                           ;term.c: 619: if((cdc_trf_state == 0))
 15493                           
 15494                           ; BSR set to: 0
 15495  00041E  0100               	movlb	0	; () banked
 15496  000420  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15497  000422  A4D8               	btfss	status,2,c
 15498  000424  0012               	return	
 15499                           
 15500                           ; BSR set to: 0
 15501                           ;term.c: 620: {
 15502                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15503  000426  0E53               	movlw	83
 15504  000428  0102               	movlb	2	; () banked
 15505  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15506                           
 15507                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15508  00042C  0E42               	movlw	66
 15509  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15510                           
 15511                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15512  000430  0E5B               	movlw	91
 15513  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15514                           
 15515                           ; BSR set to: 2
 15516                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15517  000434  C3AB  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15518                           
 15519                           ; BSR set to: 2
 15520                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15521  000438  C3AC  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15522                           
 15523                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15524  00043C  0E5D               	movlw	93
 15525  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15526                           
 15527                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15528  000440  0E3A               	movlw	58
 15529  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15530                           
 15531                           ; BSR set to: 2
 15532                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15533  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15534  000446  0100               	movlb	0	; () banked
 15535  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15536  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15537  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15538  00044E  0E07               	movlw	7
 15539  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15540  000452  EC42  F030         	call	_putUSBUSART	;wreg free
 15541                           
 15542                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15543  000456  0E02               	movlw	2
 15544  000458  0102               	movlb	2	; () banked
 15545  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15546                           
 15547                           ; BSR set to: 2
 15548                           ;term.c: 632: }
 15549                           ;term.c: 633: break;
 15550  00045C  0012               	return	
 15551  00045E                     
 15552                           ; BSR set to: 2
 15553                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15554                           
 15555                           ; BSR set to: 2
 15556  00045E  EC64  F030         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15557  000462  06E8               	decf	wreg,f,c
 15558  000464  A4D8               	btfss	status,2,c
 15559  000466  D088               	goto	l2406
 15560                           
 15561                           ;term.c: 638: {
 15562                           ;term.c: 640: if (FormatOption == 1u)
 15563  000468  0102               	movlb	2	; () banked
 15564  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15565  00046C  A4D8               	btfss	status,2,c
 15566  00046E  D027               	goto	u13240
 15567                           
 15568                           ; BSR set to: 2
 15569                           ;term.c: 641: {
 15570                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15571  000470  0E00               	movlw	0
 15572  000472  0100               	movlb	0	; () banked
 15573  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15574  000476  D01E               	goto	l2408
 15575  000478                     
 15576                           ;term.c: 644: {
 15577                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15578                           
 15579                           ; BSR set to: 0
 15580  000478  0100               	movlb	0	; () banked
 15581  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15582  00047C  0D04               	mullw	4
 15583  00047E  0E66               	movlw	low Terminal@Payload
 15584  000480  24F3               	addwf	prodl,w,c
 15585  000482  6F93               	movwf	itoa@buf& (0+255),b
 15586  000484  0E07               	movlw	high Terminal@Payload
 15587  000486  20F4               	addwfc	prodh,w,c
 15588  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15589  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15590  00048C  0D01               	mullw	1
 15591  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 15592  000490  24F3               	addwf	prodl,w,c
 15593  000492  6ED9               	movwf	fsr2l,c
 15594  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15595  000496  20F4               	addwfc	prodh,w,c
 15596  000498  6EDA               	movwf	fsr2h,c
 15597  00049A  50DF               	movf	indf2,w,c
 15598  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15599  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15600  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15601  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15602  0004A4  0E00               	movlw	0
 15603  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15604  0004A8  0E0A               	movlw	10
 15605  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15606  0004AC  ECB7  F02C         	call	_itoa	;wreg free
 15607  0004B0  0100               	movlb	0	; () banked
 15608  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15609  0004B4                     l2408:
 15610                           
 15611                           ; BSR set to: 0
 15612                           
 15613                           ; BSR set to: 0
 15614  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15615  0004B6  0102               	movlb	2	; () banked
 15616  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15617  0004BA  B0D8               	btfsc	status,0,c
 15618  0004BC  D7DD               	goto	l2409
 15619  0004BE                     u13240:
 15620                           
 15621                           ; BSR set to: 2
 15622                           ;term.c: 646: }
 15623                           ;term.c: 647: }
 15624                           ;term.c: 650: if((cdc_trf_state == 0))
 15625                           
 15626                           ; BSR set to: 2
 15627                           
 15628                           ; BSR set to: 2
 15629  0004BE  0100               	movlb	0	; () banked
 15630  0004C0  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15631  0004C2  A4D8               	btfss	status,2,c
 15632  0004C4  0012               	return	
 15633                           
 15634                           ; BSR set to: 0
 15635                           ;term.c: 651: {
 15636                           ;term.c: 653: if (FormatOption == 1u)
 15637  0004C6  0102               	movlb	2	; () banked
 15638  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15639  0004CA  A4D8               	btfss	status,2,c
 15640  0004CC  D02B               	goto	l2412
 15641                           
 15642                           ; BSR set to: 2
 15643                           ;term.c: 654: {
 15644                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15645  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15646  0004D0  0D08               	mullw	8
 15647  0004D2  0E03               	movlw	3
 15648  0004D4  26F3               	addwf	prodl,f,c
 15649  0004D6  0E00               	movlw	0
 15650  0004D8  22F4               	addwfc	prodh,f,c
 15651  0004DA  0E66               	movlw	low Terminal@Payload
 15652  0004DC  24F3               	addwf	prodl,w,c
 15653  0004DE  6ED9               	movwf	fsr2l,c
 15654  0004E0  0E07               	movlw	high Terminal@Payload
 15655  0004E2  20F4               	addwfc	prodh,w,c
 15656  0004E4  6EDA               	movwf	fsr2h,c
 15657  0004E6  0E0D               	movlw	13
 15658  0004E8  6EDF               	movwf	indf2,c
 15659                           
 15660                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15661  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15662  0004EC  0D08               	mullw	8
 15663  0004EE  0E02               	movlw	2
 15664  0004F0  26F3               	addwf	prodl,f,c
 15665  0004F2  0E00               	movlw	0
 15666  0004F4  22F4               	addwfc	prodh,f,c
 15667  0004F6  0E66               	movlw	low Terminal@Payload
 15668  0004F8  24F3               	addwf	prodl,w,c
 15669  0004FA  6ED9               	movwf	fsr2l,c
 15670  0004FC  0E07               	movlw	high Terminal@Payload
 15671  0004FE  20F4               	addwfc	prodh,w,c
 15672  000500  6EDA               	movwf	fsr2h,c
 15673  000502  0E0A               	movlw	10
 15674  000504  6EDF               	movwf	indf2,c
 15675                           
 15676                           ; BSR set to: 2
 15677                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15678  000506  0E66               	movlw	low Terminal@Payload
 15679  000508  0100               	movlb	0	; () banked
 15680  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15681  00050C  0E07               	movlw	high Terminal@Payload
 15682  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15683  000510  0102               	movlb	2	; () banked
 15684  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15685  000514  0D02               	mullw	2
 15686  000516  50F3               	movf	prodl,w,c
 15687  000518  0F04               	addlw	4
 15688  00051A  0100               	movlb	0	; () banked
 15689  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15690  00051E  EC42  F030         	call	_putUSBUSART	;wreg free
 15691                           
 15692                           ;term.c: 659: }
 15693  000522  D026               	goto	l2413
 15694  000524                     l2412:
 15695                           
 15696                           ;term.c: 660: else
 15697                           ;term.c: 661: {
 15698                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15699  000524  0102               	movlb	2	; () banked
 15700  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15701  000528  0D01               	mullw	1
 15702  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 15703  00052C  24F3               	addwf	prodl,w,c
 15704  00052E  6ED9               	movwf	fsr2l,c
 15705  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15706  000532  20F4               	addwfc	prodh,w,c
 15707  000534  6EDA               	movwf	fsr2h,c
 15708  000536  0E0D               	movlw	13
 15709  000538  6EDF               	movwf	indf2,c
 15710                           
 15711                           ; BSR set to: 2
 15712                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15713  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15714  00053C  0100               	movlb	0	; () banked
 15715  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15716  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15717  000542  0E01               	movlw	1
 15718  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15719  000546  0E00               	movlw	0
 15720  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15721  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 15722  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15723  00054E  6ED9               	movwf	fsr2l,c
 15724  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15725  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15726  000554  6EDA               	movwf	fsr2h,c
 15727  000556  0E0A               	movlw	10
 15728  000558  6EDF               	movwf	indf2,c
 15729                           
 15730                           ; BSR set to: 0
 15731                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15732  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 15733  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15734  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15735  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15736  000562  0102               	movlb	2	; () banked
 15737  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15738  000566  0F02               	addlw	2
 15739  000568  0100               	movlb	0	; () banked
 15740  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15741  00056C  EC42  F030         	call	_putUSBUSART	;wreg free
 15742  000570                     l2413:
 15743                           
 15744                           ;term.c: 666: }
 15745                           ;term.c: 668: TermState = Term_GetData;
 15746  000570  0E00               	movlw	0
 15747  000572  0102               	movlb	2	; () banked
 15748  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15749                           
 15750                           ; BSR set to: 2
 15751                           ;term.c: 669: }
 15752                           ;term.c: 670: }
 15753  000576  0012               	return	
 15754  000578                     l2406:
 15755                           
 15756                           ;term.c: 671: else
 15757                           ;term.c: 672: {
 15758                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15759                           
 15760                           ; BSR set to: 2
 15761  000578  0EC5               	movlw	low Terminal@SwTimer
 15762  00057A  0100               	movlb	0	; () banked
 15763  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15764  00057E  0E04               	movlw	high Terminal@SwTimer
 15765  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15766  000582  0EB8               	movlw	184
 15767  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15768  000586  0E0B               	movlw	11
 15769  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15770  00058A  0E00               	movlw	0
 15771  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15772  00058E  0E00               	movlw	0
 15773  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15774  000592  ECD2  F026         	call	_OsTmr_Wait	;wreg free
 15775  000596  06E8               	decf	wreg,f,c
 15776  000598  A4D8               	btfss	status,2,c
 15777  00059A  0012               	return	
 15778                           
 15779                           ;term.c: 675: {
 15780                           ;term.c: 677: if((cdc_trf_state == 0))
 15781  00059C  0100               	movlb	0	; () banked
 15782  00059E  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15783  0005A0  A4D8               	btfss	status,2,c
 15784  0005A2  0012               	return	
 15785                           
 15786                           ; BSR set to: 0
 15787                           ;term.c: 678: {
 15788                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15789  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15790  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15791  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15792  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15793  0005AC  0E6C               	movlw	low STR_21
 15794  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15795  0005B0  0EFE               	movlw	high STR_21
 15796  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15797  0005B4  ECB9  F02E         	call	_strcpy	;wreg free
 15798                           
 15799                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15800  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15801  0005BA  0100               	movlb	0	; () banked
 15802  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15803  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15804  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15805  0005C2  0E29               	movlw	41
 15806  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15807  0005C6  EC42  F030         	call	_putUSBUSART	;wreg free
 15808                           
 15809                           ;term.c: 682: TermState = Term_GetData;
 15810  0005CA  0E00               	movlw	0
 15811  0005CC  0102               	movlb	2	; () banked
 15812  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15813                           
 15814                           ; BSR set to: 2
 15815                           ;term.c: 693: }
 15816                           
 15817                           ; BSR set to: 2
 15818                           ;term.c: 692: break;
 15819                           
 15820                           ;term.c: 691: default:
 15821                           
 15822                           ; BSR set to: 2
 15823                           ;term.c: 689: break;
 15824                           
 15825                           ;term.c: 688: case Term_ReadSlvUartData:
 15826                           
 15827                           ; BSR set to: 2
 15828                           ;term.c: 683: }
 15829                           ;term.c: 684: }
 15830                           ;term.c: 685: }
 15831                           ;term.c: 686: break;
 15832                           
 15833                           ; BSR set to: 2
 15834                           
 15835                           ; BSR set to: 2
 15836  0005D0  0012               	return	
 15837  0005D2                     l2367:
 15838                           
 15839                           ; BSR set to: 2
 15840  0005D2  0102               	movlb	2	; () banked
 15841  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15842                           
 15843                           ; Switch size 1, requested type "space"
 15844                           ; Number of cases is 4, Range of values is 0 to 3
 15845                           ; switch strategies available:
 15846                           ; Name         Instructions Cycles
 15847                           ; simple_byte           13     7 (average)
 15848                           ;	Chosen strategy is simple_byte
 15849  0005D6  0A00               	xorlw	0	; case 0
 15850  0005D8  B4D8               	btfsc	status,2,c
 15851  0005DA  D583               	goto	l2368
 15852  0005DC  0A01               	xorlw	1	; case 1
 15853  0005DE  B4D8               	btfsc	status,2,c
 15854  0005E0  D71E               	goto	l2403
 15855  0005E2  0A03               	xorlw	3	; case 2
 15856  0005E4  B4D8               	btfsc	status,2,c
 15857  0005E6  D73B               	goto	l2405
 15858  0005E8  0A01               	xorlw	1	; case 3
 15859  0005EA  0012               	return	
 15860  0005EC                     __end_of_Terminal:
 15861                           	opt stack 0
 15862                           tosu	equ	0xFFF
 15863                           tosh	equ	0xFFE
 15864                           tosl	equ	0xFFD
 15865                           pclath	equ	0xFFA
 15866                           tblptru	equ	0xFF8
 15867                           tblptrh	equ	0xFF7
 15868                           tblptrl	equ	0xFF6
 15869                           tablat	equ	0xFF5
 15870                           prodh	equ	0xFF4
 15871                           prodl	equ	0xFF3
 15872                           intcon	equ	0xFF2
 15873                           intcon2	equ	0xFF1
 15874                           intcon3	equ	0xFF0
 15875                           indf0	equ	0xFEF
 15876                           postinc0	equ	0xFEE
 15877                           plusw0	equ	0xFEB
 15878                           fsr0h	equ	0xFEA
 15879                           fsr0l	equ	0xFE9
 15880                           wreg	equ	0xFE8
 15881                           indf1	equ	0xFE7
 15882                           postinc1	equ	0xFE6
 15883                           postdec1	equ	0xFE5
 15884                           fsr1h	equ	0xFE2
 15885                           fsr1l	equ	0xFE1
 15886                           indf2	equ	0xFDF
 15887                           postinc2	equ	0xFDE
 15888                           postdec2	equ	0xFDD
 15889                           plusw2	equ	0xFDB
 15890                           fsr2h	equ	0xFDA
 15891                           fsr2l	equ	0xFD9
 15892                           status	equ	0xFD8
 15893                           
 15894 ;; *************** function _xtoi *****************
 15895 ;; Defined at:
 15896 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 15897 ;; Parameters:    Size  Location     Type
 15898 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 15899 ;;		 -> Terminal@Addr(4), 
 15900 ;; Auto vars:     Size  Location     Type
 15901 ;;  val             2   40[BANK0 ] unsigned int 
 15902 ;;  c               1   42[BANK0 ] unsigned char 
 15903 ;;  sign            1   39[BANK0 ] unsigned char 
 15904 ;; Return value:  Size  Location     Type
 15905 ;;                  2   35[BANK0 ] unsigned int 
 15906 ;; Registers used:
 15907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15908 ;; Tracked objects:
 15909 ;;		On entry : 0/0
 15910 ;;		On exit  : 0/0
 15911 ;;		Unchanged: 0/0
 15912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15914 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15915 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15916 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15917 ;;Total ram usage:        8 bytes
 15918 ;; Hardware stack levels used:    1
 15919 ;; Hardware stack levels required when called:   13
 15920 ;; This function calls:
 15921 ;;		_isdigit
 15922 ;;		_isspace
 15923 ;;		_isupper
 15924 ;;		_isxdigit
 15925 ;;		_tolower
 15926 ;; This function is called by:
 15927 ;;		_Terminal
 15928 ;; This function uses a non-reentrant model
 15929 ;;
 15930                           
 15931                           	psect	text61
 15932  003402                     __ptext61:
 15933                           	opt stack 0
 15934  003402                     _xtoi:
 15935                           	opt stack 12
 15936                           
 15937                           ;incstack = 0
 15938  003402  0E00               	movlw	0
 15939  003404  0100               	movlb	0	; () banked
 15940  003406  6F87               	movwf	xtoi@sign& (0+255),b
 15941  003408  0E00               	movlw	0
 15942  00340A  6F89               	movwf	(xtoi@val+1)& (0+255),b
 15943  00340C  0E00               	movlw	0
 15944  00340E  6F88               	movwf	xtoi@val& (0+255),b
 15945  003410  D003               	goto	l3358
 15946  003412                     
 15947                           ; BSR set to: 0
 15948  003412  0100               	movlb	0	; () banked
 15949  003414  4B83               	infsnz	xtoi@s& (0+255),f,b
 15950  003416  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15951  003418                     l3358:
 15952                           
 15953                           ; BSR set to: 0
 15954                           
 15955                           ; BSR set to: 0
 15956  003418  C083  FFD9         	movff	xtoi@s,fsr2l
 15957  00341C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15958  003420  50DF               	movf	indf2,w,c
 15959  003422  EC8B  F02F         	call	_isspace
 15960  003426  B0D8               	btfsc	status,0,c
 15961  003428  D7F4               	goto	l3359
 15962  00342A  C083  FFD9         	movff	xtoi@s,fsr2l
 15963  00342E  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15964  003432  0E2D               	movlw	45
 15965  003434  18DE               	xorwf	postinc2,w,c
 15966  003436  A4D8               	btfss	status,2,c
 15967  003438  D003               	goto	l3361
 15968  00343A  0100               	movlb	0	; () banked
 15969  00343C  2B87               	incf	xtoi@sign& (0+255),f,b
 15970  00343E  D009               	goto	L15
 15971  003440                     l3361:
 15972                           
 15973                           ; BSR set to: 0
 15974  003440  C083  FFD9         	movff	xtoi@s,fsr2l
 15975  003444  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15976  003448  0E2B               	movlw	43
 15977  00344A  18DE               	xorwf	postinc2,w,c
 15978  00344C  A4D8               	btfss	status,2,c
 15979  00344E  D028               	goto	l3364
 15980  003450  0100               	movlb	0	; () banked
 15981  003452                     L15:
 15982  003452  4B83               	infsnz	xtoi@s& (0+255),f,b
 15983  003454  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15984                           
 15985                           ; BSR set to: 0
 15986                           
 15987                           ; BSR set to: 0
 15988  003456  D024               	goto	l3364
 15989  003458                     
 15990                           ; BSR set to: 0
 15991  003458  0100               	movlb	0	; () banked
 15992  00345A  518A               	movf	xtoi@c& (0+255),w,b
 15993  00345C  EC31  F030         	call	_isupper
 15994  003460  A0D8               	btfss	status,0,c
 15995  003462  D006               	goto	l3366
 15996  003464  0100               	movlb	0	; () banked
 15997  003466  518A               	movf	xtoi@c& (0+255),w,b
 15998  003468  ECF5  F030         	call	_tolower
 15999  00346C  0100               	movlb	0	; () banked
 16000  00346E  6F8A               	movwf	xtoi@c& (0+255),b
 16001  003470                     l3366:
 16002  003470  0100               	movlb	0	; () banked
 16003  003472  518A               	movf	xtoi@c& (0+255),w,b
 16004  003474  EC53  F030         	call	_isdigit
 16005  003478  A0D8               	btfss	status,0,c
 16006  00347A  D002               	goto	l3367
 16007  00347C  0E30               	movlw	48
 16008  00347E  D001               	goto	L14
 16009  003480                     l3367:
 16010                           
 16011                           ; BSR set to: 0
 16012  003480  0E57               	movlw	87
 16013  003482                     L14:
 16014  003482  0100               	movlb	0	; () banked
 16015  003484  5F8A               	subwf	xtoi@c& (0+255),f,b
 16016                           
 16017                           ; BSR set to: 0
 16018  003486  3B88               	swapf	xtoi@val& (0+255),f,b
 16019  003488  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16020  00348A  0EF0               	movlw	240
 16021  00348C  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16022  00348E  5188               	movf	xtoi@val& (0+255),w,b
 16023  003490  0B0F               	andlw	15
 16024  003492  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16025  003494  0EF0               	movlw	240
 16026  003496  1788               	andwf	xtoi@val& (0+255),f,b
 16027  003498  518A               	movf	xtoi@c& (0+255),w,b
 16028  00349A  2788               	addwf	xtoi@val& (0+255),f,b
 16029  00349C  0E00               	movlw	0
 16030  00349E  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16031  0034A0                     l3364:
 16032                           
 16033                           ; BSR set to: 0
 16034  0034A0  C083  FFD9         	movff	xtoi@s,fsr2l
 16035  0034A4  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16036  0034A8  0100               	movlb	0	; () banked
 16037  0034AA  4B83               	infsnz	xtoi@s& (0+255),f,b
 16038  0034AC  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16039  0034AE  50DF               	movf	indf2,w,c
 16040  0034B0  6F8A               	movwf	xtoi@c& (0+255),b
 16041  0034B2  518A               	movf	xtoi@c& (0+255),w,b
 16042  0034B4  ECDB  F02D         	call	_isxdigit
 16043  0034B8  B0D8               	btfsc	status,0,c
 16044  0034BA  D7CE               	goto	l3365
 16045  0034BC  0100               	movlb	0	; () banked
 16046  0034BE  5187               	movf	xtoi@sign& (0+255),w,b
 16047  0034C0  B4D8               	btfsc	status,2,c
 16048  0034C2  D00D               	goto	l3370
 16049                           
 16050                           ; BSR set to: 0
 16051  0034C4  C088  F085         	movff	xtoi@val,??_xtoi
 16052  0034C8  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16053  0034CC  1F85               	comf	??_xtoi& (0+255),f,b
 16054  0034CE  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16055  0034D0  4B85               	infsnz	??_xtoi& (0+255),f,b
 16056  0034D2  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16057  0034D4  C085  F083         	movff	??_xtoi,?_xtoi
 16058  0034D8  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16059  0034DC  0012               	return	
 16060  0034DE                     l3370:
 16061                           
 16062                           ; BSR set to: 0
 16063  0034DE  C088  F083         	movff	xtoi@val,?_xtoi
 16064  0034E2  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16065                           
 16066                           ; BSR set to: 0
 16067  0034E6  0012               	return		;funcret
 16068  0034E8                     __end_of_xtoi:
 16069                           	opt stack 0
 16070                           tosu	equ	0xFFF
 16071                           tosh	equ	0xFFE
 16072                           tosl	equ	0xFFD
 16073                           pclath	equ	0xFFA
 16074                           tblptru	equ	0xFF8
 16075                           tblptrh	equ	0xFF7
 16076                           tblptrl	equ	0xFF6
 16077                           tablat	equ	0xFF5
 16078                           prodh	equ	0xFF4
 16079                           prodl	equ	0xFF3
 16080                           intcon	equ	0xFF2
 16081                           intcon2	equ	0xFF1
 16082                           intcon3	equ	0xFF0
 16083                           indf0	equ	0xFEF
 16084                           postinc0	equ	0xFEE
 16085                           plusw0	equ	0xFEB
 16086                           fsr0h	equ	0xFEA
 16087                           fsr0l	equ	0xFE9
 16088                           wreg	equ	0xFE8
 16089                           indf1	equ	0xFE7
 16090                           postinc1	equ	0xFE6
 16091                           postdec1	equ	0xFE5
 16092                           fsr1h	equ	0xFE2
 16093                           fsr1l	equ	0xFE1
 16094                           indf2	equ	0xFDF
 16095                           postinc2	equ	0xFDE
 16096                           postdec2	equ	0xFDD
 16097                           plusw2	equ	0xFDB
 16098                           fsr2h	equ	0xFDA
 16099                           fsr2l	equ	0xFD9
 16100                           status	equ	0xFD8
 16101                           
 16102 ;; *************** function _tolower *****************
 16103 ;; Defined at:
 16104 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16105 ;; Parameters:    Size  Location     Type
 16106 ;;  c               1    wreg     unsigned char 
 16107 ;; Auto vars:     Size  Location     Type
 16108 ;;  c               1   29[BANK0 ] unsigned char 
 16109 ;; Return value:  Size  Location     Type
 16110 ;;                  1    wreg      unsigned char 
 16111 ;; Registers used:
 16112 ;;		wreg, status,2, status,0
 16113 ;; Tracked objects:
 16114 ;;		On entry : 0/0
 16115 ;;		On exit  : 0/0
 16116 ;;		Unchanged: 0/0
 16117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16121 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16122 ;;Total ram usage:        1 bytes
 16123 ;; Hardware stack levels used:    1
 16124 ;; Hardware stack levels required when called:   11
 16125 ;; This function calls:
 16126 ;;		Nothing
 16127 ;; This function is called by:
 16128 ;;		_xtoi
 16129 ;; This function uses a non-reentrant model
 16130 ;;
 16131                           
 16132                           	psect	text62
 16133  0061EA                     __ptext62:
 16134                           	opt stack 0
 16135  0061EA                     _tolower:
 16136                           	opt stack 13
 16137                           
 16138                           ; BSR set to: 0
 16139                           ;incstack = 0
 16140                           ;tolower@c stored from wreg
 16141  0061EA  0100               	movlb	0	; () banked
 16142  0061EC  6F7D               	movwf	tolower@c& (0+255),b
 16143  0061EE  0E5B               	movlw	91
 16144  0061F0  0100               	movlb	0	; () banked
 16145  0061F2  617D               	cpfslt	tolower@c& (0+255),b
 16146  0061F4  D004               	goto	l3417
 16147                           
 16148                           ; BSR set to: 0
 16149  0061F6  0E40               	movlw	64
 16150  0061F8  657D               	cpfsgt	tolower@c& (0+255),b
 16151  0061FA  D001               	goto	l3417
 16152                           
 16153                           ; BSR set to: 0
 16154  0061FC  8B7D               	bsf	tolower@c& (0+255),5,b
 16155  0061FE                     l3417:
 16156                           
 16157                           ; BSR set to: 0
 16158                           
 16159                           ; BSR set to: 0
 16160  0061FE  517D               	movf	tolower@c& (0+255),w,b
 16161  006200  0012               	return	
 16162  006202                     __end_of_tolower:
 16163                           	opt stack 0
 16164                           tosu	equ	0xFFF
 16165                           tosh	equ	0xFFE
 16166                           tosl	equ	0xFFD
 16167                           pclath	equ	0xFFA
 16168                           tblptru	equ	0xFF8
 16169                           tblptrh	equ	0xFF7
 16170                           tblptrl	equ	0xFF6
 16171                           tablat	equ	0xFF5
 16172                           prodh	equ	0xFF4
 16173                           prodl	equ	0xFF3
 16174                           intcon	equ	0xFF2
 16175                           intcon2	equ	0xFF1
 16176                           intcon3	equ	0xFF0
 16177                           indf0	equ	0xFEF
 16178                           postinc0	equ	0xFEE
 16179                           plusw0	equ	0xFEB
 16180                           fsr0h	equ	0xFEA
 16181                           fsr0l	equ	0xFE9
 16182                           wreg	equ	0xFE8
 16183                           indf1	equ	0xFE7
 16184                           postinc1	equ	0xFE6
 16185                           postdec1	equ	0xFE5
 16186                           fsr1h	equ	0xFE2
 16187                           fsr1l	equ	0xFE1
 16188                           indf2	equ	0xFDF
 16189                           postinc2	equ	0xFDE
 16190                           postdec2	equ	0xFDD
 16191                           plusw2	equ	0xFDB
 16192                           fsr2h	equ	0xFDA
 16193                           fsr2l	equ	0xFD9
 16194                           status	equ	0xFD8
 16195                           
 16196 ;; *************** function _isxdigit *****************
 16197 ;; Defined at:
 16198 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16199 ;; Parameters:    Size  Location     Type
 16200 ;;  c               1    wreg     unsigned char 
 16201 ;; Auto vars:     Size  Location     Type
 16202 ;;  c               1   34[BANK0 ] unsigned char 
 16203 ;; Return value:  Size  Location     Type
 16204 ;;		None               void
 16205 ;; Registers used:
 16206 ;;		wreg, status,2, status,0, cstack
 16207 ;; Tracked objects:
 16208 ;;		On entry : 0/0
 16209 ;;		On exit  : 0/0
 16210 ;;		Unchanged: 0/0
 16211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16213 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16214 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16215 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16216 ;;Total ram usage:        3 bytes
 16217 ;; Hardware stack levels used:    1
 16218 ;; Hardware stack levels required when called:   12
 16219 ;; This function calls:
 16220 ;;		_isdigit
 16221 ;; This function is called by:
 16222 ;;		_xtoi
 16223 ;; This function uses a non-reentrant model
 16224 ;;
 16225                           
 16226                           	psect	text63
 16227  005BB6                     __ptext63:
 16228                           	opt stack 0
 16229  005BB6                     _isxdigit:
 16230                           	opt stack 12
 16231                           
 16232                           ; BSR set to: 0
 16233                           ;incstack = 0
 16234                           ;isxdigit@c stored from wreg
 16235  005BB6  0100               	movlb	0	; () banked
 16236  005BB8  6F82               	movwf	isxdigit@c& (0+255),b
 16237  005BBA  0E01               	movlw	1
 16238  005BBC  0100               	movlb	0	; () banked
 16239  005BBE  6F81               	movwf	_isxdigit$6530& (0+255),b
 16240                           
 16241                           ; BSR set to: 0
 16242  005BC0  0E67               	movlw	103
 16243  005BC2  6182               	cpfslt	isxdigit@c& (0+255),b
 16244  005BC4  D003               	goto	u11620
 16245                           
 16246                           ; BSR set to: 0
 16247  005BC6  0E61               	movlw	97
 16248  005BC8  6182               	cpfslt	isxdigit@c& (0+255),b
 16249  005BCA  D00E               	goto	l3413
 16250  005BCC                     u11620:
 16251                           
 16252                           ; BSR set to: 0
 16253                           
 16254                           ; BSR set to: 0
 16255  005BCC  0E47               	movlw	71
 16256  005BCE  6182               	cpfslt	isxdigit@c& (0+255),b
 16257  005BD0  D003               	goto	u11640
 16258                           
 16259                           ; BSR set to: 0
 16260  005BD2  0E41               	movlw	65
 16261  005BD4  6182               	cpfslt	isxdigit@c& (0+255),b
 16262  005BD6  D008               	goto	l3413
 16263  005BD8                     u11640:
 16264                           
 16265                           ; BSR set to: 0
 16266                           
 16267                           ; BSR set to: 0
 16268  005BD8  5182               	movf	isxdigit@c& (0+255),w,b
 16269  005BDA  EC53  F030         	call	_isdigit
 16270  005BDE  B0D8               	btfsc	status,0,c
 16271  005BE0  D003               	goto	l3413
 16272  005BE2  0E00               	movlw	0
 16273  005BE4  0100               	movlb	0	; () banked
 16274  005BE6  6F81               	movwf	_isxdigit$6530& (0+255),b
 16275  005BE8                     l3413:
 16276                           
 16277                           ; BSR set to: 0
 16278  005BE8  C081  F080         	movff	_isxdigit$6530,??_isxdigit
 16279  005BEC  0100               	movlb	0	; () banked
 16280  005BEE  3180               	rrcf	??_isxdigit& (0+255),w,b
 16281  005BF0  0012               	return	
 16282  005BF2                     __end_of_isxdigit:
 16283                           	opt stack 0
 16284                           tosu	equ	0xFFF
 16285                           tosh	equ	0xFFE
 16286                           tosl	equ	0xFFD
 16287                           pclath	equ	0xFFA
 16288                           tblptru	equ	0xFF8
 16289                           tblptrh	equ	0xFF7
 16290                           tblptrl	equ	0xFF6
 16291                           tablat	equ	0xFF5
 16292                           prodh	equ	0xFF4
 16293                           prodl	equ	0xFF3
 16294                           intcon	equ	0xFF2
 16295                           intcon2	equ	0xFF1
 16296                           intcon3	equ	0xFF0
 16297                           indf0	equ	0xFEF
 16298                           postinc0	equ	0xFEE
 16299                           plusw0	equ	0xFEB
 16300                           fsr0h	equ	0xFEA
 16301                           fsr0l	equ	0xFE9
 16302                           wreg	equ	0xFE8
 16303                           indf1	equ	0xFE7
 16304                           postinc1	equ	0xFE6
 16305                           postdec1	equ	0xFE5
 16306                           fsr1h	equ	0xFE2
 16307                           fsr1l	equ	0xFE1
 16308                           indf2	equ	0xFDF
 16309                           postinc2	equ	0xFDE
 16310                           postdec2	equ	0xFDD
 16311                           plusw2	equ	0xFDB
 16312                           fsr2h	equ	0xFDA
 16313                           fsr2l	equ	0xFD9
 16314                           status	equ	0xFD8
 16315                           
 16316 ;; *************** function _strtol *****************
 16317 ;; Defined at:
 16318 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16319 ;; Parameters:    Size  Location     Type
 16320 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16321 ;;		 -> Terminal@Payload(80), 
 16322 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16323 ;;		 -> NULL(0), 
 16324 ;;  base            2   45[BANK0 ] int 
 16325 ;; Auto vars:     Size  Location     Type
 16326 ;;  a               4   52[BANK0 ] long 
 16327 ;;  c               1   56[BANK0 ] unsigned char 
 16328 ;;  sign            1   51[BANK0 ] unsigned char 
 16329 ;; Return value:  Size  Location     Type
 16330 ;;                  4   41[BANK0 ] long 
 16331 ;; Registers used:
 16332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16333 ;; Tracked objects:
 16334 ;;		On entry : 0/0
 16335 ;;		On exit  : 0/0
 16336 ;;		Unchanged: 0/0
 16337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16338 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16339 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16340 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16341 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16342 ;;Total ram usage:       16 bytes
 16343 ;; Hardware stack levels used:    1
 16344 ;; Hardware stack levels required when called:   13
 16345 ;; This function calls:
 16346 ;;		___lmul
 16347 ;;		_isalpha
 16348 ;;		_isdigit
 16349 ;;		_isspace
 16350 ;;		_toupper
 16351 ;; This function is called by:
 16352 ;;		_Terminal
 16353 ;; This function uses a non-reentrant model
 16354 ;;
 16355                           
 16356                           	psect	text64
 16357  00181C                     __ptext64:
 16358                           	opt stack 0
 16359  00181C                     _strtol:
 16360                           	opt stack 12
 16361                           
 16362                           ; BSR set to: 0
 16363                           ;incstack = 0
 16364  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16365  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16366  001824  50DF               	movf	indf2,w,c
 16367  001826  0100               	movlb	0	; () banked
 16368  001828  6F98               	movwf	strtol@c& (0+255),b
 16369                           
 16370                           ; BSR set to: 0
 16371  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16372  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16373                           
 16374                           ; BSR set to: 0
 16375  00182E  5198               	movf	strtol@c& (0+255),w,b
 16376  001830  EC8B  F02F         	call	_isspace
 16377  001834  B0D8               	btfsc	status,0,c
 16378  001836  D7F2               	goto	_strtol
 16379  001838  0E00               	movlw	0
 16380  00183A  0100               	movlb	0	; () banked
 16381  00183C  6F94               	movwf	strtol@a& (0+255),b
 16382  00183E  0E00               	movlw	0
 16383  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16384  001842  0E00               	movlw	0
 16385  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16386  001846  0E00               	movlw	0
 16387  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16388  00184A  0E00               	movlw	0
 16389  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16390                           
 16391                           ; BSR set to: 0
 16392  00184E  0E2D               	movlw	45
 16393  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16394  001852  A4D8               	btfss	status,2,c
 16395  001854  D003               	goto	l3320
 16396                           
 16397                           ; BSR set to: 0
 16398  001856  0E01               	movlw	1
 16399  001858  6F93               	movwf	strtol@sign& (0+255),b
 16400  00185A  D004               	goto	u12090
 16401  00185C                     l3320:
 16402                           
 16403                           ; BSR set to: 0
 16404                           
 16405                           ; BSR set to: 0
 16406  00185C  0E2B               	movlw	43
 16407  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16408  001860  A4D8               	btfss	status,2,c
 16409  001862  D008               	goto	l3322
 16410  001864                     u12090:
 16411                           
 16412                           ; BSR set to: 0
 16413  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16414  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16415  00186C  50DF               	movf	indf2,w,c
 16416  00186E  6F98               	movwf	strtol@c& (0+255),b
 16417                           
 16418                           ; BSR set to: 0
 16419  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16420  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16421  001874                     l3322:
 16422                           
 16423                           ; BSR set to: 0
 16424                           
 16425                           ; BSR set to: 0
 16426                           
 16427                           ; BSR set to: 0
 16428  001874  0E30               	movlw	48
 16429  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16430  001878  A4D8               	btfss	status,2,c
 16431  00187A  D02E               	goto	l3330
 16432                           
 16433                           ; BSR set to: 0
 16434  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16435  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16436  001884  50DF               	movf	indf2,w,c
 16437  001886  6F98               	movwf	strtol@c& (0+255),b
 16438                           
 16439                           ; BSR set to: 0
 16440  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16441  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16442                           
 16443                           ; BSR set to: 0
 16444  00188C  518D               	movf	strtol@base& (0+255),w,b
 16445  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16446  001890  B4D8               	btfsc	status,2,c
 16447  001892  D005               	goto	u12120
 16448                           
 16449                           ; BSR set to: 0
 16450  001894  0E10               	movlw	16
 16451  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16452  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16453  00189A  A4D8               	btfss	status,2,c
 16454  00189C  D015               	goto	l3324
 16455  00189E                     u12120:
 16456                           
 16457                           ; BSR set to: 0
 16458                           
 16459                           ; BSR set to: 0
 16460  00189E  0E78               	movlw	120
 16461  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16462  0018A2  B4D8               	btfsc	status,2,c
 16463  0018A4  D004               	goto	u12140
 16464                           
 16465                           ; BSR set to: 0
 16466  0018A6  0E58               	movlw	88
 16467  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16468  0018AA  A4D8               	btfss	status,2,c
 16469  0018AC  D00D               	goto	l3324
 16470  0018AE                     u12140:
 16471                           
 16472                           ; BSR set to: 0
 16473                           
 16474                           ; BSR set to: 0
 16475  0018AE  0E00               	movlw	0
 16476  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16477  0018B2  0E10               	movlw	16
 16478  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16479                           
 16480                           ; BSR set to: 0
 16481  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16482  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16483  0018BE  50DF               	movf	indf2,w,c
 16484  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16485                           
 16486                           ; BSR set to: 0
 16487  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16488  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16489  0018C6  D008               	goto	l3330
 16490  0018C8                     l3324:
 16491                           
 16492                           ; BSR set to: 0
 16493                           
 16494                           ; BSR set to: 0
 16495  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16496  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16497  0018CC  A4D8               	btfss	status,2,c
 16498  0018CE  D004               	goto	l3330
 16499                           
 16500                           ; BSR set to: 0
 16501  0018D0  0E00               	movlw	0
 16502  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16503  0018D4  0E08               	movlw	8
 16504  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16505  0018D8                     l3330:
 16506                           
 16507                           ; BSR set to: 0
 16508                           
 16509                           ; BSR set to: 0
 16510                           
 16511                           ; BSR set to: 0
 16512                           
 16513                           ; BSR set to: 0
 16514  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16515  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16516  0018DC  A4D8               	btfss	status,2,c
 16517  0018DE  D004               	goto	l3331
 16518                           
 16519                           ; BSR set to: 0
 16520  0018E0  0E00               	movlw	0
 16521  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16522  0018E4  0E0A               	movlw	10
 16523  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16524  0018E8                     l3331:
 16525                           
 16526                           ; BSR set to: 0
 16527                           
 16528                           ; BSR set to: 0
 16529                           
 16530                           ; BSR set to: 0
 16531  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16532  0018EA  EC02  F02F         	call	_isalpha
 16533  0018EE  A0D8               	btfss	status,0,c
 16534  0018F0  D008               	goto	l3333
 16535  0018F2  0100               	movlb	0	; () banked
 16536  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16537  0018F6  EC01  F031         	call	_toupper
 16538  0018FA  0FC9               	addlw	201
 16539  0018FC  0100               	movlb	0	; () banked
 16540  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16541  001900  D009               	goto	l3336
 16542  001902                     l3333:
 16543                           
 16544                           ; BSR set to: 0
 16545  001902  0100               	movlb	0	; () banked
 16546  001904  5198               	movf	strtol@c& (0+255),w,b
 16547  001906  EC53  F030         	call	_isdigit
 16548  00190A  A0D8               	btfss	status,0,c
 16549  00190C  D039               	goto	l3337
 16550  00190E  0E30               	movlw	48
 16551  001910  0100               	movlb	0	; () banked
 16552  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16553  001914                     l3336:
 16554                           
 16555                           ; BSR set to: 0
 16556                           
 16557                           ; BSR set to: 0
 16558                           
 16559                           ; BSR set to: 0
 16560  001914  5198               	movf	strtol@c& (0+255),w,b
 16561  001916  6F8F               	movwf	??_strtol& (0+255),b
 16562  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16563  00191A  518D               	movf	strtol@base& (0+255),w,b
 16564  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16565  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16566  001920  0A80               	xorlw	128
 16567  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16568  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16569  001926  0A80               	xorlw	128
 16570  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16571  00192A  B0D8               	btfsc	status,0,c
 16572  00192C  D029               	goto	l3337
 16573                           
 16574                           ; BSR set to: 0
 16575                           
 16576                           ; BSR set to: 0
 16577                           
 16578                           ; BSR set to: 0
 16579  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16580  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16581  001936  0E00               	movlw	0
 16582  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16583  00193A  0EFF               	movlw	-1
 16584  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16585  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16586  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16587  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16588  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16589  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16590  001950  EC7A  F029         	call	___lmul	;wreg free
 16591  001954  0100               	movlb	0	; () banked
 16592  001956  5198               	movf	strtol@c& (0+255),w,b
 16593  001958  257D               	addwf	?___lmul& (0+255),w,b
 16594  00195A  6F94               	movwf	strtol@a& (0+255),b
 16595  00195C  0E00               	movlw	0
 16596  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16597  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16598  001962  0E00               	movlw	0
 16599  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16600  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16601  001968  0E00               	movlw	0
 16602  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16603  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16604                           
 16605                           ; BSR set to: 0
 16606  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16607  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16608  001976  50DF               	movf	indf2,w,c
 16609  001978  6F98               	movwf	strtol@c& (0+255),b
 16610                           
 16611                           ; BSR set to: 0
 16612  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16613  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16614  00197E  D7B4               	goto	l3331
 16615  001980                     l3337:
 16616                           
 16617                           ; BSR set to: 0
 16618  001980  0100               	movlb	0	; () banked
 16619  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16620  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16621  001986  B4D8               	btfsc	status,2,c
 16622  001988  D00E               	goto	l3339
 16623                           
 16624                           ; BSR set to: 0
 16625  00198A  0EFF               	movlw	255
 16626  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16627  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16628  001990  0EFF               	movlw	255
 16629  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16630  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16631  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16632  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16633  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16634  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16635  0019A6                     l3339:
 16636                           
 16637                           ; BSR set to: 0
 16638                           
 16639                           ; BSR set to: 0
 16640  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16641  0019A8  B4D8               	btfsc	status,2,c
 16642  0019AA  D01A               	goto	l3340
 16643                           
 16644                           ; BSR set to: 0
 16645  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16646  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16647  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16648  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16649  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16650  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16651  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16652  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16653  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16654  0019C6  0E00               	movlw	0
 16655  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16656  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16657  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16658  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16659  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16660  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16661  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16662                           
 16663                           ; BSR set to: 0
 16664  0019DE  0012               	return	
 16665  0019E0                     l3340:
 16666                           
 16667                           ; BSR set to: 0
 16668  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16669  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16670  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16671  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16672                           
 16673                           ; BSR set to: 0
 16674  0019F0  0012               	return		;funcret
 16675  0019F2                     __end_of_strtol:
 16676                           	opt stack 0
 16677                           tosu	equ	0xFFF
 16678                           tosh	equ	0xFFE
 16679                           tosl	equ	0xFFD
 16680                           pclath	equ	0xFFA
 16681                           tblptru	equ	0xFF8
 16682                           tblptrh	equ	0xFF7
 16683                           tblptrl	equ	0xFF6
 16684                           tablat	equ	0xFF5
 16685                           prodh	equ	0xFF4
 16686                           prodl	equ	0xFF3
 16687                           intcon	equ	0xFF2
 16688                           intcon2	equ	0xFF1
 16689                           intcon3	equ	0xFF0
 16690                           indf0	equ	0xFEF
 16691                           postinc0	equ	0xFEE
 16692                           plusw0	equ	0xFEB
 16693                           fsr0h	equ	0xFEA
 16694                           fsr0l	equ	0xFE9
 16695                           wreg	equ	0xFE8
 16696                           indf1	equ	0xFE7
 16697                           postinc1	equ	0xFE6
 16698                           postdec1	equ	0xFE5
 16699                           fsr1h	equ	0xFE2
 16700                           fsr1l	equ	0xFE1
 16701                           indf2	equ	0xFDF
 16702                           postinc2	equ	0xFDE
 16703                           postdec2	equ	0xFDD
 16704                           plusw2	equ	0xFDB
 16705                           fsr2h	equ	0xFDA
 16706                           fsr2l	equ	0xFD9
 16707                           status	equ	0xFD8
 16708                           
 16709 ;; *************** function _toupper *****************
 16710 ;; Defined at:
 16711 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16712 ;; Parameters:    Size  Location     Type
 16713 ;;  c               1    wreg     unsigned char 
 16714 ;; Auto vars:     Size  Location     Type
 16715 ;;  c               1   29[BANK0 ] unsigned char 
 16716 ;; Return value:  Size  Location     Type
 16717 ;;                  1    wreg      unsigned char 
 16718 ;; Registers used:
 16719 ;;		wreg, status,2, status,0
 16720 ;; Tracked objects:
 16721 ;;		On entry : 0/0
 16722 ;;		On exit  : 0/0
 16723 ;;		Unchanged: 0/0
 16724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16726 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16728 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16729 ;;Total ram usage:        1 bytes
 16730 ;; Hardware stack levels used:    1
 16731 ;; Hardware stack levels required when called:   11
 16732 ;; This function calls:
 16733 ;;		Nothing
 16734 ;; This function is called by:
 16735 ;;		_strtol
 16736 ;; This function uses a non-reentrant model
 16737 ;;
 16738                           
 16739                           	psect	text65
 16740  006202                     __ptext65:
 16741                           	opt stack 0
 16742  006202                     _toupper:
 16743                           	opt stack 13
 16744                           
 16745                           ; BSR set to: 0
 16746                           ;incstack = 0
 16747                           ;toupper@c stored from wreg
 16748  006202  0100               	movlb	0	; () banked
 16749  006204  6F7D               	movwf	toupper@c& (0+255),b
 16750  006206  0E7B               	movlw	123
 16751  006208  0100               	movlb	0	; () banked
 16752  00620A  617D               	cpfslt	toupper@c& (0+255),b
 16753  00620C  D004               	goto	l3344
 16754                           
 16755                           ; BSR set to: 0
 16756  00620E  0E60               	movlw	96
 16757  006210  657D               	cpfsgt	toupper@c& (0+255),b
 16758  006212  D001               	goto	l3344
 16759                           
 16760                           ; BSR set to: 0
 16761  006214  9B7D               	bcf	toupper@c& (0+255),5,b
 16762  006216                     l3344:
 16763                           
 16764                           ; BSR set to: 0
 16765                           
 16766                           ; BSR set to: 0
 16767  006216  517D               	movf	toupper@c& (0+255),w,b
 16768  006218  0012               	return	
 16769  00621A                     __end_of_toupper:
 16770                           	opt stack 0
 16771                           tosu	equ	0xFFF
 16772                           tosh	equ	0xFFE
 16773                           tosl	equ	0xFFD
 16774                           pclath	equ	0xFFA
 16775                           tblptru	equ	0xFF8
 16776                           tblptrh	equ	0xFF7
 16777                           tblptrl	equ	0xFF6
 16778                           tablat	equ	0xFF5
 16779                           prodh	equ	0xFF4
 16780                           prodl	equ	0xFF3
 16781                           intcon	equ	0xFF2
 16782                           intcon2	equ	0xFF1
 16783                           intcon3	equ	0xFF0
 16784                           indf0	equ	0xFEF
 16785                           postinc0	equ	0xFEE
 16786                           plusw0	equ	0xFEB
 16787                           fsr0h	equ	0xFEA
 16788                           fsr0l	equ	0xFE9
 16789                           wreg	equ	0xFE8
 16790                           indf1	equ	0xFE7
 16791                           postinc1	equ	0xFE6
 16792                           postdec1	equ	0xFE5
 16793                           fsr1h	equ	0xFE2
 16794                           fsr1l	equ	0xFE1
 16795                           indf2	equ	0xFDF
 16796                           postinc2	equ	0xFDE
 16797                           postdec2	equ	0xFDD
 16798                           plusw2	equ	0xFDB
 16799                           fsr2h	equ	0xFDA
 16800                           fsr2l	equ	0xFD9
 16801                           status	equ	0xFD8
 16802                           
 16803 ;; *************** function _isspace *****************
 16804 ;; Defined at:
 16805 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16806 ;; Parameters:    Size  Location     Type
 16807 ;;  c               1    wreg     unsigned char 
 16808 ;; Auto vars:     Size  Location     Type
 16809 ;;  c               1   31[BANK0 ] unsigned char 
 16810 ;; Return value:  Size  Location     Type
 16811 ;;		None               void
 16812 ;; Registers used:
 16813 ;;		wreg, status,2, status,0
 16814 ;; Tracked objects:
 16815 ;;		On entry : 0/0
 16816 ;;		On exit  : 0/0
 16817 ;;		Unchanged: 0/0
 16818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16820 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16821 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16822 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16823 ;;Total ram usage:        3 bytes
 16824 ;; Hardware stack levels used:    1
 16825 ;; Hardware stack levels required when called:   11
 16826 ;; This function calls:
 16827 ;;		Nothing
 16828 ;; This function is called by:
 16829 ;;		_strtol
 16830 ;;		_xtoi
 16831 ;; This function uses a non-reentrant model
 16832 ;;
 16833                           
 16834                           	psect	text66
 16835  005F16                     __ptext66:
 16836                           	opt stack 0
 16837  005F16                     _isspace:
 16838                           	opt stack 13
 16839                           
 16840                           ; BSR set to: 0
 16841                           ;incstack = 0
 16842                           ;isspace@c stored from wreg
 16843  005F16  0100               	movlb	0	; () banked
 16844  005F18  6F7F               	movwf	isspace@c& (0+255),b
 16845  005F1A  0E01               	movlw	1
 16846  005F1C  0100               	movlb	0	; () banked
 16847  005F1E  6F7E               	movwf	_isspace$6523& (0+255),b
 16848                           
 16849                           ; BSR set to: 0
 16850  005F20  0E20               	movlw	32
 16851  005F22  197F               	xorwf	isspace@c& (0+255),w,b
 16852  005F24  B4D8               	btfsc	status,2,c
 16853  005F26  D008               	goto	l3401
 16854                           
 16855                           ; BSR set to: 0
 16856  005F28  0E0E               	movlw	14
 16857  005F2A  617F               	cpfslt	isspace@c& (0+255),b
 16858  005F2C  D003               	goto	u11530
 16859                           
 16860                           ; BSR set to: 0
 16861  005F2E  0E09               	movlw	9
 16862  005F30  617F               	cpfslt	isspace@c& (0+255),b
 16863  005F32  D002               	goto	l3401
 16864  005F34                     u11530:
 16865                           
 16866                           ; BSR set to: 0
 16867                           
 16868                           ; BSR set to: 0
 16869  005F34  0E00               	movlw	0
 16870  005F36  6F7E               	movwf	_isspace$6523& (0+255),b
 16871  005F38                     l3401:
 16872                           
 16873                           ; BSR set to: 0
 16874                           
 16875                           ; BSR set to: 0
 16876  005F38  C07E  F07D         	movff	_isspace$6523,??_isspace
 16877  005F3C  317D               	rrcf	??_isspace& (0+255),w,b
 16878  005F3E  0012               	return	
 16879  005F40                     __end_of_isspace:
 16880                           	opt stack 0
 16881                           tosu	equ	0xFFF
 16882                           tosh	equ	0xFFE
 16883                           tosl	equ	0xFFD
 16884                           pclath	equ	0xFFA
 16885                           tblptru	equ	0xFF8
 16886                           tblptrh	equ	0xFF7
 16887                           tblptrl	equ	0xFF6
 16888                           tablat	equ	0xFF5
 16889                           prodh	equ	0xFF4
 16890                           prodl	equ	0xFF3
 16891                           intcon	equ	0xFF2
 16892                           intcon2	equ	0xFF1
 16893                           intcon3	equ	0xFF0
 16894                           indf0	equ	0xFEF
 16895                           postinc0	equ	0xFEE
 16896                           plusw0	equ	0xFEB
 16897                           fsr0h	equ	0xFEA
 16898                           fsr0l	equ	0xFE9
 16899                           wreg	equ	0xFE8
 16900                           indf1	equ	0xFE7
 16901                           postinc1	equ	0xFE6
 16902                           postdec1	equ	0xFE5
 16903                           fsr1h	equ	0xFE2
 16904                           fsr1l	equ	0xFE1
 16905                           indf2	equ	0xFDF
 16906                           postinc2	equ	0xFDE
 16907                           postdec2	equ	0xFDD
 16908                           plusw2	equ	0xFDB
 16909                           fsr2h	equ	0xFDA
 16910                           fsr2l	equ	0xFD9
 16911                           status	equ	0xFD8
 16912                           
 16913 ;; *************** function _isalpha *****************
 16914 ;; Defined at:
 16915 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 16916 ;; Parameters:    Size  Location     Type
 16917 ;;  c               1    wreg     unsigned char 
 16918 ;; Auto vars:     Size  Location     Type
 16919 ;;  c               1   34[BANK0 ] unsigned char 
 16920 ;; Return value:  Size  Location     Type
 16921 ;;		None               void
 16922 ;; Registers used:
 16923 ;;		wreg, status,2, status,0, cstack
 16924 ;; Tracked objects:
 16925 ;;		On entry : 0/0
 16926 ;;		On exit  : 0/0
 16927 ;;		Unchanged: 0/0
 16928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16930 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16931 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16932 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16933 ;;Total ram usage:        3 bytes
 16934 ;; Hardware stack levels used:    1
 16935 ;; Hardware stack levels required when called:   12
 16936 ;; This function calls:
 16937 ;;		_isupper
 16938 ;; This function is called by:
 16939 ;;		_strtol
 16940 ;; This function uses a non-reentrant model
 16941 ;;
 16942                           
 16943                           	psect	text67
 16944  005E04                     __ptext67:
 16945                           	opt stack 0
 16946  005E04                     _isalpha:
 16947                           	opt stack 12
 16948                           
 16949                           ; BSR set to: 0
 16950                           ;incstack = 0
 16951                           ;isalpha@c stored from wreg
 16952  005E04  0100               	movlb	0	; () banked
 16953  005E06  6F82               	movwf	isalpha@c& (0+255),b
 16954  005E08  0E01               	movlw	1
 16955  005E0A  0100               	movlb	0	; () banked
 16956  005E0C  6F81               	movwf	_isalpha$6520& (0+255),b
 16957                           
 16958                           ; BSR set to: 0
 16959  005E0E  0E7B               	movlw	123
 16960  005E10  6182               	cpfslt	isalpha@c& (0+255),b
 16961  005E12  D003               	goto	u11550
 16962                           
 16963                           ; BSR set to: 0
 16964  005E14  0E61               	movlw	97
 16965  005E16  6182               	cpfslt	isalpha@c& (0+255),b
 16966  005E18  D008               	goto	l3396
 16967  005E1A                     u11550:
 16968                           
 16969                           ; BSR set to: 0
 16970                           
 16971                           ; BSR set to: 0
 16972  005E1A  5182               	movf	isalpha@c& (0+255),w,b
 16973  005E1C  EC31  F030         	call	_isupper
 16974  005E20  B0D8               	btfsc	status,0,c
 16975  005E22  D003               	goto	l3396
 16976  005E24  0E00               	movlw	0
 16977  005E26  0100               	movlb	0	; () banked
 16978  005E28  6F81               	movwf	_isalpha$6520& (0+255),b
 16979  005E2A                     l3396:
 16980                           
 16981                           ; BSR set to: 0
 16982  005E2A  C081  F080         	movff	_isalpha$6520,??_isalpha
 16983  005E2E  0100               	movlb	0	; () banked
 16984  005E30  3180               	rrcf	??_isalpha& (0+255),w,b
 16985  005E32  0012               	return	
 16986  005E34                     __end_of_isalpha:
 16987                           	opt stack 0
 16988                           tosu	equ	0xFFF
 16989                           tosh	equ	0xFFE
 16990                           tosl	equ	0xFFD
 16991                           pclath	equ	0xFFA
 16992                           tblptru	equ	0xFF8
 16993                           tblptrh	equ	0xFF7
 16994                           tblptrl	equ	0xFF6
 16995                           tablat	equ	0xFF5
 16996                           prodh	equ	0xFF4
 16997                           prodl	equ	0xFF3
 16998                           intcon	equ	0xFF2
 16999                           intcon2	equ	0xFF1
 17000                           intcon3	equ	0xFF0
 17001                           indf0	equ	0xFEF
 17002                           postinc0	equ	0xFEE
 17003                           plusw0	equ	0xFEB
 17004                           fsr0h	equ	0xFEA
 17005                           fsr0l	equ	0xFE9
 17006                           wreg	equ	0xFE8
 17007                           indf1	equ	0xFE7
 17008                           postinc1	equ	0xFE6
 17009                           postdec1	equ	0xFE5
 17010                           fsr1h	equ	0xFE2
 17011                           fsr1l	equ	0xFE1
 17012                           indf2	equ	0xFDF
 17013                           postinc2	equ	0xFDE
 17014                           postdec2	equ	0xFDD
 17015                           plusw2	equ	0xFDB
 17016                           fsr2h	equ	0xFDA
 17017                           fsr2l	equ	0xFD9
 17018                           status	equ	0xFD8
 17019                           
 17020 ;; *************** function _isupper *****************
 17021 ;; Defined at:
 17022 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17023 ;; Parameters:    Size  Location     Type
 17024 ;;  c               1    wreg     unsigned char 
 17025 ;; Auto vars:     Size  Location     Type
 17026 ;;  c               1   31[BANK0 ] unsigned char 
 17027 ;; Return value:  Size  Location     Type
 17028 ;;		None               void
 17029 ;; Registers used:
 17030 ;;		wreg, status,2, status,0
 17031 ;; Tracked objects:
 17032 ;;		On entry : 0/0
 17033 ;;		On exit  : 0/0
 17034 ;;		Unchanged: 0/0
 17035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17037 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17038 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17039 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17040 ;;Total ram usage:        3 bytes
 17041 ;; Hardware stack levels used:    1
 17042 ;; Hardware stack levels required when called:   11
 17043 ;; This function calls:
 17044 ;;		Nothing
 17045 ;; This function is called by:
 17046 ;;		_xtoi
 17047 ;;		_isalpha
 17048 ;; This function uses a non-reentrant model
 17049 ;;
 17050                           
 17051                           	psect	text68
 17052  006062                     __ptext68:
 17053                           	opt stack 0
 17054  006062                     _isupper:
 17055                           	opt stack 13
 17056                           
 17057                           ; BSR set to: 0
 17058                           ;incstack = 0
 17059                           ;isupper@c stored from wreg
 17060  006062  0100               	movlb	0	; () banked
 17061  006064  6F7F               	movwf	isupper@c& (0+255),b
 17062  006066  0E00               	movlw	0
 17063  006068  0100               	movlb	0	; () banked
 17064  00606A  6F7E               	movwf	_isupper$6526& (0+255),b
 17065                           
 17066                           ; BSR set to: 0
 17067  00606C  0E5B               	movlw	91
 17068  00606E  617F               	cpfslt	isupper@c& (0+255),b
 17069  006070  D005               	goto	l3406
 17070                           
 17071                           ; BSR set to: 0
 17072  006072  0E40               	movlw	64
 17073  006074  657F               	cpfsgt	isupper@c& (0+255),b
 17074  006076  D002               	goto	l3406
 17075                           
 17076                           ; BSR set to: 0
 17077  006078  0E01               	movlw	1
 17078  00607A  6F7E               	movwf	_isupper$6526& (0+255),b
 17079  00607C                     l3406:
 17080                           
 17081                           ; BSR set to: 0
 17082                           
 17083                           ; BSR set to: 0
 17084  00607C  C07E  F07D         	movff	_isupper$6526,??_isupper
 17085  006080  317D               	rrcf	??_isupper& (0+255),w,b
 17086  006082  0012               	return	
 17087  006084                     __end_of_isupper:
 17088                           	opt stack 0
 17089                           tosu	equ	0xFFF
 17090                           tosh	equ	0xFFE
 17091                           tosl	equ	0xFFD
 17092                           pclath	equ	0xFFA
 17093                           tblptru	equ	0xFF8
 17094                           tblptrh	equ	0xFF7
 17095                           tblptrl	equ	0xFF6
 17096                           tablat	equ	0xFF5
 17097                           prodh	equ	0xFF4
 17098                           prodl	equ	0xFF3
 17099                           intcon	equ	0xFF2
 17100                           intcon2	equ	0xFF1
 17101                           intcon3	equ	0xFF0
 17102                           indf0	equ	0xFEF
 17103                           postinc0	equ	0xFEE
 17104                           plusw0	equ	0xFEB
 17105                           fsr0h	equ	0xFEA
 17106                           fsr0l	equ	0xFE9
 17107                           wreg	equ	0xFE8
 17108                           indf1	equ	0xFE7
 17109                           postinc1	equ	0xFE6
 17110                           postdec1	equ	0xFE5
 17111                           fsr1h	equ	0xFE2
 17112                           fsr1l	equ	0xFE1
 17113                           indf2	equ	0xFDF
 17114                           postinc2	equ	0xFDE
 17115                           postdec2	equ	0xFDD
 17116                           plusw2	equ	0xFDB
 17117                           fsr2h	equ	0xFDA
 17118                           fsr2l	equ	0xFD9
 17119                           status	equ	0xFD8
 17120                           
 17121 ;; *************** function _strcpy *****************
 17122 ;; Defined at:
 17123 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17124 ;; Parameters:    Size  Location     Type
 17125 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17126 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17127 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17128 ;;		 -> STR_23(20), STR_21(42), 
 17129 ;; Auto vars:     Size  Location     Type
 17130 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17131 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17132 ;; Return value:  Size  Location     Type
 17133 ;;                  2   29[BANK0 ] PTR unsigned char 
 17134 ;; Registers used:
 17135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17136 ;; Tracked objects:
 17137 ;;		On entry : 0/0
 17138 ;;		On exit  : 0/0
 17139 ;;		Unchanged: 0/0
 17140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17141 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17142 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17144 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17145 ;;Total ram usage:        6 bytes
 17146 ;; Hardware stack levels used:    1
 17147 ;; Hardware stack levels required when called:   11
 17148 ;; This function calls:
 17149 ;;		Nothing
 17150 ;; This function is called by:
 17151 ;;		_Terminal
 17152 ;;		_Term_MainSm
 17153 ;; This function uses a non-reentrant model
 17154 ;;
 17155                           
 17156                           	psect	text69
 17157  005D72                     __ptext69:
 17158                           	opt stack 0
 17159  005D72                     _strcpy:
 17160                           	opt stack 15
 17161                           
 17162                           ; BSR set to: 0
 17163                           ;incstack = 0
 17164  005D72  C07D  F081         	movff	strcpy@to,strcpy@cp
 17165  005D76  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17166  005D7A  D005               	goto	l3298
 17167  005D7C  0100               	movlb	0	; () banked
 17168  005D7E  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17169  005D80  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17170  005D82  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17171  005D84  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17172  005D86                     l3298:
 17173                           
 17174                           ; BSR set to: 0
 17175  005D86  C07F  FFF6         	movff	strcpy@from,tblptrl
 17176  005D8A  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17177  005D8E                     	if	0	;tblptru may be non-zero
 17178  005D8E                     	endif
 17179  005D8E                     	if	0	;tblptru may be non-zero
 17180  005D8E                     	endif
 17181  005D8E  C081  FFD9         	movff	strcpy@cp,fsr2l
 17182  005D92  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17183  005D96  0008               	tblrd		*
 17184  005D98  CFF5 FFDF          	movff	tablat,indf2
 17185  005D9C  50DF               	movf	indf2,w,c
 17186  005D9E  B4D8               	btfsc	status,2,c
 17187  005DA0  0012               	return	
 17188  005DA2  D7EC               	goto	l3299
 17189  005DA4                     __end_of_strcpy:
 17190                           	opt stack 0
 17191                           tosu	equ	0xFFF
 17192                           tosh	equ	0xFFE
 17193                           tosl	equ	0xFFD
 17194                           pclath	equ	0xFFA
 17195                           tblptru	equ	0xFF8
 17196                           tblptrh	equ	0xFF7
 17197                           tblptrl	equ	0xFF6
 17198                           tablat	equ	0xFF5
 17199                           prodh	equ	0xFF4
 17200                           prodl	equ	0xFF3
 17201                           intcon	equ	0xFF2
 17202                           intcon2	equ	0xFF1
 17203                           intcon3	equ	0xFF0
 17204                           indf0	equ	0xFEF
 17205                           postinc0	equ	0xFEE
 17206                           plusw0	equ	0xFEB
 17207                           fsr0h	equ	0xFEA
 17208                           fsr0l	equ	0xFE9
 17209                           wreg	equ	0xFE8
 17210                           indf1	equ	0xFE7
 17211                           postinc1	equ	0xFE6
 17212                           postdec1	equ	0xFE5
 17213                           fsr1h	equ	0xFE2
 17214                           fsr1l	equ	0xFE1
 17215                           indf2	equ	0xFDF
 17216                           postinc2	equ	0xFDE
 17217                           postdec2	equ	0xFDD
 17218                           plusw2	equ	0xFDB
 17219                           fsr2h	equ	0xFDA
 17220                           fsr2l	equ	0xFD9
 17221                           status	equ	0xFD8
 17222                           
 17223 ;; *************** function _putUSBUSART *****************
 17224 ;; Defined at:
 17225 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17226 ;; Parameters:    Size  Location     Type
 17227 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17228 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17229 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17230 ;;		 -> RxBuffer(400), 
 17231 ;;  length          1   37[BANK0 ] unsigned char 
 17232 ;; Auto vars:     Size  Location     Type
 17233 ;;		None
 17234 ;; Return value:  Size  Location     Type
 17235 ;;                  1    wreg      void 
 17236 ;; Registers used:
 17237 ;;		wreg, status,2, status,0
 17238 ;; Tracked objects:
 17239 ;;		On entry : 0/0
 17240 ;;		On exit  : 0/0
 17241 ;;		Unchanged: 0/0
 17242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17243 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17246 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17247 ;;Total ram usage:        3 bytes
 17248 ;; Hardware stack levels used:    1
 17249 ;; Hardware stack levels required when called:   11
 17250 ;; This function calls:
 17251 ;;		Nothing
 17252 ;; This function is called by:
 17253 ;;		_Terminal
 17254 ;;		_Term_MainSm
 17255 ;;		_GsmGprsTerminal
 17256 ;; This function uses a non-reentrant model
 17257 ;;
 17258                           
 17259                           	psect	text70
 17260  006084                     __ptext70:
 17261                           	opt stack 0
 17262  006084                     _putUSBUSART:
 17263                           	opt stack 15
 17264                           
 17265                           ;usb_device_cdc.c: 584: ;
 17266                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17267                           
 17268                           ;incstack = 0
 17269  006084  0100               	movlb	0	; () banked
 17270  006086  51C6               	movf	_cdc_trf_state& (0+255),w,b
 17271  006088  A4D8               	btfss	status,2,c
 17272  00608A  0012               	return	
 17273                           
 17274                           ; BSR set to: 0
 17275                           ;usb_device_cdc.c: 586: {
 17276                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17277  00608C  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17278  006090  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17279                           
 17280                           ; BSR set to: 0
 17281  006094  C085  F0C5         	movff	putUSBUSART@length,_cdc_tx_len
 17282                           
 17283                           ; BSR set to: 0
 17284  006098  0E01               	movlw	1
 17285  00609A  0101               	movlb	1	; () banked
 17286  00609C  6FE1               	movwf	_cdc_mem_type& (0+255),b
 17287                           
 17288                           ; BSR set to: 1
 17289  00609E  0E01               	movlw	1
 17290  0060A0  0100               	movlb	0	; () banked
 17291  0060A2  6FC6               	movwf	_cdc_trf_state& (0+255),b
 17292  0060A4  0012               	return	
 17293  0060A6                     __end_of_putUSBUSART:
 17294                           	opt stack 0
 17295                           tosu	equ	0xFFF
 17296                           tosh	equ	0xFFE
 17297                           tosl	equ	0xFFD
 17298                           pclath	equ	0xFFA
 17299                           tblptru	equ	0xFF8
 17300                           tblptrh	equ	0xFF7
 17301                           tblptrl	equ	0xFF6
 17302                           tablat	equ	0xFF5
 17303                           prodh	equ	0xFF4
 17304                           prodl	equ	0xFF3
 17305                           intcon	equ	0xFF2
 17306                           intcon2	equ	0xFF1
 17307                           intcon3	equ	0xFF0
 17308                           indf0	equ	0xFEF
 17309                           postinc0	equ	0xFEE
 17310                           plusw0	equ	0xFEB
 17311                           fsr0h	equ	0xFEA
 17312                           fsr0l	equ	0xFE9
 17313                           wreg	equ	0xFE8
 17314                           indf1	equ	0xFE7
 17315                           postinc1	equ	0xFE6
 17316                           postdec1	equ	0xFE5
 17317                           fsr1h	equ	0xFE2
 17318                           fsr1l	equ	0xFE1
 17319                           indf2	equ	0xFDF
 17320                           postinc2	equ	0xFDE
 17321                           postdec2	equ	0xFDD
 17322                           plusw2	equ	0xFDB
 17323                           fsr2h	equ	0xFDA
 17324                           fsr2l	equ	0xFD9
 17325                           status	equ	0xFD8
 17326                           
 17327 ;; *************** function _itoa *****************
 17328 ;; Defined at:
 17329 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17330 ;; Parameters:    Size  Location     Type
 17331 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17332 ;;		 -> Terminal@Payload(80), 
 17333 ;;  val             2   53[BANK0 ] int 
 17334 ;;  base            2   55[BANK0 ] int 
 17335 ;; Auto vars:     Size  Location     Type
 17336 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17337 ;;		 -> Terminal@Payload(80), 
 17338 ;; Return value:  Size  Location     Type
 17339 ;;                  2   51[BANK0 ] PTR unsigned char 
 17340 ;; Registers used:
 17341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17342 ;; Tracked objects:
 17343 ;;		On entry : 0/0
 17344 ;;		On exit  : 0/0
 17345 ;;		Unchanged: 0/0
 17346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17347 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17348 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17350 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17351 ;;Total ram usage:        8 bytes
 17352 ;; Hardware stack levels used:    1
 17353 ;; Hardware stack levels required when called:   13
 17354 ;; This function calls:
 17355 ;;		_utoa
 17356 ;; This function is called by:
 17357 ;;		_Terminal
 17358 ;; This function uses a non-reentrant model
 17359 ;;
 17360                           
 17361                           	psect	text71
 17362  00596E                     __ptext71:
 17363                           	opt stack 0
 17364  00596E                     _itoa:
 17365                           	opt stack 12
 17366                           
 17367                           ; BSR set to: 0
 17368                           ;incstack = 0
 17369  00596E  C093  F099         	movff	itoa@buf,itoa@cp
 17370  005972  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17371  005976  0100               	movlb	0	; () banked
 17372  005978  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17373  00597A  D00C               	goto	l3046
 17374                           
 17375                           ; BSR set to: 0
 17376  00597C  C093  FFD9         	movff	itoa@buf,fsr2l
 17377  005980  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17378  005984  0E2D               	movlw	45
 17379  005986  6EDF               	movwf	indf2,c
 17380                           
 17381                           ; BSR set to: 0
 17382  005988  4B93               	infsnz	itoa@buf& (0+255),f,b
 17383  00598A  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17384                           
 17385                           ; BSR set to: 0
 17386  00598C  6D95               	negf	itoa@val& (0+255),b
 17387  00598E  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17388  005990  B0D8               	btfsc	status,0,c
 17389  005992  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17390  005994                     l3046:
 17391                           
 17392                           ; BSR set to: 0
 17393                           
 17394                           ; BSR set to: 0
 17395  005994  C093  F08A         	movff	itoa@buf,utoa@buf
 17396  005998  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17397  00599C  C095  F08C         	movff	itoa@val,utoa@val
 17398  0059A0  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17399  0059A4  C097  F08E         	movff	itoa@base,utoa@base
 17400  0059A8  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17401  0059AC  EC7B  F021         	call	_utoa	;wreg free
 17402  0059B0  0012               	return	
 17403  0059B2                     __end_of_itoa:
 17404                           	opt stack 0
 17405                           tosu	equ	0xFFF
 17406                           tosh	equ	0xFFE
 17407                           tosl	equ	0xFFD
 17408                           pclath	equ	0xFFA
 17409                           tblptru	equ	0xFF8
 17410                           tblptrh	equ	0xFF7
 17411                           tblptrl	equ	0xFF6
 17412                           tablat	equ	0xFF5
 17413                           prodh	equ	0xFF4
 17414                           prodl	equ	0xFF3
 17415                           intcon	equ	0xFF2
 17416                           intcon2	equ	0xFF1
 17417                           intcon3	equ	0xFF0
 17418                           indf0	equ	0xFEF
 17419                           postinc0	equ	0xFEE
 17420                           plusw0	equ	0xFEB
 17421                           fsr0h	equ	0xFEA
 17422                           fsr0l	equ	0xFE9
 17423                           wreg	equ	0xFE8
 17424                           indf1	equ	0xFE7
 17425                           postinc1	equ	0xFE6
 17426                           postdec1	equ	0xFE5
 17427                           fsr1h	equ	0xFE2
 17428                           fsr1l	equ	0xFE1
 17429                           indf2	equ	0xFDF
 17430                           postinc2	equ	0xFDE
 17431                           postdec2	equ	0xFDD
 17432                           plusw2	equ	0xFDB
 17433                           fsr2h	equ	0xFDA
 17434                           fsr2l	equ	0xFD9
 17435                           status	equ	0xFD8
 17436                           
 17437 ;; *************** function _utoa *****************
 17438 ;; Defined at:
 17439 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17440 ;; Parameters:    Size  Location     Type
 17441 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17442 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17443 ;;  val             2   44[BANK0 ] unsigned int 
 17444 ;;  base            2   46[BANK0 ] int 
 17445 ;; Auto vars:     Size  Location     Type
 17446 ;;  v               2   48[BANK0 ] unsigned int 
 17447 ;;  c               1   50[BANK0 ] unsigned char 
 17448 ;; Return value:  Size  Location     Type
 17449 ;;                  2   42[BANK0 ] PTR unsigned char 
 17450 ;; Registers used:
 17451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17452 ;; Tracked objects:
 17453 ;;		On entry : 0/0
 17454 ;;		On exit  : 0/0
 17455 ;;		Unchanged: 0/0
 17456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17457 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17458 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17460 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17461 ;;Total ram usage:        9 bytes
 17462 ;; Hardware stack levels used:    1
 17463 ;; Hardware stack levels required when called:   12
 17464 ;; This function calls:
 17465 ;;		___lwdiv
 17466 ;;		___lwmod
 17467 ;; This function is called by:
 17468 ;;		_Term_MainSm
 17469 ;;		_itoa
 17470 ;; This function uses a non-reentrant model
 17471 ;;
 17472                           
 17473                           	psect	text72
 17474  0042F6                     __ptext72:
 17475                           	opt stack 0
 17476  0042F6                     _utoa:
 17477                           	opt stack 14
 17478                           
 17479                           ;incstack = 0
 17480  0042F6  C08C  F090         	movff	utoa@val,utoa@v
 17481  0042FA  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17482  0042FE  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17483  004302  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17484  004306  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17485  00430A  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17486  00430E  ECA6  F02A         	call	___lwdiv	;wreg free
 17487  004312  C083  F090         	movff	?___lwdiv,utoa@v
 17488  004316  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17489  00431A  0100               	movlb	0	; () banked
 17490  00431C  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17491  00431E  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17492                           
 17493                           ; BSR set to: 0
 17494  004320  5190               	movf	utoa@v& (0+255),w,b
 17495  004322  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17496  004324  A4D8               	btfss	status,2,c
 17497  004326  D7EB               	goto	l3050
 17498                           
 17499                           ; BSR set to: 0
 17500                           
 17501                           ; BSR set to: 0
 17502  004328  C08A  FFD9         	movff	utoa@buf,fsr2l
 17503  00432C  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17504  004330  0E00               	movlw	0
 17505  004332  6EDF               	movwf	indf2,c
 17506                           
 17507                           ; BSR set to: 0
 17508  004334  078A               	decf	utoa@buf& (0+255),f,b
 17509  004336  A0D8               	btfss	status,0,c
 17510  004338  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17511  00433A                     
 17512                           ; BSR set to: 0
 17513                           
 17514                           ; BSR set to: 0
 17515  00433A  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17516  00433E  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17517  004342  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17518  004346  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17519  00434A  ECD9  F02C         	call	___lwmod	;wreg free
 17520  00434E  0100               	movlb	0	; () banked
 17521  004350  517D               	movf	?___lwmod& (0+255),w,b
 17522  004352  6F92               	movwf	utoa@c& (0+255),b
 17523                           
 17524                           ; BSR set to: 0
 17525  004354  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17526  004358  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17527  00435C  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17528  004360  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17529  004364  ECA6  F02A         	call	___lwdiv	;wreg free
 17530  004368  C083  F08C         	movff	?___lwdiv,utoa@val
 17531  00436C  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17532  004370  0E09               	movlw	9
 17533  004372  0100               	movlb	0	; () banked
 17534  004374  6592               	cpfsgt	utoa@c& (0+255),b
 17535  004376  D002               	goto	l3053
 17536                           
 17537                           ; BSR set to: 0
 17538  004378  0E07               	movlw	7
 17539  00437A  2792               	addwf	utoa@c& (0+255),f,b
 17540  00437C                     l3053:
 17541                           
 17542                           ; BSR set to: 0
 17543  00437C  0E30               	movlw	48
 17544  00437E  2792               	addwf	utoa@c& (0+255),f,b
 17545                           
 17546                           ; BSR set to: 0
 17547  004380  C08A  FFD9         	movff	utoa@buf,fsr2l
 17548  004384  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17549  004388  C092  FFDF         	movff	utoa@c,indf2
 17550                           
 17551                           ; BSR set to: 0
 17552  00438C  078A               	decf	utoa@buf& (0+255),f,b
 17553  00438E  A0D8               	btfss	status,0,c
 17554  004390  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17555                           
 17556                           ; BSR set to: 0
 17557  004392  518C               	movf	utoa@val& (0+255),w,b
 17558  004394  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17559  004396  A4D8               	btfss	status,2,c
 17560  004398  D7D0               	goto	l3052
 17561                           
 17562                           ; BSR set to: 0
 17563                           ;	Return value of _utoa is never used
 17564                           
 17565                           ; BSR set to: 0
 17566  00439A  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17567  00439C  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17568  00439E  0012               	return	
 17569  0043A0                     __end_of_utoa:
 17570                           	opt stack 0
 17571                           tosu	equ	0xFFF
 17572                           tosh	equ	0xFFE
 17573                           tosl	equ	0xFFD
 17574                           pclath	equ	0xFFA
 17575                           tblptru	equ	0xFF8
 17576                           tblptrh	equ	0xFF7
 17577                           tblptrl	equ	0xFF6
 17578                           tablat	equ	0xFF5
 17579                           prodh	equ	0xFF4
 17580                           prodl	equ	0xFF3
 17581                           intcon	equ	0xFF2
 17582                           intcon2	equ	0xFF1
 17583                           intcon3	equ	0xFF0
 17584                           indf0	equ	0xFEF
 17585                           postinc0	equ	0xFEE
 17586                           plusw0	equ	0xFEB
 17587                           fsr0h	equ	0xFEA
 17588                           fsr0l	equ	0xFE9
 17589                           wreg	equ	0xFE8
 17590                           indf1	equ	0xFE7
 17591                           postinc1	equ	0xFE6
 17592                           postdec1	equ	0xFE5
 17593                           fsr1h	equ	0xFE2
 17594                           fsr1l	equ	0xFE1
 17595                           indf2	equ	0xFDF
 17596                           postinc2	equ	0xFDE
 17597                           postdec2	equ	0xFDD
 17598                           plusw2	equ	0xFDB
 17599                           fsr2h	equ	0xFDA
 17600                           fsr2l	equ	0xFD9
 17601                           status	equ	0xFD8
 17602                           
 17603 ;; *************** function ___lwmod *****************
 17604 ;; Defined at:
 17605 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17606 ;; Parameters:    Size  Location     Type
 17607 ;;  dividend        2   29[BANK0 ] unsigned int 
 17608 ;;  divisor         2   31[BANK0 ] unsigned int 
 17609 ;; Auto vars:     Size  Location     Type
 17610 ;;  counter         1   33[BANK0 ] unsigned char 
 17611 ;; Return value:  Size  Location     Type
 17612 ;;                  2   29[BANK0 ] unsigned int 
 17613 ;; Registers used:
 17614 ;;		wreg, status,2, status,0
 17615 ;; Tracked objects:
 17616 ;;		On entry : 0/0
 17617 ;;		On exit  : 0/0
 17618 ;;		Unchanged: 0/0
 17619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17620 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17621 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17623 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17624 ;;Total ram usage:        5 bytes
 17625 ;; Hardware stack levels used:    1
 17626 ;; Hardware stack levels required when called:   11
 17627 ;; This function calls:
 17628 ;;		Nothing
 17629 ;; This function is called by:
 17630 ;;		_utoa
 17631 ;; This function uses a non-reentrant model
 17632 ;;
 17633                           
 17634                           	psect	text73
 17635  0059B2                     __ptext73:
 17636                           	opt stack 0
 17637  0059B2                     ___lwmod:
 17638                           	opt stack 14
 17639                           
 17640                           ; BSR set to: 0
 17641                           ;incstack = 0
 17642  0059B2  0100               	movlb	0	; () banked
 17643  0059B4  517F               	movf	___lwmod@divisor& (0+255),w,b
 17644  0059B6  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17645  0059B8  B4D8               	btfsc	status,2,c
 17646  0059BA  D018               	goto	l3148
 17647                           
 17648                           ; BSR set to: 0
 17649  0059BC  0E01               	movlw	1
 17650  0059BE  6F81               	movwf	___lwmod@counter& (0+255),b
 17651  0059C0  D004               	goto	l3143
 17652  0059C2                     
 17653                           ; BSR set to: 0
 17654                           
 17655                           ; BSR set to: 0
 17656  0059C2  90D8               	bcf	status,0,c
 17657  0059C4  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17658  0059C6  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17659  0059C8  2B81               	incf	___lwmod@counter& (0+255),f,b
 17660  0059CA                     l3143:
 17661                           
 17662                           ; BSR set to: 0
 17663                           
 17664                           ; BSR set to: 0
 17665  0059CA  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17666  0059CC  D7FA               	goto	l3144
 17667  0059CE                     u11210:
 17668                           
 17669                           ; BSR set to: 0
 17670                           
 17671                           ; BSR set to: 0
 17672                           
 17673                           ; BSR set to: 0
 17674  0059CE  517F               	movf	___lwmod@divisor& (0+255),w,b
 17675  0059D0  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17676  0059D2  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17677  0059D4  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17678  0059D6  A0D8               	btfss	status,0,c
 17679  0059D8  D004               	goto	l3147
 17680                           
 17681                           ; BSR set to: 0
 17682  0059DA  517F               	movf	___lwmod@divisor& (0+255),w,b
 17683  0059DC  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17684  0059DE  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17685  0059E0  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17686  0059E2                     l3147:
 17687                           
 17688                           ; BSR set to: 0
 17689                           
 17690                           ; BSR set to: 0
 17691  0059E2  90D8               	bcf	status,0,c
 17692  0059E4  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17693  0059E6  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17694                           
 17695                           ; BSR set to: 0
 17696  0059E8  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17697  0059EA  D7F1               	goto	u11210
 17698  0059EC                     l3148:
 17699                           
 17700                           ; BSR set to: 0
 17701                           
 17702                           ; BSR set to: 0
 17703  0059EC  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17704  0059F0  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17705                           
 17706                           ; BSR set to: 0
 17707  0059F4  0012               	return		;funcret
 17708  0059F6                     __end_of___lwmod:
 17709                           	opt stack 0
 17710                           tosu	equ	0xFFF
 17711                           tosh	equ	0xFFE
 17712                           tosl	equ	0xFFD
 17713                           pclath	equ	0xFFA
 17714                           tblptru	equ	0xFF8
 17715                           tblptrh	equ	0xFF7
 17716                           tblptrl	equ	0xFF6
 17717                           tablat	equ	0xFF5
 17718                           prodh	equ	0xFF4
 17719                           prodl	equ	0xFF3
 17720                           intcon	equ	0xFF2
 17721                           intcon2	equ	0xFF1
 17722                           intcon3	equ	0xFF0
 17723                           indf0	equ	0xFEF
 17724                           postinc0	equ	0xFEE
 17725                           plusw0	equ	0xFEB
 17726                           fsr0h	equ	0xFEA
 17727                           fsr0l	equ	0xFE9
 17728                           wreg	equ	0xFE8
 17729                           indf1	equ	0xFE7
 17730                           postinc1	equ	0xFE6
 17731                           postdec1	equ	0xFE5
 17732                           fsr1h	equ	0xFE2
 17733                           fsr1l	equ	0xFE1
 17734                           indf2	equ	0xFDF
 17735                           postinc2	equ	0xFDE
 17736                           postdec2	equ	0xFDD
 17737                           plusw2	equ	0xFDB
 17738                           fsr2h	equ	0xFDA
 17739                           fsr2l	equ	0xFD9
 17740                           status	equ	0xFD8
 17741                           
 17742 ;; *************** function _getsUSBUSART *****************
 17743 ;; Defined at:
 17744 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17745 ;; Parameters:    Size  Location     Type
 17746 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17747 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17748 ;;  len             1   38[BANK0 ] unsigned char 
 17749 ;; Auto vars:     Size  Location     Type
 17750 ;;		None
 17751 ;; Return value:  Size  Location     Type
 17752 ;;                  1    wreg      unsigned char 
 17753 ;; Registers used:
 17754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17755 ;; Tracked objects:
 17756 ;;		On entry : 0/0
 17757 ;;		On exit  : 0/0
 17758 ;;		Unchanged: 0/0
 17759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17760 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17762 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17763 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17764 ;;Total ram usage:        4 bytes
 17765 ;; Hardware stack levels used:    1
 17766 ;; Hardware stack levels required when called:   12
 17767 ;; This function calls:
 17768 ;;		_USBTransferOnePacket
 17769 ;; This function is called by:
 17770 ;;		_Terminal
 17771 ;;		_GsmGprsTerminal
 17772 ;; This function uses a non-reentrant model
 17773 ;;
 17774                           
 17775                           	psect	text74
 17776  0048A2                     __ptext74:
 17777                           	opt stack 0
 17778  0048A2                     _getsUSBUSART:
 17779                           	opt stack 13
 17780                           
 17781                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17782                           
 17783                           ; BSR set to: 0
 17784                           ;incstack = 0
 17785  0048A2  0E00               	movlw	0
 17786  0048A4  0100               	movlb	0	; () banked
 17787  0048A6  6FC7               	movwf	_cdc_rx_len& (0+255),b
 17788                           
 17789                           ; BSR set to: 0
 17790                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17791  0048A8  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17792  0048AA  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17793  0048AC  B4D8               	btfsc	status,2,c
 17794  0048AE  D006               	goto	u11900
 17795                           
 17796                           ; BSR set to: 0
 17797  0048B0  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17798  0048B4  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17799  0048B8  BEDF               	btfsc	indf2,7,c
 17800  0048BA  D03B               	goto	l1921
 17801  0048BC                     u11900:
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;usb_device_cdc.c: 493: {
 17805                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17806                           
 17807                           ; BSR set to: 0
 17808  0048BC  EE20 F001          	lfsr	2,1
 17809  0048C0  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17810  0048C2  26D9               	addwf	fsr2l,f,c
 17811  0048C4  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17812  0048C6  22DA               	addwfc	fsr2h,f,c
 17813  0048C8  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17814  0048CA  5CDE               	subwf	postinc2,w,c
 17815  0048CC  B0D8               	btfsc	status,0,c
 17816  0048CE  D008               	goto	l1924
 17817                           
 17818                           ; BSR set to: 0
 17819                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17820  0048D0  EE20 F001          	lfsr	2,1
 17821  0048D4  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17822  0048D6  26D9               	addwf	fsr2l,f,c
 17823  0048D8  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17824  0048DA  22DA               	addwfc	fsr2h,f,c
 17825  0048DC  50DF               	movf	indf2,w,c
 17826  0048DE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17827  0048E0                     l1924:
 17828                           
 17829                           ; BSR set to: 0
 17830                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17831                           
 17832                           ; BSR set to: 0
 17833  0048E0  0E00               	movlw	0
 17834  0048E2  6FC7               	movwf	_cdc_rx_len& (0+255),b
 17835  0048E4  D013               	goto	l1925
 17836  0048E6                     
 17837                           ; BSR set to: 0
 17838                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17839                           
 17840                           ; BSR set to: 0
 17841  0048E6  51C7               	movf	_cdc_rx_len& (0+255),w,b
 17842  0048E8  0D01               	mullw	1
 17843  0048EA  0E00               	movlw	low _cdc_data_rx
 17844  0048EC  24F3               	addwf	prodl,w,c
 17845  0048EE  6ED9               	movwf	fsr2l,c
 17846  0048F0  0E05               	movlw	high _cdc_data_rx
 17847  0048F2  20F4               	addwfc	prodh,w,c
 17848  0048F4  6EDA               	movwf	fsr2h,c
 17849  0048F6  51C7               	movf	_cdc_rx_len& (0+255),w,b
 17850  0048F8  0D01               	mullw	1
 17851  0048FA  50F3               	movf	prodl,w,c
 17852  0048FC  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17853  0048FE  6EE1               	movwf	fsr1l,c
 17854  004900  50F4               	movf	prodh,w,c
 17855  004902  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17856  004904  6EE2               	movwf	fsr1h,c
 17857  004906  CFDF FFE7          	movff	indf2,indf1
 17858                           
 17859                           ; BSR set to: 0
 17860  00490A  2BC7               	incf	_cdc_rx_len& (0+255),f,b
 17861  00490C                     l1925:
 17862                           
 17863                           ; BSR set to: 0
 17864                           
 17865                           ; BSR set to: 0
 17866  00490C  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17867  00490E  5DC7               	subwf	_cdc_rx_len& (0+255),w,b
 17868  004910  A0D8               	btfss	status,0,c
 17869  004912  D7E9               	goto	l1926
 17870                           
 17871                           ; BSR set to: 0
 17872                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17873                           
 17874                           ; BSR set to: 0
 17875  004914  0E00               	movlw	0
 17876  004916  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 17877  004918  0E00               	movlw	low _cdc_data_rx
 17878  00491A  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 17879  00491C  0E05               	movlw	high _cdc_data_rx
 17880  00491E  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17881  004920  0E40               	movlw	64
 17882  004922  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 17883  004924  0E02               	movlw	2
 17884  004926  EC15  F020         	call	_USBTransferOnePacket
 17885  00492A  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17886  00492E  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17887  004932                     l1921:
 17888                           
 17889                           ;usb_device_cdc.c: 513: }
 17890                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 17891  004932  0100               	movlb	0	; () banked
 17892  004934  51C7               	movf	_cdc_rx_len& (0+255),w,b
 17893  004936  0012               	return	
 17894  004938                     __end_of_getsUSBUSART:
 17895                           	opt stack 0
 17896                           tosu	equ	0xFFF
 17897                           tosh	equ	0xFFE
 17898                           tosl	equ	0xFFD
 17899                           pclath	equ	0xFFA
 17900                           tblptru	equ	0xFF8
 17901                           tblptrh	equ	0xFF7
 17902                           tblptrl	equ	0xFF6
 17903                           tablat	equ	0xFF5
 17904                           prodh	equ	0xFF4
 17905                           prodl	equ	0xFF3
 17906                           intcon	equ	0xFF2
 17907                           intcon2	equ	0xFF1
 17908                           intcon3	equ	0xFF0
 17909                           indf0	equ	0xFEF
 17910                           postinc0	equ	0xFEE
 17911                           plusw0	equ	0xFEB
 17912                           fsr0h	equ	0xFEA
 17913                           fsr0l	equ	0xFE9
 17914                           wreg	equ	0xFE8
 17915                           indf1	equ	0xFE7
 17916                           postinc1	equ	0xFE6
 17917                           postdec1	equ	0xFE5
 17918                           fsr1h	equ	0xFE2
 17919                           fsr1l	equ	0xFE1
 17920                           indf2	equ	0xFDF
 17921                           postinc2	equ	0xFDE
 17922                           postdec2	equ	0xFDD
 17923                           plusw2	equ	0xFDB
 17924                           fsr2h	equ	0xFDA
 17925                           fsr2l	equ	0xFD9
 17926                           status	equ	0xFD8
 17927                           
 17928 ;; *************** function _USBTransferOnePacket *****************
 17929 ;; Defined at:
 17930 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 17931 ;; Parameters:    Size  Location     Type
 17932 ;;  ep              1    wreg     unsigned char 
 17933 ;;  dir             1   29[BANK0 ] unsigned char 
 17934 ;;  data            2   30[BANK0 ] PTR unsigned char 
 17935 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17936 ;;  len             1   32[BANK0 ] unsigned char 
 17937 ;; Auto vars:     Size  Location     Type
 17938 ;;  ep              1   33[BANK0 ] unsigned char 
 17939 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 17940 ;;		 -> NULL(0), BDT(48), 
 17941 ;; Return value:  Size  Location     Type
 17942 ;;                  2   29[BANK0 ] PTR void 
 17943 ;; Registers used:
 17944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17945 ;; Tracked objects:
 17946 ;;		On entry : 0/0
 17947 ;;		On exit  : 0/0
 17948 ;;		Unchanged: 0/0
 17949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17950 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17951 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17953 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17954 ;;Total ram usage:        7 bytes
 17955 ;; Hardware stack levels used:    1
 17956 ;; Hardware stack levels required when called:   11
 17957 ;; This function calls:
 17958 ;;		Nothing
 17959 ;; This function is called by:
 17960 ;;		_CDCInitEP
 17961 ;;		_getsUSBUSART
 17962 ;;		_CDCTxService
 17963 ;;		_USBCDCEventHandler
 17964 ;; This function uses a non-reentrant model
 17965 ;;
 17966                           
 17967                           	psect	text75
 17968  00402A                     __ptext75:
 17969                           	opt stack 0
 17970  00402A                     _USBTransferOnePacket:
 17971                           	opt stack 13
 17972                           
 17973                           ; BSR set to: 0
 17974                           ;incstack = 0
 17975                           ;USBTransferOnePacket@ep stored from wreg
 17976  00402A  0100               	movlb	0	; () banked
 17977  00402C  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 17978                           
 17979                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 17980                           ;usb_device.c: 1018: if(dir != 0)
 17981  00402E  0100               	movlb	0	; () banked
 17982  004030  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17983  004032  B4D8               	btfsc	status,2,c
 17984  004034  D007               	goto	l1645
 17985                           
 17986                           ; BSR set to: 0
 17987                           ;usb_device.c: 1019: {
 17988                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 17989  004036  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17990  004038  0D02               	mullw	2
 17991  00403A  0EB6               	movlw	low _pBDTEntryIn
 17992  00403C  24F3               	addwf	prodl,w,c
 17993  00403E  6ED9               	movwf	fsr2l,c
 17994  004040  0E00               	movlw	high _pBDTEntryIn
 17995  004042  D006               	goto	L16
 17996  004044                     l1645:
 17997                           
 17998                           ; BSR set to: 0
 17999                           ;usb_device.c: 1023: else
 18000                           ;usb_device.c: 1024: {
 18001                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18002                           
 18003                           ; BSR set to: 0
 18004  004044  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18005  004046  0D02               	mullw	2
 18006  004048  0E0E               	movlw	low _pBDTEntryOut
 18007  00404A  24F3               	addwf	prodl,w,c
 18008  00404C  6ED9               	movwf	fsr2l,c
 18009  00404E  0E03               	movlw	high _pBDTEntryOut
 18010  004050                     L16:
 18011  004050  20F4               	addwfc	prodh,w,c
 18012  004052  6EDA               	movwf	fsr2h,c
 18013  004054  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18014  004058  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18015                           
 18016                           ; BSR set to: 0
 18017                           ;usb_device.c: 1027: }
 18018                           ;usb_device.c: 1031: if(handle == 0)
 18019                           
 18020                           ; BSR set to: 0
 18021  00405C  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18022  00405E  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18023  004060  A4D8               	btfss	status,2,c
 18024  004062  D005               	goto	l1647
 18025                           
 18026                           ; BSR set to: 0
 18027                           ;usb_device.c: 1032: {
 18028                           ;usb_device.c: 1033: return 0;
 18029  004064  0E00               	movlw	0
 18030  004066  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18031  004068  0E00               	movlw	0
 18032  00406A  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18033                           
 18034                           ; BSR set to: 0
 18035  00406C  0012               	return	
 18036  00406E                     l1647:
 18037                           
 18038                           ; BSR set to: 0
 18039                           ;usb_device.c: 1034: }
 18040                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18041                           
 18042                           ; BSR set to: 0
 18043  00406E  EE20 F002          	lfsr	2,2
 18044  004072  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18045  004074  26D9               	addwf	fsr2l,f,c
 18046  004076  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18047  004078  22DA               	addwfc	fsr2h,f,c
 18048  00407A  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18049  00407E  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18050                           
 18051                           ;usb_device.c: 1048: handle->CNT = len;
 18052  004082  EE20 F001          	lfsr	2,1
 18053  004086  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18054  004088  26D9               	addwf	fsr2l,f,c
 18055  00408A  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18056  00408C  22DA               	addwfc	fsr2h,f,c
 18057  00408E  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18058                           
 18059                           ; BSR set to: 0
 18060                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18061  004092  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18062  004096  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18063  00409A  0E40               	movlw	64
 18064  00409C  16DF               	andwf	indf2,f,c
 18065                           
 18066                           ; BSR set to: 0
 18067                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18068  00409E  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18069  0040A2  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18070  0040A6  0E00               	movlw	0
 18071  0040A8  86DB               	bsf	plusw2,3,c
 18072                           
 18073                           ; BSR set to: 0
 18074                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18075  0040AA  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18076  0040AE  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18077  0040B2  0E00               	movlw	0
 18078  0040B4  8EDB               	bsf	plusw2,7,c
 18079                           
 18080                           ; BSR set to: 0
 18081                           ;usb_device.c: 1054: if(dir != 0)
 18082  0040B6  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18083  0040B8  B4D8               	btfsc	status,2,c
 18084  0040BA  D007               	goto	l1649
 18085                           
 18086                           ; BSR set to: 0
 18087                           ;usb_device.c: 1055: {
 18088                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18089  0040BC  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18090  0040BE  0D02               	mullw	2
 18091  0040C0  0EB6               	movlw	low _pBDTEntryIn
 18092  0040C2  24F3               	addwf	prodl,w,c
 18093  0040C4  6ED9               	movwf	fsr2l,c
 18094  0040C6  0E00               	movlw	high _pBDTEntryIn
 18095  0040C8  D006               	goto	L17
 18096  0040CA                     l1649:
 18097                           
 18098                           ; BSR set to: 0
 18099                           ;usb_device.c: 1059: else
 18100                           ;usb_device.c: 1060: {
 18101                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18102                           
 18103                           ; BSR set to: 0
 18104  0040CA  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18105  0040CC  0D02               	mullw	2
 18106  0040CE  0E0E               	movlw	low _pBDTEntryOut
 18107  0040D0  24F3               	addwf	prodl,w,c
 18108  0040D2  6ED9               	movwf	fsr2l,c
 18109  0040D4  0E03               	movlw	high _pBDTEntryOut
 18110  0040D6                     L17:
 18111  0040D6  20F4               	addwfc	prodh,w,c
 18112  0040D8  6EDA               	movwf	fsr2h,c
 18113  0040DA  0E04               	movlw	4
 18114  0040DC  1ADF               	xorwf	indf2,f,c
 18115                           
 18116                           ; BSR set to: 0
 18117                           ;usb_device.c: 1063: }
 18118                           ;usb_device.c: 1064: return (void*)handle;
 18119                           
 18120                           ; BSR set to: 0
 18121  0040DE  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18122  0040E2  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18123  0040E6  0012               	return	
 18124  0040E8                     __end_of_USBTransferOnePacket:
 18125                           	opt stack 0
 18126                           tosu	equ	0xFFF
 18127                           tosh	equ	0xFFE
 18128                           tosl	equ	0xFFD
 18129                           pclath	equ	0xFFA
 18130                           tblptru	equ	0xFF8
 18131                           tblptrh	equ	0xFF7
 18132                           tblptrl	equ	0xFF6
 18133                           tablat	equ	0xFF5
 18134                           prodh	equ	0xFF4
 18135                           prodl	equ	0xFF3
 18136                           intcon	equ	0xFF2
 18137                           intcon2	equ	0xFF1
 18138                           intcon3	equ	0xFF0
 18139                           indf0	equ	0xFEF
 18140                           postinc0	equ	0xFEE
 18141                           plusw0	equ	0xFEB
 18142                           fsr0h	equ	0xFEA
 18143                           fsr0l	equ	0xFE9
 18144                           wreg	equ	0xFE8
 18145                           indf1	equ	0xFE7
 18146                           postinc1	equ	0xFE6
 18147                           postdec1	equ	0xFE5
 18148                           fsr1h	equ	0xFE2
 18149                           fsr1l	equ	0xFE1
 18150                           indf2	equ	0xFDF
 18151                           postinc2	equ	0xFDE
 18152                           postdec2	equ	0xFDD
 18153                           plusw2	equ	0xFDB
 18154                           fsr2h	equ	0xFDA
 18155                           fsr2l	equ	0xFD9
 18156                           status	equ	0xFD8
 18157                           
 18158 ;; *************** function _atoi *****************
 18159 ;; Defined at:
 18160 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18161 ;; Parameters:    Size  Location     Type
 18162 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18163 ;;		 -> Terminal@Len(4), 
 18164 ;; Auto vars:     Size  Location     Type
 18165 ;;  a               2   40[BANK0 ] int 
 18166 ;;  sign            1   39[BANK0 ] unsigned char 
 18167 ;; Return value:  Size  Location     Type
 18168 ;;                  2   35[BANK0 ] int 
 18169 ;; Registers used:
 18170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18171 ;; Tracked objects:
 18172 ;;		On entry : 0/0
 18173 ;;		On exit  : 0/0
 18174 ;;		Unchanged: 0/0
 18175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18176 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18177 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18178 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18179 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18180 ;;Total ram usage:        7 bytes
 18181 ;; Hardware stack levels used:    1
 18182 ;; Hardware stack levels required when called:   12
 18183 ;; This function calls:
 18184 ;;		___wmul
 18185 ;;		_isdigit
 18186 ;; This function is called by:
 18187 ;;		_Terminal
 18188 ;; This function uses a non-reentrant model
 18189 ;;
 18190                           
 18191                           	psect	text76
 18192  0036A4                     __ptext76:
 18193                           	opt stack 0
 18194  0036A4                     _atoi:
 18195                           	opt stack 13
 18196                           
 18197                           ; BSR set to: 0
 18198                           ;incstack = 0
 18199  0036A4  D003               	goto	l2859
 18200  0036A6  0100               	movlb	0	; () banked
 18201  0036A8  4B83               	infsnz	atoi@s& (0+255),f,b
 18202  0036AA  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18203  0036AC                     l2859:
 18204                           
 18205                           ; BSR set to: 0
 18206  0036AC  C083  FFD9         	movff	atoi@s,fsr2l
 18207  0036B0  C084  FFDA         	movff	atoi@s+1,fsr2h
 18208  0036B4  0E20               	movlw	32
 18209  0036B6  18DE               	xorwf	postinc2,w,c
 18210  0036B8  B4D8               	btfsc	status,2,c
 18211  0036BA  D7F5               	goto	l2860
 18212  0036BC  C083  FFD9         	movff	atoi@s,fsr2l
 18213  0036C0  C084  FFDA         	movff	atoi@s+1,fsr2h
 18214  0036C4  0E09               	movlw	9
 18215  0036C6  18DE               	xorwf	postinc2,w,c
 18216  0036C8  B4D8               	btfsc	status,2,c
 18217  0036CA  D7ED               	goto	l2860
 18218  0036CC  0E00               	movlw	0
 18219  0036CE  0100               	movlb	0	; () banked
 18220  0036D0  6F89               	movwf	(atoi@a+1)& (0+255),b
 18221  0036D2  0E00               	movlw	0
 18222  0036D4  6F88               	movwf	atoi@a& (0+255),b
 18223  0036D6  0E00               	movlw	0
 18224  0036D8  6F87               	movwf	atoi@sign& (0+255),b
 18225                           
 18226                           ; BSR set to: 0
 18227  0036DA  C083  FFD9         	movff	atoi@s,fsr2l
 18228  0036DE  C084  FFDA         	movff	atoi@s+1,fsr2h
 18229  0036E2  0E2D               	movlw	45
 18230  0036E4  18DE               	xorwf	postinc2,w,c
 18231  0036E6  A4D8               	btfss	status,2,c
 18232  0036E8  D002               	goto	l2862
 18233                           
 18234                           ; BSR set to: 0
 18235  0036EA  2B87               	incf	atoi@sign& (0+255),f,b
 18236  0036EC  D026               	goto	l13032
 18237  0036EE                     l2862:
 18238                           
 18239                           ; BSR set to: 0
 18240                           
 18241                           ; BSR set to: 0
 18242  0036EE  C083  FFD9         	movff	atoi@s,fsr2l
 18243  0036F2  C084  FFDA         	movff	atoi@s+1,fsr2h
 18244  0036F6  0E2B               	movlw	43
 18245  0036F8  18DE               	xorwf	postinc2,w,c
 18246  0036FA  A4D8               	btfss	status,2,c
 18247  0036FC  D020               	goto	l2865
 18248  0036FE  D01D               	goto	l13032
 18249  003700                     
 18250                           ; BSR set to: 0
 18251  003700  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18252  003704  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18253  003708  0E00               	movlw	0
 18254  00370A  0100               	movlb	0	; () banked
 18255  00370C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18256  00370E  0E0A               	movlw	10
 18257  003710  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18258  003712  ECA0  F02F         	call	___wmul	;wreg free
 18259  003716  C083  FFD9         	movff	atoi@s,fsr2l
 18260  00371A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18261  00371E  50DF               	movf	indf2,w,c
 18262  003720  0100               	movlb	0	; () banked
 18263  003722  6F85               	movwf	??_atoi& (0+255),b
 18264  003724  6B86               	clrf	(??_atoi+1)& (0+255),b
 18265  003726  517D               	movf	?___wmul& (0+255),w,b
 18266  003728  2785               	addwf	??_atoi& (0+255),f,b
 18267  00372A  517E               	movf	(?___wmul+1)& (0+255),w,b
 18268  00372C  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18269  00372E  0ED0               	movlw	208
 18270  003730  2585               	addwf	??_atoi& (0+255),w,b
 18271  003732  6F88               	movwf	atoi@a& (0+255),b
 18272  003734  0EFF               	movlw	255
 18273  003736  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18274  003738  6F89               	movwf	(atoi@a+1)& (0+255),b
 18275  00373A                     l13032:
 18276                           
 18277                           ; BSR set to: 0
 18278  00373A  4B83               	infsnz	atoi@s& (0+255),f,b
 18279  00373C  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18280  00373E                     l2865:
 18281                           
 18282                           ; BSR set to: 0
 18283                           
 18284                           ; BSR set to: 0
 18285  00373E  C083  FFD9         	movff	atoi@s,fsr2l
 18286  003742  C084  FFDA         	movff	atoi@s+1,fsr2h
 18287  003746  50DF               	movf	indf2,w,c
 18288  003748  EC53  F030         	call	_isdigit
 18289  00374C  B0D8               	btfsc	status,0,c
 18290  00374E  D7D8               	goto	l2866
 18291  003750  0100               	movlb	0	; () banked
 18292  003752  5187               	movf	atoi@sign& (0+255),w,b
 18293  003754  B4D8               	btfsc	status,2,c
 18294  003756  D00D               	goto	l2868
 18295                           
 18296                           ; BSR set to: 0
 18297  003758  C088  F085         	movff	atoi@a,??_atoi
 18298  00375C  C089  F086         	movff	atoi@a+1,??_atoi+1
 18299  003760  1F85               	comf	??_atoi& (0+255),f,b
 18300  003762  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18301  003764  4B85               	infsnz	??_atoi& (0+255),f,b
 18302  003766  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18303  003768  C085  F083         	movff	??_atoi,?_atoi
 18304  00376C  C086  F084         	movff	??_atoi+1,?_atoi+1
 18305  003770  0012               	return	
 18306  003772                     l2868:
 18307                           
 18308                           ; BSR set to: 0
 18309  003772  C088  F083         	movff	atoi@a,?_atoi
 18310  003776  C089  F084         	movff	atoi@a+1,?_atoi+1
 18311                           
 18312                           ; BSR set to: 0
 18313  00377A  0012               	return		;funcret
 18314  00377C                     __end_of_atoi:
 18315                           	opt stack 0
 18316                           tosu	equ	0xFFF
 18317                           tosh	equ	0xFFE
 18318                           tosl	equ	0xFFD
 18319                           pclath	equ	0xFFA
 18320                           tblptru	equ	0xFF8
 18321                           tblptrh	equ	0xFF7
 18322                           tblptrl	equ	0xFF6
 18323                           tablat	equ	0xFF5
 18324                           prodh	equ	0xFF4
 18325                           prodl	equ	0xFF3
 18326                           intcon	equ	0xFF2
 18327                           intcon2	equ	0xFF1
 18328                           intcon3	equ	0xFF0
 18329                           indf0	equ	0xFEF
 18330                           postinc0	equ	0xFEE
 18331                           plusw0	equ	0xFEB
 18332                           fsr0h	equ	0xFEA
 18333                           fsr0l	equ	0xFE9
 18334                           wreg	equ	0xFE8
 18335                           indf1	equ	0xFE7
 18336                           postinc1	equ	0xFE6
 18337                           postdec1	equ	0xFE5
 18338                           fsr1h	equ	0xFE2
 18339                           fsr1l	equ	0xFE1
 18340                           indf2	equ	0xFDF
 18341                           postinc2	equ	0xFDE
 18342                           postdec2	equ	0xFDD
 18343                           plusw2	equ	0xFDB
 18344                           fsr2h	equ	0xFDA
 18345                           fsr2l	equ	0xFD9
 18346                           status	equ	0xFD8
 18347                           
 18348 ;; *************** function _isdigit *****************
 18349 ;; Defined at:
 18350 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18351 ;; Parameters:    Size  Location     Type
 18352 ;;  c               1    wreg     unsigned char 
 18353 ;; Auto vars:     Size  Location     Type
 18354 ;;  c               1   31[BANK0 ] unsigned char 
 18355 ;; Return value:  Size  Location     Type
 18356 ;;		None               void
 18357 ;; Registers used:
 18358 ;;		wreg, status,2, status,0
 18359 ;; Tracked objects:
 18360 ;;		On entry : 0/0
 18361 ;;		On exit  : 0/0
 18362 ;;		Unchanged: 0/0
 18363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18365 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18366 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18367 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18368 ;;Total ram usage:        3 bytes
 18369 ;; Hardware stack levels used:    1
 18370 ;; Hardware stack levels required when called:   11
 18371 ;; This function calls:
 18372 ;;		Nothing
 18373 ;; This function is called by:
 18374 ;;		_atoi
 18375 ;;		_strtol
 18376 ;;		_xtoi
 18377 ;;		_isxdigit
 18378 ;; This function uses a non-reentrant model
 18379 ;;
 18380                           
 18381                           	psect	text77
 18382  0060A6                     __ptext77:
 18383                           	opt stack 0
 18384  0060A6                     _isdigit:
 18385                           	opt stack 12
 18386                           
 18387                           ; BSR set to: 0
 18388                           ;incstack = 0
 18389                           ;isdigit@c stored from wreg
 18390  0060A6  0100               	movlb	0	; () banked
 18391  0060A8  6F7F               	movwf	isdigit@c& (0+255),b
 18392  0060AA  0E00               	movlw	0
 18393  0060AC  0100               	movlb	0	; () banked
 18394  0060AE  6F7E               	movwf	_isdigit$6254& (0+255),b
 18395                           
 18396                           ; BSR set to: 0
 18397  0060B0  0E3A               	movlw	58
 18398  0060B2  617F               	cpfslt	isdigit@c& (0+255),b
 18399  0060B4  D005               	goto	l3040
 18400                           
 18401                           ; BSR set to: 0
 18402  0060B6  0E2F               	movlw	47
 18403  0060B8  657F               	cpfsgt	isdigit@c& (0+255),b
 18404  0060BA  D002               	goto	l3040
 18405                           
 18406                           ; BSR set to: 0
 18407  0060BC  0E01               	movlw	1
 18408  0060BE  6F7E               	movwf	_isdigit$6254& (0+255),b
 18409  0060C0                     l3040:
 18410                           
 18411                           ; BSR set to: 0
 18412                           
 18413                           ; BSR set to: 0
 18414  0060C0  C07E  F07D         	movff	_isdigit$6254,??_isdigit
 18415  0060C4  317D               	rrcf	??_isdigit& (0+255),w,b
 18416  0060C6  0012               	return	
 18417  0060C8                     __end_of_isdigit:
 18418                           	opt stack 0
 18419                           tosu	equ	0xFFF
 18420                           tosh	equ	0xFFE
 18421                           tosl	equ	0xFFD
 18422                           pclath	equ	0xFFA
 18423                           tblptru	equ	0xFF8
 18424                           tblptrh	equ	0xFF7
 18425                           tblptrl	equ	0xFF6
 18426                           tablat	equ	0xFF5
 18427                           prodh	equ	0xFF4
 18428                           prodl	equ	0xFF3
 18429                           intcon	equ	0xFF2
 18430                           intcon2	equ	0xFF1
 18431                           intcon3	equ	0xFF0
 18432                           indf0	equ	0xFEF
 18433                           postinc0	equ	0xFEE
 18434                           plusw0	equ	0xFEB
 18435                           fsr0h	equ	0xFEA
 18436                           fsr0l	equ	0xFE9
 18437                           wreg	equ	0xFE8
 18438                           indf1	equ	0xFE7
 18439                           postinc1	equ	0xFE6
 18440                           postdec1	equ	0xFE5
 18441                           fsr1h	equ	0xFE2
 18442                           fsr1l	equ	0xFE1
 18443                           indf2	equ	0xFDF
 18444                           postinc2	equ	0xFDE
 18445                           postdec2	equ	0xFDD
 18446                           plusw2	equ	0xFDB
 18447                           fsr2h	equ	0xFDA
 18448                           fsr2l	equ	0xFD9
 18449                           status	equ	0xFD8
 18450                           
 18451 ;; *************** function _Rtcm_SetRtccDate *****************
 18452 ;; Defined at:
 18453 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18454 ;; Parameters:    Size  Location     Type
 18455 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18456 ;; Auto vars:     Size  Location     Type
 18457 ;;		None
 18458 ;; Return value:  Size  Location     Type
 18459 ;;                  1    wreg      void 
 18460 ;; Registers used:
 18461 ;;		wreg, status,2, status,0, cstack
 18462 ;; Tracked objects:
 18463 ;;		On entry : 0/0
 18464 ;;		On exit  : 0/0
 18465 ;;		Unchanged: 0/0
 18466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18467 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18470 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18471 ;;Total ram usage:        8 bytes
 18472 ;; Hardware stack levels used:    1
 18473 ;; Hardware stack levels required when called:   13
 18474 ;; This function calls:
 18475 ;;		_Rtcc_LockRtc
 18476 ;;		_Rtcc_SetRtccValue
 18477 ;;		_Rtcc_UnlockRtc
 18478 ;; This function is called by:
 18479 ;;		_Rtcm_MainTask
 18480 ;; This function uses a non-reentrant model
 18481 ;;
 18482                           
 18483                           	psect	text78
 18484  005450                     __ptext78:
 18485                           	opt stack 0
 18486  005450                     _Rtcm_SetRtccDate:
 18487                           	opt stack 14
 18488                           
 18489                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18490                           
 18491                           ; BSR set to: 0
 18492                           ;incstack = 0
 18493  005450  EC6A  F031         	call	_Rtcc_UnlockRtc	;wreg free
 18494                           
 18495                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18496  005454  0100               	movlb	0	; () banked
 18497  005456  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18498  005458  0F30               	addlw	48
 18499  00545A  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18500  00545C  0E00               	movlw	0
 18501  00545E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18502                           
 18503                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18504  005462  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18505  005466  0E01               	movlw	1
 18506  005468  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18507                           
 18508                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18509  00546C  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18510  005470  0E02               	movlw	2
 18511  005472  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18512                           
 18513                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18514  005476  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18515  00547A  0E03               	movlw	3
 18516  00547C  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18517                           
 18518                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18519  005480  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18520  005484  0E04               	movlw	4
 18521  005486  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18522                           
 18523                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18524  00548A  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18525  00548E  0E05               	movlw	5
 18526  005490  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18527                           
 18528                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18529  005494  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18530  005498  0E06               	movlw	6
 18531  00549A  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18532                           
 18533                           ;rtcm.c: 191: Rtcc_LockRtc();
 18534  00549E  EC72  F031         	call	_Rtcc_LockRtc	;wreg free
 18535  0054A2  0012               	return		;funcret
 18536  0054A4                     __end_of_Rtcm_SetRtccDate:
 18537                           	opt stack 0
 18538                           tosu	equ	0xFFF
 18539                           tosh	equ	0xFFE
 18540                           tosl	equ	0xFFD
 18541                           pclath	equ	0xFFA
 18542                           tblptru	equ	0xFF8
 18543                           tblptrh	equ	0xFF7
 18544                           tblptrl	equ	0xFF6
 18545                           tablat	equ	0xFF5
 18546                           prodh	equ	0xFF4
 18547                           prodl	equ	0xFF3
 18548                           intcon	equ	0xFF2
 18549                           intcon2	equ	0xFF1
 18550                           intcon3	equ	0xFF0
 18551                           indf0	equ	0xFEF
 18552                           postinc0	equ	0xFEE
 18553                           plusw0	equ	0xFEB
 18554                           fsr0h	equ	0xFEA
 18555                           fsr0l	equ	0xFE9
 18556                           wreg	equ	0xFE8
 18557                           indf1	equ	0xFE7
 18558                           postinc1	equ	0xFE6
 18559                           postdec1	equ	0xFE5
 18560                           fsr1h	equ	0xFE2
 18561                           fsr1l	equ	0xFE1
 18562                           indf2	equ	0xFDF
 18563                           postinc2	equ	0xFDE
 18564                           postdec2	equ	0xFDD
 18565                           plusw2	equ	0xFDB
 18566                           fsr2h	equ	0xFDA
 18567                           fsr2l	equ	0xFD9
 18568                           status	equ	0xFD8
 18569                           
 18570 ;; *************** function _Rtcc_UnlockRtc *****************
 18571 ;; Defined at:
 18572 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18573 ;; Parameters:    Size  Location     Type
 18574 ;;		None
 18575 ;; Auto vars:     Size  Location     Type
 18576 ;;		None
 18577 ;; Return value:  Size  Location     Type
 18578 ;;                  1    wreg      void 
 18579 ;; Registers used:
 18580 ;;		None
 18581 ;; Tracked objects:
 18582 ;;		On entry : 0/0
 18583 ;;		On exit  : 0/0
 18584 ;;		Unchanged: 0/0
 18585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18590 ;;Total ram usage:        0 bytes
 18591 ;; Hardware stack levels used:    1
 18592 ;; Hardware stack levels required when called:   11
 18593 ;; This function calls:
 18594 ;;		Nothing
 18595 ;; This function is called by:
 18596 ;;		_Rtcm_MainTask
 18597 ;;		_Rtcm_SetRtccDate
 18598 ;;		_Rtcm_SetRtccAlarm
 18599 ;; This function uses a non-reentrant model
 18600 ;;
 18601                           
 18602                           	psect	text79
 18603  0062D4                     __ptext79:
 18604                           	opt stack 0
 18605  0062D4                     _Rtcc_UnlockRtc:
 18606                           	opt stack 15
 18607                           
 18608                           ;incstack = 0
 18609  0062D4  010F               	movlb	15	;# 
 18610  0062D6  0E55               	movlw	85	;# 
 18611  0062D8  6EA7               	movwf	4007,c	;# 
 18612  0062DA  0EAA               	movlw	170	;# 
 18613  0062DC  6EA7               	movwf	4007,c	;# 
 18614                           
 18615                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18616  0062DE  010F               	movlb	15	; () banked
 18617  0062E0  8B3F               	bsf	63,5,b	;volatile
 18618                           
 18619                           ; BSR set to: 15
 18620  0062E2  0012               	return		;funcret
 18621  0062E4                     __end_of_Rtcc_UnlockRtc:
 18622                           	opt stack 0
 18623                           tosu	equ	0xFFF
 18624                           tosh	equ	0xFFE
 18625                           tosl	equ	0xFFD
 18626                           pclath	equ	0xFFA
 18627                           tblptru	equ	0xFF8
 18628                           tblptrh	equ	0xFF7
 18629                           tblptrl	equ	0xFF6
 18630                           tablat	equ	0xFF5
 18631                           prodh	equ	0xFF4
 18632                           prodl	equ	0xFF3
 18633                           intcon	equ	0xFF2
 18634                           intcon2	equ	0xFF1
 18635                           intcon3	equ	0xFF0
 18636                           indf0	equ	0xFEF
 18637                           postinc0	equ	0xFEE
 18638                           plusw0	equ	0xFEB
 18639                           fsr0h	equ	0xFEA
 18640                           fsr0l	equ	0xFE9
 18641                           wreg	equ	0xFE8
 18642                           indf1	equ	0xFE7
 18643                           postinc1	equ	0xFE6
 18644                           postdec1	equ	0xFE5
 18645                           fsr1h	equ	0xFE2
 18646                           fsr1l	equ	0xFE1
 18647                           indf2	equ	0xFDF
 18648                           postinc2	equ	0xFDE
 18649                           postdec2	equ	0xFDD
 18650                           plusw2	equ	0xFDB
 18651                           fsr2h	equ	0xFDA
 18652                           fsr2l	equ	0xFD9
 18653                           status	equ	0xFD8
 18654                           
 18655 ;; *************** function _Rtcc_SetRtccValue *****************
 18656 ;; Defined at:
 18657 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18658 ;; Parameters:    Size  Location     Type
 18659 ;;  RtccPtrVal      1    wreg     enum E7757
 18660 ;;  Value           1   37[BANK0 ] unsigned char 
 18661 ;; Auto vars:     Size  Location     Type
 18662 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18663 ;; Return value:  Size  Location     Type
 18664 ;;                  1    wreg      void 
 18665 ;; Registers used:
 18666 ;;		wreg, status,2, status,0, cstack
 18667 ;; Tracked objects:
 18668 ;;		On entry : 0/0
 18669 ;;		On exit  : 0/0
 18670 ;;		Unchanged: 0/0
 18671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18672 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18674 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18675 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18676 ;;Total ram usage:        4 bytes
 18677 ;; Hardware stack levels used:    1
 18678 ;; Hardware stack levels required when called:   12
 18679 ;; This function calls:
 18680 ;;		___awdiv
 18681 ;;		___awmod
 18682 ;; This function is called by:
 18683 ;;		_Rtcm_SetRtccDate
 18684 ;; This function uses a non-reentrant model
 18685 ;;
 18686                           
 18687                           	psect	text80
 18688  0015EE                     __ptext80:
 18689                           	opt stack 0
 18690  0015EE                     _Rtcc_SetRtccValue:
 18691                           	opt stack 14
 18692                           
 18693                           ; BSR set to: 15
 18694                           ;incstack = 0
 18695                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18696  0015EE  0100               	movlb	0	; () banked
 18697  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18698                           
 18699                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18700  0015F2  D0FC               	goto	l441
 18701  0015F4                     l442:
 18702                           
 18703                           ; BSR set to: 0
 18704                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18705  0015F4  010F               	movlb	15	; () banked
 18706  0015F6  833F               	bsf	63,1,b	;volatile
 18707                           
 18708                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18709  0015F8  813F               	bsf	63,0,b	;volatile
 18710                           
 18711                           ; BSR set to: 15
 18712                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18713  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18714  0015FE  0100               	movlb	0	; () banked
 18715  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18716  001602  0E00               	movlw	0
 18717  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18718  001606  0E0A               	movlw	10
 18719  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 18720  00160A  EC4D  F027         	call	___awmod	;wreg free
 18721  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18722  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18723  001616  0E0F               	movlw	15
 18724  001618  0100               	movlb	0	; () banked
 18725  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18726  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18727  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18728  001622  0E00               	movlw	0
 18729  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18730  001626  0E0A               	movlw	10
 18731  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18732  00162A  EC4D  F026         	call	___awdiv	;wreg free
 18733  00162E  0100               	movlb	0	; () banked
 18734  001630  397D               	swapf	?___awdiv& (0+255),w,b
 18735  001632  0BF0               	andlw	240
 18736  001634  0BF0               	andlw	240
 18737  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18738  001638  6E98               	movwf	3992,c	;volatile
 18739                           
 18740                           ;rtcc_drv.c: 393: break;
 18741  00163A  0012               	return	
 18742  00163C                     l444:
 18743                           
 18744                           ; BSR set to: 0
 18745                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18746  00163C  010F               	movlb	15	; () banked
 18747  00163E  833F               	bsf	63,1,b	;volatile
 18748                           
 18749                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18750  001640  913F               	bcf	63,0,b	;volatile
 18751                           
 18752                           ; BSR set to: 15
 18753                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18754  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18755  001646  0100               	movlb	0	; () banked
 18756  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18757  00164A  0E00               	movlw	0
 18758  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18759  00164E  0E0A               	movlw	10
 18760  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 18761  001652  EC4D  F027         	call	___awmod	;wreg free
 18762  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18763  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18764  00165E  0E0F               	movlw	15
 18765  001660  0100               	movlb	0	; () banked
 18766  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18767  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18768  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18769  00166A  0E00               	movlw	0
 18770  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18771  00166E  0E0A               	movlw	10
 18772  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18773  001672  EC4D  F026         	call	___awdiv	;wreg free
 18774  001676  0100               	movlb	0	; () banked
 18775  001678  397D               	swapf	?___awdiv& (0+255),w,b
 18776  00167A  0BF0               	andlw	240
 18777  00167C  0BF0               	andlw	240
 18778  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18779  001680  6E99               	movwf	3993,c	;volatile
 18780                           
 18781                           ;rtcc_drv.c: 401: break;
 18782  001682  0012               	return	
 18783  001684                     l445:
 18784                           
 18785                           ; BSR set to: 0
 18786                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 18787  001684  010F               	movlb	15	; () banked
 18788  001686  833F               	bsf	63,1,b	;volatile
 18789                           
 18790                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 18791  001688  913F               	bcf	63,0,b	;volatile
 18792                           
 18793                           ; BSR set to: 15
 18794                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18795  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18796  00168E  0100               	movlb	0	; () banked
 18797  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18798  001692  0E00               	movlw	0
 18799  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18800  001696  0E0A               	movlw	10
 18801  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 18802  00169A  EC4D  F027         	call	___awmod	;wreg free
 18803  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18804  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18805  0016A6  0E0F               	movlw	15
 18806  0016A8  0100               	movlb	0	; () banked
 18807  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18808  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18809  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18810  0016B2  0E00               	movlw	0
 18811  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18812  0016B6  0E0A               	movlw	10
 18813  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18814  0016BA  EC4D  F026         	call	___awdiv	;wreg free
 18815  0016BE  0100               	movlb	0	; () banked
 18816  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 18817  0016C2  0BF0               	andlw	240
 18818  0016C4  0BF0               	andlw	240
 18819  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18820  0016C8  6E98               	movwf	3992,c	;volatile
 18821                           
 18822                           ;rtcc_drv.c: 409: break;
 18823  0016CA  0012               	return	
 18824  0016CC                     l446:
 18825                           
 18826                           ; BSR set to: 0
 18827                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 18828  0016CC  010F               	movlb	15	; () banked
 18829  0016CE  933F               	bcf	63,1,b	;volatile
 18830                           
 18831                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 18832  0016D0  813F               	bsf	63,0,b	;volatile
 18833                           
 18834                           ; BSR set to: 15
 18835                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18836  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18837  0016D6  0100               	movlb	0	; () banked
 18838  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18839  0016DA  0E00               	movlw	0
 18840  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18841  0016DE  0E0A               	movlw	10
 18842  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 18843  0016E2  EC4D  F027         	call	___awmod	;wreg free
 18844  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18845  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18846  0016EE  0E0F               	movlw	15
 18847  0016F0  0100               	movlb	0	; () banked
 18848  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18849  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18850  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18851  0016FA  0E00               	movlw	0
 18852  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18853  0016FE  0E0A               	movlw	10
 18854  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18855  001702  EC4D  F026         	call	___awdiv	;wreg free
 18856  001706  0100               	movlb	0	; () banked
 18857  001708  397D               	swapf	?___awdiv& (0+255),w,b
 18858  00170A  0BF0               	andlw	240
 18859  00170C  0BF0               	andlw	240
 18860  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18861  001710  6E99               	movwf	3993,c	;volatile
 18862                           
 18863                           ;rtcc_drv.c: 417: break;
 18864  001712  0012               	return	
 18865  001714                     l447:
 18866                           
 18867                           ; BSR set to: 0
 18868                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 18869  001714  010F               	movlb	15	; () banked
 18870  001716  933F               	bcf	63,1,b	;volatile
 18871                           
 18872                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 18873  001718  813F               	bsf	63,0,b	;volatile
 18874                           
 18875                           ; BSR set to: 15
 18876                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18877  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18878  00171E  0100               	movlb	0	; () banked
 18879  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18880  001722  0E00               	movlw	0
 18881  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18882  001726  0E0A               	movlw	10
 18883  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 18884  00172A  EC4D  F027         	call	___awmod	;wreg free
 18885  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18886  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18887  001736  0E0F               	movlw	15
 18888  001738  0100               	movlb	0	; () banked
 18889  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18890  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18891  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18892  001742  0E00               	movlw	0
 18893  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18894  001746  0E0A               	movlw	10
 18895  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18896  00174A  EC4D  F026         	call	___awdiv	;wreg free
 18897  00174E  0100               	movlb	0	; () banked
 18898  001750  397D               	swapf	?___awdiv& (0+255),w,b
 18899  001752  0BF0               	andlw	240
 18900  001754  0BF0               	andlw	240
 18901  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18902  001758  6E98               	movwf	3992,c	;volatile
 18903                           
 18904                           ;rtcc_drv.c: 425: break;
 18905  00175A  0012               	return	
 18906  00175C                     l448:
 18907                           
 18908                           ; BSR set to: 0
 18909                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 18910  00175C  010F               	movlb	15	; () banked
 18911  00175E  933F               	bcf	63,1,b	;volatile
 18912                           
 18913                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 18914  001760  913F               	bcf	63,0,b	;volatile
 18915                           
 18916                           ; BSR set to: 15
 18917                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18918  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18919  001766  0100               	movlb	0	; () banked
 18920  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18921  00176A  0E00               	movlw	0
 18922  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18923  00176E  0E0A               	movlw	10
 18924  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 18925  001772  EC4D  F027         	call	___awmod	;wreg free
 18926  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18927  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18928  00177E  0E0F               	movlw	15
 18929  001780  0100               	movlb	0	; () banked
 18930  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18931  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18932  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18933  00178A  0E00               	movlw	0
 18934  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18935  00178E  0E0A               	movlw	10
 18936  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18937  001792  EC4D  F026         	call	___awdiv	;wreg free
 18938  001796  0100               	movlb	0	; () banked
 18939  001798  397D               	swapf	?___awdiv& (0+255),w,b
 18940  00179A  0BF0               	andlw	240
 18941  00179C  0BF0               	andlw	240
 18942  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18943  0017A0  6E99               	movwf	3993,c	;volatile
 18944                           
 18945                           ;rtcc_drv.c: 433: break;
 18946  0017A2  0012               	return	
 18947  0017A4                     l449:
 18948                           
 18949                           ; BSR set to: 0
 18950                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 18951  0017A4  010F               	movlb	15	; () banked
 18952  0017A6  933F               	bcf	63,1,b	;volatile
 18953                           
 18954                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 18955  0017A8  913F               	bcf	63,0,b	;volatile
 18956                           
 18957                           ; BSR set to: 15
 18958                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18959  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18960  0017AE  0100               	movlb	0	; () banked
 18961  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18962  0017B2  0E00               	movlw	0
 18963  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18964  0017B6  0E0A               	movlw	10
 18965  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 18966  0017BA  EC4D  F027         	call	___awmod	;wreg free
 18967  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18968  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18969  0017C6  0E0F               	movlw	15
 18970  0017C8  0100               	movlb	0	; () banked
 18971  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18972  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18973  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18974  0017D2  0E00               	movlw	0
 18975  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18976  0017D6  0E0A               	movlw	10
 18977  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18978  0017DA  EC4D  F026         	call	___awdiv	;wreg free
 18979  0017DE  0100               	movlb	0	; () banked
 18980  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 18981  0017E2  0BF0               	andlw	240
 18982  0017E4  0BF0               	andlw	240
 18983  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18984  0017E8  6E98               	movwf	3992,c	;volatile
 18985                           
 18986                           ; BSR set to: 0
 18987                           ;rtcc_drv.c: 445: }
 18988                           
 18989                           ; BSR set to: 0
 18990                           ;rtcc_drv.c: 444: break;
 18991                           
 18992                           ;rtcc_drv.c: 443: default:
 18993                           
 18994                           ;rtcc_drv.c: 441: break;
 18995  0017EA  0012               	return	
 18996  0017EC                     l441:
 18997                           
 18998                           ; BSR set to: 0
 18999  0017EC  0100               	movlb	0	; () banked
 19000  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19001                           
 19002                           ; Switch size 1, requested type "space"
 19003                           ; Number of cases is 7, Range of values is 0 to 6
 19004                           ; switch strategies available:
 19005                           ; Name         Instructions Cycles
 19006                           ; simple_byte           22    12 (average)
 19007                           ;	Chosen strategy is simple_byte
 19008  0017F0  0A00               	xorlw	0	; case 0
 19009  0017F2  B4D8               	btfsc	status,2,c
 19010  0017F4  D6FF               	goto	l442
 19011  0017F6  0A01               	xorlw	1	; case 1
 19012  0017F8  B4D8               	btfsc	status,2,c
 19013  0017FA  D720               	goto	l444
 19014  0017FC  0A03               	xorlw	3	; case 2
 19015  0017FE  B4D8               	btfsc	status,2,c
 19016  001800  D741               	goto	l445
 19017  001802  0A01               	xorlw	1	; case 3
 19018  001804  B4D8               	btfsc	status,2,c
 19019  001806  D762               	goto	l446
 19020  001808  0A07               	xorlw	7	; case 4
 19021  00180A  B4D8               	btfsc	status,2,c
 19022  00180C  D783               	goto	l447
 19023  00180E  0A01               	xorlw	1	; case 5
 19024  001810  B4D8               	btfsc	status,2,c
 19025  001812  D7A4               	goto	l448
 19026  001814  0A03               	xorlw	3	; case 6
 19027  001816  A4D8               	btfss	status,2,c
 19028  001818  0012               	return	
 19029  00181A  D7C4               	goto	l449
 19030  00181C                     __end_of_Rtcc_SetRtccValue:
 19031                           	opt stack 0
 19032                           tosu	equ	0xFFF
 19033                           tosh	equ	0xFFE
 19034                           tosl	equ	0xFFD
 19035                           pclath	equ	0xFFA
 19036                           tblptru	equ	0xFF8
 19037                           tblptrh	equ	0xFF7
 19038                           tblptrl	equ	0xFF6
 19039                           tablat	equ	0xFF5
 19040                           prodh	equ	0xFF4
 19041                           prodl	equ	0xFF3
 19042                           intcon	equ	0xFF2
 19043                           intcon2	equ	0xFF1
 19044                           intcon3	equ	0xFF0
 19045                           indf0	equ	0xFEF
 19046                           postinc0	equ	0xFEE
 19047                           plusw0	equ	0xFEB
 19048                           fsr0h	equ	0xFEA
 19049                           fsr0l	equ	0xFE9
 19050                           wreg	equ	0xFE8
 19051                           indf1	equ	0xFE7
 19052                           postinc1	equ	0xFE6
 19053                           postdec1	equ	0xFE5
 19054                           fsr1h	equ	0xFE2
 19055                           fsr1l	equ	0xFE1
 19056                           indf2	equ	0xFDF
 19057                           postinc2	equ	0xFDE
 19058                           postdec2	equ	0xFDD
 19059                           plusw2	equ	0xFDB
 19060                           fsr2h	equ	0xFDA
 19061                           fsr2l	equ	0xFD9
 19062                           status	equ	0xFD8
 19063                           
 19064 ;; *************** function ___awmod *****************
 19065 ;; Defined at:
 19066 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19067 ;; Parameters:    Size  Location     Type
 19068 ;;  dividend        2   29[BANK0 ] int 
 19069 ;;  divisor         2   31[BANK0 ] int 
 19070 ;; Auto vars:     Size  Location     Type
 19071 ;;  sign            1   34[BANK0 ] unsigned char 
 19072 ;;  counter         1   33[BANK0 ] unsigned char 
 19073 ;; Return value:  Size  Location     Type
 19074 ;;                  2   29[BANK0 ] int 
 19075 ;; Registers used:
 19076 ;;		wreg, status,2, status,0
 19077 ;; Tracked objects:
 19078 ;;		On entry : 0/0
 19079 ;;		On exit  : 0/0
 19080 ;;		Unchanged: 0/0
 19081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19082 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19083 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19085 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19086 ;;Total ram usage:        6 bytes
 19087 ;; Hardware stack levels used:    1
 19088 ;; Hardware stack levels required when called:   11
 19089 ;; This function calls:
 19090 ;;		Nothing
 19091 ;; This function is called by:
 19092 ;;		_Rtcc_SetRtccValue
 19093 ;;		_Rtcc_SetRtccAlarm
 19094 ;; This function uses a non-reentrant model
 19095 ;;
 19096                           
 19097                           	psect	text81
 19098  004E9A                     __ptext81:
 19099                           	opt stack 0
 19100  004E9A                     ___awmod:
 19101                           	opt stack 14
 19102                           
 19103                           ; BSR set to: 0
 19104                           ;incstack = 0
 19105  004E9A  0E00               	movlw	0
 19106  004E9C  0100               	movlb	0	; () banked
 19107  004E9E  6F82               	movwf	___awmod@sign& (0+255),b
 19108                           
 19109                           ; BSR set to: 0
 19110  004EA0  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19111  004EA2  D006               	goto	l2891
 19112                           
 19113                           ; BSR set to: 0
 19114  004EA4  6D7D               	negf	___awmod@dividend& (0+255),b
 19115  004EA6  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19116  004EA8  B0D8               	btfsc	status,0,c
 19117  004EAA  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19118                           
 19119                           ; BSR set to: 0
 19120  004EAC  0E01               	movlw	1
 19121  004EAE  6F82               	movwf	___awmod@sign& (0+255),b
 19122  004EB0                     l2891:
 19123                           
 19124                           ; BSR set to: 0
 19125                           
 19126                           ; BSR set to: 0
 19127  004EB0  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19128  004EB2  D004               	goto	l2892
 19129                           
 19130                           ; BSR set to: 0
 19131  004EB4  6D7F               	negf	___awmod@divisor& (0+255),b
 19132  004EB6  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19133  004EB8  B0D8               	btfsc	status,0,c
 19134  004EBA  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19135  004EBC                     l2892:
 19136                           
 19137                           ; BSR set to: 0
 19138                           
 19139                           ; BSR set to: 0
 19140  004EBC  517F               	movf	___awmod@divisor& (0+255),w,b
 19141  004EBE  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19142  004EC0  B4D8               	btfsc	status,2,c
 19143  004EC2  D018               	goto	l2899
 19144                           
 19145                           ; BSR set to: 0
 19146  004EC4  0E01               	movlw	1
 19147  004EC6  6F81               	movwf	___awmod@counter& (0+255),b
 19148  004EC8  D004               	goto	l2894
 19149  004ECA                     
 19150                           ; BSR set to: 0
 19151                           
 19152                           ; BSR set to: 0
 19153  004ECA  90D8               	bcf	status,0,c
 19154  004ECC  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19155  004ECE  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19156  004ED0  2B81               	incf	___awmod@counter& (0+255),f,b
 19157  004ED2                     l2894:
 19158                           
 19159                           ; BSR set to: 0
 19160                           
 19161                           ; BSR set to: 0
 19162  004ED2  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19163  004ED4  D7FA               	goto	l2895
 19164  004ED6                     u12380:
 19165                           
 19166                           ; BSR set to: 0
 19167                           
 19168                           ; BSR set to: 0
 19169                           
 19170                           ; BSR set to: 0
 19171  004ED6  517F               	movf	___awmod@divisor& (0+255),w,b
 19172  004ED8  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19173  004EDA  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19174  004EDC  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19175  004EDE  A0D8               	btfss	status,0,c
 19176  004EE0  D004               	goto	l2898
 19177                           
 19178                           ; BSR set to: 0
 19179  004EE2  517F               	movf	___awmod@divisor& (0+255),w,b
 19180  004EE4  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19181  004EE6  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19182  004EE8  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19183  004EEA                     l2898:
 19184                           
 19185                           ; BSR set to: 0
 19186                           
 19187                           ; BSR set to: 0
 19188  004EEA  90D8               	bcf	status,0,c
 19189  004EEC  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19190  004EEE  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19191                           
 19192                           ; BSR set to: 0
 19193  004EF0  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19194  004EF2  D7F1               	goto	u12380
 19195  004EF4                     l2899:
 19196                           
 19197                           ; BSR set to: 0
 19198                           
 19199                           ; BSR set to: 0
 19200                           
 19201                           ; BSR set to: 0
 19202  004EF4  5182               	movf	___awmod@sign& (0+255),w,b
 19203  004EF6  B4D8               	btfsc	status,2,c
 19204  004EF8  D004               	goto	l2900
 19205                           
 19206                           ; BSR set to: 0
 19207  004EFA  6D7D               	negf	___awmod@dividend& (0+255),b
 19208  004EFC  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19209  004EFE  B0D8               	btfsc	status,0,c
 19210  004F00  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19211  004F02                     l2900:
 19212                           
 19213                           ; BSR set to: 0
 19214                           
 19215                           ; BSR set to: 0
 19216  004F02  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19217  004F06  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19218  004F0A  0012               	return	
 19219  004F0C                     __end_of___awmod:
 19220                           	opt stack 0
 19221                           tosu	equ	0xFFF
 19222                           tosh	equ	0xFFE
 19223                           tosl	equ	0xFFD
 19224                           pclath	equ	0xFFA
 19225                           tblptru	equ	0xFF8
 19226                           tblptrh	equ	0xFF7
 19227                           tblptrl	equ	0xFF6
 19228                           tablat	equ	0xFF5
 19229                           prodh	equ	0xFF4
 19230                           prodl	equ	0xFF3
 19231                           intcon	equ	0xFF2
 19232                           intcon2	equ	0xFF1
 19233                           intcon3	equ	0xFF0
 19234                           indf0	equ	0xFEF
 19235                           postinc0	equ	0xFEE
 19236                           plusw0	equ	0xFEB
 19237                           fsr0h	equ	0xFEA
 19238                           fsr0l	equ	0xFE9
 19239                           wreg	equ	0xFE8
 19240                           indf1	equ	0xFE7
 19241                           postinc1	equ	0xFE6
 19242                           postdec1	equ	0xFE5
 19243                           fsr1h	equ	0xFE2
 19244                           fsr1l	equ	0xFE1
 19245                           indf2	equ	0xFDF
 19246                           postinc2	equ	0xFDE
 19247                           postdec2	equ	0xFDD
 19248                           plusw2	equ	0xFDB
 19249                           fsr2h	equ	0xFDA
 19250                           fsr2l	equ	0xFD9
 19251                           status	equ	0xFD8
 19252                           
 19253 ;; *************** function ___awdiv *****************
 19254 ;; Defined at:
 19255 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19256 ;; Parameters:    Size  Location     Type
 19257 ;;  dividend        2   29[BANK0 ] int 
 19258 ;;  divisor         2   31[BANK0 ] int 
 19259 ;; Auto vars:     Size  Location     Type
 19260 ;;  quotient        2   35[BANK0 ] int 
 19261 ;;  sign            1   34[BANK0 ] unsigned char 
 19262 ;;  counter         1   33[BANK0 ] unsigned char 
 19263 ;; Return value:  Size  Location     Type
 19264 ;;                  2   29[BANK0 ] int 
 19265 ;; Registers used:
 19266 ;;		wreg, status,2, status,0
 19267 ;; Tracked objects:
 19268 ;;		On entry : 0/0
 19269 ;;		On exit  : 0/0
 19270 ;;		Unchanged: 0/0
 19271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19272 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19273 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19275 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19276 ;;Total ram usage:        8 bytes
 19277 ;; Hardware stack levels used:    1
 19278 ;; Hardware stack levels required when called:   11
 19279 ;; This function calls:
 19280 ;;		Nothing
 19281 ;; This function is called by:
 19282 ;;		_Rtcc_SetRtccValue
 19283 ;;		_Rtcc_SetRtccAlarm
 19284 ;; This function uses a non-reentrant model
 19285 ;;
 19286                           
 19287                           	psect	text82
 19288  004C9A                     __ptext82:
 19289                           	opt stack 0
 19290  004C9A                     ___awdiv:
 19291                           	opt stack 14
 19292                           
 19293                           ; BSR set to: 0
 19294                           ;incstack = 0
 19295  004C9A  0E00               	movlw	0
 19296  004C9C  0100               	movlb	0	; () banked
 19297  004C9E  6F82               	movwf	___awdiv@sign& (0+255),b
 19298                           
 19299                           ; BSR set to: 0
 19300  004CA0  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19301  004CA2  D006               	goto	l2878
 19302                           
 19303                           ; BSR set to: 0
 19304  004CA4  6D7F               	negf	___awdiv@divisor& (0+255),b
 19305  004CA6  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19306  004CA8  B0D8               	btfsc	status,0,c
 19307  004CAA  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19308                           
 19309                           ; BSR set to: 0
 19310  004CAC  0E01               	movlw	1
 19311  004CAE  6F82               	movwf	___awdiv@sign& (0+255),b
 19312  004CB0                     l2878:
 19313                           
 19314                           ; BSR set to: 0
 19315                           
 19316                           ; BSR set to: 0
 19317  004CB0  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19318  004CB2  D006               	goto	l2879
 19319                           
 19320                           ; BSR set to: 0
 19321  004CB4  6D7D               	negf	___awdiv@dividend& (0+255),b
 19322  004CB6  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19323  004CB8  B0D8               	btfsc	status,0,c
 19324  004CBA  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19325                           
 19326                           ; BSR set to: 0
 19327  004CBC  0E01               	movlw	1
 19328  004CBE  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19329  004CC0                     l2879:
 19330                           
 19331                           ; BSR set to: 0
 19332                           
 19333                           ; BSR set to: 0
 19334  004CC0  0E00               	movlw	0
 19335  004CC2  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19336  004CC4  0E00               	movlw	0
 19337  004CC6  6F83               	movwf	___awdiv@quotient& (0+255),b
 19338                           
 19339                           ; BSR set to: 0
 19340  004CC8  517F               	movf	___awdiv@divisor& (0+255),w,b
 19341  004CCA  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19342  004CCC  B4D8               	btfsc	status,2,c
 19343  004CCE  D01C               	goto	l2886
 19344                           
 19345                           ; BSR set to: 0
 19346  004CD0  0E01               	movlw	1
 19347  004CD2  6F81               	movwf	___awdiv@counter& (0+255),b
 19348  004CD4  D004               	goto	l2881
 19349  004CD6                     
 19350                           ; BSR set to: 0
 19351                           
 19352                           ; BSR set to: 0
 19353  004CD6  90D8               	bcf	status,0,c
 19354  004CD8  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19355  004CDA  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19356  004CDC  2B81               	incf	___awdiv@counter& (0+255),f,b
 19357  004CDE                     l2881:
 19358                           
 19359                           ; BSR set to: 0
 19360                           
 19361                           ; BSR set to: 0
 19362  004CDE  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19363  004CE0  D7FA               	goto	l2882
 19364  004CE2                     u12320:
 19365                           
 19366                           ; BSR set to: 0
 19367                           
 19368                           ; BSR set to: 0
 19369                           
 19370                           ; BSR set to: 0
 19371  004CE2  90D8               	bcf	status,0,c
 19372  004CE4  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19373  004CE6  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19374                           
 19375                           ; BSR set to: 0
 19376  004CE8  517F               	movf	___awdiv@divisor& (0+255),w,b
 19377  004CEA  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19378  004CEC  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19379  004CEE  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19380  004CF0  A0D8               	btfss	status,0,c
 19381  004CF2  D005               	goto	l2885
 19382                           
 19383                           ; BSR set to: 0
 19384  004CF4  517F               	movf	___awdiv@divisor& (0+255),w,b
 19385  004CF6  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19386  004CF8  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19387  004CFA  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19388                           
 19389                           ; BSR set to: 0
 19390  004CFC  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19391  004CFE                     l2885:
 19392                           
 19393                           ; BSR set to: 0
 19394                           
 19395                           ; BSR set to: 0
 19396  004CFE  90D8               	bcf	status,0,c
 19397  004D00  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19398  004D02  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19399                           
 19400                           ; BSR set to: 0
 19401  004D04  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19402  004D06  D7ED               	goto	u12320
 19403  004D08                     l2886:
 19404                           
 19405                           ; BSR set to: 0
 19406                           
 19407                           ; BSR set to: 0
 19408                           
 19409                           ; BSR set to: 0
 19410  004D08  5182               	movf	___awdiv@sign& (0+255),w,b
 19411  004D0A  B4D8               	btfsc	status,2,c
 19412  004D0C  D004               	goto	l2887
 19413                           
 19414                           ; BSR set to: 0
 19415  004D0E  6D83               	negf	___awdiv@quotient& (0+255),b
 19416  004D10  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19417  004D12  B0D8               	btfsc	status,0,c
 19418  004D14  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19419  004D16                     l2887:
 19420                           
 19421                           ; BSR set to: 0
 19422                           
 19423                           ; BSR set to: 0
 19424  004D16  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19425  004D1A  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19426  004D1E  0012               	return	
 19427  004D20                     __end_of___awdiv:
 19428                           	opt stack 0
 19429                           tosu	equ	0xFFF
 19430                           tosh	equ	0xFFE
 19431                           tosl	equ	0xFFD
 19432                           pclath	equ	0xFFA
 19433                           tblptru	equ	0xFF8
 19434                           tblptrh	equ	0xFF7
 19435                           tblptrl	equ	0xFF6
 19436                           tablat	equ	0xFF5
 19437                           prodh	equ	0xFF4
 19438                           prodl	equ	0xFF3
 19439                           intcon	equ	0xFF2
 19440                           intcon2	equ	0xFF1
 19441                           intcon3	equ	0xFF0
 19442                           indf0	equ	0xFEF
 19443                           postinc0	equ	0xFEE
 19444                           plusw0	equ	0xFEB
 19445                           fsr0h	equ	0xFEA
 19446                           fsr0l	equ	0xFE9
 19447                           wreg	equ	0xFE8
 19448                           indf1	equ	0xFE7
 19449                           postinc1	equ	0xFE6
 19450                           postdec1	equ	0xFE5
 19451                           fsr1h	equ	0xFE2
 19452                           fsr1l	equ	0xFE1
 19453                           indf2	equ	0xFDF
 19454                           postinc2	equ	0xFDE
 19455                           postdec2	equ	0xFDD
 19456                           plusw2	equ	0xFDB
 19457                           fsr2h	equ	0xFDA
 19458                           fsr2l	equ	0xFD9
 19459                           status	equ	0xFD8
 19460                           
 19461 ;; *************** function _Rtcc_LockRtc *****************
 19462 ;; Defined at:
 19463 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19464 ;; Parameters:    Size  Location     Type
 19465 ;;		None
 19466 ;; Auto vars:     Size  Location     Type
 19467 ;;		None
 19468 ;; Return value:  Size  Location     Type
 19469 ;;                  1    wreg      void 
 19470 ;; Registers used:
 19471 ;;		None
 19472 ;; Tracked objects:
 19473 ;;		On entry : 0/0
 19474 ;;		On exit  : 0/0
 19475 ;;		Unchanged: 0/0
 19476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19481 ;;Total ram usage:        0 bytes
 19482 ;; Hardware stack levels used:    1
 19483 ;; Hardware stack levels required when called:   11
 19484 ;; This function calls:
 19485 ;;		Nothing
 19486 ;; This function is called by:
 19487 ;;		_Rtcm_MainTask
 19488 ;;		_Rtcm_SetRtccDate
 19489 ;;		_Rtcm_SetRtccAlarm
 19490 ;; This function uses a non-reentrant model
 19491 ;;
 19492                           
 19493                           	psect	text83
 19494  0062E4                     __ptext83:
 19495                           	opt stack 0
 19496  0062E4                     _Rtcc_LockRtc:
 19497                           	opt stack 15
 19498                           
 19499                           ; BSR set to: 0
 19500                           ;incstack = 0
 19501  0062E4  010F               	movlb	15	;# 
 19502  0062E6  0E55               	movlw	85	;# 
 19503  0062E8  6EA7               	movwf	4007,c	;# 
 19504  0062EA  0EAA               	movlw	170	;# 
 19505  0062EC  6EA7               	movwf	4007,c	;# 
 19506                           
 19507                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19508  0062EE  010F               	movlb	15	; () banked
 19509  0062F0  9B3F               	bcf	63,5,b	;volatile
 19510                           
 19511                           ; BSR set to: 15
 19512  0062F2  0012               	return		;funcret
 19513  0062F4                     __end_of_Rtcc_LockRtc:
 19514                           	opt stack 0
 19515                           tosu	equ	0xFFF
 19516                           tosh	equ	0xFFE
 19517                           tosl	equ	0xFFD
 19518                           pclath	equ	0xFFA
 19519                           tblptru	equ	0xFF8
 19520                           tblptrh	equ	0xFF7
 19521                           tblptrl	equ	0xFF6
 19522                           tablat	equ	0xFF5
 19523                           prodh	equ	0xFF4
 19524                           prodl	equ	0xFF3
 19525                           intcon	equ	0xFF2
 19526                           intcon2	equ	0xFF1
 19527                           intcon3	equ	0xFF0
 19528                           indf0	equ	0xFEF
 19529                           postinc0	equ	0xFEE
 19530                           plusw0	equ	0xFEB
 19531                           fsr0h	equ	0xFEA
 19532                           fsr0l	equ	0xFE9
 19533                           wreg	equ	0xFE8
 19534                           indf1	equ	0xFE7
 19535                           postinc1	equ	0xFE6
 19536                           postdec1	equ	0xFE5
 19537                           fsr1h	equ	0xFE2
 19538                           fsr1l	equ	0xFE1
 19539                           indf2	equ	0xFDF
 19540                           postinc2	equ	0xFDE
 19541                           postdec2	equ	0xFDD
 19542                           plusw2	equ	0xFDB
 19543                           fsr2h	equ	0xFDA
 19544                           fsr2l	equ	0xFD9
 19545                           status	equ	0xFD8
 19546                           
 19547 ;; *************** function _Rtcm_GetRtccDate *****************
 19548 ;; Defined at:
 19549 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19550 ;; Parameters:    Size  Location     Type
 19551 ;;		None
 19552 ;; Auto vars:     Size  Location     Type
 19553 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19554 ;; Return value:  Size  Location     Type
 19555 ;;                  8   33[BANK0 ] struct _RtccDateType
 19556 ;; Registers used:
 19557 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19558 ;; Tracked objects:
 19559 ;;		On entry : 0/0
 19560 ;;		On exit  : 0/0
 19561 ;;		Unchanged: 0/0
 19562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19563 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19564 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19565 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19566 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19567 ;;Total ram usage:       17 bytes
 19568 ;; Hardware stack levels used:    1
 19569 ;; Hardware stack levels required when called:   12
 19570 ;; This function calls:
 19571 ;;		_Rtcc_GetRtccValue
 19572 ;; This function is called by:
 19573 ;;		_Rtcm_MainTask
 19574 ;; This function uses a non-reentrant model
 19575 ;;
 19576                           
 19577                           	psect	text84
 19578  0050BC                     __ptext84:
 19579                           	opt stack 0
 19580  0050BC                     _Rtcm_GetRtccDate:
 19581                           	opt stack 15
 19582                           
 19583                           ;rtcm.c: 204: RtccDateType LocalDate;
 19584                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19585                           
 19586                           ; BSR set to: 15
 19587                           ;incstack = 0
 19588  0050BC  0E00               	movlw	0
 19589  0050BE  ECE6  F024         	call	_Rtcc_GetRtccValue
 19590  0050C2  0100               	movlb	0	; () banked
 19591  0050C4  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19592  0050C6  0ED0               	movlw	208
 19593  0050C8  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19594  0050CA  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19595  0050CC  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19596  0050CE  0E07               	movlw	7
 19597  0050D0  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19598                           
 19599                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19600  0050D2  0E01               	movlw	1
 19601  0050D4  ECE6  F024         	call	_Rtcc_GetRtccValue
 19602  0050D8  0100               	movlb	0	; () banked
 19603  0050DA  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19604                           
 19605                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19606  0050DC  0E02               	movlw	2
 19607  0050DE  ECE6  F024         	call	_Rtcc_GetRtccValue
 19608  0050E2  0100               	movlb	0	; () banked
 19609  0050E4  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19610                           
 19611                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19612  0050E6  0E03               	movlw	3
 19613  0050E8  ECE6  F024         	call	_Rtcc_GetRtccValue
 19614  0050EC  0100               	movlb	0	; () banked
 19615  0050EE  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19616                           
 19617                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19618  0050F0  0E04               	movlw	4
 19619  0050F2  ECE6  F024         	call	_Rtcc_GetRtccValue
 19620  0050F6  0100               	movlb	0	; () banked
 19621  0050F8  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19622                           
 19623                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19624  0050FA  0E05               	movlw	5
 19625  0050FC  ECE6  F024         	call	_Rtcc_GetRtccValue
 19626  005100  0100               	movlb	0	; () banked
 19627  005102  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19628                           
 19629                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19630  005104  0E06               	movlw	6
 19631  005106  ECE6  F024         	call	_Rtcc_GetRtccValue
 19632  00510A  0100               	movlb	0	; () banked
 19633  00510C  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19634                           
 19635                           ; BSR set to: 0
 19636                           ;rtcm.c: 216: return LocalDate;
 19637  00510E  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19638  005112  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19639  005116  0E07               	movlw	7
 19640  005118                     u14611:
 19641  005118  CFDB FFEB          	movff	plusw2,plusw0
 19642  00511C  06E8               	decf	wreg,f,c
 19643  00511E  E2FC               	bc	u14611
 19644  005120  0012               	return	
 19645  005122                     __end_of_Rtcm_GetRtccDate:
 19646                           	opt stack 0
 19647                           tosu	equ	0xFFF
 19648                           tosh	equ	0xFFE
 19649                           tosl	equ	0xFFD
 19650                           pclath	equ	0xFFA
 19651                           tblptru	equ	0xFF8
 19652                           tblptrh	equ	0xFF7
 19653                           tblptrl	equ	0xFF6
 19654                           tablat	equ	0xFF5
 19655                           prodh	equ	0xFF4
 19656                           prodl	equ	0xFF3
 19657                           intcon	equ	0xFF2
 19658                           intcon2	equ	0xFF1
 19659                           intcon3	equ	0xFF0
 19660                           indf0	equ	0xFEF
 19661                           postinc0	equ	0xFEE
 19662                           plusw0	equ	0xFEB
 19663                           fsr0h	equ	0xFEA
 19664                           fsr0l	equ	0xFE9
 19665                           wreg	equ	0xFE8
 19666                           indf1	equ	0xFE7
 19667                           postinc1	equ	0xFE6
 19668                           postdec1	equ	0xFE5
 19669                           fsr1h	equ	0xFE2
 19670                           fsr1l	equ	0xFE1
 19671                           indf2	equ	0xFDF
 19672                           postinc2	equ	0xFDE
 19673                           postdec2	equ	0xFDD
 19674                           plusw2	equ	0xFDB
 19675                           fsr2h	equ	0xFDA
 19676                           fsr2l	equ	0xFD9
 19677                           status	equ	0xFD8
 19678                           
 19679 ;; *************** function _Rtcc_GetRtccValue *****************
 19680 ;; Defined at:
 19681 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19682 ;; Parameters:    Size  Location     Type
 19683 ;;  RtccPtrVal      1    wreg     enum E7757
 19684 ;; Auto vars:     Size  Location     Type
 19685 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19686 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19687 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19688 ;; Return value:  Size  Location     Type
 19689 ;;                  1    wreg      unsigned char 
 19690 ;; Registers used:
 19691 ;;		wreg, status,2, status,0, prodl, prodh
 19692 ;; Tracked objects:
 19693 ;;		On entry : 0/0
 19694 ;;		On exit  : 0/0
 19695 ;;		Unchanged: 0/0
 19696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19698 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19699 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19700 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19701 ;;Total ram usage:        4 bytes
 19702 ;; Hardware stack levels used:    1
 19703 ;; Hardware stack levels required when called:   11
 19704 ;; This function calls:
 19705 ;;		Nothing
 19706 ;; This function is called by:
 19707 ;;		_Rtcm_GetRtccDate
 19708 ;; This function uses a non-reentrant model
 19709 ;;
 19710                           
 19711                           	psect	text85
 19712  0049CC                     __ptext85:
 19713                           	opt stack 0
 19714  0049CC                     _Rtcc_GetRtccValue:
 19715                           	opt stack 15
 19716                           
 19717                           ; BSR set to: 0
 19718                           ;incstack = 0
 19719                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19720  0049CC  0100               	movlb	0	; () banked
 19721  0049CE  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19722                           
 19723                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19724                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19725                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19726  0049D0  D02D               	goto	l416
 19727  0049D2                     l417:
 19728                           
 19729                           ; BSR set to: 0
 19730                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19731  0049D2  010F               	movlb	15	; () banked
 19732  0049D4  833F               	bsf	63,1,b	;volatile
 19733  0049D6                     
 19734                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19735  0049D6  813F               	bsf	63,0,b	;volatile
 19736  0049D8  D01C               	goto	L18
 19737  0049DA                     l419:
 19738                           
 19739                           ; BSR set to: 0
 19740                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19741  0049DA  010F               	movlb	15	; () banked
 19742  0049DC  833F               	bsf	63,1,b	;volatile
 19743  0049DE  D01E               	goto	L19
 19744  0049E0                     l420:
 19745                           
 19746                           ; BSR set to: 0
 19747                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19748  0049E0  010F               	movlb	15	; () banked
 19749  0049E2  833F               	bsf	63,1,b	;volatile
 19750  0049E4  D021               	goto	L22
 19751  0049E6                     l13436:
 19752                           
 19753                           ; BSR set to: 15
 19754                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 19755  0049E6  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 19756  0049EA  0E0F               	movlw	15
 19757  0049EC  0100               	movlb	0	; () banked
 19758  0049EE  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 19759  0049F0  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 19760  0049F2  0B0F               	andlw	15
 19761  0049F4  0B0F               	andlw	15
 19762  0049F6  0D0A               	mullw	10
 19763  0049F8  50F3               	movf	prodl,w,c
 19764  0049FA  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 19765  0049FC  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 19766                           
 19767                           ;rtcc_drv.c: 241: break;
 19768  0049FE  D02D               	goto	l418
 19769  004A00                     l421:
 19770                           
 19771                           ; BSR set to: 0
 19772                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 19773  004A00  010F               	movlb	15	; () banked
 19774  004A02  933F               	bcf	63,1,b	;volatile
 19775                           
 19776                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 19777  004A04  813F               	bsf	63,0,b	;volatile
 19778                           
 19779                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 19780  004A06  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 19781                           
 19782                           ;rtcc_drv.c: 249: break;
 19783  004A0A  D027               	goto	l418
 19784  004A0C                     l422:
 19785                           
 19786                           ; BSR set to: 0
 19787                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 19788  004A0C  010F               	movlb	15	; () banked
 19789  004A0E  933F               	bcf	63,1,b	;volatile
 19790  004A10  D7E2               	goto	L20
 19791  004A12                     L18:
 19792                           
 19793                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 19794  004A12  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 19795  004A16  D7E7               	goto	l13436
 19796  004A18                     l423:
 19797                           
 19798                           ; BSR set to: 0
 19799                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 19800  004A18  010F               	movlb	15	; () banked
 19801  004A1A  933F               	bcf	63,1,b	;volatile
 19802  004A1C                     L19:
 19803                           
 19804                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 19805  004A1C  913F               	bcf	63,0,b	;volatile
 19806                           
 19807                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 19808  004A1E  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 19809  004A22  D7E1               	goto	l13436
 19810  004A24                     l424:
 19811                           
 19812                           ; BSR set to: 0
 19813                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 19814  004A24  010F               	movlb	15	; () banked
 19815  004A26  933F               	bcf	63,1,b	;volatile
 19816  004A28                     L22:
 19817                           
 19818                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 19819  004A28  913F               	bcf	63,0,b	;volatile
 19820  004A2A  D7F3               	goto	L18
 19821  004A2C                     l416:
 19822                           
 19823                           ; BSR set to: 0
 19824  004A2C  0100               	movlb	0	; () banked
 19825  004A2E  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 19826                           
 19827                           ; Switch size 1, requested type "space"
 19828                           ; Number of cases is 7, Range of values is 0 to 6
 19829                           ; switch strategies available:
 19830                           ; Name         Instructions Cycles
 19831                           ; simple_byte           22    12 (average)
 19832                           ;	Chosen strategy is simple_byte
 19833  004A30  0A00               	xorlw	0	; case 0
 19834  004A32  B4D8               	btfsc	status,2,c
 19835  004A34  D7CE               	goto	l417
 19836  004A36  0A01               	xorlw	1	; case 1
 19837  004A38  B4D8               	btfsc	status,2,c
 19838  004A3A  D7CF               	goto	l419
 19839  004A3C  0A03               	xorlw	3	; case 2
 19840  004A3E  B4D8               	btfsc	status,2,c
 19841  004A40  D7CF               	goto	l420
 19842  004A42  0A01               	xorlw	1	; case 3
 19843  004A44  B4D8               	btfsc	status,2,c
 19844  004A46  D7DC               	goto	l421
 19845  004A48  0A07               	xorlw	7	; case 4
 19846  004A4A  B4D8               	btfsc	status,2,c
 19847  004A4C  D7DF               	goto	l422
 19848  004A4E  0A01               	xorlw	1	; case 5
 19849  004A50  B4D8               	btfsc	status,2,c
 19850  004A52  D7E2               	goto	l423
 19851  004A54  0A03               	xorlw	3	; case 6
 19852  004A56  B4D8               	btfsc	status,2,c
 19853  004A58  D7E5               	goto	l424
 19854  004A5A                     l418:
 19855                           
 19856                           ;rtcc_drv.c: 286: return RetValue;
 19857                           
 19858                           ; BSR set to: 0
 19859  004A5A  0100               	movlb	0	; () banked
 19860  004A5C  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 19861  004A5E  0012               	return	
 19862  004A60                     __end_of_Rtcc_GetRtccValue:
 19863                           	opt stack 0
 19864                           tosu	equ	0xFFF
 19865                           tosh	equ	0xFFE
 19866                           tosl	equ	0xFFD
 19867                           pclath	equ	0xFFA
 19868                           tblptru	equ	0xFF8
 19869                           tblptrh	equ	0xFF7
 19870                           tblptrl	equ	0xFF6
 19871                           tablat	equ	0xFF5
 19872                           prodh	equ	0xFF4
 19873                           prodl	equ	0xFF3
 19874                           intcon	equ	0xFF2
 19875                           intcon2	equ	0xFF1
 19876                           intcon3	equ	0xFF0
 19877                           indf0	equ	0xFEF
 19878                           postinc0	equ	0xFEE
 19879                           plusw0	equ	0xFEB
 19880                           fsr0h	equ	0xFEA
 19881                           fsr0l	equ	0xFE9
 19882                           wreg	equ	0xFE8
 19883                           indf1	equ	0xFE7
 19884                           postinc1	equ	0xFE6
 19885                           postdec1	equ	0xFE5
 19886                           fsr1h	equ	0xFE2
 19887                           fsr1l	equ	0xFE1
 19888                           indf2	equ	0xFDF
 19889                           postinc2	equ	0xFDE
 19890                           postdec2	equ	0xFDD
 19891                           plusw2	equ	0xFDB
 19892                           fsr2h	equ	0xFDA
 19893                           fsr2l	equ	0xFD9
 19894                           status	equ	0xFD8
 19895                           
 19896 ;; *************** function _Rtcc_SetRtcStatus *****************
 19897 ;; Defined at:
 19898 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19899 ;; Parameters:    Size  Location     Type
 19900 ;;  Status          1    wreg     unsigned char 
 19901 ;; Auto vars:     Size  Location     Type
 19902 ;;  Status          1   29[BANK0 ] unsigned char 
 19903 ;; Return value:  Size  Location     Type
 19904 ;;                  1    wreg      void 
 19905 ;; Registers used:
 19906 ;;		wreg
 19907 ;; Tracked objects:
 19908 ;;		On entry : 0/0
 19909 ;;		On exit  : 0/0
 19910 ;;		Unchanged: 0/0
 19911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19913 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19915 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19916 ;;Total ram usage:        1 bytes
 19917 ;; Hardware stack levels used:    1
 19918 ;; Hardware stack levels required when called:   11
 19919 ;; This function calls:
 19920 ;;		Nothing
 19921 ;; This function is called by:
 19922 ;;		_Rtcm_MainTask
 19923 ;; This function uses a non-reentrant model
 19924 ;;
 19925                           
 19926                           	psect	text86
 19927  006232                     __ptext86:
 19928                           	opt stack 0
 19929  006232                     _Rtcc_SetRtcStatus:
 19930                           	opt stack 16
 19931                           
 19932                           ; BSR set to: 0
 19933                           ;incstack = 0
 19934                           ;Rtcc_SetRtcStatus@Status stored from wreg
 19935  006232  0100               	movlb	0	; () banked
 19936  006234  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 19937                           
 19938                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 19939  006236  0100               	movlb	0	; () banked
 19940  006238  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 19941  00623A  D003               	bra	u13525
 19942  00623C  010F               	movlb	15	; () banked
 19943  00623E  9F3F               	bcf	63,7,b	;volatile
 19944  006240  D002               	bra	u13526
 19945  006242                     u13525:
 19946  006242  010F               	movlb	15	; () banked
 19947  006244  8F3F               	bsf	63,7,b	;volatile
 19948  006246                     u13526:
 19949                           
 19950                           ; BSR set to: 15
 19951  006246  0012               	return		;funcret
 19952  006248                     __end_of_Rtcc_SetRtcStatus:
 19953                           	opt stack 0
 19954                           tosu	equ	0xFFF
 19955                           tosh	equ	0xFFE
 19956                           tosl	equ	0xFFD
 19957                           pclath	equ	0xFFA
 19958                           tblptru	equ	0xFF8
 19959                           tblptrh	equ	0xFF7
 19960                           tblptrl	equ	0xFF6
 19961                           tablat	equ	0xFF5
 19962                           prodh	equ	0xFF4
 19963                           prodl	equ	0xFF3
 19964                           intcon	equ	0xFF2
 19965                           intcon2	equ	0xFF1
 19966                           intcon3	equ	0xFF0
 19967                           indf0	equ	0xFEF
 19968                           postinc0	equ	0xFEE
 19969                           plusw0	equ	0xFEB
 19970                           fsr0h	equ	0xFEA
 19971                           fsr0l	equ	0xFE9
 19972                           wreg	equ	0xFE8
 19973                           indf1	equ	0xFE7
 19974                           postinc1	equ	0xFE6
 19975                           postdec1	equ	0xFE5
 19976                           fsr1h	equ	0xFE2
 19977                           fsr1l	equ	0xFE1
 19978                           indf2	equ	0xFDF
 19979                           postinc2	equ	0xFDE
 19980                           postdec2	equ	0xFDD
 19981                           plusw2	equ	0xFDB
 19982                           fsr2h	equ	0xFDA
 19983                           fsr2l	equ	0xFD9
 19984                           status	equ	0xFD8
 19985                           
 19986 ;; *************** function _Rtcc_RtcConfig *****************
 19987 ;; Defined at:
 19988 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19989 ;; Parameters:    Size  Location     Type
 19990 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 19991 ;;		 -> RtcConfig(4), 
 19992 ;; Auto vars:     Size  Location     Type
 19993 ;;		None
 19994 ;; Return value:  Size  Location     Type
 19995 ;;                  1    wreg      void 
 19996 ;; Registers used:
 19997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19998 ;; Tracked objects:
 19999 ;;		On entry : 0/0
 20000 ;;		On exit  : 0/0
 20001 ;;		Unchanged: 0/0
 20002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20003 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20005 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20006 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20007 ;;Total ram usage:        3 bytes
 20008 ;; Hardware stack levels used:    1
 20009 ;; Hardware stack levels required when called:   12
 20010 ;; This function calls:
 20011 ;;		_RtccIrqInit
 20012 ;; This function is called by:
 20013 ;;		_Rtcm_MainTask
 20014 ;; This function uses a non-reentrant model
 20015 ;;
 20016                           
 20017                           	psect	text87
 20018  004636                     __ptext87:
 20019                           	opt stack 0
 20020  004636                     _Rtcc_RtcConfig:
 20021                           	opt stack 15
 20022                           
 20023                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20024                           
 20025                           ; BSR set to: 15
 20026                           ;incstack = 0
 20027  004636  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20028  00463A  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20029  00463E  50DF               	movf	indf2,w,c
 20030  004640  0100               	movlb	0	; () banked
 20031  004642  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20032  004644  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20033  004646  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20034  004648  010F               	movlb	15	; () banked
 20035  00464A  513F               	movf	63,w,b	;volatile
 20036  00464C  0100               	movlb	0	; () banked
 20037  00464E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20038  004650  0BFB               	andlw	-5
 20039  004652  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20040  004654  010F               	movlb	15	; () banked
 20041  004656  6F3F               	movwf	63,b	;volatile
 20042                           
 20043                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20044  004658  0100               	movlb	0	; () banked
 20045  00465A  EE20 F001          	lfsr	2,1
 20046  00465E  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20047  004660  26D9               	addwf	fsr2l,f,c
 20048  004662  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20049  004664  22DA               	addwfc	fsr2h,f,c
 20050  004666  50DF               	movf	indf2,w,c
 20051  004668  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20052  00466A  0E01               	movlw	1
 20053  00466C  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20054  00466E  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20055  004670  010F               	movlb	15	; () banked
 20056  004672  513C               	movf	60,w,b	;volatile
 20057  004674  0100               	movlb	0	; () banked
 20058  004676  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20059  004678  0BFD               	andlw	-3
 20060  00467A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20061  00467C  010F               	movlb	15	; () banked
 20062  00467E  6F3C               	movwf	60,b	;volatile
 20063                           
 20064                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20065  004680  0100               	movlb	0	; () banked
 20066  004682  EE20 F001          	lfsr	2,1
 20067  004686  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20068  004688  26D9               	addwf	fsr2l,f,c
 20069  00468A  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20070  00468C  22DA               	addwfc	fsr2h,f,c
 20071  00468E  50DF               	movf	indf2,w,c
 20072  004690  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20073  004692  90D8               	bcf	status,0,c
 20074  004694  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20075  004696  0E01               	movlw	1
 20076  004698  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20077  00469A  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20078  00469C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20079  00469E  010F               	movlb	15	; () banked
 20080  0046A0  513C               	movf	60,w,b	;volatile
 20081  0046A2  0100               	movlb	0	; () banked
 20082  0046A4  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20083  0046A6  0BFB               	andlw	-5
 20084  0046A8  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20085  0046AA  010F               	movlb	15	; () banked
 20086  0046AC  6F3C               	movwf	60,b	;volatile
 20087                           
 20088                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20089  0046AE  0100               	movlb	0	; () banked
 20090  0046B0  EE20 F002          	lfsr	2,2
 20091  0046B4  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20092  0046B6  26D9               	addwf	fsr2l,f,c
 20093  0046B8  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20094  0046BA  22DA               	addwfc	fsr2h,f,c
 20095  0046BC  04DE               	decf	postinc2,w,c
 20096  0046BE  A4D8               	btfss	status,2,c
 20097  0046C0  0012               	return	
 20098                           
 20099                           ; BSR set to: 0
 20100                           ;rtcc_drv.c: 115: {
 20101                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20102  0046C2  EE20 F003          	lfsr	2,3
 20103  0046C6  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20104  0046C8  26D9               	addwf	fsr2l,f,c
 20105  0046CA  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20106  0046CC  22DA               	addwfc	fsr2h,f,c
 20107  0046CE  50DF               	movf	indf2,w,c
 20108  0046D0  EC24  F031         	call	_RtccIrqInit
 20109  0046D4  0012               	return	
 20110  0046D6                     __end_of_Rtcc_RtcConfig:
 20111                           	opt stack 0
 20112                           tosu	equ	0xFFF
 20113                           tosh	equ	0xFFE
 20114                           tosl	equ	0xFFD
 20115                           pclath	equ	0xFFA
 20116                           tblptru	equ	0xFF8
 20117                           tblptrh	equ	0xFF7
 20118                           tblptrl	equ	0xFF6
 20119                           tablat	equ	0xFF5
 20120                           prodh	equ	0xFF4
 20121                           prodl	equ	0xFF3
 20122                           intcon	equ	0xFF2
 20123                           intcon2	equ	0xFF1
 20124                           intcon3	equ	0xFF0
 20125                           indf0	equ	0xFEF
 20126                           postinc0	equ	0xFEE
 20127                           plusw0	equ	0xFEB
 20128                           fsr0h	equ	0xFEA
 20129                           fsr0l	equ	0xFE9
 20130                           wreg	equ	0xFE8
 20131                           indf1	equ	0xFE7
 20132                           postinc1	equ	0xFE6
 20133                           postdec1	equ	0xFE5
 20134                           fsr1h	equ	0xFE2
 20135                           fsr1l	equ	0xFE1
 20136                           indf2	equ	0xFDF
 20137                           postinc2	equ	0xFDE
 20138                           postdec2	equ	0xFDD
 20139                           plusw2	equ	0xFDB
 20140                           fsr2h	equ	0xFDA
 20141                           fsr2l	equ	0xFD9
 20142                           status	equ	0xFD8
 20143                           
 20144 ;; *************** function _RtccIrqInit *****************
 20145 ;; Defined at:
 20146 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20147 ;; Parameters:    Size  Location     Type
 20148 ;;  Priority        1    wreg     enum E7716
 20149 ;; Auto vars:     Size  Location     Type
 20150 ;;  Priority        1   29[BANK0 ] enum E7716
 20151 ;; Return value:  Size  Location     Type
 20152 ;;                  1    wreg      void 
 20153 ;; Registers used:
 20154 ;;		wreg
 20155 ;; Tracked objects:
 20156 ;;		On entry : 0/0
 20157 ;;		On exit  : 0/0
 20158 ;;		Unchanged: 0/0
 20159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20163 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20164 ;;Total ram usage:        1 bytes
 20165 ;; Hardware stack levels used:    1
 20166 ;; Hardware stack levels required when called:   11
 20167 ;; This function calls:
 20168 ;;		Nothing
 20169 ;; This function is called by:
 20170 ;;		_Rtcc_RtcConfig
 20171 ;; This function uses a non-reentrant model
 20172 ;;
 20173                           
 20174                           	psect	text88
 20175  006248                     __ptext88:
 20176                           	opt stack 0
 20177  006248                     _RtccIrqInit:
 20178                           	opt stack 15
 20179                           
 20180                           ;incstack = 0
 20181                           ;RtccIrqInit@Priority stored from wreg
 20182  006248  0100               	movlb	0	; () banked
 20183  00624A  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20184                           
 20185                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20186  00624C  90A4               	bcf	4004,0,c	;volatile
 20187                           
 20188                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20189  00624E  0100               	movlb	0	; () banked
 20190  006250  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20191  006252  D002               	bra	u12535
 20192  006254  90A5               	bcf	4005,0,c	;volatile
 20193  006256  D001               	bra	u12536
 20194  006258                     u12535:
 20195  006258  80A5               	bsf	4005,0,c	;volatile
 20196  00625A                     u12536:
 20197                           
 20198                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20199  00625A  80A3               	bsf	4003,0,c	;volatile
 20200  00625C  0012               	return		;funcret
 20201  00625E                     __end_of_RtccIrqInit:
 20202                           	opt stack 0
 20203                           tosu	equ	0xFFF
 20204                           tosh	equ	0xFFE
 20205                           tosl	equ	0xFFD
 20206                           pclath	equ	0xFFA
 20207                           tblptru	equ	0xFF8
 20208                           tblptrh	equ	0xFF7
 20209                           tblptrl	equ	0xFF6
 20210                           tablat	equ	0xFF5
 20211                           prodh	equ	0xFF4
 20212                           prodl	equ	0xFF3
 20213                           intcon	equ	0xFF2
 20214                           intcon2	equ	0xFF1
 20215                           intcon3	equ	0xFF0
 20216                           indf0	equ	0xFEF
 20217                           postinc0	equ	0xFEE
 20218                           plusw0	equ	0xFEB
 20219                           fsr0h	equ	0xFEA
 20220                           fsr0l	equ	0xFE9
 20221                           wreg	equ	0xFE8
 20222                           indf1	equ	0xFE7
 20223                           postinc1	equ	0xFE6
 20224                           postdec1	equ	0xFE5
 20225                           fsr1h	equ	0xFE2
 20226                           fsr1l	equ	0xFE1
 20227                           indf2	equ	0xFDF
 20228                           postinc2	equ	0xFDE
 20229                           postdec2	equ	0xFDD
 20230                           plusw2	equ	0xFDB
 20231                           fsr2h	equ	0xFDA
 20232                           fsr2l	equ	0xFD9
 20233                           status	equ	0xFD8
 20234                           
 20235 ;; *************** function _Rtcc_AlarmConfig *****************
 20236 ;; Defined at:
 20237 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20238 ;; Parameters:    Size  Location     Type
 20239 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20240 ;;		 -> AlCfg(4), 
 20241 ;; Auto vars:     Size  Location     Type
 20242 ;;		None
 20243 ;; Return value:  Size  Location     Type
 20244 ;;                  1    wreg      void 
 20245 ;; Registers used:
 20246 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20247 ;; Tracked objects:
 20248 ;;		On entry : 0/0
 20249 ;;		On exit  : 0/0
 20250 ;;		Unchanged: 0/0
 20251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20252 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20254 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20255 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20256 ;;Total ram usage:        3 bytes
 20257 ;; Hardware stack levels used:    1
 20258 ;; Hardware stack levels required when called:   11
 20259 ;; This function calls:
 20260 ;;		Nothing
 20261 ;; This function is called by:
 20262 ;;		_Rtcm_MainTask
 20263 ;; This function uses a non-reentrant model
 20264 ;;
 20265                           
 20266                           	psect	text89
 20267  004FEA                     __ptext89:
 20268                           	opt stack 0
 20269  004FEA                     _Rtcc_AlarmConfig:
 20270                           	opt stack 16
 20271                           
 20272                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20273                           
 20274                           ;incstack = 0
 20275  004FEA  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20276  004FEE  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20277  004FF2  50DF               	movf	indf2,w,c
 20278  004FF4  0100               	movlb	0	; () banked
 20279  004FF6  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20280  004FF8  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20281  004FFA  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20282  004FFC  5091               	movf	3985,w,c	;volatile
 20283  004FFE  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20284  005000  0B7F               	andlw	-129
 20285  005002  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20286  005004  6E91               	movwf	3985,c	;volatile
 20287                           
 20288                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20289  005006  EE20 F001          	lfsr	2,1
 20290  00500A  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20291  00500C  26D9               	addwf	fsr2l,f,c
 20292  00500E  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20293  005010  22DA               	addwfc	fsr2h,f,c
 20294  005012  50DF               	movf	indf2,w,c
 20295  005014  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20296  005016  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20297  005018  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20298  00501A  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20299  00501C  5091               	movf	3985,w,c	;volatile
 20300  00501E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20301  005020  0BBF               	andlw	-65
 20302  005022  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20303  005024  6E91               	movwf	3985,c	;volatile
 20304                           
 20305                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20306  005026  EE20 F002          	lfsr	2,2
 20307  00502A  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20308  00502C  26D9               	addwf	fsr2l,f,c
 20309  00502E  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20310  005030  22DA               	addwfc	fsr2h,f,c
 20311  005032  50DF               	movf	indf2,w,c
 20312  005034  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20313  005036  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20314  005038  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20315  00503A  5091               	movf	3985,w,c	;volatile
 20316  00503C  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20317  00503E  0BC3               	andlw	-61
 20318  005040  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20319  005042  6E91               	movwf	3985,c	;volatile
 20320                           
 20321                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20322  005044  EE20 F003          	lfsr	2,3
 20323  005048  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20324  00504A  26D9               	addwf	fsr2l,f,c
 20325  00504C  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20326  00504E  22DA               	addwfc	fsr2h,f,c
 20327  005050  50DF               	movf	indf2,w,c
 20328  005052  6E90               	movwf	3984,c	;volatile
 20329                           
 20330                           ; BSR set to: 0
 20331  005054  0012               	return		;funcret
 20332  005056                     __end_of_Rtcc_AlarmConfig:
 20333                           	opt stack 0
 20334                           tosu	equ	0xFFF
 20335                           tosh	equ	0xFFE
 20336                           tosl	equ	0xFFD
 20337                           pclath	equ	0xFFA
 20338                           tblptru	equ	0xFF8
 20339                           tblptrh	equ	0xFF7
 20340                           tblptrl	equ	0xFF6
 20341                           tablat	equ	0xFF5
 20342                           prodh	equ	0xFF4
 20343                           prodl	equ	0xFF3
 20344                           intcon	equ	0xFF2
 20345                           intcon2	equ	0xFF1
 20346                           intcon3	equ	0xFF0
 20347                           indf0	equ	0xFEF
 20348                           postinc0	equ	0xFEE
 20349                           plusw0	equ	0xFEB
 20350                           fsr0h	equ	0xFEA
 20351                           fsr0l	equ	0xFE9
 20352                           wreg	equ	0xFE8
 20353                           indf1	equ	0xFE7
 20354                           postinc1	equ	0xFE6
 20355                           postdec1	equ	0xFE5
 20356                           fsr1h	equ	0xFE2
 20357                           fsr1l	equ	0xFE1
 20358                           indf2	equ	0xFDF
 20359                           postinc2	equ	0xFDE
 20360                           postdec2	equ	0xFDD
 20361                           plusw2	equ	0xFDB
 20362                           fsr2h	equ	0xFDA
 20363                           fsr2l	equ	0xFD9
 20364                           status	equ	0xFD8
 20365                           
 20366 ;; *************** function _initFsm *****************
 20367 ;; Defined at:
 20368 ;;		line 177 in file "../Source/c/04_App/app_init.c"
 20369 ;; Parameters:    Size  Location     Type
 20370 ;;		None
 20371 ;; Auto vars:     Size  Location     Type
 20372 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 20373 ;; Return value:  Size  Location     Type
 20374 ;;                  1    wreg      unsigned char 
 20375 ;; Registers used:
 20376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20377 ;; Tracked objects:
 20378 ;;		On entry : 0/0
 20379 ;;		On exit  : 0/0
 20380 ;;		Unchanged: 0/0
 20381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20383 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20385 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20386 ;;Total ram usage:        1 bytes
 20387 ;; Hardware stack levels used:    1
 20388 ;; Hardware stack levels required when called:   18
 20389 ;; This function calls:
 20390 ;;		_initEeprom
 20391 ;;		_initGprsModem
 20392 ;; This function is called by:
 20393 ;;		_MyApp_Task
 20394 ;; This function uses a non-reentrant model
 20395 ;;
 20396                           
 20397                           	psect	text90
 20398  005812                     __ptext90:
 20399                           	opt stack 0
 20400  005812                     _initFsm:
 20401                           	opt stack 9
 20402                           
 20403                           ;app_init.c: 179: static initFsmStates currentState = INIT_FSM_MODEM;
 20404                           ;app_init.c: 180: bool isInitialized = 0;
 20405                           
 20406                           ; BSR set to: 0
 20407                           ;incstack = 0
 20408  005812  0E00               	movlw	0
 20409  005814  0101               	movlb	1	; () banked
 20410  005816  6F03               	movwf	initFsm@isInitialized& (0+255),b
 20411                           
 20412                           ;app_init.c: 182: switch (currentState)
 20413  005818  D013               	goto	l2646
 20414  00581A                     
 20415                           ; BSR set to: 1
 20416                           ;app_init.c: 185: if (initGprsModem())
 20417                           
 20418                           ; BSR set to: 1
 20419  00581A  EC30  F025         	call	_initGprsModem	;wreg free
 20420  00581E  0900               	iorlw	0
 20421  005820  B4D8               	btfsc	status,2,c
 20422  005822  D018               	goto	l2649
 20423                           
 20424                           ;app_init.c: 186: {
 20425                           ;app_init.c: 187: currentState = INIT_FSM_EEPROM;
 20426  005824  0E01               	movlw	1
 20427  005826  D006               	goto	L23
 20428  005828                     
 20429                           ; BSR set to: 1
 20430                           ;app_init.c: 192: if (initEeprom())
 20431                           
 20432                           ; BSR set to: 1
 20433  005828  EC78  F022         	call	_initEeprom	;wreg free
 20434  00582C  0900               	iorlw	0
 20435  00582E  B4D8               	btfsc	status,2,c
 20436  005830  D011               	goto	l2649
 20437                           
 20438                           ;app_init.c: 193: {
 20439                           ;app_init.c: 194: currentState = INIT_FSM_COMPLETE;
 20440  005832  0E02               	movlw	2
 20441  005834                     L23:
 20442  005834  0101               	movlb	1	; () banked
 20443  005836  6FD3               	movwf	initFsm@currentState& (0+255),b
 20444                           
 20445                           ; BSR set to: 1
 20446                           ;app_init.c: 195: }
 20447                           ;app_init.c: 196: break;
 20448  005838  D00D               	goto	l2649
 20449  00583A                     
 20450                           ; BSR set to: 1
 20451                           ;app_init.c: 199: isInitialized = 1;
 20452                           
 20453                           ; BSR set to: 1
 20454  00583A  0E01               	movlw	1
 20455  00583C  6F03               	movwf	initFsm@isInitialized& (0+255),b
 20456                           
 20457                           ; BSR set to: 1
 20458                           ;app_init.c: 204: }
 20459                           
 20460                           ; BSR set to: 1
 20461                           ;app_init.c: 203: break;
 20462                           
 20463                           ;app_init.c: 202: default:
 20464                           
 20465                           ;app_init.c: 200: break;
 20466  00583E  D00A               	goto	l2649
 20467  005840                     l2646:
 20468                           
 20469                           ; BSR set to: 1
 20470                           
 20471                           ; BSR set to: 1
 20472  005840  51D3               	movf	initFsm@currentState& (0+255),w,b
 20473                           
 20474                           ; Switch size 1, requested type "space"
 20475                           ; Number of cases is 3, Range of values is 0 to 2
 20476                           ; switch strategies available:
 20477                           ; Name         Instructions Cycles
 20478                           ; simple_byte           10     6 (average)
 20479                           ;	Chosen strategy is simple_byte
 20480  005842  0A00               	xorlw	0	; case 0
 20481  005844  B4D8               	btfsc	status,2,c
 20482  005846  D7E9               	goto	l2647
 20483  005848  0A01               	xorlw	1	; case 1
 20484  00584A  B4D8               	btfsc	status,2,c
 20485  00584C  D7ED               	goto	l2650
 20486  00584E  0A03               	xorlw	3	; case 2
 20487  005850  B4D8               	btfsc	status,2,c
 20488  005852  D7F3               	goto	l2652
 20489  005854                     l2649:
 20490                           
 20491                           ;app_init.c: 205: return isInitialized;
 20492                           
 20493                           ; BSR set to: 1
 20494  005854  0101               	movlb	1	; () banked
 20495  005856  5103               	movf	initFsm@isInitialized& (0+255),w,b
 20496  005858  0012               	return	
 20497  00585A                     __end_of_initFsm:
 20498                           	opt stack 0
 20499                           tosu	equ	0xFFF
 20500                           tosh	equ	0xFFE
 20501                           tosl	equ	0xFFD
 20502                           pclath	equ	0xFFA
 20503                           tblptru	equ	0xFF8
 20504                           tblptrh	equ	0xFF7
 20505                           tblptrl	equ	0xFF6
 20506                           tablat	equ	0xFF5
 20507                           prodh	equ	0xFF4
 20508                           prodl	equ	0xFF3
 20509                           intcon	equ	0xFF2
 20510                           intcon2	equ	0xFF1
 20511                           intcon3	equ	0xFF0
 20512                           indf0	equ	0xFEF
 20513                           postinc0	equ	0xFEE
 20514                           plusw0	equ	0xFEB
 20515                           fsr0h	equ	0xFEA
 20516                           fsr0l	equ	0xFE9
 20517                           wreg	equ	0xFE8
 20518                           indf1	equ	0xFE7
 20519                           postinc1	equ	0xFE6
 20520                           postdec1	equ	0xFE5
 20521                           fsr1h	equ	0xFE2
 20522                           fsr1l	equ	0xFE1
 20523                           indf2	equ	0xFDF
 20524                           postinc2	equ	0xFDE
 20525                           postdec2	equ	0xFDD
 20526                           plusw2	equ	0xFDB
 20527                           fsr2h	equ	0xFDA
 20528                           fsr2l	equ	0xFD9
 20529                           status	equ	0xFD8
 20530                           
 20531 ;; *************** function _initGprsModem *****************
 20532 ;; Defined at:
 20533 ;;		line 83 in file "../Source/c/04_App/app_init.c"
 20534 ;; Parameters:    Size  Location     Type
 20535 ;;		None
 20536 ;; Auto vars:     Size  Location     Type
 20537 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 20538 ;; Return value:  Size  Location     Type
 20539 ;;                  1    wreg      unsigned char 
 20540 ;; Registers used:
 20541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20542 ;; Tracked objects:
 20543 ;;		On entry : 0/0
 20544 ;;		On exit  : 0/0
 20545 ;;		Unchanged: 0/0
 20546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20548 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20550 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20551 ;;Total ram usage:        1 bytes
 20552 ;; Hardware stack levels used:    1
 20553 ;; Hardware stack levels required when called:   14
 20554 ;; This function calls:
 20555 ;;		_Mdm_SetSmsFormat
 20556 ;;		_Uart_WriteConstString
 20557 ;;		_secondsAppTimer
 20558 ;; This function is called by:
 20559 ;;		_initFsm
 20560 ;; This function uses a non-reentrant model
 20561 ;;
 20562                           
 20563                           	psect	text91
 20564  004A60                     __ptext91:
 20565                           	opt stack 0
 20566  004A60                     _initGprsModem:
 20567                           	opt stack 12
 20568                           
 20569                           ;app_init.c: 85: static uint16_t modemCounter = 0;
 20570                           ;app_init.c: 86: static modemStates currentState = MODEM_INIT;
 20571                           ;app_init.c: 87: bool isInitialized = 0;
 20572                           
 20573                           ; BSR set to: 1
 20574                           ;incstack = 0
 20575  004A60  0E00               	movlw	0
 20576  004A62  0100               	movlb	0	; () banked
 20577  004A64  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 20578                           
 20579                           ;app_init.c: 89: switch(currentState)
 20580  004A66  D033               	goto	l2616
 20581  004A68                     
 20582                           ;app_init.c: 92: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 20583                           
 20584                           ; BSR set to: 0
 20585  004A68  0E03               	movlw	3
 20586  004A6A  0100               	movlb	0	; () banked
 20587  004A6C  19D2               	xorwf	_MdmStatus& (0+255),w,b
 20588  004A6E  B4D8               	btfsc	status,2,c
 20589  004A70  D003               	goto	u13380
 20590                           
 20591                           ; BSR set to: 0
 20592  004A72  05D2               	decf	_MdmStatus& (0+255),w,b
 20593  004A74  A4D8               	btfss	status,2,c
 20594  004A76  D039               	goto	l2622
 20595  004A78                     u13380:
 20596                           
 20597                           ; BSR set to: 0
 20598                           ;app_init.c: 93: {
 20599                           ;app_init.c: 94: if (secondsAppTimer(4, &modemCounter, 0))
 20600                           
 20601                           ; BSR set to: 0
 20602  004A78  0EBB               	movlw	low initGprsModem@modemCounter
 20603  004A7A  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20604  004A7C  0E03               	movlw	high initGprsModem@modemCounter
 20605  004A7E  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20606  004A80  0E00               	movlw	0
 20607  004A82  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20608  004A84  0E04               	movlw	4
 20609  004A86  ECCA  F022         	call	_secondsAppTimer
 20610  004A8A  0900               	iorlw	0
 20611  004A8C  B4D8               	btfsc	status,2,c
 20612  004A8E  D02D               	goto	l2622
 20613                           
 20614                           ;app_init.c: 95: {
 20615                           ;app_init.c: 96: Mdm_SetSmsFormat(1);
 20616  004A90  0E01               	movlw	1
 20617  004A92  EC49  F02B         	call	_Mdm_SetSmsFormat
 20618                           
 20619                           ;app_init.c: 97: currentState = MODEM_DELETE_SMS;
 20620  004A96  0E01               	movlw	1
 20621  004A98  D013               	goto	L25
 20622  004A9A                     
 20623                           ; BSR set to: 1
 20624                           ;app_init.c: 103: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 20625                           
 20626                           ; BSR set to: 1
 20627  004A9A  0E07               	movlw	low STR_29
 20628  004A9C  0100               	movlb	0	; () banked
 20629  004A9E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 20630  004AA0  0EFF               	movlw	high STR_29
 20631  004AA2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 20632  004AA4  0E01               	movlw	1
 20633  004AA6  ECFB  F02C         	call	_Uart_WriteConstString
 20634                           
 20635                           ;app_init.c: 104: currentState = MODEM_SET_CALLER_ID;
 20636  004AAA  0E02               	movlw	2
 20637  004AAC  D009               	goto	L25
 20638  004AAE                     
 20639                           ; BSR set to: 1
 20640                           ;app_init.c: 108: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 20641                           
 20642                           ; BSR set to: 1
 20643  004AAE  0EA9               	movlw	low STR_30
 20644  004AB0  0100               	movlb	0	; () banked
 20645  004AB2  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 20646  004AB4  0EFF               	movlw	high STR_30
 20647  004AB6  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 20648  004AB8  0E01               	movlw	1
 20649  004ABA  ECFB  F02C         	call	_Uart_WriteConstString
 20650                           
 20651                           ;app_init.c: 109: currentState = MODEM_INIT_COMPLETE;
 20652  004ABE  0E03               	movlw	3
 20653  004AC0                     L25:
 20654  004AC0  0101               	movlb	1	; () banked
 20655  004AC2  6FD5               	movwf	initGprsModem@currentState& (0+255),b
 20656                           
 20657                           ;app_init.c: 110: break;
 20658  004AC4  D012               	goto	l2622
 20659  004AC6                     
 20660                           ; BSR set to: 1
 20661                           ;app_init.c: 113: isInitialized = 1;
 20662                           
 20663                           ; BSR set to: 1
 20664  004AC6  0E01               	movlw	1
 20665  004AC8  0100               	movlb	0	; () banked
 20666  004ACA  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 20667                           
 20668                           ; BSR set to: 0
 20669                           ;app_init.c: 118: }
 20670                           
 20671                           ; BSR set to: 0
 20672                           ;app_init.c: 117: break;
 20673                           
 20674                           ;app_init.c: 116: default:
 20675                           
 20676                           ;app_init.c: 114: break;
 20677  004ACC  D00E               	goto	l2622
 20678  004ACE                     l2616:
 20679                           
 20680                           ; BSR set to: 0
 20681                           
 20682                           ; BSR set to: 0
 20683  004ACE  0101               	movlb	1	; () banked
 20684  004AD0  51D5               	movf	initGprsModem@currentState& (0+255),w,b
 20685                           
 20686                           ; Switch size 1, requested type "space"
 20687                           ; Number of cases is 4, Range of values is 0 to 3
 20688                           ; switch strategies available:
 20689                           ; Name         Instructions Cycles
 20690                           ; simple_byte           13     7 (average)
 20691                           ;	Chosen strategy is simple_byte
 20692  004AD2  0A00               	xorlw	0	; case 0
 20693  004AD4  B4D8               	btfsc	status,2,c
 20694  004AD6  D7C8               	goto	l2617
 20695  004AD8  0A01               	xorlw	1	; case 1
 20696  004ADA  B4D8               	btfsc	status,2,c
 20697  004ADC  D7DE               	goto	l2623
 20698  004ADE  0A03               	xorlw	3	; case 2
 20699  004AE0  B4D8               	btfsc	status,2,c
 20700  004AE2  D7E5               	goto	l2624
 20701  004AE4  0A01               	xorlw	1	; case 3
 20702  004AE6  B4D8               	btfsc	status,2,c
 20703  004AE8  D7EE               	goto	l2625
 20704  004AEA                     l2622:
 20705                           
 20706                           ;app_init.c: 119: return isInitialized;
 20707                           
 20708                           ; BSR set to: 1
 20709  004AEA  0100               	movlb	0	; () banked
 20710  004AEC  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 20711  004AEE  0012               	return	
 20712  004AF0                     __end_of_initGprsModem:
 20713                           	opt stack 0
 20714                           tosu	equ	0xFFF
 20715                           tosh	equ	0xFFE
 20716                           tosl	equ	0xFFD
 20717                           pclath	equ	0xFFA
 20718                           tblptru	equ	0xFF8
 20719                           tblptrh	equ	0xFF7
 20720                           tblptrl	equ	0xFF6
 20721                           tablat	equ	0xFF5
 20722                           prodh	equ	0xFF4
 20723                           prodl	equ	0xFF3
 20724                           intcon	equ	0xFF2
 20725                           intcon2	equ	0xFF1
 20726                           intcon3	equ	0xFF0
 20727                           indf0	equ	0xFEF
 20728                           postinc0	equ	0xFEE
 20729                           plusw0	equ	0xFEB
 20730                           fsr0h	equ	0xFEA
 20731                           fsr0l	equ	0xFE9
 20732                           wreg	equ	0xFE8
 20733                           indf1	equ	0xFE7
 20734                           postinc1	equ	0xFE6
 20735                           postdec1	equ	0xFE5
 20736                           fsr1h	equ	0xFE2
 20737                           fsr1l	equ	0xFE1
 20738                           indf2	equ	0xFDF
 20739                           postinc2	equ	0xFDE
 20740                           postdec2	equ	0xFDD
 20741                           plusw2	equ	0xFDB
 20742                           fsr2h	equ	0xFDA
 20743                           fsr2l	equ	0xFD9
 20744                           status	equ	0xFD8
 20745                           
 20746 ;; *************** function _Mdm_SetSmsFormat *****************
 20747 ;; Defined at:
 20748 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 20749 ;; Parameters:    Size  Location     Type
 20750 ;;  TextFormat      1    wreg     unsigned char 
 20751 ;; Auto vars:     Size  Location     Type
 20752 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 20753 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 20754 ;;  Index           1   35[BANK0 ] unsigned char 
 20755 ;; Return value:  Size  Location     Type
 20756 ;;                  1    wreg      void 
 20757 ;; Registers used:
 20758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20759 ;; Tracked objects:
 20760 ;;		On entry : 0/0
 20761 ;;		On exit  : 0/0
 20762 ;;		Unchanged: 0/0
 20763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20765 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20767 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20768 ;;Total ram usage:       22 bytes
 20769 ;; Hardware stack levels used:    1
 20770 ;; Hardware stack levels required when called:   13
 20771 ;; This function calls:
 20772 ;;		_Uart_WriteString
 20773 ;; This function is called by:
 20774 ;;		_initGprsModem
 20775 ;; This function uses a non-reentrant model
 20776 ;;
 20777                           
 20778                           	psect	text92
 20779  005692                     __ptext92:
 20780                           	opt stack 0
 20781  005692                     _Mdm_SetSmsFormat:
 20782                           	opt stack 12
 20783                           
 20784                           ; BSR set to: 0
 20785                           ;incstack = 0
 20786                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 20787  005692  0100               	movlb	0	; () banked
 20788  005694  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 20789                           
 20790                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 20791                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 20792  005696  0E00               	movlw	0
 20793  005698  0100               	movlb	0	; () banked
 20794  00569A  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 20795                           
 20796                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 20797  00569C  0E41               	movlw	65
 20798  00569E  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 20799                           
 20800                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 20801  0056A0  0E54               	movlw	84
 20802  0056A2  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 20803                           
 20804                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 20805  0056A4  0E2B               	movlw	43
 20806  0056A6  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 20807                           
 20808                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 20809  0056A8  0E43               	movlw	67
 20810  0056AA  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 20811                           
 20812                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 20813  0056AC  0E4D               	movlw	77
 20814  0056AE  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 20815                           
 20816                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 20817  0056B0  0E47               	movlw	71
 20818  0056B2  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 20819                           
 20820                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 20821  0056B4  0E46               	movlw	70
 20822  0056B6  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 20823                           
 20824                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 20825  0056B8  0E3D               	movlw	61
 20826  0056BA  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 20827                           
 20828                           ; BSR set to: 0
 20829                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 20830  0056BC  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 20831  0056BE  A4D8               	btfss	status,2,c
 20832  0056C0  D002               	goto	l1121
 20833                           
 20834                           ; BSR set to: 0
 20835                           ;mdm_gsm_gprs.c: 854: {
 20836                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 20837  0056C2  0E31               	movlw	49
 20838  0056C4  D001               	goto	L26
 20839  0056C6                     l1121:
 20840                           
 20841                           ; BSR set to: 0
 20842                           ;mdm_gsm_gprs.c: 857: else
 20843                           ;mdm_gsm_gprs.c: 858: {
 20844                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 20845                           
 20846                           ; BSR set to: 0
 20847  0056C6  0E30               	movlw	48
 20848  0056C8                     L26:
 20849  0056C8  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 20850                           
 20851                           ; BSR set to: 0
 20852                           ;mdm_gsm_gprs.c: 860: }
 20853                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 20854  0056CA  0E0D               	movlw	13
 20855  0056CC  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 20856                           
 20857                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 20858  0056CE  0E00               	movlw	0
 20859  0056D0  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 20860                           
 20861                           ; BSR set to: 0
 20862                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 20863  0056D2  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 20864  0056D4  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 20865  0056D6  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 20866  0056D8  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 20867  0056DA  0E01               	movlw	1
 20868  0056DC  ECBC  F02D         	call	_Uart_WriteString
 20869  0056E0  0012               	return		;funcret
 20870  0056E2                     __end_of_Mdm_SetSmsFormat:
 20871                           	opt stack 0
 20872                           tosu	equ	0xFFF
 20873                           tosh	equ	0xFFE
 20874                           tosl	equ	0xFFD
 20875                           pclath	equ	0xFFA
 20876                           tblptru	equ	0xFF8
 20877                           tblptrh	equ	0xFF7
 20878                           tblptrl	equ	0xFF6
 20879                           tablat	equ	0xFF5
 20880                           prodh	equ	0xFF4
 20881                           prodl	equ	0xFF3
 20882                           intcon	equ	0xFF2
 20883                           intcon2	equ	0xFF1
 20884                           intcon3	equ	0xFF0
 20885                           indf0	equ	0xFEF
 20886                           postinc0	equ	0xFEE
 20887                           plusw0	equ	0xFEB
 20888                           fsr0h	equ	0xFEA
 20889                           fsr0l	equ	0xFE9
 20890                           wreg	equ	0xFE8
 20891                           indf1	equ	0xFE7
 20892                           postinc1	equ	0xFE6
 20893                           postdec1	equ	0xFE5
 20894                           fsr1h	equ	0xFE2
 20895                           fsr1l	equ	0xFE1
 20896                           indf2	equ	0xFDF
 20897                           postinc2	equ	0xFDE
 20898                           postdec2	equ	0xFDD
 20899                           plusw2	equ	0xFDB
 20900                           fsr2h	equ	0xFDA
 20901                           fsr2l	equ	0xFD9
 20902                           status	equ	0xFD8
 20903                           
 20904 ;; *************** function _initEeprom *****************
 20905 ;; Defined at:
 20906 ;;		line 126 in file "../Source/c/04_App/app_init.c"
 20907 ;; Parameters:    Size  Location     Type
 20908 ;;		None
 20909 ;; Auto vars:     Size  Location     Type
 20910 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 20911 ;;  memoryOpResu    1    1[BANK1 ] enum E8245
 20912 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 20913 ;; Return value:  Size  Location     Type
 20914 ;;                  1    wreg      unsigned char 
 20915 ;; Registers used:
 20916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20917 ;; Tracked objects:
 20918 ;;		On entry : 0/0
 20919 ;;		On exit  : 0/0
 20920 ;;		Unchanged: 0/0
 20921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20923 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20925 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20926 ;;Total ram usage:        3 bytes
 20927 ;; Hardware stack levels used:    1
 20928 ;; Hardware stack levels required when called:   17
 20929 ;; This function calls:
 20930 ;;		_Eeprom_Read
 20931 ;;		_Led_SetLedStatus
 20932 ;; This function is called by:
 20933 ;;		_initFsm
 20934 ;; This function uses a non-reentrant model
 20935 ;;
 20936                           
 20937                           	psect	text93
 20938  0044F0                     __ptext93:
 20939                           	opt stack 0
 20940  0044F0                     _initEeprom:
 20941                           	opt stack 9
 20942                           
 20943                           ;app_init.c: 128: const uint8_t addressToRead = 0;
 20944                           
 20945                           ;incstack = 0
 20946  0044F0  0E00               	movlw	0
 20947  0044F2  0101               	movlb	1	; () banked
 20948  0044F4  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 20949                           
 20950                           ;app_init.c: 129: static eepromStates currentState = EEPROM_INIT;
 20951                           ;app_init.c: 130: EepromStsType memoryOpResult = OP_PENDING;
 20952  0044F6  0E02               	movlw	2
 20953  0044F8  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 20954                           
 20955                           ;app_init.c: 131: bool isInitialized = 0;
 20956  0044FA  0E00               	movlw	0
 20957  0044FC  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 20958                           
 20959                           ;app_init.c: 133: switch (currentState)
 20960  0044FE  D03C               	goto	l2632
 20961  004500                     
 20962                           ; BSR set to: 1
 20963                           ;app_init.c: 136: memoryOpResult = Eeprom_Read(0, memoryPreamble, 4);
 20964                           
 20965                           ; BSR set to: 1
 20966  004500  0EA7               	movlw	low _memoryPreamble
 20967  004502  0100               	movlb	0	; () banked
 20968  004504  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 20969  004506  0E03               	movlw	high _memoryPreamble
 20970  004508  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 20971  00450A  0E04               	movlw	4
 20972  00450C  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 20973  00450E  0E00               	movlw	0
 20974  004510  EC52  F02A         	call	_Eeprom_Read
 20975  004514  0101               	movlb	1	; () banked
 20976  004516  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 20977                           
 20978                           ; BSR set to: 1
 20979                           ;app_init.c: 137: if (memoryOpResult != OP_PENDING)
 20980  004518  0E02               	movlw	2
 20981  00451A  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 20982  00451C  B4D8               	btfsc	status,2,c
 20983  00451E  D037               	goto	l2637
 20984                           
 20985                           ; BSR set to: 1
 20986                           ;app_init.c: 138: {
 20987                           ;app_init.c: 139: if (memoryPreamble[0] == 'U' &&
 20988                           ;app_init.c: 140: memoryPreamble[1] == 'S' &&
 20989                           ;app_init.c: 141: memoryPreamble[2] == 'I' &&
 20990                           ;app_init.c: 142: memoryPreamble[3] == 'M')
 20991  004520  0E55               	movlw	85
 20992  004522  0103               	movlb	3	; () banked
 20993  004524  19A7               	xorwf	_memoryPreamble& (0+255),w,b
 20994  004526  A4D8               	btfss	status,2,c
 20995  004528  D00E               	goto	l2635
 20996                           
 20997                           ; BSR set to: 3
 20998  00452A  0E53               	movlw	83
 20999  00452C  19A8               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 21000  00452E  A4D8               	btfss	status,2,c
 21001  004530  D00A               	goto	l2635
 21002                           
 21003                           ; BSR set to: 3
 21004  004532  0E49               	movlw	73
 21005  004534  19A9               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 21006  004536  A4D8               	btfss	status,2,c
 21007  004538  D006               	goto	l2635
 21008                           
 21009                           ; BSR set to: 3
 21010  00453A  0E4D               	movlw	77
 21011  00453C  19AA               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 21012  00453E  A4D8               	btfss	status,2,c
 21013  004540  D002               	goto	l2635
 21014                           
 21015                           ; BSR set to: 3
 21016                           ;app_init.c: 143: {
 21017                           ;app_init.c: 144: currentState = EEPROM_NOT_EMPTY;
 21018  004542  0E02               	movlw	2
 21019  004544  D001               	goto	L27
 21020  004546                     l2635:
 21021                           
 21022                           ;app_init.c: 146: else
 21023                           ;app_init.c: 147: {
 21024                           ;app_init.c: 148: currentState = EEPROM_EMPTY;
 21025                           
 21026                           ; BSR set to: 1
 21027  004546  0E01               	movlw	1
 21028  004548                     L27:
 21029  004548  0101               	movlb	1	; () banked
 21030  00454A  6FD4               	movwf	initEeprom@currentState& (0+255),b
 21031                           
 21032                           ; BSR set to: 1
 21033                           ;app_init.c: 149: }
 21034                           ;app_init.c: 150: }
 21035                           ;app_init.c: 151: break;
 21036                           
 21037                           ; BSR set to: 1
 21038  00454C  D020               	goto	l2637
 21039  00454E                     
 21040                           ; BSR set to: 1
 21041                           ;app_init.c: 154: isInitialized = 1;
 21042                           
 21043                           ; BSR set to: 1
 21044  00454E  0E01               	movlw	1
 21045  004550  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 21046                           
 21047                           ; BSR set to: 1
 21048                           ;app_init.c: 155: Led_SetLedStatus(1u, LED_STS_BLINK);
 21049  004552  0E03               	movlw	3
 21050  004554  0100               	movlb	0	; () banked
 21051  004556  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21052  004558  0E01               	movlw	1
 21053  00455A  EC1A  F02F         	call	_Led_SetLedStatus
 21054                           
 21055                           ;app_init.c: 156: break;
 21056  00455E  D017               	goto	l2637
 21057  004560                     
 21058                           ;app_init.c: 159: isInitialized = 1;
 21059  004560  0E01               	movlw	1
 21060  004562  0101               	movlb	1	; () banked
 21061  004564  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 21062                           
 21063                           ;app_init.c: 160: isMemoryEmpty = 0;
 21064  004566  0E00               	movlw	0
 21065  004568  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 21066                           
 21067                           ; BSR set to: 1
 21068                           ;app_init.c: 161: Led_SetLedStatus(1u, LED_STS_ON);
 21069  00456A  0E01               	movlw	1
 21070  00456C  0100               	movlb	0	; () banked
 21071  00456E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21072  004570  0E01               	movlw	1
 21073  004572  EC1A  F02F         	call	_Led_SetLedStatus
 21074                           
 21075                           ;app_init.c: 166: }
 21076                           
 21077                           ;app_init.c: 165: break;
 21078                           
 21079                           ;app_init.c: 164: default:
 21080                           
 21081                           ;app_init.c: 162: break;
 21082  004576  D00B               	goto	l2637
 21083  004578                     l2632:
 21084  004578  0101               	movlb	1	; () banked
 21085  00457A  51D4               	movf	initEeprom@currentState& (0+255),w,b
 21086                           
 21087                           ; Switch size 1, requested type "space"
 21088                           ; Number of cases is 3, Range of values is 0 to 2
 21089                           ; switch strategies available:
 21090                           ; Name         Instructions Cycles
 21091                           ; simple_byte           10     6 (average)
 21092                           ;	Chosen strategy is simple_byte
 21093  00457C  0A00               	xorlw	0	; case 0
 21094  00457E  B4D8               	btfsc	status,2,c
 21095  004580  D7BF               	goto	l2633
 21096  004582  0A01               	xorlw	1	; case 1
 21097  004584  B4D8               	btfsc	status,2,c
 21098  004586  D7E3               	goto	l2638
 21099  004588  0A03               	xorlw	3	; case 2
 21100  00458A  B4D8               	btfsc	status,2,c
 21101  00458C  D7E9               	goto	l2639
 21102  00458E                     l2637:
 21103                           
 21104                           ;app_init.c: 167: return isInitialized;
 21105                           
 21106                           ; BSR set to: 1
 21107  00458E  0101               	movlb	1	; () banked
 21108  004590  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 21109  004592  0012               	return	
 21110  004594                     __end_of_initEeprom:
 21111                           	opt stack 0
 21112                           tosu	equ	0xFFF
 21113                           tosh	equ	0xFFE
 21114                           tosl	equ	0xFFD
 21115                           pclath	equ	0xFFA
 21116                           tblptru	equ	0xFF8
 21117                           tblptrh	equ	0xFF7
 21118                           tblptrl	equ	0xFF6
 21119                           tablat	equ	0xFF5
 21120                           prodh	equ	0xFF4
 21121                           prodl	equ	0xFF3
 21122                           intcon	equ	0xFF2
 21123                           intcon2	equ	0xFF1
 21124                           intcon3	equ	0xFF0
 21125                           indf0	equ	0xFEF
 21126                           postinc0	equ	0xFEE
 21127                           plusw0	equ	0xFEB
 21128                           fsr0h	equ	0xFEA
 21129                           fsr0l	equ	0xFE9
 21130                           wreg	equ	0xFE8
 21131                           indf1	equ	0xFE7
 21132                           postinc1	equ	0xFE6
 21133                           postdec1	equ	0xFE5
 21134                           fsr1h	equ	0xFE2
 21135                           fsr1l	equ	0xFE1
 21136                           indf2	equ	0xFDF
 21137                           postinc2	equ	0xFDE
 21138                           postdec2	equ	0xFDD
 21139                           plusw2	equ	0xFDB
 21140                           fsr2h	equ	0xFDA
 21141                           fsr2l	equ	0xFD9
 21142                           status	equ	0xFD8
 21143                           
 21144 ;; *************** function _Eeprom_Read *****************
 21145 ;; Defined at:
 21146 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 21147 ;; Parameters:    Size  Location     Type
 21148 ;;  MemoryAddres    1    wreg     unsigned char 
 21149 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 21150 ;;		 -> memoryPreamble(4), MyApp_Task@phone(14), 
 21151 ;;  DataLength      1   75[BANK0 ] unsigned char 
 21152 ;; Auto vars:     Size  Location     Type
 21153 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 21154 ;;  QuerySts        1   79[BANK0 ] enum E8931
 21155 ;;  ReadSts         1   78[BANK0 ] enum E8957
 21156 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 21157 ;; Return value:  Size  Location     Type
 21158 ;;                  1    wreg      enum E8245
 21159 ;; Registers used:
 21160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21161 ;; Tracked objects:
 21162 ;;		On entry : 0/0
 21163 ;;		On exit  : 0/0
 21164 ;;		Unchanged: 0/0
 21165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21166 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21167 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21169 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21170 ;;Total ram usage:        7 bytes
 21171 ;; Hardware stack levels used:    1
 21172 ;; Hardware stack levels required when called:   16
 21173 ;; This function calls:
 21174 ;;		_I2cSlv_QueryI2cData
 21175 ;; This function is called by:
 21176 ;;		_MyApp_Task
 21177 ;;		_initEeprom
 21178 ;; This function uses a non-reentrant model
 21179 ;;
 21180                           
 21181                           	psect	text94
 21182  0054A4                     __ptext94:
 21183                           	opt stack 0
 21184  0054A4                     _Eeprom_Read:
 21185                           	opt stack 9
 21186                           
 21187                           ; BSR set to: 1
 21188                           ;incstack = 0
 21189                           ;Eeprom_Read@MemoryAddress stored from wreg
 21190  0054A4  0100               	movlb	0	; () banked
 21191  0054A6  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 21192                           
 21193                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 21194  0054A8  0E50               	movlw	80
 21195  0054AA  0100               	movlb	0	; () banked
 21196  0054AC  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 21197                           
 21198                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 21199  0054AE  0E00               	movlw	0
 21200  0054B0  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 21201                           
 21202                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 21203  0054B2  0E02               	movlw	2
 21204  0054B4  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 21205                           
 21206                           ; BSR set to: 0
 21207                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 21208  0054B6  C0AC  F1F5         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 21209                           
 21210                           ; BSR set to: 0
 21211                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 21212  0054BA  0EF5               	movlw	low _ReadAddress
 21213  0054BC  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 21214  0054BE  0E01               	movlw	high _ReadAddress
 21215  0054C0  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 21216  0054C2  0E01               	movlw	1
 21217  0054C4  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 21218  0054C6  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 21219  0054CA  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 21220  0054CE  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 21221  0054D2  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 21222  0054D6  ECBE  F01B         	call	_I2cSlv_QueryI2cData	;wreg free
 21223  0054DA  0100               	movlb	0	; () banked
 21224  0054DC  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 21225                           
 21226                           ; BSR set to: 0
 21227                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 21228  0054DE  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 21229  0054E0  A4D8               	btfss	status,2,c
 21230  0054E2  D002               	goto	l2584
 21231                           
 21232                           ; BSR set to: 0
 21233                           ;eeprom_if.c: 114: {
 21234                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 21235  0054E4  0E00               	movlw	0
 21236  0054E6  D005               	goto	L28
 21237  0054E8                     l2584:
 21238                           
 21239                           ; BSR set to: 0
 21240                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 21241                           
 21242                           ; BSR set to: 0
 21243  0054E8  0E02               	movlw	2
 21244  0054EA  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 21245  0054EC  A4D8               	btfss	status,2,c
 21246  0054EE  D002               	goto	l2586
 21247                           
 21248                           ; BSR set to: 0
 21249                           ;eeprom_if.c: 118: {
 21250                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 21251  0054F0  0E01               	movlw	1
 21252  0054F2                     L28:
 21253  0054F2  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 21254  0054F4                     l2586:
 21255                           
 21256                           ; BSR set to: 0
 21257                           ;eeprom_if.c: 120: }
 21258                           ;eeprom_if.c: 121: return ReadSts;
 21259                           
 21260                           ; BSR set to: 0
 21261  0054F4  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 21262  0054F6  0012               	return	
 21263  0054F8                     __end_of_Eeprom_Read:
 21264                           	opt stack 0
 21265                           tosu	equ	0xFFF
 21266                           tosh	equ	0xFFE
 21267                           tosl	equ	0xFFD
 21268                           pclath	equ	0xFFA
 21269                           tblptru	equ	0xFF8
 21270                           tblptrh	equ	0xFF7
 21271                           tblptrl	equ	0xFF6
 21272                           tablat	equ	0xFF5
 21273                           prodh	equ	0xFF4
 21274                           prodl	equ	0xFF3
 21275                           intcon	equ	0xFF2
 21276                           intcon2	equ	0xFF1
 21277                           intcon3	equ	0xFF0
 21278                           indf0	equ	0xFEF
 21279                           postinc0	equ	0xFEE
 21280                           plusw0	equ	0xFEB
 21281                           fsr0h	equ	0xFEA
 21282                           fsr0l	equ	0xFE9
 21283                           wreg	equ	0xFE8
 21284                           indf1	equ	0xFE7
 21285                           postinc1	equ	0xFE6
 21286                           postdec1	equ	0xFE5
 21287                           fsr1h	equ	0xFE2
 21288                           fsr1l	equ	0xFE1
 21289                           indf2	equ	0xFDF
 21290                           postinc2	equ	0xFDE
 21291                           postdec2	equ	0xFDD
 21292                           plusw2	equ	0xFDB
 21293                           fsr2h	equ	0xFDA
 21294                           fsr2l	equ	0xFD9
 21295                           status	equ	0xFD8
 21296                           
 21297 ;; *************** function _I2cSlv_QueryI2cData *****************
 21298 ;; Defined at:
 21299 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 21300 ;; Parameters:    Size  Location     Type
 21301 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 21302 ;;		 -> ReadAddress(1), 
 21303 ;;  TxLen           1   68[BANK0 ] unsigned char 
 21304 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 21305 ;;		 -> memoryPreamble(4), MyApp_Task@phone(14), 
 21306 ;;  RxLen           1   71[BANK0 ] unsigned char 
 21307 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 21308 ;; Auto vars:     Size  Location     Type
 21309 ;;		None
 21310 ;; Return value:  Size  Location     Type
 21311 ;;                  1    wreg      enum E8944
 21312 ;; Registers used:
 21313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21314 ;; Tracked objects:
 21315 ;;		On entry : 0/0
 21316 ;;		On exit  : 0/0
 21317 ;;		Unchanged: 0/0
 21318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21319 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21322 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21323 ;;Total ram usage:        7 bytes
 21324 ;; Hardware stack levels used:    1
 21325 ;; Hardware stack levels required when called:   15
 21326 ;; This function calls:
 21327 ;;		_I2cSlv_I2cReadMsgSts
 21328 ;;		_I2cSlv_ReceiveI2cMsg
 21329 ;;		_I2cSlv_SendI2cMsg
 21330 ;;		_OsTmr_GetTimerStatus
 21331 ;;		_OsTmr_StartTimer
 21332 ;;		_OsTmr_Wait
 21333 ;; This function is called by:
 21334 ;;		_Eeprom_Read
 21335 ;; This function uses a non-reentrant model
 21336 ;;
 21337                           
 21338                           	psect	text95
 21339  00377C                     __ptext95:
 21340                           	opt stack 0
 21341  00377C                     _I2cSlv_QueryI2cData:
 21342                           	opt stack 9
 21343                           
 21344                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 21345                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 21346                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 21347                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 21348                           ;i2c_slv.c: 388: switch(I2cOpState)
 21349                           
 21350                           ; BSR set to: 0
 21351                           ;incstack = 0
 21352  00377C  D05B               	goto	l1437
 21353  00377E                     
 21354                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 21355  00377E  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 21356  003782  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 21357  003786  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 21358  00378A  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 21359  00378E  EC9D  F02D         	call	_I2cSlv_SendI2cMsg	;wreg free
 21360                           
 21361                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 21362  003792  0E01               	movlw	1
 21363  003794  0101               	movlb	1	; () banked
 21364  003796  6FE7               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21365                           
 21366                           ; BSR set to: 1
 21367                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 21368  003798  0E00               	movlw	0
 21369  00379A  D04A               	goto	L32
 21370  00379C                     
 21371                           ; BSR set to: 1
 21372                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 21373                           
 21374                           ; BSR set to: 1
 21375  00379C  0E46               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 21376  00379E  0100               	movlb	0	; () banked
 21377  0037A0  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 21378  0037A2  0E03               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 21379  0037A4  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 21380  0037A6  0EF4               	movlw	244
 21381  0037A8  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 21382  0037AA  0E01               	movlw	1
 21383  0037AC  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 21384  0037AE  0E00               	movlw	0
 21385  0037B0  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 21386  0037B2  0E00               	movlw	0
 21387  0037B4  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 21388  0037B6  ECD2  F026         	call	_OsTmr_Wait	;wreg free
 21389  0037BA  06E8               	decf	wreg,f,c
 21390  0037BC  A4D8               	btfss	status,2,c
 21391  0037BE  D036               	goto	l1445
 21392                           
 21393                           ;i2c_slv.c: 402: {
 21394                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 21395  0037C0  0E3B               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 21396  0037C2  0100               	movlb	0	; () banked
 21397  0037C4  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 21398  0037C6  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 21399  0037C8  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 21400  0037CA  0EC4               	movlw	196
 21401  0037CC  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 21402  0037CE  0E09               	movlw	9
 21403  0037D0  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 21404  0037D2  0E00               	movlw	0
 21405  0037D4  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 21406  0037D6  0E00               	movlw	0
 21407  0037D8  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 21408  0037DA  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 21409                           
 21410                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 21411  0037DE  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 21412  0037E2  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 21413  0037E6  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 21414  0037EA  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 21415  0037EE  EC3E  F02D         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 21416                           
 21417                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 21418  0037F2  0E02               	movlw	2
 21419  0037F4  0101               	movlb	1	; () banked
 21420  0037F6  6FE7               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21421  0037F8  D019               	goto	l1445
 21422  0037FA                     
 21423                           ; BSR set to: 1
 21424                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 21425                           
 21426                           ; BSR set to: 1
 21427  0037FA  EC64  F030         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 21428  0037FE  06E8               	decf	wreg,f,c
 21429  003800  A4D8               	btfss	status,2,c
 21430  003802  D005               	goto	l1443
 21431                           
 21432                           ;i2c_slv.c: 414: {
 21433                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 21434  003804  0E00               	movlw	0
 21435  003806  0101               	movlb	1	; () banked
 21436  003808  6FE7               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21437                           
 21438                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 21439  00380A  0E01               	movlw	1
 21440  00380C  D011               	goto	L32
 21441  00380E                     l1443:
 21442                           
 21443                           ;i2c_slv.c: 420: else
 21444                           ;i2c_slv.c: 421: {
 21445                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 21446                           
 21447                           ; BSR set to: 1
 21448  00380E  0E3B               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 21449  003810  0100               	movlb	0	; () banked
 21450  003812  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 21451  003814  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 21452  003816  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 21453  003818  EC78  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 21454  00381C  06E8               	decf	wreg,f,c
 21455  00381E  A4D8               	btfss	status,2,c
 21456  003820  D005               	goto	l1445
 21457                           
 21458                           ;i2c_slv.c: 423: {
 21459                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 21460  003822  0E00               	movlw	0
 21461  003824  0101               	movlb	1	; () banked
 21462  003826  6FE7               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21463                           
 21464                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 21465  003828  0E02               	movlw	2
 21466  00382A  D002               	goto	L32
 21467  00382C                     l1445:
 21468                           
 21469                           ;i2c_slv.c: 429: else
 21470                           ;i2c_slv.c: 430: {
 21471                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 21472                           
 21473                           ; BSR set to: 1
 21474  00382C  0E00               	movlw	0
 21475  00382E  0101               	movlb	1	; () banked
 21476  003830                     L32:
 21477  003830  6FE6               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 21478                           
 21479                           ; BSR set to: 1
 21480                           ;i2c_slv.c: 439: }
 21481                           
 21482                           ; BSR set to: 1
 21483                           ;i2c_slv.c: 438: break;
 21484                           
 21485                           ;i2c_slv.c: 437: default:
 21486                           
 21487                           ; BSR set to: 1
 21488                           ;i2c_slv.c: 433: }
 21489                           ;i2c_slv.c: 434: }
 21490                           ;i2c_slv.c: 435: break;
 21491                           
 21492                           ; BSR set to: 1
 21493  003832  D00B               	goto	l1439
 21494  003834                     l1437:
 21495                           
 21496                           ; BSR set to: 1
 21497  003834  0101               	movlb	1	; () banked
 21498  003836  51E7               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 21499                           
 21500                           ; Switch size 1, requested type "space"
 21501                           ; Number of cases is 3, Range of values is 0 to 2
 21502                           ; switch strategies available:
 21503                           ; Name         Instructions Cycles
 21504                           ; simple_byte           10     6 (average)
 21505                           ;	Chosen strategy is simple_byte
 21506  003838  0A00               	xorlw	0	; case 0
 21507  00383A  B4D8               	btfsc	status,2,c
 21508  00383C  D7A0               	goto	l1438
 21509  00383E  0A01               	xorlw	1	; case 1
 21510  003840  B4D8               	btfsc	status,2,c
 21511  003842  D7AC               	goto	l1440
 21512  003844  0A03               	xorlw	3	; case 2
 21513  003846  B4D8               	btfsc	status,2,c
 21514  003848  D7D8               	goto	l1442
 21515  00384A                     l1439:
 21516                           
 21517                           ; BSR set to: 1
 21518                           ;i2c_slv.c: 441: return Ret;
 21519                           
 21520                           ; BSR set to: 1
 21521  00384A  51E6               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 21522  00384C  0012               	return	
 21523  00384E                     __end_of_I2cSlv_QueryI2cData:
 21524                           	opt stack 0
 21525                           tosu	equ	0xFFF
 21526                           tosh	equ	0xFFE
 21527                           tosl	equ	0xFFD
 21528                           pclath	equ	0xFFA
 21529                           tblptru	equ	0xFF8
 21530                           tblptrh	equ	0xFF7
 21531                           tblptrl	equ	0xFF6
 21532                           tablat	equ	0xFF5
 21533                           prodh	equ	0xFF4
 21534                           prodl	equ	0xFF3
 21535                           intcon	equ	0xFF2
 21536                           intcon2	equ	0xFF1
 21537                           intcon3	equ	0xFF0
 21538                           indf0	equ	0xFEF
 21539                           postinc0	equ	0xFEE
 21540                           plusw0	equ	0xFEB
 21541                           fsr0h	equ	0xFEA
 21542                           fsr0l	equ	0xFE9
 21543                           wreg	equ	0xFE8
 21544                           indf1	equ	0xFE7
 21545                           postinc1	equ	0xFE6
 21546                           postdec1	equ	0xFE5
 21547                           fsr1h	equ	0xFE2
 21548                           fsr1l	equ	0xFE1
 21549                           indf2	equ	0xFDF
 21550                           postinc2	equ	0xFDE
 21551                           postdec2	equ	0xFDD
 21552                           plusw2	equ	0xFDB
 21553                           fsr2h	equ	0xFDA
 21554                           fsr2l	equ	0xFD9
 21555                           status	equ	0xFD8
 21556                           
 21557 ;; *************** function _OsTmr_Wait *****************
 21558 ;; Defined at:
 21559 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 21560 ;; Parameters:    Size  Location     Type
 21561 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 21562 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 21563 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 21564 ;; Auto vars:     Size  Location     Type
 21565 ;;  Ret             1   65[BANK0 ] enum E7749
 21566 ;; Return value:  Size  Location     Type
 21567 ;;                  1    wreg      enum E7749
 21568 ;; Registers used:
 21569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21570 ;; Tracked objects:
 21571 ;;		On entry : 0/0
 21572 ;;		On exit  : 0/0
 21573 ;;		Unchanged: 0/0
 21574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21575 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21576 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21578 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21579 ;;Total ram usage:        7 bytes
 21580 ;; Hardware stack levels used:    1
 21581 ;; Hardware stack levels required when called:   14
 21582 ;; This function calls:
 21583 ;;		_OsTmr_GetTimerStatus
 21584 ;;		_OsTmr_StartTimer
 21585 ;; This function is called by:
 21586 ;;		_I2cSlv_QueryI2cData
 21587 ;;		_Terminal
 21588 ;; This function uses a non-reentrant model
 21589 ;;
 21590                           
 21591                           	psect	text96
 21592  004DA4                     __ptext96:
 21593                           	opt stack 0
 21594  004DA4                     _OsTmr_Wait:
 21595                           	opt stack 11
 21596                           
 21597                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 21598                           
 21599                           ; BSR set to: 1
 21600                           ;incstack = 0
 21601  004DA4  0E00               	movlw	0
 21602  004DA6  0100               	movlb	0	; () banked
 21603  004DA8  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 21604                           
 21605                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 21606  004DAA  D02D               	goto	l855
 21607  004DAC                     
 21608                           ; BSR set to: 0
 21609                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 21610                           
 21611                           ; BSR set to: 0
 21612  004DAC  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 21613  004DB0  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 21614  004DB4  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 21615  004DB8  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 21616  004DBC  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 21617  004DC0  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 21618  004DC4  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 21619                           
 21620                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 21621  004DC8  0100               	movlb	0	; () banked
 21622  004DCA  EE20 F00A          	lfsr	2,10
 21623  004DCE  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 21624  004DD0  26D9               	addwf	fsr2l,f,c
 21625  004DD2  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 21626  004DD4  22DA               	addwfc	fsr2h,f,c
 21627  004DD6  0E01               	movlw	1
 21628  004DD8  6EDF               	movwf	indf2,c
 21629                           
 21630                           ;os_timers.c: 165: break;
 21631  004DDA  D022               	goto	l857
 21632  004DDC                     
 21633                           ; BSR set to: 0
 21634                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 21635                           
 21636                           ; BSR set to: 0
 21637  004DDC  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 21638  004DE0  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 21639  004DE4  EC78  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 21640  004DE8  06E8               	decf	wreg,f,c
 21641  004DEA  A4D8               	btfss	status,2,c
 21642  004DEC  D019               	goto	l857
 21643                           
 21644                           ;os_timers.c: 170: {
 21645                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 21646  004DEE  0100               	movlb	0	; () banked
 21647  004DF0  EE20 F00A          	lfsr	2,10
 21648  004DF4  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 21649  004DF6  26D9               	addwf	fsr2l,f,c
 21650  004DF8  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 21651  004DFA  22DA               	addwfc	fsr2h,f,c
 21652  004DFC  0E00               	movlw	0
 21653  004DFE  6EDF               	movwf	indf2,c
 21654                           
 21655                           ; BSR set to: 0
 21656                           ;os_timers.c: 174: Ret = DelayExpired;
 21657  004E00  0E01               	movlw	1
 21658  004E02  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 21659                           
 21660                           ; BSR set to: 0
 21661                           ;os_timers.c: 180: }
 21662                           
 21663                           ; BSR set to: 0
 21664                           ;os_timers.c: 179: break;
 21665                           
 21666                           ;os_timers.c: 178: default:
 21667                           
 21668                           ; BSR set to: 0
 21669                           ;os_timers.c: 175: }
 21670                           ;os_timers.c: 176: break;
 21671  004E04  D00D               	goto	l857
 21672  004E06                     l855:
 21673                           
 21674                           ; BSR set to: 0
 21675                           
 21676                           ; BSR set to: 0
 21677  004E06  EE20 F00A          	lfsr	2,10
 21678  004E0A  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 21679  004E0C  26D9               	addwf	fsr2l,f,c
 21680  004E0E  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 21681  004E10  22DA               	addwfc	fsr2h,f,c
 21682  004E12  50DF               	movf	indf2,w,c
 21683                           
 21684                           ; Switch size 1, requested type "space"
 21685                           ; Number of cases is 2, Range of values is 0 to 1
 21686                           ; switch strategies available:
 21687                           ; Name         Instructions Cycles
 21688                           ; simple_byte            7     4 (average)
 21689                           ;	Chosen strategy is simple_byte
 21690  004E14  0A00               	xorlw	0	; case 0
 21691  004E16  B4D8               	btfsc	status,2,c
 21692  004E18  D7C9               	goto	l856
 21693  004E1A  0A01               	xorlw	1	; case 1
 21694  004E1C  B4D8               	btfsc	status,2,c
 21695  004E1E  D7DE               	goto	l858
 21696  004E20                     l857:
 21697                           
 21698                           ;os_timers.c: 182: return Ret;
 21699                           
 21700                           ; BSR set to: 0
 21701  004E20  0100               	movlb	0	; () banked
 21702  004E22  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 21703  004E24  0012               	return	
 21704  004E26                     __end_of_OsTmr_Wait:
 21705                           	opt stack 0
 21706                           tosu	equ	0xFFF
 21707                           tosh	equ	0xFFE
 21708                           tosl	equ	0xFFD
 21709                           pclath	equ	0xFFA
 21710                           tblptru	equ	0xFF8
 21711                           tblptrh	equ	0xFF7
 21712                           tblptrl	equ	0xFF6
 21713                           tablat	equ	0xFF5
 21714                           prodh	equ	0xFF4
 21715                           prodl	equ	0xFF3
 21716                           intcon	equ	0xFF2
 21717                           intcon2	equ	0xFF1
 21718                           intcon3	equ	0xFF0
 21719                           indf0	equ	0xFEF
 21720                           postinc0	equ	0xFEE
 21721                           plusw0	equ	0xFEB
 21722                           fsr0h	equ	0xFEA
 21723                           fsr0l	equ	0xFE9
 21724                           wreg	equ	0xFE8
 21725                           indf1	equ	0xFE7
 21726                           postinc1	equ	0xFE6
 21727                           postdec1	equ	0xFE5
 21728                           fsr1h	equ	0xFE2
 21729                           fsr1l	equ	0xFE1
 21730                           indf2	equ	0xFDF
 21731                           postinc2	equ	0xFDE
 21732                           postdec2	equ	0xFDD
 21733                           plusw2	equ	0xFDB
 21734                           fsr2h	equ	0xFDA
 21735                           fsr2l	equ	0xFD9
 21736                           status	equ	0xFD8
 21737                           
 21738 ;; *************** function _I2cSlv_SendI2cMsg *****************
 21739 ;; Defined at:
 21740 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 21741 ;; Parameters:    Size  Location     Type
 21742 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 21743 ;;		 -> ReadAddress(1), EepromBuffer(15), triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), 
 21744 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 21745 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 21746 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 21747 ;; Auto vars:     Size  Location     Type
 21748 ;;  TxSts           1   36[BANK0 ] unsigned char 
 21749 ;; Return value:  Size  Location     Type
 21750 ;;                  1    wreg      unsigned char 
 21751 ;; Registers used:
 21752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21753 ;; Tracked objects:
 21754 ;;		On entry : 0/0
 21755 ;;		On exit  : 0/0
 21756 ;;		Unchanged: 0/0
 21757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21758 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21759 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21761 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21762 ;;Total ram usage:        5 bytes
 21763 ;; Hardware stack levels used:    1
 21764 ;; Hardware stack levels required when called:   12
 21765 ;; This function calls:
 21766 ;;		_GenerateEvt
 21767 ;; This function is called by:
 21768 ;;		_I2cSlv_QueryI2cData
 21769 ;;		_Terminal
 21770 ;;		_triggerRelay
 21771 ;;		_Eeprom_Write
 21772 ;; This function uses a non-reentrant model
 21773 ;;
 21774                           
 21775                           	psect	text97
 21776  005B3A                     __ptext97:
 21777                           	opt stack 0
 21778  005B3A                     _I2cSlv_SendI2cMsg:
 21779                           	opt stack 13
 21780                           
 21781                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 21782                           
 21783                           ; BSR set to: 0
 21784                           ;incstack = 0
 21785  005B3A  0E00               	movlw	0
 21786  005B3C  0100               	movlb	0	; () banked
 21787  005B3E  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 21788                           
 21789                           ; BSR set to: 0
 21790                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 21791  005B40  05CF               	decf	_I2cComSts& (0+255),w,b
 21792  005B42  B4D8               	btfsc	status,2,c
 21793  005B44  D015               	goto	l1409
 21794                           
 21795                           ; BSR set to: 0
 21796                           ;i2c_slv.c: 257: {
 21797                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 21798  005B46  C082  F39D         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 21799                           
 21800                           ; BSR set to: 0
 21801                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 21802  005B4A  0E00               	movlw	0
 21803  005B4C  0103               	movlb	3	; () banked
 21804  005B4E  6F9E               	movwf	(_I2cTxPacket+1)& (0+255),b
 21805                           
 21806                           ; BSR set to: 3
 21807                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 21808  005B50  C083  F3A1         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 21809                           
 21810                           ; BSR set to: 3
 21811                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 21812  005B54  C080  F39F         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 21813  005B58  C081  F3A0         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 21814                           
 21815                           ; BSR set to: 3
 21816                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 21817  005B5C  0ED9               	movlw	low _I2cWriteDataEvt
 21818  005B5E  0100               	movlb	0	; () banked
 21819  005B60  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 21820  005B62  0E00               	movlw	high _I2cWriteDataEvt
 21821  005B64  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 21822  005B66  EC0D  F031         	call	_GenerateEvt	;wreg free
 21823                           
 21824                           ;i2c_slv.c: 267: TxSts = 1u;
 21825  005B6A  0E01               	movlw	1
 21826  005B6C  0100               	movlb	0	; () banked
 21827  005B6E  D001               	goto	L33
 21828  005B70                     l1409:
 21829                           
 21830                           ; BSR set to: 0
 21831                           ;i2c_slv.c: 269: else
 21832                           ;i2c_slv.c: 270: {
 21833                           ;i2c_slv.c: 272: TxSts = 0u;
 21834                           
 21835                           ; BSR set to: 0
 21836  005B70  0E00               	movlw	0
 21837  005B72                     L33:
 21838  005B72  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 21839                           
 21840                           ; BSR set to: 0
 21841                           ;i2c_slv.c: 273: }
 21842                           ;i2c_slv.c: 275: return TxSts;
 21843  005B74  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 21844  005B76  0012               	return	
 21845  005B78                     __end_of_I2cSlv_SendI2cMsg:
 21846                           	opt stack 0
 21847                           tosu	equ	0xFFF
 21848                           tosh	equ	0xFFE
 21849                           tosl	equ	0xFFD
 21850                           pclath	equ	0xFFA
 21851                           tblptru	equ	0xFF8
 21852                           tblptrh	equ	0xFF7
 21853                           tblptrl	equ	0xFF6
 21854                           tablat	equ	0xFF5
 21855                           prodh	equ	0xFF4
 21856                           prodl	equ	0xFF3
 21857                           intcon	equ	0xFF2
 21858                           intcon2	equ	0xFF1
 21859                           intcon3	equ	0xFF0
 21860                           indf0	equ	0xFEF
 21861                           postinc0	equ	0xFEE
 21862                           plusw0	equ	0xFEB
 21863                           fsr0h	equ	0xFEA
 21864                           fsr0l	equ	0xFE9
 21865                           wreg	equ	0xFE8
 21866                           indf1	equ	0xFE7
 21867                           postinc1	equ	0xFE6
 21868                           postdec1	equ	0xFE5
 21869                           fsr1h	equ	0xFE2
 21870                           fsr1l	equ	0xFE1
 21871                           indf2	equ	0xFDF
 21872                           postinc2	equ	0xFDE
 21873                           postdec2	equ	0xFDD
 21874                           plusw2	equ	0xFDB
 21875                           fsr2h	equ	0xFDA
 21876                           fsr2l	equ	0xFD9
 21877                           status	equ	0xFD8
 21878                           
 21879 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 21880 ;; Defined at:
 21881 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 21882 ;; Parameters:    Size  Location     Type
 21883 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 21884 ;;		 -> memoryPreamble(4), MyApp_Task@phone(14), Terminal@TermRxBuffer(50), 
 21885 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 21886 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 21887 ;; Auto vars:     Size  Location     Type
 21888 ;;  RxSts           1   36[BANK0 ] unsigned char 
 21889 ;; Return value:  Size  Location     Type
 21890 ;;                  1    wreg      unsigned char 
 21891 ;; Registers used:
 21892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21893 ;; Tracked objects:
 21894 ;;		On entry : 0/0
 21895 ;;		On exit  : 0/0
 21896 ;;		Unchanged: 0/0
 21897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21898 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21899 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21901 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21902 ;;Total ram usage:        5 bytes
 21903 ;; Hardware stack levels used:    1
 21904 ;; Hardware stack levels required when called:   12
 21905 ;; This function calls:
 21906 ;;		_GenerateEvt
 21907 ;; This function is called by:
 21908 ;;		_I2cSlv_QueryI2cData
 21909 ;;		_Terminal
 21910 ;; This function uses a non-reentrant model
 21911 ;;
 21912                           
 21913                           	psect	text98
 21914  005A7C                     __ptext98:
 21915                           	opt stack 0
 21916  005A7C                     _I2cSlv_ReceiveI2cMsg:
 21917                           	opt stack 13
 21918                           
 21919                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 21920                           
 21921                           ; BSR set to: 0
 21922                           ;incstack = 0
 21923  005A7C  0E00               	movlw	0
 21924  005A7E  0100               	movlb	0	; () banked
 21925  005A80  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 21926                           
 21927                           ; BSR set to: 0
 21928                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 21929  005A82  0E02               	movlw	2
 21930  005A84  19CF               	xorwf	_I2cComSts& (0+255),w,b
 21931  005A86  B4D8               	btfsc	status,2,c
 21932  005A88  D016               	goto	l1414
 21933                           
 21934                           ; BSR set to: 0
 21935                           ;i2c_slv.c: 294: {
 21936                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 21937  005A8A  C082  F397         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 21938                           
 21939                           ; BSR set to: 0
 21940                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 21941  005A8E  0E01               	movlw	1
 21942  005A90  0103               	movlb	3	; () banked
 21943  005A92  6F98               	movwf	(_I2cRxPacket+1)& (0+255),b
 21944                           
 21945                           ; BSR set to: 3
 21946                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 21947  005A94  C083  F39B         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 21948                           
 21949                           ; BSR set to: 3
 21950                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 21951  005A98  C080  F399         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 21952  005A9C  C081  F39A         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 21953                           
 21954                           ; BSR set to: 3
 21955                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 21956  005AA0  0ED8               	movlw	low _I2cReadDataEvt
 21957  005AA2  0100               	movlb	0	; () banked
 21958  005AA4  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 21959  005AA6  0E00               	movlw	high _I2cReadDataEvt
 21960  005AA8  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 21961  005AAA  EC0D  F031         	call	_GenerateEvt	;wreg free
 21962                           
 21963                           ;i2c_slv.c: 304: RxSts = 1u;
 21964  005AAE  0E01               	movlw	1
 21965  005AB0  0100               	movlb	0	; () banked
 21966  005AB2  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 21967                           
 21968                           ;i2c_slv.c: 305: }
 21969  005AB4  0012               	return	
 21970  005AB6                     l1414:
 21971                           
 21972                           ; BSR set to: 0
 21973                           ;i2c_slv.c: 306: else
 21974                           ;i2c_slv.c: 307: {
 21975                           ;i2c_slv.c: 309: RxSts = 0u;
 21976                           
 21977                           ; BSR set to: 0
 21978  005AB6  0E00               	movlw	0
 21979  005AB8  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 21980                           
 21981                           ; BSR set to: 0
 21982  005ABA  0012               	return	
 21983  005ABC                     __end_of_I2cSlv_ReceiveI2cMsg:
 21984                           	opt stack 0
 21985                           tosu	equ	0xFFF
 21986                           tosh	equ	0xFFE
 21987                           tosl	equ	0xFFD
 21988                           pclath	equ	0xFFA
 21989                           tblptru	equ	0xFF8
 21990                           tblptrh	equ	0xFF7
 21991                           tblptrl	equ	0xFF6
 21992                           tablat	equ	0xFF5
 21993                           prodh	equ	0xFF4
 21994                           prodl	equ	0xFF3
 21995                           intcon	equ	0xFF2
 21996                           intcon2	equ	0xFF1
 21997                           intcon3	equ	0xFF0
 21998                           indf0	equ	0xFEF
 21999                           postinc0	equ	0xFEE
 22000                           plusw0	equ	0xFEB
 22001                           fsr0h	equ	0xFEA
 22002                           fsr0l	equ	0xFE9
 22003                           wreg	equ	0xFE8
 22004                           indf1	equ	0xFE7
 22005                           postinc1	equ	0xFE6
 22006                           postdec1	equ	0xFE5
 22007                           fsr1h	equ	0xFE2
 22008                           fsr1l	equ	0xFE1
 22009                           indf2	equ	0xFDF
 22010                           postinc2	equ	0xFDE
 22011                           postdec2	equ	0xFDD
 22012                           plusw2	equ	0xFDB
 22013                           fsr2h	equ	0xFDA
 22014                           fsr2l	equ	0xFD9
 22015                           status	equ	0xFD8
 22016                           
 22017 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 22018 ;; Defined at:
 22019 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 22020 ;; Parameters:    Size  Location     Type
 22021 ;;		None
 22022 ;; Auto vars:     Size  Location     Type
 22023 ;;  Result          1   33[BANK0 ] enum E8932
 22024 ;; Return value:  Size  Location     Type
 22025 ;;                  1    wreg      enum E8932
 22026 ;; Registers used:
 22027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22028 ;; Tracked objects:
 22029 ;;		On entry : 0/0
 22030 ;;		On exit  : 0/0
 22031 ;;		Unchanged: 0/0
 22032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22034 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22036 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22037 ;;Total ram usage:        1 bytes
 22038 ;; Hardware stack levels used:    1
 22039 ;; Hardware stack levels required when called:   12
 22040 ;; This function calls:
 22041 ;;		_ReceiveEvt
 22042 ;; This function is called by:
 22043 ;;		_I2cSlv_QueryI2cData
 22044 ;;		_Terminal
 22045 ;; This function uses a non-reentrant model
 22046 ;;
 22047                           
 22048                           	psect	text99
 22049  0060C8                     __ptext99:
 22050                           	opt stack 0
 22051  0060C8                     _I2cSlv_I2cReadMsgSts:
 22052                           	opt stack 13
 22053                           
 22054                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 22055                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 22056                           
 22057                           ; BSR set to: 0
 22058                           ;incstack = 0
 22059  0060C8  0E9C               	movlw	low (_I2cRxPacket+5)
 22060  0060CA  0100               	movlb	0	; () banked
 22061  0060CC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22062  0060CE  0E03               	movlw	high (_I2cRxPacket+5)
 22063  0060D0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22064  0060D2  EC49  F02F         	call	_ReceiveEvt	;wreg free
 22065  0060D6  0900               	iorlw	0
 22066  0060D8  B4D8               	btfsc	status,2,c
 22067  0060DA  D002               	goto	l1419
 22068                           
 22069                           ;i2c_slv.c: 331: {
 22070                           ;i2c_slv.c: 332: Result = MessageReceived;
 22071  0060DC  0E01               	movlw	1
 22072  0060DE  D001               	goto	L34
 22073  0060E0                     l1419:
 22074                           
 22075                           ;i2c_slv.c: 334: else
 22076                           ;i2c_slv.c: 335: {
 22077                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 22078                           
 22079                           ; BSR set to: 0
 22080  0060E0  0E00               	movlw	0
 22081  0060E2                     L34:
 22082  0060E2  0100               	movlb	0	; () banked
 22083  0060E4  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 22084                           
 22085                           ; BSR set to: 0
 22086                           ;i2c_slv.c: 337: }
 22087                           ;i2c_slv.c: 339: return Result;
 22088  0060E6  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 22089  0060E8  0012               	return	
 22090  0060EA                     __end_of_I2cSlv_I2cReadMsgSts:
 22091                           	opt stack 0
 22092                           tosu	equ	0xFFF
 22093                           tosh	equ	0xFFE
 22094                           tosl	equ	0xFFD
 22095                           pclath	equ	0xFFA
 22096                           tblptru	equ	0xFF8
 22097                           tblptrh	equ	0xFF7
 22098                           tblptrl	equ	0xFF6
 22099                           tablat	equ	0xFF5
 22100                           prodh	equ	0xFF4
 22101                           prodl	equ	0xFF3
 22102                           intcon	equ	0xFF2
 22103                           intcon2	equ	0xFF1
 22104                           intcon3	equ	0xFF0
 22105                           indf0	equ	0xFEF
 22106                           postinc0	equ	0xFEE
 22107                           plusw0	equ	0xFEB
 22108                           fsr0h	equ	0xFEA
 22109                           fsr0l	equ	0xFE9
 22110                           wreg	equ	0xFE8
 22111                           indf1	equ	0xFE7
 22112                           postinc1	equ	0xFE6
 22113                           postdec1	equ	0xFE5
 22114                           fsr1h	equ	0xFE2
 22115                           fsr1l	equ	0xFE1
 22116                           indf2	equ	0xFDF
 22117                           postinc2	equ	0xFDE
 22118                           postdec2	equ	0xFDD
 22119                           plusw2	equ	0xFDB
 22120                           fsr2h	equ	0xFDA
 22121                           fsr2l	equ	0xFD9
 22122                           status	equ	0xFD8
 22123                           
 22124 ;; *************** function _blinkForSeconds *****************
 22125 ;; Defined at:
 22126 ;;		line 96 in file "../Source/c/04_App/app_utils.c"
 22127 ;; Parameters:    Size  Location     Type
 22128 ;;  seconds         1    wreg     unsigned char 
 22129 ;;  blinkTicks      2   51[BANK0 ] PTR unsigned int 
 22130 ;;		 -> MyApp_Task@blinkTicks(2), 
 22131 ;; Auto vars:     Size  Location     Type
 22132 ;;  seconds         1   53[BANK0 ] unsigned char 
 22133 ;; Return value:  Size  Location     Type
 22134 ;;                  1    wreg      void 
 22135 ;; Registers used:
 22136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22137 ;; Tracked objects:
 22138 ;;		On entry : 0/0
 22139 ;;		On exit  : 0/0
 22140 ;;		Unchanged: 0/0
 22141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22142 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22143 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22145 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22146 ;;Total ram usage:        3 bytes
 22147 ;; Hardware stack levels used:    1
 22148 ;; Hardware stack levels required when called:   13
 22149 ;; This function calls:
 22150 ;;		_Led_SetLedStatus
 22151 ;;		_secondsAppTimer
 22152 ;; This function is called by:
 22153 ;;		_MyApp_Task
 22154 ;; This function uses a non-reentrant model
 22155 ;;
 22156                           
 22157                           	psect	text100
 22158  005C2C                     __ptext100:
 22159                           	opt stack 0
 22160  005C2C                     _blinkForSeconds:
 22161                           	opt stack 14
 22162                           
 22163                           ; BSR set to: 0
 22164                           ;incstack = 0
 22165                           ;blinkForSeconds@seconds stored from wreg
 22166  005C2C  0100               	movlb	0	; () banked
 22167  005C2E  6F95               	movwf	blinkForSeconds@seconds& (0+255),b
 22168                           
 22169                           ;app_utils.c: 98: if (secondsAppTimer(seconds, blinkTicks, 0))
 22170  005C30  C093  F08A         	movff	blinkForSeconds@blinkTicks,secondsAppTimer@counter
 22171  005C34  C094  F08B         	movff	blinkForSeconds@blinkTicks+1,secondsAppTimer@counter+1
 22172  005C38  0E00               	movlw	0
 22173  005C3A  0100               	movlb	0	; () banked
 22174  005C3C  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 22175  005C3E  5195               	movf	blinkForSeconds@seconds& (0+255),w,b
 22176  005C40  ECCA  F022         	call	_secondsAppTimer
 22177  005C44  0900               	iorlw	0
 22178  005C46  B4D8               	btfsc	status,2,c
 22179  005C48  D007               	goto	l2672
 22180                           
 22181                           ;app_utils.c: 99: {
 22182                           ;app_utils.c: 100: Led_SetLedStatus(1u, LED_STS_ON);
 22183  005C4A  0E01               	movlw	1
 22184  005C4C  0100               	movlb	0	; () banked
 22185  005C4E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 22186  005C50  0E01               	movlw	1
 22187  005C52  EC1A  F02F         	call	_Led_SetLedStatus
 22188                           
 22189                           ;app_utils.c: 101: }
 22190  005C56  0012               	return	
 22191  005C58                     l2672:
 22192                           
 22193                           ;app_utils.c: 102: else
 22194                           ;app_utils.c: 103: {
 22195                           ;app_utils.c: 104: Led_SetLedStatus(1u, LED_STS_BLINK);
 22196  005C58  0E03               	movlw	3
 22197  005C5A  0100               	movlb	0	; () banked
 22198  005C5C  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 22199  005C5E  0E01               	movlw	1
 22200  005C60  EC1A  F02F         	call	_Led_SetLedStatus
 22201  005C64  0012               	return	
 22202  005C66                     __end_of_blinkForSeconds:
 22203                           	opt stack 0
 22204                           tosu	equ	0xFFF
 22205                           tosh	equ	0xFFE
 22206                           tosl	equ	0xFFD
 22207                           pclath	equ	0xFFA
 22208                           tblptru	equ	0xFF8
 22209                           tblptrh	equ	0xFF7
 22210                           tblptrl	equ	0xFF6
 22211                           tablat	equ	0xFF5
 22212                           prodh	equ	0xFF4
 22213                           prodl	equ	0xFF3
 22214                           intcon	equ	0xFF2
 22215                           intcon2	equ	0xFF1
 22216                           intcon3	equ	0xFF0
 22217                           indf0	equ	0xFEF
 22218                           postinc0	equ	0xFEE
 22219                           plusw0	equ	0xFEB
 22220                           fsr0h	equ	0xFEA
 22221                           fsr0l	equ	0xFE9
 22222                           wreg	equ	0xFE8
 22223                           indf1	equ	0xFE7
 22224                           postinc1	equ	0xFE6
 22225                           postdec1	equ	0xFE5
 22226                           fsr1h	equ	0xFE2
 22227                           fsr1l	equ	0xFE1
 22228                           indf2	equ	0xFDF
 22229                           postinc2	equ	0xFDE
 22230                           postdec2	equ	0xFDD
 22231                           plusw2	equ	0xFDB
 22232                           fsr2h	equ	0xFDA
 22233                           fsr2l	equ	0xFD9
 22234                           status	equ	0xFD8
 22235                           
 22236 ;; *************** function _secondsAppTimer *****************
 22237 ;; Defined at:
 22238 ;;		line 66 in file "../Source/c/04_App/app_utils.c"
 22239 ;; Parameters:    Size  Location     Type
 22240 ;;  seconds         1    wreg     unsigned char 
 22241 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 22242 ;;		 -> initGprsModem@modemCounter(2), MyApp_Task@blinkTicks(2), 
 22243 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 22244 ;; Auto vars:     Size  Location     Type
 22245 ;;  seconds         1   47[BANK0 ] unsigned char 
 22246 ;;  destinationT    2   49[BANK0 ] unsigned int 
 22247 ;;  isExpired       1   48[BANK0 ] unsigned char 
 22248 ;; Return value:  Size  Location     Type
 22249 ;;                  1    wreg      unsigned char 
 22250 ;; Registers used:
 22251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22252 ;; Tracked objects:
 22253 ;;		On entry : 0/0
 22254 ;;		On exit  : 0/0
 22255 ;;		Unchanged: 0/0
 22256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22257 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22258 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22259 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22260 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22261 ;;Total ram usage:        9 bytes
 22262 ;; Hardware stack levels used:    1
 22263 ;; Hardware stack levels required when called:   12
 22264 ;; This function calls:
 22265 ;;		___lwdiv
 22266 ;;		___wmul
 22267 ;; This function is called by:
 22268 ;;		_initGprsModem
 22269 ;;		_blinkForSeconds
 22270 ;; This function uses a non-reentrant model
 22271 ;;
 22272                           
 22273                           	psect	text101
 22274  004594                     __ptext101:
 22275                           	opt stack 0
 22276  004594                     _secondsAppTimer:
 22277                           	opt stack 13
 22278                           
 22279                           ;incstack = 0
 22280                           ;secondsAppTimer@seconds stored from wreg
 22281  004594  0100               	movlb	0	; () banked
 22282  004596  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 22283                           
 22284                           ;app_utils.c: 68: bool isExpired = 1;
 22285  004598  0E01               	movlw	1
 22286  00459A  0100               	movlb	0	; () banked
 22287  00459C  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22288                           
 22289                           ; BSR set to: 0
 22290                           ;app_utils.c: 69: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 22291  00459E  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 22292  0045A2  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 22293  0045A4  0E03               	movlw	3
 22294  0045A6  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22295  0045A8  0EE8               	movlw	232
 22296  0045AA  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 22297  0045AC  ECA0  F02F         	call	___wmul	;wreg free
 22298  0045B0  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 22299  0045B4  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 22300  0045B8  0E00               	movlw	0
 22301  0045BA  0100               	movlb	0	; () banked
 22302  0045BC  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 22303  0045BE  0E64               	movlw	100
 22304  0045C0  6F85               	movwf	___lwdiv@divisor& (0+255),b
 22305  0045C2  ECA6  F02A         	call	___lwdiv	;wreg free
 22306  0045C6  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 22307  0045CA  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 22308                           
 22309                           ;app_utils.c: 71: if (*counter < destinationTicks)
 22310  0045CE  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22311  0045D2  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22312  0045D6  0100               	movlb	0	; () banked
 22313  0045D8  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22314  0045DA  5CDE               	subwf	postinc2,w,c
 22315  0045DC  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22316  0045DE  58DE               	subwfb	postinc2,w,c
 22317  0045E0  B0D8               	btfsc	status,0,c
 22318  0045E2  D009               	goto	l2665
 22319                           
 22320                           ; BSR set to: 0
 22321                           ;app_utils.c: 72: {
 22322                           ;app_utils.c: 73: *counter += 1;
 22323  0045E4  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22324  0045E8  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22325  0045EC  2ADE               	incf	postinc2,f,c
 22326  0045EE  0E00               	movlw	0
 22327  0045F0  22DD               	addwfc	postdec2,f,c
 22328                           
 22329                           ; BSR set to: 0
 22330                           ;app_utils.c: 74: isExpired = 0;
 22331  0045F2  0E00               	movlw	0
 22332  0045F4  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22333  0045F6                     l2665:
 22334                           
 22335                           ; BSR set to: 0
 22336                           ;app_utils.c: 75: }
 22337                           ;app_utils.c: 76: if (*counter == destinationTicks)
 22338                           
 22339                           ; BSR set to: 0
 22340  0045F6  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22341  0045FA  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22342  0045FE  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22343  004600  18DE               	xorwf	postinc2,w,c
 22344  004602  E117               	bnz	l13198
 22345  004604  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22346  004606  18DE               	xorwf	postinc2,w,c
 22347  004608  A4D8               	btfss	status,2,c
 22348  00460A  D013               	goto	l2668
 22349                           
 22350                           ; BSR set to: 0
 22351                           ;app_utils.c: 77: {
 22352                           ;app_utils.c: 78: if (isCyclic)
 22353  00460C  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 22354  00460E  B4D8               	btfsc	status,2,c
 22355  004610  D008               	goto	l2667
 22356                           
 22357                           ; BSR set to: 0
 22358                           ;app_utils.c: 79: {
 22359                           ;app_utils.c: 80: *counter = 0;
 22360  004612  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22361  004616  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22362  00461A  0E00               	movlw	0
 22363  00461C  6EDE               	movwf	postinc2,c
 22364  00461E  0E00               	movlw	0
 22365  004620  D007               	goto	L35
 22366  004622                     l2667:
 22367                           
 22368                           ; BSR set to: 0
 22369                           ;app_utils.c: 82: else
 22370                           ;app_utils.c: 83: {
 22371                           ;app_utils.c: 84: *counter = 0xFFFF;
 22372                           
 22373                           ; BSR set to: 0
 22374  004622  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22375  004626  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22376  00462A  0EFF               	movlw	255
 22377  00462C  6EDE               	movwf	postinc2,c
 22378  00462E  0EFF               	movlw	255
 22379  004630                     L35:
 22380  004630  6EDD               	movwf	postdec2,c
 22381  004632                     l2668:
 22382  004632                     l13198:
 22383                           
 22384                           ; BSR set to: 0
 22385                           ;app_utils.c: 85: }
 22386                           ;app_utils.c: 86: }
 22387                           ;app_utils.c: 87: return isExpired;
 22388  004632  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 22389  004634  0012               	return	
 22390  004636                     __end_of_secondsAppTimer:
 22391                           	opt stack 0
 22392                           tosu	equ	0xFFF
 22393                           tosh	equ	0xFFE
 22394                           tosl	equ	0xFFD
 22395                           pclath	equ	0xFFA
 22396                           tblptru	equ	0xFF8
 22397                           tblptrh	equ	0xFF7
 22398                           tblptrl	equ	0xFF6
 22399                           tablat	equ	0xFF5
 22400                           prodh	equ	0xFF4
 22401                           prodl	equ	0xFF3
 22402                           intcon	equ	0xFF2
 22403                           intcon2	equ	0xFF1
 22404                           intcon3	equ	0xFF0
 22405                           indf0	equ	0xFEF
 22406                           postinc0	equ	0xFEE
 22407                           plusw0	equ	0xFEB
 22408                           fsr0h	equ	0xFEA
 22409                           fsr0l	equ	0xFE9
 22410                           wreg	equ	0xFE8
 22411                           indf1	equ	0xFE7
 22412                           postinc1	equ	0xFE6
 22413                           postdec1	equ	0xFE5
 22414                           fsr1h	equ	0xFE2
 22415                           fsr1l	equ	0xFE1
 22416                           indf2	equ	0xFDF
 22417                           postinc2	equ	0xFDE
 22418                           postdec2	equ	0xFDD
 22419                           plusw2	equ	0xFDB
 22420                           fsr2h	equ	0xFDA
 22421                           fsr2l	equ	0xFD9
 22422                           status	equ	0xFD8
 22423                           
 22424 ;; *************** function _Mdm_RequestSmsData *****************
 22425 ;; Defined at:
 22426 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22427 ;; Parameters:    Size  Location     Type
 22428 ;;		None
 22429 ;; Auto vars:     Size  Location     Type
 22430 ;;		None
 22431 ;; Return value:  Size  Location     Type
 22432 ;;                  1    wreg      void 
 22433 ;; Registers used:
 22434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22435 ;; Tracked objects:
 22436 ;;		On entry : 0/0
 22437 ;;		On exit  : 0/0
 22438 ;;		Unchanged: 0/0
 22439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22444 ;;Total ram usage:        0 bytes
 22445 ;; Hardware stack levels used:    1
 22446 ;; Hardware stack levels required when called:   12
 22447 ;; This function calls:
 22448 ;;		_GenerateEvt
 22449 ;; This function is called by:
 22450 ;;		_MyApp_Task
 22451 ;; This function uses a non-reentrant model
 22452 ;;
 22453                           
 22454                           	psect	text102
 22455  0062F4                     __ptext102:
 22456                           	opt stack 0
 22457  0062F4                     _Mdm_RequestSmsData:
 22458                           	opt stack 15
 22459                           
 22460                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 22461                           
 22462                           ; BSR set to: 0
 22463                           ;incstack = 0
 22464  0062F4  0EDD               	movlw	low _GetSmsText
 22465  0062F6  0100               	movlb	0	; () banked
 22466  0062F8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22467  0062FA  0E00               	movlw	high _GetSmsText
 22468  0062FC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22469  0062FE  EC0D  F031         	call	_GenerateEvt	;wreg free
 22470  006302  0012               	return		;funcret
 22471  006304                     __end_of_Mdm_RequestSmsData:
 22472                           	opt stack 0
 22473                           tosu	equ	0xFFF
 22474                           tosh	equ	0xFFE
 22475                           tosl	equ	0xFFD
 22476                           pclath	equ	0xFFA
 22477                           tblptru	equ	0xFF8
 22478                           tblptrh	equ	0xFF7
 22479                           tblptrl	equ	0xFF6
 22480                           tablat	equ	0xFF5
 22481                           prodh	equ	0xFF4
 22482                           prodl	equ	0xFF3
 22483                           intcon	equ	0xFF2
 22484                           intcon2	equ	0xFF1
 22485                           intcon3	equ	0xFF0
 22486                           indf0	equ	0xFEF
 22487                           postinc0	equ	0xFEE
 22488                           plusw0	equ	0xFEB
 22489                           fsr0h	equ	0xFEA
 22490                           fsr0l	equ	0xFE9
 22491                           wreg	equ	0xFE8
 22492                           indf1	equ	0xFE7
 22493                           postinc1	equ	0xFE6
 22494                           postdec1	equ	0xFE5
 22495                           fsr1h	equ	0xFE2
 22496                           fsr1l	equ	0xFE1
 22497                           indf2	equ	0xFDF
 22498                           postinc2	equ	0xFDE
 22499                           postdec2	equ	0xFDD
 22500                           plusw2	equ	0xFDB
 22501                           fsr2h	equ	0xFDA
 22502                           fsr2l	equ	0xFD9
 22503                           status	equ	0xFD8
 22504                           
 22505 ;; *************** function _Mdm_IsSmsReceived *****************
 22506 ;; Defined at:
 22507 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22508 ;; Parameters:    Size  Location     Type
 22509 ;;		None
 22510 ;; Auto vars:     Size  Location     Type
 22511 ;;  Ret             1   33[BANK0 ] enum E8928
 22512 ;; Return value:  Size  Location     Type
 22513 ;;                  1    wreg      enum E8928
 22514 ;; Registers used:
 22515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22516 ;; Tracked objects:
 22517 ;;		On entry : 0/0
 22518 ;;		On exit  : 0/0
 22519 ;;		Unchanged: 0/0
 22520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22522 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22524 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22525 ;;Total ram usage:        1 bytes
 22526 ;; Hardware stack levels used:    1
 22527 ;; Hardware stack levels required when called:   12
 22528 ;; This function calls:
 22529 ;;		_ReceiveEvt
 22530 ;; This function is called by:
 22531 ;;		_MyApp_Task
 22532 ;; This function uses a non-reentrant model
 22533 ;;
 22534                           
 22535                           	psect	text103
 22536  005FB2                     __ptext103:
 22537                           	opt stack 0
 22538  005FB2                     _Mdm_IsSmsReceived:
 22539                           	opt stack 15
 22540                           
 22541                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 22542                           
 22543                           ;incstack = 0
 22544  005FB2  0E00               	movlw	0
 22545  005FB4  0100               	movlb	0	; () banked
 22546  005FB6  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22547                           
 22548                           ; BSR set to: 0
 22549                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 22550  005FB8  0EDE               	movlw	low _SmsEvent
 22551  005FBA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22552  005FBC  0E00               	movlw	high _SmsEvent
 22553  005FBE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22554  005FC0  EC49  F02F         	call	_ReceiveEvt	;wreg free
 22555  005FC4  0900               	iorlw	0
 22556  005FC6  B4D8               	btfsc	status,2,c
 22557  005FC8  D003               	goto	l1136
 22558                           
 22559                           ;mdm_gsm_gprs.c: 947: {
 22560                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 22561  005FCA  0E01               	movlw	1
 22562  005FCC  0100               	movlb	0	; () banked
 22563  005FCE  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22564  005FD0                     l1136:
 22565                           
 22566                           ;mdm_gsm_gprs.c: 949: }
 22567                           ;mdm_gsm_gprs.c: 951: return Ret;
 22568  005FD0  0100               	movlb	0	; () banked
 22569  005FD2  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 22570  005FD4  0012               	return	
 22571  005FD6                     __end_of_Mdm_IsSmsReceived:
 22572                           	opt stack 0
 22573                           tosu	equ	0xFFF
 22574                           tosh	equ	0xFFE
 22575                           tosl	equ	0xFFD
 22576                           pclath	equ	0xFFA
 22577                           tblptru	equ	0xFF8
 22578                           tblptrh	equ	0xFF7
 22579                           tblptrl	equ	0xFF6
 22580                           tablat	equ	0xFF5
 22581                           prodh	equ	0xFF4
 22582                           prodl	equ	0xFF3
 22583                           intcon	equ	0xFF2
 22584                           intcon2	equ	0xFF1
 22585                           intcon3	equ	0xFF0
 22586                           indf0	equ	0xFEF
 22587                           postinc0	equ	0xFEE
 22588                           plusw0	equ	0xFEB
 22589                           fsr0h	equ	0xFEA
 22590                           fsr0l	equ	0xFE9
 22591                           wreg	equ	0xFE8
 22592                           indf1	equ	0xFE7
 22593                           postinc1	equ	0xFE6
 22594                           postdec1	equ	0xFE5
 22595                           fsr1h	equ	0xFE2
 22596                           fsr1l	equ	0xFE1
 22597                           indf2	equ	0xFDF
 22598                           postinc2	equ	0xFDE
 22599                           postdec2	equ	0xFDD
 22600                           plusw2	equ	0xFDB
 22601                           fsr2h	equ	0xFDA
 22602                           fsr2l	equ	0xFD9
 22603                           status	equ	0xFD8
 22604                           
 22605 ;; *************** function _Mdm_IsRinging *****************
 22606 ;; Defined at:
 22607 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22608 ;; Parameters:    Size  Location     Type
 22609 ;;		None
 22610 ;; Auto vars:     Size  Location     Type
 22611 ;;  Ret             1   33[BANK0 ] enum E8924
 22612 ;; Return value:  Size  Location     Type
 22613 ;;                  1    wreg      enum E8924
 22614 ;; Registers used:
 22615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22616 ;; Tracked objects:
 22617 ;;		On entry : 0/0
 22618 ;;		On exit  : 0/0
 22619 ;;		Unchanged: 0/0
 22620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22622 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22624 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22625 ;;Total ram usage:        1 bytes
 22626 ;; Hardware stack levels used:    1
 22627 ;; Hardware stack levels required when called:   12
 22628 ;; This function calls:
 22629 ;;		_ReceiveEvt
 22630 ;; This function is called by:
 22631 ;;		_MyApp_Task
 22632 ;; This function uses a non-reentrant model
 22633 ;;
 22634                           
 22635                           	psect	text104
 22636  005FD6                     __ptext104:
 22637                           	opt stack 0
 22638  005FD6                     _Mdm_IsRinging:
 22639                           	opt stack 15
 22640                           
 22641                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 22642                           
 22643                           ; BSR set to: 0
 22644                           ;incstack = 0
 22645  005FD6  0E00               	movlw	0
 22646  005FD8  0100               	movlb	0	; () banked
 22647  005FDA  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 22648                           
 22649                           ; BSR set to: 0
 22650                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 22651  005FDC  0EE0               	movlw	low _RingEvent
 22652  005FDE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22653  005FE0  0E00               	movlw	high _RingEvent
 22654  005FE2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22655  005FE4  EC49  F02F         	call	_ReceiveEvt	;wreg free
 22656  005FE8  0900               	iorlw	0
 22657  005FEA  B4D8               	btfsc	status,2,c
 22658  005FEC  D003               	goto	l1152
 22659                           
 22660                           ;mdm_gsm_gprs.c: 1030: {
 22661                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 22662  005FEE  0E01               	movlw	1
 22663  005FF0  0100               	movlb	0	; () banked
 22664  005FF2  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 22665  005FF4                     l1152:
 22666                           
 22667                           ;mdm_gsm_gprs.c: 1032: }
 22668                           ;mdm_gsm_gprs.c: 1034: return Ret;
 22669  005FF4  0100               	movlb	0	; () banked
 22670  005FF6  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 22671  005FF8  0012               	return	
 22672  005FFA                     __end_of_Mdm_IsRinging:
 22673                           	opt stack 0
 22674                           tosu	equ	0xFFF
 22675                           tosh	equ	0xFFE
 22676                           tosl	equ	0xFFD
 22677                           pclath	equ	0xFFA
 22678                           tblptru	equ	0xFF8
 22679                           tblptrh	equ	0xFF7
 22680                           tblptrl	equ	0xFF6
 22681                           tablat	equ	0xFF5
 22682                           prodh	equ	0xFF4
 22683                           prodl	equ	0xFF3
 22684                           intcon	equ	0xFF2
 22685                           intcon2	equ	0xFF1
 22686                           intcon3	equ	0xFF0
 22687                           indf0	equ	0xFEF
 22688                           postinc0	equ	0xFEE
 22689                           plusw0	equ	0xFEB
 22690                           fsr0h	equ	0xFEA
 22691                           fsr0l	equ	0xFE9
 22692                           wreg	equ	0xFE8
 22693                           indf1	equ	0xFE7
 22694                           postinc1	equ	0xFE6
 22695                           postdec1	equ	0xFE5
 22696                           fsr1h	equ	0xFE2
 22697                           fsr1l	equ	0xFE1
 22698                           indf2	equ	0xFDF
 22699                           postinc2	equ	0xFDE
 22700                           postdec2	equ	0xFDD
 22701                           plusw2	equ	0xFDB
 22702                           fsr2h	equ	0xFDA
 22703                           fsr2l	equ	0xFD9
 22704                           status	equ	0xFD8
 22705                           
 22706 ;; *************** function _Mdm_HangPhoneCall *****************
 22707 ;; Defined at:
 22708 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22709 ;; Parameters:    Size  Location     Type
 22710 ;;		None
 22711 ;; Auto vars:     Size  Location     Type
 22712 ;;		None
 22713 ;; Return value:  Size  Location     Type
 22714 ;;                  1    wreg      void 
 22715 ;; Registers used:
 22716 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22717 ;; Tracked objects:
 22718 ;;		On entry : 0/0
 22719 ;;		On exit  : 0/0
 22720 ;;		Unchanged: 0/0
 22721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22726 ;;Total ram usage:        0 bytes
 22727 ;; Hardware stack levels used:    1
 22728 ;; Hardware stack levels required when called:   13
 22729 ;; This function calls:
 22730 ;;		_Uart_WriteConstString
 22731 ;; This function is called by:
 22732 ;;		_MyApp_Task
 22733 ;; This function uses a non-reentrant model
 22734 ;;
 22735                           
 22736                           	psect	text105
 22737  0062B0                     __ptext105:
 22738                           	opt stack 0
 22739  0062B0                     _Mdm_HangPhoneCall:
 22740                           	opt stack 14
 22741                           
 22742                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 22743                           
 22744                           ; BSR set to: 0
 22745                           ;incstack = 0
 22746  0062B0  0EEF               	movlw	low STR_6
 22747  0062B2  0100               	movlb	0	; () banked
 22748  0062B4  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22749  0062B6  0EFF               	movlw	high STR_6
 22750  0062B8  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22751  0062BA  0E01               	movlw	1
 22752  0062BC  ECFB  F02C         	call	_Uart_WriteConstString
 22753  0062C0  0012               	return		;funcret
 22754  0062C2                     __end_of_Mdm_HangPhoneCall:
 22755                           	opt stack 0
 22756                           tosu	equ	0xFFF
 22757                           tosh	equ	0xFFE
 22758                           tosl	equ	0xFFD
 22759                           pclath	equ	0xFFA
 22760                           tblptru	equ	0xFF8
 22761                           tblptrh	equ	0xFF7
 22762                           tblptrl	equ	0xFF6
 22763                           tablat	equ	0xFF5
 22764                           prodh	equ	0xFF4
 22765                           prodl	equ	0xFF3
 22766                           intcon	equ	0xFF2
 22767                           intcon2	equ	0xFF1
 22768                           intcon3	equ	0xFF0
 22769                           indf0	equ	0xFEF
 22770                           postinc0	equ	0xFEE
 22771                           plusw0	equ	0xFEB
 22772                           fsr0h	equ	0xFEA
 22773                           fsr0l	equ	0xFE9
 22774                           wreg	equ	0xFE8
 22775                           indf1	equ	0xFE7
 22776                           postinc1	equ	0xFE6
 22777                           postdec1	equ	0xFE5
 22778                           fsr1h	equ	0xFE2
 22779                           fsr1l	equ	0xFE1
 22780                           indf2	equ	0xFDF
 22781                           postinc2	equ	0xFDE
 22782                           postdec2	equ	0xFDD
 22783                           plusw2	equ	0xFDB
 22784                           fsr2h	equ	0xFDA
 22785                           fsr2l	equ	0xFD9
 22786                           status	equ	0xFD8
 22787                           
 22788 ;; *************** function _Led_SetLedBlinkTime *****************
 22789 ;; Defined at:
 22790 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 22791 ;; Parameters:    Size  Location     Type
 22792 ;;  Led             1    wreg     unsigned char 
 22793 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 22794 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 22795 ;; Auto vars:     Size  Location     Type
 22796 ;;  Led             1   33[BANK0 ] unsigned char 
 22797 ;; Return value:  Size  Location     Type
 22798 ;;                  1    wreg      void 
 22799 ;; Registers used:
 22800 ;;		wreg, status,2, status,0
 22801 ;; Tracked objects:
 22802 ;;		On entry : 0/0
 22803 ;;		On exit  : 0/0
 22804 ;;		Unchanged: 0/0
 22805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22806 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22807 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22809 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22810 ;;Total ram usage:        5 bytes
 22811 ;; Hardware stack levels used:    1
 22812 ;; Hardware stack levels required when called:   11
 22813 ;; This function calls:
 22814 ;;		Nothing
 22815 ;; This function is called by:
 22816 ;;		_MyApp_Task
 22817 ;; This function uses a non-reentrant model
 22818 ;;
 22819                           
 22820                           	psect	text106
 22821  0054F8                     __ptext106:
 22822                           	opt stack 0
 22823  0054F8                     _Led_SetLedBlinkTime:
 22824                           	opt stack 16
 22825                           
 22826                           ;incstack = 0
 22827                           ;Led_SetLedBlinkTime@Led stored from wreg
 22828  0054F8  0100               	movlb	0	; () banked
 22829  0054FA  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 22830                           
 22831                           ;led.c: 374: switch (Led)
 22832  0054FC  D01B               	goto	l2113
 22833  0054FE                     l2114:
 22834                           
 22835                           ; BSR set to: 0
 22836                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 22837  0054FE  C07D  F371         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 22838  005502  C07E  F372         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 22839                           
 22840                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 22841  005506  C07F  F373         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 22842  00550A  C080  F374         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 22843                           
 22844                           ;led.c: 379: break;
 22845  00550E  0012               	return	
 22846  005510                     l2116:
 22847                           
 22848                           ; BSR set to: 0
 22849                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 22850  005510  C07D  F368         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 22851  005514  C07E  F369         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 22852                           
 22853                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 22854  005518  C07F  F36A         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 22855  00551C  C080  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 22856                           
 22857                           ;led.c: 384: break;
 22858  005520  0012               	return	
 22859  005522                     l2117:
 22860                           
 22861                           ; BSR set to: 0
 22862                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 22863  005522  C07D  F368         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 22864  005526  C07E  F369         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 22865                           
 22866                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 22867  00552A  C07F  F36A         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 22868  00552E  C080  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 22869                           
 22870                           ; BSR set to: 0
 22871                           ;led.c: 393: }
 22872                           
 22873                           ; BSR set to: 0
 22874                           ;led.c: 392: break;
 22875                           
 22876                           ;led.c: 391: default:
 22877                           
 22878                           ;led.c: 389: break;
 22879  005532  0012               	return	
 22880  005534                     l2113:
 22881                           
 22882                           ; BSR set to: 0
 22883  005534  0100               	movlb	0	; () banked
 22884  005536  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 22885                           
 22886                           ; Switch size 1, requested type "space"
 22887                           ; Number of cases is 3, Range of values is 1 to 3
 22888                           ; switch strategies available:
 22889                           ; Name         Instructions Cycles
 22890                           ; simple_byte           10     6 (average)
 22891                           ;	Chosen strategy is simple_byte
 22892  005538  0A01               	xorlw	1	; case 1
 22893  00553A  B4D8               	btfsc	status,2,c
 22894  00553C  D7E0               	goto	l2114
 22895  00553E  0A03               	xorlw	3	; case 2
 22896  005540  B4D8               	btfsc	status,2,c
 22897  005542  D7E6               	goto	l2116
 22898  005544  0A01               	xorlw	1	; case 3
 22899  005546  A4D8               	btfss	status,2,c
 22900  005548  0012               	return	
 22901  00554A  D7EB               	goto	l2117
 22902  00554C                     __end_of_Led_SetLedBlinkTime:
 22903                           	opt stack 0
 22904                           tosu	equ	0xFFF
 22905                           tosh	equ	0xFFE
 22906                           tosl	equ	0xFFD
 22907                           pclath	equ	0xFFA
 22908                           tblptru	equ	0xFF8
 22909                           tblptrh	equ	0xFF7
 22910                           tblptrl	equ	0xFF6
 22911                           tablat	equ	0xFF5
 22912                           prodh	equ	0xFF4
 22913                           prodl	equ	0xFF3
 22914                           intcon	equ	0xFF2
 22915                           intcon2	equ	0xFF1
 22916                           intcon3	equ	0xFF0
 22917                           indf0	equ	0xFEF
 22918                           postinc0	equ	0xFEE
 22919                           plusw0	equ	0xFEB
 22920                           fsr0h	equ	0xFEA
 22921                           fsr0l	equ	0xFE9
 22922                           wreg	equ	0xFE8
 22923                           indf1	equ	0xFE7
 22924                           postinc1	equ	0xFE6
 22925                           postdec1	equ	0xFE5
 22926                           fsr1h	equ	0xFE2
 22927                           fsr1l	equ	0xFE1
 22928                           indf2	equ	0xFDF
 22929                           postinc2	equ	0xFDE
 22930                           postdec2	equ	0xFDD
 22931                           plusw2	equ	0xFDB
 22932                           fsr2h	equ	0xFDA
 22933                           fsr2l	equ	0xFD9
 22934                           status	equ	0xFD8
 22935                           
 22936 ;; *************** function _GetCallerNumber *****************
 22937 ;; Defined at:
 22938 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22939 ;; Parameters:    Size  Location     Type
 22940 ;;		None
 22941 ;; Auto vars:     Size  Location     Type
 22942 ;;		None
 22943 ;; Return value:  Size  Location     Type
 22944 ;;                  2   35[BANK0 ] PTR unsigned char 
 22945 ;; Registers used:
 22946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22947 ;; Tracked objects:
 22948 ;;		On entry : 0/0
 22949 ;;		On exit  : 0/0
 22950 ;;		Unchanged: 0/0
 22951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22952 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22955 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22956 ;;Total ram usage:        2 bytes
 22957 ;; Hardware stack levels used:    1
 22958 ;; Hardware stack levels required when called:   12
 22959 ;; This function calls:
 22960 ;;		_ClearBuffer
 22961 ;;		_ReceiveEvt
 22962 ;; This function is called by:
 22963 ;;		_MyApp_Task
 22964 ;; This function uses a non-reentrant model
 22965 ;;
 22966                           
 22967                           	psect	text107
 22968  005CA0                     __ptext107:
 22969                           	opt stack 0
 22970  005CA0                     _GetCallerNumber:
 22971                           	opt stack 15
 22972                           
 22973                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 22974                           
 22975                           ; BSR set to: 0
 22976                           ;incstack = 0
 22977  005CA0  0EDF               	movlw	low _ClipEvent
 22978  005CA2  0100               	movlb	0	; () banked
 22979  005CA4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22980  005CA6  0E00               	movlw	high _ClipEvent
 22981  005CA8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22982  005CAA  EC49  F02F         	call	_ReceiveEvt	;wreg free
 22983  005CAE  0900               	iorlw	0
 22984  005CB0  A4D8               	btfss	status,2,c
 22985  005CB2  D00B               	goto	l1156
 22986                           
 22987                           ;mdm_gsm_gprs.c: 1040: {
 22988                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 22989  005CB4  0EB8               	movlw	low _callerNumber
 22990  005CB6  0100               	movlb	0	; () banked
 22991  005CB8  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 22992  005CBA  0E04               	movlw	high _callerNumber
 22993  005CBC  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 22994  005CBE  0E00               	movlw	0
 22995  005CC0  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 22996  005CC2  0E0D               	movlw	13
 22997  005CC4  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 22998  005CC6  EC6B  F02E         	call	_ClearBuffer	;wreg free
 22999  005CCA                     l1156:
 23000                           
 23001                           ;mdm_gsm_gprs.c: 1042: }
 23002                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 23003  005CCA  0EB8               	movlw	low _callerNumber
 23004  005CCC  0100               	movlb	0	; () banked
 23005  005CCE  6F83               	movwf	?_GetCallerNumber& (0+255),b
 23006  005CD0  0E04               	movlw	high _callerNumber
 23007  005CD2  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 23008  005CD4  0012               	return	
 23009  005CD6                     __end_of_GetCallerNumber:
 23010                           	opt stack 0
 23011                           tosu	equ	0xFFF
 23012                           tosh	equ	0xFFE
 23013                           tosl	equ	0xFFD
 23014                           pclath	equ	0xFFA
 23015                           tblptru	equ	0xFF8
 23016                           tblptrh	equ	0xFF7
 23017                           tblptrl	equ	0xFF6
 23018                           tablat	equ	0xFF5
 23019                           prodh	equ	0xFF4
 23020                           prodl	equ	0xFF3
 23021                           intcon	equ	0xFF2
 23022                           intcon2	equ	0xFF1
 23023                           intcon3	equ	0xFF0
 23024                           indf0	equ	0xFEF
 23025                           postinc0	equ	0xFEE
 23026                           plusw0	equ	0xFEB
 23027                           fsr0h	equ	0xFEA
 23028                           fsr0l	equ	0xFE9
 23029                           wreg	equ	0xFE8
 23030                           indf1	equ	0xFE7
 23031                           postinc1	equ	0xFE6
 23032                           postdec1	equ	0xFE5
 23033                           fsr1h	equ	0xFE2
 23034                           fsr1l	equ	0xFE1
 23035                           indf2	equ	0xFDF
 23036                           postinc2	equ	0xFDE
 23037                           postdec2	equ	0xFDD
 23038                           plusw2	equ	0xFDB
 23039                           fsr2h	equ	0xFDA
 23040                           fsr2l	equ	0xFD9
 23041                           status	equ	0xFD8
 23042                           
 23043 ;; *************** function _UartSetConfig *****************
 23044 ;; Defined at:
 23045 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23046 ;; Parameters:    Size  Location     Type
 23047 ;;		None
 23048 ;; Auto vars:     Size  Location     Type
 23049 ;;		None
 23050 ;; Return value:  Size  Location     Type
 23051 ;;                  1    wreg      void 
 23052 ;; Registers used:
 23053 ;;		wreg, status,2
 23054 ;; Tracked objects:
 23055 ;;		On entry : 0/0
 23056 ;;		On exit  : 0/0
 23057 ;;		Unchanged: 0/0
 23058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23063 ;;Total ram usage:        0 bytes
 23064 ;; Hardware stack levels used:    1
 23065 ;; Hardware stack levels required when called:   11
 23066 ;; This function calls:
 23067 ;;		Nothing
 23068 ;; This function is called by:
 23069 ;;		_Mdm_MainTask
 23070 ;; This function uses a non-reentrant model
 23071 ;;
 23072                           
 23073                           	psect	text108
 23074  00529C                     __ptext108:
 23075                           	opt stack 0
 23076  00529C                     _UartSetConfig:
 23077                           	opt stack 16
 23078                           
 23079                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 23080                           
 23081                           ; BSR set to: 0
 23082                           ;incstack = 0
 23083  00529C  0E01               	movlw	1
 23084  00529E  0103               	movlb	3	; () banked
 23085  0052A0  6F26               	movwf	_UartConfig& (0+255),b
 23086                           
 23087                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 23088  0052A2  0E00               	movlw	0
 23089  0052A4  6F27               	movwf	(_UartConfig+1)& (0+255),b
 23090                           
 23091                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 23092  0052A6  0E00               	movlw	0
 23093  0052A8  6F28               	movwf	(_UartConfig+2)& (0+255),b
 23094                           
 23095                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 23096  0052AA  0E00               	movlw	0
 23097  0052AC  6F29               	movwf	(_UartConfig+3)& (0+255),b
 23098                           
 23099                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 23100  0052AE  0E00               	movlw	0
 23101  0052B0  6F2A               	movwf	(_UartConfig+4)& (0+255),b
 23102                           
 23103                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 23104  0052B2  0E00               	movlw	0
 23105  0052B4  6F2B               	movwf	(_UartConfig+5)& (0+255),b
 23106                           
 23107                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 23108  0052B6  0E01               	movlw	1
 23109  0052B8  6F2C               	movwf	(_UartConfig+6)& (0+255),b
 23110                           
 23111                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 23112  0052BA  0E01               	movlw	1
 23113  0052BC  6F2D               	movwf	(_UartConfig+7)& (0+255),b
 23114                           
 23115                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 23116  0052BE  0E00               	movlw	0
 23117  0052C0  6F2E               	movwf	(_UartConfig+8)& (0+255),b
 23118                           
 23119                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 23120  0052C2  0E00               	movlw	0
 23121  0052C4  6F2F               	movwf	(_UartConfig+9)& (0+255),b
 23122                           
 23123                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 23124  0052C6  0E00               	movlw	0
 23125  0052C8  6F30               	movwf	(_UartConfig+10)& (0+255),b
 23126                           
 23127                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 23128  0052CA  0E00               	movlw	0
 23129  0052CC  6F31               	movwf	(_UartConfig+11)& (0+255),b
 23130                           
 23131                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 23132  0052CE  0E01               	movlw	1
 23133  0052D0  6F32               	movwf	(_UartConfig+12)& (0+255),b
 23134                           
 23135                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 23136  0052D2  0E00               	movlw	0
 23137  0052D4  6F33               	movwf	(_UartConfig+13)& (0+255),b
 23138  0052D6  0E6C               	movlw	108
 23139  0052D8  6F34               	movwf	(_UartConfig+14)& (0+255),b
 23140  0052DA  0EDC               	movlw	220
 23141  0052DC  6F35               	movwf	(_UartConfig+15)& (0+255),b
 23142  0052DE  0E02               	movlw	2
 23143  0052E0  6F36               	movwf	(_UartConfig+16)& (0+255),b
 23144                           
 23145                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 23146  0052E2  0E80               	movlw	128
 23147  0052E4  6F37               	movwf	(_UartConfig+17)& (0+255),b
 23148  0052E6  0E25               	movlw	37
 23149  0052E8  6F38               	movwf	(_UartConfig+18)& (0+255),b
 23150  0052EA  0E00               	movlw	0
 23151  0052EC  6F39               	movwf	(_UartConfig+19)& (0+255),b
 23152  0052EE  0E00               	movlw	0
 23153  0052F0  6F3A               	movwf	(_UartConfig+20)& (0+255),b
 23154                           
 23155                           ; BSR set to: 3
 23156  0052F2  0012               	return		;funcret
 23157  0052F4                     __end_of_UartSetConfig:
 23158                           	opt stack 0
 23159                           tosu	equ	0xFFF
 23160                           tosh	equ	0xFFE
 23161                           tosl	equ	0xFFD
 23162                           pclath	equ	0xFFA
 23163                           tblptru	equ	0xFF8
 23164                           tblptrh	equ	0xFF7
 23165                           tblptrl	equ	0xFF6
 23166                           tablat	equ	0xFF5
 23167                           prodh	equ	0xFF4
 23168                           prodl	equ	0xFF3
 23169                           intcon	equ	0xFF2
 23170                           intcon2	equ	0xFF1
 23171                           intcon3	equ	0xFF0
 23172                           indf0	equ	0xFEF
 23173                           postinc0	equ	0xFEE
 23174                           plusw0	equ	0xFEB
 23175                           fsr0h	equ	0xFEA
 23176                           fsr0l	equ	0xFE9
 23177                           wreg	equ	0xFE8
 23178                           indf1	equ	0xFE7
 23179                           postinc1	equ	0xFE6
 23180                           postdec1	equ	0xFE5
 23181                           fsr1h	equ	0xFE2
 23182                           fsr1l	equ	0xFE1
 23183                           indf2	equ	0xFDF
 23184                           postinc2	equ	0xFDE
 23185                           postdec2	equ	0xFDD
 23186                           plusw2	equ	0xFDB
 23187                           fsr2h	equ	0xFDA
 23188                           fsr2l	equ	0xFD9
 23189                           status	equ	0xFD8
 23190                           
 23191 ;; *************** function _TurnOnModem *****************
 23192 ;; Defined at:
 23193 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23194 ;; Parameters:    Size  Location     Type
 23195 ;;		None
 23196 ;; Auto vars:     Size  Location     Type
 23197 ;;		None
 23198 ;; Return value:  Size  Location     Type
 23199 ;;                  1    wreg      void 
 23200 ;; Registers used:
 23201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23202 ;; Tracked objects:
 23203 ;;		On entry : 0/0
 23204 ;;		On exit  : 0/0
 23205 ;;		Unchanged: 0/0
 23206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23211 ;;Total ram usage:        0 bytes
 23212 ;; Hardware stack levels used:    1
 23213 ;; Hardware stack levels required when called:   12
 23214 ;; This function calls:
 23215 ;;		_GenerateEvt
 23216 ;; This function is called by:
 23217 ;;		_Mdm_MainTask
 23218 ;; This function uses a non-reentrant model
 23219 ;;
 23220                           
 23221                           	psect	text109
 23222  0058A0                     __ptext109:
 23223                           	opt stack 0
 23224  0058A0                     _TurnOnModem:
 23225                           	opt stack 15
 23226                           
 23227                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 23228                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 23229                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 23230                           
 23231                           ; BSR set to: 3
 23232                           ;incstack = 0
 23233  0058A0  D019               	goto	l1009
 23234  0058A2                     
 23235                           ;mdm_gsm_gprs.c: 385: Counter++;
 23236  0058A2  0102               	movlb	2	; () banked
 23237  0058A4  4BDA               	infsnz	TurnOnModem@Counter& (0+255),f,b
 23238  0058A6  2BDB               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 23239                           
 23240                           ; BSR set to: 2
 23241                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 23242  0058A8  0EB8               	movlw	184
 23243  0058AA  5DDA               	subwf	TurnOnModem@Counter& (0+255),w,b
 23244  0058AC  0E0B               	movlw	11
 23245  0058AE  59DB               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 23246  0058B0  A0D8               	btfss	status,0,c
 23247  0058B2  0012               	return	
 23248                           
 23249                           ; BSR set to: 2
 23250                           ;mdm_gsm_gprs.c: 388: {
 23251                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 23252  0058B4  0E01               	movlw	1
 23253  0058B6  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 23254                           
 23255                           ; BSR set to: 2
 23256                           ;mdm_gsm_gprs.c: 391: }
 23257                           ;mdm_gsm_gprs.c: 392: break;
 23258  0058B8  0012               	return	
 23259  0058BA                     
 23260                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 23261                           
 23262                           ; BSR set to: 2
 23263  0058BA  0EE2               	movlw	low _MdmOnOffPulseRequest
 23264  0058BC  0100               	movlb	0	; () banked
 23265  0058BE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23266  0058C0  0E00               	movlw	high _MdmOnOffPulseRequest
 23267  0058C2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23268  0058C4  EC0D  F031         	call	_GenerateEvt	;wreg free
 23269                           
 23270                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 23271  0058C8  0E01               	movlw	1
 23272  0058CA  0100               	movlb	0	; () banked
 23273  0058CC  6FD2               	movwf	_MdmStatus& (0+255),b
 23274                           
 23275                           ; BSR set to: 0
 23276                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 23277  0058CE  0E02               	movlw	2
 23278  0058D0  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 23279                           
 23280                           ; BSR set to: 0
 23281                           ;mdm_gsm_gprs.c: 408: }
 23282                           
 23283                           ; BSR set to: 0
 23284                           ;mdm_gsm_gprs.c: 407: break;
 23285                           
 23286                           ;mdm_gsm_gprs.c: 406: default:
 23287                           
 23288                           ; BSR set to: 0
 23289                           ;mdm_gsm_gprs.c: 404: break;
 23290                           
 23291                           ;mdm_gsm_gprs.c: 403: case Stop:
 23292                           
 23293                           ;mdm_gsm_gprs.c: 401: break;
 23294  0058D2  0012               	return	
 23295  0058D4                     l1009:
 23296                           
 23297                           ; BSR set to: 0
 23298  0058D4  5029               	movf	TurnOnModem@TurnOnMdmState,w,c
 23299                           
 23300                           ; Switch size 1, requested type "space"
 23301                           ; Number of cases is 3, Range of values is 0 to 2
 23302                           ; switch strategies available:
 23303                           ; Name         Instructions Cycles
 23304                           ; simple_byte           10     6 (average)
 23305                           ;	Chosen strategy is simple_byte
 23306  0058D6  0A00               	xorlw	0	; case 0
 23307  0058D8  B4D8               	btfsc	status,2,c
 23308  0058DA  D7E3               	goto	l1010
 23309  0058DC  0A01               	xorlw	1	; case 1
 23310  0058DE  B4D8               	btfsc	status,2,c
 23311  0058E0  D7EC               	goto	l1013
 23312  0058E2  0A03               	xorlw	3	; case 2
 23313  0058E4  0012               	return	
 23314  0058E6                     __end_of_TurnOnModem:
 23315                           	opt stack 0
 23316                           tosu	equ	0xFFF
 23317                           tosh	equ	0xFFE
 23318                           tosl	equ	0xFFD
 23319                           pclath	equ	0xFFA
 23320                           tblptru	equ	0xFF8
 23321                           tblptrh	equ	0xFF7
 23322                           tblptrl	equ	0xFF6
 23323                           tablat	equ	0xFF5
 23324                           prodh	equ	0xFF4
 23325                           prodl	equ	0xFF3
 23326                           intcon	equ	0xFF2
 23327                           intcon2	equ	0xFF1
 23328                           intcon3	equ	0xFF0
 23329                           indf0	equ	0xFEF
 23330                           postinc0	equ	0xFEE
 23331                           plusw0	equ	0xFEB
 23332                           fsr0h	equ	0xFEA
 23333                           fsr0l	equ	0xFE9
 23334                           wreg	equ	0xFE8
 23335                           indf1	equ	0xFE7
 23336                           postinc1	equ	0xFE6
 23337                           postdec1	equ	0xFE5
 23338                           fsr1h	equ	0xFE2
 23339                           fsr1l	equ	0xFE1
 23340                           indf2	equ	0xFDF
 23341                           postinc2	equ	0xFDE
 23342                           postdec2	equ	0xFDD
 23343                           plusw2	equ	0xFDB
 23344                           fsr2h	equ	0xFDA
 23345                           fsr2l	equ	0xFD9
 23346                           status	equ	0xFD8
 23347                           
 23348 ;; *************** function _SendSmsSm *****************
 23349 ;; Defined at:
 23350 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23351 ;; Parameters:    Size  Location     Type
 23352 ;;		None
 23353 ;; Auto vars:     Size  Location     Type
 23354 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 23355 ;; Return value:  Size  Location     Type
 23356 ;;                  1    wreg      void 
 23357 ;; Registers used:
 23358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23359 ;; Tracked objects:
 23360 ;;		On entry : 0/0
 23361 ;;		On exit  : 0/0
 23362 ;;		Unchanged: 0/0
 23363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23365 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23366 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23367 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23368 ;;Total ram usage:       52 bytes
 23369 ;; Hardware stack levels used:    1
 23370 ;; Hardware stack levels required when called:   14
 23371 ;; This function calls:
 23372 ;;		_OsTmr_GetTimerStatus
 23373 ;;		_OsTmr_StartTimer
 23374 ;;		_ReceiveEvt
 23375 ;;		_StringCopy
 23376 ;;		_Uart_WriteStringLen
 23377 ;; This function is called by:
 23378 ;;		_Mdm_MainTask
 23379 ;; This function uses a non-reentrant model
 23380 ;;
 23381                           
 23382                           	psect	text110
 23383  0019F2                     __ptext110:
 23384                           	opt stack 0
 23385  0019F2                     _SendSmsSm:
 23386                           	opt stack 13
 23387                           
 23388                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 23389                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 23390                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 23391                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 23392                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 23393                           
 23394                           ;incstack = 0
 23395  0019F2  0E03               	movlw	3
 23396  0019F4  0100               	movlb	0	; () banked
 23397  0019F6  19D2               	xorwf	_MdmStatus& (0+255),w,b
 23398  0019F8  A4D8               	btfss	status,2,c
 23399  0019FA  0012               	return	
 23400  0019FC  D0C1               	goto	l1091
 23401  0019FE                     
 23402                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 23403                           
 23404                           ; BSR set to: 0
 23405  0019FE  0EE1               	movlw	low _SendSmsEvent
 23406  001A00  0100               	movlb	0	; () banked
 23407  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23408  001A04  0E00               	movlw	high _SendSmsEvent
 23409  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23410  001A08  EC49  F02F         	call	_ReceiveEvt	;wreg free
 23411  001A0C  0900               	iorlw	0
 23412  001A0E  B4D8               	btfsc	status,2,c
 23413  001A10  0012               	return	
 23414                           
 23415                           ;mdm_gsm_gprs.c: 671: {
 23416                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 23417  001A12  0E01               	movlw	1
 23418  001A14  0101               	movlb	1	; () banked
 23419  001A16  6FF2               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23420                           
 23421                           ; BSR set to: 1
 23422                           ;mdm_gsm_gprs.c: 674: }
 23423                           ;mdm_gsm_gprs.c: 675: break;
 23424  001A18  0012               	return	
 23425  001A1A                     
 23426                           ; BSR set to: 1
 23427                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 23428                           
 23429                           ; BSR set to: 1
 23430  001A1A  0ECD               	movlw	low STR_5
 23431  001A1C  0100               	movlb	0	; () banked
 23432  001A1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23433  001A20  0EFF               	movlw	high STR_5
 23434  001A22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23435  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 23436  001A26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23437  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 23438  001A2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23439  001A2C  0E00               	movlw	0
 23440  001A2E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 23441  001A30  0E09               	movlw	9
 23442  001A32  6F81               	movwf	StringCopy@Len& (0+255),b
 23443  001A34  EC91  F028         	call	_StringCopy	;wreg free
 23444                           
 23445                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 23446  001A38  0E95               	movlw	low _PhoneNumber
 23447  001A3A  0100               	movlb	0	; () banked
 23448  001A3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23449  001A3E  0E04               	movlw	high _PhoneNumber
 23450  001A40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23451  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 23452  001A44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23453  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 23454  001A48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23455  001A4A  C0D3  F081         	movff	_PhoneNumbLen,StringCopy@Len
 23456  001A4E  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 23457  001A50  EC91  F028         	call	_StringCopy	;wreg free
 23458                           
 23459                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 23460  001A54  0100               	movlb	0	; () banked
 23461  001A56  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 23462  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 23463  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 23464  001A5C  0E09               	movlw	9
 23465  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 23466  001A60  0E00               	movlw	0
 23467  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 23468  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 23469  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 23470  001A68  6ED9               	movwf	fsr2l,c
 23471  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 23472  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 23473  001A6E  6EDA               	movwf	fsr2h,c
 23474  001A70  0E22               	movlw	34
 23475  001A72  6EDF               	movwf	indf2,c
 23476                           
 23477                           ; BSR set to: 0
 23478                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 23479  001A74  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 23480  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 23481  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 23482  001A7A  0E0A               	movlw	10
 23483  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 23484  001A7E  0E00               	movlw	0
 23485  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 23486  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 23487  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 23488  001A86  6ED9               	movwf	fsr2l,c
 23489  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 23490  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 23491  001A8C  6EDA               	movwf	fsr2h,c
 23492  001A8E  0E0D               	movlw	13
 23493  001A90  6EDF               	movwf	indf2,c
 23494                           
 23495                           ; BSR set to: 0
 23496                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 23497  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 23498  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 23499  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 23500  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 23501  001A9A  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 23502  001A9C  0F0B               	addlw	11
 23503  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 23504  001AA0  0E01               	movlw	1
 23505  001AA2  EC5E  F02D         	call	_Uart_WriteStringLen
 23506                           
 23507                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 23508  001AA6  0EE6               	movlw	low SendSmsSm@SwTimer
 23509  001AA8  0100               	movlb	0	; () banked
 23510  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 23511  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 23512  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 23513  001AB0  0EC4               	movlw	196
 23514  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 23515  001AB4  0E09               	movlw	9
 23516  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 23517  001AB8  0E00               	movlw	0
 23518  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 23519  001ABC  0E00               	movlw	0
 23520  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 23521  001AC0  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 23522                           
 23523                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 23524  001AC4  0E05               	movlw	5
 23525  001AC6  0101               	movlb	1	; () banked
 23526  001AC8  6FF2               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23527                           
 23528                           ; BSR set to: 1
 23529                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 23530  001ACA  0E02               	movlw	2
 23531  001ACC  6FF1               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 23532                           
 23533                           ;mdm_gsm_gprs.c: 691: break;
 23534  001ACE  0012               	return	
 23535  001AD0                     
 23536                           ; BSR set to: 1
 23537                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 23538                           
 23539                           ; BSR set to: 1
 23540  001AD0  0E0A               	movlw	10
 23541  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 23542                           
 23543                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 23544  001AD4  0E0D               	movlw	13
 23545  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 23546                           
 23547                           ; BSR set to: 1
 23548                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 23549  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 23550  001ADA  0100               	movlb	0	; () banked
 23551  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 23552  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 23553  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 23554  001AE2  0E02               	movlw	2
 23555  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 23556  001AE6  0E01               	movlw	1
 23557  001AE8  EC5E  F02D         	call	_Uart_WriteStringLen
 23558                           
 23559                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 23560  001AEC  0E03               	movlw	3
 23561  001AEE  0101               	movlb	1	; () banked
 23562  001AF0  6FF2               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23563                           
 23564                           ;mdm_gsm_gprs.c: 701: break;
 23565  001AF2  0012               	return	
 23566  001AF4                     
 23567                           ; BSR set to: 1
 23568                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 23569                           
 23570                           ; BSR set to: 1
 23571  001AF4  0E3C               	movlw	low _NewStringReceived
 23572  001AF6  0100               	movlb	0	; () banked
 23573  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23574  001AFA  0E00               	movlw	high _NewStringReceived
 23575  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23576  001AFE  EC49  F02F         	call	_ReceiveEvt	;wreg free
 23577  001B02  0900               	iorlw	0
 23578  001B04  B4D8               	btfsc	status,2,c
 23579  001B06  0012               	return	
 23580                           
 23581                           ;mdm_gsm_gprs.c: 706: {
 23582                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 23583  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 23584  001B0C  0A3E               	xorlw	62
 23585  001B0E  A4D8               	btfss	status,2,c
 23586  001B10  0012               	return	
 23587                           
 23588                           ;mdm_gsm_gprs.c: 709: {
 23589                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 23590  001B12  0E04               	movlw	4
 23591  001B14  0101               	movlb	1	; () banked
 23592  001B16  6FF2               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23593                           
 23594                           ; BSR set to: 1
 23595                           ;mdm_gsm_gprs.c: 712: }
 23596                           ;mdm_gsm_gprs.c: 713: }
 23597                           ;mdm_gsm_gprs.c: 714: break;
 23598                           
 23599                           ; BSR set to: 1
 23600  001B18  0012               	return	
 23601  001B1A                     
 23602                           ; BSR set to: 1
 23603                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 23604                           
 23605                           ; BSR set to: 1
 23606  001B1A  0E72               	movlw	low _MessageText
 23607  001B1C  0100               	movlb	0	; () banked
 23608  001B1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23609  001B20  0E05               	movlw	high _MessageText
 23610  001B22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23611  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 23612  001B26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23613  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 23614  001B2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23615  001B2C  C0D4  F081         	movff	_SmsLen,StringCopy@Len
 23616  001B30  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 23617  001B32  EC91  F028         	call	_StringCopy	;wreg free
 23618                           
 23619                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 23620  001B36  0100               	movlb	0	; () banked
 23621  001B38  51D4               	movf	_SmsLen& (0+255),w,b
 23622  001B3A  0D01               	mullw	1
 23623  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 23624  001B3E  24F3               	addwf	prodl,w,c
 23625  001B40  6ED9               	movwf	fsr2l,c
 23626  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 23627  001B44  20F4               	addwfc	prodh,w,c
 23628  001B46  6EDA               	movwf	fsr2h,c
 23629  001B48  0E1A               	movlw	26
 23630  001B4A  6EDF               	movwf	indf2,c
 23631                           
 23632                           ; BSR set to: 0
 23633                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 23634  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 23635  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 23636  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 23637  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 23638  001B54  29D4               	incf	_SmsLen& (0+255),w,b
 23639  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 23640  001B58  0E01               	movlw	1
 23641  001B5A  EC5E  F02D         	call	_Uart_WriteStringLen
 23642                           
 23643                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 23644  001B5E  0E00               	movlw	0
 23645  001B60  0101               	movlb	1	; () banked
 23646  001B62  6FF2               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23647                           
 23648                           ;mdm_gsm_gprs.c: 725: break;
 23649  001B64  0012               	return	
 23650  001B66                     
 23651                           ; BSR set to: 1
 23652                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 23653                           
 23654                           ; BSR set to: 1
 23655  001B66  0EE6               	movlw	low SendSmsSm@SwTimer
 23656  001B68  0100               	movlb	0	; () banked
 23657  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 23658  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 23659  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 23660  001B70  EC78  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 23661  001B74  06E8               	decf	wreg,f,c
 23662  001B76  A4D8               	btfss	status,2,c
 23663  001B78  0012               	return	
 23664                           
 23665                           ;mdm_gsm_gprs.c: 730: {
 23666                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 23667  001B7A  C1F1  F1F2         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 23668                           
 23669                           ;mdm_gsm_gprs.c: 738: }
 23670                           
 23671                           ;mdm_gsm_gprs.c: 737: break;
 23672                           
 23673                           ;mdm_gsm_gprs.c: 736: default:
 23674                           
 23675                           ;mdm_gsm_gprs.c: 733: }
 23676                           ;mdm_gsm_gprs.c: 734: break;
 23677  001B7E  0012               	return	
 23678  001B80                     l1091:
 23679  001B80  0101               	movlb	1	; () banked
 23680  001B82  51F2               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 23681                           
 23682                           ; Switch size 1, requested type "space"
 23683                           ; Number of cases is 6, Range of values is 0 to 5
 23684                           ; switch strategies available:
 23685                           ; Name         Instructions Cycles
 23686                           ; simple_byte           19    10 (average)
 23687                           ;	Chosen strategy is simple_byte
 23688  001B84  0A00               	xorlw	0	; case 0
 23689  001B86  B4D8               	btfsc	status,2,c
 23690  001B88  D73A               	goto	l1092
 23691  001B8A  0A01               	xorlw	1	; case 1
 23692  001B8C  B4D8               	btfsc	status,2,c
 23693  001B8E  D745               	goto	l1095
 23694  001B90  0A03               	xorlw	3	; case 2
 23695  001B92  B4D8               	btfsc	status,2,c
 23696  001B94  D79D               	goto	l1096
 23697  001B96  0A01               	xorlw	1	; case 3
 23698  001B98  B4D8               	btfsc	status,2,c
 23699  001B9A  D7AC               	goto	l1097
 23700  001B9C  0A07               	xorlw	7	; case 4
 23701  001B9E  B4D8               	btfsc	status,2,c
 23702  001BA0  D7BC               	goto	l1100
 23703  001BA2  0A01               	xorlw	1	; case 5
 23704  001BA4  A4D8               	btfss	status,2,c
 23705                           
 23706                           ; BSR set to: 1
 23707  001BA6  0012               	return	
 23708  001BA8  D7DE               	goto	l1101
 23709  001BAA                     __end_of_SendSmsSm:
 23710                           	opt stack 0
 23711                           tosu	equ	0xFFF
 23712                           tosh	equ	0xFFE
 23713                           tosl	equ	0xFFD
 23714                           pclath	equ	0xFFA
 23715                           tblptru	equ	0xFF8
 23716                           tblptrh	equ	0xFF7
 23717                           tblptrl	equ	0xFF6
 23718                           tablat	equ	0xFF5
 23719                           prodh	equ	0xFF4
 23720                           prodl	equ	0xFF3
 23721                           intcon	equ	0xFF2
 23722                           intcon2	equ	0xFF1
 23723                           intcon3	equ	0xFF0
 23724                           indf0	equ	0xFEF
 23725                           postinc0	equ	0xFEE
 23726                           plusw0	equ	0xFEB
 23727                           fsr0h	equ	0xFEA
 23728                           fsr0l	equ	0xFE9
 23729                           wreg	equ	0xFE8
 23730                           indf1	equ	0xFE7
 23731                           postinc1	equ	0xFE6
 23732                           postdec1	equ	0xFE5
 23733                           fsr1h	equ	0xFE2
 23734                           fsr1l	equ	0xFE1
 23735                           indf2	equ	0xFDF
 23736                           postinc2	equ	0xFDE
 23737                           postdec2	equ	0xFDD
 23738                           plusw2	equ	0xFDB
 23739                           fsr2h	equ	0xFDA
 23740                           fsr2l	equ	0xFD9
 23741                           status	equ	0xFD8
 23742                           
 23743 ;; *************** function _Uart_WriteStringLen *****************
 23744 ;; Defined at:
 23745 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23746 ;; Parameters:    Size  Location     Type
 23747 ;;  Module          1    wreg     unsigned char 
 23748 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 23749 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 23750 ;;  Len             1   34[BANK0 ] unsigned char 
 23751 ;; Auto vars:     Size  Location     Type
 23752 ;;  Module          1   36[BANK0 ] unsigned char 
 23753 ;;  Index           1   35[BANK0 ] unsigned char 
 23754 ;; Return value:  Size  Location     Type
 23755 ;;                  1    wreg      void 
 23756 ;; Registers used:
 23757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23758 ;; Tracked objects:
 23759 ;;		On entry : 0/0
 23760 ;;		On exit  : 0/0
 23761 ;;		Unchanged: 0/0
 23762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23763 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23764 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23766 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23767 ;;Total ram usage:        5 bytes
 23768 ;; Hardware stack levels used:    1
 23769 ;; Hardware stack levels required when called:   12
 23770 ;; This function calls:
 23771 ;;		_UartTxBufferStatus
 23772 ;;		_UartWriteByte
 23773 ;; This function is called by:
 23774 ;;		_SendSmsSm
 23775 ;;		_GsmGprsTerminal
 23776 ;; This function uses a non-reentrant model
 23777 ;;
 23778                           
 23779                           	psect	text111
 23780  005ABC                     __ptext111:
 23781                           	opt stack 0
 23782  005ABC                     _Uart_WriteStringLen:
 23783                           	opt stack 14
 23784                           
 23785                           ;incstack = 0
 23786                           ;Uart_WriteStringLen@Module stored from wreg
 23787  005ABC  0100               	movlb	0	; () banked
 23788  005ABE  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 23789                           
 23790                           ;uart_drv.c: 544: UINT8 Index;
 23791                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 23792  005AC0  0E00               	movlw	0
 23793  005AC2  0100               	movlb	0	; () banked
 23794  005AC4  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 23795  005AC6  D015               	goto	l715
 23796  005AC8                     
 23797                           ; BSR set to: 0
 23798                           ;uart_drv.c: 547: {
 23799                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 23800                           
 23801                           ; BSR set to: 0
 23802  005AC8  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 23803  005ACC  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 23804  005AD0  50DF               	movf	indf2,w,c
 23805  005AD2  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 23806  005AD4  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 23807  005AD6  EC85  F030         	call	_UartWriteByte
 23808                           
 23809                           ;uart_drv.c: 551: StringToWrite++;
 23810  005ADA  0100               	movlb	0	; () banked
 23811  005ADC  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 23812  005ADE  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 23813  005AE0                     
 23814                           ; BSR set to: 0
 23815                           
 23816                           ; BSR set to: 0
 23817  005AE0  0100               	movlb	0	; () banked
 23818  005AE2  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 23819  005AE4  EC71  F02B         	call	_UartTxBufferStatus
 23820  005AE8  06E8               	decf	wreg,f,c
 23821  005AEA  B4D8               	btfsc	status,2,c
 23822  005AEC  D7F9               	goto	l718
 23823  005AEE  0100               	movlb	0	; () banked
 23824  005AF0  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 23825  005AF2                     l715:
 23826                           
 23827                           ; BSR set to: 0
 23828                           
 23829                           ; BSR set to: 0
 23830  005AF2  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 23831  005AF4  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 23832  005AF6  B0D8               	btfsc	status,0,c
 23833  005AF8  0012               	return	
 23834  005AFA  D7E6               	goto	l716
 23835  005AFC                     __end_of_Uart_WriteStringLen:
 23836                           	opt stack 0
 23837                           tosu	equ	0xFFF
 23838                           tosh	equ	0xFFE
 23839                           tosl	equ	0xFFD
 23840                           pclath	equ	0xFFA
 23841                           tblptru	equ	0xFF8
 23842                           tblptrh	equ	0xFF7
 23843                           tblptrl	equ	0xFF6
 23844                           tablat	equ	0xFF5
 23845                           prodh	equ	0xFF4
 23846                           prodl	equ	0xFF3
 23847                           intcon	equ	0xFF2
 23848                           intcon2	equ	0xFF1
 23849                           intcon3	equ	0xFF0
 23850                           indf0	equ	0xFEF
 23851                           postinc0	equ	0xFEE
 23852                           plusw0	equ	0xFEB
 23853                           fsr0h	equ	0xFEA
 23854                           fsr0l	equ	0xFE9
 23855                           wreg	equ	0xFE8
 23856                           indf1	equ	0xFE7
 23857                           postinc1	equ	0xFE6
 23858                           postdec1	equ	0xFE5
 23859                           fsr1h	equ	0xFE2
 23860                           fsr1l	equ	0xFE1
 23861                           indf2	equ	0xFDF
 23862                           postinc2	equ	0xFDE
 23863                           postdec2	equ	0xFDD
 23864                           plusw2	equ	0xFDB
 23865                           fsr2h	equ	0xFDA
 23866                           fsr2l	equ	0xFD9
 23867                           status	equ	0xFD8
 23868                           
 23869 ;; *************** function _ModemEvtParser *****************
 23870 ;; Defined at:
 23871 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23872 ;; Parameters:    Size  Location     Type
 23873 ;;		None
 23874 ;; Auto vars:     Size  Location     Type
 23875 ;;  CallReadyStr   10   48[BANK0 ] unsigned char [10]
 23876 ;;  SmsString       5   63[BANK0 ] unsigned char [5]
 23877 ;;  ClipString      5   58[BANK0 ] unsigned char [5]
 23878 ;;  RingString      4   68[BANK0 ] unsigned char [4]
 23879 ;;  CompareIdx      1   73[BANK0 ] unsigned char 
 23880 ;;  Match           1   72[BANK0 ] unsigned char 
 23881 ;; Return value:  Size  Location     Type
 23882 ;;                  1    wreg      void 
 23883 ;; Registers used:
 23884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23885 ;; Tracked objects:
 23886 ;;		On entry : 0/0
 23887 ;;		On exit  : 0/0
 23888 ;;		Unchanged: 0/0
 23889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23891 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23893 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23894 ;;Total ram usage:       26 bytes
 23895 ;; Hardware stack levels used:    1
 23896 ;; Hardware stack levels required when called:   12
 23897 ;; This function calls:
 23898 ;;		_GenerateEvt
 23899 ;;		_ReceiveEvt
 23900 ;;		_StringCompare
 23901 ;;		_StringCopy
 23902 ;;		_Uart_ClearRxBuffer
 23903 ;; This function is called by:
 23904 ;;		_Mdm_MainTask
 23905 ;; This function uses a non-reentrant model
 23906 ;;
 23907                           
 23908                           	psect	text112
 23909  001D32                     __ptext112:
 23910                           	opt stack 0
 23911  001D32                     _ModemEvtParser:
 23912                           	opt stack 15
 23913                           
 23914                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 23915                           
 23916                           ; BSR set to: 0
 23917                           ;incstack = 0
 23918  001D32  C3C7  F0A4         	movff	ModemEvtParser@F9107,ModemEvtParser@RingString
 23919  001D36  C3C8  F0A5         	movff	ModemEvtParser@F9107+1,ModemEvtParser@RingString+1
 23920  001D3A  C3C9  F0A6         	movff	ModemEvtParser@F9107+2,ModemEvtParser@RingString+2
 23921  001D3E  C3CA  F0A7         	movff	ModemEvtParser@F9107+3,ModemEvtParser@RingString+3
 23922                           
 23923                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 23924  001D42  EE23  F0C2         	lfsr	2,ModemEvtParser@F9109
 23925  001D46  EE10  F09A         	lfsr	1,ModemEvtParser@ClipString
 23926  001D4A  0E04               	movlw	4
 23927  001D4C                     u13651:
 23928  001D4C  CFDB FFE3          	movff	plusw2,plusw1
 23929  001D50  06E8               	decf	wreg,f,c
 23930  001D52  E2FC               	bc	u13651
 23931                           
 23932                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 23933  001D54  EE23  F0BD         	lfsr	2,ModemEvtParser@F9111
 23934  001D58  EE10  F09F         	lfsr	1,ModemEvtParser@SmsString
 23935  001D5C  0E04               	movlw	4
 23936  001D5E                     u13661:
 23937  001D5E  CFDB FFE3          	movff	plusw2,plusw1
 23938  001D62  06E8               	decf	wreg,f,c
 23939  001D64  E2FC               	bc	u13661
 23940                           
 23941                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 23942  001D66  EE24  F0D0         	lfsr	2,ModemEvtParser@F9113
 23943  001D6A  EE10  F090         	lfsr	1,ModemEvtParser@CallReadyString
 23944  001D6E  0E09               	movlw	9
 23945  001D70                     u13671:
 23946  001D70  CFDB FFE3          	movff	plusw2,plusw1
 23947  001D74  06E8               	decf	wreg,f,c
 23948  001D76  E2FC               	bc	u13671
 23949                           
 23950                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 23951  001D78  0E00               	movlw	0
 23952  001D7A  0100               	movlb	0	; () banked
 23953  001D7C  6FA9               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23954                           
 23955                           ; BSR set to: 0
 23956                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 23957  001D7E  0E00               	movlw	0
 23958  001D80  6FA8               	movwf	ModemEvtParser@Match& (0+255),b
 23959                           
 23960                           ; BSR set to: 0
 23961                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 23962  001D82  0E3B               	movlw	low _NewMdmEvtParserRequest
 23963  001D84  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23964  001D86  0E00               	movlw	high _NewMdmEvtParserRequest
 23965  001D88  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23966  001D8A  EC49  F02F         	call	_ReceiveEvt	;wreg free
 23967  001D8E  0900               	iorlw	0
 23968  001D90  B4D8               	btfsc	status,2,c
 23969  001D92  0012               	return	
 23970                           
 23971                           ;mdm_gsm_gprs.c: 510: {
 23972                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 23973  001D94  0E00               	movlw	0
 23974  001D96  0100               	movlb	0	; () banked
 23975  001D98  6FA9               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23976  001D9A                     l14302:
 23977                           
 23978                           ; BSR set to: 0
 23979  001D9A  0E03               	movlw	3
 23980  001D9C  65A9               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 23981  001D9E  D074               	goto	l1052
 23982  001DA0  D083               	goto	u13740
 23983  001DA2                     
 23984                           ; BSR set to: 0
 23985                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 23986                           
 23987                           ; BSR set to: 0
 23988  001DA2  0EA4               	movlw	low ModemEvtParser@RingString
 23989  001DA4  6F85               	movwf	StringCompare@String1& (0+255),b
 23990  001DA6  0E00               	movlw	high ModemEvtParser@RingString
 23991  001DA8  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23992  001DAA  0E58               	movlw	low _RxBuffer
 23993  001DAC  6F87               	movwf	StringCompare@String2& (0+255),b
 23994  001DAE  0E0C               	movlw	high _RxBuffer
 23995  001DB0  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23996  001DB2  0E00               	movlw	0
 23997  001DB4  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23998  001DB6  0E04               	movlw	4
 23999  001DB8  6F89               	movwf	StringCompare@Len& (0+255),b
 24000  001DBA  ECD0  F02A         	call	_StringCompare	;wreg free
 24001  001DBE  0900               	iorlw	0
 24002  001DC0  B4D8               	btfsc	status,2,c
 24003  001DC2  D06F               	goto	l1055
 24004                           
 24005                           ;mdm_gsm_gprs.c: 518: {
 24006                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 24007  001DC4  0EE0               	movlw	low _RingEvent
 24008  001DC6  0100               	movlb	0	; () banked
 24009  001DC8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24010  001DCA  0E00               	movlw	high _RingEvent
 24011  001DCC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24012  001DCE  EC0D  F031         	call	_GenerateEvt	;wreg free
 24013  001DD2  D040               	goto	l14324
 24014  001DD4                     
 24015                           ; BSR set to: 0
 24016                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 24017                           
 24018                           ; BSR set to: 0
 24019  001DD4  0E9A               	movlw	low ModemEvtParser@ClipString
 24020  001DD6  6F85               	movwf	StringCompare@String1& (0+255),b
 24021  001DD8  0E00               	movlw	high ModemEvtParser@ClipString
 24022  001DDA  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 24023  001DDC  0E58               	movlw	low _RxBuffer
 24024  001DDE  6F87               	movwf	StringCompare@String2& (0+255),b
 24025  001DE0  0E0C               	movlw	high _RxBuffer
 24026  001DE2  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 24027  001DE4  0E00               	movlw	0
 24028  001DE6  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 24029  001DE8  0E05               	movlw	5
 24030  001DEA  6F89               	movwf	StringCompare@Len& (0+255),b
 24031  001DEC  ECD0  F02A         	call	_StringCompare	;wreg free
 24032  001DF0  0900               	iorlw	0
 24033  001DF2  B4D8               	btfsc	status,2,c
 24034  001DF4  D056               	goto	l1055
 24035                           
 24036                           ;mdm_gsm_gprs.c: 529: {
 24037                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 24038  001DF6  0E60               	movlw	low (_RxBuffer+8)
 24039  001DF8  0100               	movlb	0	; () banked
 24040  001DFA  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24041  001DFC  0E0C               	movlw	high (_RxBuffer+8)
 24042  001DFE  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24043  001E00  0EB8               	movlw	low _callerNumber
 24044  001E02  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24045  001E04  0E04               	movlw	high _callerNumber
 24046  001E06  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24047  001E08  0E00               	movlw	0
 24048  001E0A  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 24049  001E0C  0E0D               	movlw	13
 24050  001E0E  6F81               	movwf	StringCopy@Len& (0+255),b
 24051  001E10  EC91  F028         	call	_StringCopy	;wreg free
 24052                           
 24053                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 24054  001E14  0EDF               	movlw	low _ClipEvent
 24055  001E16  0100               	movlb	0	; () banked
 24056  001E18  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24057  001E1A  0E00               	movlw	high _ClipEvent
 24058  001E1C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24059  001E1E  EC0D  F031         	call	_GenerateEvt	;wreg free
 24060  001E22  D018               	goto	l14324
 24061  001E24                     
 24062                           ; BSR set to: 0
 24063                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 24064                           
 24065                           ; BSR set to: 0
 24066  001E24  0E9F               	movlw	low ModemEvtParser@SmsString
 24067  001E26  6F85               	movwf	StringCompare@String1& (0+255),b
 24068  001E28  0E00               	movlw	high ModemEvtParser@SmsString
 24069  001E2A  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 24070  001E2C  0E58               	movlw	low _RxBuffer
 24071  001E2E  6F87               	movwf	StringCompare@String2& (0+255),b
 24072  001E30  0E0C               	movlw	high _RxBuffer
 24073  001E32  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 24074  001E34  0E00               	movlw	0
 24075  001E36  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 24076  001E38  0E05               	movlw	5
 24077  001E3A  6F89               	movwf	StringCompare@Len& (0+255),b
 24078  001E3C  ECD0  F02A         	call	_StringCompare	;wreg free
 24079  001E40  0900               	iorlw	0
 24080  001E42  B4D8               	btfsc	status,2,c
 24081  001E44  D02E               	goto	l1055
 24082                           
 24083                           ;mdm_gsm_gprs.c: 541: {
 24084                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 24085  001E46  0EDE               	movlw	low _SmsEvent
 24086  001E48  0100               	movlb	0	; () banked
 24087  001E4A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24088  001E4C  0E00               	movlw	high _SmsEvent
 24089  001E4E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24090  001E50  EC0D  F031         	call	_GenerateEvt	;wreg free
 24091  001E54                     l14324:
 24092                           
 24093                           ;mdm_gsm_gprs.c: 545: Match = 1;
 24094  001E54  0E01               	movlw	1
 24095  001E56  0100               	movlb	0	; () banked
 24096  001E58  D015               	goto	L36
 24097  001E5A                     
 24098                           ; BSR set to: 0
 24099                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 24100                           
 24101                           ; BSR set to: 0
 24102  001E5A  0E90               	movlw	low ModemEvtParser@CallReadyString
 24103  001E5C  6F85               	movwf	StringCompare@String1& (0+255),b
 24104  001E5E  0E00               	movlw	high ModemEvtParser@CallReadyString
 24105  001E60  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 24106  001E62  0E58               	movlw	low _RxBuffer
 24107  001E64  6F87               	movwf	StringCompare@String2& (0+255),b
 24108  001E66  0E0C               	movlw	high _RxBuffer
 24109  001E68  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 24110  001E6A  0E00               	movlw	0
 24111  001E6C  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 24112  001E6E  0E0A               	movlw	10
 24113  001E70  6F89               	movwf	StringCompare@Len& (0+255),b
 24114  001E72  ECD0  F02A         	call	_StringCompare	;wreg free
 24115  001E76  0900               	iorlw	0
 24116  001E78  B4D8               	btfsc	status,2,c
 24117  001E7A  D013               	goto	l1055
 24118                           
 24119                           ;mdm_gsm_gprs.c: 552: {
 24120                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 24121  001E7C  0E02               	movlw	2
 24122  001E7E  0100               	movlb	0	; () banked
 24123  001E80  6FD2               	movwf	_MdmStatus& (0+255),b
 24124                           
 24125                           ;mdm_gsm_gprs.c: 556: Match = 1;
 24126  001E82  0E01               	movlw	1
 24127  001E84                     L36:
 24128  001E84  6FA8               	movwf	ModemEvtParser@Match& (0+255),b
 24129                           
 24130                           ; BSR set to: 0
 24131                           ;mdm_gsm_gprs.c: 562: }
 24132                           
 24133                           ; BSR set to: 0
 24134                           ;mdm_gsm_gprs.c: 561: break;
 24135                           
 24136                           ;mdm_gsm_gprs.c: 560: default:
 24137                           
 24138                           ; BSR set to: 0
 24139                           ;mdm_gsm_gprs.c: 557: }
 24140                           ;mdm_gsm_gprs.c: 558: break;
 24141  001E86  D00D               	goto	l1055
 24142  001E88                     l1052:
 24143                           
 24144                           ; BSR set to: 0
 24145                           
 24146                           ; BSR set to: 0
 24147  001E88  51A9               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 24148                           
 24149                           ; Switch size 1, requested type "space"
 24150                           ; Number of cases is 4, Range of values is 0 to 3
 24151                           ; switch strategies available:
 24152                           ; Name         Instructions Cycles
 24153                           ; simple_byte           13     7 (average)
 24154                           ;	Chosen strategy is simple_byte
 24155  001E8A  0A00               	xorlw	0	; case 0
 24156  001E8C  B4D8               	btfsc	status,2,c
 24157  001E8E  D789               	goto	l1053
 24158  001E90  0A01               	xorlw	1	; case 1
 24159  001E92  B4D8               	btfsc	status,2,c
 24160  001E94  D7C7               	goto	l1058
 24161  001E96  0A03               	xorlw	3	; case 2
 24162  001E98  B4D8               	btfsc	status,2,c
 24163  001E9A  D7DF               	goto	l1060
 24164  001E9C  0A01               	xorlw	1	; case 3
 24165  001E9E  B4D8               	btfsc	status,2,c
 24166  001EA0  D799               	goto	l1056
 24167  001EA2                     l1055:
 24168                           
 24169                           ; BSR set to: 0
 24170  001EA2  0100               	movlb	0	; () banked
 24171  001EA4  2BA9               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 24172  001EA6  D779               	goto	l14302
 24173  001EA8                     u13740:
 24174                           
 24175                           ; BSR set to: 0
 24176                           ;mdm_gsm_gprs.c: 563: }
 24177                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 24178                           
 24179                           ; BSR set to: 0
 24180  001EA8  05A8               	decf	ModemEvtParser@Match& (0+255),w,b
 24181  001EAA  A4D8               	btfss	status,2,c
 24182  001EAC  0012               	return	
 24183                           
 24184                           ; BSR set to: 0
 24185                           ;mdm_gsm_gprs.c: 567: {
 24186                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 24187  001EAE  EC86  F02E         	call	_Uart_ClearRxBuffer	;wreg free
 24188  001EB2  0012               	return	
 24189  001EB4                     __end_of_ModemEvtParser:
 24190                           	opt stack 0
 24191                           tosu	equ	0xFFF
 24192                           tosh	equ	0xFFE
 24193                           tosl	equ	0xFFD
 24194                           pclath	equ	0xFFA
 24195                           tblptru	equ	0xFF8
 24196                           tblptrh	equ	0xFF7
 24197                           tblptrl	equ	0xFF6
 24198                           tablat	equ	0xFF5
 24199                           prodh	equ	0xFF4
 24200                           prodl	equ	0xFF3
 24201                           intcon	equ	0xFF2
 24202                           intcon2	equ	0xFF1
 24203                           intcon3	equ	0xFF0
 24204                           indf0	equ	0xFEF
 24205                           postinc0	equ	0xFEE
 24206                           plusw0	equ	0xFEB
 24207                           fsr0h	equ	0xFEA
 24208                           fsr0l	equ	0xFE9
 24209                           wreg	equ	0xFE8
 24210                           indf1	equ	0xFE7
 24211                           postinc1	equ	0xFE6
 24212                           postdec1	equ	0xFE5
 24213                           plusw1	equ	0xFE3
 24214                           fsr1h	equ	0xFE2
 24215                           fsr1l	equ	0xFE1
 24216                           indf2	equ	0xFDF
 24217                           postinc2	equ	0xFDE
 24218                           postdec2	equ	0xFDD
 24219                           plusw2	equ	0xFDB
 24220                           fsr2h	equ	0xFDA
 24221                           fsr2l	equ	0xFD9
 24222                           status	equ	0xFD8
 24223                           
 24224 ;; *************** function _Uart_ClearRxBuffer *****************
 24225 ;; Defined at:
 24226 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24227 ;; Parameters:    Size  Location     Type
 24228 ;;		None
 24229 ;; Auto vars:     Size  Location     Type
 24230 ;;  Index           2   29[BANK0 ] unsigned short 
 24231 ;; Return value:  Size  Location     Type
 24232 ;;                  1    wreg      void 
 24233 ;; Registers used:
 24234 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24235 ;; Tracked objects:
 24236 ;;		On entry : 0/0
 24237 ;;		On exit  : 0/0
 24238 ;;		Unchanged: 0/0
 24239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24241 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24243 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24244 ;;Total ram usage:        2 bytes
 24245 ;; Hardware stack levels used:    1
 24246 ;; Hardware stack levels required when called:   11
 24247 ;; This function calls:
 24248 ;;		Nothing
 24249 ;; This function is called by:
 24250 ;;		_ModemEvtParser
 24251 ;; This function uses a non-reentrant model
 24252 ;;
 24253                           
 24254                           	psect	text113
 24255  005D0C                     __ptext113:
 24256                           	opt stack 0
 24257  005D0C                     _Uart_ClearRxBuffer:
 24258                           	opt stack 15
 24259                           
 24260                           ;uart_drv.c: 567: UINT16 Index = 0;
 24261                           
 24262                           ;incstack = 0
 24263  005D0C  0E00               	movlw	0
 24264  005D0E  0100               	movlb	0	; () banked
 24265  005D10  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 24266  005D12  0E00               	movlw	0
 24267  005D14  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 24268                           
 24269                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 24270  005D16  0E00               	movlw	0
 24271  005D18  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 24272  005D1A  0E00               	movlw	0
 24273  005D1C  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 24274  005D1E                     l13562:
 24275                           
 24276                           ; BSR set to: 0
 24277  005D1E  0E90               	movlw	144
 24278  005D20  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 24279  005D22  0E01               	movlw	1
 24280  005D24  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 24281  005D26  B0D8               	btfsc	status,0,c
 24282  005D28  0012               	return	
 24283                           
 24284                           ; BSR set to: 0
 24285                           ;uart_drv.c: 571: {
 24286                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 24287                           
 24288                           ; BSR set to: 0
 24289                           
 24290                           ; BSR set to: 0
 24291  005D2A  0E58               	movlw	low _RxBuffer
 24292  005D2C  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 24293  005D2E  6ED9               	movwf	fsr2l,c
 24294  005D30  0E0C               	movlw	high _RxBuffer
 24295  005D32  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 24296  005D34  6EDA               	movwf	fsr2h,c
 24297  005D36  0E00               	movlw	0
 24298  005D38  6EDF               	movwf	indf2,c
 24299                           
 24300                           ; BSR set to: 0
 24301  005D3A  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 24302  005D3C  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 24303  005D3E  D7EF               	goto	l13562
 24304  005D40                     __end_of_Uart_ClearRxBuffer:
 24305                           	opt stack 0
 24306                           tosu	equ	0xFFF
 24307                           tosh	equ	0xFFE
 24308                           tosl	equ	0xFFD
 24309                           pclath	equ	0xFFA
 24310                           tblptru	equ	0xFF8
 24311                           tblptrh	equ	0xFF7
 24312                           tblptrl	equ	0xFF6
 24313                           tablat	equ	0xFF5
 24314                           prodh	equ	0xFF4
 24315                           prodl	equ	0xFF3
 24316                           intcon	equ	0xFF2
 24317                           intcon2	equ	0xFF1
 24318                           intcon3	equ	0xFF0
 24319                           indf0	equ	0xFEF
 24320                           postinc0	equ	0xFEE
 24321                           plusw0	equ	0xFEB
 24322                           fsr0h	equ	0xFEA
 24323                           fsr0l	equ	0xFE9
 24324                           wreg	equ	0xFE8
 24325                           indf1	equ	0xFE7
 24326                           postinc1	equ	0xFE6
 24327                           postdec1	equ	0xFE5
 24328                           plusw1	equ	0xFE3
 24329                           fsr1h	equ	0xFE2
 24330                           fsr1l	equ	0xFE1
 24331                           indf2	equ	0xFDF
 24332                           postinc2	equ	0xFDE
 24333                           postdec2	equ	0xFDD
 24334                           plusw2	equ	0xFDB
 24335                           fsr2h	equ	0xFDA
 24336                           fsr2l	equ	0xFD9
 24337                           status	equ	0xFD8
 24338                           
 24339 ;; *************** function _StringCompare *****************
 24340 ;; Defined at:
 24341 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 24342 ;; Parameters:    Size  Location     Type
 24343 ;;  String1         2   37[BANK0 ] PTR unsigned char 
 24344 ;;		 -> MyApp_Task@phone(14), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), ModemEvtParser@ClipString
      +(5), 
 24345 ;;		 -> ModemEvtParser@RingString(4), 
 24346 ;;  String2         2   39[BANK0 ] PTR unsigned char 
 24347 ;;		 -> callerNumber(13), RxBuffer(400), 
 24348 ;;  Len             2   41[BANK0 ] unsigned short 
 24349 ;; Auto vars:     Size  Location     Type
 24350 ;;  Index           2   46[BANK0 ] unsigned short 
 24351 ;;  Result          1   45[BANK0 ] unsigned char 
 24352 ;; Return value:  Size  Location     Type
 24353 ;;                  1    wreg      unsigned char 
 24354 ;; Registers used:
 24355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 24356 ;; Tracked objects:
 24357 ;;		On entry : 0/0
 24358 ;;		On exit  : 0/0
 24359 ;;		Unchanged: 0/0
 24360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24361 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24362 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24363 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24364 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24365 ;;Total ram usage:       11 bytes
 24366 ;; Hardware stack levels used:    1
 24367 ;; Hardware stack levels required when called:   11
 24368 ;; This function calls:
 24369 ;;		Nothing
 24370 ;; This function is called by:
 24371 ;;		_ModemEvtParser
 24372 ;;		_MyApp_Task
 24373 ;; This function uses a non-reentrant model
 24374 ;;
 24375                           
 24376                           	psect	text114
 24377  0055A0                     __ptext114:
 24378                           	opt stack 0
 24379  0055A0                     _StringCompare:
 24380                           	opt stack 16
 24381                           
 24382                           ;sf.c: 77: UINT16 Index = 0;
 24383                           
 24384                           ; BSR set to: 0
 24385                           ;incstack = 0
 24386  0055A0  0E00               	movlw	0
 24387  0055A2  0100               	movlb	0	; () banked
 24388  0055A4  6F8F               	movwf	(StringCompare@Index+1)& (0+255),b
 24389  0055A6  0E00               	movlw	0
 24390  0055A8  6F8E               	movwf	StringCompare@Index& (0+255),b
 24391                           
 24392                           ;sf.c: 78: UINT8 Result = 1;
 24393  0055AA  0E01               	movlw	1
 24394  0055AC  6F8D               	movwf	StringCompare@Result& (0+255),b
 24395                           
 24396                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 24397  0055AE  0E00               	movlw	0
 24398  0055B0  6F8F               	movwf	(StringCompare@Index+1)& (0+255),b
 24399  0055B2  0E00               	movlw	0
 24400  0055B4  6F8E               	movwf	StringCompare@Index& (0+255),b
 24401  0055B6  D015               	goto	l2211
 24402  0055B8                     
 24403                           ; BSR set to: 0
 24404                           ;sf.c: 82: {
 24405                           ;sf.c: 83: if (String1[Index] != String2[Index])
 24406                           
 24407                           ; BSR set to: 0
 24408  0055B8  518E               	movf	StringCompare@Index& (0+255),w,b
 24409  0055BA  2587               	addwf	StringCompare@String2& (0+255),w,b
 24410  0055BC  6ED9               	movwf	fsr2l,c
 24411  0055BE  518F               	movf	(StringCompare@Index+1)& (0+255),w,b
 24412  0055C0  2188               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 24413  0055C2  6EDA               	movwf	fsr2h,c
 24414  0055C4  518E               	movf	StringCompare@Index& (0+255),w,b
 24415  0055C6  2585               	addwf	StringCompare@String1& (0+255),w,b
 24416  0055C8  6EE1               	movwf	fsr1l,c
 24417  0055CA  518F               	movf	(StringCompare@Index+1)& (0+255),w,b
 24418  0055CC  2186               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 24419  0055CE  6EE2               	movwf	fsr1h,c
 24420  0055D0  50DE               	movf	postinc2,w,c
 24421  0055D2  18E6               	xorwf	postinc1,w,c
 24422  0055D4  B4D8               	btfsc	status,2,c
 24423  0055D6  D003               	goto	l2213
 24424                           
 24425                           ; BSR set to: 0
 24426                           ;sf.c: 84: {
 24427                           ;sf.c: 85: Result = 0;
 24428  0055D8  0E00               	movlw	0
 24429  0055DA  6F8D               	movwf	StringCompare@Result& (0+255),b
 24430                           
 24431                           ;sf.c: 86: break;
 24432  0055DC  D008               	goto	u12670
 24433  0055DE                     l2213:
 24434                           
 24435                           ; BSR set to: 0
 24436                           
 24437                           ; BSR set to: 0
 24438  0055DE  4B8E               	infsnz	StringCompare@Index& (0+255),f,b
 24439  0055E0  2B8F               	incf	(StringCompare@Index+1)& (0+255),f,b
 24440  0055E2                     l2211:
 24441                           
 24442                           ; BSR set to: 0
 24443                           
 24444                           ; BSR set to: 0
 24445  0055E2  5189               	movf	StringCompare@Len& (0+255),w,b
 24446  0055E4  5D8E               	subwf	StringCompare@Index& (0+255),w,b
 24447  0055E6  518A               	movf	(StringCompare@Len+1)& (0+255),w,b
 24448  0055E8  598F               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 24449  0055EA  A0D8               	btfss	status,0,c
 24450  0055EC  D7E5               	goto	l2212
 24451  0055EE                     u12670:
 24452                           
 24453                           ; BSR set to: 0
 24454                           ;sf.c: 87: }
 24455                           ;sf.c: 88: }
 24456                           ;sf.c: 91: return Result;
 24457                           
 24458                           ; BSR set to: 0
 24459  0055EE  518D               	movf	StringCompare@Result& (0+255),w,b
 24460  0055F0  0012               	return	
 24461  0055F2                     __end_of_StringCompare:
 24462                           	opt stack 0
 24463                           tosu	equ	0xFFF
 24464                           tosh	equ	0xFFE
 24465                           tosl	equ	0xFFD
 24466                           pclath	equ	0xFFA
 24467                           tblptru	equ	0xFF8
 24468                           tblptrh	equ	0xFF7
 24469                           tblptrl	equ	0xFF6
 24470                           tablat	equ	0xFF5
 24471                           prodh	equ	0xFF4
 24472                           prodl	equ	0xFF3
 24473                           intcon	equ	0xFF2
 24474                           intcon2	equ	0xFF1
 24475                           intcon3	equ	0xFF0
 24476                           indf0	equ	0xFEF
 24477                           postinc0	equ	0xFEE
 24478                           plusw0	equ	0xFEB
 24479                           fsr0h	equ	0xFEA
 24480                           fsr0l	equ	0xFE9
 24481                           wreg	equ	0xFE8
 24482                           indf1	equ	0xFE7
 24483                           postinc1	equ	0xFE6
 24484                           postdec1	equ	0xFE5
 24485                           plusw1	equ	0xFE3
 24486                           fsr1h	equ	0xFE2
 24487                           fsr1l	equ	0xFE1
 24488                           indf2	equ	0xFDF
 24489                           postinc2	equ	0xFDE
 24490                           postdec2	equ	0xFDD
 24491                           plusw2	equ	0xFDB
 24492                           fsr2h	equ	0xFDA
 24493                           fsr2l	equ	0xFD9
 24494                           status	equ	0xFD8
 24495                           
 24496 ;; *************** function _GetSmsSm *****************
 24497 ;; Defined at:
 24498 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24499 ;; Parameters:    Size  Location     Type
 24500 ;;		None
 24501 ;; Auto vars:     Size  Location     Type
 24502 ;;		None
 24503 ;; Return value:  Size  Location     Type
 24504 ;;                  1    wreg      void 
 24505 ;; Registers used:
 24506 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24507 ;; Tracked objects:
 24508 ;;		On entry : 0/0
 24509 ;;		On exit  : 0/0
 24510 ;;		Unchanged: 0/0
 24511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24516 ;;Total ram usage:        0 bytes
 24517 ;; Hardware stack levels used:    1
 24518 ;; Hardware stack levels required when called:   13
 24519 ;; This function calls:
 24520 ;;		_ClearBuffer
 24521 ;;		_GenerateEvt
 24522 ;;		_ReceiveEvt
 24523 ;;		_StringCopy
 24524 ;;		_Uart_WriteConstString
 24525 ;; This function is called by:
 24526 ;;		_Mdm_MainTask
 24527 ;; This function uses a non-reentrant model
 24528 ;;
 24529                           
 24530                           	psect	text115
 24531  002A82                     __ptext115:
 24532                           	opt stack 0
 24533  002A82                     _GetSmsSm:
 24534                           	opt stack 14
 24535                           
 24536                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 24537                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 24538                           
 24539                           ; BSR set to: 0
 24540                           ;incstack = 0
 24541  002A82  0E03               	movlw	3
 24542  002A84  0100               	movlb	0	; () banked
 24543  002A86  19D2               	xorwf	_MdmStatus& (0+255),w,b
 24544  002A88  A4D8               	btfss	status,2,c
 24545  002A8A  0012               	return	
 24546  002A8C  D084               	goto	l1070
 24547  002A8E                     
 24548                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 24549                           
 24550                           ; BSR set to: 0
 24551  002A8E  0EDD               	movlw	low _GetSmsText
 24552  002A90  0100               	movlb	0	; () banked
 24553  002A92  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24554  002A94  0E00               	movlw	high _GetSmsText
 24555  002A96  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24556  002A98  EC49  F02F         	call	_ReceiveEvt	;wreg free
 24557  002A9C  0900               	iorlw	0
 24558  002A9E  B4D8               	btfsc	status,2,c
 24559  002AA0  0012               	return	
 24560                           
 24561                           ;mdm_gsm_gprs.c: 596: {
 24562                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 24563  002AA2  0E01               	movlw	1
 24564  002AA4  0101               	movlb	1	; () banked
 24565  002AA6  6FF3               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24566                           
 24567                           ; BSR set to: 1
 24568                           ;mdm_gsm_gprs.c: 599: }
 24569                           ;mdm_gsm_gprs.c: 600: break;
 24570  002AA8  0012               	return	
 24571  002AAA                     
 24572                           ; BSR set to: 1
 24573                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 24574                           
 24575                           ; BSR set to: 1
 24576  002AAA  0EC1               	movlw	low STR_4
 24577  002AAC  0100               	movlb	0	; () banked
 24578  002AAE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24579  002AB0  0EFF               	movlw	high STR_4
 24580  002AB2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24581  002AB4  0E01               	movlw	1
 24582  002AB6  ECFB  F02C         	call	_Uart_WriteConstString
 24583                           
 24584                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 24585  002ABA  0E02               	movlw	2
 24586  002ABC  0101               	movlb	1	; () banked
 24587  002ABE  6FF3               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24588                           
 24589                           ;mdm_gsm_gprs.c: 607: break;
 24590  002AC0  0012               	return	
 24591  002AC2                     
 24592                           ; BSR set to: 1
 24593                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 24594                           
 24595                           ; BSR set to: 1
 24596  002AC2  0E3C               	movlw	low _NewStringReceived
 24597  002AC4  0100               	movlb	0	; () banked
 24598  002AC6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24599  002AC8  0E00               	movlw	high _NewStringReceived
 24600  002ACA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24601  002ACC  EC49  F02F         	call	_ReceiveEvt	;wreg free
 24602  002AD0  0900               	iorlw	0
 24603  002AD2  B4D8               	btfsc	status,2,c
 24604  002AD4  0012               	return	
 24605                           
 24606                           ;mdm_gsm_gprs.c: 612: {
 24607                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 24608  002AD6  CC58  FFE8         	movff	_RxBuffer,wreg
 24609  002ADA  0A2B               	xorlw	43
 24610  002ADC  A4D8               	btfss	status,2,c
 24611  002ADE  0012               	return	
 24612  002AE0  CC59  FFE8         	movff	_RxBuffer+1,wreg
 24613  002AE4  0A43               	xorlw	67
 24614  002AE6  A4D8               	btfss	status,2,c
 24615  002AE8  0012               	return	
 24616  002AEA  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 24617  002AEE  0A4D               	xorlw	77
 24618  002AF0  A4D8               	btfss	status,2,c
 24619  002AF2  0012               	return	
 24620                           
 24621                           ;mdm_gsm_gprs.c: 614: {
 24622                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 24623  002AF4  0E00               	movlw	low _Mdm_SmsRx
 24624  002AF6  0100               	movlb	0	; () banked
 24625  002AF8  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24626  002AFA  0E07               	movlw	high _Mdm_SmsRx
 24627  002AFC  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24628  002AFE  0E00               	movlw	0
 24629  002B00  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24630  002B02  0E50               	movlw	80
 24631  002B04  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24632  002B06  EC6B  F02E         	call	_ClearBuffer	;wreg free
 24633                           
 24634                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 24635  002B0A  0E58               	movlw	low _RxBuffer
 24636  002B0C  0100               	movlb	0	; () banked
 24637  002B0E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24638  002B10  0E0C               	movlw	high _RxBuffer
 24639  002B12  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24640  002B14  0E00               	movlw	low _Mdm_SmsRx
 24641  002B16  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24642  002B18  0E07               	movlw	high _Mdm_SmsRx
 24643  002B1A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24644  002B1C  C0C2  F081         	movff	_RxLen,StringCopy@Len
 24645  002B20  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 24646  002B24  EC91  F028         	call	_StringCopy	;wreg free
 24647                           
 24648                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 24649  002B28  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 24650                           
 24651                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 24652  002B2C  0E03               	movlw	3
 24653  002B2E  0101               	movlb	1	; () banked
 24654  002B30  6FF3               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24655                           
 24656                           ; BSR set to: 1
 24657                           ;mdm_gsm_gprs.c: 622: }
 24658                           ;mdm_gsm_gprs.c: 623: }
 24659                           ;mdm_gsm_gprs.c: 624: break;
 24660                           
 24661                           ; BSR set to: 1
 24662  002B32  0012               	return	
 24663  002B34                     
 24664                           ; BSR set to: 1
 24665                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 24666                           
 24667                           ; BSR set to: 1
 24668  002B34  0E3C               	movlw	low _NewStringReceived
 24669  002B36  0100               	movlb	0	; () banked
 24670  002B38  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24671  002B3A  0E00               	movlw	high _NewStringReceived
 24672  002B3C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24673  002B3E  EC49  F02F         	call	_ReceiveEvt	;wreg free
 24674  002B42  0900               	iorlw	0
 24675  002B44  B4D8               	btfsc	status,2,c
 24676  002B46  0012               	return	
 24677                           
 24678                           ;mdm_gsm_gprs.c: 629: {
 24679                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 24680  002B48  0E50               	movlw	low (_Mdm_SmsRx+80)
 24681  002B4A  0100               	movlb	0	; () banked
 24682  002B4C  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24683  002B4E  0E07               	movlw	high (_Mdm_SmsRx+80)
 24684  002B50  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24685  002B52  0E00               	movlw	0
 24686  002B54  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24687  002B56  0E14               	movlw	20
 24688  002B58  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24689  002B5A  EC6B  F02E         	call	_ClearBuffer	;wreg free
 24690                           
 24691                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 24692  002B5E  0E58               	movlw	low _RxBuffer
 24693  002B60  0100               	movlb	0	; () banked
 24694  002B62  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24695  002B64  0E0C               	movlw	high _RxBuffer
 24696  002B66  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24697  002B68  0E50               	movlw	low (_Mdm_SmsRx+80)
 24698  002B6A  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24699  002B6C  0E07               	movlw	high (_Mdm_SmsRx+80)
 24700  002B6E  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24701  002B70  C0C2  F081         	movff	_RxLen,StringCopy@Len
 24702  002B74  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 24703  002B78  EC91  F028         	call	_StringCopy	;wreg free
 24704                           
 24705                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 24706  002B7C  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 24707                           
 24708                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 24709  002B80  0E00               	movlw	0
 24710  002B82  0101               	movlb	1	; () banked
 24711  002B84  6FF3               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24712                           
 24713                           ; BSR set to: 1
 24714                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 24715  002B86  0EDC               	movlw	low _SmsTxtReady
 24716  002B88  0100               	movlb	0	; () banked
 24717  002B8A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24718  002B8C  0E00               	movlw	high _SmsTxtReady
 24719  002B8E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24720  002B90  EC0D  F031         	call	_GenerateEvt	;wreg free
 24721                           
 24722                           ;mdm_gsm_gprs.c: 644: }
 24723                           
 24724                           ;mdm_gsm_gprs.c: 643: break;
 24725                           
 24726                           ;mdm_gsm_gprs.c: 642: default:
 24727                           
 24728                           ;mdm_gsm_gprs.c: 639: }
 24729                           ;mdm_gsm_gprs.c: 640: break;
 24730  002B94  0012               	return	
 24731  002B96                     l1070:
 24732  002B96  0101               	movlb	1	; () banked
 24733  002B98  51F3               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 24734                           
 24735                           ; Switch size 1, requested type "space"
 24736                           ; Number of cases is 4, Range of values is 0 to 3
 24737                           ; switch strategies available:
 24738                           ; Name         Instructions Cycles
 24739                           ; simple_byte           13     7 (average)
 24740                           ;	Chosen strategy is simple_byte
 24741  002B9A  0A00               	xorlw	0	; case 0
 24742  002B9C  B4D8               	btfsc	status,2,c
 24743  002B9E  D777               	goto	l1071
 24744  002BA0  0A01               	xorlw	1	; case 1
 24745  002BA2  B4D8               	btfsc	status,2,c
 24746  002BA4  D782               	goto	l1074
 24747  002BA6  0A03               	xorlw	3	; case 2
 24748  002BA8  B4D8               	btfsc	status,2,c
 24749  002BAA  D78B               	goto	l1075
 24750  002BAC  0A01               	xorlw	1	; case 3
 24751  002BAE  A4D8               	btfss	status,2,c
 24752                           
 24753                           ; BSR set to: 1
 24754  002BB0  0012               	return	
 24755  002BB2  D7C0               	goto	l1078
 24756  002BB4                     __end_of_GetSmsSm:
 24757                           	opt stack 0
 24758                           tosu	equ	0xFFF
 24759                           tosh	equ	0xFFE
 24760                           tosl	equ	0xFFD
 24761                           pclath	equ	0xFFA
 24762                           tblptru	equ	0xFF8
 24763                           tblptrh	equ	0xFF7
 24764                           tblptrl	equ	0xFF6
 24765                           tablat	equ	0xFF5
 24766                           prodh	equ	0xFF4
 24767                           prodl	equ	0xFF3
 24768                           intcon	equ	0xFF2
 24769                           intcon2	equ	0xFF1
 24770                           intcon3	equ	0xFF0
 24771                           indf0	equ	0xFEF
 24772                           postinc0	equ	0xFEE
 24773                           plusw0	equ	0xFEB
 24774                           fsr0h	equ	0xFEA
 24775                           fsr0l	equ	0xFE9
 24776                           wreg	equ	0xFE8
 24777                           indf1	equ	0xFE7
 24778                           postinc1	equ	0xFE6
 24779                           postdec1	equ	0xFE5
 24780                           plusw1	equ	0xFE3
 24781                           fsr1h	equ	0xFE2
 24782                           fsr1l	equ	0xFE1
 24783                           indf2	equ	0xFDF
 24784                           postinc2	equ	0xFDE
 24785                           postdec2	equ	0xFDD
 24786                           plusw2	equ	0xFDB
 24787                           fsr2h	equ	0xFDA
 24788                           fsr2l	equ	0xFD9
 24789                           status	equ	0xFD8
 24790                           
 24791 ;; *************** function _ConfigureModem *****************
 24792 ;; Defined at:
 24793 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24794 ;; Parameters:    Size  Location     Type
 24795 ;;		None
 24796 ;; Auto vars:     Size  Location     Type
 24797 ;;		None
 24798 ;; Return value:  Size  Location     Type
 24799 ;;                  1    wreg      void 
 24800 ;; Registers used:
 24801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24802 ;; Tracked objects:
 24803 ;;		On entry : 0/0
 24804 ;;		On exit  : 0/0
 24805 ;;		Unchanged: 0/0
 24806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24811 ;;Total ram usage:        0 bytes
 24812 ;; Hardware stack levels used:    1
 24813 ;; Hardware stack levels required when called:   14
 24814 ;; This function calls:
 24815 ;;		_GenerateEvt
 24816 ;;		_UartSetConfigLow
 24817 ;;		_Uart_InitUartModule
 24818 ;;		_Uart_WriteConstString
 24819 ;; This function is called by:
 24820 ;;		_Mdm_MainTask
 24821 ;; This function uses a non-reentrant model
 24822 ;;
 24823                           
 24824                           	psect	text116
 24825  00391C                     __ptext116:
 24826                           	opt stack 0
 24827  00391C                     _ConfigureModem:
 24828                           	opt stack 13
 24829                           
 24830                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 24831                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 24832                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 24833                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 24834                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 24835                           
 24836                           ;incstack = 0
 24837  00391C  D054               	goto	l1027
 24838  00391E                     
 24839                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 24840  00391E  0E02               	movlw	2
 24841  003920  0100               	movlb	0	; () banked
 24842  003922  19D2               	xorwf	_MdmStatus& (0+255),w,b
 24843  003924  A4D8               	btfss	status,2,c
 24844  003926  0012               	return	
 24845                           
 24846                           ; BSR set to: 0
 24847                           ;mdm_gsm_gprs.c: 431: {
 24848                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 24849  003928  0E01               	movlw	1
 24850  00392A  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24851                           
 24852                           ; BSR set to: 0
 24853                           ;mdm_gsm_gprs.c: 434: }
 24854                           ;mdm_gsm_gprs.c: 435: break;
 24855  00392C  0012               	return	
 24856  00392E                     
 24857                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 24858                           
 24859                           ; BSR set to: 0
 24860  00392E  0E74               	movlw	low STR_2
 24861  003930  0100               	movlb	0	; () banked
 24862  003932  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24863  003934  0EFF               	movlw	high STR_2
 24864  003936  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24865  003938  0E01               	movlw	1
 24866  00393A  ECFB  F02C         	call	_Uart_WriteConstString
 24867                           
 24868                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 24869  00393E  ECA6  F029         	call	_UartSetConfigLow	;wreg free
 24870                           
 24871                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 24872  003942  0E26               	movlw	low _UartConfig
 24873  003944  0100               	movlb	0	; () banked
 24874  003946  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 24875  003948  0E03               	movlw	high _UartConfig
 24876  00394A  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 24877  00394C  0E01               	movlw	1
 24878  00394E  EC5E  F005         	call	_Uart_InitUartModule
 24879                           
 24880                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 24881  003952  0E03               	movlw	3
 24882  003954  0102               	movlb	2	; () banked
 24883  003956  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 24884  003958  0EE8               	movlw	232
 24885  00395A  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 24886                           
 24887                           ; BSR set to: 2
 24888                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 24889  00395C  0E02               	movlw	2
 24890  00395E  0101               	movlb	1	; () banked
 24891  003960  6FF4               	movwf	ConfigureModem@NextState& (0+255),b
 24892                           
 24893                           ; BSR set to: 1
 24894                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 24895  003962  0E04               	movlw	4
 24896  003964  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24897                           
 24898                           ;mdm_gsm_gprs.c: 449: break;
 24899  003966  0012               	return	
 24900  003968                     
 24901                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 24902                           
 24903                           ; BSR set to: 1
 24904  003968  0EDE               	movlw	low STR_3
 24905  00396A  0100               	movlb	0	; () banked
 24906  00396C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24907  00396E  0EFF               	movlw	high STR_3
 24908  003970  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24909  003972  0E01               	movlw	1
 24910  003974  ECFB  F02C         	call	_Uart_WriteConstString
 24911                           
 24912                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 24913  003978  0E03               	movlw	3
 24914  00397A  0102               	movlb	2	; () banked
 24915  00397C  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 24916  00397E  0EE8               	movlw	232
 24917  003980  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 24918                           
 24919                           ; BSR set to: 2
 24920                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 24921  003982  0E05               	movlw	5
 24922  003984  0101               	movlb	1	; () banked
 24923  003986  6FF4               	movwf	ConfigureModem@NextState& (0+255),b
 24924                           
 24925                           ; BSR set to: 1
 24926                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 24927  003988  0E04               	movlw	4
 24928  00398A  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24929                           
 24930                           ;mdm_gsm_gprs.c: 459: break;
 24931  00398C  0012               	return	
 24932  00398E                     
 24933                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 24934                           
 24935                           ; BSR set to: 1
 24936  00398E  0102               	movlb	2	; () banked
 24937  003990  4BD6               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 24938  003992  2BD7               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 24939                           
 24940                           ; BSR set to: 2
 24941                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 24942  003994  51D8               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 24943  003996  5DD6               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 24944  003998  51D9               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 24945  00399A  59D7               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 24946  00399C  A0D8               	btfss	status,0,c
 24947  00399E  0012               	return	
 24948                           
 24949                           ; BSR set to: 2
 24950                           ;mdm_gsm_gprs.c: 466: {
 24951                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 24952  0039A0  0E00               	movlw	0
 24953  0039A2  6FD7               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 24954  0039A4  0E00               	movlw	0
 24955  0039A6  6FD6               	movwf	ConfigureModem@DelayCounter& (0+255),b
 24956                           
 24957                           ; BSR set to: 2
 24958                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 24959  0039A8  C1F4  F028         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 24960                           
 24961                           ; BSR set to: 2
 24962                           ;mdm_gsm_gprs.c: 471: }
 24963                           ;mdm_gsm_gprs.c: 472: break;
 24964  0039AC  0012               	return	
 24965  0039AE                     
 24966                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 24967                           
 24968                           ; BSR set to: 2
 24969  0039AE  0E03               	movlw	3
 24970  0039B0  0100               	movlb	0	; () banked
 24971  0039B2  6FD2               	movwf	_MdmStatus& (0+255),b
 24972                           
 24973                           ; BSR set to: 0
 24974                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 24975  0039B4  0E39               	movlw	low _MdmStsReady
 24976  0039B6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24977  0039B8  0E00               	movlw	high _MdmStsReady
 24978  0039BA  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24979  0039BC  EC0D  F031         	call	_GenerateEvt	;wreg free
 24980                           
 24981                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 24982  0039C0  0E06               	movlw	6
 24983  0039C2  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24984                           
 24985                           ;mdm_gsm_gprs.c: 488: }
 24986                           
 24987                           ;mdm_gsm_gprs.c: 487: break;
 24988                           
 24989                           ;mdm_gsm_gprs.c: 486: default:
 24990                           
 24991                           ;mdm_gsm_gprs.c: 484: break;
 24992                           
 24993                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 24994                           
 24995                           ;mdm_gsm_gprs.c: 481: break;
 24996  0039C4  0012               	return	
 24997  0039C6                     l1027:
 24998  0039C6  5028               	movf	ConfigureModem@MdmConfigState,w,c
 24999                           
 25000                           ; Switch size 1, requested type "space"
 25001                           ; Number of cases is 6, Range of values is 0 to 6
 25002                           ; switch strategies available:
 25003                           ; Name         Instructions Cycles
 25004                           ; simple_byte           19    10 (average)
 25005                           ;	Chosen strategy is simple_byte
 25006  0039C8  0A00               	xorlw	0	; case 0
 25007  0039CA  B4D8               	btfsc	status,2,c
 25008  0039CC  D7A8               	goto	l1028
 25009  0039CE  0A01               	xorlw	1	; case 1
 25010  0039D0  B4D8               	btfsc	status,2,c
 25011  0039D2  D7AD               	goto	l1031
 25012  0039D4  0A03               	xorlw	3	; case 2
 25013  0039D6  B4D8               	btfsc	status,2,c
 25014  0039D8  D7C7               	goto	l1032
 25015  0039DA  0A06               	xorlw	6	; case 4
 25016  0039DC  B4D8               	btfsc	status,2,c
 25017  0039DE  D7D7               	goto	l1033
 25018  0039E0  0A01               	xorlw	1	; case 5
 25019  0039E2  B4D8               	btfsc	status,2,c
 25020  0039E4  D7E4               	goto	l1035
 25021  0039E6  0A03               	xorlw	3	; case 6
 25022  0039E8  0012               	return	
 25023  0039EA                     __end_of_ConfigureModem:
 25024                           	opt stack 0
 25025                           tosu	equ	0xFFF
 25026                           tosh	equ	0xFFE
 25027                           tosl	equ	0xFFD
 25028                           pclath	equ	0xFFA
 25029                           tblptru	equ	0xFF8
 25030                           tblptrh	equ	0xFF7
 25031                           tblptrl	equ	0xFF6
 25032                           tablat	equ	0xFF5
 25033                           prodh	equ	0xFF4
 25034                           prodl	equ	0xFF3
 25035                           intcon	equ	0xFF2
 25036                           intcon2	equ	0xFF1
 25037                           intcon3	equ	0xFF0
 25038                           indf0	equ	0xFEF
 25039                           postinc0	equ	0xFEE
 25040                           plusw0	equ	0xFEB
 25041                           fsr0h	equ	0xFEA
 25042                           fsr0l	equ	0xFE9
 25043                           wreg	equ	0xFE8
 25044                           indf1	equ	0xFE7
 25045                           postinc1	equ	0xFE6
 25046                           postdec1	equ	0xFE5
 25047                           plusw1	equ	0xFE3
 25048                           fsr1h	equ	0xFE2
 25049                           fsr1l	equ	0xFE1
 25050                           indf2	equ	0xFDF
 25051                           postinc2	equ	0xFDE
 25052                           postdec2	equ	0xFDD
 25053                           plusw2	equ	0xFDB
 25054                           fsr2h	equ	0xFDA
 25055                           fsr2l	equ	0xFD9
 25056                           status	equ	0xFD8
 25057                           
 25058 ;; *************** function _Uart_InitUartModule *****************
 25059 ;; Defined at:
 25060 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25061 ;; Parameters:    Size  Location     Type
 25062 ;;  Module          1    wreg     unsigned char 
 25063 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 25064 ;;		 -> UartConfig(21), 
 25065 ;; Auto vars:     Size  Location     Type
 25066 ;;  Module          1   65[BANK0 ] unsigned char 
 25067 ;; Return value:  Size  Location     Type
 25068 ;;                  1    wreg      void 
 25069 ;; Registers used:
 25070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25071 ;; Tracked objects:
 25072 ;;		On entry : 0/0
 25073 ;;		On exit  : 0/0
 25074 ;;		Unchanged: 0/0
 25075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25076 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25077 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25078 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25079 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25080 ;;Total ram usage:        5 bytes
 25081 ;; Hardware stack levels used:    1
 25082 ;; Hardware stack levels required when called:   13
 25083 ;; This function calls:
 25084 ;;		_SetUartBaudRate
 25085 ;; This function is called by:
 25086 ;;		_ConfigureModem
 25087 ;;		_Mdm_MainTask
 25088 ;; This function uses a non-reentrant model
 25089 ;;
 25090                           
 25091                           	psect	text117
 25092  000ABC                     __ptext117:
 25093                           	opt stack 0
 25094  000ABC                     _Uart_InitUartModule:
 25095                           	opt stack 14
 25096                           
 25097                           ;incstack = 0
 25098                           ;Uart_InitUartModule@Module stored from wreg
 25099  000ABC  0100               	movlb	0	; () banked
 25100  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 25101                           
 25102                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 25103  000AC0  0100               	movlb	0	; () banked
 25104  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 25105  000AC4  A4D8               	btfss	status,2,c
 25106  000AC6  D0BE               	goto	l668
 25107                           
 25108                           ; BSR set to: 0
 25109                           ;uart_drv.c: 291: {
 25110                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 25111  000AC8  9C94               	bcf	3988,6,c	;volatile
 25112                           
 25113                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 25114  000ACA  8E94               	bsf	3988,7,c	;volatile
 25115                           
 25116                           ; BSR set to: 0
 25117                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 25118  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 25119  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 25120  000AD4  0E01               	movlw	1
 25121  000AD6  ECA5  F014         	call	_SetUartBaudRate
 25122                           
 25123                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 25124  000ADA  0E00               	movlw	0
 25125  000ADC  6EAD               	movwf	4013,c	;volatile
 25126                           
 25127                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 25128  000ADE  0100               	movlb	0	; () banked
 25129  000AE0  EE20 F004          	lfsr	2,4
 25130  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25131  000AE6  26D9               	addwf	fsr2l,f,c
 25132  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25133  000AEA  22DA               	addwfc	fsr2h,f,c
 25134  000AEC  50DF               	movf	indf2,w,c
 25135  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25136  000AF0  0E06               	movlw	6
 25137  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25138  000AF4                     u12555:
 25139  000AF4  90D8               	bcf	status,0,c
 25140  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25141  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25142  000AFA  D7FC               	goto	u12555
 25143  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25144  000AFE  12AD               	iorwf	4013,f,c	;volatile
 25145                           
 25146                           ; BSR set to: 0
 25147                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 25148  000B00  EE20 F006          	lfsr	2,6
 25149  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25150  000B06  26D9               	addwf	fsr2l,f,c
 25151  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25152  000B0A  22DA               	addwfc	fsr2h,f,c
 25153  000B0C  50DF               	movf	indf2,w,c
 25154  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25155  000B10  0E05               	movlw	5
 25156  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25157  000B14                     u12565:
 25158  000B14  90D8               	bcf	status,0,c
 25159  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25160  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25161  000B1A  D7FC               	goto	u12565
 25162  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25163  000B1E  12AD               	iorwf	4013,f,c	;volatile
 25164                           
 25165                           ; BSR set to: 0
 25166                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 25167  000B20  EE20 F001          	lfsr	2,1
 25168  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25169  000B26  26D9               	addwf	fsr2l,f,c
 25170  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25171  000B2A  22DA               	addwfc	fsr2h,f,c
 25172  000B2C  50DF               	movf	indf2,w,c
 25173  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25174  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 25175  000B32  0BF0               	andlw	240
 25176  000B34  12AD               	iorwf	4013,f,c	;volatile
 25177                           
 25178                           ; BSR set to: 0
 25179                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 25180  000B36  EE20 F008          	lfsr	2,8
 25181  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25182  000B3C  26D9               	addwf	fsr2l,f,c
 25183  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25184  000B40  22DA               	addwfc	fsr2h,f,c
 25185  000B42  50DF               	movf	indf2,w,c
 25186  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25187  000B46  90D8               	bcf	status,0,c
 25188  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25189  000B4A  90D8               	bcf	status,0,c
 25190  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25191  000B4E  90D8               	bcf	status,0,c
 25192  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25193  000B52  12AD               	iorwf	4013,f,c	;volatile
 25194                           
 25195                           ; BSR set to: 0
 25196                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 25197  000B54  EE20 F003          	lfsr	2,3
 25198  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25199  000B5A  26D9               	addwf	fsr2l,f,c
 25200  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25201  000B5E  22DA               	addwfc	fsr2h,f,c
 25202  000B60  50DF               	movf	indf2,w,c
 25203  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25204  000B64  90D8               	bcf	status,0,c
 25205  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25206  000B68  90D8               	bcf	status,0,c
 25207  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25208  000B6C  12AD               	iorwf	4013,f,c	;volatile
 25209                           
 25210                           ; BSR set to: 0
 25211                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 25212  000B6E  0E00               	movlw	0
 25213  000B70  6EAC               	movwf	4012,c	;volatile
 25214                           
 25215                           ; BSR set to: 0
 25216                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 25217  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 25218  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 25219  000B7A  50DF               	movf	indf2,w,c
 25220  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25221  000B7E  0E00               	movlw	0
 25222  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 25223  000B82  0E80               	movlw	128
 25224  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25225  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25226  000B88  12AC               	iorwf	4012,f,c	;volatile
 25227                           
 25228                           ; BSR set to: 0
 25229                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 25230  000B8A  EE20 F005          	lfsr	2,5
 25231  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25232  000B90  26D9               	addwf	fsr2l,f,c
 25233  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25234  000B94  22DA               	addwfc	fsr2h,f,c
 25235  000B96  50DF               	movf	indf2,w,c
 25236  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25237  000B9A  0E06               	movlw	6
 25238  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25239  000B9E                     u12575:
 25240  000B9E  90D8               	bcf	status,0,c
 25241  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25242  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25243  000BA4  D7FC               	goto	u12575
 25244  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25245  000BA8  12AC               	iorwf	4012,f,c	;volatile
 25246                           
 25247                           ; BSR set to: 0
 25248                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 25249  000BAA  EE20 F007          	lfsr	2,7
 25250  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25251  000BB0  26D9               	addwf	fsr2l,f,c
 25252  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25253  000BB4  22DA               	addwfc	fsr2h,f,c
 25254  000BB6  50DF               	movf	indf2,w,c
 25255  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25256  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 25257  000BBC  0BF0               	andlw	240
 25258  000BBE  12AC               	iorwf	4012,f,c	;volatile
 25259                           
 25260                           ; BSR set to: 0
 25261                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 25262  000BC0  0E00               	movlw	0
 25263  000BC2  6E7E               	movwf	3966,c	;volatile
 25264                           
 25265                           ; BSR set to: 0
 25266                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 25267  000BC4  EE20 F002          	lfsr	2,2
 25268  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25269  000BCA  26D9               	addwf	fsr2l,f,c
 25270  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25271  000BCE  22DA               	addwfc	fsr2h,f,c
 25272  000BD0  50DF               	movf	indf2,w,c
 25273  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25274  000BD4  90D8               	bcf	status,0,c
 25275  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25276  000BD8  90D8               	bcf	status,0,c
 25277  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25278  000BDC  90D8               	bcf	status,0,c
 25279  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25280  000BE0  127E               	iorwf	3966,f,c	;volatile
 25281                           
 25282                           ; BSR set to: 0
 25283                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 25284  000BE2  EE20 F00A          	lfsr	2,10
 25285  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25286  000BE8  26D9               	addwf	fsr2l,f,c
 25287  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25288  000BEC  22DA               	addwfc	fsr2h,f,c
 25289  000BEE  50DF               	movf	indf2,w,c
 25290  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25291  000BF2  90D8               	bcf	status,0,c
 25292  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25293  000BF6  127E               	iorwf	3966,f,c	;volatile
 25294                           
 25295                           ; BSR set to: 0
 25296                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 25297  000BF8  EE20 F009          	lfsr	2,9
 25298  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25299  000BFE  26D9               	addwf	fsr2l,f,c
 25300  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25301  000C02  22DA               	addwfc	fsr2h,f,c
 25302  000C04  50DF               	movf	indf2,w,c
 25303  000C06  127E               	iorwf	3966,f,c	;volatile
 25304                           
 25305                           ; BSR set to: 0
 25306                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 25307  000C08  EE20 F00B          	lfsr	2,11
 25308  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25309  000C0E  26D9               	addwf	fsr2l,f,c
 25310  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25311  000C12  22DA               	addwfc	fsr2h,f,c
 25312  000C14  50DF               	movf	indf2,w,c
 25313  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25314  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 25315  000C1A  509D               	movf	3997,w,c	;volatile
 25316  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25317  000C1E  0BEF               	andlw	-17
 25318  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25319  000C22  6E9D               	movwf	3997,c	;volatile
 25320                           
 25321                           ; BSR set to: 0
 25322                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 25323  000C24  EE20 F00C          	lfsr	2,12
 25324  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25325  000C2A  26D9               	addwf	fsr2l,f,c
 25326  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25327  000C2E  22DA               	addwfc	fsr2h,f,c
 25328  000C30  50DF               	movf	indf2,w,c
 25329  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25330  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 25331  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 25332  000C38  509D               	movf	3997,w,c	;volatile
 25333  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25334  000C3C  0BDF               	andlw	-33
 25335  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25336  000C40  6E9D               	movwf	3997,c	;volatile
 25337                           
 25338                           ;uart_drv.c: 326: }
 25339  000C42  0012               	return	
 25340  000C44                     l668:
 25341                           
 25342                           ; BSR set to: 0
 25343                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 25344                           
 25345                           ; BSR set to: 0
 25346  000C44  0E02               	movlw	2
 25347  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 25348  000C48  A4D8               	btfss	status,2,c
 25349  000C4A  0012               	return	
 25350                           
 25351                           ; BSR set to: 0
 25352                           ;uart_drv.c: 328: {
 25353                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 25354  000C4C  9094               	bcf	3988,0,c	;volatile
 25355                           
 25356                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 25357  000C4E  8294               	bsf	3988,1,c	;volatile
 25358                           
 25359                           ; BSR set to: 0
 25360                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 25361  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 25362  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 25363  000C58  0E02               	movlw	2
 25364  000C5A  ECA5  F014         	call	_SetUartBaudRate
 25365                           
 25366                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 25367  000C5E  0E00               	movlw	0
 25368  000C60  6EA8               	movwf	4008,c	;volatile
 25369                           
 25370                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 25371  000C62  0100               	movlb	0	; () banked
 25372  000C64  EE20 F004          	lfsr	2,4
 25373  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25374  000C6A  26D9               	addwf	fsr2l,f,c
 25375  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25376  000C6E  22DA               	addwfc	fsr2h,f,c
 25377  000C70  50DF               	movf	indf2,w,c
 25378  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25379  000C74  0E06               	movlw	6
 25380  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25381  000C78                     u12595:
 25382  000C78  90D8               	bcf	status,0,c
 25383  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25384  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25385  000C7E  D7FC               	goto	u12595
 25386  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25387  000C82  12A8               	iorwf	4008,f,c	;volatile
 25388                           
 25389                           ; BSR set to: 0
 25390                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 25391  000C84  EE20 F006          	lfsr	2,6
 25392  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25393  000C8A  26D9               	addwf	fsr2l,f,c
 25394  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25395  000C8E  22DA               	addwfc	fsr2h,f,c
 25396  000C90  50DF               	movf	indf2,w,c
 25397  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25398  000C94  0E05               	movlw	5
 25399  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25400  000C98                     u12605:
 25401  000C98  90D8               	bcf	status,0,c
 25402  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25403  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25404  000C9E  D7FC               	goto	u12605
 25405  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25406  000CA2  12A8               	iorwf	4008,f,c	;volatile
 25407                           
 25408                           ; BSR set to: 0
 25409                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 25410  000CA4  EE20 F001          	lfsr	2,1
 25411  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25412  000CAA  26D9               	addwf	fsr2l,f,c
 25413  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25414  000CAE  22DA               	addwfc	fsr2h,f,c
 25415  000CB0  50DF               	movf	indf2,w,c
 25416  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25417  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 25418  000CB6  0BF0               	andlw	240
 25419  000CB8  12A8               	iorwf	4008,f,c	;volatile
 25420                           
 25421                           ; BSR set to: 0
 25422                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 25423  000CBA  EE20 F008          	lfsr	2,8
 25424  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25425  000CC0  26D9               	addwf	fsr2l,f,c
 25426  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25427  000CC4  22DA               	addwfc	fsr2h,f,c
 25428  000CC6  50DF               	movf	indf2,w,c
 25429  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25430  000CCA  90D8               	bcf	status,0,c
 25431  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25432  000CCE  90D8               	bcf	status,0,c
 25433  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25434  000CD2  90D8               	bcf	status,0,c
 25435  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25436  000CD6  12A8               	iorwf	4008,f,c	;volatile
 25437                           
 25438                           ; BSR set to: 0
 25439                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 25440  000CD8  EE20 F003          	lfsr	2,3
 25441  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25442  000CDE  26D9               	addwf	fsr2l,f,c
 25443  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25444  000CE2  22DA               	addwfc	fsr2h,f,c
 25445  000CE4  50DF               	movf	indf2,w,c
 25446  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25447  000CE8  90D8               	bcf	status,0,c
 25448  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25449  000CEC  90D8               	bcf	status,0,c
 25450  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25451  000CF0  12A8               	iorwf	4008,f,c	;volatile
 25452                           
 25453                           ; BSR set to: 0
 25454                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 25455  000CF2  0E00               	movlw	0
 25456  000CF4  6E9C               	movwf	3996,c	;volatile
 25457                           
 25458                           ; BSR set to: 0
 25459                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 25460  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 25461  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 25462  000CFE  50DF               	movf	indf2,w,c
 25463  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25464  000D02  0E00               	movlw	0
 25465  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 25466  000D06  0E80               	movlw	128
 25467  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25468  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25469  000D0C  129C               	iorwf	3996,f,c	;volatile
 25470                           
 25471                           ; BSR set to: 0
 25472                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 25473  000D0E  EE20 F005          	lfsr	2,5
 25474  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25475  000D14  26D9               	addwf	fsr2l,f,c
 25476  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25477  000D18  22DA               	addwfc	fsr2h,f,c
 25478  000D1A  50DF               	movf	indf2,w,c
 25479  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25480  000D1E  0E06               	movlw	6
 25481  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25482  000D22                     u12615:
 25483  000D22  90D8               	bcf	status,0,c
 25484  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25485  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25486  000D28  D7FC               	goto	u12615
 25487  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25488  000D2C  129C               	iorwf	3996,f,c	;volatile
 25489                           
 25490                           ; BSR set to: 0
 25491                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 25492  000D2E  EE20 F007          	lfsr	2,7
 25493  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25494  000D34  26D9               	addwf	fsr2l,f,c
 25495  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25496  000D38  22DA               	addwfc	fsr2h,f,c
 25497  000D3A  50DF               	movf	indf2,w,c
 25498  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25499  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 25500  000D40  0BF0               	andlw	240
 25501  000D42  129C               	iorwf	3996,f,c	;volatile
 25502                           
 25503                           ; BSR set to: 0
 25504                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 25505  000D44  0E00               	movlw	0
 25506  000D46  6E7C               	movwf	3964,c	;volatile
 25507                           
 25508                           ; BSR set to: 0
 25509                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 25510  000D48  EE20 F002          	lfsr	2,2
 25511  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25512  000D4E  26D9               	addwf	fsr2l,f,c
 25513  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25514  000D52  22DA               	addwfc	fsr2h,f,c
 25515  000D54  50DF               	movf	indf2,w,c
 25516  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25517  000D58  90D8               	bcf	status,0,c
 25518  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25519  000D5C  90D8               	bcf	status,0,c
 25520  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25521  000D60  90D8               	bcf	status,0,c
 25522  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25523  000D64  127C               	iorwf	3964,f,c	;volatile
 25524                           
 25525                           ; BSR set to: 0
 25526                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 25527  000D66  EE20 F00A          	lfsr	2,10
 25528  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25529  000D6C  26D9               	addwf	fsr2l,f,c
 25530  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25531  000D70  22DA               	addwfc	fsr2h,f,c
 25532  000D72  50DF               	movf	indf2,w,c
 25533  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25534  000D76  90D8               	bcf	status,0,c
 25535  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25536  000D7A  127C               	iorwf	3964,f,c	;volatile
 25537                           
 25538                           ; BSR set to: 0
 25539                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 25540  000D7C  EE20 F009          	lfsr	2,9
 25541  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25542  000D82  26D9               	addwf	fsr2l,f,c
 25543  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25544  000D86  22DA               	addwfc	fsr2h,f,c
 25545  000D88  50DF               	movf	indf2,w,c
 25546  000D8A  127C               	iorwf	3964,f,c	;volatile
 25547                           
 25548                           ; BSR set to: 0
 25549                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 25550  000D8C  EE20 F00B          	lfsr	2,11
 25551  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25552  000D92  26D9               	addwf	fsr2l,f,c
 25553  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25554  000D96  22DA               	addwfc	fsr2h,f,c
 25555  000D98  50DF               	movf	indf2,w,c
 25556  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25557  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 25558  000D9E  50A3               	movf	4003,w,c	;volatile
 25559  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25560  000DA2  0BEF               	andlw	-17
 25561  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25562  000DA6  6EA3               	movwf	4003,c	;volatile
 25563                           
 25564                           ; BSR set to: 0
 25565                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 25566  000DA8  EE20 F00C          	lfsr	2,12
 25567  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25568  000DAE  26D9               	addwf	fsr2l,f,c
 25569  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25570  000DB2  22DA               	addwfc	fsr2h,f,c
 25571  000DB4  50DF               	movf	indf2,w,c
 25572  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25573  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 25574  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 25575  000DBC  50A3               	movf	4003,w,c	;volatile
 25576  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25577  000DC0  0BDF               	andlw	-33
 25578  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25579  000DC4  6EA3               	movwf	4003,c	;volatile
 25580                           
 25581                           ; BSR set to: 0
 25582  000DC6  0012               	return	
 25583  000DC8                     __end_of_Uart_InitUartModule:
 25584                           	opt stack 0
 25585                           tosu	equ	0xFFF
 25586                           tosh	equ	0xFFE
 25587                           tosl	equ	0xFFD
 25588                           pclath	equ	0xFFA
 25589                           tblptru	equ	0xFF8
 25590                           tblptrh	equ	0xFF7
 25591                           tblptrl	equ	0xFF6
 25592                           tablat	equ	0xFF5
 25593                           prodh	equ	0xFF4
 25594                           prodl	equ	0xFF3
 25595                           intcon	equ	0xFF2
 25596                           intcon2	equ	0xFF1
 25597                           intcon3	equ	0xFF0
 25598                           indf0	equ	0xFEF
 25599                           postinc0	equ	0xFEE
 25600                           plusw0	equ	0xFEB
 25601                           fsr0h	equ	0xFEA
 25602                           fsr0l	equ	0xFE9
 25603                           wreg	equ	0xFE8
 25604                           indf1	equ	0xFE7
 25605                           postinc1	equ	0xFE6
 25606                           postdec1	equ	0xFE5
 25607                           plusw1	equ	0xFE3
 25608                           fsr1h	equ	0xFE2
 25609                           fsr1l	equ	0xFE1
 25610                           indf2	equ	0xFDF
 25611                           postinc2	equ	0xFDE
 25612                           postdec2	equ	0xFDD
 25613                           plusw2	equ	0xFDB
 25614                           fsr2h	equ	0xFDA
 25615                           fsr2l	equ	0xFD9
 25616                           status	equ	0xFD8
 25617                           
 25618 ;; *************** function _SetUartBaudRate *****************
 25619 ;; Defined at:
 25620 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25621 ;; Parameters:    Size  Location     Type
 25622 ;;  Module          1    wreg     unsigned char 
 25623 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 25624 ;;		 -> UartConfig(21), 
 25625 ;; Auto vars:     Size  Location     Type
 25626 ;;  Module          1   57[BANK0 ] unsigned char 
 25627 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 25628 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 25629 ;; Return value:  Size  Location     Type
 25630 ;;                  1    wreg      void 
 25631 ;; Registers used:
 25632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25633 ;; Tracked objects:
 25634 ;;		On entry : 0/0
 25635 ;;		On exit  : 0/0
 25636 ;;		Unchanged: 0/0
 25637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25638 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25639 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25641 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25642 ;;Total ram usage:        7 bytes
 25643 ;; Hardware stack levels used:    1
 25644 ;; Hardware stack levels required when called:   12
 25645 ;; This function calls:
 25646 ;;		___lldiv
 25647 ;;		___lmul
 25648 ;; This function is called by:
 25649 ;;		_Uart_InitUartModule
 25650 ;; This function uses a non-reentrant model
 25651 ;;
 25652                           
 25653                           	psect	text118
 25654  00294A                     __ptext118:
 25655                           	opt stack 0
 25656  00294A                     _SetUartBaudRate:
 25657                           	opt stack 14
 25658                           
 25659                           ; BSR set to: 0
 25660                           ;incstack = 0
 25661                           ;SetUartBaudRate@Module stored from wreg
 25662  00294A  0100               	movlb	0	; () banked
 25663  00294C  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 25664                           
 25665                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 25666  00294E  0E00               	movlw	0
 25667  002950  0100               	movlb	0	; () banked
 25668  002952  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 25669  002954  0E00               	movlw	0
 25670  002956  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 25671                           
 25672                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 25673  002958  0E00               	movlw	0
 25674  00295A  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 25675                           
 25676                           ; BSR set to: 0
 25677                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 25678  00295C  EE20 F002          	lfsr	2,2
 25679  002960  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25680  002962  26D9               	addwf	fsr2l,f,c
 25681  002964  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25682  002966  22DA               	addwfc	fsr2h,f,c
 25683  002968  50DF               	movf	indf2,w,c
 25684  00296A  A4D8               	btfss	status,2,c
 25685  00296C  D00B               	goto	l625
 25686                           
 25687                           ; BSR set to: 0
 25688  00296E  EE20 F002          	lfsr	2,2
 25689  002972  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25690  002974  26D9               	addwf	fsr2l,f,c
 25691  002976  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25692  002978  22DA               	addwfc	fsr2h,f,c
 25693  00297A  50DF               	movf	indf2,w,c
 25694  00297C  A4D8               	btfss	status,2,c
 25695  00297E  D002               	goto	l625
 25696                           
 25697                           ; BSR set to: 0
 25698                           ;uart_drv.c: 128: {
 25699                           ;uart_drv.c: 129: DivisionFactor = 64;
 25700  002980  0E40               	movlw	64
 25701  002982  D039               	goto	L38
 25702  002984                     l625:
 25703                           
 25704                           ; BSR set to: 0
 25705                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 25706                           
 25707                           ; BSR set to: 0
 25708  002984  EE20 F002          	lfsr	2,2
 25709  002988  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25710  00298A  26D9               	addwf	fsr2l,f,c
 25711  00298C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25712  00298E  22DA               	addwfc	fsr2h,f,c
 25713  002990  04DE               	decf	postinc2,w,c
 25714  002992  A4D8               	btfss	status,2,c
 25715  002994  D009               	goto	l627
 25716                           
 25717                           ; BSR set to: 0
 25718  002996  EE20 F002          	lfsr	2,2
 25719  00299A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25720  00299C  26D9               	addwf	fsr2l,f,c
 25721  00299E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25722  0029A0  22DA               	addwfc	fsr2h,f,c
 25723  0029A2  50DF               	movf	indf2,w,c
 25724  0029A4  B4D8               	btfsc	status,2,c
 25725  0029A6  D012               	goto	u11720
 25726  0029A8                     l627:
 25727                           
 25728                           ; BSR set to: 0
 25729                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 25730                           
 25731                           ; BSR set to: 0
 25732  0029A8  EE20 F002          	lfsr	2,2
 25733  0029AC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25734  0029AE  26D9               	addwf	fsr2l,f,c
 25735  0029B0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25736  0029B2  22DA               	addwfc	fsr2h,f,c
 25737  0029B4  50DF               	movf	indf2,w,c
 25738  0029B6  A4D8               	btfss	status,2,c
 25739  0029B8  D00B               	goto	l629
 25740                           
 25741                           ; BSR set to: 0
 25742  0029BA  EE20 F002          	lfsr	2,2
 25743  0029BE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25744  0029C0  26D9               	addwf	fsr2l,f,c
 25745  0029C2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25746  0029C4  22DA               	addwfc	fsr2h,f,c
 25747  0029C6  04DE               	decf	postinc2,w,c
 25748  0029C8  A4D8               	btfss	status,2,c
 25749  0029CA  D002               	goto	l629
 25750  0029CC                     u11720:
 25751                           
 25752                           ; BSR set to: 0
 25753                           ;uart_drv.c: 136: {
 25754                           ;uart_drv.c: 137: DivisionFactor = 16;
 25755  0029CC  0E10               	movlw	16
 25756  0029CE  D013               	goto	L38
 25757  0029D0                     l629:
 25758                           
 25759                           ; BSR set to: 0
 25760                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 25761                           
 25762                           ; BSR set to: 0
 25763  0029D0  EE20 F002          	lfsr	2,2
 25764  0029D4  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25765  0029D6  26D9               	addwf	fsr2l,f,c
 25766  0029D8  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25767  0029DA  22DA               	addwfc	fsr2h,f,c
 25768  0029DC  04DE               	decf	postinc2,w,c
 25769  0029DE  A4D8               	btfss	status,2,c
 25770  0029E0  D00B               	goto	l631
 25771                           
 25772                           ; BSR set to: 0
 25773  0029E2  EE20 F002          	lfsr	2,2
 25774  0029E6  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25775  0029E8  26D9               	addwf	fsr2l,f,c
 25776  0029EA  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25777  0029EC  22DA               	addwfc	fsr2h,f,c
 25778  0029EE  04DE               	decf	postinc2,w,c
 25779  0029F0  A4D8               	btfss	status,2,c
 25780  0029F2  D002               	goto	l631
 25781                           
 25782                           ; BSR set to: 0
 25783                           ;uart_drv.c: 140: {
 25784                           ;uart_drv.c: 141: DivisionFactor = 4;
 25785  0029F4  0E04               	movlw	4
 25786  0029F6                     L38:
 25787  0029F6  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 25788  0029F8                     l631:
 25789                           
 25790                           ; BSR set to: 0
 25791                           ;uart_drv.c: 146: }
 25792                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 25793                           
 25794                           ; BSR set to: 0
 25795                           
 25796                           ; BSR set to: 0
 25797                           
 25798                           ; BSR set to: 0
 25799                           
 25800                           ; BSR set to: 0
 25801                           
 25802                           ;uart_drv.c: 143: else
 25803                           ;uart_drv.c: 144: {
 25804                           
 25805                           ; BSR set to: 0
 25806  0029F8  EE20 F00D          	lfsr	2,13
 25807  0029FC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25808  0029FE  26D9               	addwf	fsr2l,f,c
 25809  002A00  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25810  002A02  22DA               	addwfc	fsr2h,f,c
 25811  002A04  CFDE F089          	movff	postinc2,___lldiv@dividend
 25812  002A08  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 25813  002A0C  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 25814  002A10  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 25815  002A14  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 25816  002A16  6F7D               	movwf	___lmul@multiplier& (0+255),b
 25817  002A18  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 25818  002A1A  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 25819  002A1C  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 25820  002A1E  EE20 F011          	lfsr	2,17
 25821  002A22  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25822  002A24  26D9               	addwf	fsr2l,f,c
 25823  002A26  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25824  002A28  22DA               	addwfc	fsr2h,f,c
 25825  002A2A  CFDE F081          	movff	postinc2,___lmul@multiplicand
 25826  002A2E  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 25827  002A32  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 25828  002A36  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 25829  002A3A  EC7A  F029         	call	___lmul	;wreg free
 25830  002A3E  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 25831  002A42  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 25832  002A46  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 25833  002A4A  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 25834  002A4E  EC90  F026         	call	___lldiv	;wreg free
 25835  002A52  0EFF               	movlw	255
 25836  002A54  0100               	movlb	0	; () banked
 25837  002A56  2589               	addwf	?___lldiv& (0+255),w,b
 25838  002A58  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 25839  002A5A  0EFF               	movlw	255
 25840  002A5C  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 25841  002A5E  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 25842                           
 25843                           ; BSR set to: 0
 25844                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 25845  002A60  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 25846  002A62  A4D8               	btfss	status,2,c
 25847  002A64  D005               	goto	l633
 25848                           
 25849                           ; BSR set to: 0
 25850                           ;uart_drv.c: 152: {
 25851                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 25852  002A66  0E00               	movlw	0
 25853  002A68  6E7F               	movwf	3967,c	;volatile
 25854                           
 25855                           ; BSR set to: 0
 25856                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 25857  002A6A  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 25858                           
 25859                           ;uart_drv.c: 156: }
 25860  002A6E  0012               	return	
 25861  002A70                     l633:
 25862                           
 25863                           ; BSR set to: 0
 25864                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 25865                           
 25866                           ; BSR set to: 0
 25867  002A70  0E02               	movlw	2
 25868  002A72  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 25869  002A74  A4D8               	btfss	status,2,c
 25870  002A76  0012               	return	
 25871                           
 25872                           ; BSR set to: 0
 25873                           ;uart_drv.c: 158: {
 25874                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 25875  002A78  0E00               	movlw	0
 25876  002A7A  6E7D               	movwf	3965,c	;volatile
 25877                           
 25878                           ; BSR set to: 0
 25879                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 25880  002A7C  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 25881                           
 25882                           ; BSR set to: 0
 25883  002A80  0012               	return	
 25884  002A82                     __end_of_SetUartBaudRate:
 25885                           	opt stack 0
 25886                           tosu	equ	0xFFF
 25887                           tosh	equ	0xFFE
 25888                           tosl	equ	0xFFD
 25889                           pclath	equ	0xFFA
 25890                           tblptru	equ	0xFF8
 25891                           tblptrh	equ	0xFF7
 25892                           tblptrl	equ	0xFF6
 25893                           tablat	equ	0xFF5
 25894                           prodh	equ	0xFF4
 25895                           prodl	equ	0xFF3
 25896                           intcon	equ	0xFF2
 25897                           intcon2	equ	0xFF1
 25898                           intcon3	equ	0xFF0
 25899                           indf0	equ	0xFEF
 25900                           postinc0	equ	0xFEE
 25901                           plusw0	equ	0xFEB
 25902                           fsr0h	equ	0xFEA
 25903                           fsr0l	equ	0xFE9
 25904                           wreg	equ	0xFE8
 25905                           indf1	equ	0xFE7
 25906                           postinc1	equ	0xFE6
 25907                           postdec1	equ	0xFE5
 25908                           plusw1	equ	0xFE3
 25909                           fsr1h	equ	0xFE2
 25910                           fsr1l	equ	0xFE1
 25911                           indf2	equ	0xFDF
 25912                           postinc2	equ	0xFDE
 25913                           postdec2	equ	0xFDD
 25914                           plusw2	equ	0xFDB
 25915                           fsr2h	equ	0xFDA
 25916                           fsr2l	equ	0xFD9
 25917                           status	equ	0xFD8
 25918                           
 25919 ;; *************** function ___lmul *****************
 25920 ;; Defined at:
 25921 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 25922 ;; Parameters:    Size  Location     Type
 25923 ;;  multiplier      4   29[BANK0 ] unsigned long 
 25924 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 25925 ;; Auto vars:     Size  Location     Type
 25926 ;;  product         4   37[BANK0 ] unsigned long 
 25927 ;; Return value:  Size  Location     Type
 25928 ;;                  4   29[BANK0 ] unsigned long 
 25929 ;; Registers used:
 25930 ;;		wreg, status,2, status,0
 25931 ;; Tracked objects:
 25932 ;;		On entry : 0/0
 25933 ;;		On exit  : 0/0
 25934 ;;		Unchanged: 0/0
 25935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25936 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25937 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25939 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25940 ;;Total ram usage:       12 bytes
 25941 ;; Hardware stack levels used:    1
 25942 ;; Hardware stack levels required when called:   11
 25943 ;; This function calls:
 25944 ;;		Nothing
 25945 ;; This function is called by:
 25946 ;;		_Tmr_TmrBPrSet
 25947 ;;		_SetUartBaudRate
 25948 ;;		_strtol
 25949 ;; This function uses a non-reentrant model
 25950 ;;
 25951                           
 25952                           	psect	text119
 25953  0052F4                     __ptext119:
 25954                           	opt stack 0
 25955  0052F4                     ___lmul:
 25956                           	opt stack 15
 25957                           
 25958                           ; BSR set to: 0
 25959                           ;incstack = 0
 25960  0052F4  0E00               	movlw	0
 25961  0052F6  0100               	movlb	0	; () banked
 25962  0052F8  6F85               	movwf	___lmul@product& (0+255),b
 25963  0052FA  0E00               	movlw	0
 25964  0052FC  6F86               	movwf	(___lmul@product+1)& (0+255),b
 25965  0052FE  0E00               	movlw	0
 25966  005300  6F87               	movwf	(___lmul@product+2)& (0+255),b
 25967  005302  0E00               	movlw	0
 25968  005304  6F88               	movwf	(___lmul@product+3)& (0+255),b
 25969  005306                     
 25970                           ; BSR set to: 0
 25971                           
 25972                           ; BSR set to: 0
 25973  005306  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 25974  005308  D008               	goto	l2708
 25975                           
 25976                           ; BSR set to: 0
 25977  00530A  5181               	movf	___lmul@multiplicand& (0+255),w,b
 25978  00530C  2785               	addwf	___lmul@product& (0+255),f,b
 25979  00530E  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 25980  005310  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 25981  005312  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 25982  005314  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 25983  005316  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 25984  005318  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 25985  00531A                     l2708:
 25986                           
 25987                           ; BSR set to: 0
 25988                           
 25989                           ; BSR set to: 0
 25990  00531A  90D8               	bcf	status,0,c
 25991  00531C  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 25992  00531E  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 25993  005320  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 25994  005322  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 25995                           
 25996                           ; BSR set to: 0
 25997  005324  90D8               	bcf	status,0,c
 25998  005326  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 25999  005328  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 26000  00532A  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 26001  00532C  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 26002  00532E  517D               	movf	___lmul@multiplier& (0+255),w,b
 26003  005330  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 26004  005332  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 26005  005334  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 26006  005336  A4D8               	btfss	status,2,c
 26007  005338  D7E6               	goto	l2707
 26008                           
 26009                           ; BSR set to: 0
 26010  00533A  C085  F07D         	movff	___lmul@product,?___lmul
 26011  00533E  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 26012  005342  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 26013  005346  C088  F080         	movff	___lmul@product+3,?___lmul+3
 26014                           
 26015                           ; BSR set to: 0
 26016  00534A  0012               	return		;funcret
 26017  00534C                     __end_of___lmul:
 26018                           	opt stack 0
 26019                           tosu	equ	0xFFF
 26020                           tosh	equ	0xFFE
 26021                           tosl	equ	0xFFD
 26022                           pclath	equ	0xFFA
 26023                           tblptru	equ	0xFF8
 26024                           tblptrh	equ	0xFF7
 26025                           tblptrl	equ	0xFF6
 26026                           tablat	equ	0xFF5
 26027                           prodh	equ	0xFF4
 26028                           prodl	equ	0xFF3
 26029                           intcon	equ	0xFF2
 26030                           intcon2	equ	0xFF1
 26031                           intcon3	equ	0xFF0
 26032                           indf0	equ	0xFEF
 26033                           postinc0	equ	0xFEE
 26034                           plusw0	equ	0xFEB
 26035                           fsr0h	equ	0xFEA
 26036                           fsr0l	equ	0xFE9
 26037                           wreg	equ	0xFE8
 26038                           indf1	equ	0xFE7
 26039                           postinc1	equ	0xFE6
 26040                           postdec1	equ	0xFE5
 26041                           plusw1	equ	0xFE3
 26042                           fsr1h	equ	0xFE2
 26043                           fsr1l	equ	0xFE1
 26044                           indf2	equ	0xFDF
 26045                           postinc2	equ	0xFDE
 26046                           postdec2	equ	0xFDD
 26047                           plusw2	equ	0xFDB
 26048                           fsr2h	equ	0xFDA
 26049                           fsr2l	equ	0xFD9
 26050                           status	equ	0xFD8
 26051                           
 26052 ;; *************** function _UartSetConfigLow *****************
 26053 ;; Defined at:
 26054 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26055 ;; Parameters:    Size  Location     Type
 26056 ;;		None
 26057 ;; Auto vars:     Size  Location     Type
 26058 ;;		None
 26059 ;; Return value:  Size  Location     Type
 26060 ;;                  1    wreg      void 
 26061 ;; Registers used:
 26062 ;;		wreg, status,2
 26063 ;; Tracked objects:
 26064 ;;		On entry : 0/0
 26065 ;;		On exit  : 0/0
 26066 ;;		Unchanged: 0/0
 26067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26072 ;;Total ram usage:        0 bytes
 26073 ;; Hardware stack levels used:    1
 26074 ;; Hardware stack levels required when called:   11
 26075 ;; This function calls:
 26076 ;;		Nothing
 26077 ;; This function is called by:
 26078 ;;		_ConfigureModem
 26079 ;; This function uses a non-reentrant model
 26080 ;;
 26081                           
 26082                           	psect	text120
 26083  00534C                     __ptext120:
 26084                           	opt stack 0
 26085  00534C                     _UartSetConfigLow:
 26086                           	opt stack 15
 26087                           
 26088                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 26089                           
 26090                           ; BSR set to: 0
 26091                           ;incstack = 0
 26092  00534C  0E01               	movlw	1
 26093  00534E  0103               	movlb	3	; () banked
 26094  005350  6F26               	movwf	_UartConfig& (0+255),b
 26095                           
 26096                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 26097  005352  0E00               	movlw	0
 26098  005354  6F27               	movwf	(_UartConfig+1)& (0+255),b
 26099                           
 26100                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 26101  005356  0E00               	movlw	0
 26102  005358  6F28               	movwf	(_UartConfig+2)& (0+255),b
 26103                           
 26104                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 26105  00535A  0E00               	movlw	0
 26106  00535C  6F29               	movwf	(_UartConfig+3)& (0+255),b
 26107                           
 26108                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 26109  00535E  0E00               	movlw	0
 26110  005360  6F2A               	movwf	(_UartConfig+4)& (0+255),b
 26111                           
 26112                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 26113  005362  0E00               	movlw	0
 26114  005364  6F2B               	movwf	(_UartConfig+5)& (0+255),b
 26115                           
 26116                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 26117  005366  0E01               	movlw	1
 26118  005368  6F2C               	movwf	(_UartConfig+6)& (0+255),b
 26119                           
 26120                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 26121  00536A  0E01               	movlw	1
 26122  00536C  6F2D               	movwf	(_UartConfig+7)& (0+255),b
 26123                           
 26124                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 26125  00536E  0E00               	movlw	0
 26126  005370  6F2E               	movwf	(_UartConfig+8)& (0+255),b
 26127                           
 26128                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 26129  005372  0E00               	movlw	0
 26130  005374  6F2F               	movwf	(_UartConfig+9)& (0+255),b
 26131                           
 26132                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 26133  005376  0E00               	movlw	0
 26134  005378  6F30               	movwf	(_UartConfig+10)& (0+255),b
 26135                           
 26136                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 26137  00537A  0E00               	movlw	0
 26138  00537C  6F31               	movwf	(_UartConfig+11)& (0+255),b
 26139                           
 26140                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 26141  00537E  0E01               	movlw	1
 26142  005380  6F32               	movwf	(_UartConfig+12)& (0+255),b
 26143                           
 26144                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 26145  005382  0E00               	movlw	0
 26146  005384  6F33               	movwf	(_UartConfig+13)& (0+255),b
 26147  005386  0E6C               	movlw	108
 26148  005388  6F34               	movwf	(_UartConfig+14)& (0+255),b
 26149  00538A  0EDC               	movlw	220
 26150  00538C  6F35               	movwf	(_UartConfig+15)& (0+255),b
 26151  00538E  0E02               	movlw	2
 26152  005390  6F36               	movwf	(_UartConfig+16)& (0+255),b
 26153                           
 26154                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 26155  005392  0E80               	movlw	128
 26156  005394  6F37               	movwf	(_UartConfig+17)& (0+255),b
 26157  005396  0E25               	movlw	37
 26158  005398  6F38               	movwf	(_UartConfig+18)& (0+255),b
 26159  00539A  0E00               	movlw	0
 26160  00539C  6F39               	movwf	(_UartConfig+19)& (0+255),b
 26161  00539E  0E00               	movlw	0
 26162  0053A0  6F3A               	movwf	(_UartConfig+20)& (0+255),b
 26163                           
 26164                           ; BSR set to: 3
 26165  0053A2  0012               	return		;funcret
 26166  0053A4                     __end_of_UartSetConfigLow:
 26167                           	opt stack 0
 26168                           tosu	equ	0xFFF
 26169                           tosh	equ	0xFFE
 26170                           tosl	equ	0xFFD
 26171                           pclath	equ	0xFFA
 26172                           tblptru	equ	0xFF8
 26173                           tblptrh	equ	0xFF7
 26174                           tblptrl	equ	0xFF6
 26175                           tablat	equ	0xFF5
 26176                           prodh	equ	0xFF4
 26177                           prodl	equ	0xFF3
 26178                           intcon	equ	0xFF2
 26179                           intcon2	equ	0xFF1
 26180                           intcon3	equ	0xFF0
 26181                           indf0	equ	0xFEF
 26182                           postinc0	equ	0xFEE
 26183                           plusw0	equ	0xFEB
 26184                           fsr0h	equ	0xFEA
 26185                           fsr0l	equ	0xFE9
 26186                           wreg	equ	0xFE8
 26187                           indf1	equ	0xFE7
 26188                           postinc1	equ	0xFE6
 26189                           postdec1	equ	0xFE5
 26190                           plusw1	equ	0xFE3
 26191                           fsr1h	equ	0xFE2
 26192                           fsr1l	equ	0xFE1
 26193                           indf2	equ	0xFDF
 26194                           postinc2	equ	0xFDE
 26195                           postdec2	equ	0xFDD
 26196                           plusw2	equ	0xFDB
 26197                           fsr2h	equ	0xFDA
 26198                           fsr2l	equ	0xFD9
 26199                           status	equ	0xFD8
 26200                           
 26201 ;; *************** function _CheckModem *****************
 26202 ;; Defined at:
 26203 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26204 ;; Parameters:    Size  Location     Type
 26205 ;;		None
 26206 ;; Auto vars:     Size  Location     Type
 26207 ;;		None
 26208 ;; Return value:  Size  Location     Type
 26209 ;;                  1    wreg      void 
 26210 ;; Registers used:
 26211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26212 ;; Tracked objects:
 26213 ;;		On entry : 0/0
 26214 ;;		On exit  : 0/0
 26215 ;;		Unchanged: 0/0
 26216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26221 ;;Total ram usage:        0 bytes
 26222 ;; Hardware stack levels used:    1
 26223 ;; Hardware stack levels required when called:   14
 26224 ;; This function calls:
 26225 ;;		_GenerateEvt
 26226 ;;		_OsTmr_GetTimerStatus
 26227 ;;		_OsTmr_StartTimer
 26228 ;;		_ReceiveEvt
 26229 ;;		_Uart_WriteConstString
 26230 ;; This function is called by:
 26231 ;;		_Mdm_MainTask
 26232 ;; This function uses a non-reentrant model
 26233 ;;
 26234                           
 26235                           	psect	text121
 26236  00242C                     __ptext121:
 26237                           	opt stack 0
 26238  00242C                     _CheckModem:
 26239                           	opt stack 13
 26240                           
 26241                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 26242                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 26243                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 26244                           
 26245                           ; BSR set to: 3
 26246                           ;incstack = 0
 26247  00242C  D096               	goto	l982
 26248  00242E                     
 26249                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 26250  00242E  0EF1               	movlw	low CheckModem@Timeout
 26251  002430  0100               	movlb	0	; () banked
 26252  002432  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26253  002434  0E03               	movlw	high CheckModem@Timeout
 26254  002436  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26255  002438  0ED0               	movlw	208
 26256  00243A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26257  00243C  0E07               	movlw	7
 26258  00243E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26259  002440  0E00               	movlw	0
 26260  002442  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26261  002444  0E00               	movlw	0
 26262  002446  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26263  002448  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 26264                           
 26265                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 26266  00244C  0E01               	movlw	1
 26267  00244E  6E2A               	movwf	CheckModem@CheckMdmSts,c
 26268                           
 26269                           ;mdm_gsm_gprs.c: 295: break;
 26270  002450  0012               	return	
 26271  002452                     
 26272                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 26273  002452  0EF1               	movlw	low CheckModem@Timeout
 26274  002454  0100               	movlb	0	; () banked
 26275  002456  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26276  002458  0E03               	movlw	high CheckModem@Timeout
 26277  00245A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26278  00245C  EC78  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 26279  002460  06E8               	decf	wreg,f,c
 26280  002462  A4D8               	btfss	status,2,c
 26281  002464  0012               	return	
 26282                           
 26283                           ;mdm_gsm_gprs.c: 300: {
 26284                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 26285  002466  0E02               	movlw	2
 26286  002468  6E2A               	movwf	CheckModem@CheckMdmSts,c
 26287                           
 26288                           ;mdm_gsm_gprs.c: 303: }
 26289                           ;mdm_gsm_gprs.c: 304: break;
 26290  00246A  0012               	return	
 26291  00246C                     
 26292                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 26293  00246C  0EE5               	movlw	low STR_1
 26294  00246E  0100               	movlb	0	; () banked
 26295  002470  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26296  002472  0EFF               	movlw	high STR_1
 26297  002474  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26298  002476  0E01               	movlw	1
 26299  002478  ECFB  F02C         	call	_Uart_WriteConstString
 26300                           
 26301                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 26302  00247C  0EF1               	movlw	low CheckModem@Timeout
 26303  00247E  0100               	movlb	0	; () banked
 26304  002480  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26305  002482  0E03               	movlw	high CheckModem@Timeout
 26306  002484  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26307  002486  0ED0               	movlw	208
 26308  002488  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26309  00248A  0E07               	movlw	7
 26310  00248C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26311  00248E  0E00               	movlw	0
 26312  002490  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26313  002492  0E00               	movlw	0
 26314  002494  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26315  002496  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 26316                           
 26317                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 26318  00249A  0E03               	movlw	3
 26319  00249C  6E2A               	movwf	CheckModem@CheckMdmSts,c
 26320                           
 26321                           ;mdm_gsm_gprs.c: 313: break;
 26322  00249E  0012               	return	
 26323  0024A0                     
 26324                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 26325  0024A0  0E3C               	movlw	low _NewStringReceived
 26326  0024A2  0100               	movlb	0	; () banked
 26327  0024A4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26328  0024A6  0E00               	movlw	high _NewStringReceived
 26329  0024A8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26330  0024AA  EC49  F02F         	call	_ReceiveEvt	;wreg free
 26331  0024AE  0900               	iorlw	0
 26332  0024B0  B4D8               	btfsc	status,2,c
 26333  0024B2  D02F               	goto	l989
 26334                           
 26335                           ;mdm_gsm_gprs.c: 318: {
 26336                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 26337  0024B4  CC58  FFE8         	movff	_RxBuffer,wreg
 26338  0024B8  0A4F               	xorlw	79
 26339  0024BA  A4D8               	btfss	status,2,c
 26340  0024BC  D005               	goto	u13570
 26341  0024BE  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26342  0024C2  0A4B               	xorlw	75
 26343  0024C4  B4D8               	btfsc	status,2,c
 26344  0024C6  D00A               	goto	u13590
 26345  0024C8                     u13570:
 26346  0024C8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26347  0024CC  0A4F               	xorlw	79
 26348  0024CE  A4D8               	btfss	status,2,c
 26349  0024D0  0012               	return	
 26350  0024D2  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 26351  0024D6  0A4B               	xorlw	75
 26352  0024D8  A4D8               	btfss	status,2,c
 26353  0024DA  0012               	return	
 26354  0024DC                     u13590:
 26355                           
 26356                           ;mdm_gsm_gprs.c: 321: {
 26357                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 26358  0024DC  0E02               	movlw	2
 26359  0024DE  0100               	movlb	0	; () banked
 26360  0024E0  6FD2               	movwf	_MdmStatus& (0+255),b
 26361                           
 26362                           ; BSR set to: 0
 26363                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 26364  0024E2  0EE2               	movlw	low _MdmOnOffPulseRequest
 26365  0024E4  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26366  0024E6  0E00               	movlw	high _MdmOnOffPulseRequest
 26367  0024E8  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26368  0024EA  EC0D  F031         	call	_GenerateEvt	;wreg free
 26369                           
 26370                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 26371  0024EE  0EF1               	movlw	low CheckModem@Timeout
 26372  0024F0  0100               	movlb	0	; () banked
 26373  0024F2  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26374  0024F4  0E03               	movlw	high CheckModem@Timeout
 26375  0024F6  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26376  0024F8  0EE8               	movlw	232
 26377  0024FA  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26378  0024FC  0E03               	movlw	3
 26379  0024FE  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26380  002500  0E00               	movlw	0
 26381  002502  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26382  002504  0E00               	movlw	0
 26383  002506  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26384  002508  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 26385                           
 26386                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 26387  00250C  0E04               	movlw	4
 26388  00250E  6E2A               	movwf	CheckModem@CheckMdmSts,c
 26389                           
 26390                           ;mdm_gsm_gprs.c: 329: }
 26391                           ;mdm_gsm_gprs.c: 330: }
 26392  002510  0012               	return	
 26393  002512                     l989:
 26394                           
 26395                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 26396  002512  0EF1               	movlw	low CheckModem@Timeout
 26397  002514  0100               	movlb	0	; () banked
 26398  002516  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26399  002518  0E03               	movlw	high CheckModem@Timeout
 26400  00251A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26401  00251C  EC78  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 26402  002520  06E8               	decf	wreg,f,c
 26403  002522  A4D8               	btfss	status,2,c
 26404  002524  0012               	return	
 26405                           
 26406                           ;mdm_gsm_gprs.c: 332: {
 26407                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 26408  002526  0E00               	movlw	0
 26409  002528  0100               	movlb	0	; () banked
 26410  00252A  6FD2               	movwf	_MdmStatus& (0+255),b
 26411                           
 26412                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 26413  00252C  0E01               	movlw	1
 26414  00252E  6E2B               	movwf	_ComChecCompleted,c
 26415                           
 26416                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 26417  002530  0E05               	movlw	5
 26418  002532  6E2A               	movwf	CheckModem@CheckMdmSts,c
 26419                           
 26420                           ; BSR set to: 0
 26421                           ;mdm_gsm_gprs.c: 343: }
 26422                           ;mdm_gsm_gprs.c: 344: break;
 26423                           
 26424                           ; BSR set to: 0
 26425                           
 26426                           ;mdm_gsm_gprs.c: 340: else
 26427                           ;mdm_gsm_gprs.c: 341: {
 26428                           
 26429                           ; BSR set to: 0
 26430                           
 26431                           ;mdm_gsm_gprs.c: 339: }
 26432  002534  0012               	return	
 26433  002536                     
 26434                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 26435                           
 26436                           ; BSR set to: 0
 26437  002536  0EF1               	movlw	low CheckModem@Timeout
 26438  002538  0100               	movlb	0	; () banked
 26439  00253A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26440  00253C  0E03               	movlw	high CheckModem@Timeout
 26441  00253E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26442  002540  EC78  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 26443  002544  06E8               	decf	wreg,f,c
 26444  002546  A4D8               	btfss	status,2,c
 26445  002548  0012               	return	
 26446                           
 26447                           ;mdm_gsm_gprs.c: 349: {
 26448                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 26449  00254A  0E00               	movlw	0
 26450  00254C  0100               	movlb	0	; () banked
 26451  00254E  6FD2               	movwf	_MdmStatus& (0+255),b
 26452                           
 26453                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 26454  002550  0E01               	movlw	1
 26455  002552  6E2B               	movwf	_ComChecCompleted,c
 26456                           
 26457                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 26458  002554  0E05               	movlw	5
 26459  002556  6E2A               	movwf	CheckModem@CheckMdmSts,c
 26460                           
 26461                           ; BSR set to: 0
 26462                           ;mdm_gsm_gprs.c: 365: }
 26463                           
 26464                           ; BSR set to: 0
 26465                           ;mdm_gsm_gprs.c: 364: break;
 26466                           
 26467                           ;mdm_gsm_gprs.c: 363: default:
 26468                           
 26469                           ; BSR set to: 0
 26470                           ;mdm_gsm_gprs.c: 361: break;
 26471                           
 26472                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 26473                           
 26474                           ; BSR set to: 0
 26475                           ;mdm_gsm_gprs.c: 356: }
 26476                           ;mdm_gsm_gprs.c: 357: break;
 26477  002558  0012               	return	
 26478  00255A                     l982:
 26479                           
 26480                           ; BSR set to: 0
 26481  00255A  502A               	movf	CheckModem@CheckMdmSts,w,c
 26482                           
 26483                           ; Switch size 1, requested type "space"
 26484                           ; Number of cases is 6, Range of values is 0 to 5
 26485                           ; switch strategies available:
 26486                           ; Name         Instructions Cycles
 26487                           ; simple_byte           19    10 (average)
 26488                           ;	Chosen strategy is simple_byte
 26489  00255C  0A00               	xorlw	0	; case 0
 26490  00255E  B4D8               	btfsc	status,2,c
 26491  002560  D766               	goto	l983
 26492  002562  0A01               	xorlw	1	; case 1
 26493  002564  B4D8               	btfsc	status,2,c
 26494  002566  D775               	goto	l985
 26495  002568  0A03               	xorlw	3	; case 2
 26496  00256A  B4D8               	btfsc	status,2,c
 26497  00256C  D77F               	goto	l987
 26498  00256E  0A01               	xorlw	1	; case 3
 26499  002570  B4D8               	btfsc	status,2,c
 26500  002572  D796               	goto	l988
 26501  002574  0A07               	xorlw	7	; case 4
 26502  002576  B4D8               	btfsc	status,2,c
 26503  002578  D7DE               	goto	l998
 26504  00257A  0A01               	xorlw	1	; case 5
 26505  00257C  0012               	return	
 26506  00257E                     __end_of_CheckModem:
 26507                           	opt stack 0
 26508                           tosu	equ	0xFFF
 26509                           tosh	equ	0xFFE
 26510                           tosl	equ	0xFFD
 26511                           pclath	equ	0xFFA
 26512                           tblptru	equ	0xFF8
 26513                           tblptrh	equ	0xFF7
 26514                           tblptrl	equ	0xFF6
 26515                           tablat	equ	0xFF5
 26516                           prodh	equ	0xFF4
 26517                           prodl	equ	0xFF3
 26518                           intcon	equ	0xFF2
 26519                           intcon2	equ	0xFF1
 26520                           intcon3	equ	0xFF0
 26521                           indf0	equ	0xFEF
 26522                           postinc0	equ	0xFEE
 26523                           plusw0	equ	0xFEB
 26524                           fsr0h	equ	0xFEA
 26525                           fsr0l	equ	0xFE9
 26526                           wreg	equ	0xFE8
 26527                           indf1	equ	0xFE7
 26528                           postinc1	equ	0xFE6
 26529                           postdec1	equ	0xFE5
 26530                           plusw1	equ	0xFE3
 26531                           fsr1h	equ	0xFE2
 26532                           fsr1l	equ	0xFE1
 26533                           indf2	equ	0xFDF
 26534                           postinc2	equ	0xFDE
 26535                           postdec2	equ	0xFDD
 26536                           plusw2	equ	0xFDB
 26537                           fsr2h	equ	0xFDA
 26538                           fsr2l	equ	0xFD9
 26539                           status	equ	0xFD8
 26540                           
 26541 ;; *************** function _MdmCntSm *****************
 26542 ;; Defined at:
 26543 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 26544 ;; Parameters:    Size  Location     Type
 26545 ;;		None
 26546 ;; Auto vars:     Size  Location     Type
 26547 ;;		None
 26548 ;; Return value:  Size  Location     Type
 26549 ;;                  1    wreg      void 
 26550 ;; Registers used:
 26551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26552 ;; Tracked objects:
 26553 ;;		On entry : 0/0
 26554 ;;		On exit  : 0/0
 26555 ;;		Unchanged: 0/0
 26556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26561 ;;Total ram usage:        0 bytes
 26562 ;; Hardware stack levels used:    1
 26563 ;; Hardware stack levels required when called:   12
 26564 ;; This function calls:
 26565 ;;		_InitModemInterface
 26566 ;;		_ReceiveEvt
 26567 ;; This function is called by:
 26568 ;;		_Mdm_DrvMainFn
 26569 ;; This function uses a non-reentrant model
 26570 ;;
 26571                           
 26572                           	psect	text122
 26573  0043A0                     __ptext122:
 26574                           	opt stack 0
 26575  0043A0                     _MdmCntSm:
 26576                           	opt stack 15
 26577                           
 26578                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 26579                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 26580                           ;mdm_drv.c: 204: switch (MdmCntState)
 26581                           
 26582                           ;incstack = 0
 26583  0043A0  D045               	goto	l315
 26584  0043A2                     
 26585                           ;mdm_drv.c: 208: InitModemInterface();
 26586  0043A2  ECBF  F031         	call	_InitModemInterface	;wreg free
 26587                           
 26588                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 26589  0043A6  0E01               	movlw	1
 26590  0043A8  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26591                           
 26592                           ;mdm_drv.c: 211: break;
 26593  0043AA  0012               	return	
 26594  0043AC                     
 26595                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 26596  0043AC  0EE2               	movlw	low _MdmOnOffPulseRequest
 26597  0043AE  0100               	movlb	0	; () banked
 26598  0043B0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26599  0043B2  0E00               	movlw	high _MdmOnOffPulseRequest
 26600  0043B4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26601  0043B6  EC49  F02F         	call	_ReceiveEvt	;wreg free
 26602  0043BA  0900               	iorlw	0
 26603  0043BC  B4D8               	btfsc	status,2,c
 26604  0043BE  D009               	goto	l319
 26605                           
 26606                           ;mdm_drv.c: 216: {
 26607                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 26608  0043C0  0E02               	movlw	2
 26609  0043C2  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26610                           
 26611                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 26612  0043C4  8284               	bsf	3972,1,c	;volatile
 26613                           
 26614                           ;mdm_drv.c: 222: Counter = 0;
 26615  0043C6  0E00               	movlw	0
 26616  0043C8  0102               	movlb	2	; () banked
 26617  0043CA  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 26618  0043CC  0E00               	movlw	0
 26619  0043CE  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 26620                           
 26621                           ;mdm_drv.c: 223: }
 26622  0043D0  0012               	return	
 26623  0043D2                     l319:
 26624                           
 26625                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 26626                           
 26627                           ; BSR set to: 2
 26628  0043D2  0E3D               	movlw	low _MdmResetRequest
 26629  0043D4  0100               	movlb	0	; () banked
 26630  0043D6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26631  0043D8  0E00               	movlw	high _MdmResetRequest
 26632  0043DA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26633  0043DC  EC49  F02F         	call	_ReceiveEvt	;wreg free
 26634  0043E0  0900               	iorlw	0
 26635  0043E2  B4D8               	btfsc	status,2,c
 26636  0043E4  0012               	return	
 26637                           
 26638                           ;mdm_drv.c: 225: {
 26639                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 26640  0043E6  0E03               	movlw	3
 26641  0043E8  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26642                           
 26643                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 26644  0043EA  8084               	bsf	3972,0,c	;volatile
 26645                           
 26646                           ;mdm_drv.c: 231: Counter = 0;
 26647  0043EC  0E00               	movlw	0
 26648  0043EE  0102               	movlb	2	; () banked
 26649  0043F0  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 26650  0043F2  0E00               	movlw	0
 26651  0043F4  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 26652                           
 26653                           ; BSR set to: 2
 26654                           ;mdm_drv.c: 236: }
 26655                           ;mdm_drv.c: 237: break;
 26656                           
 26657                           ; BSR set to: 2
 26658                           
 26659                           ;mdm_drv.c: 233: else
 26660                           ;mdm_drv.c: 234: {
 26661                           
 26662                           ; BSR set to: 2
 26663                           
 26664                           ;mdm_drv.c: 232: }
 26665  0043F6  0012               	return	
 26666  0043F8                     
 26667                           ;mdm_drv.c: 241: Counter++;
 26668                           
 26669                           ; BSR set to: 2
 26670  0043F8  0102               	movlb	2	; () banked
 26671  0043FA  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 26672  0043FC  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 26673                           
 26674                           ; BSR set to: 2
 26675                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 26676  0043FE  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 26677  004400  E104               	bnz	u13490
 26678  004402  0E96               	movlw	150
 26679  004404  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 26680  004406  A0D8               	btfss	status,0,c
 26681  004408  0012               	return	
 26682  00440A                     u13490:
 26683                           
 26684                           ; BSR set to: 2
 26685                           ;mdm_drv.c: 244: {
 26686                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 26687  00440A  9284               	bcf	3972,1,c	;volatile
 26688                           
 26689                           ; BSR set to: 2
 26690                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 26691  00440C  0E01               	movlw	1
 26692  00440E  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26693                           
 26694                           ; BSR set to: 2
 26695                           ;mdm_drv.c: 249: }
 26696                           ;mdm_drv.c: 250: break;
 26697  004410  0012               	return	
 26698  004412                     
 26699                           ;mdm_drv.c: 254: Counter++;
 26700                           
 26701                           ; BSR set to: 2
 26702  004412  0102               	movlb	2	; () banked
 26703  004414  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 26704  004416  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 26705                           
 26706                           ; BSR set to: 2
 26707                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 26708  004418  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 26709  00441A  E104               	bnz	u13500
 26710  00441C  0E0A               	movlw	10
 26711  00441E  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 26712  004420  A0D8               	btfss	status,0,c
 26713  004422  0012               	return	
 26714  004424                     u13500:
 26715                           
 26716                           ; BSR set to: 2
 26717                           ;mdm_drv.c: 257: {
 26718                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 26719  004424  9084               	bcf	3972,0,c	;volatile
 26720                           
 26721                           ; BSR set to: 2
 26722                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 26723  004426  0E01               	movlw	1
 26724  004428  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26725                           
 26726                           ; BSR set to: 2
 26727                           ;mdm_drv.c: 267: }
 26728                           
 26729                           ; BSR set to: 2
 26730                           ;mdm_drv.c: 266: break;
 26731                           
 26732                           ;mdm_drv.c: 265: default:
 26733                           
 26734                           ; BSR set to: 2
 26735                           ;mdm_drv.c: 262: }
 26736                           ;mdm_drv.c: 263: break;
 26737  00442A  0012               	return	
 26738  00442C                     l315:
 26739                           
 26740                           ; BSR set to: 2
 26741  00442C  502E               	movf	MdmCntSm@MdmCntState,w,c
 26742                           
 26743                           ; Switch size 1, requested type "space"
 26744                           ; Number of cases is 4, Range of values is 0 to 3
 26745                           ; switch strategies available:
 26746                           ; Name         Instructions Cycles
 26747                           ; simple_byte           13     7 (average)
 26748                           ;	Chosen strategy is simple_byte
 26749  00442E  0A00               	xorlw	0	; case 0
 26750  004430  B4D8               	btfsc	status,2,c
 26751  004432  D7B7               	goto	l316
 26752  004434  0A01               	xorlw	1	; case 1
 26753  004436  B4D8               	btfsc	status,2,c
 26754  004438  D7B9               	goto	l318
 26755  00443A  0A03               	xorlw	3	; case 2
 26756  00443C  B4D8               	btfsc	status,2,c
 26757  00443E  D7DC               	goto	l323
 26758  004440  0A01               	xorlw	1	; case 3
 26759  004442  A4D8               	btfss	status,2,c
 26760  004444  0012               	return	
 26761  004446  D7E5               	goto	l325
 26762  004448                     __end_of_MdmCntSm:
 26763                           	opt stack 0
 26764                           tosu	equ	0xFFF
 26765                           tosh	equ	0xFFE
 26766                           tosl	equ	0xFFD
 26767                           pclath	equ	0xFFA
 26768                           tblptru	equ	0xFF8
 26769                           tblptrh	equ	0xFF7
 26770                           tblptrl	equ	0xFF6
 26771                           tablat	equ	0xFF5
 26772                           prodh	equ	0xFF4
 26773                           prodl	equ	0xFF3
 26774                           intcon	equ	0xFF2
 26775                           intcon2	equ	0xFF1
 26776                           intcon3	equ	0xFF0
 26777                           indf0	equ	0xFEF
 26778                           postinc0	equ	0xFEE
 26779                           plusw0	equ	0xFEB
 26780                           fsr0h	equ	0xFEA
 26781                           fsr0l	equ	0xFE9
 26782                           wreg	equ	0xFE8
 26783                           indf1	equ	0xFE7
 26784                           postinc1	equ	0xFE6
 26785                           postdec1	equ	0xFE5
 26786                           plusw1	equ	0xFE3
 26787                           fsr1h	equ	0xFE2
 26788                           fsr1l	equ	0xFE1
 26789                           indf2	equ	0xFDF
 26790                           postinc2	equ	0xFDE
 26791                           postdec2	equ	0xFDD
 26792                           plusw2	equ	0xFDB
 26793                           fsr2h	equ	0xFDA
 26794                           fsr2l	equ	0xFD9
 26795                           status	equ	0xFD8
 26796                           
 26797 ;; *************** function _InitModemInterface *****************
 26798 ;; Defined at:
 26799 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 26800 ;; Parameters:    Size  Location     Type
 26801 ;;		None
 26802 ;; Auto vars:     Size  Location     Type
 26803 ;;		None
 26804 ;; Return value:  Size  Location     Type
 26805 ;;                  1    wreg      void 
 26806 ;; Registers used:
 26807 ;;		None
 26808 ;; Tracked objects:
 26809 ;;		On entry : 0/0
 26810 ;;		On exit  : 0/0
 26811 ;;		Unchanged: 0/0
 26812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26817 ;;Total ram usage:        0 bytes
 26818 ;; Hardware stack levels used:    1
 26819 ;; Hardware stack levels required when called:   11
 26820 ;; This function calls:
 26821 ;;		Nothing
 26822 ;; This function is called by:
 26823 ;;		_MdmCntSm
 26824 ;; This function uses a non-reentrant model
 26825 ;;
 26826                           
 26827                           	psect	text123
 26828  00637E                     __ptext123:
 26829                           	opt stack 0
 26830  00637E                     _InitModemInterface:
 26831                           	opt stack 15
 26832                           
 26833                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 26834                           
 26835                           ;incstack = 0
 26836  00637E  9096               	bcf	3990,0,c	;volatile
 26837                           
 26838                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 26839  006380  9296               	bcf	3990,1,c	;volatile
 26840                           
 26841                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 26842  006382  8496               	bsf	3990,2,c	;volatile
 26843  006384  0012               	return		;funcret
 26844  006386                     __end_of_InitModemInterface:
 26845                           	opt stack 0
 26846                           tosu	equ	0xFFF
 26847                           tosh	equ	0xFFE
 26848                           tosl	equ	0xFFD
 26849                           pclath	equ	0xFFA
 26850                           tblptru	equ	0xFF8
 26851                           tblptrh	equ	0xFF7
 26852                           tblptrl	equ	0xFF6
 26853                           tablat	equ	0xFF5
 26854                           prodh	equ	0xFF4
 26855                           prodl	equ	0xFF3
 26856                           intcon	equ	0xFF2
 26857                           intcon2	equ	0xFF1
 26858                           intcon3	equ	0xFF0
 26859                           indf0	equ	0xFEF
 26860                           postinc0	equ	0xFEE
 26861                           plusw0	equ	0xFEB
 26862                           fsr0h	equ	0xFEA
 26863                           fsr0l	equ	0xFE9
 26864                           wreg	equ	0xFE8
 26865                           indf1	equ	0xFE7
 26866                           postinc1	equ	0xFE6
 26867                           postdec1	equ	0xFE5
 26868                           plusw1	equ	0xFE3
 26869                           fsr1h	equ	0xFE2
 26870                           fsr1l	equ	0xFE1
 26871                           indf2	equ	0xFDF
 26872                           postinc2	equ	0xFDE
 26873                           postdec2	equ	0xFDD
 26874                           plusw2	equ	0xFDB
 26875                           fsr2h	equ	0xFDA
 26876                           fsr2l	equ	0xFD9
 26877                           status	equ	0xFD8
 26878                           
 26879 ;; *************** function _InitGprsNetwork *****************
 26880 ;; Defined at:
 26881 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 26882 ;; Parameters:    Size  Location     Type
 26883 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 26884 ;;		 -> NULL(0), 
 26885 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 26886 ;; Auto vars:     Size  Location     Type
 26887 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 26888 ;;  Index           1   50[BANK1 ] unsigned char 
 26889 ;; Return value:  Size  Location     Type
 26890 ;;                  1    wreg      enum E8922
 26891 ;; Registers used:
 26892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26893 ;; Tracked objects:
 26894 ;;		On entry : 0/0
 26895 ;;		On exit  : 0/0
 26896 ;;		Unchanged: 0/0
 26897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26898 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26899 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26900 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26901 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26902 ;;Total ram usage:       56 bytes
 26903 ;; Hardware stack levels used:    1
 26904 ;; Hardware stack levels required when called:   14
 26905 ;; This function calls:
 26906 ;;		_ClearBuffer
 26907 ;;		_OsTmr_GetTimerStatus
 26908 ;;		_OsTmr_StartTimer
 26909 ;;		_ReceiveEvt
 26910 ;;		_StringCopy
 26911 ;;		_Uart_WriteConstString
 26912 ;;		_Uart_WriteString
 26913 ;; This function is called by:
 26914 ;;		_MdmHttp_MainTask
 26915 ;; This function uses a non-reentrant model
 26916 ;;
 26917                           
 26918                           	psect	text124
 26919  000DC8                     __ptext124:
 26920                           	opt stack 0
 26921  000DC8                     _InitGprsNetwork:
 26922                           	opt stack 13
 26923                           
 26924                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 26925                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 26926                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 26927                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 26928                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 26929                           
 26930                           ;incstack = 0
 26931  000DC8  0E00               	movlw	0
 26932  000DCA  0101               	movlb	1	; () banked
 26933  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 26934                           
 26935                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 26936  000DCE  D154               	goto	l1216
 26937  000DD0                     
 26938                           ; BSR set to: 1
 26939                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 26940                           
 26941                           ; BSR set to: 1
 26942  000DD0  0EDB               	movlw	low _InitNetwork
 26943  000DD2  0100               	movlb	0	; () banked
 26944  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26945  000DD6  0E00               	movlw	high _InitNetwork
 26946  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26947  000DDA  EC49  F02F         	call	_ReceiveEvt	;wreg free
 26948  000DDE  0900               	iorlw	0
 26949  000DE0  B4D8               	btfsc	status,2,c
 26950  000DE2  D166               	goto	l1219
 26951                           
 26952                           ;mdm_gsm_gprs_http.c: 137: {
 26953                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 26954  000DE4  0E01               	movlw	1
 26955  000DE6  D141               	goto	L78
 26956  000DE8                     
 26957                           ; BSR set to: 1
 26958                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 26959                           
 26960                           ; BSR set to: 1
 26961  000DE8  0E96               	movlw	low STR_8
 26962  000DEA  0100               	movlb	0	; () banked
 26963  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26964  000DEE  0EFE               	movlw	high STR_8
 26965  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26966  000DF2  0E01               	movlw	1
 26967  000DF4  ECFB  F02C         	call	_Uart_WriteConstString
 26968                           
 26969                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 26970  000DF8  0E07               	movlw	7
 26971  000DFA  0101               	movlb	1	; () banked
 26972  000DFC  6FEC               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26973                           
 26974                           ; BSR set to: 1
 26975                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 26976  000DFE  0E02               	movlw	2
 26977  000E00  0100               	movlb	0	; () banked
 26978  000E02  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 26979                           
 26980                           ; BSR set to: 0
 26981                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 26982  000E04  0EF5               	movlw	low _ConnTimeout
 26983  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26984  000E08  0E02               	movlw	high _ConnTimeout
 26985  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26986  000E0C  0E20               	movlw	32
 26987  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26988  000E10  0E4E               	movlw	78
 26989  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26990  000E14  0E00               	movlw	0
 26991  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26992  000E18  0E00               	movlw	0
 26993  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26994  000E1C  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 26995  000E20  D0C7               	goto	l14522
 26996  000E22                     
 26997                           ; BSR set to: 1
 26998                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 26999                           
 27000                           ; BSR set to: 1
 27001  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 27002  000E24  0100               	movlb	0	; () banked
 27003  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27004  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 27005  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27006  000E2C  0E00               	movlw	0
 27007  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27008  000E30  0E32               	movlw	50
 27009  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27010  000E34  EC6B  F02E         	call	_ClearBuffer	;wreg free
 27011                           
 27012                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 27013  000E38  0ECA               	movlw	low STR_9
 27014  000E3A  0100               	movlb	0	; () banked
 27015  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27016  000E3E  0EFE               	movlw	high STR_9
 27017  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27018  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 27019  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 27020  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 27021  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27022  000E4A  0E00               	movlw	0
 27023  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27024  000E4E  0E14               	movlw	20
 27025  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 27026  000E52  EC91  F028         	call	_StringCopy	;wreg free
 27027                           
 27028                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 27029  000E56  0E00               	movlw	0
 27030  000E58  0101               	movlb	1	; () banked
 27031  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 27032  000E5C  D01C               	goto	l1222
 27033  000E5E                     
 27034                           ; BSR set to: 1
 27035                           ;mdm_gsm_gprs_http.c: 161: {
 27036                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 27037                           
 27038                           ; BSR set to: 1
 27039  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 27040  000E60  0D01               	mullw	1
 27041  000E62  50F3               	movf	prodl,w,c
 27042  000E64  0100               	movlb	0	; () banked
 27043  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 27044  000E68  6ED9               	movwf	fsr2l,c
 27045  000E6A  50F4               	movf	prodh,w,c
 27046  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 27047  000E6E  6EDA               	movwf	fsr2h,c
 27048  000E70  0101               	movlb	1	; () banked
 27049  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 27050  000E74  0100               	movlb	0	; () banked
 27051  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 27052  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 27053  000E7A  0E14               	movlw	20
 27054  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 27055  000E7E  0E00               	movlw	0
 27056  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 27057  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 27058  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 27059  000E86  6EE1               	movwf	fsr1l,c
 27060  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 27061  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 27062  000E8C  6EE2               	movwf	fsr1h,c
 27063  000E8E  CFDF FFE7          	movff	indf2,indf1
 27064                           
 27065                           ; BSR set to: 0
 27066  000E92  0101               	movlb	1	; () banked
 27067  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 27068  000E96                     l1222:
 27069                           
 27070                           ; BSR set to: 1
 27071                           
 27072                           ; BSR set to: 1
 27073  000E96  0100               	movlb	0	; () banked
 27074  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 27075  000E9A  0101               	movlb	1	; () banked
 27076  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 27077  000E9E  A0D8               	btfss	status,0,c
 27078  000EA0  D7DE               	goto	l1223
 27079                           
 27080                           ; BSR set to: 1
 27081                           ;mdm_gsm_gprs_http.c: 163: }
 27082                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 27083                           
 27084                           ; BSR set to: 1
 27085  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 27086  000EA4  0100               	movlb	0	; () banked
 27087  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 27088  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 27089  000EAA  0E14               	movlw	20
 27090  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 27091  000EAE  0E00               	movlw	0
 27092  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 27093  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 27094  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 27095  000EB6  6ED9               	movwf	fsr2l,c
 27096  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 27097  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 27098  000EBC  6EDA               	movwf	fsr2h,c
 27099  000EBE  0E22               	movlw	34
 27100  000EC0  6EDF               	movwf	indf2,c
 27101                           
 27102                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 27103  000EC2  0101               	movlb	1	; () banked
 27104  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 27105  000EC6  0100               	movlb	0	; () banked
 27106  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 27107  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 27108  000ECC  0E15               	movlw	21
 27109  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 27110  000ED0  0E00               	movlw	0
 27111  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 27112  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 27113  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 27114  000ED8  6ED9               	movwf	fsr2l,c
 27115  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 27116  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 27117  000EDE  6EDA               	movwf	fsr2h,c
 27118  000EE0  0E0D               	movlw	13
 27119  000EE2  6EDF               	movwf	indf2,c
 27120                           
 27121                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 27122  000EE4  0101               	movlb	1	; () banked
 27123  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 27124  000EE8  0100               	movlb	0	; () banked
 27125  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 27126  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 27127  000EEE  0E16               	movlw	22
 27128  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 27129  000EF2  0E00               	movlw	0
 27130  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 27131  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 27132  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 27133  000EFA  6ED9               	movwf	fsr2l,c
 27134  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 27135  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 27136  000F00  6EDA               	movwf	fsr2h,c
 27137  000F02  0E00               	movlw	0
 27138  000F04  6EDF               	movwf	indf2,c
 27139                           
 27140                           ; BSR set to: 0
 27141                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 27142  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 27143  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 27144  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 27145  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 27146  000F0E  0E01               	movlw	1
 27147  000F10  ECBC  F02D         	call	_Uart_WriteString
 27148                           
 27149                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 27150  000F14  0E07               	movlw	7
 27151  000F16  0101               	movlb	1	; () banked
 27152  000F18  6FEC               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 27153                           
 27154                           ; BSR set to: 1
 27155                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 27156  000F1A  0E03               	movlw	3
 27157  000F1C  0100               	movlb	0	; () banked
 27158  000F1E  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 27159                           
 27160                           ; BSR set to: 0
 27161                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 27162  000F20  0EF5               	movlw	low _ConnTimeout
 27163  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27164  000F24  0E02               	movlw	high _ConnTimeout
 27165  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27166  000F28  0E20               	movlw	32
 27167  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27168  000F2C  0E4E               	movlw	78
 27169  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27170  000F30  0E00               	movlw	0
 27171  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27172  000F34  0E00               	movlw	0
 27173  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27174  000F38  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 27175  000F3C  D039               	goto	l14522
 27176  000F3E                     
 27177                           ; BSR set to: 1
 27178                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 27179                           
 27180                           ; BSR set to: 1
 27181  000F3E  0E4A               	movlw	low STR_10
 27182  000F40  0100               	movlb	0	; () banked
 27183  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27184  000F44  0EFF               	movlw	high STR_10
 27185  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27186  000F48  0E01               	movlw	1
 27187  000F4A  ECFB  F02C         	call	_Uart_WriteConstString
 27188                           
 27189                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 27190  000F4E  0E07               	movlw	7
 27191  000F50  0101               	movlb	1	; () banked
 27192  000F52  6FEC               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 27193                           
 27194                           ; BSR set to: 1
 27195                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 27196  000F54  0E05               	movlw	5
 27197  000F56  0100               	movlb	0	; () banked
 27198  000F58  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 27199                           
 27200                           ; BSR set to: 0
 27201                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 27202  000F5A  0EF5               	movlw	low _ConnTimeout
 27203  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27204  000F5E  0E02               	movlw	high _ConnTimeout
 27205  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27206  000F62  0E20               	movlw	32
 27207  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27208  000F66  0E4E               	movlw	78
 27209  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27210  000F6A  0E00               	movlw	0
 27211  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27212  000F6E  0E00               	movlw	0
 27213  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27214  000F72  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 27215  000F76  D01C               	goto	l14522
 27216  000F78                     
 27217                           ; BSR set to: 1
 27218                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 27219                           
 27220                           ; BSR set to: 1
 27221  000F78  0E58               	movlw	low STR_11
 27222  000F7A  0100               	movlb	0	; () banked
 27223  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27224  000F7E  0EFF               	movlw	high STR_11
 27225  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27226  000F82  0E01               	movlw	1
 27227  000F84  ECFB  F02C         	call	_Uart_WriteConstString
 27228                           
 27229                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 27230  000F88  0E08               	movlw	8
 27231  000F8A  0101               	movlb	1	; () banked
 27232  000F8C  6FEC               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 27233                           
 27234                           ; BSR set to: 1
 27235                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 27236  000F8E  0E05               	movlw	5
 27237  000F90  0100               	movlb	0	; () banked
 27238  000F92  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 27239                           
 27240                           ; BSR set to: 0
 27241                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 27242  000F94  0EF5               	movlw	low _ConnTimeout
 27243  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27244  000F98  0E02               	movlw	high _ConnTimeout
 27245  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27246  000F9C  0E20               	movlw	32
 27247  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27248  000FA0  0E4E               	movlw	78
 27249  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27250  000FA4  0E00               	movlw	0
 27251  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27252  000FA8  0E00               	movlw	0
 27253  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27254  000FAC  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 27255  000FB0                     l14522:
 27256                           
 27257                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 27258  000FB0  0E01               	movlw	1
 27259  000FB2  0101               	movlb	1	; () banked
 27260  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 27261                           
 27262                           ;mdm_gsm_gprs_http.c: 201: break;
 27263  000FB6  D07C               	goto	l1219
 27264  000FB8                     
 27265                           ; BSR set to: 1
 27266                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 27267                           
 27268                           ; BSR set to: 1
 27269  000FB8  0E02               	movlw	2
 27270  000FBA  D05A               	goto	L77
 27271  000FBC                     
 27272                           ; BSR set to: 1
 27273                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 27274                           
 27275                           ; BSR set to: 1
 27276  000FBC  0E3C               	movlw	low _NewStringReceived
 27277  000FBE  0100               	movlb	0	; () banked
 27278  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27279  000FC2  0E00               	movlw	high _NewStringReceived
 27280  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27281  000FC6  EC49  F02F         	call	_ReceiveEvt	;wreg free
 27282  000FCA  0900               	iorlw	0
 27283  000FCC  B4D8               	btfsc	status,2,c
 27284  000FCE  D018               	goto	l1229
 27285                           
 27286                           ;mdm_gsm_gprs_http.c: 212: {
 27287                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 27288  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 27289  000FD4  0A4F               	xorlw	79
 27290  000FD6  A4D8               	btfss	status,2,c
 27291  000FD8  D06B               	goto	l1219
 27292  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27293  000FDE  0A4B               	xorlw	75
 27294  000FE0  A4D8               	btfss	status,2,c
 27295  000FE2  D066               	goto	l1219
 27296                           
 27297                           ;mdm_gsm_gprs_http.c: 215: {
 27298                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 27299  000FE4  C0D1  F1EC         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 27300                           
 27301                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 27302  000FE8  0E58               	movlw	low _RxBuffer
 27303  000FEA  0100               	movlb	0	; () banked
 27304  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27305  000FEE  0E0C               	movlw	high _RxBuffer
 27306  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27307  000FF2  0E01               	movlw	1
 27308  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27309  000FF6  0E90               	movlw	144
 27310  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27311  000FFA  EC6B  F02E         	call	_ClearBuffer	;wreg free
 27312                           
 27313                           ;mdm_gsm_gprs_http.c: 220: }
 27314                           ;mdm_gsm_gprs_http.c: 221: }
 27315  000FFE  D058               	goto	l1219
 27316  001000                     l1229:
 27317                           
 27318                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27319  001000  0EF5               	movlw	low _ConnTimeout
 27320  001002  0100               	movlb	0	; () banked
 27321  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27322  001006  0E02               	movlw	high _ConnTimeout
 27323  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27324  00100A  EC78  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27325  00100E  D029               	goto	L42
 27326  001010                     
 27327                           ; BSR set to: 1
 27328                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 27329                           
 27330                           ; BSR set to: 1
 27331  001010  0E3C               	movlw	low _NewStringReceived
 27332  001012  0100               	movlb	0	; () banked
 27333  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27334  001016  0E00               	movlw	high _NewStringReceived
 27335  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27336  00101A  EC49  F02F         	call	_ReceiveEvt	;wreg free
 27337  00101E  0900               	iorlw	0
 27338  001020  B4D8               	btfsc	status,2,c
 27339  001022  D018               	goto	l1234
 27340                           
 27341                           ;mdm_gsm_gprs_http.c: 232: {
 27342                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 27343  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 27344  001028  0A2B               	xorlw	43
 27345  00102A  A4D8               	btfss	status,2,c
 27346  00102C  D041               	goto	l1219
 27347  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27348  001032  0A53               	xorlw	83
 27349  001034  A4D8               	btfss	status,2,c
 27350  001036  D03C               	goto	l1219
 27351                           
 27352                           ;mdm_gsm_gprs_http.c: 235: {
 27353                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 27354  001038  C0D1  F1EC         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 27355                           
 27356                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 27357  00103C  0E58               	movlw	low _RxBuffer
 27358  00103E  0100               	movlb	0	; () banked
 27359  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27360  001042  0E0C               	movlw	high _RxBuffer
 27361  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27362  001046  0E01               	movlw	1
 27363  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27364  00104A  0E90               	movlw	144
 27365  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27366  00104E  EC6B  F02E         	call	_ClearBuffer	;wreg free
 27367                           
 27368                           ;mdm_gsm_gprs_http.c: 240: }
 27369                           ;mdm_gsm_gprs_http.c: 241: }
 27370  001052  D02E               	goto	l1219
 27371  001054                     l1234:
 27372                           
 27373                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27374  001054  0EF5               	movlw	low _ConnTimeout
 27375  001056  0100               	movlb	0	; () banked
 27376  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27377  00105A  0E02               	movlw	high _ConnTimeout
 27378  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27379  00105E  EC78  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27380  001062                     L42:
 27381  001062  06E8               	decf	wreg,f,c
 27382  001064  A4D8               	btfss	status,2,c
 27383  001066  D024               	goto	l1219
 27384                           
 27385                           ;mdm_gsm_gprs_http.c: 243: {
 27386                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 27387  001068  0E06               	movlw	6
 27388  00106A                     L78:
 27389  00106A  0101               	movlb	1	; () banked
 27390  00106C  D003               	goto	L41
 27391  00106E                     
 27392                           ; BSR set to: 1
 27393                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 27394                           
 27395                           ; BSR set to: 1
 27396  00106E  0E03               	movlw	3
 27397  001070                     L77:
 27398  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 27399                           
 27400                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 27401  001072  0E00               	movlw	0
 27402  001074                     L41:
 27403  001074  6FEC               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 27404                           
 27405                           ; BSR set to: 1
 27406                           ;mdm_gsm_gprs_http.c: 257: }
 27407                           
 27408                           ; BSR set to: 1
 27409                           ;mdm_gsm_gprs_http.c: 256: break;
 27410                           
 27411                           ;mdm_gsm_gprs_http.c: 255: default:
 27412                           
 27413                           ;mdm_gsm_gprs_http.c: 253: break;
 27414  001076  D01C               	goto	l1219
 27415  001078                     l1216:
 27416                           
 27417                           ; BSR set to: 1
 27418                           
 27419                           ; BSR set to: 1
 27420  001078  51EC               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 27421                           
 27422                           ; Switch size 1, requested type "space"
 27423                           ; Number of cases is 9, Range of values is 0 to 8
 27424                           ; switch strategies available:
 27425                           ; Name         Instructions Cycles
 27426                           ; simple_byte           28    15 (average)
 27427                           ;	Chosen strategy is simple_byte
 27428  00107A  0A00               	xorlw	0	; case 0
 27429  00107C  B4D8               	btfsc	status,2,c
 27430  00107E  D6A8               	goto	l1217
 27431  001080  0A01               	xorlw	1	; case 1
 27432  001082  B4D8               	btfsc	status,2,c
 27433  001084  D6B1               	goto	l1220
 27434  001086  0A03               	xorlw	3	; case 2
 27435  001088  B4D8               	btfsc	status,2,c
 27436  00108A  D6CB               	goto	l1221
 27437  00108C  0A01               	xorlw	1	; case 3
 27438  00108E  B4D8               	btfsc	status,2,c
 27439  001090  D756               	goto	l1225
 27440  001092  0A07               	xorlw	7	; case 4
 27441  001094  B4D8               	btfsc	status,2,c
 27442  001096  D770               	goto	l1226
 27443  001098  0A01               	xorlw	1	; case 5
 27444  00109A  B4D8               	btfsc	status,2,c
 27445  00109C  D78D               	goto	l1227
 27446  00109E  0A03               	xorlw	3	; case 6
 27447  0010A0  B4D8               	btfsc	status,2,c
 27448  0010A2  D7E5               	goto	l1238
 27449  0010A4  0A01               	xorlw	1	; case 7
 27450  0010A6  B4D8               	btfsc	status,2,c
 27451  0010A8  D789               	goto	l1228
 27452  0010AA  0A0F               	xorlw	15	; case 8
 27453  0010AC  B4D8               	btfsc	status,2,c
 27454  0010AE  D7B0               	goto	l1233
 27455  0010B0                     l1219:
 27456                           
 27457                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 27458                           
 27459                           ; BSR set to: 1
 27460  0010B0  0101               	movlb	1	; () banked
 27461  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 27462  0010B4  0012               	return	
 27463  0010B6                     __end_of_InitGprsNetwork:
 27464                           	opt stack 0
 27465                           tosu	equ	0xFFF
 27466                           tosh	equ	0xFFE
 27467                           tosl	equ	0xFFD
 27468                           pclath	equ	0xFFA
 27469                           tblptru	equ	0xFF8
 27470                           tblptrh	equ	0xFF7
 27471                           tblptrl	equ	0xFF6
 27472                           tablat	equ	0xFF5
 27473                           prodh	equ	0xFF4
 27474                           prodl	equ	0xFF3
 27475                           intcon	equ	0xFF2
 27476                           intcon2	equ	0xFF1
 27477                           intcon3	equ	0xFF0
 27478                           indf0	equ	0xFEF
 27479                           postinc0	equ	0xFEE
 27480                           plusw0	equ	0xFEB
 27481                           fsr0h	equ	0xFEA
 27482                           fsr0l	equ	0xFE9
 27483                           wreg	equ	0xFE8
 27484                           indf1	equ	0xFE7
 27485                           postinc1	equ	0xFE6
 27486                           postdec1	equ	0xFE5
 27487                           plusw1	equ	0xFE3
 27488                           fsr1h	equ	0xFE2
 27489                           fsr1l	equ	0xFE1
 27490                           indf2	equ	0xFDF
 27491                           postinc2	equ	0xFDE
 27492                           postdec2	equ	0xFDD
 27493                           plusw2	equ	0xFDB
 27494                           fsr2h	equ	0xFDA
 27495                           fsr2l	equ	0xFD9
 27496                           status	equ	0xFD8
 27497                           
 27498 ;; *************** function _HttpGetMethod *****************
 27499 ;; Defined at:
 27500 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 27501 ;; Parameters:    Size  Location     Type
 27502 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 27503 ;;		 -> HttpGetDataLocal(5), 
 27504 ;; Auto vars:     Size  Location     Type
 27505 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 27506 ;;  Index           1  200[BANK1 ] unsigned char 
 27507 ;; Return value:  Size  Location     Type
 27508 ;;                  1    wreg      enum E8922
 27509 ;; Registers used:
 27510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27511 ;; Tracked objects:
 27512 ;;		On entry : 0/0
 27513 ;;		On exit  : 0/0
 27514 ;;		Unchanged: 0/0
 27515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27516 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27517 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27518 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27519 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27520 ;;Total ram usage:      207 bytes
 27521 ;; Hardware stack levels used:    1
 27522 ;; Hardware stack levels required when called:   14
 27523 ;; This function calls:
 27524 ;;		_ClearBuffer
 27525 ;;		_OsTmr_GetTimerStatus
 27526 ;;		_OsTmr_StartTimer
 27527 ;;		_ReceiveEvt
 27528 ;;		_StringCopy
 27529 ;;		_Uart_WriteConstString
 27530 ;;		_Uart_WriteString
 27531 ;; This function is called by:
 27532 ;;		_MdmHttp_MainTask
 27533 ;; This function uses a non-reentrant model
 27534 ;;
 27535                           
 27536                           	psect	text125
 27537  0005EC                     __ptext125:
 27538                           	opt stack 0
 27539  0005EC                     _HttpGetMethod:
 27540                           	opt stack 13
 27541                           
 27542                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 27543                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 27544                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 27545                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 27546                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 27547                           
 27548                           ; BSR set to: 1
 27549                           ;incstack = 0
 27550  0005EC  0E00               	movlw	0
 27551  0005EE  0101               	movlb	1	; () banked
 27552  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 27553                           
 27554                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 27555  0005F2  D230               	goto	l1249
 27556  0005F4                     
 27557                           ; BSR set to: 1
 27558                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 27559                           
 27560                           ; BSR set to: 1
 27561  0005F4  0EDA               	movlw	low _GetMethod
 27562  0005F6  0100               	movlb	0	; () banked
 27563  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27564  0005FA  0E00               	movlw	high _GetMethod
 27565  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27566  0005FE  EC49  F02F         	call	_ReceiveEvt	;wreg free
 27567  000602  0900               	iorlw	0
 27568  000604  B4D8               	btfsc	status,2,c
 27569  000606  D257               	goto	l1252
 27570                           
 27571                           ;mdm_gsm_gprs_http.c: 284: {
 27572                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 27573  000608  0E01               	movlw	1
 27574  00060A  D18C               	goto	L44
 27575  00060C                     
 27576                           ; BSR set to: 1
 27577                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 27578                           
 27579                           ; BSR set to: 1
 27580  00060C  0E9C               	movlw	low STR_12
 27581  00060E  0100               	movlb	0	; () banked
 27582  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27583  000612  0EFF               	movlw	high STR_12
 27584  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27585  000616  0E01               	movlw	1
 27586  000618  ECFB  F02C         	call	_Uart_WriteConstString
 27587                           
 27588                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 27589  00061C  0E0A               	movlw	10
 27590  00061E  0101               	movlb	1	; () banked
 27591  000620  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27592                           
 27593                           ; BSR set to: 1
 27594                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 27595  000622  0E02               	movlw	2
 27596  000624  0100               	movlb	0	; () banked
 27597  000626  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27598                           
 27599                           ; BSR set to: 0
 27600                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 27601  000628  0EF5               	movlw	low _ConnTimeout
 27602  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27603  00062C  0E02               	movlw	high _ConnTimeout
 27604  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27605  000630  0E20               	movlw	32
 27606  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27607  000634  0E4E               	movlw	78
 27608  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27609  000638  0E00               	movlw	0
 27610  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27611  00063C  0E00               	movlw	0
 27612  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27613  000640  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 27614  000644  D1AF               	goto	l14688
 27615  000646                     
 27616                           ; BSR set to: 1
 27617                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 27618                           
 27619                           ; BSR set to: 1
 27620  000646  0E66               	movlw	low STR_13
 27621  000648  0100               	movlb	0	; () banked
 27622  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27623  00064C  0EFF               	movlw	high STR_13
 27624  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27625  000650  0E01               	movlw	1
 27626  000652  ECFB  F02C         	call	_Uart_WriteConstString
 27627                           
 27628                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 27629  000656  0E0A               	movlw	10
 27630  000658  0101               	movlb	1	; () banked
 27631  00065A  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27632                           
 27633                           ; BSR set to: 1
 27634                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 27635  00065C  0E03               	movlw	3
 27636  00065E  0100               	movlb	0	; () banked
 27637  000660  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27638                           
 27639                           ; BSR set to: 0
 27640                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 27641  000662  0EF5               	movlw	low _ConnTimeout
 27642  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27643  000666  0E02               	movlw	high _ConnTimeout
 27644  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27645  00066A  0E20               	movlw	32
 27646  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27647  00066E  0E4E               	movlw	78
 27648  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27649  000672  0E00               	movlw	0
 27650  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27651  000676  0E00               	movlw	0
 27652  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27653  00067A  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 27654  00067E  D192               	goto	l14688
 27655  000680                     
 27656                           ; BSR set to: 1
 27657                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 27658                           
 27659                           ; BSR set to: 1
 27660  000680  0EB5               	movlw	low STR_14
 27661  000682  0100               	movlb	0	; () banked
 27662  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27663  000686  0EFE               	movlw	high STR_14
 27664  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27665  00068A  0E01               	movlw	1
 27666  00068C  ECFB  F02C         	call	_Uart_WriteConstString
 27667                           
 27668                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 27669  000690  0E0A               	movlw	10
 27670  000692  0101               	movlb	1	; () banked
 27671  000694  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27672                           
 27673                           ; BSR set to: 1
 27674                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 27675  000696  0E04               	movlw	4
 27676  000698  0100               	movlb	0	; () banked
 27677  00069A  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27678                           
 27679                           ; BSR set to: 0
 27680                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 27681  00069C  0EF5               	movlw	low _ConnTimeout
 27682  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27683  0006A0  0E02               	movlw	high _ConnTimeout
 27684  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27685  0006A4  0E20               	movlw	32
 27686  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27687  0006A8  0E4E               	movlw	78
 27688  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27689  0006AC  0E00               	movlw	0
 27690  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27691  0006B0  0E00               	movlw	0
 27692  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27693  0006B4  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 27694  0006B8  D175               	goto	l14688
 27695  0006BA                     
 27696                           ; BSR set to: 1
 27697                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 27698                           
 27699                           ; BSR set to: 1
 27700  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 27701  0006BC  0100               	movlb	0	; () banked
 27702  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27703  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 27704  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27705  0006C4  0E00               	movlw	0
 27706  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27707  0006C8  0EC8               	movlw	200
 27708  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27709  0006CC  EC6B  F02E         	call	_ClearBuffer	;wreg free
 27710                           
 27711                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 27712  0006D0  0EF3               	movlw	low STR_15
 27713  0006D2  0100               	movlb	0	; () banked
 27714  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27715  0006D6  0EFE               	movlw	high STR_15
 27716  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27717  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 27718  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 27719  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 27720  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27721  0006E2  0E00               	movlw	0
 27722  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27723  0006E6  0E13               	movlw	19
 27724  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 27725  0006EA  EC91  F028         	call	_StringCopy	;wreg free
 27726                           
 27727                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 27728  0006EE  0E00               	movlw	0
 27729  0006F0  0101               	movlb	1	; () banked
 27730  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 27731  0006F4  D024               	goto	l1257
 27732  0006F6                     
 27733                           ; BSR set to: 1
 27734                           ;mdm_gsm_gprs_http.c: 332: {
 27735                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 27736                           
 27737                           ; BSR set to: 1
 27738  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27739  0006F8  0D01               	mullw	1
 27740  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 27741  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 27742  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 27743  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 27744  00070A  50F3               	movf	prodl,w,c
 27745  00070C  0100               	movlb	0	; () banked
 27746  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27747  000710  6ED9               	movwf	fsr2l,c
 27748  000712  50F4               	movf	prodh,w,c
 27749  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27750  000716  6EDA               	movwf	fsr2h,c
 27751  000718  0101               	movlb	1	; () banked
 27752  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27753  00071C  0100               	movlb	0	; () banked
 27754  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 27755  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 27756  000722  0E13               	movlw	19
 27757  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 27758  000726  0E00               	movlw	0
 27759  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 27760  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 27761  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 27762  00072E  6EE1               	movwf	fsr1l,c
 27763  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 27764  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 27765  000734  6EE2               	movwf	fsr1h,c
 27766  000736  CFDF FFE7          	movff	indf2,indf1
 27767                           
 27768                           ; BSR set to: 0
 27769  00073A  0101               	movlb	1	; () banked
 27770  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 27771  00073E                     l1257:
 27772                           
 27773                           ; BSR set to: 1
 27774                           
 27775                           ; BSR set to: 1
 27776  00073E  0100               	movlb	0	; () banked
 27777  000740  EE20 F002          	lfsr	2,2
 27778  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 27779  000746  26D9               	addwf	fsr2l,f,c
 27780  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 27781  00074A  22DA               	addwfc	fsr2h,f,c
 27782  00074C  50DE               	movf	postinc2,w,c
 27783  00074E  0101               	movlb	1	; () banked
 27784  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 27785  000752  A0D8               	btfss	status,0,c
 27786  000754  D7D0               	goto	l1258
 27787                           
 27788                           ; BSR set to: 1
 27789                           ;mdm_gsm_gprs_http.c: 334: }
 27790                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 27791                           
 27792                           ; BSR set to: 1
 27793  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27794  000758  0100               	movlb	0	; () banked
 27795  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27796  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27797  00075E  0E13               	movlw	19
 27798  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27799  000762  0E00               	movlw	0
 27800  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27801  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 27802  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27803  00076A  6ED9               	movwf	fsr2l,c
 27804  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 27805  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27806  000770  6EDA               	movwf	fsr2h,c
 27807  000772  0E22               	movlw	34
 27808  000774  6EDF               	movwf	indf2,c
 27809                           
 27810                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 27811  000776  0101               	movlb	1	; () banked
 27812  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27813  00077A  0100               	movlb	0	; () banked
 27814  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27815  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27816  000780  0E14               	movlw	20
 27817  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27818  000784  0E00               	movlw	0
 27819  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27820  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 27821  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27822  00078C  6ED9               	movwf	fsr2l,c
 27823  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 27824  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27825  000792  6EDA               	movwf	fsr2h,c
 27826  000794  0E0D               	movlw	13
 27827  000796  6EDF               	movwf	indf2,c
 27828                           
 27829                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 27830  000798  0101               	movlb	1	; () banked
 27831  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27832  00079C  0100               	movlb	0	; () banked
 27833  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27834  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27835  0007A2  0E15               	movlw	21
 27836  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27837  0007A6  0E00               	movlw	0
 27838  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27839  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 27840  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27841  0007AE  6ED9               	movwf	fsr2l,c
 27842  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 27843  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27844  0007B4  6EDA               	movwf	fsr2h,c
 27845  0007B6  0E00               	movlw	0
 27846  0007B8  6EDF               	movwf	indf2,c
 27847                           
 27848                           ; BSR set to: 0
 27849                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 27850  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 27851  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 27852  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 27853  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 27854  0007C2  0E01               	movlw	1
 27855  0007C4  ECBC  F02D         	call	_Uart_WriteString
 27856                           
 27857                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 27858  0007C8  0E0A               	movlw	10
 27859  0007CA  0101               	movlb	1	; () banked
 27860  0007CC  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27861                           
 27862                           ; BSR set to: 1
 27863                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 27864  0007CE  0E05               	movlw	5
 27865  0007D0  0100               	movlb	0	; () banked
 27866  0007D2  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27867                           
 27868                           ; BSR set to: 0
 27869                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 27870  0007D4  0EF5               	movlw	low _ConnTimeout
 27871  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27872  0007D8  0E02               	movlw	high _ConnTimeout
 27873  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27874  0007DC  0E20               	movlw	32
 27875  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27876  0007E0  0E4E               	movlw	78
 27877  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27878  0007E4  0E00               	movlw	0
 27879  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27880  0007E8  0E00               	movlw	0
 27881  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27882  0007EC  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 27883  0007F0  D0D9               	goto	l14688
 27884  0007F2                     
 27885                           ; BSR set to: 1
 27886                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 27887                           
 27888                           ; BSR set to: 1
 27889  0007F2  0E2B               	movlw	low STR_16
 27890  0007F4  0100               	movlb	0	; () banked
 27891  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27892  0007F8  0EFF               	movlw	high STR_16
 27893  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27894  0007FC  0E01               	movlw	1
 27895  0007FE  ECFB  F02C         	call	_Uart_WriteConstString
 27896                           
 27897                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 27898  000802  0E0A               	movlw	10
 27899  000804  0101               	movlb	1	; () banked
 27900  000806  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27901                           
 27902                           ; BSR set to: 1
 27903                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 27904  000808  0E06               	movlw	6
 27905  00080A  0100               	movlb	0	; () banked
 27906  00080C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27907                           
 27908                           ; BSR set to: 0
 27909                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 27910  00080E  0EF5               	movlw	low _ConnTimeout
 27911  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27912  000812  0E02               	movlw	high _ConnTimeout
 27913  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27914  000816  0E20               	movlw	32
 27915  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27916  00081A  0E4E               	movlw	78
 27917  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27918  00081E  0E00               	movlw	0
 27919  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27920  000822  0E00               	movlw	0
 27921  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27922  000826  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 27923                           
 27924                           ;mdm_gsm_gprs_http.c: 358: break;
 27925  00082A  D145               	goto	l1252
 27926  00082C                     
 27927                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 27928  00082C  0E07               	movlw	7
 27929  00082E  0101               	movlb	1	; () banked
 27930  000830  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27931                           
 27932                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 27933  000832  0E09               	movlw	9
 27934  000834  0100               	movlb	0	; () banked
 27935  000836  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27936                           
 27937                           ; BSR set to: 0
 27938                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 27939  000838  0EF5               	movlw	low _ConnTimeout
 27940  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27941  00083C  0E02               	movlw	high _ConnTimeout
 27942  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27943  000840  0E20               	movlw	32
 27944  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27945  000844  0E4E               	movlw	78
 27946  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27947  000848  0E00               	movlw	0
 27948  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27949  00084C  0E00               	movlw	0
 27950  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27951  000850  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 27952                           
 27953                           ;mdm_gsm_gprs_http.c: 371: break;
 27954  000854  D130               	goto	l1252
 27955  000856                     
 27956                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 27957  000856  0E82               	movlw	low STR_17
 27958  000858  0100               	movlb	0	; () banked
 27959  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27960  00085C  0EFF               	movlw	high STR_17
 27961  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27962  000860  0E01               	movlw	1
 27963  000862  ECFB  F02C         	call	_Uart_WriteConstString
 27964                           
 27965                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 27966  000866  0E0D               	movlw	13
 27967  000868  0101               	movlb	1	; () banked
 27968  00086A  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27969                           
 27970                           ; BSR set to: 1
 27971                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 27972  00086C  0E09               	movlw	9
 27973  00086E  0100               	movlb	0	; () banked
 27974  000870  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27975                           
 27976                           ; BSR set to: 0
 27977                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 27978  000872  0EF5               	movlw	low _ConnTimeout
 27979  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27980  000876  0E02               	movlw	high _ConnTimeout
 27981  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27982  00087A  0E20               	movlw	32
 27983  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27984  00087E  0E4E               	movlw	78
 27985  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27986  000882  0E00               	movlw	0
 27987  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27988  000886  0E00               	movlw	0
 27989  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27990  00088A  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 27991  00088E  D08A               	goto	l14688
 27992  000890                     
 27993                           ; BSR set to: 1
 27994                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 27995                           
 27996                           ; BSR set to: 1
 27997  000890  0E8F               	movlw	low STR_18
 27998  000892  0100               	movlb	0	; () banked
 27999  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28000  000896  0EFF               	movlw	high STR_18
 28001  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28002  00089A  0E01               	movlw	1
 28003  00089C  ECFB  F02C         	call	_Uart_WriteConstString
 28004                           
 28005                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 28006  0008A0  0E0A               	movlw	10
 28007  0008A2  0101               	movlb	1	; () banked
 28008  0008A4  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28009                           
 28010                           ; BSR set to: 1
 28011                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 28012  0008A6  0E0E               	movlw	14
 28013  0008A8  0100               	movlb	0	; () banked
 28014  0008AA  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28015                           
 28016                           ; BSR set to: 0
 28017                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 28018  0008AC  0EF5               	movlw	low _ConnTimeout
 28019  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28020  0008B0  0E02               	movlw	high _ConnTimeout
 28021  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28022  0008B4  0E20               	movlw	32
 28023  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28024  0008B8  0E4E               	movlw	78
 28025  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28026  0008BC  0E00               	movlw	0
 28027  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28028  0008C0  0E00               	movlw	0
 28029  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28030  0008C4  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 28031  0008C8  D06D               	goto	l14688
 28032  0008CA                     
 28033                           ; BSR set to: 1
 28034                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 28035                           
 28036                           ; BSR set to: 1
 28037  0008CA  0E3C               	movlw	low _NewStringReceived
 28038  0008CC  0100               	movlb	0	; () banked
 28039  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28040  0008D0  0E00               	movlw	high _NewStringReceived
 28041  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28042  0008D4  EC49  F02F         	call	_ReceiveEvt	;wreg free
 28043  0008D8  0900               	iorlw	0
 28044  0008DA  B4D8               	btfsc	status,2,c
 28045  0008DC  D018               	goto	l1265
 28046                           
 28047                           ;mdm_gsm_gprs_http.c: 400: {
 28048                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 28049  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 28050  0008E2  0A4F               	xorlw	79
 28051  0008E4  A4D8               	btfss	status,2,c
 28052  0008E6  D0E7               	goto	l1252
 28053  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28054  0008EC  0A4B               	xorlw	75
 28055  0008EE  A4D8               	btfss	status,2,c
 28056  0008F0  D0E2               	goto	l1252
 28057                           
 28058                           ;mdm_gsm_gprs_http.c: 403: {
 28059                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 28060  0008F2  C0D0  F1EB         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 28061                           
 28062                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 28063  0008F6  0E58               	movlw	low _RxBuffer
 28064  0008F8  0100               	movlb	0	; () banked
 28065  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28066  0008FC  0E0C               	movlw	high _RxBuffer
 28067  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28068  000900  0E01               	movlw	1
 28069  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28070  000904  0E90               	movlw	144
 28071  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28072  000908  EC6B  F02E         	call	_ClearBuffer	;wreg free
 28073                           
 28074                           ;mdm_gsm_gprs_http.c: 408: }
 28075                           ;mdm_gsm_gprs_http.c: 409: }
 28076  00090C  D0D4               	goto	l1252
 28077  00090E                     l1265:
 28078                           
 28079                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 28080  00090E  0EF5               	movlw	low _ConnTimeout
 28081  000910  0100               	movlb	0	; () banked
 28082  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28083  000914  0E02               	movlw	high _ConnTimeout
 28084  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28085  000918  EC78  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 28086  00091C                     L45:
 28087  00091C  06E8               	decf	wreg,f,c
 28088  00091E  A4D8               	btfss	status,2,c
 28089  000920  D0CA               	goto	l1252
 28090                           
 28091                           ;mdm_gsm_gprs_http.c: 411: {
 28092                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 28093  000922  0E0F               	movlw	15
 28094  000924                     L44:
 28095  000924  0101               	movlb	1	; () banked
 28096  000926  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28097                           
 28098                           ; BSR set to: 1
 28099                           ;mdm_gsm_gprs_http.c: 414: }
 28100                           ;mdm_gsm_gprs_http.c: 415: break;
 28101                           
 28102                           ; BSR set to: 1
 28103  000928  D0C6               	goto	l1252
 28104  00092A                     
 28105                           ; BSR set to: 1
 28106                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 28107                           
 28108                           ; BSR set to: 1
 28109  00092A  0E3C               	movlw	low _NewStringReceived
 28110  00092C  0100               	movlb	0	; () banked
 28111  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28112  000930  0E00               	movlw	high _NewStringReceived
 28113  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28114  000934  EC49  F02F         	call	_ReceiveEvt	;wreg free
 28115  000938  0900               	iorlw	0
 28116  00093A  B4D8               	btfsc	status,2,c
 28117  00093C  D018               	goto	l1270
 28118                           
 28119                           ;mdm_gsm_gprs_http.c: 420: {
 28120                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 28121  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 28122  000942  0A2B               	xorlw	43
 28123  000944  A4D8               	btfss	status,2,c
 28124  000946  D0B7               	goto	l1252
 28125  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28126  00094C  0A48               	xorlw	72
 28127  00094E  A4D8               	btfss	status,2,c
 28128  000950  D0B2               	goto	l1252
 28129                           
 28130                           ;mdm_gsm_gprs_http.c: 423: {
 28131                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 28132  000952  C0D0  F1EB         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 28133                           
 28134                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 28135  000956  0E58               	movlw	low _RxBuffer
 28136  000958  0100               	movlb	0	; () banked
 28137  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28138  00095C  0E0C               	movlw	high _RxBuffer
 28139  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28140  000960  0E01               	movlw	1
 28141  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28142  000964  0E90               	movlw	144
 28143  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28144  000968  EC6B  F02E         	call	_ClearBuffer	;wreg free
 28145                           
 28146                           ;mdm_gsm_gprs_http.c: 428: }
 28147                           ;mdm_gsm_gprs_http.c: 429: }
 28148  00096C  D0A4               	goto	l1252
 28149  00096E                     l1270:
 28150                           
 28151                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 28152  00096E  0EF5               	movlw	low _ConnTimeout
 28153  000970  0100               	movlb	0	; () banked
 28154  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28155  000974  0E02               	movlw	high _ConnTimeout
 28156  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28157  000978  EC78  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 28158  00097C  D7CF               	goto	L45
 28159  00097E                     
 28160                           ; BSR set to: 1
 28161                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 28162                           
 28163                           ; BSR set to: 1
 28164  00097E  0E0C               	movlw	12
 28165  000980  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28166                           
 28167                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 28168  000982  0E05               	movlw	5
 28169  000984  0100               	movlb	0	; () banked
 28170  000986  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28171                           
 28172                           ; BSR set to: 0
 28173                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 28174  000988  0EDB               	movlw	low _ConnWait
 28175  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28176  00098C  0E03               	movlw	high _ConnWait
 28177  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28178  000990  0EE8               	movlw	232
 28179  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28180  000994  0E03               	movlw	3
 28181  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28182  000998  0E00               	movlw	0
 28183  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28184  00099C  0E00               	movlw	0
 28185  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28186  0009A0  ECF1  F028         	call	_OsTmr_StartTimer	;wreg free
 28187  0009A4                     l14688:
 28188                           
 28189                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 28190  0009A4  0E01               	movlw	1
 28191  0009A6  0101               	movlb	1	; () banked
 28192  0009A8  D053               	goto	L47
 28193  0009AA                     
 28194                           ; BSR set to: 1
 28195                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 28196                           
 28197                           ; BSR set to: 1
 28198  0009AA  0EDB               	movlw	low _ConnWait
 28199  0009AC  0100               	movlb	0	; () banked
 28200  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28201  0009B0  0E03               	movlw	high _ConnWait
 28202  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28203  0009B4  EC78  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 28204  0009B8  06E8               	decf	wreg,f,c
 28205  0009BA  A4D8               	btfss	status,2,c
 28206  0009BC  D07C               	goto	l1252
 28207                           
 28208                           ;mdm_gsm_gprs_http.c: 450: {
 28209                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 28210  0009BE  C0D0  F1EB         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 28211                           
 28212                           ;mdm_gsm_gprs_http.c: 453: }
 28213                           ;mdm_gsm_gprs_http.c: 454: break;
 28214  0009C2  D079               	goto	l1252
 28215  0009C4                     
 28216                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 28217  0009C4  0E3C               	movlw	low _NewStringReceived
 28218  0009C6  0100               	movlb	0	; () banked
 28219  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28220  0009CA  0E00               	movlw	high _NewStringReceived
 28221  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28222  0009CE  EC49  F02F         	call	_ReceiveEvt	;wreg free
 28223  0009D2  0900               	iorlw	0
 28224  0009D4  B4D8               	btfsc	status,2,c
 28225  0009D6  D02D               	goto	l1278
 28226                           
 28227                           ;mdm_gsm_gprs_http.c: 459: {
 28228                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 28229  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 28230  0009DC  0A2B               	xorlw	43
 28231  0009DE  A4D8               	btfss	status,2,c
 28232  0009E0  D06A               	goto	l1252
 28233  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28234  0009E6  0A48               	xorlw	72
 28235  0009E8  A4D8               	btfss	status,2,c
 28236  0009EA  D065               	goto	l1252
 28237                           
 28238                           ;mdm_gsm_gprs_http.c: 462: {
 28239                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 28240  0009EC  C0D0  F1EB         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 28241                           
 28242                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 28243  0009F0  0E58               	movlw	low _RxBuffer
 28244  0009F2  0100               	movlb	0	; () banked
 28245  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 28246  0009F6  0E0C               	movlw	high _RxBuffer
 28247  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28248  0009FA  EE20 F003          	lfsr	2,3
 28249  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 28250  000A00  26D9               	addwf	fsr2l,f,c
 28251  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 28252  000A04  22DA               	addwfc	fsr2h,f,c
 28253  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 28254  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 28255  000A0E  0E01               	movlw	1
 28256  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 28257  000A12  0E90               	movlw	144
 28258  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 28259  000A16  EC91  F028         	call	_StringCopy	;wreg free
 28260                           
 28261                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 28262  000A1A  0E58               	movlw	low _RxBuffer
 28263  000A1C  0100               	movlb	0	; () banked
 28264  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28265  000A20  0E0C               	movlw	high _RxBuffer
 28266  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28267  000A24  0E01               	movlw	1
 28268  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28269  000A28  0E90               	movlw	144
 28270  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28271  000A2C  EC6B  F02E         	call	_ClearBuffer	;wreg free
 28272                           
 28273                           ;mdm_gsm_gprs_http.c: 469: }
 28274                           ;mdm_gsm_gprs_http.c: 470: }
 28275  000A30  D042               	goto	l1252
 28276  000A32                     l1278:
 28277                           
 28278                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 28279  000A32  0EF5               	movlw	low _ConnTimeout
 28280  000A34  0100               	movlb	0	; () banked
 28281  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28282  000A38  0E02               	movlw	high _ConnTimeout
 28283  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28284  000A3C  EC78  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 28285  000A40  D76D               	goto	L45
 28286  000A42                     
 28287                           ; BSR set to: 1
 28288                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 28289                           
 28290                           ; BSR set to: 1
 28291  000A42  0E00               	movlw	0
 28292  000A44  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28293                           
 28294                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 28295  000A46  0E02               	movlw	2
 28296  000A48  D003               	goto	L47
 28297  000A4A                     
 28298                           ; BSR set to: 1
 28299                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 28300                           
 28301                           ; BSR set to: 1
 28302  000A4A  0E00               	movlw	0
 28303  000A4C  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28304                           
 28305                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 28306  000A4E  0E03               	movlw	3
 28307  000A50                     L47:
 28308  000A50  6FEA               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 28309                           
 28310                           ; BSR set to: 1
 28311                           ;mdm_gsm_gprs_http.c: 494: }
 28312                           
 28313                           ; BSR set to: 1
 28314                           ;mdm_gsm_gprs_http.c: 493: break;
 28315                           
 28316                           ;mdm_gsm_gprs_http.c: 492: default:
 28317                           
 28318                           ;mdm_gsm_gprs_http.c: 490: break;
 28319  000A52  D031               	goto	l1252
 28320  000A54                     l1249:
 28321                           
 28322                           ; BSR set to: 1
 28323                           
 28324                           ; BSR set to: 1
 28325  000A54  51EB               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 28326                           
 28327                           ; Switch size 1, requested type "space"
 28328                           ; Number of cases is 16, Range of values is 0 to 15
 28329                           ; switch strategies available:
 28330                           ; Name         Instructions Cycles
 28331                           ; simple_byte           49    25 (average)
 28332                           ;	Chosen strategy is simple_byte
 28333  000A56  0A00               	xorlw	0	; case 0
 28334  000A58  B4D8               	btfsc	status,2,c
 28335  000A5A  D5CC               	goto	l1250
 28336  000A5C  0A01               	xorlw	1	; case 1
 28337  000A5E  B4D8               	btfsc	status,2,c
 28338  000A60  D5D5               	goto	l1253
 28339  000A62  0A03               	xorlw	3	; case 2
 28340  000A64  B4D8               	btfsc	status,2,c
 28341  000A66  D5EF               	goto	l1254
 28342  000A68  0A01               	xorlw	1	; case 3
 28343  000A6A  B4D8               	btfsc	status,2,c
 28344  000A6C  D609               	goto	l1255
 28345  000A6E  0A07               	xorlw	7	; case 4
 28346  000A70  B4D8               	btfsc	status,2,c
 28347  000A72  D623               	goto	l1256
 28348  000A74  0A01               	xorlw	1	; case 5
 28349  000A76  B4D8               	btfsc	status,2,c
 28350  000A78  D6BC               	goto	l1260
 28351  000A7A  0A03               	xorlw	3	; case 6
 28352  000A7C  B4D8               	btfsc	status,2,c
 28353  000A7E  D6D6               	goto	l1261
 28354  000A80  0A01               	xorlw	1	; case 7
 28355  000A82  B4D8               	btfsc	status,2,c
 28356  000A84  D752               	goto	l1269
 28357  000A86  0A0F               	xorlw	15	; case 8
 28358  000A88  B4D8               	btfsc	status,2,c
 28359  000A8A  D6E5               	goto	l1262
 28360  000A8C  0A01               	xorlw	1	; case 9
 28361  000A8E  B4D8               	btfsc	status,2,c
 28362  000A90  D6FF               	goto	l1263
 28363  000A92  0A03               	xorlw	3	; case 10
 28364  000A94  B4D8               	btfsc	status,2,c
 28365  000A96  D719               	goto	l1264
 28366  000A98  0A01               	xorlw	1	; case 11
 28367  000A9A  B4D8               	btfsc	status,2,c
 28368  000A9C  D770               	goto	l1274
 28369  000A9E  0A07               	xorlw	7	; case 12
 28370  000AA0  B4D8               	btfsc	status,2,c
 28371  000AA2  D783               	goto	l1275
 28372  000AA4  0A01               	xorlw	1	; case 13
 28373  000AA6  B4D8               	btfsc	status,2,c
 28374  000AA8  D78D               	goto	l1277
 28375  000AAA  0A03               	xorlw	3	; case 14
 28376  000AAC  B4D8               	btfsc	status,2,c
 28377  000AAE  D7C9               	goto	l1282
 28378  000AB0  0A01               	xorlw	1	; case 15
 28379  000AB2  B4D8               	btfsc	status,2,c
 28380  000AB4  D7CA               	goto	l1283
 28381  000AB6                     l1252:
 28382                           
 28383                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 28384                           
 28385                           ; BSR set to: 1
 28386  000AB6  0101               	movlb	1	; () banked
 28387  000AB8  51EA               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 28388  000ABA  0012               	return	
 28389  000ABC                     __end_of_HttpGetMethod:
 28390                           	opt stack 0
 28391                           tosu	equ	0xFFF
 28392                           tosh	equ	0xFFE
 28393                           tosl	equ	0xFFD
 28394                           pclath	equ	0xFFA
 28395                           tblptru	equ	0xFF8
 28396                           tblptrh	equ	0xFF7
 28397                           tblptrl	equ	0xFF6
 28398                           tablat	equ	0xFF5
 28399                           prodh	equ	0xFF4
 28400                           prodl	equ	0xFF3
 28401                           intcon	equ	0xFF2
 28402                           intcon2	equ	0xFF1
 28403                           intcon3	equ	0xFF0
 28404                           indf0	equ	0xFEF
 28405                           postinc0	equ	0xFEE
 28406                           plusw0	equ	0xFEB
 28407                           fsr0h	equ	0xFEA
 28408                           fsr0l	equ	0xFE9
 28409                           wreg	equ	0xFE8
 28410                           indf1	equ	0xFE7
 28411                           postinc1	equ	0xFE6
 28412                           postdec1	equ	0xFE5
 28413                           plusw1	equ	0xFE3
 28414                           fsr1h	equ	0xFE2
 28415                           fsr1l	equ	0xFE1
 28416                           indf2	equ	0xFDF
 28417                           postinc2	equ	0xFDE
 28418                           postdec2	equ	0xFDD
 28419                           plusw2	equ	0xFDB
 28420                           fsr2h	equ	0xFDA
 28421                           fsr2l	equ	0xFD9
 28422                           status	equ	0xFD8
 28423                           
 28424 ;; *************** function _Uart_WriteString *****************
 28425 ;; Defined at:
 28426 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28427 ;; Parameters:    Size  Location     Type
 28428 ;;  Module          1    wreg     unsigned char 
 28429 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 28430 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 28431 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 28432 ;; Auto vars:     Size  Location     Type
 28433 ;;  Module          1   34[BANK0 ] unsigned char 
 28434 ;; Return value:  Size  Location     Type
 28435 ;;                  1    wreg      void 
 28436 ;; Registers used:
 28437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28438 ;; Tracked objects:
 28439 ;;		On entry : 0/0
 28440 ;;		On exit  : 0/0
 28441 ;;		Unchanged: 0/0
 28442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28443 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28444 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28446 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28447 ;;Total ram usage:        3 bytes
 28448 ;; Hardware stack levels used:    1
 28449 ;; Hardware stack levels required when called:   12
 28450 ;; This function calls:
 28451 ;;		_UartTxBufferStatus
 28452 ;;		_UartWriteByte
 28453 ;; This function is called by:
 28454 ;;		_Mdm_SetSmsFormat
 28455 ;;		_InitGprsNetwork
 28456 ;;		_HttpGetMethod
 28457 ;;		_Mdm_PinUnlock
 28458 ;;		_Mdm_MakePhoneCall
 28459 ;; This function uses a non-reentrant model
 28460 ;;
 28461                           
 28462                           	psect	text126
 28463  005B78                     __ptext126:
 28464                           	opt stack 0
 28465  005B78                     _Uart_WriteString:
 28466                           	opt stack 12
 28467                           
 28468                           ; BSR set to: 1
 28469                           ;incstack = 0
 28470                           ;Uart_WriteString@Module stored from wreg
 28471  005B78  0100               	movlb	0	; () banked
 28472  005B7A  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 28473                           
 28474                           ;uart_drv.c: 521: while (*StringToWrite)
 28475  005B7C  D014               	goto	u11250
 28476  005B7E                     
 28477                           ;uart_drv.c: 522: {
 28478                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 28479  005B7E  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 28480  005B82  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 28481  005B86  50DF               	movf	indf2,w,c
 28482  005B88  0100               	movlb	0	; () banked
 28483  005B8A  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 28484  005B8C  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 28485  005B8E  EC85  F030         	call	_UartWriteByte
 28486                           
 28487                           ;uart_drv.c: 526: StringToWrite++;
 28488  005B92  0100               	movlb	0	; () banked
 28489  005B94  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 28490  005B96  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 28491  005B98                     
 28492                           ; BSR set to: 0
 28493                           
 28494                           ; BSR set to: 0
 28495  005B98  0100               	movlb	0	; () banked
 28496  005B9A  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 28497  005B9C  EC71  F02B         	call	_UartTxBufferStatus
 28498  005BA0  06E8               	decf	wreg,f,c
 28499  005BA2  B4D8               	btfsc	status,2,c
 28500  005BA4  D7F9               	goto	l709
 28501  005BA6                     u11250:
 28502  005BA6  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 28503  005BAA  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 28504  005BAE  50DF               	movf	indf2,w,c
 28505  005BB0  B4D8               	btfsc	status,2,c
 28506  005BB2  0012               	return	
 28507  005BB4  D7E4               	goto	l707
 28508  005BB6                     __end_of_Uart_WriteString:
 28509                           	opt stack 0
 28510                           tosu	equ	0xFFF
 28511                           tosh	equ	0xFFE
 28512                           tosl	equ	0xFFD
 28513                           pclath	equ	0xFFA
 28514                           tblptru	equ	0xFF8
 28515                           tblptrh	equ	0xFF7
 28516                           tblptrl	equ	0xFF6
 28517                           tablat	equ	0xFF5
 28518                           prodh	equ	0xFF4
 28519                           prodl	equ	0xFF3
 28520                           intcon	equ	0xFF2
 28521                           intcon2	equ	0xFF1
 28522                           intcon3	equ	0xFF0
 28523                           indf0	equ	0xFEF
 28524                           postinc0	equ	0xFEE
 28525                           plusw0	equ	0xFEB
 28526                           fsr0h	equ	0xFEA
 28527                           fsr0l	equ	0xFE9
 28528                           wreg	equ	0xFE8
 28529                           indf1	equ	0xFE7
 28530                           postinc1	equ	0xFE6
 28531                           postdec1	equ	0xFE5
 28532                           plusw1	equ	0xFE3
 28533                           fsr1h	equ	0xFE2
 28534                           fsr1l	equ	0xFE1
 28535                           indf2	equ	0xFDF
 28536                           postinc2	equ	0xFDE
 28537                           postdec2	equ	0xFDD
 28538                           plusw2	equ	0xFDB
 28539                           fsr2h	equ	0xFDA
 28540                           fsr2l	equ	0xFD9
 28541                           status	equ	0xFD8
 28542                           
 28543 ;; *************** function _Uart_WriteConstString *****************
 28544 ;; Defined at:
 28545 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28546 ;; Parameters:    Size  Location     Type
 28547 ;;  Module          1    wreg     unsigned char 
 28548 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 28549 ;;		 -> STR_30(12), STR_29(19), STR_20(14), STR_19(14), 
 28550 ;;		 -> STR_18(13), STR_17(13), STR_16(17), STR_14(21), 
 28551 ;;		 -> STR_13(14), STR_12(13), STR_11(14), STR_10(14), 
 28552 ;;		 -> STR_8(31), STR_7(5), STR_6(5), STR_4(12), 
 28553 ;;		 -> STR_3(7), STR_2(14), STR_1(5), 
 28554 ;; Auto vars:     Size  Location     Type
 28555 ;;  Module          1   34[BANK0 ] unsigned char 
 28556 ;; Return value:  Size  Location     Type
 28557 ;;                  1    wreg      void 
 28558 ;; Registers used:
 28559 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28560 ;; Tracked objects:
 28561 ;;		On entry : 0/0
 28562 ;;		On exit  : 0/0
 28563 ;;		Unchanged: 0/0
 28564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28565 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28566 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28568 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28569 ;;Total ram usage:        3 bytes
 28570 ;; Hardware stack levels used:    1
 28571 ;; Hardware stack levels required when called:   12
 28572 ;; This function calls:
 28573 ;;		_UartTxBufferStatus
 28574 ;;		_UartWriteByte
 28575 ;; This function is called by:
 28576 ;;		_CheckModem
 28577 ;;		_ConfigureModem
 28578 ;;		_GetSmsSm
 28579 ;;		_Mdm_HangPhoneCall
 28580 ;;		_InitGprsNetwork
 28581 ;;		_HttpGetMethod
 28582 ;;		_initGprsModem
 28583 ;;		_Mdm_GetPhoneCall
 28584 ;;		_MdmHttp_SetSsl
 28585 ;; This function uses a non-reentrant model
 28586 ;;
 28587                           
 28588                           	psect	text127
 28589  0059F6                     __ptext127:
 28590                           	opt stack 0
 28591  0059F6                     _Uart_WriteConstString:
 28592                           	opt stack 13
 28593                           
 28594                           ;incstack = 0
 28595                           ;Uart_WriteConstString@Module stored from wreg
 28596  0059F6  0100               	movlb	0	; () banked
 28597  0059F8  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 28598                           
 28599                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 28600  0059FA  D015               	goto	u11770
 28601  0059FC                     
 28602                           ;uart_drv.c: 500: {
 28603                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 28604  0059FC  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 28605  005A00  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 28606  005A04                     	if	0	;tblptru may be non-zero
 28607  005A04                     	endif
 28608  005A04                     	if	0	;tblptru may be non-zero
 28609  005A04                     	endif
 28610  005A04  0008               	tblrd		*
 28611  005A06  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 28612  005A0A  0100               	movlb	0	; () banked
 28613  005A0C  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 28614  005A0E  EC85  F030         	call	_UartWriteByte
 28615                           
 28616                           ;uart_drv.c: 504: ConstStringToWrite++;
 28617  005A12  0100               	movlb	0	; () banked
 28618  005A14  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 28619  005A16  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 28620  005A18                     
 28621                           ; BSR set to: 0
 28622                           
 28623                           ; BSR set to: 0
 28624  005A18  0100               	movlb	0	; () banked
 28625  005A1A  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 28626  005A1C  EC71  F02B         	call	_UartTxBufferStatus
 28627  005A20  06E8               	decf	wreg,f,c
 28628  005A22  B4D8               	btfsc	status,2,c
 28629  005A24  D7F9               	goto	l700
 28630  005A26                     u11770:
 28631  005A26  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 28632  005A2A  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 28633  005A2E                     	if	0	;tblptru may be non-zero
 28634  005A2E                     	endif
 28635  005A2E                     	if	0	;tblptru may be non-zero
 28636  005A2E                     	endif
 28637  005A2E  0008               	tblrd		*
 28638  005A30  50F5               	movf	tablat,w,c
 28639  005A32  0900               	iorlw	0
 28640  005A34  B4D8               	btfsc	status,2,c
 28641  005A36  0012               	return	
 28642  005A38  D7E1               	goto	l698
 28643  005A3A                     __end_of_Uart_WriteConstString:
 28644                           	opt stack 0
 28645                           tosu	equ	0xFFF
 28646                           tosh	equ	0xFFE
 28647                           tosl	equ	0xFFD
 28648                           pclath	equ	0xFFA
 28649                           tblptru	equ	0xFF8
 28650                           tblptrh	equ	0xFF7
 28651                           tblptrl	equ	0xFF6
 28652                           tablat	equ	0xFF5
 28653                           prodh	equ	0xFF4
 28654                           prodl	equ	0xFF3
 28655                           intcon	equ	0xFF2
 28656                           intcon2	equ	0xFF1
 28657                           intcon3	equ	0xFF0
 28658                           indf0	equ	0xFEF
 28659                           postinc0	equ	0xFEE
 28660                           plusw0	equ	0xFEB
 28661                           fsr0h	equ	0xFEA
 28662                           fsr0l	equ	0xFE9
 28663                           wreg	equ	0xFE8
 28664                           indf1	equ	0xFE7
 28665                           postinc1	equ	0xFE6
 28666                           postdec1	equ	0xFE5
 28667                           plusw1	equ	0xFE3
 28668                           fsr1h	equ	0xFE2
 28669                           fsr1l	equ	0xFE1
 28670                           indf2	equ	0xFDF
 28671                           postinc2	equ	0xFDE
 28672                           postdec2	equ	0xFDD
 28673                           plusw2	equ	0xFDB
 28674                           fsr2h	equ	0xFDA
 28675                           fsr2l	equ	0xFD9
 28676                           status	equ	0xFD8
 28677                           
 28678 ;; *************** function _UartWriteByte *****************
 28679 ;; Defined at:
 28680 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28681 ;; Parameters:    Size  Location     Type
 28682 ;;  Module          1    wreg     unsigned char 
 28683 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 28684 ;; Auto vars:     Size  Location     Type
 28685 ;;  Module          1   30[BANK0 ] unsigned char 
 28686 ;; Return value:  Size  Location     Type
 28687 ;;                  1    wreg      void 
 28688 ;; Registers used:
 28689 ;;		wreg, status,2, status,0
 28690 ;; Tracked objects:
 28691 ;;		On entry : 0/0
 28692 ;;		On exit  : 0/0
 28693 ;;		Unchanged: 0/0
 28694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28695 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28696 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28698 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28699 ;;Total ram usage:        2 bytes
 28700 ;; Hardware stack levels used:    1
 28701 ;; Hardware stack levels required when called:   11
 28702 ;; This function calls:
 28703 ;;		Nothing
 28704 ;; This function is called by:
 28705 ;;		_Uart_WriteConstString
 28706 ;;		_Uart_WriteString
 28707 ;;		_Uart_WriteStringLen
 28708 ;; This function uses a non-reentrant model
 28709 ;;
 28710                           
 28711                           	psect	text128
 28712  00610A                     __ptext128:
 28713                           	opt stack 0
 28714  00610A                     _UartWriteByte:
 28715                           	opt stack 13
 28716                           
 28717                           ;incstack = 0
 28718                           ;UartWriteByte@Module stored from wreg
 28719  00610A  0100               	movlb	0	; () banked
 28720  00610C  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 28721                           
 28722                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 28723  00610E  0100               	movlb	0	; () banked
 28724  006110  057E               	decf	UartWriteByte@Module& (0+255),w,b
 28725  006112  A4D8               	btfss	status,2,c
 28726  006114  D003               	goto	l639
 28727                           
 28728                           ; BSR set to: 0
 28729                           ;uart_drv.c: 176: {
 28730                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 28731  006116  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 28732                           
 28733                           ;uart_drv.c: 179: }
 28734  00611A  0012               	return	
 28735  00611C                     l639:
 28736                           
 28737                           ; BSR set to: 0
 28738                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 28739                           
 28740                           ; BSR set to: 0
 28741  00611C  0E02               	movlw	2
 28742  00611E  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 28743  006120  A4D8               	btfss	status,2,c
 28744  006122  0012               	return	
 28745                           
 28746                           ; BSR set to: 0
 28747                           ;uart_drv.c: 181: {
 28748                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 28749  006124  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 28750                           
 28751                           ; BSR set to: 0
 28752  006128  0012               	return	
 28753  00612A                     __end_of_UartWriteByte:
 28754                           	opt stack 0
 28755                           tosu	equ	0xFFF
 28756                           tosh	equ	0xFFE
 28757                           tosl	equ	0xFFD
 28758                           pclath	equ	0xFFA
 28759                           tblptru	equ	0xFF8
 28760                           tblptrh	equ	0xFF7
 28761                           tblptrl	equ	0xFF6
 28762                           tablat	equ	0xFF5
 28763                           prodh	equ	0xFF4
 28764                           prodl	equ	0xFF3
 28765                           intcon	equ	0xFF2
 28766                           intcon2	equ	0xFF1
 28767                           intcon3	equ	0xFF0
 28768                           indf0	equ	0xFEF
 28769                           postinc0	equ	0xFEE
 28770                           plusw0	equ	0xFEB
 28771                           fsr0h	equ	0xFEA
 28772                           fsr0l	equ	0xFE9
 28773                           wreg	equ	0xFE8
 28774                           indf1	equ	0xFE7
 28775                           postinc1	equ	0xFE6
 28776                           postdec1	equ	0xFE5
 28777                           plusw1	equ	0xFE3
 28778                           fsr1h	equ	0xFE2
 28779                           fsr1l	equ	0xFE1
 28780                           indf2	equ	0xFDF
 28781                           postinc2	equ	0xFDE
 28782                           postdec2	equ	0xFDD
 28783                           plusw2	equ	0xFDB
 28784                           fsr2h	equ	0xFDA
 28785                           fsr2l	equ	0xFD9
 28786                           status	equ	0xFD8
 28787                           
 28788 ;; *************** function _UartTxBufferStatus *****************
 28789 ;; Defined at:
 28790 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28791 ;; Parameters:    Size  Location     Type
 28792 ;;  Module          1    wreg     unsigned char 
 28793 ;; Auto vars:     Size  Location     Type
 28794 ;;  Module          1   30[BANK0 ] unsigned char 
 28795 ;;  TxBufferStat    1   31[BANK0 ] enum E9034
 28796 ;; Return value:  Size  Location     Type
 28797 ;;                  1    wreg      enum E9034
 28798 ;; Registers used:
 28799 ;;		wreg, status,2, status,0
 28800 ;; Tracked objects:
 28801 ;;		On entry : 0/0
 28802 ;;		On exit  : 0/0
 28803 ;;		Unchanged: 0/0
 28804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28806 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28807 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28808 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28809 ;;Total ram usage:        3 bytes
 28810 ;; Hardware stack levels used:    1
 28811 ;; Hardware stack levels required when called:   11
 28812 ;; This function calls:
 28813 ;;		Nothing
 28814 ;; This function is called by:
 28815 ;;		_Uart_WriteConstString
 28816 ;;		_Uart_WriteString
 28817 ;;		_Uart_WriteStringLen
 28818 ;; This function uses a non-reentrant model
 28819 ;;
 28820                           
 28821                           	psect	text129
 28822  0056E2                     __ptext129:
 28823                           	opt stack 0
 28824  0056E2                     _UartTxBufferStatus:
 28825                           	opt stack 13
 28826                           
 28827                           ; BSR set to: 0
 28828                           ;incstack = 0
 28829                           ;UartTxBufferStatus@Module stored from wreg
 28830  0056E2  0100               	movlb	0	; () banked
 28831  0056E4  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 28832                           
 28833                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 28834  0056E6  0E00               	movlw	0
 28835  0056E8  0100               	movlb	0	; () banked
 28836  0056EA  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 28837                           
 28838                           ; BSR set to: 0
 28839                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 28840  0056EC  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 28841  0056EE  A4D8               	btfss	status,2,c
 28842  0056F0  D00B               	goto	l651
 28843                           
 28844                           ; BSR set to: 0
 28845                           ;uart_drv.c: 228: {
 28846                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 28847  0056F2  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 28848  0056F6  90D8               	bcf	status,0,c
 28849  0056F8  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28850  0056FA  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 28851  0056FC  D002               	goto	l652
 28852  0056FE                     u10680:
 28853                           
 28854                           ; BSR set to: 0
 28855                           ;uart_drv.c: 231: {
 28856                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 28857  0056FE  0E01               	movlw	1
 28858  005700  D014               	goto	L50
 28859  005702                     l652:
 28860                           
 28861                           ; BSR set to: 0
 28862                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 28863                           
 28864                           ; BSR set to: 0
 28865  005702  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 28866  005706  D00C               	goto	L79
 28867  005708                     l651:
 28868                           
 28869                           ; BSR set to: 0
 28870                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 28871                           
 28872                           ; BSR set to: 0
 28873  005708  0E02               	movlw	2
 28874  00570A  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 28875  00570C  A4D8               	btfss	status,2,c
 28876  00570E  D00E               	goto	l660
 28877                           
 28878                           ; BSR set to: 0
 28879                           ;uart_drv.c: 244: {
 28880                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 28881  005710  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 28882  005714  90D8               	bcf	status,0,c
 28883  005716  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28884  005718  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 28885  00571A  D7F1               	goto	u10680
 28886                           
 28887                           ; BSR set to: 0
 28888                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 28889                           
 28890                           ; BSR set to: 0
 28891                           
 28892                           ;uart_drv.c: 249: }
 28893                           
 28894                           ; BSR set to: 0
 28895                           ;uart_drv.c: 247: {
 28896                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 28897  00571C  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 28898  005720                     L79:
 28899  005720  90D8               	bcf	status,0,c
 28900  005722  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28901  005724  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 28902  005726  D002               	goto	l660
 28903                           
 28904                           ; BSR set to: 0
 28905                           ;uart_drv.c: 251: {
 28906                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 28907  005728  0E02               	movlw	2
 28908  00572A                     L50:
 28909  00572A  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 28910  00572C                     l660:
 28911                           
 28912                           ; BSR set to: 0
 28913                           ;uart_drv.c: 257: }
 28914                           ;uart_drv.c: 258: }
 28915                           ;uart_drv.c: 260: return TxBufferStatus;
 28916                           
 28917                           ; BSR set to: 0
 28918                           
 28919                           ; BSR set to: 0
 28920                           
 28921                           ; BSR set to: 0
 28922                           
 28923                           ; BSR set to: 0
 28924                           
 28925                           ;uart_drv.c: 254: else
 28926                           ;uart_drv.c: 255: {
 28927                           
 28928                           ; BSR set to: 0
 28929  00572C  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 28930  00572E  0012               	return	
 28931  005730                     __end_of_UartTxBufferStatus:
 28932                           	opt stack 0
 28933                           tosu	equ	0xFFF
 28934                           tosh	equ	0xFFE
 28935                           tosl	equ	0xFFD
 28936                           pclath	equ	0xFFA
 28937                           tblptru	equ	0xFF8
 28938                           tblptrh	equ	0xFF7
 28939                           tblptrl	equ	0xFF6
 28940                           tablat	equ	0xFF5
 28941                           prodh	equ	0xFF4
 28942                           prodl	equ	0xFF3
 28943                           intcon	equ	0xFF2
 28944                           intcon2	equ	0xFF1
 28945                           intcon3	equ	0xFF0
 28946                           indf0	equ	0xFEF
 28947                           postinc0	equ	0xFEE
 28948                           plusw0	equ	0xFEB
 28949                           fsr0h	equ	0xFEA
 28950                           fsr0l	equ	0xFE9
 28951                           wreg	equ	0xFE8
 28952                           indf1	equ	0xFE7
 28953                           postinc1	equ	0xFE6
 28954                           postdec1	equ	0xFE5
 28955                           plusw1	equ	0xFE3
 28956                           fsr1h	equ	0xFE2
 28957                           fsr1l	equ	0xFE1
 28958                           indf2	equ	0xFDF
 28959                           postinc2	equ	0xFDE
 28960                           postdec2	equ	0xFDD
 28961                           plusw2	equ	0xFDB
 28962                           fsr2h	equ	0xFDA
 28963                           fsr2l	equ	0xFD9
 28964                           status	equ	0xFD8
 28965                           
 28966 ;; *************** function _StringCopy *****************
 28967 ;; Defined at:
 28968 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28969 ;; Parameters:    Size  Location     Type
 28970 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 28971 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 28972 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), RxBuffer(400), 
 28973 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 28974 ;;		 -> EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), MessageText(50), 
 28975 ;;		 -> PhoneNumber(20), SendSmsSm@UartMessage(50), Mdm_SmsRx(102), callerNumber(13), 
 28976 ;;  Len             2   33[BANK0 ] unsigned short 
 28977 ;; Auto vars:     Size  Location     Type
 28978 ;;  Index           2   37[BANK0 ] unsigned short 
 28979 ;; Return value:  Size  Location     Type
 28980 ;;                  1    wreg      void 
 28981 ;; Registers used:
 28982 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 28983 ;; Tracked objects:
 28984 ;;		On entry : 0/0
 28985 ;;		On exit  : 0/0
 28986 ;;		Unchanged: 0/0
 28987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28988 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28989 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28990 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28991 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28992 ;;Total ram usage:       10 bytes
 28993 ;; Hardware stack levels used:    1
 28994 ;; Hardware stack levels required when called:   11
 28995 ;; This function calls:
 28996 ;;		Nothing
 28997 ;; This function is called by:
 28998 ;;		_ModemEvtParser
 28999 ;;		_GetSmsSm
 29000 ;;		_SendSmsSm
 29001 ;;		_InitGprsNetwork
 29002 ;;		_HttpGetMethod
 29003 ;;		_Mdm_GetSmsData
 29004 ;;		_Mdm_SendSmsData
 29005 ;;		_Eeprom_Write
 29006 ;; This function uses a non-reentrant model
 29007 ;;
 29008                           
 29009                           	psect	text130
 29010  005122                     __ptext130:
 29011                           	opt stack 0
 29012  005122                     _StringCopy:
 29013                           	opt stack 15
 29014                           
 29015                           ;sf.c: 106: UINT16 Index = 0;
 29016                           
 29017                           ; BSR set to: 0
 29018                           ;incstack = 0
 29019  005122  0E00               	movlw	0
 29020  005124  0100               	movlb	0	; () banked
 29021  005126  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 29022  005128  0E00               	movlw	0
 29023  00512A  6F85               	movwf	StringCopy@Index& (0+255),b
 29024                           
 29025                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 29026  00512C  0E00               	movlw	0
 29027  00512E  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 29028  005130  0E00               	movlw	0
 29029  005132  6F85               	movwf	StringCopy@Index& (0+255),b
 29030  005134  D020               	goto	l2218
 29031  005136                     
 29032                           ; BSR set to: 0
 29033                           ;sf.c: 110: {
 29034                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 29035                           
 29036                           ; BSR set to: 0
 29037  005136  5185               	movf	StringCopy@Index& (0+255),w,b
 29038  005138  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 29039  00513A  6F83               	movwf	??_StringCopy& (0+255),b
 29040  00513C  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 29041  00513E  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 29042  005140  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 29043  005142  C083  FFF6         	movff	??_StringCopy,tblptrl
 29044  005146  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 29045  00514A  6AF8               	clrf	tblptru,c
 29046  00514C  5185               	movf	StringCopy@Index& (0+255),w,b
 29047  00514E  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 29048  005150  6ED9               	movwf	fsr2l,c
 29049  005152  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 29050  005154  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 29051  005156  6EDA               	movwf	fsr2h,c
 29052  005158  0E0E               	movlw	(high __ramtop+-1)
 29053  00515A  64F7               	cpfsgt	tblptrh,c
 29054  00515C  D003               	bra	u12687
 29055  00515E  0008               	tblrd		*
 29056  005160  50F5               	movf	tablat,w,c
 29057  005162  D005               	bra	u12680
 29058  005164                     u12687:
 29059  005164  CFF6 FFE9          	movff	tblptrl,fsr0l
 29060  005168  CFF7 FFEA          	movff	tblptrh,fsr0h
 29061  00516C  50EF               	movf	indf0,w,c
 29062  00516E                     u12680:
 29063  00516E  6EDF               	movwf	indf2,c
 29064  005170  0100               	movlb	0	; () banked
 29065  005172  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 29066  005174  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 29067  005176                     l2218:
 29068                           
 29069                           ; BSR set to: 0
 29070                           
 29071                           ; BSR set to: 0
 29072  005176  5181               	movf	StringCopy@Len& (0+255),w,b
 29073  005178  5D85               	subwf	StringCopy@Index& (0+255),w,b
 29074  00517A  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 29075  00517C  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 29076  00517E  B0D8               	btfsc	status,0,c
 29077  005180  0012               	return	
 29078  005182  D7D9               	goto	l2219
 29079  005184                     __end_of_StringCopy:
 29080                           	opt stack 0
 29081                           tosu	equ	0xFFF
 29082                           tosh	equ	0xFFE
 29083                           tosl	equ	0xFFD
 29084                           pclath	equ	0xFFA
 29085                           tblptru	equ	0xFF8
 29086                           tblptrh	equ	0xFF7
 29087                           tblptrl	equ	0xFF6
 29088                           tablat	equ	0xFF5
 29089                           prodh	equ	0xFF4
 29090                           prodl	equ	0xFF3
 29091                           intcon	equ	0xFF2
 29092                           intcon2	equ	0xFF1
 29093                           intcon3	equ	0xFF0
 29094                           indf0	equ	0xFEF
 29095                           postinc0	equ	0xFEE
 29096                           plusw0	equ	0xFEB
 29097                           fsr0h	equ	0xFEA
 29098                           fsr0l	equ	0xFE9
 29099                           wreg	equ	0xFE8
 29100                           indf1	equ	0xFE7
 29101                           postinc1	equ	0xFE6
 29102                           postdec1	equ	0xFE5
 29103                           plusw1	equ	0xFE3
 29104                           fsr1h	equ	0xFE2
 29105                           fsr1l	equ	0xFE1
 29106                           indf2	equ	0xFDF
 29107                           postinc2	equ	0xFDE
 29108                           postdec2	equ	0xFDD
 29109                           plusw2	equ	0xFDB
 29110                           fsr2h	equ	0xFDA
 29111                           fsr2l	equ	0xFD9
 29112                           status	equ	0xFD8
 29113                           
 29114 ;; *************** function _OsTmr_StartTimer *****************
 29115 ;; Defined at:
 29116 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 29117 ;; Parameters:    Size  Location     Type
 29118 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 29119 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 29120 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 29121 ;;  Timeout         4   35[BANK0 ] unsigned long 
 29122 ;; Auto vars:     Size  Location     Type
 29123 ;;		None
 29124 ;; Return value:  Size  Location     Type
 29125 ;;                  1    wreg      void 
 29126 ;; Registers used:
 29127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29128 ;; Tracked objects:
 29129 ;;		On entry : 0/0
 29130 ;;		On exit  : 0/0
 29131 ;;		Unchanged: 0/0
 29132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29133 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29136 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29137 ;;Total ram usage:        6 bytes
 29138 ;; Hardware stack levels used:    1
 29139 ;; Hardware stack levels required when called:   12
 29140 ;; This function calls:
 29141 ;;		_GetOsTickCounter
 29142 ;; This function is called by:
 29143 ;;		_OsTmr_Wait
 29144 ;;		_CheckModem
 29145 ;;		_SendSmsSm
 29146 ;;		_InitGprsNetwork
 29147 ;;		_HttpGetMethod
 29148 ;;		_I2cSlv_QueryI2cData
 29149 ;;		_Term_MainSm
 29150 ;; This function uses a non-reentrant model
 29151 ;;
 29152                           
 29153                           	psect	text131
 29154  0051E2                     __ptext131:
 29155                           	opt stack 0
 29156  0051E2                     _OsTmr_StartTimer:
 29157                           	opt stack 12
 29158                           
 29159                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 29160                           
 29161                           ; BSR set to: 0
 29162                           ;incstack = 0
 29163  0051E2  0100               	movlb	0	; () banked
 29164  0051E4  EE20 F001          	lfsr	2,1
 29165  0051E8  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 29166  0051EA  26D9               	addwf	fsr2l,f,c
 29167  0051EC  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 29168  0051EE  22DA               	addwfc	fsr2h,f,c
 29169  0051F0  0E00               	movlw	0
 29170  0051F2  6EDF               	movwf	indf2,c
 29171                           
 29172                           ; BSR set to: 0
 29173                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 29174  0051F4  EC61  F031         	call	_GetOsTickCounter	;wreg free
 29175  0051F8  0100               	movlb	0	; () banked
 29176  0051FA  EE20 F002          	lfsr	2,2
 29177  0051FE  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 29178  005200  26D9               	addwf	fsr2l,f,c
 29179  005202  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 29180  005204  22DA               	addwfc	fsr2h,f,c
 29181  005206  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 29182  00520A  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 29183  00520E  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 29184  005212  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 29185                           
 29186                           ; BSR set to: 0
 29187                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 29188  005216  EE20 F006          	lfsr	2,6
 29189  00521A  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 29190  00521C  26D9               	addwf	fsr2l,f,c
 29191  00521E  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 29192  005220  22DA               	addwfc	fsr2h,f,c
 29193  005222  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 29194  005226  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 29195  00522A  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 29196  00522E  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 29197                           
 29198                           ; BSR set to: 0
 29199                           ;os_timers.c: 127: Timer->Enabled = 1u;
 29200  005232  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 29201  005236  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 29202  00523A  0E01               	movlw	1
 29203  00523C  6EDF               	movwf	indf2,c
 29204                           
 29205                           ; BSR set to: 0
 29206  00523E  0012               	return		;funcret
 29207  005240                     __end_of_OsTmr_StartTimer:
 29208                           	opt stack 0
 29209                           tosu	equ	0xFFF
 29210                           tosh	equ	0xFFE
 29211                           tosl	equ	0xFFD
 29212                           pclath	equ	0xFFA
 29213                           tblptru	equ	0xFF8
 29214                           tblptrh	equ	0xFF7
 29215                           tblptrl	equ	0xFF6
 29216                           tablat	equ	0xFF5
 29217                           prodh	equ	0xFF4
 29218                           prodl	equ	0xFF3
 29219                           intcon	equ	0xFF2
 29220                           intcon2	equ	0xFF1
 29221                           intcon3	equ	0xFF0
 29222                           indf0	equ	0xFEF
 29223                           postinc0	equ	0xFEE
 29224                           plusw0	equ	0xFEB
 29225                           fsr0h	equ	0xFEA
 29226                           fsr0l	equ	0xFE9
 29227                           wreg	equ	0xFE8
 29228                           indf1	equ	0xFE7
 29229                           postinc1	equ	0xFE6
 29230                           postdec1	equ	0xFE5
 29231                           plusw1	equ	0xFE3
 29232                           fsr1h	equ	0xFE2
 29233                           fsr1l	equ	0xFE1
 29234                           indf2	equ	0xFDF
 29235                           postinc2	equ	0xFDE
 29236                           postdec2	equ	0xFDD
 29237                           plusw2	equ	0xFDB
 29238                           fsr2h	equ	0xFDA
 29239                           fsr2l	equ	0xFD9
 29240                           status	equ	0xFD8
 29241                           
 29242 ;; *************** function _OsTmr_GetTimerStatus *****************
 29243 ;; Defined at:
 29244 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 29245 ;; Parameters:    Size  Location     Type
 29246 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 29247 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 29248 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 29249 ;; Auto vars:     Size  Location     Type
 29250 ;;		None
 29251 ;; Return value:  Size  Location     Type
 29252 ;;                  1    wreg      enum E7740
 29253 ;; Registers used:
 29254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29255 ;; Tracked objects:
 29256 ;;		On entry : 0/0
 29257 ;;		On exit  : 0/0
 29258 ;;		Unchanged: 0/0
 29259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29260 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29262 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29263 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29264 ;;Total ram usage:        6 bytes
 29265 ;; Hardware stack levels used:    1
 29266 ;; Hardware stack levels required when called:   13
 29267 ;; This function calls:
 29268 ;;		_GetElapsedTime
 29269 ;; This function is called by:
 29270 ;;		_OsTmr_Wait
 29271 ;;		_CheckModem
 29272 ;;		_SendSmsSm
 29273 ;;		_InitGprsNetwork
 29274 ;;		_HttpGetMethod
 29275 ;;		_I2cSlv_QueryI2cData
 29276 ;;		_Term_MainSm
 29277 ;; This function uses a non-reentrant model
 29278 ;;
 29279                           
 29280                           	psect	text132
 29281  004AF0                     __ptext132:
 29282                           	opt stack 0
 29283  004AF0                     _OsTmr_GetTimerStatus:
 29284                           	opt stack 11
 29285                           
 29286                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 29287                           
 29288                           ; BSR set to: 0
 29289                           ;incstack = 0
 29290  004AF0  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 29291  004AF4  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 29292  004AF8  04DE               	decf	postinc2,w,c
 29293  004AFA  A4D8               	btfss	status,2,c
 29294  004AFC  D030               	goto	l864
 29295                           
 29296                           ;os_timers.c: 197: {
 29297                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 29298  004AFE  0100               	movlb	0	; () banked
 29299  004B00  EE20 F006          	lfsr	2,6
 29300  004B04  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 29301  004B06  26D9               	addwf	fsr2l,f,c
 29302  004B08  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 29303  004B0A  22DA               	addwfc	fsr2h,f,c
 29304  004B0C  EE10 F002          	lfsr	1,2
 29305  004B10  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 29306  004B12  26E1               	addwf	fsr1l,f,c
 29307  004B14  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 29308  004B16  22E2               	addwfc	fsr1h,f,c
 29309  004B18  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 29310  004B1C  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 29311  004B20  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 29312  004B24  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 29313  004B28  EC8A  F01E         	call	_GetElapsedTime	;wreg free
 29314  004B2C  50DE               	movf	postinc2,w,c
 29315  004B2E  0100               	movlb	0	; () banked
 29316  004B30  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 29317  004B32  50DE               	movf	postinc2,w,c
 29318  004B34  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 29319  004B36  50DE               	movf	postinc2,w,c
 29320  004B38  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 29321  004B3A  50DE               	movf	postinc2,w,c
 29322  004B3C  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 29323  004B3E  A0D8               	btfss	status,0,c
 29324  004B40  D017               	goto	l867
 29325                           
 29326                           ; BSR set to: 0
 29327                           ;os_timers.c: 200: {
 29328                           ;os_timers.c: 202: Timer->Enabled = 0u;
 29329  004B42  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 29330  004B46  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 29331  004B4A  0E00               	movlw	0
 29332  004B4C  6EDF               	movwf	indf2,c
 29333                           
 29334                           ; BSR set to: 0
 29335                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 29336  004B4E  EE20 F001          	lfsr	2,1
 29337  004B52  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 29338  004B54  26D9               	addwf	fsr2l,f,c
 29339  004B56  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 29340  004B58  22DA               	addwfc	fsr2h,f,c
 29341  004B5A  0E01               	movlw	1
 29342  004B5C  D008               	goto	L80
 29343  004B5E                     l864:
 29344                           
 29345                           ;os_timers.c: 211: else
 29346                           ;os_timers.c: 212: {
 29347                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 29348                           
 29349                           ; BSR set to: 0
 29350  004B5E  0100               	movlb	0	; () banked
 29351  004B60  EE20 F001          	lfsr	2,1
 29352  004B64  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 29353  004B66  26D9               	addwf	fsr2l,f,c
 29354  004B68  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 29355  004B6A  22DA               	addwfc	fsr2h,f,c
 29356  004B6C  0E02               	movlw	2
 29357  004B6E                     L80:
 29358  004B6E  6EDF               	movwf	indf2,c
 29359  004B70                     l867:
 29360                           
 29361                           ; BSR set to: 0
 29362                           ;os_timers.c: 215: }
 29363                           ;os_timers.c: 218: return Timer->Status;
 29364  004B70  EE20 F001          	lfsr	2,1
 29365  004B74  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 29366  004B76  26D9               	addwf	fsr2l,f,c
 29367  004B78  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 29368  004B7A  22DA               	addwfc	fsr2h,f,c
 29369  004B7C  50DF               	movf	indf2,w,c
 29370  004B7E  0012               	return	
 29371  004B80                     __end_of_OsTmr_GetTimerStatus:
 29372                           	opt stack 0
 29373                           tosu	equ	0xFFF
 29374                           tosh	equ	0xFFE
 29375                           tosl	equ	0xFFD
 29376                           pclath	equ	0xFFA
 29377                           tblptru	equ	0xFF8
 29378                           tblptrh	equ	0xFF7
 29379                           tblptrl	equ	0xFF6
 29380                           tablat	equ	0xFF5
 29381                           prodh	equ	0xFF4
 29382                           prodl	equ	0xFF3
 29383                           intcon	equ	0xFF2
 29384                           intcon2	equ	0xFF1
 29385                           intcon3	equ	0xFF0
 29386                           indf0	equ	0xFEF
 29387                           postinc0	equ	0xFEE
 29388                           plusw0	equ	0xFEB
 29389                           fsr0h	equ	0xFEA
 29390                           fsr0l	equ	0xFE9
 29391                           wreg	equ	0xFE8
 29392                           indf1	equ	0xFE7
 29393                           postinc1	equ	0xFE6
 29394                           postdec1	equ	0xFE5
 29395                           plusw1	equ	0xFE3
 29396                           fsr1h	equ	0xFE2
 29397                           fsr1l	equ	0xFE1
 29398                           indf2	equ	0xFDF
 29399                           postinc2	equ	0xFDE
 29400                           postdec2	equ	0xFDD
 29401                           plusw2	equ	0xFDB
 29402                           fsr2h	equ	0xFDA
 29403                           fsr2l	equ	0xFD9
 29404                           status	equ	0xFD8
 29405                           
 29406 ;; *************** function _GetElapsedTime *****************
 29407 ;; Defined at:
 29408 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 29409 ;; Parameters:    Size  Location     Type
 29410 ;;  StartTime       4   33[BANK0 ] unsigned long 
 29411 ;; Auto vars:     Size  Location     Type
 29412 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 29413 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 29414 ;; Return value:  Size  Location     Type
 29415 ;;                  4   33[BANK0 ] unsigned long 
 29416 ;; Registers used:
 29417 ;;		wreg, status,2, status,0, cstack
 29418 ;; Tracked objects:
 29419 ;;		On entry : 0/0
 29420 ;;		On exit  : 0/0
 29421 ;;		Unchanged: 0/0
 29422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29423 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29424 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29425 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29426 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29427 ;;Total ram usage:       20 bytes
 29428 ;; Hardware stack levels used:    1
 29429 ;; Hardware stack levels required when called:   12
 29430 ;; This function calls:
 29431 ;;		_GetOsTickCounter
 29432 ;; This function is called by:
 29433 ;;		_OsTmr_GetTimerStatus
 29434 ;;		_OsTmr_GetRemainingTime
 29435 ;; This function uses a non-reentrant model
 29436 ;;
 29437                           
 29438                           	psect	text133
 29439  003D14                     __ptext133:
 29440                           	opt stack 0
 29441  003D14                     _GetElapsedTime:
 29442                           	opt stack 11
 29443                           
 29444                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 29445                           ;os_timers.c: 87: UINT32 TimeValue;
 29446                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 29447                           
 29448                           ; BSR set to: 0
 29449                           ;incstack = 0
 29450  003D14  EC61  F031         	call	_GetOsTickCounter	;wreg free
 29451  003D18  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 29452  003D1C  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 29453  003D20  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 29454  003D24  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 29455                           
 29456                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 29457  003D28  0100               	movlb	0	; () banked
 29458  003D2A  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 29459  003D2C  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 29460  003D2E  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 29461  003D30  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 29462  003D32  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 29463  003D34  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 29464  003D36  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 29465  003D38  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 29466  003D3A  A0D8               	btfss	status,0,c
 29467  003D3C  D01D               	goto	l844
 29468                           
 29469                           ; BSR set to: 0
 29470                           ;os_timers.c: 94: {
 29471                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 29472  003D3E  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 29473  003D42  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 29474  003D46  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 29475  003D4A  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 29476  003D4E  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 29477  003D50  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 29478  003D52  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 29479  003D54  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 29480  003D56  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 29481  003D58  0E00               	movlw	0
 29482  003D5A  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 29483  003D5C  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 29484  003D5E  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 29485  003D60  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 29486  003D62  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 29487  003D64  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 29488  003D66  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 29489  003D68  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 29490  003D6A  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 29491  003D6C  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 29492  003D6E  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 29493  003D70  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 29494  003D72  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 29495  003D74  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 29496  003D76  D028               	goto	L51
 29497  003D78                     l844:
 29498                           
 29499                           ; BSR set to: 0
 29500                           ;os_timers.c: 97: else
 29501                           ;os_timers.c: 98: {
 29502                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 29503                           
 29504                           ; BSR set to: 0
 29505  003D78  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 29506  003D7C  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 29507  003D80  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 29508  003D84  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 29509  003D88  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 29510  003D8A  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 29511  003D8C  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 29512  003D8E  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 29513  003D90  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 29514  003D92  0E00               	movlw	0
 29515  003D94  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 29516  003D96  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 29517  003D98  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 29518  003D9A  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 29519  003D9C  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 29520  003D9E  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 29521  003DA0  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 29522  003DA2  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 29523  003DA4  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 29524  003DA6  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 29525  003DA8  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 29526  003DAA  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 29527  003DAC  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 29528  003DAE  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 29529  003DB0  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 29530  003DB2  0EFF               	movlw	255
 29531  003DB4  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 29532  003DB6  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 29533  003DB8  0EFF               	movlw	255
 29534  003DBA  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 29535  003DBC  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 29536  003DBE  0EFF               	movlw	255
 29537  003DC0  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 29538  003DC2  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 29539  003DC4  0EFF               	movlw	255
 29540  003DC6  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 29541  003DC8                     L51:
 29542  003DC8  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 29543                           
 29544                           ; BSR set to: 0
 29545                           ;os_timers.c: 100: }
 29546                           ;os_timers.c: 102: return TimeValue;
 29547                           
 29548                           ; BSR set to: 0
 29549  003DCA  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 29550  003DCE  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 29551  003DD2  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 29552  003DD6  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 29553  003DDA  0012               	return	
 29554  003DDC                     __end_of_GetElapsedTime:
 29555                           	opt stack 0
 29556                           tosu	equ	0xFFF
 29557                           tosh	equ	0xFFE
 29558                           tosl	equ	0xFFD
 29559                           pclath	equ	0xFFA
 29560                           tblptru	equ	0xFF8
 29561                           tblptrh	equ	0xFF7
 29562                           tblptrl	equ	0xFF6
 29563                           tablat	equ	0xFF5
 29564                           prodh	equ	0xFF4
 29565                           prodl	equ	0xFF3
 29566                           intcon	equ	0xFF2
 29567                           intcon2	equ	0xFF1
 29568                           intcon3	equ	0xFF0
 29569                           indf0	equ	0xFEF
 29570                           postinc0	equ	0xFEE
 29571                           plusw0	equ	0xFEB
 29572                           fsr0h	equ	0xFEA
 29573                           fsr0l	equ	0xFE9
 29574                           wreg	equ	0xFE8
 29575                           indf1	equ	0xFE7
 29576                           postinc1	equ	0xFE6
 29577                           postdec1	equ	0xFE5
 29578                           plusw1	equ	0xFE3
 29579                           fsr1h	equ	0xFE2
 29580                           fsr1l	equ	0xFE1
 29581                           indf2	equ	0xFDF
 29582                           postinc2	equ	0xFDE
 29583                           postdec2	equ	0xFDD
 29584                           plusw2	equ	0xFDB
 29585                           fsr2h	equ	0xFDA
 29586                           fsr2l	equ	0xFD9
 29587                           status	equ	0xFD8
 29588                           
 29589 ;; *************** function _GetOsTickCounter *****************
 29590 ;; Defined at:
 29591 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 29592 ;; Parameters:    Size  Location     Type
 29593 ;;		None
 29594 ;; Auto vars:     Size  Location     Type
 29595 ;;		None
 29596 ;; Return value:  Size  Location     Type
 29597 ;;                  4   29[BANK0 ] unsigned long 
 29598 ;; Registers used:
 29599 ;;		None
 29600 ;; Tracked objects:
 29601 ;;		On entry : 0/0
 29602 ;;		On exit  : 0/0
 29603 ;;		Unchanged: 0/0
 29604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29605 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29608 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29609 ;;Total ram usage:        4 bytes
 29610 ;; Hardware stack levels used:    1
 29611 ;; Hardware stack levels required when called:   11
 29612 ;; This function calls:
 29613 ;;		Nothing
 29614 ;; This function is called by:
 29615 ;;		_GetElapsedTime
 29616 ;;		_OsTmr_StartTimer
 29617 ;;		_OsTmr_GetElapsedTime
 29618 ;; This function uses a non-reentrant model
 29619 ;;
 29620                           
 29621                           	psect	text134
 29622  0062C2                     __ptext134:
 29623                           	opt stack 0
 29624  0062C2                     _GetOsTickCounter:
 29625                           	opt stack 12
 29626                           
 29627                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 29628                           
 29629                           ; BSR set to: 0
 29630                           ;incstack = 0
 29631  0062C2  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 29632  0062C6  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 29633  0062CA  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 29634  0062CE  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 29635  0062D2  0012               	return		;funcret
 29636  0062D4                     __end_of_GetOsTickCounter:
 29637                           	opt stack 0
 29638                           tosu	equ	0xFFF
 29639                           tosh	equ	0xFFE
 29640                           tosl	equ	0xFFD
 29641                           pclath	equ	0xFFA
 29642                           tblptru	equ	0xFF8
 29643                           tblptrh	equ	0xFF7
 29644                           tblptrl	equ	0xFF6
 29645                           tablat	equ	0xFF5
 29646                           prodh	equ	0xFF4
 29647                           prodl	equ	0xFF3
 29648                           intcon	equ	0xFF2
 29649                           intcon2	equ	0xFF1
 29650                           intcon3	equ	0xFF0
 29651                           indf0	equ	0xFEF
 29652                           postinc0	equ	0xFEE
 29653                           plusw0	equ	0xFEB
 29654                           fsr0h	equ	0xFEA
 29655                           fsr0l	equ	0xFE9
 29656                           wreg	equ	0xFE8
 29657                           indf1	equ	0xFE7
 29658                           postinc1	equ	0xFE6
 29659                           postdec1	equ	0xFE5
 29660                           plusw1	equ	0xFE3
 29661                           fsr1h	equ	0xFE2
 29662                           fsr1l	equ	0xFE1
 29663                           indf2	equ	0xFDF
 29664                           postinc2	equ	0xFDE
 29665                           postdec2	equ	0xFDD
 29666                           plusw2	equ	0xFDB
 29667                           fsr2h	equ	0xFDA
 29668                           fsr2l	equ	0xFD9
 29669                           status	equ	0xFD8
 29670                           
 29671 ;; *************** function _ClearBuffer *****************
 29672 ;; Defined at:
 29673 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 29674 ;; Parameters:    Size  Location     Type
 29675 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 29676 ;;		 -> MyApp_Task@phone(14), GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessa
      +ge(50), 
 29677 ;;		 -> Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 29678 ;;  Len             2   31[BANK0 ] unsigned short 
 29679 ;; Auto vars:     Size  Location     Type
 29680 ;;  Index           2   33[BANK0 ] unsigned short 
 29681 ;; Return value:  Size  Location     Type
 29682 ;;                  1    wreg      void 
 29683 ;; Registers used:
 29684 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29685 ;; Tracked objects:
 29686 ;;		On entry : 0/0
 29687 ;;		On exit  : 0/0
 29688 ;;		Unchanged: 0/0
 29689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29690 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29691 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29693 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29694 ;;Total ram usage:        6 bytes
 29695 ;; Hardware stack levels used:    1
 29696 ;; Hardware stack levels required when called:   11
 29697 ;; This function calls:
 29698 ;;		Nothing
 29699 ;; This function is called by:
 29700 ;;		_GetSmsSm
 29701 ;;		_GetCallerNumber
 29702 ;;		_InitGprsNetwork
 29703 ;;		_HttpGetMethod
 29704 ;;		_MyApp_Task
 29705 ;;		_GsmGprsTerminal
 29706 ;; This function uses a non-reentrant model
 29707 ;;
 29708                           
 29709                           	psect	text135
 29710  005CD6                     __ptext135:
 29711                           	opt stack 0
 29712  005CD6                     _ClearBuffer:
 29713                           	opt stack 15
 29714                           
 29715                           ;sf.c: 126: UINT16 Index = 0;
 29716                           
 29717                           ;incstack = 0
 29718  005CD6  0E00               	movlw	0
 29719  005CD8  0100               	movlb	0	; () banked
 29720  005CDA  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 29721  005CDC  0E00               	movlw	0
 29722  005CDE  6F81               	movwf	ClearBuffer@Index& (0+255),b
 29723                           
 29724                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 29725  005CE0  0E00               	movlw	0
 29726  005CE2  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 29727  005CE4  0E00               	movlw	0
 29728  005CE6  6F81               	movwf	ClearBuffer@Index& (0+255),b
 29729  005CE8  D00A               	goto	l2224
 29730  005CEA                     
 29731                           ; BSR set to: 0
 29732                           ;sf.c: 130: {
 29733                           ;sf.c: 131: *(Buffer + Index) = 0;
 29734                           
 29735                           ; BSR set to: 0
 29736  005CEA  5181               	movf	ClearBuffer@Index& (0+255),w,b
 29737  005CEC  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 29738  005CEE  6ED9               	movwf	fsr2l,c
 29739  005CF0  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 29740  005CF2  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 29741  005CF4  6EDA               	movwf	fsr2h,c
 29742  005CF6  0E00               	movlw	0
 29743  005CF8  6EDF               	movwf	indf2,c
 29744                           
 29745                           ; BSR set to: 0
 29746  005CFA  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 29747  005CFC  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 29748  005CFE                     l2224:
 29749                           
 29750                           ; BSR set to: 0
 29751                           
 29752                           ; BSR set to: 0
 29753  005CFE  5181               	movf	ClearBuffer@Index& (0+255),w,b
 29754  005D00  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 29755  005D02  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 29756  005D04  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 29757  005D06  A0D8               	btfss	status,0,c
 29758  005D08  0012               	return	
 29759  005D0A  D7EF               	goto	l2225
 29760  005D0C                     __end_of_ClearBuffer:
 29761                           	opt stack 0
 29762                           tosu	equ	0xFFF
 29763                           tosh	equ	0xFFE
 29764                           tosl	equ	0xFFD
 29765                           pclath	equ	0xFFA
 29766                           tblptru	equ	0xFF8
 29767                           tblptrh	equ	0xFF7
 29768                           tblptrl	equ	0xFF6
 29769                           tablat	equ	0xFF5
 29770                           prodh	equ	0xFF4
 29771                           prodl	equ	0xFF3
 29772                           intcon	equ	0xFF2
 29773                           intcon2	equ	0xFF1
 29774                           intcon3	equ	0xFF0
 29775                           indf0	equ	0xFEF
 29776                           postinc0	equ	0xFEE
 29777                           plusw0	equ	0xFEB
 29778                           fsr0h	equ	0xFEA
 29779                           fsr0l	equ	0xFE9
 29780                           wreg	equ	0xFE8
 29781                           indf1	equ	0xFE7
 29782                           postinc1	equ	0xFE6
 29783                           postdec1	equ	0xFE5
 29784                           plusw1	equ	0xFE3
 29785                           fsr1h	equ	0xFE2
 29786                           fsr1l	equ	0xFE1
 29787                           indf2	equ	0xFDF
 29788                           postinc2	equ	0xFDE
 29789                           postdec2	equ	0xFDD
 29790                           plusw2	equ	0xFDB
 29791                           fsr2h	equ	0xFDA
 29792                           fsr2l	equ	0xFD9
 29793                           status	equ	0xFD8
 29794                           
 29795 ;; *************** function _LedStateMachine *****************
 29796 ;; Defined at:
 29797 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29798 ;; Parameters:    Size  Location     Type
 29799 ;;  Led             1    wreg     unsigned char 
 29800 ;;  LedSts          2   47[BANK0 ] PTR enum E8951
 29801 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 29802 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 29803 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 29804 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 29805 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 29806 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 29807 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 29808 ;; Auto vars:     Size  Location     Type
 29809 ;;  Led             1   57[BANK0 ] unsigned char 
 29810 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 29811 ;; Return value:  Size  Location     Type
 29812 ;;                  1    wreg      unsigned char 
 29813 ;; Registers used:
 29814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29815 ;; Tracked objects:
 29816 ;;		On entry : 0/0
 29817 ;;		On exit  : 0/0
 29818 ;;		Unchanged: 0/0
 29819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29820 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29821 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29822 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29823 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29824 ;;Total ram usage:       11 bytes
 29825 ;; Hardware stack levels used:    1
 29826 ;; Hardware stack levels required when called:   13
 29827 ;; This function calls:
 29828 ;;		_LedBlinkStateMachine
 29829 ;;		_LedPulseStateMachine
 29830 ;;		_Led_SetLedStatus
 29831 ;; This function is called by:
 29832 ;;		_Led_MainTask
 29833 ;; This function uses a non-reentrant model
 29834 ;;
 29835                           
 29836                           	psect	text136
 29837  004448                     __ptext136:
 29838                           	opt stack 0
 29839  004448                     _LedStateMachine:
 29840                           	opt stack 14
 29841                           
 29842                           ; BSR set to: 0
 29843                           ;incstack = 0
 29844                           ;LedStateMachine@Led stored from wreg
 29845  004448  0100               	movlb	0	; () banked
 29846  00444A  6F99               	movwf	LedStateMachine@Led& (0+255),b
 29847                           
 29848                           ;led.c: 238: UINT8 LedOutSts = 0u;
 29849  00444C  0E00               	movlw	0
 29850  00444E  0100               	movlb	0	; () banked
 29851  004450  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29852                           
 29853                           ;led.c: 241: switch (*LedSts)
 29854  004452  D037               	goto	l2083
 29855  004454                     
 29856                           ; BSR set to: 0
 29857                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 29858                           
 29859                           ; BSR set to: 0
 29860  004454  0E00               	movlw	0
 29861  004456  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29862                           
 29863                           ; BSR set to: 0
 29864                           ;led.c: 246: *LedOut = ((UINT8)(0));
 29865  004458  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29866  00445C  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29867  004460  0E00               	movlw	0
 29868  004462  D007               	goto	L52
 29869  004464                     
 29870                           ; BSR set to: 0
 29871                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 29872                           
 29873                           ; BSR set to: 0
 29874  004464  0E01               	movlw	1
 29875  004466  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29876                           
 29877                           ; BSR set to: 0
 29878                           ;led.c: 252: *LedOut = ((UINT8)(1));
 29879  004468  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29880  00446C  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29881  004470  0E01               	movlw	1
 29882  004472                     L52:
 29883  004472  6EDF               	movwf	indf2,c
 29884                           
 29885                           ;led.c: 253: break;
 29886  004474  D03A               	goto	l2085
 29887  004476                     
 29888                           ; BSR set to: 0
 29889                           ;led.c: 257: if (*LedOut == 1)
 29890                           
 29891                           ; BSR set to: 0
 29892  004476  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29893  00447A  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29894  00447E  04DE               	decf	postinc2,w,c
 29895  004480  A4D8               	btfss	status,2,c
 29896  004482  D006               	goto	l2088
 29897                           
 29898                           ; BSR set to: 0
 29899                           ;led.c: 258: {
 29900                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 29901  004484  0E00               	movlw	0
 29902  004486  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29903  004488  5199               	movf	LedStateMachine@Led& (0+255),w,b
 29904  00448A  EC1A  F02F         	call	_Led_SetLedStatus
 29905                           
 29906                           ;led.c: 261: }
 29907  00448E  D02D               	goto	l2085
 29908  004490                     l2088:
 29909                           
 29910                           ;led.c: 262: else
 29911                           ;led.c: 263: {
 29912                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 29913  004490  0E01               	movlw	1
 29914  004492  0100               	movlb	0	; () banked
 29915  004494  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29916  004496  5199               	movf	LedStateMachine@Led& (0+255),w,b
 29917  004498  EC1A  F02F         	call	_Led_SetLedStatus
 29918                           
 29919                           ;led.c: 266: }
 29920                           ;led.c: 267: break;
 29921  00449C  D026               	goto	l2085
 29922  00449E                     
 29923                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 29924  00449E  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 29925  0044A2  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 29926  0044A6  ECBF  F012         	call	_LedBlinkStateMachine	;wreg free
 29927  0044AA  D008               	goto	L53
 29928  0044AC                     
 29929                           ; BSR set to: 0
 29930                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 29931                           
 29932                           ; BSR set to: 0
 29933  0044AC  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 29934  0044B0  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 29935  0044B4  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 29936  0044B8  EC1A  F019         	call	_LedPulseStateMachine	;wreg free
 29937  0044BC                     L53:
 29938  0044BC  0100               	movlb	0	; () banked
 29939  0044BE  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29940                           
 29941                           ; BSR set to: 0
 29942                           ;led.c: 281: }
 29943                           
 29944                           ; BSR set to: 0
 29945                           ;led.c: 280: break;
 29946                           
 29947                           ;led.c: 279: default:
 29948                           
 29949                           ;led.c: 277: break;
 29950  0044C0  D014               	goto	l2085
 29951  0044C2                     l2083:
 29952                           
 29953                           ; BSR set to: 0
 29954                           
 29955                           ; BSR set to: 0
 29956  0044C2  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 29957  0044C6  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 29958  0044CA  50DF               	movf	indf2,w,c
 29959                           
 29960                           ; Switch size 1, requested type "space"
 29961                           ; Number of cases is 5, Range of values is 0 to 4
 29962                           ; switch strategies available:
 29963                           ; Name         Instructions Cycles
 29964                           ; simple_byte           16     9 (average)
 29965                           ;	Chosen strategy is simple_byte
 29966  0044CC  0A00               	xorlw	0	; case 0
 29967  0044CE  B4D8               	btfsc	status,2,c
 29968  0044D0  D7C1               	goto	l2084
 29969  0044D2  0A01               	xorlw	1	; case 1
 29970  0044D4  B4D8               	btfsc	status,2,c
 29971  0044D6  D7C6               	goto	l2086
 29972  0044D8  0A03               	xorlw	3	; case 2
 29973  0044DA  B4D8               	btfsc	status,2,c
 29974  0044DC  D7CC               	goto	l2087
 29975  0044DE  0A01               	xorlw	1	; case 3
 29976  0044E0  B4D8               	btfsc	status,2,c
 29977  0044E2  D7DD               	goto	l2090
 29978  0044E4  0A07               	xorlw	7	; case 4
 29979  0044E6  B4D8               	btfsc	status,2,c
 29980  0044E8  D7E1               	goto	l2091
 29981  0044EA                     l2085:
 29982                           
 29983                           ;led.c: 283: return LedOutSts;
 29984                           
 29985                           ; BSR set to: 0
 29986  0044EA  0100               	movlb	0	; () banked
 29987  0044EC  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 29988  0044EE  0012               	return	
 29989  0044F0                     __end_of_LedStateMachine:
 29990                           	opt stack 0
 29991                           tosu	equ	0xFFF
 29992                           tosh	equ	0xFFE
 29993                           tosl	equ	0xFFD
 29994                           pclath	equ	0xFFA
 29995                           tblptru	equ	0xFF8
 29996                           tblptrh	equ	0xFF7
 29997                           tblptrl	equ	0xFF6
 29998                           tablat	equ	0xFF5
 29999                           prodh	equ	0xFF4
 30000                           prodl	equ	0xFF3
 30001                           intcon	equ	0xFF2
 30002                           intcon2	equ	0xFF1
 30003                           intcon3	equ	0xFF0
 30004                           indf0	equ	0xFEF
 30005                           postinc0	equ	0xFEE
 30006                           plusw0	equ	0xFEB
 30007                           fsr0h	equ	0xFEA
 30008                           fsr0l	equ	0xFE9
 30009                           wreg	equ	0xFE8
 30010                           indf1	equ	0xFE7
 30011                           postinc1	equ	0xFE6
 30012                           postdec1	equ	0xFE5
 30013                           plusw1	equ	0xFE3
 30014                           fsr1h	equ	0xFE2
 30015                           fsr1l	equ	0xFE1
 30016                           indf2	equ	0xFDF
 30017                           postinc2	equ	0xFDE
 30018                           postdec2	equ	0xFDD
 30019                           plusw2	equ	0xFDB
 30020                           fsr2h	equ	0xFDA
 30021                           fsr2l	equ	0xFD9
 30022                           status	equ	0xFD8
 30023                           
 30024 ;; *************** function _LedPulseStateMachine *****************
 30025 ;; Defined at:
 30026 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 30027 ;; Parameters:    Size  Location     Type
 30028 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 30029 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 30030 ;;  Led             1   44[BANK0 ] unsigned char 
 30031 ;; Auto vars:     Size  Location     Type
 30032 ;;		None
 30033 ;; Return value:  Size  Location     Type
 30034 ;;                  1    wreg      unsigned char 
 30035 ;; Registers used:
 30036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30037 ;; Tracked objects:
 30038 ;;		On entry : 0/0
 30039 ;;		On exit  : 0/0
 30040 ;;		Unchanged: 0/0
 30041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30042 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30044 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30045 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30046 ;;Total ram usage:        5 bytes
 30047 ;; Hardware stack levels used:    1
 30048 ;; Hardware stack levels required when called:   12
 30049 ;; This function calls:
 30050 ;;		_Led_SetLedStatus
 30051 ;;		___lwdiv
 30052 ;; This function is called by:
 30053 ;;		_LedStateMachine
 30054 ;; This function uses a non-reentrant model
 30055 ;;
 30056                           
 30057                           	psect	text137
 30058  003234                     __ptext137:
 30059                           	opt stack 0
 30060  003234                     _LedPulseStateMachine:
 30061                           	opt stack 14
 30062                           
 30063                           ;led.c: 185: switch (LedPulse->LedPulseState)
 30064                           
 30065                           ; BSR set to: 0
 30066                           ;incstack = 0
 30067  003234  D05C               	goto	l2073
 30068  003236                     
 30069                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 30070  003236  0100               	movlb	0	; () banked
 30071  003238  EE20 F001          	lfsr	2,1
 30072  00323C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30073  00323E  26D9               	addwf	fsr2l,f,c
 30074  003240  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30075  003242  22DA               	addwfc	fsr2h,f,c
 30076  003244  0E01               	movlw	1
 30077  003246  6EDF               	movwf	indf2,c
 30078                           
 30079                           ; BSR set to: 0
 30080                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 30081  003248  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 30082  00324C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 30083  003250  0E01               	movlw	1
 30084  003252  D036               	goto	L54
 30085  003254                     
 30086                           ;led.c: 196: LedPulse->LedPulseCounter++;
 30087                           
 30088                           ; BSR set to: 0
 30089  003254  0100               	movlb	0	; () banked
 30090  003256  EE20 F002          	lfsr	2,2
 30091  00325A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30092  00325C  26D9               	addwf	fsr2l,f,c
 30093  00325E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30094  003260  22DA               	addwfc	fsr2h,f,c
 30095  003262  2ADE               	incf	postinc2,f,c
 30096  003264  0E00               	movlw	0
 30097  003266  22DD               	addwfc	postdec2,f,c
 30098                           
 30099                           ; BSR set to: 0
 30100                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 30101  003268  EE20 F004          	lfsr	2,4
 30102  00326C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30103  00326E  26D9               	addwf	fsr2l,f,c
 30104  003270  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30105  003272  22DA               	addwfc	fsr2h,f,c
 30106  003274  CFDE F083          	movff	postinc2,___lwdiv@dividend
 30107  003278  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 30108  00327C  0E00               	movlw	0
 30109  00327E  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 30110  003280  0E32               	movlw	50
 30111  003282  6F85               	movwf	___lwdiv@divisor& (0+255),b
 30112  003284  ECA6  F02A         	call	___lwdiv	;wreg free
 30113  003288  0100               	movlb	0	; () banked
 30114  00328A  EE20 F002          	lfsr	2,2
 30115  00328E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30116  003290  26D9               	addwf	fsr2l,f,c
 30117  003292  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30118  003294  22DA               	addwfc	fsr2h,f,c
 30119  003296  5183               	movf	?___lwdiv& (0+255),w,b
 30120  003298  5CDE               	subwf	postinc2,w,c
 30121  00329A  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 30122  00329C  58DE               	subwfb	postinc2,w,c
 30123  00329E  A0D8               	btfss	status,0,c
 30124  0032A0  D034               	goto	l2075
 30125                           
 30126                           ; BSR set to: 0
 30127                           ;led.c: 199: {
 30128                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 30129  0032A2  EE20 F002          	lfsr	2,2
 30130  0032A6  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30131  0032A8  26D9               	addwf	fsr2l,f,c
 30132  0032AA  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30133  0032AC  22DA               	addwfc	fsr2h,f,c
 30134  0032AE  0E00               	movlw	0
 30135  0032B0  6EDE               	movwf	postinc2,c
 30136  0032B2  0E00               	movlw	0
 30137  0032B4  6EDD               	movwf	postdec2,c
 30138                           
 30139                           ; BSR set to: 0
 30140                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 30141  0032B6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 30142  0032BA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 30143  0032BE  0E02               	movlw	2
 30144  0032C0                     L54:
 30145  0032C0  6EDF               	movwf	indf2,c
 30146                           
 30147                           ; BSR set to: 0
 30148                           ;led.c: 204: }
 30149                           ;led.c: 205: break;
 30150  0032C2  D023               	goto	l2075
 30151  0032C4                     
 30152                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 30153                           
 30154                           ; BSR set to: 0
 30155  0032C4  0100               	movlb	0	; () banked
 30156  0032C6  EE20 F001          	lfsr	2,1
 30157  0032CA  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30158  0032CC  26D9               	addwf	fsr2l,f,c
 30159  0032CE  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30160  0032D0  22DA               	addwfc	fsr2h,f,c
 30161  0032D2  0E00               	movlw	0
 30162  0032D4  6EDF               	movwf	indf2,c
 30163                           
 30164                           ; BSR set to: 0
 30165                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 30166  0032D6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 30167  0032DA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 30168  0032DE  0E00               	movlw	0
 30169  0032E0  6EDF               	movwf	indf2,c
 30170                           
 30171                           ; BSR set to: 0
 30172                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 30173  0032E2  0E00               	movlw	0
 30174  0032E4  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 30175  0032E6  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 30176  0032E8  EC1A  F02F         	call	_Led_SetLedStatus
 30177                           
 30178                           ;led.c: 218: }
 30179                           
 30180                           ;led.c: 217: break;
 30181                           
 30182                           ;led.c: 216: default:
 30183                           
 30184                           ;led.c: 214: break;
 30185  0032EC  D00E               	goto	l2075
 30186  0032EE                     l2073:
 30187  0032EE  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 30188  0032F2  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 30189  0032F6  50DF               	movf	indf2,w,c
 30190                           
 30191                           ; Switch size 1, requested type "space"
 30192                           ; Number of cases is 3, Range of values is 0 to 2
 30193                           ; switch strategies available:
 30194                           ; Name         Instructions Cycles
 30195                           ; simple_byte           10     6 (average)
 30196                           ;	Chosen strategy is simple_byte
 30197  0032F8  0A00               	xorlw	0	; case 0
 30198  0032FA  B4D8               	btfsc	status,2,c
 30199  0032FC  D79C               	goto	l2074
 30200  0032FE  0A01               	xorlw	1	; case 1
 30201  003300  B4D8               	btfsc	status,2,c
 30202  003302  D7A8               	goto	l2076
 30203  003304  0A03               	xorlw	3	; case 2
 30204  003306  B4D8               	btfsc	status,2,c
 30205  003308  D7DD               	goto	l2078
 30206  00330A                     l2075:
 30207                           
 30208                           ;led.c: 221: return (LedPulse->LedOutState);
 30209  00330A  0100               	movlb	0	; () banked
 30210  00330C  EE20 F001          	lfsr	2,1
 30211  003310  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30212  003312  26D9               	addwf	fsr2l,f,c
 30213  003314  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30214  003316  22DA               	addwfc	fsr2h,f,c
 30215  003318  50DF               	movf	indf2,w,c
 30216  00331A  0012               	return	
 30217  00331C                     __end_of_LedPulseStateMachine:
 30218                           	opt stack 0
 30219                           tosu	equ	0xFFF
 30220                           tosh	equ	0xFFE
 30221                           tosl	equ	0xFFD
 30222                           pclath	equ	0xFFA
 30223                           tblptru	equ	0xFF8
 30224                           tblptrh	equ	0xFF7
 30225                           tblptrl	equ	0xFF6
 30226                           tablat	equ	0xFF5
 30227                           prodh	equ	0xFF4
 30228                           prodl	equ	0xFF3
 30229                           intcon	equ	0xFF2
 30230                           intcon2	equ	0xFF1
 30231                           intcon3	equ	0xFF0
 30232                           indf0	equ	0xFEF
 30233                           postinc0	equ	0xFEE
 30234                           plusw0	equ	0xFEB
 30235                           fsr0h	equ	0xFEA
 30236                           fsr0l	equ	0xFE9
 30237                           wreg	equ	0xFE8
 30238                           indf1	equ	0xFE7
 30239                           postinc1	equ	0xFE6
 30240                           postdec1	equ	0xFE5
 30241                           plusw1	equ	0xFE3
 30242                           fsr1h	equ	0xFE2
 30243                           fsr1l	equ	0xFE1
 30244                           indf2	equ	0xFDF
 30245                           postinc2	equ	0xFDE
 30246                           postdec2	equ	0xFDD
 30247                           plusw2	equ	0xFDB
 30248                           fsr2h	equ	0xFDA
 30249                           fsr2l	equ	0xFD9
 30250                           status	equ	0xFD8
 30251                           
 30252 ;; *************** function _Led_SetLedStatus *****************
 30253 ;; Defined at:
 30254 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 30255 ;; Parameters:    Size  Location     Type
 30256 ;;  Led             1    wreg     unsigned char 
 30257 ;;  LedSts          1   29[BANK0 ] enum E8951
 30258 ;; Auto vars:     Size  Location     Type
 30259 ;;  Led             1   30[BANK0 ] unsigned char 
 30260 ;; Return value:  Size  Location     Type
 30261 ;;                  1    wreg      void 
 30262 ;; Registers used:
 30263 ;;		wreg, status,2, status,0
 30264 ;; Tracked objects:
 30265 ;;		On entry : 0/0
 30266 ;;		On exit  : 0/0
 30267 ;;		Unchanged: 0/0
 30268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30269 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30272 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30273 ;;Total ram usage:        2 bytes
 30274 ;; Hardware stack levels used:    1
 30275 ;; Hardware stack levels required when called:   11
 30276 ;; This function calls:
 30277 ;;		Nothing
 30278 ;; This function is called by:
 30279 ;;		_LedPulseStateMachine
 30280 ;;		_LedStateMachine
 30281 ;;		_initEeprom
 30282 ;;		_blinkForSeconds
 30283 ;; This function uses a non-reentrant model
 30284 ;;
 30285                           
 30286                           	psect	text138
 30287  005E34                     __ptext138:
 30288                           	opt stack 0
 30289  005E34                     _Led_SetLedStatus:
 30290                           	opt stack 14
 30291                           
 30292                           ; BSR set to: 0
 30293                           ;incstack = 0
 30294                           ;Led_SetLedStatus@Led stored from wreg
 30295  005E34  0100               	movlb	0	; () banked
 30296  005E36  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 30297                           
 30298                           ;led.c: 341: switch (Led)
 30299  005E38  D009               	goto	l2104
 30300  005E3A                     l2105:
 30301                           
 30302                           ; BSR set to: 0
 30303                           ;led.c: 344: Led1Sts = LedSts;
 30304  005E3A  C07D  F1FC         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 30305                           
 30306                           ;led.c: 345: break;
 30307  005E3E  0012               	return	
 30308  005E40                     l2107:
 30309                           
 30310                           ; BSR set to: 0
 30311                           ;led.c: 348: Led2Sts = LedSts;
 30312  005E40  C07D  F1FA         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 30313                           
 30314                           ;led.c: 349: break;
 30315  005E44  0012               	return	
 30316  005E46                     l2108:
 30317                           
 30318                           ; BSR set to: 0
 30319                           ;led.c: 352: Led3Sts = LedSts;
 30320  005E46  C07D  F1F8         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 30321                           
 30322                           ; BSR set to: 0
 30323                           ;led.c: 357: }
 30324                           
 30325                           ; BSR set to: 0
 30326                           ;led.c: 356: break;
 30327                           
 30328                           ;led.c: 355: default:
 30329                           
 30330                           ;led.c: 353: break;
 30331  005E4A  0012               	return	
 30332  005E4C                     l2104:
 30333                           
 30334                           ; BSR set to: 0
 30335  005E4C  0100               	movlb	0	; () banked
 30336  005E4E  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 30337                           
 30338                           ; Switch size 1, requested type "space"
 30339                           ; Number of cases is 3, Range of values is 1 to 3
 30340                           ; switch strategies available:
 30341                           ; Name         Instructions Cycles
 30342                           ; simple_byte           10     6 (average)
 30343                           ;	Chosen strategy is simple_byte
 30344  005E50  0A01               	xorlw	1	; case 1
 30345  005E52  B4D8               	btfsc	status,2,c
 30346  005E54  D7F2               	goto	l2105
 30347  005E56  0A03               	xorlw	3	; case 2
 30348  005E58  B4D8               	btfsc	status,2,c
 30349  005E5A  D7F2               	goto	l2107
 30350  005E5C  0A01               	xorlw	1	; case 3
 30351  005E5E  A4D8               	btfss	status,2,c
 30352  005E60  0012               	return	
 30353  005E62  D7F1               	goto	l2108
 30354  005E64                     __end_of_Led_SetLedStatus:
 30355                           	opt stack 0
 30356                           tosu	equ	0xFFF
 30357                           tosh	equ	0xFFE
 30358                           tosl	equ	0xFFD
 30359                           pclath	equ	0xFFA
 30360                           tblptru	equ	0xFF8
 30361                           tblptrh	equ	0xFF7
 30362                           tblptrl	equ	0xFF6
 30363                           tablat	equ	0xFF5
 30364                           prodh	equ	0xFF4
 30365                           prodl	equ	0xFF3
 30366                           intcon	equ	0xFF2
 30367                           intcon2	equ	0xFF1
 30368                           intcon3	equ	0xFF0
 30369                           indf0	equ	0xFEF
 30370                           postinc0	equ	0xFEE
 30371                           plusw0	equ	0xFEB
 30372                           fsr0h	equ	0xFEA
 30373                           fsr0l	equ	0xFE9
 30374                           wreg	equ	0xFE8
 30375                           indf1	equ	0xFE7
 30376                           postinc1	equ	0xFE6
 30377                           postdec1	equ	0xFE5
 30378                           plusw1	equ	0xFE3
 30379                           fsr1h	equ	0xFE2
 30380                           fsr1l	equ	0xFE1
 30381                           indf2	equ	0xFDF
 30382                           postinc2	equ	0xFDE
 30383                           postdec2	equ	0xFDD
 30384                           plusw2	equ	0xFDB
 30385                           fsr2h	equ	0xFDA
 30386                           fsr2l	equ	0xFD9
 30387                           status	equ	0xFD8
 30388                           
 30389 ;; *************** function _LedBlinkStateMachine *****************
 30390 ;; Defined at:
 30391 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 30392 ;; Parameters:    Size  Location     Type
 30393 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 30394 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 30395 ;; Auto vars:     Size  Location     Type
 30396 ;;		None
 30397 ;; Return value:  Size  Location     Type
 30398 ;;                  1    wreg      unsigned char 
 30399 ;; Registers used:
 30400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30401 ;; Tracked objects:
 30402 ;;		On entry : 0/0
 30403 ;;		On exit  : 0/0
 30404 ;;		Unchanged: 0/0
 30405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30406 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30408 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30409 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30410 ;;Total ram usage:        4 bytes
 30411 ;; Hardware stack levels used:    1
 30412 ;; Hardware stack levels required when called:   12
 30413 ;; This function calls:
 30414 ;;		___lwdiv
 30415 ;; This function is called by:
 30416 ;;		_LedStateMachine
 30417 ;; This function uses a non-reentrant model
 30418 ;;
 30419                           
 30420                           	psect	text139
 30421  00257E                     __ptext139:
 30422                           	opt stack 0
 30423  00257E                     _LedBlinkStateMachine:
 30424                           	opt stack 14
 30425                           
 30426                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 30427                           
 30428                           ; BSR set to: 0
 30429                           ;incstack = 0
 30430  00257E  D08F               	goto	l2060
 30431  002580                     
 30432                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 30433  002580  0100               	movlb	0	; () banked
 30434  002582  EE20 F008          	lfsr	2,8
 30435  002586  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30436  002588  26D9               	addwf	fsr2l,f,c
 30437  00258A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30438  00258C  22DA               	addwfc	fsr2h,f,c
 30439  00258E  EE10 F001          	lfsr	1,1
 30440  002592  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30441  002594  26E1               	addwf	fsr1l,f,c
 30442  002596  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30443  002598  22E2               	addwfc	fsr1h,f,c
 30444  00259A  CFDF FFE7          	movff	indf2,indf1
 30445                           
 30446                           ; BSR set to: 0
 30447                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 30448  00259E  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 30449  0025A2  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 30450  0025A6  D040               	goto	L55
 30451  0025A8                     
 30452                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 30453                           
 30454                           ; BSR set to: 0
 30455  0025A8  0100               	movlb	0	; () banked
 30456  0025AA  EE20 F002          	lfsr	2,2
 30457  0025AE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30458  0025B0  26D9               	addwf	fsr2l,f,c
 30459  0025B2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30460  0025B4  22DA               	addwfc	fsr2h,f,c
 30461  0025B6  2ADE               	incf	postinc2,f,c
 30462  0025B8  0E00               	movlw	0
 30463  0025BA  22DD               	addwfc	postdec2,f,c
 30464                           
 30465                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 30466  0025BC  EE20 F001          	lfsr	2,1
 30467  0025C0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30468  0025C2  26D9               	addwf	fsr2l,f,c
 30469  0025C4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30470  0025C6  22DA               	addwfc	fsr2h,f,c
 30471  0025C8  50DF               	movf	indf2,w,c
 30472  0025CA  A4D8               	btfss	status,2,c
 30473  0025CC  D02F               	goto	l2064
 30474                           
 30475                           ; BSR set to: 0
 30476                           ;led.c: 142: {
 30477                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 30478  0025CE  EE20 F006          	lfsr	2,6
 30479  0025D2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30480  0025D4  26D9               	addwf	fsr2l,f,c
 30481  0025D6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30482  0025D8  22DA               	addwfc	fsr2h,f,c
 30483  0025DA  CFDE F083          	movff	postinc2,___lwdiv@dividend
 30484  0025DE  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 30485  0025E2  0E00               	movlw	0
 30486  0025E4  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 30487  0025E6  0E32               	movlw	50
 30488  0025E8  6F85               	movwf	___lwdiv@divisor& (0+255),b
 30489  0025EA  ECA6  F02A         	call	___lwdiv	;wreg free
 30490  0025EE  0100               	movlb	0	; () banked
 30491  0025F0  EE20 F002          	lfsr	2,2
 30492  0025F4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30493  0025F6  26D9               	addwf	fsr2l,f,c
 30494  0025F8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30495  0025FA  22DA               	addwfc	fsr2h,f,c
 30496  0025FC  5183               	movf	?___lwdiv& (0+255),w,b
 30497  0025FE  5CDE               	subwf	postinc2,w,c
 30498  002600  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 30499  002602  58DE               	subwfb	postinc2,w,c
 30500  002604  A0D8               	btfss	status,0,c
 30501  002606  D056               	goto	l2062
 30502                           
 30503                           ; BSR set to: 0
 30504                           ;led.c: 145: {
 30505                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 30506  002608  EE20 F002          	lfsr	2,2
 30507  00260C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30508  00260E  26D9               	addwf	fsr2l,f,c
 30509  002610  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30510  002612  22DA               	addwfc	fsr2h,f,c
 30511  002614  0E00               	movlw	0
 30512  002616  6EDE               	movwf	postinc2,c
 30513  002618  0E00               	movlw	0
 30514  00261A  6EDD               	movwf	postdec2,c
 30515                           
 30516                           ;led.c: 149: LedBlink->LedOutState = OnState;
 30517  00261C  EE20 F001          	lfsr	2,1
 30518  002620  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30519  002622  26D9               	addwf	fsr2l,f,c
 30520  002624  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30521  002626  22DA               	addwfc	fsr2h,f,c
 30522  002628                     L55:
 30523  002628  0E01               	movlw	1
 30524  00262A  D037               	goto	L56
 30525  00262C                     l2064:
 30526                           
 30527                           ; BSR set to: 0
 30528                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 30529                           
 30530                           ; BSR set to: 0
 30531  00262C  EE20 F001          	lfsr	2,1
 30532  002630  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30533  002632  26D9               	addwf	fsr2l,f,c
 30534  002634  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30535  002636  22DA               	addwfc	fsr2h,f,c
 30536  002638  04DE               	decf	postinc2,w,c
 30537  00263A  A4D8               	btfss	status,2,c
 30538  00263C  D03B               	goto	l2062
 30539                           
 30540                           ; BSR set to: 0
 30541                           ;led.c: 153: {
 30542                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 30543  00263E  EE20 F004          	lfsr	2,4
 30544  002642  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30545  002644  26D9               	addwf	fsr2l,f,c
 30546  002646  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30547  002648  22DA               	addwfc	fsr2h,f,c
 30548  00264A  CFDE F083          	movff	postinc2,___lwdiv@dividend
 30549  00264E  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 30550  002652  0E00               	movlw	0
 30551  002654  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 30552  002656  0E32               	movlw	50
 30553  002658  6F85               	movwf	___lwdiv@divisor& (0+255),b
 30554  00265A  ECA6  F02A         	call	___lwdiv	;wreg free
 30555  00265E  0100               	movlb	0	; () banked
 30556  002660  EE20 F002          	lfsr	2,2
 30557  002664  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30558  002666  26D9               	addwf	fsr2l,f,c
 30559  002668  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30560  00266A  22DA               	addwfc	fsr2h,f,c
 30561  00266C  5183               	movf	?___lwdiv& (0+255),w,b
 30562  00266E  5CDE               	subwf	postinc2,w,c
 30563  002670  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 30564  002672  58DE               	subwfb	postinc2,w,c
 30565  002674  A0D8               	btfss	status,0,c
 30566  002676  D01E               	goto	l2062
 30567                           
 30568                           ; BSR set to: 0
 30569                           ;led.c: 156: {
 30570                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 30571  002678  EE20 F002          	lfsr	2,2
 30572  00267C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30573  00267E  26D9               	addwf	fsr2l,f,c
 30574  002680  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30575  002682  22DA               	addwfc	fsr2h,f,c
 30576  002684  0E00               	movlw	0
 30577  002686  6EDE               	movwf	postinc2,c
 30578  002688  0E00               	movlw	0
 30579  00268A  6EDD               	movwf	postdec2,c
 30580                           
 30581                           ;led.c: 160: LedBlink->LedOutState = OffState;
 30582  00268C  EE20 F001          	lfsr	2,1
 30583  002690  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30584  002692  26D9               	addwf	fsr2l,f,c
 30585  002694  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30586  002696  22DA               	addwfc	fsr2h,f,c
 30587  002698  0E00               	movlw	0
 30588  00269A                     L56:
 30589  00269A  6EDF               	movwf	indf2,c
 30590                           
 30591                           ; BSR set to: 0
 30592                           ;led.c: 167: }
 30593                           
 30594                           ; BSR set to: 0
 30595                           ;led.c: 166: break;
 30596                           
 30597                           ;led.c: 165: default:
 30598                           
 30599                           ; BSR set to: 0
 30600                           ;led.c: 161: }
 30601                           ;led.c: 162: }
 30602                           ;led.c: 163: break;
 30603                           
 30604                           ; BSR set to: 0
 30605                           
 30606                           ; BSR set to: 0
 30607  00269C  D00B               	goto	l2062
 30608  00269E                     l2060:
 30609                           
 30610                           ; BSR set to: 0
 30611  00269E  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 30612  0026A2  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 30613  0026A6  50DF               	movf	indf2,w,c
 30614                           
 30615                           ; Switch size 1, requested type "space"
 30616                           ; Number of cases is 2, Range of values is 0 to 1
 30617                           ; switch strategies available:
 30618                           ; Name         Instructions Cycles
 30619                           ; simple_byte            7     4 (average)
 30620                           ;	Chosen strategy is simple_byte
 30621  0026A8  0A00               	xorlw	0	; case 0
 30622  0026AA  B4D8               	btfsc	status,2,c
 30623  0026AC  D769               	goto	l2061
 30624  0026AE  0A01               	xorlw	1	; case 1
 30625  0026B0  B4D8               	btfsc	status,2,c
 30626  0026B2  D77A               	goto	l2063
 30627  0026B4                     l2062:
 30628                           
 30629                           ;led.c: 170: return (LedBlink->LedOutState);
 30630  0026B4  0100               	movlb	0	; () banked
 30631  0026B6  EE20 F001          	lfsr	2,1
 30632  0026BA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30633  0026BC  26D9               	addwf	fsr2l,f,c
 30634  0026BE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30635  0026C0  22DA               	addwfc	fsr2h,f,c
 30636  0026C2  50DF               	movf	indf2,w,c
 30637  0026C4  0012               	return	
 30638  0026C6                     __end_of_LedBlinkStateMachine:
 30639                           	opt stack 0
 30640                           tosu	equ	0xFFF
 30641                           tosh	equ	0xFFE
 30642                           tosl	equ	0xFFD
 30643                           pclath	equ	0xFFA
 30644                           tblptru	equ	0xFF8
 30645                           tblptrh	equ	0xFF7
 30646                           tblptrl	equ	0xFF6
 30647                           tablat	equ	0xFF5
 30648                           prodh	equ	0xFF4
 30649                           prodl	equ	0xFF3
 30650                           intcon	equ	0xFF2
 30651                           intcon2	equ	0xFF1
 30652                           intcon3	equ	0xFF0
 30653                           indf0	equ	0xFEF
 30654                           postinc0	equ	0xFEE
 30655                           plusw0	equ	0xFEB
 30656                           fsr0h	equ	0xFEA
 30657                           fsr0l	equ	0xFE9
 30658                           wreg	equ	0xFE8
 30659                           indf1	equ	0xFE7
 30660                           postinc1	equ	0xFE6
 30661                           postdec1	equ	0xFE5
 30662                           plusw1	equ	0xFE3
 30663                           fsr1h	equ	0xFE2
 30664                           fsr1l	equ	0xFE1
 30665                           indf2	equ	0xFDF
 30666                           postinc2	equ	0xFDE
 30667                           postdec2	equ	0xFDD
 30668                           plusw2	equ	0xFDB
 30669                           fsr2h	equ	0xFDA
 30670                           fsr2l	equ	0xFD9
 30671                           status	equ	0xFD8
 30672                           
 30673 ;; *************** function ___lwdiv *****************
 30674 ;; Defined at:
 30675 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 30676 ;; Parameters:    Size  Location     Type
 30677 ;;  dividend        2   35[BANK0 ] unsigned int 
 30678 ;;  divisor         2   37[BANK0 ] unsigned int 
 30679 ;; Auto vars:     Size  Location     Type
 30680 ;;  quotient        2   40[BANK0 ] unsigned int 
 30681 ;;  counter         1   39[BANK0 ] unsigned char 
 30682 ;; Return value:  Size  Location     Type
 30683 ;;                  2   35[BANK0 ] unsigned int 
 30684 ;; Registers used:
 30685 ;;		wreg, status,2, status,0
 30686 ;; Tracked objects:
 30687 ;;		On entry : 0/0
 30688 ;;		On exit  : 0/0
 30689 ;;		Unchanged: 0/0
 30690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30691 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30692 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30694 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30695 ;;Total ram usage:        7 bytes
 30696 ;; Hardware stack levels used:    1
 30697 ;; Hardware stack levels required when called:   11
 30698 ;; This function calls:
 30699 ;;		Nothing
 30700 ;; This function is called by:
 30701 ;;		_LedBlinkStateMachine
 30702 ;;		_LedPulseStateMachine
 30703 ;;		_secondsAppTimer
 30704 ;;		_utoa
 30705 ;; This function uses a non-reentrant model
 30706 ;;
 30707                           
 30708                           	psect	text140
 30709  00554C                     __ptext140:
 30710                           	opt stack 0
 30711  00554C                     ___lwdiv:
 30712                           	opt stack 14
 30713                           
 30714                           ; BSR set to: 0
 30715                           ;incstack = 0
 30716  00554C  0E00               	movlw	0
 30717  00554E  0100               	movlb	0	; () banked
 30718  005550  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 30719  005552  0E00               	movlw	0
 30720  005554  6F88               	movwf	___lwdiv@quotient& (0+255),b
 30721                           
 30722                           ; BSR set to: 0
 30723  005556  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30724  005558  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 30725  00555A  B4D8               	btfsc	status,2,c
 30726  00555C  D01C               	goto	l3138
 30727                           
 30728                           ; BSR set to: 0
 30729  00555E  0E01               	movlw	1
 30730  005560  6F87               	movwf	___lwdiv@counter& (0+255),b
 30731  005562  D004               	goto	l3133
 30732  005564                     
 30733                           ; BSR set to: 0
 30734                           
 30735                           ; BSR set to: 0
 30736  005564  90D8               	bcf	status,0,c
 30737  005566  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 30738  005568  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 30739  00556A  2B87               	incf	___lwdiv@counter& (0+255),f,b
 30740  00556C                     l3133:
 30741                           
 30742                           ; BSR set to: 0
 30743                           
 30744                           ; BSR set to: 0
 30745  00556C  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 30746  00556E  D7FA               	goto	l3134
 30747  005570                     u11180:
 30748                           
 30749                           ; BSR set to: 0
 30750                           
 30751                           ; BSR set to: 0
 30752                           
 30753                           ; BSR set to: 0
 30754  005570  90D8               	bcf	status,0,c
 30755  005572  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 30756  005574  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 30757                           
 30758                           ; BSR set to: 0
 30759  005576  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30760  005578  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 30761  00557A  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30762  00557C  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 30763  00557E  A0D8               	btfss	status,0,c
 30764  005580  D005               	goto	l3137
 30765                           
 30766                           ; BSR set to: 0
 30767  005582  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30768  005584  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 30769  005586  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30770  005588  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 30771                           
 30772                           ; BSR set to: 0
 30773  00558A  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 30774  00558C                     l3137:
 30775                           
 30776                           ; BSR set to: 0
 30777                           
 30778                           ; BSR set to: 0
 30779  00558C  90D8               	bcf	status,0,c
 30780  00558E  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 30781  005590  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 30782                           
 30783                           ; BSR set to: 0
 30784  005592  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 30785  005594  D7ED               	goto	u11180
 30786  005596                     l3138:
 30787                           
 30788                           ; BSR set to: 0
 30789                           
 30790                           ; BSR set to: 0
 30791  005596  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 30792  00559A  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30793                           
 30794                           ; BSR set to: 0
 30795  00559E  0012               	return		;funcret
 30796  0055A0                     __end_of___lwdiv:
 30797                           	opt stack 0
 30798                           tosu	equ	0xFFF
 30799                           tosh	equ	0xFFE
 30800                           tosl	equ	0xFFD
 30801                           pclath	equ	0xFFA
 30802                           tblptru	equ	0xFF8
 30803                           tblptrh	equ	0xFF7
 30804                           tblptrl	equ	0xFF6
 30805                           tablat	equ	0xFF5
 30806                           prodh	equ	0xFF4
 30807                           prodl	equ	0xFF3
 30808                           intcon	equ	0xFF2
 30809                           intcon2	equ	0xFF1
 30810                           intcon3	equ	0xFF0
 30811                           indf0	equ	0xFEF
 30812                           postinc0	equ	0xFEE
 30813                           plusw0	equ	0xFEB
 30814                           fsr0h	equ	0xFEA
 30815                           fsr0l	equ	0xFE9
 30816                           wreg	equ	0xFE8
 30817                           indf1	equ	0xFE7
 30818                           postinc1	equ	0xFE6
 30819                           postdec1	equ	0xFE5
 30820                           plusw1	equ	0xFE3
 30821                           fsr1h	equ	0xFE2
 30822                           fsr1l	equ	0xFE1
 30823                           indf2	equ	0xFDF
 30824                           postinc2	equ	0xFDE
 30825                           postdec2	equ	0xFDD
 30826                           plusw2	equ	0xFDB
 30827                           fsr2h	equ	0xFDA
 30828                           fsr2l	equ	0xFD9
 30829                           status	equ	0xFD8
 30830                           
 30831 ;; *************** function _OsAlrm_SetOsAlarm *****************
 30832 ;; Defined at:
 30833 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 30834 ;; Parameters:    Size  Location     Type
 30835 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 30836 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 30837 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 30838 ;;		 -> I2cDummyTx(1), 
 30839 ;; Auto vars:     Size  Location     Type
 30840 ;;		None
 30841 ;; Return value:  Size  Location     Type
 30842 ;;                  1    wreg      void 
 30843 ;; Registers used:
 30844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30845 ;; Tracked objects:
 30846 ;;		On entry : 0/0
 30847 ;;		On exit  : 0/0
 30848 ;;		Unchanged: 0/0
 30849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30850 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30853 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30854 ;;Total ram usage:        8 bytes
 30855 ;; Hardware stack levels used:    1
 30856 ;; Hardware stack levels required when called:   12
 30857 ;; This function calls:
 30858 ;;		___wmul
 30859 ;; This function is called by:
 30860 ;;		_I2cSlv_MainTask
 30861 ;; This function uses a non-reentrant model
 30862 ;;
 30863                           
 30864                           	psect	text141
 30865  003DDC                     __ptext141:
 30866                           	opt stack 0
 30867  003DDC                     _OsAlrm_SetOsAlarm:
 30868                           	opt stack 15
 30869                           
 30870                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 30871                           
 30872                           ; BSR set to: 0
 30873                           ;incstack = 0
 30874  003DDC  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30875  003DE0  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30876  003DE4  0E00               	movlw	0
 30877  003DE6  0100               	movlb	0	; () banked
 30878  003DE8  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30879  003DEA  0E0B               	movlw	11
 30880  003DEC  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30881  003DEE  ECA0  F02F         	call	___wmul	;wreg free
 30882  003DF2  0E00               	movlw	low _OsAlarms
 30883  003DF4  0100               	movlb	0	; () banked
 30884  003DF6  257D               	addwf	?___wmul& (0+255),w,b
 30885  003DF8  6ED9               	movwf	fsr2l,c
 30886  003DFA  0E06               	movlw	high _OsAlarms
 30887  003DFC  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30888  003DFE  6EDA               	movwf	fsr2h,c
 30889  003E00  0E01               	movlw	1
 30890  003E02  6EDF               	movwf	indf2,c
 30891                           
 30892                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 30893  003E04  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30894  003E08  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30895  003E0C  0E00               	movlw	0
 30896  003E0E  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30897  003E10  0E0B               	movlw	11
 30898  003E12  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30899  003E14  ECA0  F02F         	call	___wmul	;wreg free
 30900  003E18  0E01               	movlw	1
 30901  003E1A  0100               	movlb	0	; () banked
 30902  003E1C  277D               	addwf	?___wmul& (0+255),f,b
 30903  003E1E  0E00               	movlw	0
 30904  003E20  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30905  003E22  0E00               	movlw	low _OsAlarms
 30906  003E24  257D               	addwf	?___wmul& (0+255),w,b
 30907  003E26  6ED9               	movwf	fsr2l,c
 30908  003E28  0E06               	movlw	high _OsAlarms
 30909  003E2A  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30910  003E2C  6EDA               	movwf	fsr2h,c
 30911  003E2E  6ADE               	clrf	postinc2,c
 30912  003E30  6ADE               	clrf	postinc2,c
 30913  003E32  6ADE               	clrf	postinc2,c
 30914  003E34  6ADD               	clrf	postdec2,c
 30915                           
 30916                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 30917  003E36  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30918  003E3A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30919  003E3E  0E00               	movlw	0
 30920  003E40  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30921  003E42  0E0B               	movlw	11
 30922  003E44  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30923  003E46  ECA0  F02F         	call	___wmul	;wreg free
 30924  003E4A  0E05               	movlw	5
 30925  003E4C  0100               	movlb	0	; () banked
 30926  003E4E  277D               	addwf	?___wmul& (0+255),f,b
 30927  003E50  0E00               	movlw	0
 30928  003E52  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30929  003E54  0E00               	movlw	low _OsAlarms
 30930  003E56  257D               	addwf	?___wmul& (0+255),w,b
 30931  003E58  6ED9               	movwf	fsr2l,c
 30932  003E5A  0E06               	movlw	high _OsAlarms
 30933  003E5C  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30934  003E5E  6EDA               	movwf	fsr2h,c
 30935  003E60  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 30936  003E64  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 30937  003E68  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 30938  003E6C  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 30939                           
 30940                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 30941  003E70  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30942  003E74  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30943  003E78  0E00               	movlw	0
 30944  003E7A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30945  003E7C  0E0B               	movlw	11
 30946  003E7E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30947  003E80  ECA0  F02F         	call	___wmul	;wreg free
 30948  003E84  0E09               	movlw	9
 30949  003E86  0100               	movlb	0	; () banked
 30950  003E88  277D               	addwf	?___wmul& (0+255),f,b
 30951  003E8A  0E00               	movlw	0
 30952  003E8C  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30953  003E8E  0E00               	movlw	low _OsAlarms
 30954  003E90  257D               	addwf	?___wmul& (0+255),w,b
 30955  003E92  6ED9               	movwf	fsr2l,c
 30956  003E94  0E06               	movlw	high _OsAlarms
 30957  003E96  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30958  003E98  6EDA               	movwf	fsr2h,c
 30959  003E9A  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 30960  003E9E  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 30961                           
 30962                           ; BSR set to: 0
 30963  003EA2  0012               	return		;funcret
 30964  003EA4                     __end_of_OsAlrm_SetOsAlarm:
 30965                           	opt stack 0
 30966                           tosu	equ	0xFFF
 30967                           tosh	equ	0xFFE
 30968                           tosl	equ	0xFFD
 30969                           pclath	equ	0xFFA
 30970                           tblptru	equ	0xFF8
 30971                           tblptrh	equ	0xFF7
 30972                           tblptrl	equ	0xFF6
 30973                           tablat	equ	0xFF5
 30974                           prodh	equ	0xFF4
 30975                           prodl	equ	0xFF3
 30976                           intcon	equ	0xFF2
 30977                           intcon2	equ	0xFF1
 30978                           intcon3	equ	0xFF0
 30979                           indf0	equ	0xFEF
 30980                           postinc0	equ	0xFEE
 30981                           plusw0	equ	0xFEB
 30982                           fsr0h	equ	0xFEA
 30983                           fsr0l	equ	0xFE9
 30984                           wreg	equ	0xFE8
 30985                           indf1	equ	0xFE7
 30986                           postinc1	equ	0xFE6
 30987                           postdec1	equ	0xFE5
 30988                           plusw1	equ	0xFE3
 30989                           fsr1h	equ	0xFE2
 30990                           fsr1l	equ	0xFE1
 30991                           indf2	equ	0xFDF
 30992                           postinc2	equ	0xFDE
 30993                           postdec2	equ	0xFDD
 30994                           plusw2	equ	0xFDB
 30995                           fsr2h	equ	0xFDA
 30996                           fsr2l	equ	0xFD9
 30997                           status	equ	0xFD8
 30998                           
 30999 ;; *************** function ___wmul *****************
 31000 ;; Defined at:
 31001 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 31002 ;; Parameters:    Size  Location     Type
 31003 ;;  multiplier      2   29[BANK0 ] unsigned int 
 31004 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 31005 ;; Auto vars:     Size  Location     Type
 31006 ;;  product         2   33[BANK0 ] unsigned int 
 31007 ;; Return value:  Size  Location     Type
 31008 ;;                  2   29[BANK0 ] unsigned int 
 31009 ;; Registers used:
 31010 ;;		wreg, status,2, status,0, prodl, prodh
 31011 ;; Tracked objects:
 31012 ;;		On entry : 0/0
 31013 ;;		On exit  : 0/0
 31014 ;;		Unchanged: 0/0
 31015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31016 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31017 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31019 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31020 ;;Total ram usage:        6 bytes
 31021 ;; Hardware stack levels used:    1
 31022 ;; Hardware stack levels required when called:   11
 31023 ;; This function calls:
 31024 ;;		Nothing
 31025 ;; This function is called by:
 31026 ;;		_OsAlrm_SetOsAlarm
 31027 ;;		_secondsAppTimer
 31028 ;;		_atoi
 31029 ;; This function uses a non-reentrant model
 31030 ;;
 31031                           
 31032                           	psect	text142
 31033  005F40                     __ptext142:
 31034                           	opt stack 0
 31035  005F40                     ___wmul:
 31036                           	opt stack 13
 31037                           
 31038                           ; BSR set to: 0
 31039                           ;incstack = 0
 31040  005F40  0100               	movlb	0	; () banked
 31041  005F42  517D               	movf	___wmul@multiplier& (0+255),w,b
 31042  005F44  037F               	mulwf	___wmul@multiplicand& (0+255),b
 31043  005F46  CFF3 F081          	movff	prodl,___wmul@product
 31044  005F4A  CFF4 F082          	movff	prodh,___wmul@product+1
 31045  005F4E  517D               	movf	___wmul@multiplier& (0+255),w,b
 31046  005F50  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 31047  005F52  50F3               	movf	prodl,w,c
 31048  005F54  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 31049  005F56  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 31050  005F58  037F               	mulwf	___wmul@multiplicand& (0+255),b
 31051  005F5A  50F3               	movf	prodl,w,c
 31052  005F5C  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 31053                           
 31054                           ; BSR set to: 0
 31055  005F5E  C081  F07D         	movff	___wmul@product,?___wmul
 31056  005F62  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 31057  005F66  0012               	return	
 31058  005F68                     __end_of___wmul:
 31059                           	opt stack 0
 31060                           tosu	equ	0xFFF
 31061                           tosh	equ	0xFFE
 31062                           tosl	equ	0xFFD
 31063                           pclath	equ	0xFFA
 31064                           tblptru	equ	0xFF8
 31065                           tblptrh	equ	0xFF7
 31066                           tblptrl	equ	0xFF6
 31067                           tablat	equ	0xFF5
 31068                           prodh	equ	0xFF4
 31069                           prodl	equ	0xFF3
 31070                           intcon	equ	0xFF2
 31071                           intcon2	equ	0xFF1
 31072                           intcon3	equ	0xFF0
 31073                           indf0	equ	0xFEF
 31074                           postinc0	equ	0xFEE
 31075                           plusw0	equ	0xFEB
 31076                           fsr0h	equ	0xFEA
 31077                           fsr0l	equ	0xFE9
 31078                           wreg	equ	0xFE8
 31079                           indf1	equ	0xFE7
 31080                           postinc1	equ	0xFE6
 31081                           postdec1	equ	0xFE5
 31082                           plusw1	equ	0xFE3
 31083                           fsr1h	equ	0xFE2
 31084                           fsr1l	equ	0xFE1
 31085                           indf2	equ	0xFDF
 31086                           postinc2	equ	0xFDE
 31087                           postdec2	equ	0xFDD
 31088                           plusw2	equ	0xFDB
 31089                           fsr2h	equ	0xFDA
 31090                           fsr2l	equ	0xFD9
 31091                           status	equ	0xFD8
 31092                           
 31093 ;; *************** function _I2c_InitI2cModule *****************
 31094 ;; Defined at:
 31095 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31096 ;; Parameters:    Size  Location     Type
 31097 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 31098 ;;		 -> I2cConfig(10), 
 31099 ;; Auto vars:     Size  Location     Type
 31100 ;;		None
 31101 ;; Return value:  Size  Location     Type
 31102 ;;                  1    wreg      void 
 31103 ;; Registers used:
 31104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31105 ;; Tracked objects:
 31106 ;;		On entry : 0/0
 31107 ;;		On exit  : 0/0
 31108 ;;		Unchanged: 0/0
 31109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31110 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31112 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31113 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31114 ;;Total ram usage:        4 bytes
 31115 ;; Hardware stack levels used:    1
 31116 ;; Hardware stack levels required when called:   13
 31117 ;; This function calls:
 31118 ;;		_SetBaudRate
 31119 ;; This function is called by:
 31120 ;;		_I2cSlv_MainTask
 31121 ;; This function uses a non-reentrant model
 31122 ;;
 31123                           
 31124                           	psect	text143
 31125  004F0C                     __ptext143:
 31126                           	opt stack 0
 31127  004F0C                     _I2c_InitI2cModule:
 31128                           	opt stack 14
 31129                           
 31130                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 31131                           
 31132                           ; BSR set to: 0
 31133                           ;incstack = 0
 31134  004F0C  8295               	bsf	3989,1,c	;volatile
 31135                           
 31136                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 31137  004F0E  8095               	bsf	3989,0,c	;volatile
 31138                           
 31139                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 31140  004F10  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 31141  004F14  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 31142  004F18  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 31143  004F1C  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 31144  004F20  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 31145  004F24  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 31146  004F28  0100               	movlb	0	; () banked
 31147  004F2A  EE20 F004          	lfsr	2,4
 31148  004F2E  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 31149  004F30  26D9               	addwf	fsr2l,f,c
 31150  004F32  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 31151  004F34  22DA               	addwfc	fsr2h,f,c
 31152  004F36  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 31153  004F3A  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 31154  004F3E  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 31155  004F42  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 31156  004F46  EC98  F02B         	call	_SetBaudRate	;wreg free
 31157                           
 31158                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 31159  004F4A  0100               	movlb	0	; () banked
 31160  004F4C  EE20 F008          	lfsr	2,8
 31161  004F50  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 31162  004F52  26D9               	addwf	fsr2l,f,c
 31163  004F54  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 31164  004F56  22DA               	addwfc	fsr2h,f,c
 31165  004F58  50DF               	movf	indf2,w,c
 31166  004F5A  1272               	iorwf	3954,f,c	;volatile
 31167                           
 31168                           ; BSR set to: 0
 31169                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 31170  004F5C  EE20 F009          	lfsr	2,9
 31171  004F60  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 31172  004F62  26D9               	addwf	fsr2l,f,c
 31173  004F64  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 31174  004F66  22DA               	addwfc	fsr2h,f,c
 31175  004F68  50DF               	movf	indf2,w,c
 31176  004F6A  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 31177  004F6C  0E05               	movlw	5
 31178  004F6E  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 31179  004F70                     u13455:
 31180  004F70  90D8               	bcf	status,0,c
 31181  004F72  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 31182  004F74  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 31183  004F76  D7FC               	goto	u13455
 31184  004F78  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 31185  004F7A  1272               	iorwf	3954,f,c	;volatile
 31186                           
 31187                           ; BSR set to: 0
 31188  004F7C  0012               	return		;funcret
 31189  004F7E                     __end_of_I2c_InitI2cModule:
 31190                           	opt stack 0
 31191                           tosu	equ	0xFFF
 31192                           tosh	equ	0xFFE
 31193                           tosl	equ	0xFFD
 31194                           pclath	equ	0xFFA
 31195                           tblptru	equ	0xFF8
 31196                           tblptrh	equ	0xFF7
 31197                           tblptrl	equ	0xFF6
 31198                           tablat	equ	0xFF5
 31199                           prodh	equ	0xFF4
 31200                           prodl	equ	0xFF3
 31201                           intcon	equ	0xFF2
 31202                           intcon2	equ	0xFF1
 31203                           intcon3	equ	0xFF0
 31204                           indf0	equ	0xFEF
 31205                           postinc0	equ	0xFEE
 31206                           plusw0	equ	0xFEB
 31207                           fsr0h	equ	0xFEA
 31208                           fsr0l	equ	0xFE9
 31209                           wreg	equ	0xFE8
 31210                           indf1	equ	0xFE7
 31211                           postinc1	equ	0xFE6
 31212                           postdec1	equ	0xFE5
 31213                           plusw1	equ	0xFE3
 31214                           fsr1h	equ	0xFE2
 31215                           fsr1l	equ	0xFE1
 31216                           indf2	equ	0xFDF
 31217                           postinc2	equ	0xFDE
 31218                           postdec2	equ	0xFDD
 31219                           plusw2	equ	0xFDB
 31220                           fsr2h	equ	0xFDA
 31221                           fsr2l	equ	0xFD9
 31222                           status	equ	0xFD8
 31223                           
 31224 ;; *************** function _SetBaudRate *****************
 31225 ;; Defined at:
 31226 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31227 ;; Parameters:    Size  Location     Type
 31228 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 31229 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 31230 ;; Auto vars:     Size  Location     Type
 31231 ;;		None
 31232 ;; Return value:  Size  Location     Type
 31233 ;;                  1    wreg      void 
 31234 ;; Registers used:
 31235 ;;		wreg, status,2, status,0, cstack
 31236 ;; Tracked objects:
 31237 ;;		On entry : 0/0
 31238 ;;		On exit  : 0/0
 31239 ;;		Unchanged: 0/0
 31240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31241 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31243 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31244 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31245 ;;Total ram usage:       12 bytes
 31246 ;; Hardware stack levels used:    1
 31247 ;; Hardware stack levels required when called:   12
 31248 ;; This function calls:
 31249 ;;		___lldiv
 31250 ;; This function is called by:
 31251 ;;		_I2c_InitI2cModule
 31252 ;; This function uses a non-reentrant model
 31253 ;;
 31254                           
 31255                           	psect	text144
 31256  005730                     __ptext144:
 31257                           	opt stack 0
 31258  005730                     _SetBaudRate:
 31259                           	opt stack 14
 31260                           
 31261                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 31262                           
 31263                           ; BSR set to: 0
 31264                           ;incstack = 0
 31265  005730  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 31266  005734  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 31267  005738  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 31268  00573C  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 31269  005740  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 31270  005744  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 31271  005748  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 31272  00574C  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 31273  005750  0E02               	movlw	2
 31274  005752                     u12415:
 31275  005752  90D8               	bcf	status,0,c
 31276  005754  0100               	movlb	0	; () banked
 31277  005756  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 31278  005758  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 31279  00575A  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 31280  00575C  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 31281  00575E  2EE8               	decfsz	wreg,f,c
 31282  005760  D7F8               	goto	u12415
 31283  005762  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 31284  005766  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 31285  00576A  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 31286  00576E  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 31287  005772  EC90  F026         	call	___lldiv	;wreg free
 31288  005776  0100               	movlb	0	; () banked
 31289  005778  0589               	decf	?___lldiv& (0+255),w,b
 31290  00577A  6E74               	movwf	3956,c	;volatile
 31291                           
 31292                           ; BSR set to: 0
 31293  00577C  0012               	return		;funcret
 31294  00577E                     __end_of_SetBaudRate:
 31295                           	opt stack 0
 31296                           tosu	equ	0xFFF
 31297                           tosh	equ	0xFFE
 31298                           tosl	equ	0xFFD
 31299                           pclath	equ	0xFFA
 31300                           tblptru	equ	0xFF8
 31301                           tblptrh	equ	0xFF7
 31302                           tblptrl	equ	0xFF6
 31303                           tablat	equ	0xFF5
 31304                           prodh	equ	0xFF4
 31305                           prodl	equ	0xFF3
 31306                           intcon	equ	0xFF2
 31307                           intcon2	equ	0xFF1
 31308                           intcon3	equ	0xFF0
 31309                           indf0	equ	0xFEF
 31310                           postinc0	equ	0xFEE
 31311                           plusw0	equ	0xFEB
 31312                           fsr0h	equ	0xFEA
 31313                           fsr0l	equ	0xFE9
 31314                           wreg	equ	0xFE8
 31315                           indf1	equ	0xFE7
 31316                           postinc1	equ	0xFE6
 31317                           postdec1	equ	0xFE5
 31318                           plusw1	equ	0xFE3
 31319                           fsr1h	equ	0xFE2
 31320                           fsr1l	equ	0xFE1
 31321                           indf2	equ	0xFDF
 31322                           postinc2	equ	0xFDE
 31323                           postdec2	equ	0xFDD
 31324                           plusw2	equ	0xFDB
 31325                           fsr2h	equ	0xFDA
 31326                           fsr2l	equ	0xFD9
 31327                           status	equ	0xFD8
 31328                           
 31329 ;; *************** function ___lldiv *****************
 31330 ;; Defined at:
 31331 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 31332 ;; Parameters:    Size  Location     Type
 31333 ;;  dividend        4   41[BANK0 ] unsigned long 
 31334 ;;  divisor         4   45[BANK0 ] unsigned long 
 31335 ;; Auto vars:     Size  Location     Type
 31336 ;;  quotient        4   49[BANK0 ] unsigned long 
 31337 ;;  counter         1   53[BANK0 ] unsigned char 
 31338 ;; Return value:  Size  Location     Type
 31339 ;;                  4   41[BANK0 ] unsigned long 
 31340 ;; Registers used:
 31341 ;;		wreg, status,2, status,0
 31342 ;; Tracked objects:
 31343 ;;		On entry : 0/0
 31344 ;;		On exit  : 0/0
 31345 ;;		Unchanged: 0/0
 31346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31347 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31348 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31350 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31351 ;;Total ram usage:       13 bytes
 31352 ;; Hardware stack levels used:    1
 31353 ;; Hardware stack levels required when called:   11
 31354 ;; This function calls:
 31355 ;;		Nothing
 31356 ;; This function is called by:
 31357 ;;		_SetBaudRate
 31358 ;;		_Tmr_TmrBPrSet
 31359 ;;		_SetUartBaudRate
 31360 ;; This function uses a non-reentrant model
 31361 ;;
 31362                           
 31363                           	psect	text145
 31364  004D20                     __ptext145:
 31365                           	opt stack 0
 31366  004D20                     ___lldiv:
 31367                           	opt stack 15
 31368                           
 31369                           ; BSR set to: 0
 31370                           ;incstack = 0
 31371  004D20  0E00               	movlw	0
 31372  004D22  0100               	movlb	0	; () banked
 31373  004D24  6F91               	movwf	___lldiv@quotient& (0+255),b
 31374  004D26  0E00               	movlw	0
 31375  004D28  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 31376  004D2A  0E00               	movlw	0
 31377  004D2C  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 31378  004D2E  0E00               	movlw	0
 31379  004D30  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 31380                           
 31381                           ; BSR set to: 0
 31382  004D32  518D               	movf	___lldiv@divisor& (0+255),w,b
 31383  004D34  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 31384  004D36  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 31385  004D38  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 31386  004D3A  B4D8               	btfsc	status,2,c
 31387  004D3C  D02A               	goto	l3085
 31388                           
 31389                           ; BSR set to: 0
 31390  004D3E  0E01               	movlw	1
 31391  004D40  6F95               	movwf	___lldiv@counter& (0+255),b
 31392  004D42  D006               	goto	l3080
 31393  004D44                     
 31394                           ; BSR set to: 0
 31395                           
 31396                           ; BSR set to: 0
 31397  004D44  90D8               	bcf	status,0,c
 31398  004D46  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 31399  004D48  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 31400  004D4A  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 31401  004D4C  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 31402  004D4E  2B95               	incf	___lldiv@counter& (0+255),f,b
 31403  004D50                     l3080:
 31404                           
 31405                           ; BSR set to: 0
 31406                           
 31407                           ; BSR set to: 0
 31408  004D50  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 31409  004D52  D7F8               	goto	l3081
 31410  004D54                     u11490:
 31411                           
 31412                           ; BSR set to: 0
 31413                           
 31414                           ; BSR set to: 0
 31415                           
 31416                           ; BSR set to: 0
 31417  004D54  90D8               	bcf	status,0,c
 31418  004D56  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 31419  004D58  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 31420  004D5A  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 31421  004D5C  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 31422                           
 31423                           ; BSR set to: 0
 31424  004D5E  518D               	movf	___lldiv@divisor& (0+255),w,b
 31425  004D60  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 31426  004D62  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 31427  004D64  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 31428  004D66  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 31429  004D68  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 31430  004D6A  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 31431  004D6C  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 31432  004D6E  A0D8               	btfss	status,0,c
 31433  004D70  D009               	goto	l3084
 31434                           
 31435                           ; BSR set to: 0
 31436  004D72  518D               	movf	___lldiv@divisor& (0+255),w,b
 31437  004D74  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 31438  004D76  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 31439  004D78  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 31440  004D7A  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 31441  004D7C  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 31442  004D7E  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 31443  004D80  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 31444                           
 31445                           ; BSR set to: 0
 31446  004D82  8191               	bsf	___lldiv@quotient& (0+255),0,b
 31447  004D84                     l3084:
 31448                           
 31449                           ; BSR set to: 0
 31450                           
 31451                           ; BSR set to: 0
 31452  004D84  90D8               	bcf	status,0,c
 31453  004D86  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 31454  004D88  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 31455  004D8A  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 31456  004D8C  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 31457                           
 31458                           ; BSR set to: 0
 31459  004D8E  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 31460  004D90  D7E1               	goto	u11490
 31461  004D92                     l3085:
 31462                           
 31463                           ; BSR set to: 0
 31464                           
 31465                           ; BSR set to: 0
 31466  004D92  C091  F089         	movff	___lldiv@quotient,?___lldiv
 31467  004D96  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 31468  004D9A  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 31469  004D9E  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 31470                           
 31471                           ; BSR set to: 0
 31472  004DA2  0012               	return		;funcret
 31473  004DA4                     __end_of___lldiv:
 31474                           	opt stack 0
 31475                           tosu	equ	0xFFF
 31476                           tosh	equ	0xFFE
 31477                           tosl	equ	0xFFD
 31478                           pclath	equ	0xFFA
 31479                           tblptru	equ	0xFF8
 31480                           tblptrh	equ	0xFF7
 31481                           tblptrl	equ	0xFF6
 31482                           tablat	equ	0xFF5
 31483                           prodh	equ	0xFF4
 31484                           prodl	equ	0xFF3
 31485                           intcon	equ	0xFF2
 31486                           intcon2	equ	0xFF1
 31487                           intcon3	equ	0xFF0
 31488                           indf0	equ	0xFEF
 31489                           postinc0	equ	0xFEE
 31490                           plusw0	equ	0xFEB
 31491                           fsr0h	equ	0xFEA
 31492                           fsr0l	equ	0xFE9
 31493                           wreg	equ	0xFE8
 31494                           indf1	equ	0xFE7
 31495                           postinc1	equ	0xFE6
 31496                           postdec1	equ	0xFE5
 31497                           plusw1	equ	0xFE3
 31498                           fsr1h	equ	0xFE2
 31499                           fsr1l	equ	0xFE1
 31500                           indf2	equ	0xFDF
 31501                           postinc2	equ	0xFDE
 31502                           postdec2	equ	0xFDD
 31503                           plusw2	equ	0xFDB
 31504                           fsr2h	equ	0xFDA
 31505                           fsr2l	equ	0xFD9
 31506                           status	equ	0xFD8
 31507                           
 31508 ;; *************** function _I2cSetConfig *****************
 31509 ;; Defined at:
 31510 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 31511 ;; Parameters:    Size  Location     Type
 31512 ;;		None
 31513 ;; Auto vars:     Size  Location     Type
 31514 ;;		None
 31515 ;; Return value:  Size  Location     Type
 31516 ;;                  1    wreg      void 
 31517 ;; Registers used:
 31518 ;;		wreg, status,2
 31519 ;; Tracked objects:
 31520 ;;		On entry : 0/0
 31521 ;;		On exit  : 0/0
 31522 ;;		Unchanged: 0/0
 31523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31528 ;;Total ram usage:        0 bytes
 31529 ;; Hardware stack levels used:    1
 31530 ;; Hardware stack levels required when called:   11
 31531 ;; This function calls:
 31532 ;;		Nothing
 31533 ;; This function is called by:
 31534 ;;		_I2cSlv_MainTask
 31535 ;; This function uses a non-reentrant model
 31536 ;;
 31537                           
 31538                           	psect	text146
 31539  005EC0                     __ptext146:
 31540                           	opt stack 0
 31541  005EC0                     _I2cSetConfig:
 31542                           	opt stack 16
 31543                           
 31544                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 31545                           
 31546                           ; BSR set to: 0
 31547                           ;incstack = 0
 31548  005EC0  0E80               	movlw	128
 31549  005EC2  0103               	movlb	3	; () banked
 31550  005EC4  6F51               	movwf	_I2cConfig& (0+255),b
 31551  005EC6  0E1A               	movlw	26
 31552  005EC8  6F52               	movwf	(_I2cConfig+1)& (0+255),b
 31553  005ECA  0E06               	movlw	6
 31554  005ECC  6F53               	movwf	(_I2cConfig+2)& (0+255),b
 31555  005ECE  0E00               	movlw	0
 31556  005ED0  6F54               	movwf	(_I2cConfig+3)& (0+255),b
 31557                           
 31558                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 31559  005ED2  0E00               	movlw	0
 31560  005ED4  6F55               	movwf	(_I2cConfig+4)& (0+255),b
 31561  005ED6  0E6C               	movlw	108
 31562  005ED8  6F56               	movwf	(_I2cConfig+5)& (0+255),b
 31563  005EDA  0EDC               	movlw	220
 31564  005EDC  6F57               	movwf	(_I2cConfig+6)& (0+255),b
 31565  005EDE  0E02               	movlw	2
 31566  005EE0  6F58               	movwf	(_I2cConfig+7)& (0+255),b
 31567                           
 31568                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 31569  005EE2  0E08               	movlw	8
 31570  005EE4  6F59               	movwf	(_I2cConfig+8)& (0+255),b
 31571                           
 31572                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 31573  005EE6  0E01               	movlw	1
 31574  005EE8  6F5A               	movwf	(_I2cConfig+9)& (0+255),b
 31575                           
 31576                           ; BSR set to: 3
 31577  005EEA  0012               	return		;funcret
 31578  005EEC                     __end_of_I2cSetConfig:
 31579                           	opt stack 0
 31580                           tosu	equ	0xFFF
 31581                           tosh	equ	0xFFE
 31582                           tosl	equ	0xFFD
 31583                           pclath	equ	0xFFA
 31584                           tblptru	equ	0xFF8
 31585                           tblptrh	equ	0xFF7
 31586                           tblptrl	equ	0xFF6
 31587                           tablat	equ	0xFF5
 31588                           prodh	equ	0xFF4
 31589                           prodl	equ	0xFF3
 31590                           intcon	equ	0xFF2
 31591                           intcon2	equ	0xFF1
 31592                           intcon3	equ	0xFF0
 31593                           indf0	equ	0xFEF
 31594                           postinc0	equ	0xFEE
 31595                           plusw0	equ	0xFEB
 31596                           fsr0h	equ	0xFEA
 31597                           fsr0l	equ	0xFE9
 31598                           wreg	equ	0xFE8
 31599                           indf1	equ	0xFE7
 31600                           postinc1	equ	0xFE6
 31601                           postdec1	equ	0xFE5
 31602                           plusw1	equ	0xFE3
 31603                           fsr1h	equ	0xFE2
 31604                           fsr1l	equ	0xFE1
 31605                           indf2	equ	0xFDF
 31606                           postinc2	equ	0xFDE
 31607                           postdec2	equ	0xFDD
 31608                           plusw2	equ	0xFDB
 31609                           fsr2h	equ	0xFDA
 31610                           fsr2l	equ	0xFD9
 31611                           status	equ	0xFD8
 31612                           
 31613 ;; *************** function _I2cSendMsgSm *****************
 31614 ;; Defined at:
 31615 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 31616 ;; Parameters:    Size  Location     Type
 31617 ;;		None
 31618 ;; Auto vars:     Size  Location     Type
 31619 ;;		None
 31620 ;; Return value:  Size  Location     Type
 31621 ;;                  1    wreg      void 
 31622 ;; Registers used:
 31623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31624 ;; Tracked objects:
 31625 ;;		On entry : 0/0
 31626 ;;		On exit  : 0/0
 31627 ;;		Unchanged: 0/0
 31628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31633 ;;Total ram usage:        0 bytes
 31634 ;; Hardware stack levels used:    1
 31635 ;; Hardware stack levels required when called:   13
 31636 ;; This function calls:
 31637 ;;		_I2c_ReadData
 31638 ;;		_I2c_WriteData
 31639 ;;		_ReceiveEvt
 31640 ;; This function is called by:
 31641 ;;		_I2cSlv_MainTask
 31642 ;; This function uses a non-reentrant model
 31643 ;;
 31644                           
 31645                           	psect	text147
 31646  003EA4                     __ptext147:
 31647                           	opt stack 0
 31648  003EA4                     _I2cSendMsgSm:
 31649                           	opt stack 14
 31650                           
 31651                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 31652                           ;i2c_slv.c: 122: switch(I2cComState)
 31653                           
 31654                           ; BSR set to: 3
 31655                           ;incstack = 0
 31656  003EA4  D04F               	goto	l1379
 31657  003EA6                     
 31658                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 31659  003EA6  0ED9               	movlw	low _I2cWriteDataEvt
 31660  003EA8  0100               	movlb	0	; () banked
 31661  003EAA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31662  003EAC  0E00               	movlw	high _I2cWriteDataEvt
 31663  003EAE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31664  003EB0  EC49  F02F         	call	_ReceiveEvt	;wreg free
 31665  003EB4  0900               	iorlw	0
 31666  003EB6  B4D8               	btfsc	status,2,c
 31667  003EB8  D007               	goto	l1381
 31668                           
 31669                           ;i2c_slv.c: 127: {
 31670                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 31671  003EBA  0E01               	movlw	1
 31672  003EBC  0101               	movlb	1	; () banked
 31673  003EBE  6FE8               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31674                           
 31675                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 31676  003EC0  0E01               	movlw	1
 31677  003EC2  0100               	movlb	0	; () banked
 31678  003EC4  6FCF               	movwf	_I2cComSts& (0+255),b
 31679                           
 31680                           ;i2c_slv.c: 132: }
 31681  003EC6  0012               	return	
 31682  003EC8                     l1381:
 31683                           
 31684                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 31685                           
 31686                           ; BSR set to: 0
 31687  003EC8  0ED8               	movlw	low _I2cReadDataEvt
 31688  003ECA  0100               	movlb	0	; () banked
 31689  003ECC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31690  003ECE  0E00               	movlw	high _I2cReadDataEvt
 31691  003ED0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31692  003ED2  EC49  F02F         	call	_ReceiveEvt	;wreg free
 31693  003ED6  0900               	iorlw	0
 31694  003ED8  B4D8               	btfsc	status,2,c
 31695  003EDA  D007               	goto	l1383
 31696                           
 31697                           ;i2c_slv.c: 134: {
 31698                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 31699  003EDC  0E02               	movlw	2
 31700  003EDE  0101               	movlb	1	; () banked
 31701  003EE0  6FE8               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31702                           
 31703                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 31704  003EE2  0E02               	movlw	2
 31705  003EE4  0100               	movlb	0	; () banked
 31706  003EE6  6FCF               	movwf	_I2cComSts& (0+255),b
 31707                           
 31708                           ;i2c_slv.c: 139: }
 31709  003EE8  0012               	return	
 31710  003EEA                     l1383:
 31711                           
 31712                           ;i2c_slv.c: 140: else
 31713                           ;i2c_slv.c: 141: {
 31714                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 31715                           
 31716                           ; BSR set to: 0
 31717  003EEA  0E00               	movlw	0
 31718  003EEC  0100               	movlb	0	; () banked
 31719  003EEE  6FCF               	movwf	_I2cComSts& (0+255),b
 31720                           
 31721                           ; BSR set to: 0
 31722                           ;i2c_slv.c: 144: }
 31723                           ;i2c_slv.c: 145: break;
 31724                           
 31725                           ; BSR set to: 0
 31726  003EF0  0012               	return	
 31727  003EF2                     
 31728                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 31729                           
 31730                           ; BSR set to: 0
 31731  003EF2  0E9D               	movlw	low _I2cTxPacket
 31732  003EF4  0100               	movlb	0	; () banked
 31733  003EF6  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 31734  003EF8  0E03               	movlw	high _I2cTxPacket
 31735  003EFA  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 31736  003EFC  EC5A  F00F         	call	_I2c_WriteData	;wreg free
 31737  003F00  0900               	iorlw	0
 31738  003F02  B4D8               	btfsc	status,2,c
 31739  003F04  0012               	return	
 31740                           
 31741                           ;i2c_slv.c: 150: {
 31742                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 31743  003F06  0E03               	movlw	3
 31744  003F08  0101               	movlb	1	; () banked
 31745  003F0A  6FE8               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31746                           
 31747                           ; BSR set to: 1
 31748                           ;i2c_slv.c: 153: }
 31749                           ;i2c_slv.c: 154: break;
 31750  003F0C  0012               	return	
 31751  003F0E                     
 31752                           ; BSR set to: 1
 31753                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 31754                           
 31755                           ; BSR set to: 1
 31756  003F0E  0E97               	movlw	low _I2cRxPacket
 31757  003F10  0100               	movlb	0	; () banked
 31758  003F12  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 31759  003F14  0E03               	movlw	high _I2cRxPacket
 31760  003F16  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 31761  003F18  EC11  F010         	call	_I2c_ReadData	;wreg free
 31762  003F1C  0900               	iorlw	0
 31763  003F1E  B4D8               	btfsc	status,2,c
 31764  003F20  0012               	return	
 31765                           
 31766                           ;i2c_slv.c: 159: {
 31767                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 31768  003F22  0E04               	movlw	4
 31769  003F24  0101               	movlb	1	; () banked
 31770  003F26  6FE8               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31771                           
 31772                           ; BSR set to: 1
 31773                           ;i2c_slv.c: 162: }
 31774                           ;i2c_slv.c: 164: break;
 31775  003F28  0012               	return	
 31776  003F2A                     
 31777                           ; BSR set to: 1
 31778                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 31779                           
 31780                           ; BSR set to: 1
 31781  003F2A  0E00               	movlw	0
 31782  003F2C  6FE8               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31783                           
 31784                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 31785  003F2E  0E00               	movlw	0
 31786  003F30  0100               	movlb	0	; () banked
 31787  003F32  6FCF               	movwf	_I2cComSts& (0+255),b
 31788                           
 31789                           ;i2c_slv.c: 171: break;
 31790  003F34  0012               	return	
 31791  003F36                     
 31792                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 31793                           
 31794                           ; BSR set to: 0
 31795  003F36  0E00               	movlw	0
 31796  003F38  0101               	movlb	1	; () banked
 31797  003F3A  6FE8               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31798                           
 31799                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 31800  003F3C  0E00               	movlw	0
 31801  003F3E  0100               	movlb	0	; () banked
 31802  003F40  6FCF               	movwf	_I2cComSts& (0+255),b
 31803                           
 31804                           ; BSR set to: 0
 31805                           ;i2c_slv.c: 182: }
 31806                           
 31807                           ; BSR set to: 0
 31808                           ;i2c_slv.c: 181: break;
 31809                           
 31810                           ;i2c_slv.c: 180: default:
 31811                           
 31812                           ;i2c_slv.c: 178: break;
 31813  003F42  0012               	return	
 31814  003F44                     l1379:
 31815                           
 31816                           ; BSR set to: 0
 31817  003F44  0101               	movlb	1	; () banked
 31818  003F46  51E8               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 31819                           
 31820                           ; Switch size 1, requested type "space"
 31821                           ; Number of cases is 5, Range of values is 0 to 4
 31822                           ; switch strategies available:
 31823                           ; Name         Instructions Cycles
 31824                           ; simple_byte           16     9 (average)
 31825                           ;	Chosen strategy is simple_byte
 31826  003F48  0A00               	xorlw	0	; case 0
 31827  003F4A  B4D8               	btfsc	status,2,c
 31828  003F4C  D7AC               	goto	l1380
 31829  003F4E  0A01               	xorlw	1	; case 1
 31830  003F50  B4D8               	btfsc	status,2,c
 31831  003F52  D7CF               	goto	l1386
 31832  003F54  0A03               	xorlw	3	; case 2
 31833  003F56  B4D8               	btfsc	status,2,c
 31834  003F58  D7DA               	goto	l1388
 31835  003F5A  0A01               	xorlw	1	; case 3
 31836  003F5C  B4D8               	btfsc	status,2,c
 31837  003F5E  D7E5               	goto	l1390
 31838  003F60  0A07               	xorlw	7	; case 4
 31839  003F62  A4D8               	btfss	status,2,c
 31840  003F64  0012               	return	
 31841  003F66  D7E7               	goto	l1391
 31842  003F68                     __end_of_I2cSendMsgSm:
 31843                           	opt stack 0
 31844                           tosu	equ	0xFFF
 31845                           tosh	equ	0xFFE
 31846                           tosl	equ	0xFFD
 31847                           pclath	equ	0xFFA
 31848                           tblptru	equ	0xFF8
 31849                           tblptrh	equ	0xFF7
 31850                           tblptrl	equ	0xFF6
 31851                           tablat	equ	0xFF5
 31852                           prodh	equ	0xFF4
 31853                           prodl	equ	0xFF3
 31854                           intcon	equ	0xFF2
 31855                           intcon2	equ	0xFF1
 31856                           intcon3	equ	0xFF0
 31857                           indf0	equ	0xFEF
 31858                           postinc0	equ	0xFEE
 31859                           plusw0	equ	0xFEB
 31860                           fsr0h	equ	0xFEA
 31861                           fsr0l	equ	0xFE9
 31862                           wreg	equ	0xFE8
 31863                           indf1	equ	0xFE7
 31864                           postinc1	equ	0xFE6
 31865                           postdec1	equ	0xFE5
 31866                           plusw1	equ	0xFE3
 31867                           fsr1h	equ	0xFE2
 31868                           fsr1l	equ	0xFE1
 31869                           indf2	equ	0xFDF
 31870                           postinc2	equ	0xFDE
 31871                           postdec2	equ	0xFDD
 31872                           plusw2	equ	0xFDB
 31873                           fsr2h	equ	0xFDA
 31874                           fsr2l	equ	0xFD9
 31875                           status	equ	0xFD8
 31876                           
 31877 ;; *************** function _ReceiveEvt *****************
 31878 ;; Defined at:
 31879 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 31880 ;; Parameters:    Size  Location     Type
 31881 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 31882 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 31883 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 31884 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 31885 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 31886 ;;		 -> ActivateRiDetection(1), 
 31887 ;; Auto vars:     Size  Location     Type
 31888 ;;  EventStatus     1   32[BANK0 ] enum E7727
 31889 ;; Return value:  Size  Location     Type
 31890 ;;                  1    wreg      enum E7699
 31891 ;; Registers used:
 31892 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31893 ;; Tracked objects:
 31894 ;;		On entry : 0/0
 31895 ;;		On exit  : 0/0
 31896 ;;		Unchanged: 0/0
 31897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31898 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31899 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31900 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31901 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31902 ;;Total ram usage:        4 bytes
 31903 ;; Hardware stack levels used:    1
 31904 ;; Hardware stack levels required when called:   11
 31905 ;; This function calls:
 31906 ;;		Nothing
 31907 ;; This function is called by:
 31908 ;;		_MdmCntSm
 31909 ;;		_CheckModem
 31910 ;;		_ModemEvtParser
 31911 ;;		_GetSmsSm
 31912 ;;		_SendSmsSm
 31913 ;;		_Mdm_IsSmsReceived
 31914 ;;		_Mdm_IsRinging
 31915 ;;		_GetCallerNumber
 31916 ;;		_InitGprsNetwork
 31917 ;;		_HttpGetMethod
 31918 ;;		_I2cSendMsgSm
 31919 ;;		_I2cSlv_I2cReadMsgSts
 31920 ;;		_RiSm
 31921 ;;		_Mdm_GetSmsData
 31922 ;;		_GsmGprsTerminal
 31923 ;; This function uses a non-reentrant model
 31924 ;;
 31925                           
 31926                           	psect	text148
 31927  005E92                     __ptext148:
 31928                           	opt stack 0
 31929  005E92                     _ReceiveEvt:
 31930                           	opt stack 13
 31931                           
 31932                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 31933                           
 31934                           ;incstack = 0
 31935  005E92  0E00               	movlw	0
 31936  005E94  0100               	movlb	0	; () banked
 31937  005E96  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31938                           
 31939                           ; BSR set to: 0
 31940                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 31941  005E98  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31942  005E9C  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31943  005EA0  0E02               	movlw	2
 31944  005EA2  18DE               	xorwf	postinc2,w,c
 31945  005EA4  A4D8               	btfss	status,2,c
 31946  005EA6  D008               	goto	l832
 31947                           
 31948                           ; BSR set to: 0
 31949                           ;os_ser.c: 106: {
 31950                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 31951  005EA8  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31952  005EAC  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31953  005EB0  0E01               	movlw	1
 31954  005EB2  6EDF               	movwf	indf2,c
 31955                           
 31956                           ; BSR set to: 0
 31957                           ;os_ser.c: 110: EventStatus = EventReceived;
 31958  005EB4  0E01               	movlw	1
 31959  005EB6  D001               	goto	L57
 31960  005EB8                     l832:
 31961                           
 31962                           ; BSR set to: 0
 31963                           ;os_ser.c: 112: else
 31964                           ;os_ser.c: 113: {
 31965                           ;os_ser.c: 115: EventStatus = EventIdle;
 31966                           
 31967                           ; BSR set to: 0
 31968  005EB8  0E00               	movlw	0
 31969  005EBA                     L57:
 31970  005EBA  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31971                           
 31972                           ; BSR set to: 0
 31973                           ;os_ser.c: 116: }
 31974                           ;os_ser.c: 119: return(EventStatus);
 31975  005EBC  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 31976  005EBE  0012               	return	
 31977  005EC0                     __end_of_ReceiveEvt:
 31978                           	opt stack 0
 31979                           tosu	equ	0xFFF
 31980                           tosh	equ	0xFFE
 31981                           tosl	equ	0xFFD
 31982                           pclath	equ	0xFFA
 31983                           tblptru	equ	0xFF8
 31984                           tblptrh	equ	0xFF7
 31985                           tblptrl	equ	0xFF6
 31986                           tablat	equ	0xFF5
 31987                           prodh	equ	0xFF4
 31988                           prodl	equ	0xFF3
 31989                           intcon	equ	0xFF2
 31990                           intcon2	equ	0xFF1
 31991                           intcon3	equ	0xFF0
 31992                           indf0	equ	0xFEF
 31993                           postinc0	equ	0xFEE
 31994                           plusw0	equ	0xFEB
 31995                           fsr0h	equ	0xFEA
 31996                           fsr0l	equ	0xFE9
 31997                           wreg	equ	0xFE8
 31998                           indf1	equ	0xFE7
 31999                           postinc1	equ	0xFE6
 32000                           postdec1	equ	0xFE5
 32001                           plusw1	equ	0xFE3
 32002                           fsr1h	equ	0xFE2
 32003                           fsr1l	equ	0xFE1
 32004                           indf2	equ	0xFDF
 32005                           postinc2	equ	0xFDE
 32006                           postdec2	equ	0xFDD
 32007                           plusw2	equ	0xFDB
 32008                           fsr2h	equ	0xFDA
 32009                           fsr2l	equ	0xFD9
 32010                           status	equ	0xFD8
 32011                           
 32012 ;; *************** function _I2c_WriteData *****************
 32013 ;; Defined at:
 32014 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32015 ;; Parameters:    Size  Location     Type
 32016 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 32017 ;;		 -> I2cTxPacket(5), 
 32018 ;; Auto vars:     Size  Location     Type
 32019 ;;		None
 32020 ;; Return value:  Size  Location     Type
 32021 ;;                  1    wreg      enum E7740
 32022 ;; Registers used:
 32023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32024 ;; Tracked objects:
 32025 ;;		On entry : 0/0
 32026 ;;		On exit  : 0/0
 32027 ;;		Unchanged: 0/0
 32028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32029 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32031 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32032 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32033 ;;Total ram usage:        4 bytes
 32034 ;; Hardware stack levels used:    1
 32035 ;; Hardware stack levels required when called:   12
 32036 ;; This function calls:
 32037 ;;		_CheckAckStatus
 32038 ;;		_CheckTxStatus
 32039 ;;		_StartCondition
 32040 ;;		_StopCondition
 32041 ;;		_WriteByte
 32042 ;; This function is called by:
 32043 ;;		_I2cSendMsgSm
 32044 ;; This function uses a non-reentrant model
 32045 ;;
 32046                           
 32047                           	psect	text149
 32048  001EB4                     __ptext149:
 32049                           	opt stack 0
 32050  001EB4                     _I2c_WriteData:
 32051                           	opt stack 14
 32052                           
 32053                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 32054                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 32055                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 32056                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 32057                           ;i2c_drv.c: 260: switch (I2cWriteState)
 32058                           
 32059                           ; BSR set to: 0
 32060                           ;incstack = 0
 32061  001EB4  D095               	goto	l160
 32062  001EB6                     
 32063                           ;i2c_drv.c: 264: StartCondition();
 32064  001EB6  ECCD  F031         	call	_StartCondition	;wreg free
 32065                           
 32066                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 32067  001EBA  0E00               	movlw	0
 32068  001EBC  6E35               	movwf	I2c_WriteData@WriteStatus,c
 32069                           
 32070                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 32071  001EBE  0E01               	movlw	1
 32072  001EC0  D084               	goto	L64
 32073  001EC2                     
 32074                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 32075  001EC2  0100               	movlb	0	; () banked
 32076  001EC4  EE20 F001          	lfsr	2,1
 32077  001EC8  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32078  001ECA  26D9               	addwf	fsr2l,f,c
 32079  001ECC  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32080  001ECE  22DA               	addwfc	fsr2h,f,c
 32081  001ED0  50DF               	movf	indf2,w,c
 32082  001ED2  6F80               	movwf	??_I2c_WriteData& (0+255),b
 32083  001ED4  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 32084  001ED8  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 32085  001EDC  50DF               	movf	indf2,w,c
 32086  001EDE  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 32087  001EE0  90D8               	bcf	status,0,c
 32088  001EE2  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 32089  001EE4  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 32090  001EE6  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 32091  001EEA  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 32092  001EEE  6EDF               	movwf	indf2,c
 32093                           
 32094                           ; BSR set to: 0
 32095                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 32096  001EF0  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 32097  001EF4  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 32098  001EF8  50DF               	movf	indf2,w,c
 32099  001EFA  ECAB  F031         	call	_WriteByte
 32100                           
 32101                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 32102  001EFE  0E02               	movlw	2
 32103  001F00  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 32104  001F02                     
 32105                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 32106  001F02  ECB5  F031         	call	_CheckTxStatus	;wreg free
 32107  001F06  0900               	iorlw	0
 32108  001F08  A4D8               	btfss	status,2,c
 32109  001F0A  D089               	goto	l162
 32110                           
 32111                           ;i2c_drv.c: 282: {
 32112                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 32113  001F0C  0E03               	movlw	3
 32114  001F0E  D01A               	goto	L66
 32115  001F10                     
 32116                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 32117  001F10  0100               	movlb	0	; () banked
 32118  001F12  EE20 F002          	lfsr	2,2
 32119  001F16  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32120  001F18  26D9               	addwf	fsr2l,f,c
 32121  001F1A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32122  001F1C  22DA               	addwfc	fsr2h,f,c
 32123  001F1E  CFDE F080          	movff	postinc2,??_I2c_WriteData
 32124  001F22  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 32125  001F26  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 32126  001F2A  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 32127  001F2E  50DF               	movf	indf2,w,c
 32128  001F30  ECAB  F031         	call	_WriteByte
 32129                           
 32130                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 32131  001F34  0E04               	movlw	4
 32132  001F36  D049               	goto	L64
 32133  001F38                     
 32134                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 32135  001F38  ECB5  F031         	call	_CheckTxStatus	;wreg free
 32136  001F3C  0900               	iorlw	0
 32137  001F3E  A4D8               	btfss	status,2,c
 32138  001F40  D06E               	goto	l162
 32139                           
 32140                           ;i2c_drv.c: 300: {
 32141                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 32142  001F42  0E05               	movlw	5
 32143  001F44                     L66:
 32144  001F44  6E37               	movwf	I2c_WriteData@I2cNextState,c
 32145                           
 32146                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 32147  001F46  0E08               	movlw	8
 32148  001F48  D040               	goto	L64
 32149  001F4A                     
 32150                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 32151  001F4A  0100               	movlb	0	; () banked
 32152  001F4C  EE20 F004          	lfsr	2,4
 32153  001F50  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32154  001F52  26D9               	addwf	fsr2l,f,c
 32155  001F54  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32156  001F56  22DA               	addwfc	fsr2h,f,c
 32157  001F58  50DF               	movf	indf2,w,c
 32158  001F5A  B4D8               	btfsc	status,2,c
 32159  001F5C  D010               	goto	l170
 32160                           
 32161                           ; BSR set to: 0
 32162                           ;i2c_drv.c: 310: {
 32163                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 32164  001F5E  EE20 F004          	lfsr	2,4
 32165  001F62  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32166  001F64  26D9               	addwf	fsr2l,f,c
 32167  001F66  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32168  001F68  22DA               	addwfc	fsr2h,f,c
 32169  001F6A  06DF               	decf	indf2,f,c
 32170                           
 32171                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 32172  001F6C  EE20 F002          	lfsr	2,2
 32173  001F70  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32174  001F72  26D9               	addwf	fsr2l,f,c
 32175  001F74  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32176  001F76  22DA               	addwfc	fsr2h,f,c
 32177  001F78  2ADE               	incf	postinc2,f,c
 32178  001F7A  0E00               	movlw	0
 32179  001F7C  22DD               	addwfc	postdec2,f,c
 32180  001F7E                     l170:
 32181                           
 32182                           ; BSR set to: 0
 32183                           ;i2c_drv.c: 315: }
 32184                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 32185  001F7E  EE20 F004          	lfsr	2,4
 32186  001F82  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32187  001F84  26D9               	addwf	fsr2l,f,c
 32188  001F86  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32189  001F88  22DA               	addwfc	fsr2h,f,c
 32190  001F8A  50DF               	movf	indf2,w,c
 32191  001F8C  A4D8               	btfss	status,2,c
 32192  001F8E  D002               	goto	l171
 32193                           
 32194                           ; BSR set to: 0
 32195                           ;i2c_drv.c: 319: {
 32196                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 32197  001F90  0E06               	movlw	6
 32198  001F92  D01B               	goto	L64
 32199  001F94                     l171:
 32200                           
 32201                           ; BSR set to: 0
 32202                           ;i2c_drv.c: 323: else
 32203                           ;i2c_drv.c: 324: {
 32204                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 32205                           
 32206                           ; BSR set to: 0
 32207  001F94  0E03               	movlw	3
 32208  001F96  D019               	goto	L64
 32209  001F98                     
 32210                           ;i2c_drv.c: 332: StopCondition();
 32211                           
 32212                           ; BSR set to: 0
 32213  001F98  ECCB  F031         	call	_StopCondition	;wreg free
 32214                           
 32215                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 32216  001F9C  0E07               	movlw	7
 32217  001F9E  D015               	goto	L64
 32218  001FA0                     
 32219                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 32220  001FA0  0E00               	movlw	0
 32221  001FA2  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 32222                           
 32223                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 32224  001FA4  0E00               	movlw	0
 32225  001FA6  6E37               	movwf	I2c_WriteData@I2cNextState,c
 32226                           
 32227                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 32228  001FA8  0E02               	movlw	2
 32229  001FAA  D018               	goto	L65
 32230  001FAC                     
 32231                           ;i2c_drv.c: 347: TentativeCounter++;
 32232  001FAC  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 32233                           
 32234                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 32235  001FAE  ECBA  F031         	call	_CheckAckStatus	;wreg free
 32236  001FB2  0900               	iorlw	0
 32237  001FB4  A4D8               	btfss	status,2,c
 32238  001FB6  D005               	goto	l176
 32239                           
 32240                           ;i2c_drv.c: 350: {
 32241                           ;i2c_drv.c: 352: TentativeCounter = 0;
 32242  001FB8  0E00               	movlw	0
 32243  001FBA  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 32244                           
 32245                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 32246  001FBC  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 32247                           
 32248                           ;i2c_drv.c: 355: }
 32249  001FC0  D02E               	goto	l162
 32250  001FC2                     l176:
 32251                           
 32252                           ;i2c_drv.c: 356: else
 32253                           ;i2c_drv.c: 357: {
 32254                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 32255  001FC2  0E02               	movlw	2
 32256  001FC4  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 32257  001FC6  D02B               	goto	l162
 32258                           
 32259                           ;i2c_drv.c: 360: {
 32260                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 32261  001FC8  0E09               	movlw	9
 32262  001FCA                     L64:
 32263  001FCA  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 32264                           
 32265                           ;i2c_drv.c: 363: }
 32266                           ;i2c_drv.c: 364: }
 32267                           ;i2c_drv.c: 365: break;
 32268  001FCC  D028               	goto	l162
 32269  001FCE                     
 32270                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 32271  001FCE  0E00               	movlw	0
 32272  001FD0  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 32273                           
 32274                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 32275  001FD2  0E00               	movlw	0
 32276  001FD4  6E37               	movwf	I2c_WriteData@I2cNextState,c
 32277                           
 32278                           ;i2c_drv.c: 372: TentativeCounter = 0;
 32279  001FD6  0E00               	movlw	0
 32280  001FD8  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 32281                           
 32282                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 32283  001FDA  0E01               	movlw	1
 32284  001FDC                     L65:
 32285  001FDC  6E35               	movwf	I2c_WriteData@WriteStatus,c
 32286                           
 32287                           ;i2c_drv.c: 379: }
 32288                           
 32289                           ;i2c_drv.c: 378: break;
 32290                           
 32291                           ;i2c_drv.c: 377: default:
 32292                           
 32293                           ;i2c_drv.c: 375: break;
 32294  001FDE  D01F               	goto	l162
 32295  001FE0                     l160:
 32296  001FE0  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 32297                           
 32298                           ; Switch size 1, requested type "space"
 32299                           ; Number of cases is 10, Range of values is 0 to 9
 32300                           ; switch strategies available:
 32301                           ; Name         Instructions Cycles
 32302                           ; simple_byte           31    16 (average)
 32303                           ;	Chosen strategy is simple_byte
 32304  001FE2  0A00               	xorlw	0	; case 0
 32305  001FE4  B4D8               	btfsc	status,2,c
 32306  001FE6  D767               	goto	l161
 32307  001FE8  0A01               	xorlw	1	; case 1
 32308  001FEA  B4D8               	btfsc	status,2,c
 32309  001FEC  D76A               	goto	l163
 32310  001FEE  0A03               	xorlw	3	; case 2
 32311  001FF0  B4D8               	btfsc	status,2,c
 32312  001FF2  D787               	goto	l164
 32313  001FF4  0A01               	xorlw	1	; case 3
 32314  001FF6  B4D8               	btfsc	status,2,c
 32315  001FF8  D78B               	goto	l166
 32316  001FFA  0A07               	xorlw	7	; case 4
 32317  001FFC  B4D8               	btfsc	status,2,c
 32318  001FFE  D79C               	goto	l167
 32319  002000  0A01               	xorlw	1	; case 5
 32320  002002  B4D8               	btfsc	status,2,c
 32321  002004  D7A2               	goto	l169
 32322  002006  0A03               	xorlw	3	; case 6
 32323  002008  B4D8               	btfsc	status,2,c
 32324  00200A  D7C6               	goto	l173
 32325  00200C  0A01               	xorlw	1	; case 7
 32326  00200E  B4D8               	btfsc	status,2,c
 32327  002010  D7C7               	goto	l174
 32328  002012  0A0F               	xorlw	15	; case 8
 32329  002014  B4D8               	btfsc	status,2,c
 32330  002016  D7CA               	goto	l175
 32331  002018  0A01               	xorlw	1	; case 9
 32332  00201A  B4D8               	btfsc	status,2,c
 32333  00201C  D7D8               	goto	l179
 32334  00201E                     l162:
 32335                           
 32336                           ;i2c_drv.c: 382: return WriteStatus;
 32337  00201E  5035               	movf	I2c_WriteData@WriteStatus,w,c
 32338  002020  0012               	return	
 32339  002022                     __end_of_I2c_WriteData:
 32340                           	opt stack 0
 32341                           tosu	equ	0xFFF
 32342                           tosh	equ	0xFFE
 32343                           tosl	equ	0xFFD
 32344                           pclath	equ	0xFFA
 32345                           tblptru	equ	0xFF8
 32346                           tblptrh	equ	0xFF7
 32347                           tblptrl	equ	0xFF6
 32348                           tablat	equ	0xFF5
 32349                           prodh	equ	0xFF4
 32350                           prodl	equ	0xFF3
 32351                           intcon	equ	0xFF2
 32352                           intcon2	equ	0xFF1
 32353                           intcon3	equ	0xFF0
 32354                           indf0	equ	0xFEF
 32355                           postinc0	equ	0xFEE
 32356                           plusw0	equ	0xFEB
 32357                           fsr0h	equ	0xFEA
 32358                           fsr0l	equ	0xFE9
 32359                           wreg	equ	0xFE8
 32360                           indf1	equ	0xFE7
 32361                           postinc1	equ	0xFE6
 32362                           postdec1	equ	0xFE5
 32363                           plusw1	equ	0xFE3
 32364                           fsr1h	equ	0xFE2
 32365                           fsr1l	equ	0xFE1
 32366                           indf2	equ	0xFDF
 32367                           postinc2	equ	0xFDE
 32368                           postdec2	equ	0xFDD
 32369                           plusw2	equ	0xFDB
 32370                           fsr2h	equ	0xFDA
 32371                           fsr2l	equ	0xFD9
 32372                           status	equ	0xFD8
 32373                           
 32374 ;; *************** function _I2c_ReadData *****************
 32375 ;; Defined at:
 32376 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32377 ;; Parameters:    Size  Location     Type
 32378 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 32379 ;;		 -> I2cRxPacket(6), 
 32380 ;; Auto vars:     Size  Location     Type
 32381 ;;		None
 32382 ;; Return value:  Size  Location     Type
 32383 ;;                  1    wreg      enum E7787
 32384 ;; Registers used:
 32385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32386 ;; Tracked objects:
 32387 ;;		On entry : 0/0
 32388 ;;		On exit  : 0/0
 32389 ;;		Unchanged: 0/0
 32390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32391 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32393 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32394 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32395 ;;Total ram usage:        4 bytes
 32396 ;; Hardware stack levels used:    1
 32397 ;; Hardware stack levels required when called:   12
 32398 ;; This function calls:
 32399 ;;		_CheckAckStatus
 32400 ;;		_CheckTxStatus
 32401 ;;		_EnableReceiver
 32402 ;;		_GenerateEvt
 32403 ;;		_ReadByte
 32404 ;;		_SetAckStatus
 32405 ;;		_StartCondition
 32406 ;;		_StopCondition
 32407 ;;		_WriteByte
 32408 ;; This function is called by:
 32409 ;;		_I2cSendMsgSm
 32410 ;; This function uses a non-reentrant model
 32411 ;;
 32412                           
 32413                           	psect	text150
 32414  002022                     __ptext150:
 32415                           	opt stack 0
 32416  002022                     _I2c_ReadData:
 32417                           	opt stack 14
 32418                           
 32419                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 32420                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 32421                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 32422                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 32423                           ;i2c_drv.c: 402: switch (I2cReadState)
 32424                           
 32425                           ;incstack = 0
 32426  002022  D090               	goto	l192
 32427  002024                     
 32428                           ;i2c_drv.c: 406: StartCondition();
 32429  002024  ECCD  F031         	call	_StartCondition	;wreg free
 32430                           
 32431                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 32432  002028  0E00               	movlw	0
 32433  00202A  6E31               	movwf	I2c_ReadData@ReadStatus,c
 32434                           
 32435                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 32436  00202C  0E01               	movlw	1
 32437  00202E  D083               	goto	L74
 32438  002030                     
 32439                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 32440  002030  0100               	movlb	0	; () banked
 32441  002032  EE20 F001          	lfsr	2,1
 32442  002036  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32443  002038  26D9               	addwf	fsr2l,f,c
 32444  00203A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32445  00203C  22DA               	addwfc	fsr2h,f,c
 32446  00203E  50DF               	movf	indf2,w,c
 32447  002040  6F82               	movwf	??_I2c_ReadData& (0+255),b
 32448  002042  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 32449  002046  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 32450  00204A  50DF               	movf	indf2,w,c
 32451  00204C  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 32452  00204E  90D8               	bcf	status,0,c
 32453  002050  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 32454  002052  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 32455  002054  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 32456  002058  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 32457  00205C  6EDF               	movwf	indf2,c
 32458                           
 32459                           ; BSR set to: 0
 32460                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 32461  00205E  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 32462  002062  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 32463  002066  50DF               	movf	indf2,w,c
 32464  002068  ECAB  F031         	call	_WriteByte
 32465                           
 32466                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 32467  00206C  0E02               	movlw	2
 32468  00206E  D063               	goto	L74
 32469  002070                     
 32470                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 32471  002070  ECB5  F031         	call	_CheckTxStatus	;wreg free
 32472  002074  0900               	iorlw	0
 32473  002076  A4D8               	btfss	status,2,c
 32474  002078  D081               	goto	l194
 32475                           
 32476                           ;i2c_drv.c: 425: {
 32477                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 32478  00207A  0E03               	movlw	3
 32479  00207C  D05C               	goto	L74
 32480  00207E                     
 32481                           ;i2c_drv.c: 433: TentativeCounter++;
 32482  00207E  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 32483                           
 32484                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 32485  002080  ECBA  F031         	call	_CheckAckStatus	;wreg free
 32486  002084  0900               	iorlw	0
 32487  002086  A4D8               	btfss	status,2,c
 32488  002088  D004               	goto	l199
 32489                           
 32490                           ;i2c_drv.c: 436: {
 32491                           ;i2c_drv.c: 438: TentativeCounter = 0;
 32492  00208A  0E00               	movlw	0
 32493  00208C  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 32494  00208E                     
 32495                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 32496  00208E  0E04               	movlw	4
 32497  002090  D052               	goto	L74
 32498  002092                     l199:
 32499                           
 32500                           ;i2c_drv.c: 442: else
 32501                           ;i2c_drv.c: 443: {
 32502                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 32503  002092  0E02               	movlw	2
 32504  002094  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 32505  002096  D072               	goto	l194
 32506                           
 32507                           ;i2c_drv.c: 446: {
 32508                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 32509  002098  0E08               	movlw	8
 32510  00209A  D04D               	goto	L74
 32511  00209C                     
 32512                           ;i2c_drv.c: 455: EnableReceiver();
 32513  00209C  ECCF  F031         	call	_EnableReceiver	;wreg free
 32514                           
 32515                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 32516  0020A0  0E05               	movlw	5
 32517  0020A2  D049               	goto	L74
 32518  0020A4                     
 32519                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 32520  0020A4  ECB5  F031         	call	_CheckTxStatus	;wreg free
 32521  0020A8  0900               	iorlw	0
 32522  0020AA  A4D8               	btfss	status,2,c
 32523  0020AC  D067               	goto	l194
 32524                           
 32525                           ;i2c_drv.c: 463: {
 32526                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 32527  0020AE  0100               	movlb	0	; () banked
 32528  0020B0  EE20 F002          	lfsr	2,2
 32529  0020B4  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32530  0020B6  26D9               	addwf	fsr2l,f,c
 32531  0020B8  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32532  0020BA  22DA               	addwfc	fsr2h,f,c
 32533  0020BC  CFDE F082          	movff	postinc2,??_I2c_ReadData
 32534  0020C0  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 32535  0020C4  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 32536  0020C8  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 32537  0020CC  ECB0  F031         	call	_ReadByte	;wreg free
 32538  0020D0  6EDF               	movwf	indf2,c
 32539                           
 32540                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 32541  0020D2  0100               	movlb	0	; () banked
 32542  0020D4  EE20 F002          	lfsr	2,2
 32543  0020D8  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32544  0020DA  26D9               	addwf	fsr2l,f,c
 32545  0020DC  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32546  0020DE  22DA               	addwfc	fsr2h,f,c
 32547  0020E0  2ADE               	incf	postinc2,f,c
 32548  0020E2  0E00               	movlw	0
 32549  0020E4  22DD               	addwfc	postdec2,f,c
 32550                           
 32551                           ; BSR set to: 0
 32552                           ;i2c_drv.c: 469: DataCounter++;
 32553  0020E6  2A33               	incf	I2c_ReadData@DataCounter,f,c
 32554                           
 32555                           ; BSR set to: 0
 32556                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 32557  0020E8  0E06               	movlw	6
 32558  0020EA  D025               	goto	L74
 32559  0020EC                     
 32560                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 32561                           
 32562                           ; BSR set to: 0
 32563  0020EC  0100               	movlb	0	; () banked
 32564  0020EE  EE20 F004          	lfsr	2,4
 32565  0020F2  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32566  0020F4  26D9               	addwf	fsr2l,f,c
 32567  0020F6  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32568  0020F8  22DA               	addwfc	fsr2h,f,c
 32569  0020FA  50DE               	movf	postinc2,w,c
 32570  0020FC  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 32571  0020FE  A0D8               	btfss	status,0,c
 32572  002100  D008               	goto	l206
 32573                           
 32574                           ; BSR set to: 0
 32575                           ;i2c_drv.c: 478: {
 32576                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 32577  002102  0E01               	movlw	1
 32578  002104  EC45  F031         	call	_SetAckStatus
 32579                           
 32580                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 32581  002108  0E07               	movlw	7
 32582  00210A  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32583                           
 32584                           ;i2c_drv.c: 484: DataCounter = 0;
 32585  00210C  0E00               	movlw	0
 32586  00210E  6E33               	movwf	I2c_ReadData@DataCounter,c
 32587                           
 32588                           ;i2c_drv.c: 485: }
 32589  002110  D035               	goto	l194
 32590  002112                     l206:
 32591                           
 32592                           ;i2c_drv.c: 486: else
 32593                           ;i2c_drv.c: 487: {
 32594                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 32595  002112  0E00               	movlw	0
 32596  002114  EC45  F031         	call	_SetAckStatus
 32597  002118  D7BA               	goto	L75
 32598  00211A                     
 32599                           ;i2c_drv.c: 497: StopCondition();
 32600  00211A  ECCB  F031         	call	_StopCondition	;wreg free
 32601                           
 32602                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 32603  00211E  0E02               	movlw	2
 32604  002120  6E31               	movwf	I2c_ReadData@ReadStatus,c
 32605                           
 32606                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 32607  002122  0E05               	movlw	5
 32608  002124  0100               	movlb	0	; () banked
 32609  002126  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 32610  002128  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 32611  00212A  0E00               	movlw	0
 32612  00212C  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32613  00212E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 32614  002130  EC0D  F031         	call	_GenerateEvt	;wreg free
 32615                           
 32616                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 32617  002134  0E00               	movlw	0
 32618  002136                     L74:
 32619  002136  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32620                           
 32621                           ;i2c_drv.c: 504: break;
 32622  002138  D021               	goto	l194
 32623  00213A                     
 32624                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 32625  00213A  0E00               	movlw	0
 32626  00213C  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32627                           
 32628                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 32629  00213E  0E01               	movlw	1
 32630  002140  6E31               	movwf	I2c_ReadData@ReadStatus,c
 32631                           
 32632                           ;i2c_drv.c: 515: }
 32633                           
 32634                           ;i2c_drv.c: 514: break;
 32635                           
 32636                           ;i2c_drv.c: 513: default:
 32637                           
 32638                           ;i2c_drv.c: 511: break;
 32639  002142  D01C               	goto	l194
 32640  002144                     l192:
 32641  002144  5034               	movf	I2c_ReadData@I2cReadState,w,c
 32642                           
 32643                           ; Switch size 1, requested type "space"
 32644                           ; Number of cases is 9, Range of values is 0 to 8
 32645                           ; switch strategies available:
 32646                           ; Name         Instructions Cycles
 32647                           ; simple_byte           28    15 (average)
 32648                           ;	Chosen strategy is simple_byte
 32649  002146  0A00               	xorlw	0	; case 0
 32650  002148  B4D8               	btfsc	status,2,c
 32651  00214A  D76C               	goto	l193
 32652  00214C  0A01               	xorlw	1	; case 1
 32653  00214E  B4D8               	btfsc	status,2,c
 32654  002150  D76F               	goto	l195
 32655  002152  0A03               	xorlw	3	; case 2
 32656  002154  B4D8               	btfsc	status,2,c
 32657  002156  D78C               	goto	l196
 32658  002158  0A01               	xorlw	1	; case 3
 32659  00215A  B4D8               	btfsc	status,2,c
 32660  00215C  D790               	goto	l198
 32661  00215E  0A07               	xorlw	7	; case 4
 32662  002160  B4D8               	btfsc	status,2,c
 32663  002162  D79C               	goto	l202
 32664  002164  0A01               	xorlw	1	; case 5
 32665  002166  B4D8               	btfsc	status,2,c
 32666  002168  D79D               	goto	l203
 32667  00216A  0A03               	xorlw	3	; case 6
 32668  00216C  B4D8               	btfsc	status,2,c
 32669  00216E  D7BE               	goto	l205
 32670  002170  0A01               	xorlw	1	; case 7
 32671  002172  B4D8               	btfsc	status,2,c
 32672  002174  D7D2               	goto	l208
 32673  002176  0A0F               	xorlw	15	; case 8
 32674  002178  B4D8               	btfsc	status,2,c
 32675  00217A  D7DF               	goto	l209
 32676  00217C                     l194:
 32677                           
 32678                           ;i2c_drv.c: 518: return ReadStatus;
 32679  00217C  5031               	movf	I2c_ReadData@ReadStatus,w,c
 32680  00217E  0012               	return	
 32681  002180                     __end_of_I2c_ReadData:
 32682                           	opt stack 0
 32683                           tosu	equ	0xFFF
 32684                           tosh	equ	0xFFE
 32685                           tosl	equ	0xFFD
 32686                           pclath	equ	0xFFA
 32687                           tblptru	equ	0xFF8
 32688                           tblptrh	equ	0xFF7
 32689                           tblptrl	equ	0xFF6
 32690                           tablat	equ	0xFF5
 32691                           prodh	equ	0xFF4
 32692                           prodl	equ	0xFF3
 32693                           intcon	equ	0xFF2
 32694                           intcon2	equ	0xFF1
 32695                           intcon3	equ	0xFF0
 32696                           indf0	equ	0xFEF
 32697                           postinc0	equ	0xFEE
 32698                           plusw0	equ	0xFEB
 32699                           fsr0h	equ	0xFEA
 32700                           fsr0l	equ	0xFE9
 32701                           wreg	equ	0xFE8
 32702                           indf1	equ	0xFE7
 32703                           postinc1	equ	0xFE6
 32704                           postdec1	equ	0xFE5
 32705                           plusw1	equ	0xFE3
 32706                           fsr1h	equ	0xFE2
 32707                           fsr1l	equ	0xFE1
 32708                           indf2	equ	0xFDF
 32709                           postinc2	equ	0xFDE
 32710                           postdec2	equ	0xFDD
 32711                           plusw2	equ	0xFDB
 32712                           fsr2h	equ	0xFDA
 32713                           fsr2l	equ	0xFD9
 32714                           status	equ	0xFD8
 32715                           
 32716 ;; *************** function _WriteByte *****************
 32717 ;; Defined at:
 32718 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32719 ;; Parameters:    Size  Location     Type
 32720 ;;  Byte            1    wreg     unsigned char 
 32721 ;; Auto vars:     Size  Location     Type
 32722 ;;  Byte            1   29[BANK0 ] unsigned char 
 32723 ;; Return value:  Size  Location     Type
 32724 ;;                  1    wreg      void 
 32725 ;; Registers used:
 32726 ;;		wreg
 32727 ;; Tracked objects:
 32728 ;;		On entry : 0/0
 32729 ;;		On exit  : 0/0
 32730 ;;		Unchanged: 0/0
 32731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32735 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32736 ;;Total ram usage:        1 bytes
 32737 ;; Hardware stack levels used:    1
 32738 ;; Hardware stack levels required when called:   11
 32739 ;; This function calls:
 32740 ;;		Nothing
 32741 ;; This function is called by:
 32742 ;;		_I2c_WriteData
 32743 ;;		_I2c_ReadData
 32744 ;; This function uses a non-reentrant model
 32745 ;;
 32746                           
 32747                           	psect	text151
 32748  006356                     __ptext151:
 32749                           	opt stack 0
 32750  006356                     _WriteByte:
 32751                           	opt stack 14
 32752                           
 32753                           ;incstack = 0
 32754                           ;WriteByte@Byte stored from wreg
 32755  006356  0100               	movlb	0	; () banked
 32756  006358  6F7D               	movwf	WriteByte@Byte& (0+255),b
 32757                           
 32758                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 32759  00635A  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 32760  00635E  0012               	return		;funcret
 32761  006360                     __end_of_WriteByte:
 32762                           	opt stack 0
 32763                           tosu	equ	0xFFF
 32764                           tosh	equ	0xFFE
 32765                           tosl	equ	0xFFD
 32766                           pclath	equ	0xFFA
 32767                           tblptru	equ	0xFF8
 32768                           tblptrh	equ	0xFF7
 32769                           tblptrl	equ	0xFF6
 32770                           tablat	equ	0xFF5
 32771                           prodh	equ	0xFF4
 32772                           prodl	equ	0xFF3
 32773                           intcon	equ	0xFF2
 32774                           intcon2	equ	0xFF1
 32775                           intcon3	equ	0xFF0
 32776                           indf0	equ	0xFEF
 32777                           postinc0	equ	0xFEE
 32778                           plusw0	equ	0xFEB
 32779                           fsr0h	equ	0xFEA
 32780                           fsr0l	equ	0xFE9
 32781                           wreg	equ	0xFE8
 32782                           indf1	equ	0xFE7
 32783                           postinc1	equ	0xFE6
 32784                           postdec1	equ	0xFE5
 32785                           plusw1	equ	0xFE3
 32786                           fsr1h	equ	0xFE2
 32787                           fsr1l	equ	0xFE1
 32788                           indf2	equ	0xFDF
 32789                           postinc2	equ	0xFDE
 32790                           postdec2	equ	0xFDD
 32791                           plusw2	equ	0xFDB
 32792                           fsr2h	equ	0xFDA
 32793                           fsr2l	equ	0xFD9
 32794                           status	equ	0xFD8
 32795                           
 32796 ;; *************** function _StopCondition *****************
 32797 ;; Defined at:
 32798 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32799 ;; Parameters:    Size  Location     Type
 32800 ;;		None
 32801 ;; Auto vars:     Size  Location     Type
 32802 ;;		None
 32803 ;; Return value:  Size  Location     Type
 32804 ;;                  1    wreg      void 
 32805 ;; Registers used:
 32806 ;;		status,2, status,0
 32807 ;; Tracked objects:
 32808 ;;		On entry : 0/0
 32809 ;;		On exit  : 0/0
 32810 ;;		Unchanged: 0/0
 32811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32816 ;;Total ram usage:        0 bytes
 32817 ;; Hardware stack levels used:    1
 32818 ;; Hardware stack levels required when called:   11
 32819 ;; This function calls:
 32820 ;;		Nothing
 32821 ;; This function is called by:
 32822 ;;		_I2c_WriteData
 32823 ;;		_I2c_ReadData
 32824 ;; This function uses a non-reentrant model
 32825 ;;
 32826                           
 32827                           	psect	text152
 32828  006396                     __ptext152:
 32829                           	opt stack 0
 32830  006396                     _StopCondition:
 32831                           	opt stack 14
 32832                           
 32833                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 32834                           
 32835                           ;incstack = 0
 32836  006396  8471               	bsf	3953,2,c	;volatile
 32837  006398  0012               	return		;funcret
 32838  00639A                     __end_of_StopCondition:
 32839                           	opt stack 0
 32840                           tosu	equ	0xFFF
 32841                           tosh	equ	0xFFE
 32842                           tosl	equ	0xFFD
 32843                           pclath	equ	0xFFA
 32844                           tblptru	equ	0xFF8
 32845                           tblptrh	equ	0xFF7
 32846                           tblptrl	equ	0xFF6
 32847                           tablat	equ	0xFF5
 32848                           prodh	equ	0xFF4
 32849                           prodl	equ	0xFF3
 32850                           intcon	equ	0xFF2
 32851                           intcon2	equ	0xFF1
 32852                           intcon3	equ	0xFF0
 32853                           indf0	equ	0xFEF
 32854                           postinc0	equ	0xFEE
 32855                           plusw0	equ	0xFEB
 32856                           fsr0h	equ	0xFEA
 32857                           fsr0l	equ	0xFE9
 32858                           wreg	equ	0xFE8
 32859                           indf1	equ	0xFE7
 32860                           postinc1	equ	0xFE6
 32861                           postdec1	equ	0xFE5
 32862                           plusw1	equ	0xFE3
 32863                           fsr1h	equ	0xFE2
 32864                           fsr1l	equ	0xFE1
 32865                           indf2	equ	0xFDF
 32866                           postinc2	equ	0xFDE
 32867                           postdec2	equ	0xFDD
 32868                           plusw2	equ	0xFDB
 32869                           fsr2h	equ	0xFDA
 32870                           fsr2l	equ	0xFD9
 32871                           status	equ	0xFD8
 32872                           
 32873 ;; *************** function _StartCondition *****************
 32874 ;; Defined at:
 32875 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32876 ;; Parameters:    Size  Location     Type
 32877 ;;		None
 32878 ;; Auto vars:     Size  Location     Type
 32879 ;;		None
 32880 ;; Return value:  Size  Location     Type
 32881 ;;                  1    wreg      void 
 32882 ;; Registers used:
 32883 ;;		status,2, status,0
 32884 ;; Tracked objects:
 32885 ;;		On entry : 0/0
 32886 ;;		On exit  : 0/0
 32887 ;;		Unchanged: 0/0
 32888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32893 ;;Total ram usage:        0 bytes
 32894 ;; Hardware stack levels used:    1
 32895 ;; Hardware stack levels required when called:   11
 32896 ;; This function calls:
 32897 ;;		Nothing
 32898 ;; This function is called by:
 32899 ;;		_I2c_WriteData
 32900 ;;		_I2c_ReadData
 32901 ;; This function uses a non-reentrant model
 32902 ;;
 32903                           
 32904                           	psect	text153
 32905  00639A                     __ptext153:
 32906                           	opt stack 0
 32907  00639A                     _StartCondition:
 32908                           	opt stack 14
 32909                           
 32910                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 32911                           
 32912                           ;incstack = 0
 32913  00639A  8071               	bsf	3953,0,c	;volatile
 32914  00639C  0012               	return		;funcret
 32915  00639E                     __end_of_StartCondition:
 32916                           	opt stack 0
 32917                           tosu	equ	0xFFF
 32918                           tosh	equ	0xFFE
 32919                           tosl	equ	0xFFD
 32920                           pclath	equ	0xFFA
 32921                           tblptru	equ	0xFF8
 32922                           tblptrh	equ	0xFF7
 32923                           tblptrl	equ	0xFF6
 32924                           tablat	equ	0xFF5
 32925                           prodh	equ	0xFF4
 32926                           prodl	equ	0xFF3
 32927                           intcon	equ	0xFF2
 32928                           intcon2	equ	0xFF1
 32929                           intcon3	equ	0xFF0
 32930                           indf0	equ	0xFEF
 32931                           postinc0	equ	0xFEE
 32932                           plusw0	equ	0xFEB
 32933                           fsr0h	equ	0xFEA
 32934                           fsr0l	equ	0xFE9
 32935                           wreg	equ	0xFE8
 32936                           indf1	equ	0xFE7
 32937                           postinc1	equ	0xFE6
 32938                           postdec1	equ	0xFE5
 32939                           plusw1	equ	0xFE3
 32940                           fsr1h	equ	0xFE2
 32941                           fsr1l	equ	0xFE1
 32942                           indf2	equ	0xFDF
 32943                           postinc2	equ	0xFDE
 32944                           postdec2	equ	0xFDD
 32945                           plusw2	equ	0xFDB
 32946                           fsr2h	equ	0xFDA
 32947                           fsr2l	equ	0xFD9
 32948                           status	equ	0xFD8
 32949                           
 32950 ;; *************** function _SetAckStatus *****************
 32951 ;; Defined at:
 32952 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32953 ;; Parameters:    Size  Location     Type
 32954 ;;  AckSts          1    wreg     unsigned char 
 32955 ;; Auto vars:     Size  Location     Type
 32956 ;;  AckSts          1   29[BANK0 ] unsigned char 
 32957 ;; Return value:  Size  Location     Type
 32958 ;;                  1    wreg      void 
 32959 ;; Registers used:
 32960 ;;		wreg
 32961 ;; Tracked objects:
 32962 ;;		On entry : 0/0
 32963 ;;		On exit  : 0/0
 32964 ;;		Unchanged: 0/0
 32965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32967 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32969 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32970 ;;Total ram usage:        1 bytes
 32971 ;; Hardware stack levels used:    1
 32972 ;; Hardware stack levels required when called:   11
 32973 ;; This function calls:
 32974 ;;		Nothing
 32975 ;; This function is called by:
 32976 ;;		_I2c_ReadData
 32977 ;; This function uses a non-reentrant model
 32978 ;;
 32979                           
 32980                           	psect	text154
 32981  00628A                     __ptext154:
 32982                           	opt stack 0
 32983  00628A                     _SetAckStatus:
 32984                           	opt stack 14
 32985                           
 32986                           ;incstack = 0
 32987                           ;SetAckStatus@AckSts stored from wreg
 32988  00628A  0100               	movlb	0	; () banked
 32989  00628C  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 32990                           
 32991                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 32992  00628E  0100               	movlb	0	; () banked
 32993  006290  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 32994  006292  D002               	bra	u11665
 32995  006294  9A71               	bcf	3953,5,c	;volatile
 32996  006296  D001               	bra	u11666
 32997  006298                     u11665:
 32998  006298  8A71               	bsf	3953,5,c	;volatile
 32999  00629A                     u11666:
 33000                           
 33001                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 33002  00629A  8871               	bsf	3953,4,c	;volatile
 33003  00629C  0012               	return		;funcret
 33004  00629E                     __end_of_SetAckStatus:
 33005                           	opt stack 0
 33006                           tosu	equ	0xFFF
 33007                           tosh	equ	0xFFE
 33008                           tosl	equ	0xFFD
 33009                           pclath	equ	0xFFA
 33010                           tblptru	equ	0xFF8
 33011                           tblptrh	equ	0xFF7
 33012                           tblptrl	equ	0xFF6
 33013                           tablat	equ	0xFF5
 33014                           prodh	equ	0xFF4
 33015                           prodl	equ	0xFF3
 33016                           intcon	equ	0xFF2
 33017                           intcon2	equ	0xFF1
 33018                           intcon3	equ	0xFF0
 33019                           indf0	equ	0xFEF
 33020                           postinc0	equ	0xFEE
 33021                           plusw0	equ	0xFEB
 33022                           fsr0h	equ	0xFEA
 33023                           fsr0l	equ	0xFE9
 33024                           wreg	equ	0xFE8
 33025                           indf1	equ	0xFE7
 33026                           postinc1	equ	0xFE6
 33027                           postdec1	equ	0xFE5
 33028                           plusw1	equ	0xFE3
 33029                           fsr1h	equ	0xFE2
 33030                           fsr1l	equ	0xFE1
 33031                           indf2	equ	0xFDF
 33032                           postinc2	equ	0xFDE
 33033                           postdec2	equ	0xFDD
 33034                           plusw2	equ	0xFDB
 33035                           fsr2h	equ	0xFDA
 33036                           fsr2l	equ	0xFD9
 33037                           status	equ	0xFD8
 33038                           
 33039 ;; *************** function _ReadByte *****************
 33040 ;; Defined at:
 33041 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33042 ;; Parameters:    Size  Location     Type
 33043 ;;		None
 33044 ;; Auto vars:     Size  Location     Type
 33045 ;;  Byte            1   29[BANK0 ] unsigned char 
 33046 ;; Return value:  Size  Location     Type
 33047 ;;                  1    wreg      unsigned char 
 33048 ;; Registers used:
 33049 ;;		wreg, status,2
 33050 ;; Tracked objects:
 33051 ;;		On entry : 0/0
 33052 ;;		On exit  : 0/0
 33053 ;;		Unchanged: 0/0
 33054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33058 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33059 ;;Total ram usage:        1 bytes
 33060 ;; Hardware stack levels used:    1
 33061 ;; Hardware stack levels required when called:   11
 33062 ;; This function calls:
 33063 ;;		Nothing
 33064 ;; This function is called by:
 33065 ;;		_I2c_ReadData
 33066 ;; This function uses a non-reentrant model
 33067 ;;
 33068                           
 33069                           	psect	text155
 33070  006360                     __ptext155:
 33071                           	opt stack 0
 33072  006360                     _ReadByte:
 33073                           	opt stack 14
 33074                           
 33075                           ;i2c_drv.c: 207: UINT8 Byte;
 33076                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 33077                           
 33078                           ;incstack = 0
 33079  006360  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 33080                           
 33081                           ;i2c_drv.c: 213: return Byte;
 33082  006364  0100               	movlb	0	; () banked
 33083  006366  517D               	movf	ReadByte@Byte& (0+255),w,b
 33084  006368  0012               	return	
 33085  00636A                     __end_of_ReadByte:
 33086                           	opt stack 0
 33087                           tosu	equ	0xFFF
 33088                           tosh	equ	0xFFE
 33089                           tosl	equ	0xFFD
 33090                           pclath	equ	0xFFA
 33091                           tblptru	equ	0xFF8
 33092                           tblptrh	equ	0xFF7
 33093                           tblptrl	equ	0xFF6
 33094                           tablat	equ	0xFF5
 33095                           prodh	equ	0xFF4
 33096                           prodl	equ	0xFF3
 33097                           intcon	equ	0xFF2
 33098                           intcon2	equ	0xFF1
 33099                           intcon3	equ	0xFF0
 33100                           indf0	equ	0xFEF
 33101                           postinc0	equ	0xFEE
 33102                           plusw0	equ	0xFEB
 33103                           fsr0h	equ	0xFEA
 33104                           fsr0l	equ	0xFE9
 33105                           wreg	equ	0xFE8
 33106                           indf1	equ	0xFE7
 33107                           postinc1	equ	0xFE6
 33108                           postdec1	equ	0xFE5
 33109                           plusw1	equ	0xFE3
 33110                           fsr1h	equ	0xFE2
 33111                           fsr1l	equ	0xFE1
 33112                           indf2	equ	0xFDF
 33113                           postinc2	equ	0xFDE
 33114                           postdec2	equ	0xFDD
 33115                           plusw2	equ	0xFDB
 33116                           fsr2h	equ	0xFDA
 33117                           fsr2l	equ	0xFD9
 33118                           status	equ	0xFD8
 33119                           
 33120 ;; *************** function _GenerateEvt *****************
 33121 ;; Defined at:
 33122 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 33123 ;; Parameters:    Size  Location     Type
 33124 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 33125 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 33126 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 33127 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 33128 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 33129 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 33130 ;; Auto vars:     Size  Location     Type
 33131 ;;  EventStatus     1   31[BANK0 ] enum E7727
 33132 ;; Return value:  Size  Location     Type
 33133 ;;                  1    wreg      enum E7699
 33134 ;; Registers used:
 33135 ;;		wreg, fsr2l, fsr2h, status,2
 33136 ;; Tracked objects:
 33137 ;;		On entry : 0/0
 33138 ;;		On exit  : 0/0
 33139 ;;		Unchanged: 0/0
 33140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33141 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33142 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33144 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33145 ;;Total ram usage:        3 bytes
 33146 ;; Hardware stack levels used:    1
 33147 ;; Hardware stack levels required when called:   11
 33148 ;; This function calls:
 33149 ;;		Nothing
 33150 ;; This function is called by:
 33151 ;;		_I2c_ReadData
 33152 ;;		_CheckModem
 33153 ;;		_TurnOnModem
 33154 ;;		_ConfigureModem
 33155 ;;		_ModemEvtParser
 33156 ;;		_GetSmsSm
 33157 ;;		_Mdm_RequestSmsData
 33158 ;;		_I2cSlv_SendI2cMsg
 33159 ;;		_I2cSlv_ReceiveI2cMsg
 33160 ;;		_RiSm
 33161 ;;		_Mdm_SendSmsData
 33162 ;;		_MdmHttp_InitGprsNetwork
 33163 ;;		_MdmHttp_GetMethod
 33164 ;;		_Alarm
 33165 ;; This function uses a non-reentrant model
 33166 ;;
 33167                           
 33168                           	psect	text156
 33169  00621A                     __ptext156:
 33170                           	opt stack 0
 33171  00621A                     _GenerateEvt:
 33172                           	opt stack 13
 33173                           
 33174                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 33175                           
 33176                           ; BSR set to: 0
 33177                           ;incstack = 0
 33178  00621A  0E00               	movlw	0
 33179  00621C  0100               	movlb	0	; () banked
 33180  00621E  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 33181                           
 33182                           ; BSR set to: 0
 33183                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 33184  006220  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 33185  006224  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 33186  006228  0E02               	movlw	2
 33187  00622A  6EDF               	movwf	indf2,c
 33188                           
 33189                           ; BSR set to: 0
 33190                           ;os_ser.c: 83: EventStatus = EventSent;
 33191  00622C  0E02               	movlw	2
 33192  00622E  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 33193  006230  0012               	return	
 33194  006232                     __end_of_GenerateEvt:
 33195                           	opt stack 0
 33196                           tosu	equ	0xFFF
 33197                           tosh	equ	0xFFE
 33198                           tosl	equ	0xFFD
 33199                           pclath	equ	0xFFA
 33200                           tblptru	equ	0xFF8
 33201                           tblptrh	equ	0xFF7
 33202                           tblptrl	equ	0xFF6
 33203                           tablat	equ	0xFF5
 33204                           prodh	equ	0xFF4
 33205                           prodl	equ	0xFF3
 33206                           intcon	equ	0xFF2
 33207                           intcon2	equ	0xFF1
 33208                           intcon3	equ	0xFF0
 33209                           indf0	equ	0xFEF
 33210                           postinc0	equ	0xFEE
 33211                           plusw0	equ	0xFEB
 33212                           fsr0h	equ	0xFEA
 33213                           fsr0l	equ	0xFE9
 33214                           wreg	equ	0xFE8
 33215                           indf1	equ	0xFE7
 33216                           postinc1	equ	0xFE6
 33217                           postdec1	equ	0xFE5
 33218                           plusw1	equ	0xFE3
 33219                           fsr1h	equ	0xFE2
 33220                           fsr1l	equ	0xFE1
 33221                           indf2	equ	0xFDF
 33222                           postinc2	equ	0xFDE
 33223                           postdec2	equ	0xFDD
 33224                           plusw2	equ	0xFDB
 33225                           fsr2h	equ	0xFDA
 33226                           fsr2l	equ	0xFD9
 33227                           status	equ	0xFD8
 33228                           
 33229 ;; *************** function _EnableReceiver *****************
 33230 ;; Defined at:
 33231 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33232 ;; Parameters:    Size  Location     Type
 33233 ;;		None
 33234 ;; Auto vars:     Size  Location     Type
 33235 ;;		None
 33236 ;; Return value:  Size  Location     Type
 33237 ;;                  1    wreg      void 
 33238 ;; Registers used:
 33239 ;;		status,2, status,0
 33240 ;; Tracked objects:
 33241 ;;		On entry : 0/0
 33242 ;;		On exit  : 0/0
 33243 ;;		Unchanged: 0/0
 33244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33249 ;;Total ram usage:        0 bytes
 33250 ;; Hardware stack levels used:    1
 33251 ;; Hardware stack levels required when called:   11
 33252 ;; This function calls:
 33253 ;;		Nothing
 33254 ;; This function is called by:
 33255 ;;		_I2c_ReadData
 33256 ;; This function uses a non-reentrant model
 33257 ;;
 33258                           
 33259                           	psect	text157
 33260  00639E                     __ptext157:
 33261                           	opt stack 0
 33262  00639E                     _EnableReceiver:
 33263                           	opt stack 14
 33264                           
 33265                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 33266                           
 33267                           ; BSR set to: 0
 33268                           ;incstack = 0
 33269  00639E  8671               	bsf	3953,3,c	;volatile
 33270  0063A0  0012               	return		;funcret
 33271  0063A2                     __end_of_EnableReceiver:
 33272                           	opt stack 0
 33273                           tosu	equ	0xFFF
 33274                           tosh	equ	0xFFE
 33275                           tosl	equ	0xFFD
 33276                           pclath	equ	0xFFA
 33277                           tblptru	equ	0xFF8
 33278                           tblptrh	equ	0xFF7
 33279                           tblptrl	equ	0xFF6
 33280                           tablat	equ	0xFF5
 33281                           prodh	equ	0xFF4
 33282                           prodl	equ	0xFF3
 33283                           intcon	equ	0xFF2
 33284                           intcon2	equ	0xFF1
 33285                           intcon3	equ	0xFF0
 33286                           indf0	equ	0xFEF
 33287                           postinc0	equ	0xFEE
 33288                           plusw0	equ	0xFEB
 33289                           fsr0h	equ	0xFEA
 33290                           fsr0l	equ	0xFE9
 33291                           wreg	equ	0xFE8
 33292                           indf1	equ	0xFE7
 33293                           postinc1	equ	0xFE6
 33294                           postdec1	equ	0xFE5
 33295                           plusw1	equ	0xFE3
 33296                           fsr1h	equ	0xFE2
 33297                           fsr1l	equ	0xFE1
 33298                           indf2	equ	0xFDF
 33299                           postinc2	equ	0xFDE
 33300                           postdec2	equ	0xFDD
 33301                           plusw2	equ	0xFDB
 33302                           fsr2h	equ	0xFDA
 33303                           fsr2l	equ	0xFD9
 33304                           status	equ	0xFD8
 33305                           
 33306 ;; *************** function _CheckTxStatus *****************
 33307 ;; Defined at:
 33308 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33309 ;; Parameters:    Size  Location     Type
 33310 ;;		None
 33311 ;; Auto vars:     Size  Location     Type
 33312 ;;		None
 33313 ;; Return value:  Size  Location     Type
 33314 ;;                  1    wreg      unsigned char 
 33315 ;; Registers used:
 33316 ;;		wreg, status,2, status,0
 33317 ;; Tracked objects:
 33318 ;;		On entry : 0/0
 33319 ;;		On exit  : 0/0
 33320 ;;		Unchanged: 0/0
 33321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33326 ;;Total ram usage:        0 bytes
 33327 ;; Hardware stack levels used:    1
 33328 ;; Hardware stack levels required when called:   11
 33329 ;; This function calls:
 33330 ;;		Nothing
 33331 ;; This function is called by:
 33332 ;;		_I2c_WriteData
 33333 ;;		_I2c_ReadData
 33334 ;; This function uses a non-reentrant model
 33335 ;;
 33336                           
 33337                           	psect	text158
 33338  00636A                     __ptext158:
 33339                           	opt stack 0
 33340  00636A                     _CheckTxStatus:
 33341                           	opt stack 14
 33342                           
 33343                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 33344                           
 33345                           ;incstack = 0
 33346  00636A  4073               	rrncf	3955,w,c	;volatile
 33347  00636C  42E8               	rrncf	wreg,f,c
 33348  00636E  0B3F               	andlw	63
 33349  006370  0B01               	andlw	1
 33350  006372  0012               	return	
 33351  006374                     __end_of_CheckTxStatus:
 33352                           	opt stack 0
 33353                           tosu	equ	0xFFF
 33354                           tosh	equ	0xFFE
 33355                           tosl	equ	0xFFD
 33356                           pclath	equ	0xFFA
 33357                           tblptru	equ	0xFF8
 33358                           tblptrh	equ	0xFF7
 33359                           tblptrl	equ	0xFF6
 33360                           tablat	equ	0xFF5
 33361                           prodh	equ	0xFF4
 33362                           prodl	equ	0xFF3
 33363                           intcon	equ	0xFF2
 33364                           intcon2	equ	0xFF1
 33365                           intcon3	equ	0xFF0
 33366                           indf0	equ	0xFEF
 33367                           postinc0	equ	0xFEE
 33368                           plusw0	equ	0xFEB
 33369                           fsr0h	equ	0xFEA
 33370                           fsr0l	equ	0xFE9
 33371                           wreg	equ	0xFE8
 33372                           indf1	equ	0xFE7
 33373                           postinc1	equ	0xFE6
 33374                           postdec1	equ	0xFE5
 33375                           plusw1	equ	0xFE3
 33376                           fsr1h	equ	0xFE2
 33377                           fsr1l	equ	0xFE1
 33378                           indf2	equ	0xFDF
 33379                           postinc2	equ	0xFDE
 33380                           postdec2	equ	0xFDD
 33381                           plusw2	equ	0xFDB
 33382                           fsr2h	equ	0xFDA
 33383                           fsr2l	equ	0xFD9
 33384                           status	equ	0xFD8
 33385                           
 33386 ;; *************** function _CheckAckStatus *****************
 33387 ;; Defined at:
 33388 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33389 ;; Parameters:    Size  Location     Type
 33390 ;;		None
 33391 ;; Auto vars:     Size  Location     Type
 33392 ;;		None
 33393 ;; Return value:  Size  Location     Type
 33394 ;;                  1    wreg      unsigned char 
 33395 ;; Registers used:
 33396 ;;		wreg, status,2, status,0
 33397 ;; Tracked objects:
 33398 ;;		On entry : 0/0
 33399 ;;		On exit  : 0/0
 33400 ;;		Unchanged: 0/0
 33401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33406 ;;Total ram usage:        0 bytes
 33407 ;; Hardware stack levels used:    1
 33408 ;; Hardware stack levels required when called:   11
 33409 ;; This function calls:
 33410 ;;		Nothing
 33411 ;; This function is called by:
 33412 ;;		_I2c_WriteData
 33413 ;;		_I2c_ReadData
 33414 ;; This function uses a non-reentrant model
 33415 ;;
 33416                           
 33417                           	psect	text159
 33418  006374                     __ptext159:
 33419                           	opt stack 0
 33420  006374                     _CheckAckStatus:
 33421                           	opt stack 14
 33422                           
 33423                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 33424                           
 33425                           ;incstack = 0
 33426  006374  4471               	rlncf	3953,w,c	;volatile
 33427  006376  46E8               	rlncf	wreg,f,c
 33428  006378  0B03               	andlw	3
 33429  00637A  0B01               	andlw	1
 33430  00637C  0012               	return	
 33431  00637E                     __end_of_CheckAckStatus:
 33432                           	opt stack 0
 33433                           tosu	equ	0xFFF
 33434                           tosh	equ	0xFFE
 33435                           tosl	equ	0xFFD
 33436                           pclath	equ	0xFFA
 33437                           tblptru	equ	0xFF8
 33438                           tblptrh	equ	0xFF7
 33439                           tblptrl	equ	0xFF6
 33440                           tablat	equ	0xFF5
 33441                           prodh	equ	0xFF4
 33442                           prodl	equ	0xFF3
 33443                           intcon	equ	0xFF2
 33444                           intcon2	equ	0xFF1
 33445                           intcon3	equ	0xFF0
 33446                           indf0	equ	0xFEF
 33447                           postinc0	equ	0xFEE
 33448                           plusw0	equ	0xFEB
 33449                           fsr0h	equ	0xFEA
 33450                           fsr0l	equ	0xFE9
 33451                           wreg	equ	0xFE8
 33452                           indf1	equ	0xFE7
 33453                           postinc1	equ	0xFE6
 33454                           postdec1	equ	0xFE5
 33455                           plusw1	equ	0xFE3
 33456                           fsr1h	equ	0xFE2
 33457                           fsr1l	equ	0xFE1
 33458                           indf2	equ	0xFDF
 33459                           postinc2	equ	0xFDE
 33460                           postdec2	equ	0xFDD
 33461                           plusw2	equ	0xFDB
 33462                           fsr2h	equ	0xFDA
 33463                           fsr2l	equ	0xFD9
 33464                           status	equ	0xFD8
 33465                           
 33466 ;; *************** function _LowPriorityIsr *****************
 33467 ;; Defined at:
 33468 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 33469 ;; Parameters:    Size  Location     Type
 33470 ;;		None
 33471 ;; Auto vars:     Size  Location     Type
 33472 ;;		None
 33473 ;; Return value:  Size  Location     Type
 33474 ;;                  1    wreg      void 
 33475 ;; Registers used:
 33476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33477 ;; Tracked objects:
 33478 ;;		On entry : 0/0
 33479 ;;		On exit  : 0/0
 33480 ;;		Unchanged: 0/0
 33481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33484 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33485 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33486 ;;Total ram usage:       21 bytes
 33487 ;; Hardware stack levels used:    1
 33488 ;; Hardware stack levels required when called:   10
 33489 ;; This function calls:
 33490 ;;		_Tmr_Tmr2Isr
 33491 ;; This function is called by:
 33492 ;;		Interrupt level 1
 33493 ;; This function uses a non-reentrant model
 33494 ;;
 33495                           
 33496                           	psect	intcodelo
 33497  000018                     __pintcodelo:
 33498                           	opt stack 0
 33499  000018                     _LowPriorityIsr:
 33500                           	opt stack 8
 33501                           
 33502                           ;incstack = 0
 33503  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 33504  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 33505  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 33506  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 33507  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 33508  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 33509  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 33510  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 33511  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 33512  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 33513  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 33514  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 33515  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 33516  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 33517  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 33518  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 33519  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 33520  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 33521  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 33522  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 33523  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 33524  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 33525                           
 33526                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 33527  00006E  B29E               	btfsc	3998,1,c	;volatile
 33528                           
 33529                           ;irq.c: 259: {
 33530                           ;irq.c: 261: Tmr_Tmr2Isr();
 33531  000070  ECFD  F02F         	call	_Tmr_Tmr2Isr	;wreg free
 33532  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 33533  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 33534  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 33535  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 33536  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 33537  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 33538  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 33539  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 33540  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 33541  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 33542  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 33543  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 33544  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 33545  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 33546  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 33547  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 33548  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 33549  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 33550  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 33551  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 33552  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 33553  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 33554  0000CA  0010               	retfie	
 33555  0000CC                     __end_of_LowPriorityIsr:
 33556                           	opt stack 0
 33557                           tosu	equ	0xFFF
 33558                           tosh	equ	0xFFE
 33559                           tosl	equ	0xFFD
 33560                           pclatu	equ	0xFFB
 33561                           pclath	equ	0xFFA
 33562                           tblptru	equ	0xFF8
 33563                           tblptrh	equ	0xFF7
 33564                           tblptrl	equ	0xFF6
 33565                           tablat	equ	0xFF5
 33566                           prodh	equ	0xFF4
 33567                           prodl	equ	0xFF3
 33568                           intcon	equ	0xFF2
 33569                           intcon2	equ	0xFF1
 33570                           intcon3	equ	0xFF0
 33571                           indf0	equ	0xFEF
 33572                           postinc0	equ	0xFEE
 33573                           plusw0	equ	0xFEB
 33574                           fsr0h	equ	0xFEA
 33575                           fsr0l	equ	0xFE9
 33576                           wreg	equ	0xFE8
 33577                           indf1	equ	0xFE7
 33578                           postinc1	equ	0xFE6
 33579                           postdec1	equ	0xFE5
 33580                           plusw1	equ	0xFE3
 33581                           fsr1h	equ	0xFE2
 33582                           fsr1l	equ	0xFE1
 33583                           bsr	equ	0xFE0
 33584                           indf2	equ	0xFDF
 33585                           postinc2	equ	0xFDE
 33586                           postdec2	equ	0xFDD
 33587                           plusw2	equ	0xFDB
 33588                           fsr2h	equ	0xFDA
 33589                           fsr2l	equ	0xFD9
 33590                           status	equ	0xFD8
 33591                           
 33592 ;; *************** function _Tmr_Tmr2Isr *****************
 33593 ;; Defined at:
 33594 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 33595 ;; Parameters:    Size  Location     Type
 33596 ;;		None
 33597 ;; Auto vars:     Size  Location     Type
 33598 ;;		None
 33599 ;; Return value:  Size  Location     Type
 33600 ;;                  1    wreg      void 
 33601 ;; Registers used:
 33602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33603 ;; Tracked objects:
 33604 ;;		On entry : 0/0
 33605 ;;		On exit  : 0/0
 33606 ;;		Unchanged: 0/0
 33607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33612 ;;Total ram usage:        0 bytes
 33613 ;; Hardware stack levels used:    1
 33614 ;; Hardware stack levels required when called:    9
 33615 ;; This function calls:
 33616 ;;		Absolute function
 33617 ;;		_Sch_SchmIntService
 33618 ;; This function is called by:
 33619 ;;		_LowPriorityIsr
 33620 ;; This function uses a non-reentrant model
 33621 ;;
 33622                           
 33623                           	psect	text161
 33624  005FFA                     __ptext161:
 33625                           	opt stack 0
 33626  005FFA                     _Tmr_Tmr2Isr:
 33627                           	opt stack 8
 33628                           
 33629                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 33630                           
 33631                           ;incstack = 0
 33632  005FFA  929E               	bcf	3998,1,c	;volatile
 33633                           
 33634                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 33635  005FFC  0102               	movlb	2	; () banked
 33636  005FFE  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 33637  006000  11EB               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 33638  006002  B4D8               	btfsc	status,2,c
 33639  006004  0012               	return	
 33640                           
 33641                           ; BSR set to: 2
 33642                           ;tmr_drv.c: 315: {
 33643                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 33644  006006  D801               	call	i1u1504_28
 33645  006008  0012               	return	
 33646  00600A                     i1u1504_28:
 33647  00600A  0005               	push	
 33648  00600C  6EFA               	movwf	pclath,c
 33649  00600E  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 33650  006010  6EFD               	movwf	tosl,c
 33651  006012  51EB               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 33652  006014  6EFE               	movwf	tosh,c
 33653  006016  50F8               	movf	tblptru,w,c
 33654  006018  6EFF               	movwf	tosu,c
 33655  00601A  50FA               	movf	pclath,w,c
 33656  00601C  0012               	return		;indir
 33657  00601E                     __end_of_Tmr_Tmr2Isr:
 33658                           	opt stack 0
 33659                           tosu	equ	0xFFF
 33660                           tosh	equ	0xFFE
 33661                           tosl	equ	0xFFD
 33662                           pclatu	equ	0xFFB
 33663                           pclath	equ	0xFFA
 33664                           tblptru	equ	0xFF8
 33665                           tblptrh	equ	0xFF7
 33666                           tblptrl	equ	0xFF6
 33667                           tablat	equ	0xFF5
 33668                           prodh	equ	0xFF4
 33669                           prodl	equ	0xFF3
 33670                           intcon	equ	0xFF2
 33671                           intcon2	equ	0xFF1
 33672                           intcon3	equ	0xFF0
 33673                           indf0	equ	0xFEF
 33674                           postinc0	equ	0xFEE
 33675                           plusw0	equ	0xFEB
 33676                           fsr0h	equ	0xFEA
 33677                           fsr0l	equ	0xFE9
 33678                           wreg	equ	0xFE8
 33679                           indf1	equ	0xFE7
 33680                           postinc1	equ	0xFE6
 33681                           postdec1	equ	0xFE5
 33682                           plusw1	equ	0xFE3
 33683                           fsr1h	equ	0xFE2
 33684                           fsr1l	equ	0xFE1
 33685                           bsr	equ	0xFE0
 33686                           indf2	equ	0xFDF
 33687                           postinc2	equ	0xFDE
 33688                           postdec2	equ	0xFDD
 33689                           plusw2	equ	0xFDB
 33690                           fsr2h	equ	0xFDA
 33691                           fsr2l	equ	0xFD9
 33692                           status	equ	0xFD8
 33693                           
 33694 ;; *************** function _Sch_SchmIntService *****************
 33695 ;; Defined at:
 33696 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33697 ;; Parameters:    Size  Location     Type
 33698 ;;		None
 33699 ;; Auto vars:     Size  Location     Type
 33700 ;;		None
 33701 ;; Return value:  Size  Location     Type
 33702 ;;                  1    wreg      void 
 33703 ;; Registers used:
 33704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33705 ;; Tracked objects:
 33706 ;;		On entry : 0/0
 33707 ;;		On exit  : 0/0
 33708 ;;		Unchanged: 0/0
 33709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33714 ;;Total ram usage:        0 bytes
 33715 ;; Hardware stack levels used:    1
 33716 ;; Hardware stack levels required when called:    8
 33717 ;; This function calls:
 33718 ;;		_OsAlrm_ProcessOsAlarms
 33719 ;;		_UpdateOsCounters
 33720 ;;		_UpdateSchFlag
 33721 ;; This function is called by:
 33722 ;;		_SystemInit
 33723 ;;		_Tmr_Tmr2Isr
 33724 ;; This function uses a non-reentrant model
 33725 ;;
 33726                           
 33727                           	psect	text162
 33728  006324                     __ptext162:
 33729                           	opt stack 0
 33730  006324                     _Sch_SchmIntService:
 33731                           	opt stack 8
 33732                           
 33733                           ;os_sched.c: 217: UpdateSchFlag();
 33734                           
 33735                           ;incstack = 0
 33736  006324  ECB3  F030         	call	_UpdateSchFlag	;wreg free
 33737                           
 33738                           ;os_sched.c: 219: UpdateOsCounters();
 33739  006328  EC82  F031         	call	_UpdateOsCounters	;wreg free
 33740                           
 33741                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 33742  00632C  EC6B  F011         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 33743  006330  0012               	return		;funcret
 33744  006332                     __end_of_Sch_SchmIntService:
 33745                           	opt stack 0
 33746                           tosu	equ	0xFFF
 33747                           tosh	equ	0xFFE
 33748                           tosl	equ	0xFFD
 33749                           pclatu	equ	0xFFB
 33750                           pclath	equ	0xFFA
 33751                           tblptru	equ	0xFF8
 33752                           tblptrh	equ	0xFF7
 33753                           tblptrl	equ	0xFF6
 33754                           tablat	equ	0xFF5
 33755                           prodh	equ	0xFF4
 33756                           prodl	equ	0xFF3
 33757                           intcon	equ	0xFF2
 33758                           intcon2	equ	0xFF1
 33759                           intcon3	equ	0xFF0
 33760                           indf0	equ	0xFEF
 33761                           postinc0	equ	0xFEE
 33762                           plusw0	equ	0xFEB
 33763                           fsr0h	equ	0xFEA
 33764                           fsr0l	equ	0xFE9
 33765                           wreg	equ	0xFE8
 33766                           indf1	equ	0xFE7
 33767                           postinc1	equ	0xFE6
 33768                           postdec1	equ	0xFE5
 33769                           plusw1	equ	0xFE3
 33770                           fsr1h	equ	0xFE2
 33771                           fsr1l	equ	0xFE1
 33772                           bsr	equ	0xFE0
 33773                           indf2	equ	0xFDF
 33774                           postinc2	equ	0xFDE
 33775                           postdec2	equ	0xFDD
 33776                           plusw2	equ	0xFDB
 33777                           fsr2h	equ	0xFDA
 33778                           fsr2l	equ	0xFD9
 33779                           status	equ	0xFD8
 33780                           
 33781 ;; *************** function _UpdateSchFlag *****************
 33782 ;; Defined at:
 33783 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33784 ;; Parameters:    Size  Location     Type
 33785 ;;		None
 33786 ;; Auto vars:     Size  Location     Type
 33787 ;;		None
 33788 ;; Return value:  Size  Location     Type
 33789 ;;                  1    wreg      void 
 33790 ;; Registers used:
 33791 ;;		wreg, status,2, status,0
 33792 ;; Tracked objects:
 33793 ;;		On entry : 0/0
 33794 ;;		On exit  : 0/0
 33795 ;;		Unchanged: 0/0
 33796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33801 ;;Total ram usage:        0 bytes
 33802 ;; Hardware stack levels used:    1
 33803 ;; Hardware stack levels required when called:    4
 33804 ;; This function calls:
 33805 ;;		Nothing
 33806 ;; This function is called by:
 33807 ;;		_Sch_SchmIntService
 33808 ;; This function uses a non-reentrant model
 33809 ;;
 33810                           
 33811                           	psect	text163
 33812  006166                     __ptext163:
 33813                           	opt stack 0
 33814  006166                     _UpdateSchFlag:
 33815                           	opt stack 11
 33816                           
 33817                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 33818                           ;os_sched.c: 138: InterruptCounter++;
 33819                           
 33820                           ;incstack = 0
 33821  006166  0102               	movlb	2	; () banked
 33822  006168  4BDC               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 33823  00616A  2BDD               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 33824                           
 33825                           ; BSR set to: 2
 33826                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 33827  00616C  51DC               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 33828  00616E  11DD               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 33829  006170  B4D8               	btfsc	status,2,c
 33830  006172  0012               	return	
 33831                           
 33832                           ; BSR set to: 2
 33833                           ;os_sched.c: 141: {
 33834                           ;os_sched.c: 143: InterruptCounter = 0;
 33835  006174  0E00               	movlw	0
 33836  006176  6FDD               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 33837  006178  0E00               	movlw	0
 33838  00617A  6FDC               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 33839                           
 33840                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 33841  00617C  0E00               	movlw	0
 33842  00617E  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 33843  006180  0012               	return	
 33844  006182                     __end_of_UpdateSchFlag:
 33845                           	opt stack 0
 33846                           tosu	equ	0xFFF
 33847                           tosh	equ	0xFFE
 33848                           tosl	equ	0xFFD
 33849                           pclatu	equ	0xFFB
 33850                           pclath	equ	0xFFA
 33851                           tblptru	equ	0xFF8
 33852                           tblptrh	equ	0xFF7
 33853                           tblptrl	equ	0xFF6
 33854                           tablat	equ	0xFF5
 33855                           prodh	equ	0xFF4
 33856                           prodl	equ	0xFF3
 33857                           intcon	equ	0xFF2
 33858                           intcon2	equ	0xFF1
 33859                           intcon3	equ	0xFF0
 33860                           indf0	equ	0xFEF
 33861                           postinc0	equ	0xFEE
 33862                           plusw0	equ	0xFEB
 33863                           fsr0h	equ	0xFEA
 33864                           fsr0l	equ	0xFE9
 33865                           wreg	equ	0xFE8
 33866                           indf1	equ	0xFE7
 33867                           postinc1	equ	0xFE6
 33868                           postdec1	equ	0xFE5
 33869                           plusw1	equ	0xFE3
 33870                           fsr1h	equ	0xFE2
 33871                           fsr1l	equ	0xFE1
 33872                           bsr	equ	0xFE0
 33873                           indf2	equ	0xFDF
 33874                           postinc2	equ	0xFDE
 33875                           postdec2	equ	0xFDD
 33876                           plusw2	equ	0xFDB
 33877                           fsr2h	equ	0xFDA
 33878                           fsr2l	equ	0xFD9
 33879                           status	equ	0xFD8
 33880                           
 33881 ;; *************** function _UpdateOsCounters *****************
 33882 ;; Defined at:
 33883 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33884 ;; Parameters:    Size  Location     Type
 33885 ;;		None
 33886 ;; Auto vars:     Size  Location     Type
 33887 ;;		None
 33888 ;; Return value:  Size  Location     Type
 33889 ;;                  1    wreg      void 
 33890 ;; Registers used:
 33891 ;;		wreg, status,2, status,0
 33892 ;; Tracked objects:
 33893 ;;		On entry : 0/0
 33894 ;;		On exit  : 0/0
 33895 ;;		Unchanged: 0/0
 33896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33901 ;;Total ram usage:        0 bytes
 33902 ;; Hardware stack levels used:    1
 33903 ;; Hardware stack levels required when called:    4
 33904 ;; This function calls:
 33905 ;;		Nothing
 33906 ;; This function is called by:
 33907 ;;		_Sch_SchmIntService
 33908 ;; This function uses a non-reentrant model
 33909 ;;
 33910                           
 33911                           	psect	text164
 33912  006304                     __ptext164:
 33913                           	opt stack 0
 33914  006304                     _UpdateOsCounters:
 33915                           	opt stack 11
 33916                           
 33917                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 33918                           
 33919                           ; BSR set to: 2
 33920                           ;incstack = 0
 33921  006304  0E01               	movlw	1
 33922  006306  0103               	movlb	3	; () banked
 33923  006308  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 33924  00630A  0E00               	movlw	0
 33925  00630C  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 33926  00630E  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 33927  006310  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 33928                           
 33929                           ; BSR set to: 3
 33930  006312  0012               	return		;funcret
 33931  006314                     __end_of_UpdateOsCounters:
 33932                           	opt stack 0
 33933                           tosu	equ	0xFFF
 33934                           tosh	equ	0xFFE
 33935                           tosl	equ	0xFFD
 33936                           pclatu	equ	0xFFB
 33937                           pclath	equ	0xFFA
 33938                           tblptru	equ	0xFF8
 33939                           tblptrh	equ	0xFF7
 33940                           tblptrl	equ	0xFF6
 33941                           tablat	equ	0xFF5
 33942                           prodh	equ	0xFF4
 33943                           prodl	equ	0xFF3
 33944                           intcon	equ	0xFF2
 33945                           intcon2	equ	0xFF1
 33946                           intcon3	equ	0xFF0
 33947                           indf0	equ	0xFEF
 33948                           postinc0	equ	0xFEE
 33949                           plusw0	equ	0xFEB
 33950                           fsr0h	equ	0xFEA
 33951                           fsr0l	equ	0xFE9
 33952                           wreg	equ	0xFE8
 33953                           indf1	equ	0xFE7
 33954                           postinc1	equ	0xFE6
 33955                           postdec1	equ	0xFE5
 33956                           plusw1	equ	0xFE3
 33957                           fsr1h	equ	0xFE2
 33958                           fsr1l	equ	0xFE1
 33959                           bsr	equ	0xFE0
 33960                           indf2	equ	0xFDF
 33961                           postinc2	equ	0xFDE
 33962                           postdec2	equ	0xFDD
 33963                           plusw2	equ	0xFDB
 33964                           fsr2h	equ	0xFDA
 33965                           fsr2l	equ	0xFD9
 33966                           status	equ	0xFD8
 33967                           
 33968 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 33969 ;; Defined at:
 33970 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33971 ;; Parameters:    Size  Location     Type
 33972 ;;		None
 33973 ;; Auto vars:     Size  Location     Type
 33974 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 33975 ;; Return value:  Size  Location     Type
 33976 ;;                  1    wreg      void 
 33977 ;; Registers used:
 33978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33979 ;; Tracked objects:
 33980 ;;		On entry : 0/0
 33981 ;;		On exit  : 0/0
 33982 ;;		Unchanged: 0/0
 33983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33986 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33987 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33988 ;;Total ram usage:       10 bytes
 33989 ;; Hardware stack levels used:    1
 33990 ;; Hardware stack levels required when called:    7
 33991 ;; This function calls:
 33992 ;;		_I2cDummyTx
 33993 ;;		_OsAlrm_ClearOsAlarm
 33994 ;;		i1___wmul
 33995 ;; This function is called by:
 33996 ;;		_Sch_SchmIntService
 33997 ;; This function uses a non-reentrant model
 33998 ;;
 33999                           
 34000                           	psect	text165
 34001  0022D6                     __ptext165:
 34002                           	opt stack 0
 34003  0022D6                     _OsAlrm_ProcessOsAlarms:
 34004                           	opt stack 8
 34005                           
 34006                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 34007                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 34008                           
 34009                           ; BSR set to: 3
 34010                           ;incstack = 0
 34011  0022D6  0E00               	movlw	0
 34012  0022D8  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 34013  0022DA  0E00               	movlw	0
 34014  0022DC  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 34015  0022DE  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 34016  0022E0  E105               	bnz	i1u1475_20
 34017  0022E2  0E14               	movlw	20
 34018  0022E4  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 34019  0022E6  B0D8               	btfsc	status,0,c
 34020  0022E8  0012               	return	
 34021  0022EA  D001               	goto	i1l742
 34022  0022EC                     i1u1475_20:
 34023  0022EC  0012               	return	
 34024  0022EE                     i1l742:
 34025                           
 34026                           ;os_alarms.c: 121: {
 34027                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 34028  0022EE  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34029  0022F2  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34030  0022F6  0E00               	movlw	0
 34031  0022F8  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34032  0022FA  0E0B               	movlw	11
 34033  0022FC  6E1B               	movwf	i1___wmul@multiplicand,c
 34034  0022FE  ECB4  F02F         	call	i1___wmul	;wreg free
 34035  002302  0E00               	movlw	low _OsAlarms
 34036  002304  2419               	addwf	?i1___wmul,w,c
 34037  002306  6ED9               	movwf	fsr2l,c
 34038  002308  0E06               	movlw	high _OsAlarms
 34039  00230A  201A               	addwfc	?i1___wmul+1,w,c
 34040  00230C  6EDA               	movwf	fsr2h,c
 34041  00230E  04DE               	decf	postinc2,w,c
 34042  002310  A4D8               	btfss	status,2,c
 34043  002312  D086               	goto	i1u1479_29
 34044                           
 34045                           ;os_alarms.c: 124: {
 34046                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 34047  002314  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34048  002318  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34049  00231C  0E00               	movlw	0
 34050  00231E  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34051  002320  0E0B               	movlw	11
 34052  002322  6E1B               	movwf	i1___wmul@multiplicand,c
 34053  002324  ECB4  F02F         	call	i1___wmul	;wreg free
 34054  002328  0E01               	movlw	1
 34055  00232A  2619               	addwf	?i1___wmul,f,c
 34056  00232C  0E00               	movlw	0
 34057  00232E  221A               	addwfc	?i1___wmul+1,f,c
 34058  002330  0E00               	movlw	low _OsAlarms
 34059  002332  2419               	addwf	?i1___wmul,w,c
 34060  002334  6ED9               	movwf	fsr2l,c
 34061  002336  0E06               	movlw	high _OsAlarms
 34062  002338  201A               	addwfc	?i1___wmul+1,w,c
 34063  00233A  6EDA               	movwf	fsr2h,c
 34064  00233C  2ADE               	incf	postinc2,f,c
 34065  00233E  0E00               	movlw	0
 34066  002340  22DE               	addwfc	postinc2,f,c
 34067  002342  22DE               	addwfc	postinc2,f,c
 34068  002344  22DE               	addwfc	postinc2,f,c
 34069                           
 34070                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 34071  002346  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34072  00234A  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34073  00234E  0E00               	movlw	0
 34074  002350  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34075  002352  0E0B               	movlw	11
 34076  002354  6E1B               	movwf	i1___wmul@multiplicand,c
 34077  002356  ECB4  F02F         	call	i1___wmul	;wreg free
 34078  00235A  0E05               	movlw	5
 34079  00235C  2619               	addwf	?i1___wmul,f,c
 34080  00235E  0E00               	movlw	0
 34081  002360  221A               	addwfc	?i1___wmul+1,f,c
 34082  002362  0E00               	movlw	low _OsAlarms
 34083  002364  2419               	addwf	?i1___wmul,w,c
 34084  002366  6ED9               	movwf	fsr2l,c
 34085  002368  0E06               	movlw	high _OsAlarms
 34086  00236A  201A               	addwfc	?i1___wmul+1,w,c
 34087  00236C  6EDA               	movwf	fsr2h,c
 34088  00236E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34089  002372  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34090  002376  0E00               	movlw	0
 34091  002378  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34092  00237A  0E0B               	movlw	11
 34093  00237C  6E1B               	movwf	i1___wmul@multiplicand,c
 34094  00237E  ECB4  F02F         	call	i1___wmul	;wreg free
 34095  002382  0E01               	movlw	1
 34096  002384  2619               	addwf	?i1___wmul,f,c
 34097  002386  0E00               	movlw	0
 34098  002388  221A               	addwfc	?i1___wmul+1,f,c
 34099  00238A  0E00               	movlw	low _OsAlarms
 34100  00238C  2419               	addwf	?i1___wmul,w,c
 34101  00238E  6EE1               	movwf	fsr1l,c
 34102  002390  0E06               	movlw	high _OsAlarms
 34103  002392  201A               	addwfc	?i1___wmul+1,w,c
 34104  002394  6EE2               	movwf	fsr1h,c
 34105  002396  50DE               	movf	postinc2,w,c
 34106  002398  5CE6               	subwf	postinc1,w,c
 34107  00239A  50DE               	movf	postinc2,w,c
 34108  00239C  58E6               	subwfb	postinc1,w,c
 34109  00239E  50DE               	movf	postinc2,w,c
 34110  0023A0  58E6               	subwfb	postinc1,w,c
 34111  0023A2  50DE               	movf	postinc2,w,c
 34112  0023A4  58E6               	subwfb	postinc1,w,c
 34113  0023A6  A0D8               	btfss	status,0,c
 34114  0023A8  D03B               	goto	i1u1479_29
 34115                           
 34116                           ;os_alarms.c: 129: {
 34117                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 34118  0023AA  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 34119  0023AC  ECD2  F029         	call	_OsAlrm_ClearOsAlarm
 34120                           
 34121                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 34122  0023B0  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34123  0023B4  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34124  0023B8  0E00               	movlw	0
 34125  0023BA  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34126  0023BC  0E0B               	movlw	11
 34127  0023BE  6E1B               	movwf	i1___wmul@multiplicand,c
 34128  0023C0  ECB4  F02F         	call	i1___wmul	;wreg free
 34129  0023C4  0E09               	movlw	9
 34130  0023C6  2619               	addwf	?i1___wmul,f,c
 34131  0023C8  0E00               	movlw	0
 34132  0023CA  221A               	addwfc	?i1___wmul+1,f,c
 34133  0023CC  0E00               	movlw	low _OsAlarms
 34134  0023CE  2419               	addwf	?i1___wmul,w,c
 34135  0023D0  6ED9               	movwf	fsr2l,c
 34136  0023D2  0E06               	movlw	high _OsAlarms
 34137  0023D4  201A               	addwfc	?i1___wmul+1,w,c
 34138  0023D6  6EDA               	movwf	fsr2h,c
 34139  0023D8  50DE               	movf	postinc2,w,c
 34140  0023DA  10DE               	iorwf	postinc2,w,c
 34141  0023DC  B4D8               	btfsc	status,2,c
 34142  0023DE  D020               	goto	i1u1479_29
 34143                           
 34144                           ;os_alarms.c: 134: {
 34145                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 34146  0023E0  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34147  0023E4  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34148  0023E8  0E00               	movlw	0
 34149  0023EA  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34150  0023EC  0E0B               	movlw	11
 34151  0023EE  6E1B               	movwf	i1___wmul@multiplicand,c
 34152  0023F0  ECB4  F02F         	call	i1___wmul	;wreg free
 34153  0023F4  0E09               	movlw	9
 34154  0023F6  2619               	addwf	?i1___wmul,f,c
 34155  0023F8  0E00               	movlw	0
 34156  0023FA  221A               	addwfc	?i1___wmul+1,f,c
 34157  0023FC  0E00               	movlw	low _OsAlarms
 34158  0023FE  2419               	addwf	?i1___wmul,w,c
 34159  002400  6ED9               	movwf	fsr2l,c
 34160  002402  0E06               	movlw	high _OsAlarms
 34161  002404  201A               	addwfc	?i1___wmul+1,w,c
 34162  002406  6EDA               	movwf	fsr2h,c
 34163  002408  D801               	call	i1u1479_28
 34164  00240A  D00A               	goto	i1u1479_29
 34165  00240C                     i1u1479_28:
 34166  00240C  0005               	push	
 34167  00240E  6EFA               	movwf	pclath,c
 34168  002410  50DE               	movf	postinc2,w,c
 34169  002412  6EFD               	movwf	tosl,c
 34170  002414  50DE               	movf	postinc2,w,c
 34171  002416  6EFE               	movwf	tosh,c
 34172  002418  50F8               	movf	tblptru,w,c
 34173  00241A  6EFF               	movwf	tosu,c
 34174  00241C  50FA               	movf	pclath,w,c
 34175  00241E  0012               	return		;indir
 34176  002420                     i1u1479_29:
 34177  002420  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 34178  002422  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 34179  002424  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 34180  002426  E101               	bnz	i1l747
 34181  002428  D75C               	goto	L76
 34182  00242A                     i1l747:
 34183  00242A  0012               	return		;funcret
 34184  00242C                     __end_of_OsAlrm_ProcessOsAlarms:
 34185                           	opt stack 0
 34186                           tosu	equ	0xFFF
 34187                           tosh	equ	0xFFE
 34188                           tosl	equ	0xFFD
 34189                           pclatu	equ	0xFFB
 34190                           pclath	equ	0xFFA
 34191                           tblptru	equ	0xFF8
 34192                           tblptrh	equ	0xFF7
 34193                           tblptrl	equ	0xFF6
 34194                           tablat	equ	0xFF5
 34195                           prodh	equ	0xFF4
 34196                           prodl	equ	0xFF3
 34197                           intcon	equ	0xFF2
 34198                           intcon2	equ	0xFF1
 34199                           intcon3	equ	0xFF0
 34200                           indf0	equ	0xFEF
 34201                           postinc0	equ	0xFEE
 34202                           plusw0	equ	0xFEB
 34203                           fsr0h	equ	0xFEA
 34204                           fsr0l	equ	0xFE9
 34205                           wreg	equ	0xFE8
 34206                           indf1	equ	0xFE7
 34207                           postinc1	equ	0xFE6
 34208                           postdec1	equ	0xFE5
 34209                           plusw1	equ	0xFE3
 34210                           fsr1h	equ	0xFE2
 34211                           fsr1l	equ	0xFE1
 34212                           bsr	equ	0xFE0
 34213                           indf2	equ	0xFDF
 34214                           postinc2	equ	0xFDE
 34215                           postdec2	equ	0xFDD
 34216                           plusw2	equ	0xFDB
 34217                           fsr2h	equ	0xFDA
 34218                           fsr2l	equ	0xFD9
 34219                           status	equ	0xFD8
 34220                           
 34221 ;; *************** function i1___wmul *****************
 34222 ;; Defined at:
 34223 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 34224 ;; Parameters:    Size  Location     Type
 34225 ;;  multiplier      2   24[COMRAM] unsigned int 
 34226 ;;  multiplicand    2   26[COMRAM] unsigned int 
 34227 ;; Auto vars:     Size  Location     Type
 34228 ;;  __wmul          2   28[COMRAM] unsigned int 
 34229 ;; Return value:  Size  Location     Type
 34230 ;;                  2   24[COMRAM] unsigned int 
 34231 ;; Registers used:
 34232 ;;		wreg, status,2, status,0, prodl, prodh
 34233 ;; Tracked objects:
 34234 ;;		On entry : 0/0
 34235 ;;		On exit  : 0/0
 34236 ;;		Unchanged: 0/0
 34237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34239 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34241 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34242 ;;Total ram usage:        6 bytes
 34243 ;; Hardware stack levels used:    1
 34244 ;; Hardware stack levels required when called:    4
 34245 ;; This function calls:
 34246 ;;		Nothing
 34247 ;; This function is called by:
 34248 ;;		_OsAlrm_ProcessOsAlarms
 34249 ;; This function uses a non-reentrant model
 34250 ;;
 34251                           
 34252                           	psect	text166
 34253  005F68                     __ptext166:
 34254                           	opt stack 0
 34255  005F68                     i1___wmul:
 34256                           	opt stack 10
 34257                           
 34258                           ;incstack = 0
 34259  005F68  5019               	movf	i1___wmul@multiplier,w,c
 34260  005F6A  021B               	mulwf	i1___wmul@multiplicand,c
 34261  005F6C  CFF3 F01D          	movff	prodl,i1___wmul@product
 34262  005F70  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 34263  005F74  5019               	movf	i1___wmul@multiplier,w,c
 34264  005F76  021C               	mulwf	i1___wmul@multiplicand+1,c
 34265  005F78  50F3               	movf	prodl,w,c
 34266  005F7A  261E               	addwf	i1___wmul@product+1,f,c
 34267  005F7C  501A               	movf	i1___wmul@multiplier+1,w,c
 34268  005F7E  021B               	mulwf	i1___wmul@multiplicand,c
 34269  005F80  50F3               	movf	prodl,w,c
 34270  005F82  261E               	addwf	i1___wmul@product+1,f,c
 34271  005F84  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 34272  005F88  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 34273  005F8C  0012               	return	
 34274  005F8E                     __end_ofi1___wmul:
 34275                           	opt stack 0
 34276                           tosu	equ	0xFFF
 34277                           tosh	equ	0xFFE
 34278                           tosl	equ	0xFFD
 34279                           pclatu	equ	0xFFB
 34280                           pclath	equ	0xFFA
 34281                           tblptru	equ	0xFF8
 34282                           tblptrh	equ	0xFF7
 34283                           tblptrl	equ	0xFF6
 34284                           tablat	equ	0xFF5
 34285                           prodh	equ	0xFF4
 34286                           prodl	equ	0xFF3
 34287                           intcon	equ	0xFF2
 34288                           intcon2	equ	0xFF1
 34289                           intcon3	equ	0xFF0
 34290                           indf0	equ	0xFEF
 34291                           postinc0	equ	0xFEE
 34292                           plusw0	equ	0xFEB
 34293                           fsr0h	equ	0xFEA
 34294                           fsr0l	equ	0xFE9
 34295                           wreg	equ	0xFE8
 34296                           indf1	equ	0xFE7
 34297                           postinc1	equ	0xFE6
 34298                           postdec1	equ	0xFE5
 34299                           plusw1	equ	0xFE3
 34300                           fsr1h	equ	0xFE2
 34301                           fsr1l	equ	0xFE1
 34302                           bsr	equ	0xFE0
 34303                           indf2	equ	0xFDF
 34304                           postinc2	equ	0xFDE
 34305                           postdec2	equ	0xFDD
 34306                           plusw2	equ	0xFDB
 34307                           fsr2h	equ	0xFDA
 34308                           fsr2l	equ	0xFD9
 34309                           status	equ	0xFD8
 34310                           
 34311 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 34312 ;; Defined at:
 34313 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 34314 ;; Parameters:    Size  Location     Type
 34315 ;;  OsAlarmId       1    wreg     unsigned char 
 34316 ;; Auto vars:     Size  Location     Type
 34317 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 34318 ;; Return value:  Size  Location     Type
 34319 ;;                  1    wreg      void 
 34320 ;; Registers used:
 34321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34322 ;; Tracked objects:
 34323 ;;		On entry : 0/0
 34324 ;;		On exit  : 0/0
 34325 ;;		Unchanged: 0/0
 34326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34331 ;;Total ram usage:        1 bytes
 34332 ;; Hardware stack levels used:    1
 34333 ;; Hardware stack levels required when called:    4
 34334 ;; This function calls:
 34335 ;;		Nothing
 34336 ;; This function is called by:
 34337 ;;		_OsAlrm_ProcessOsAlarms
 34338 ;; This function uses a non-reentrant model
 34339 ;;
 34340                           
 34341                           	psect	text167
 34342  0053A4                     __ptext167:
 34343                           	opt stack 0
 34344  0053A4                     _OsAlrm_ClearOsAlarm:
 34345                           	opt stack 10
 34346                           
 34347                           ;incstack = 0
 34348                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 34349  0053A4  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 34350                           
 34351                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 34352  0053A6  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 34353  0053A8  0D0B               	mullw	11
 34354  0053AA  0E00               	movlw	low _OsAlarms
 34355  0053AC  24F3               	addwf	prodl,w,c
 34356  0053AE  6ED9               	movwf	fsr2l,c
 34357  0053B0  0E06               	movlw	high _OsAlarms
 34358  0053B2  20F4               	addwfc	prodh,w,c
 34359  0053B4  6EDA               	movwf	fsr2h,c
 34360  0053B6  0E00               	movlw	0
 34361  0053B8  6EDF               	movwf	indf2,c
 34362                           
 34363                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 34364  0053BA  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 34365  0053BC  0D0B               	mullw	11
 34366  0053BE  0E01               	movlw	1
 34367  0053C0  26F3               	addwf	prodl,f,c
 34368  0053C2  0E00               	movlw	0
 34369  0053C4  22F4               	addwfc	prodh,f,c
 34370  0053C6  0E00               	movlw	low _OsAlarms
 34371  0053C8  24F3               	addwf	prodl,w,c
 34372  0053CA  6ED9               	movwf	fsr2l,c
 34373  0053CC  0E06               	movlw	high _OsAlarms
 34374  0053CE  20F4               	addwfc	prodh,w,c
 34375  0053D0  6EDA               	movwf	fsr2h,c
 34376  0053D2  6ADE               	clrf	postinc2,c
 34377  0053D4  6ADE               	clrf	postinc2,c
 34378  0053D6  6ADE               	clrf	postinc2,c
 34379  0053D8  6ADD               	clrf	postdec2,c
 34380                           
 34381                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 34382  0053DA  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 34383  0053DC  0D0B               	mullw	11
 34384  0053DE  0E05               	movlw	5
 34385  0053E0  26F3               	addwf	prodl,f,c
 34386  0053E2  0E00               	movlw	0
 34387  0053E4  22F4               	addwfc	prodh,f,c
 34388  0053E6  0E00               	movlw	low _OsAlarms
 34389  0053E8  24F3               	addwf	prodl,w,c
 34390  0053EA  6ED9               	movwf	fsr2l,c
 34391  0053EC  0E06               	movlw	high _OsAlarms
 34392  0053EE  20F4               	addwfc	prodh,w,c
 34393  0053F0  6EDA               	movwf	fsr2h,c
 34394  0053F2  6ADE               	clrf	postinc2,c
 34395  0053F4  6ADE               	clrf	postinc2,c
 34396  0053F6  6ADE               	clrf	postinc2,c
 34397  0053F8  6ADD               	clrf	postdec2,c
 34398  0053FA  0012               	return		;funcret
 34399  0053FC                     __end_of_OsAlrm_ClearOsAlarm:
 34400                           	opt stack 0
 34401                           tosu	equ	0xFFF
 34402                           tosh	equ	0xFFE
 34403                           tosl	equ	0xFFD
 34404                           pclatu	equ	0xFFB
 34405                           pclath	equ	0xFFA
 34406                           tblptru	equ	0xFF8
 34407                           tblptrh	equ	0xFF7
 34408                           tblptrl	equ	0xFF6
 34409                           tablat	equ	0xFF5
 34410                           prodh	equ	0xFF4
 34411                           prodl	equ	0xFF3
 34412                           intcon	equ	0xFF2
 34413                           intcon2	equ	0xFF1
 34414                           intcon3	equ	0xFF0
 34415                           indf0	equ	0xFEF
 34416                           postinc0	equ	0xFEE
 34417                           plusw0	equ	0xFEB
 34418                           fsr0h	equ	0xFEA
 34419                           fsr0l	equ	0xFE9
 34420                           wreg	equ	0xFE8
 34421                           indf1	equ	0xFE7
 34422                           postinc1	equ	0xFE6
 34423                           postdec1	equ	0xFE5
 34424                           plusw1	equ	0xFE3
 34425                           fsr1h	equ	0xFE2
 34426                           fsr1l	equ	0xFE1
 34427                           bsr	equ	0xFE0
 34428                           indf2	equ	0xFDF
 34429                           postinc2	equ	0xFDE
 34430                           postdec2	equ	0xFDD
 34431                           plusw2	equ	0xFDB
 34432                           fsr2h	equ	0xFDA
 34433                           fsr2l	equ	0xFD9
 34434                           status	equ	0xFD8
 34435                           
 34436 ;; *************** function _I2cDummyTx *****************
 34437 ;; Defined at:
 34438 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34439 ;; Parameters:    Size  Location     Type
 34440 ;;		None
 34441 ;; Auto vars:     Size  Location     Type
 34442 ;;		None
 34443 ;; Return value:  Size  Location     Type
 34444 ;;                  1    wreg      void 
 34445 ;; Registers used:
 34446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34447 ;; Tracked objects:
 34448 ;;		On entry : 0/0
 34449 ;;		On exit  : 0/0
 34450 ;;		Unchanged: 0/0
 34451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34456 ;;Total ram usage:        0 bytes
 34457 ;; Hardware stack levels used:    1
 34458 ;; Hardware stack levels required when called:    6
 34459 ;; This function calls:
 34460 ;;		i1_I2cSlv_SendI2cMsg
 34461 ;; This function is called by:
 34462 ;;		_I2cSlv_MainTask
 34463 ;;		_OsAlrm_ProcessOsAlarms
 34464 ;; This function uses a non-reentrant model
 34465 ;;
 34466                           
 34467                           	psect	text168
 34468  006182                     __ptext168:
 34469                           	opt stack 0
 34470  006182                     _I2cDummyTx:
 34471                           	opt stack 8
 34472                           
 34473                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 34474                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 34475                           
 34476                           ;incstack = 0
 34477  006182  0EFD               	movlw	low I2cDummyTx@DummyBuffer
 34478  006184  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 34479  006186  0E01               	movlw	high I2cDummyTx@DummyBuffer
 34480  006188  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 34481  00618A  0E00               	movlw	0
 34482  00618C  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 34483  00618E  0E01               	movlw	1
 34484  006190  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 34485  006192  EC33  F02E         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 34486                           
 34487                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 34488  006196  0E01               	movlw	1
 34489  006198  0101               	movlb	1	; () banked
 34490  00619A  6FE9               	movwf	_I2cBusStatus& (0+255),b
 34491                           
 34492                           ; BSR set to: 1
 34493  00619C  0012               	return		;funcret
 34494  00619E                     __end_of_I2cDummyTx:
 34495                           	opt stack 0
 34496                           tosu	equ	0xFFF
 34497                           tosh	equ	0xFFE
 34498                           tosl	equ	0xFFD
 34499                           pclatu	equ	0xFFB
 34500                           pclath	equ	0xFFA
 34501                           tblptru	equ	0xFF8
 34502                           tblptrh	equ	0xFF7
 34503                           tblptrl	equ	0xFF6
 34504                           tablat	equ	0xFF5
 34505                           prodh	equ	0xFF4
 34506                           prodl	equ	0xFF3
 34507                           intcon	equ	0xFF2
 34508                           intcon2	equ	0xFF1
 34509                           intcon3	equ	0xFF0
 34510                           indf0	equ	0xFEF
 34511                           postinc0	equ	0xFEE
 34512                           plusw0	equ	0xFEB
 34513                           fsr0h	equ	0xFEA
 34514                           fsr0l	equ	0xFE9
 34515                           wreg	equ	0xFE8
 34516                           indf1	equ	0xFE7
 34517                           postinc1	equ	0xFE6
 34518                           postdec1	equ	0xFE5
 34519                           plusw1	equ	0xFE3
 34520                           fsr1h	equ	0xFE2
 34521                           fsr1l	equ	0xFE1
 34522                           bsr	equ	0xFE0
 34523                           indf2	equ	0xFDF
 34524                           postinc2	equ	0xFDE
 34525                           postdec2	equ	0xFDD
 34526                           plusw2	equ	0xFDB
 34527                           fsr2h	equ	0xFDA
 34528                           fsr2l	equ	0xFD9
 34529                           status	equ	0xFD8
 34530                           
 34531 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 34532 ;; Defined at:
 34533 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34534 ;; Parameters:    Size  Location     Type
 34535 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 34536 ;;		 -> ReadAddress(1), EepromBuffer(15), triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), 
 34537 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 34538 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 34539 ;;  DataLenght      1   30[COMRAM] unsigned char 
 34540 ;; Auto vars:     Size  Location     Type
 34541 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 34542 ;; Return value:  Size  Location     Type
 34543 ;;                  1    wreg      unsigned char 
 34544 ;; Registers used:
 34545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34546 ;; Tracked objects:
 34547 ;;		On entry : 0/0
 34548 ;;		On exit  : 0/0
 34549 ;;		Unchanged: 0/0
 34550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34551 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34554 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34555 ;;Total ram usage:        5 bytes
 34556 ;; Hardware stack levels used:    1
 34557 ;; Hardware stack levels required when called:    5
 34558 ;; This function calls:
 34559 ;;		i1_GenerateEvt
 34560 ;; This function is called by:
 34561 ;;		_I2cDummyTx
 34562 ;; This function uses a non-reentrant model
 34563 ;;
 34564                           
 34565                           	psect	text169
 34566  005C66                     __ptext169:
 34567                           	opt stack 0
 34568  005C66                     i1_I2cSlv_SendI2cMsg:
 34569                           	opt stack 8
 34570                           
 34571                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 34572                           
 34573                           ; BSR set to: 1
 34574                           ;incstack = 0
 34575  005C66  0E00               	movlw	0
 34576  005C68  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34577                           
 34578                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 34579  005C6A  0100               	movlb	0	; () banked
 34580  005C6C  05CF               	decf	_I2cComSts& (0+255),w,b
 34581  005C6E  B4D8               	btfsc	status,2,c
 34582  005C70  D014               	goto	i1l1409
 34583                           
 34584                           ; BSR set to: 0
 34585                           ;i2c_slv.c: 257: {
 34586                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 34587  005C72  C01E  F39D         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 34588                           
 34589                           ; BSR set to: 0
 34590                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 34591  005C76  0E00               	movlw	0
 34592  005C78  0103               	movlb	3	; () banked
 34593  005C7A  6F9E               	movwf	(_I2cTxPacket+1)& (0+255),b
 34594                           
 34595                           ; BSR set to: 3
 34596                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 34597  005C7C  C01F  F3A1         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 34598                           
 34599                           ; BSR set to: 3
 34600                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 34601  005C80  C01C  F39F         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 34602  005C84  C01D  F3A0         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 34603                           
 34604                           ; BSR set to: 3
 34605                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 34606  005C88  0ED9               	movlw	low _I2cWriteDataEvt
 34607  005C8A  6E19               	movwf	i1GenerateEvt@Event,c
 34608  005C8C  0E00               	movlw	high _I2cWriteDataEvt
 34609  005C8E  6E1A               	movwf	i1GenerateEvt@Event+1,c
 34610  005C90  EC2F  F031         	call	i1_GenerateEvt	;wreg free
 34611                           
 34612                           ;i2c_slv.c: 267: TxSts = 1u;
 34613  005C94  0E01               	movlw	1
 34614  005C96  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34615                           
 34616                           ;i2c_slv.c: 268: }
 34617  005C98  0012               	return	
 34618  005C9A                     i1l1409:
 34619                           
 34620                           ;i2c_slv.c: 269: else
 34621                           ;i2c_slv.c: 270: {
 34622                           ;i2c_slv.c: 272: TxSts = 0u;
 34623  005C9A  0E00               	movlw	0
 34624  005C9C  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34625  005C9E  0012               	return	
 34626  005CA0                     __end_ofi1_I2cSlv_SendI2cMsg:
 34627                           	opt stack 0
 34628                           tosu	equ	0xFFF
 34629                           tosh	equ	0xFFE
 34630                           tosl	equ	0xFFD
 34631                           pclatu	equ	0xFFB
 34632                           pclath	equ	0xFFA
 34633                           tblptru	equ	0xFF8
 34634                           tblptrh	equ	0xFF7
 34635                           tblptrl	equ	0xFF6
 34636                           tablat	equ	0xFF5
 34637                           prodh	equ	0xFF4
 34638                           prodl	equ	0xFF3
 34639                           intcon	equ	0xFF2
 34640                           intcon2	equ	0xFF1
 34641                           intcon3	equ	0xFF0
 34642                           indf0	equ	0xFEF
 34643                           postinc0	equ	0xFEE
 34644                           plusw0	equ	0xFEB
 34645                           fsr0h	equ	0xFEA
 34646                           fsr0l	equ	0xFE9
 34647                           wreg	equ	0xFE8
 34648                           indf1	equ	0xFE7
 34649                           postinc1	equ	0xFE6
 34650                           postdec1	equ	0xFE5
 34651                           plusw1	equ	0xFE3
 34652                           fsr1h	equ	0xFE2
 34653                           fsr1l	equ	0xFE1
 34654                           bsr	equ	0xFE0
 34655                           indf2	equ	0xFDF
 34656                           postinc2	equ	0xFDE
 34657                           postdec2	equ	0xFDD
 34658                           plusw2	equ	0xFDB
 34659                           fsr2h	equ	0xFDA
 34660                           fsr2l	equ	0xFD9
 34661                           status	equ	0xFD8
 34662                           
 34663 ;; *************** function i1_GenerateEvt *****************
 34664 ;; Defined at:
 34665 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34666 ;; Parameters:    Size  Location     Type
 34667 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 34668 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34669 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34670 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 34671 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 34672 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34673 ;; Auto vars:     Size  Location     Type
 34674 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 34675 ;; Return value:  Size  Location     Type
 34676 ;;                  1    wreg      enum E7699
 34677 ;; Registers used:
 34678 ;;		wreg, fsr2l, fsr2h, status,2
 34679 ;; Tracked objects:
 34680 ;;		On entry : 0/0
 34681 ;;		On exit  : 0/0
 34682 ;;		Unchanged: 0/0
 34683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34687 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34688 ;;Total ram usage:        3 bytes
 34689 ;; Hardware stack levels used:    1
 34690 ;; Hardware stack levels required when called:    4
 34691 ;; This function calls:
 34692 ;;		Nothing
 34693 ;; This function is called by:
 34694 ;;		i1_I2cSlv_SendI2cMsg
 34695 ;; This function uses a non-reentrant model
 34696 ;;
 34697                           
 34698                           	psect	text170
 34699  00625E                     __ptext170:
 34700                           	opt stack 0
 34701  00625E                     i1_GenerateEvt:
 34702                           	opt stack 8
 34703                           
 34704                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34705                           
 34706                           ;incstack = 0
 34707  00625E  0E00               	movlw	0
 34708  006260  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 34709                           
 34710                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34711  006262  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 34712  006266  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 34713  00626A  0E02               	movlw	2
 34714  00626C  6EDF               	movwf	indf2,c
 34715                           
 34716                           ;os_ser.c: 83: EventStatus = EventSent;
 34717  00626E  0E02               	movlw	2
 34718  006270  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 34719  006272  0012               	return	
 34720  006274                     __end_ofi1_GenerateEvt:
 34721                           	opt stack 0
 34722                           tosu	equ	0xFFF
 34723                           tosh	equ	0xFFE
 34724                           tosl	equ	0xFFD
 34725                           pclatu	equ	0xFFB
 34726                           pclath	equ	0xFFA
 34727                           tblptru	equ	0xFF8
 34728                           tblptrh	equ	0xFF7
 34729                           tblptrl	equ	0xFF6
 34730                           tablat	equ	0xFF5
 34731                           prodh	equ	0xFF4
 34732                           prodl	equ	0xFF3
 34733                           intcon	equ	0xFF2
 34734                           intcon2	equ	0xFF1
 34735                           intcon3	equ	0xFF0
 34736                           indf0	equ	0xFEF
 34737                           postinc0	equ	0xFEE
 34738                           plusw0	equ	0xFEB
 34739                           fsr0h	equ	0xFEA
 34740                           fsr0l	equ	0xFE9
 34741                           wreg	equ	0xFE8
 34742                           indf1	equ	0xFE7
 34743                           postinc1	equ	0xFE6
 34744                           postdec1	equ	0xFE5
 34745                           plusw1	equ	0xFE3
 34746                           fsr1h	equ	0xFE2
 34747                           fsr1l	equ	0xFE1
 34748                           bsr	equ	0xFE0
 34749                           indf2	equ	0xFDF
 34750                           postinc2	equ	0xFDE
 34751                           postdec2	equ	0xFDD
 34752                           plusw2	equ	0xFDB
 34753                           fsr2h	equ	0xFDA
 34754                           fsr2l	equ	0xFD9
 34755                           status	equ	0xFD8
 34756                           
 34757 ;; *************** function _HighPriorityIsr *****************
 34758 ;; Defined at:
 34759 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 34760 ;; Parameters:    Size  Location     Type
 34761 ;;		None
 34762 ;; Auto vars:     Size  Location     Type
 34763 ;;		None
 34764 ;; Return value:  Size  Location     Type
 34765 ;;                  1    wreg      void 
 34766 ;; Registers used:
 34767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34768 ;; Tracked objects:
 34769 ;;		On entry : 0/0
 34770 ;;		On exit  : 0/0
 34771 ;;		Unchanged: 0/0
 34772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34775 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34776 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34777 ;;Total ram usage:       18 bytes
 34778 ;; Hardware stack levels used:    1
 34779 ;; Hardware stack levels required when called:    3
 34780 ;; This function calls:
 34781 ;;		_Mcu_Int0Isr
 34782 ;;		_Mcu_Int1Isr
 34783 ;;		_Rtcc_RtcIsr
 34784 ;;		_Uart_Uart1RxIsr
 34785 ;; This function is called by:
 34786 ;;		Interrupt level 2
 34787 ;; This function uses a non-reentrant model
 34788 ;;
 34789                           
 34790                           	psect	intcode
 34791  000008                     __pintcode:
 34792                           	opt stack 0
 34793  000008                     _HighPriorityIsr:
 34794                           	opt stack 8
 34795                           
 34796                           ;incstack = 0
 34797  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 34798  00000A  EF25  F021         	goto	int_func
 34799                           tosu	equ	0xFFF
 34800                           tosh	equ	0xFFE
 34801                           tosl	equ	0xFFD
 34802                           pclatu	equ	0xFFB
 34803                           pclath	equ	0xFFA
 34804                           tblptru	equ	0xFF8
 34805                           tblptrh	equ	0xFF7
 34806                           tblptrl	equ	0xFF6
 34807                           tablat	equ	0xFF5
 34808                           prodh	equ	0xFF4
 34809                           prodl	equ	0xFF3
 34810                           intcon	equ	0xFF2
 34811                           intcon2	equ	0xFF1
 34812                           intcon3	equ	0xFF0
 34813                           indf0	equ	0xFEF
 34814                           postinc0	equ	0xFEE
 34815                           plusw0	equ	0xFEB
 34816                           fsr0h	equ	0xFEA
 34817                           fsr0l	equ	0xFE9
 34818                           wreg	equ	0xFE8
 34819                           indf1	equ	0xFE7
 34820                           postinc1	equ	0xFE6
 34821                           postdec1	equ	0xFE5
 34822                           plusw1	equ	0xFE3
 34823                           fsr1h	equ	0xFE2
 34824                           fsr1l	equ	0xFE1
 34825                           bsr	equ	0xFE0
 34826                           indf2	equ	0xFDF
 34827                           postinc2	equ	0xFDE
 34828                           postdec2	equ	0xFDD
 34829                           plusw2	equ	0xFDB
 34830                           fsr2h	equ	0xFDA
 34831                           fsr2l	equ	0xFD9
 34832                           status	equ	0xFD8
 34833                           
 34834                           	psect	intcode_body
 34835  00424A                     __pintcode_body:
 34836                           	opt stack 8
 34837  00424A                     int_func:
 34838                           	opt stack 8
 34839  00424A  CFFA F007          	movff	pclath,??_HighPriorityIsr
 34840  00424E  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 34841  004252  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 34842  004256  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 34843  00425A  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 34844  00425E  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 34845  004262  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 34846  004266  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 34847  00426A  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 34848  00426E  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 34849  004272  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 34850  004276  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 34851  00427A  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 34852  00427E  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 34853  004282  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 34854  004286  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 34855  00428A  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 34856  00428E  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 34857                           
 34858                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 34859  004292  B2F2               	btfsc	intcon,1,c	;volatile
 34860                           
 34861                           ;irq.c: 158: {
 34862                           ;irq.c: 160: Mcu_Int0Isr();
 34863  004294  ECD5  F031         	call	_Mcu_Int0Isr	;wreg free
 34864                           
 34865                           ;irq.c: 161: }
 34866                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 34867  004298  B0F0               	btfsc	intcon3,0,c	;volatile
 34868                           
 34869                           ;irq.c: 167: {
 34870                           ;irq.c: 169: Mcu_Int1Isr();
 34871  00429A  ECD3  F031         	call	_Mcu_Int1Isr	;wreg free
 34872                           
 34873                           ;irq.c: 170: }
 34874                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 34875  00429E  B0A4               	btfsc	4004,0,c	;volatile
 34876                           
 34877                           ;irq.c: 203: {
 34878                           ;irq.c: 205: Rtcc_RtcIsr();
 34879  0042A0  ECD1  F031         	call	_Rtcc_RtcIsr	;wreg free
 34880                           
 34881                           ;irq.c: 206: }
 34882                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 34883  0042A4  BA9E               	btfsc	3998,5,c	;volatile
 34884                           
 34885                           ;irq.c: 212: {
 34886                           ;irq.c: 214: Uart_Uart1RxIsr();
 34887  0042A6  EC8A  F031         	call	_Uart_Uart1RxIsr	;wreg free
 34888  0042AA  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 34889  0042AE  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 34890  0042B2  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 34891  0042B6  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 34892  0042BA  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 34893  0042BE  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 34894  0042C2  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 34895  0042C6  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 34896  0042CA  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 34897  0042CE  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 34898  0042D2  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 34899  0042D6  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 34900  0042DA  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 34901  0042DE  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 34902  0042E2  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 34903  0042E6  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 34904  0042EA  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 34905  0042EE  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 34906  0042F2  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 34907  0042F4  0011               	retfie		f
 34908  0042F6                     __end_of_HighPriorityIsr:
 34909                           	opt stack 0
 34910                           tosu	equ	0xFFF
 34911                           tosh	equ	0xFFE
 34912                           tosl	equ	0xFFD
 34913                           pclatu	equ	0xFFB
 34914                           pclath	equ	0xFFA
 34915                           tblptru	equ	0xFF8
 34916                           tblptrh	equ	0xFF7
 34917                           tblptrl	equ	0xFF6
 34918                           tablat	equ	0xFF5
 34919                           prodh	equ	0xFF4
 34920                           prodl	equ	0xFF3
 34921                           intcon	equ	0xFF2
 34922                           intcon2	equ	0xFF1
 34923                           intcon3	equ	0xFF0
 34924                           indf0	equ	0xFEF
 34925                           postinc0	equ	0xFEE
 34926                           plusw0	equ	0xFEB
 34927                           fsr0h	equ	0xFEA
 34928                           fsr0l	equ	0xFE9
 34929                           wreg	equ	0xFE8
 34930                           indf1	equ	0xFE7
 34931                           postinc1	equ	0xFE6
 34932                           postdec1	equ	0xFE5
 34933                           plusw1	equ	0xFE3
 34934                           fsr1h	equ	0xFE2
 34935                           fsr1l	equ	0xFE1
 34936                           bsr	equ	0xFE0
 34937                           indf2	equ	0xFDF
 34938                           postinc2	equ	0xFDE
 34939                           postdec2	equ	0xFDD
 34940                           plusw2	equ	0xFDB
 34941                           fsr2h	equ	0xFDA
 34942                           fsr2l	equ	0xFD9
 34943                           status	equ	0xFD8
 34944                           
 34945 ;; *************** function _Uart_Uart1RxIsr *****************
 34946 ;; Defined at:
 34947 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 34948 ;; Parameters:    Size  Location     Type
 34949 ;;		None
 34950 ;; Auto vars:     Size  Location     Type
 34951 ;;		None
 34952 ;; Return value:  Size  Location     Type
 34953 ;;                  1    wreg      void 
 34954 ;; Registers used:
 34955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34956 ;; Tracked objects:
 34957 ;;		On entry : 0/0
 34958 ;;		On exit  : 0/0
 34959 ;;		Unchanged: 0/0
 34960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34965 ;;Total ram usage:        0 bytes
 34966 ;; Hardware stack levels used:    1
 34967 ;; Hardware stack levels required when called:    2
 34968 ;; This function calls:
 34969 ;;		_Uart_MdmGsmGprsReadService
 34970 ;; This function is called by:
 34971 ;;		_HighPriorityIsr
 34972 ;; This function uses a non-reentrant model
 34973 ;;
 34974                           
 34975                           	psect	text172
 34976  006314                     __ptext172:
 34977                           	opt stack 0
 34978  006314                     _Uart_Uart1RxIsr:
 34979                           	opt stack 8
 34980                           
 34981                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 34982                           ;uart_drv.c: 590: UartRxData = RCREG1;
 34983                           
 34984                           ;incstack = 0
 34985  006314  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 34986                           
 34987                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 34988  006318  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 34989  00631C  0E01               	movlw	1
 34990  00631E  ECC1  F01D         	call	_Uart_MdmGsmGprsReadService
 34991  006322  0012               	return		;funcret
 34992  006324                     __end_of_Uart_Uart1RxIsr:
 34993                           	opt stack 0
 34994                           tosu	equ	0xFFF
 34995                           tosh	equ	0xFFE
 34996                           tosl	equ	0xFFD
 34997                           pclatu	equ	0xFFB
 34998                           pclath	equ	0xFFA
 34999                           tblptru	equ	0xFF8
 35000                           tblptrh	equ	0xFF7
 35001                           tblptrl	equ	0xFF6
 35002                           tablat	equ	0xFF5
 35003                           prodh	equ	0xFF4
 35004                           prodl	equ	0xFF3
 35005                           intcon	equ	0xFF2
 35006                           intcon2	equ	0xFF1
 35007                           intcon3	equ	0xFF0
 35008                           indf0	equ	0xFEF
 35009                           postinc0	equ	0xFEE
 35010                           plusw0	equ	0xFEB
 35011                           fsr0h	equ	0xFEA
 35012                           fsr0l	equ	0xFE9
 35013                           wreg	equ	0xFE8
 35014                           indf1	equ	0xFE7
 35015                           postinc1	equ	0xFE6
 35016                           postdec1	equ	0xFE5
 35017                           plusw1	equ	0xFE3
 35018                           fsr1h	equ	0xFE2
 35019                           fsr1l	equ	0xFE1
 35020                           bsr	equ	0xFE0
 35021                           indf2	equ	0xFDF
 35022                           postinc2	equ	0xFDE
 35023                           postdec2	equ	0xFDD
 35024                           plusw2	equ	0xFDB
 35025                           fsr2h	equ	0xFDA
 35026                           fsr2l	equ	0xFD9
 35027                           status	equ	0xFD8
 35028                           
 35029 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 35030 ;; Defined at:
 35031 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 35032 ;; Parameters:    Size  Location     Type
 35033 ;;  Module          1    wreg     unsigned char 
 35034 ;;  UartData        1    3[COMRAM] unsigned char 
 35035 ;; Auto vars:     Size  Location     Type
 35036 ;;  Module          1    0[COMRAM] unsigned char 
 35037 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 35038 ;; Return value:  Size  Location     Type
 35039 ;;                  1    wreg      void 
 35040 ;; Registers used:
 35041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 35042 ;; Tracked objects:
 35043 ;;		On entry : 0/0
 35044 ;;		On exit  : 0/0
 35045 ;;		Unchanged: 0/0
 35046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35047 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35050 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35051 ;;Total ram usage:        3 bytes
 35052 ;; Hardware stack levels used:    1
 35053 ;; Hardware stack levels required when called:    1
 35054 ;; This function calls:
 35055 ;;		i2_GenerateEvt
 35056 ;; This function is called by:
 35057 ;;		_Uart_Uart1RxIsr
 35058 ;; This function uses a non-reentrant model
 35059 ;;
 35060                           
 35061                           	psect	text173
 35062  003B82                     __ptext173:
 35063                           	opt stack 0
 35064  003B82                     _Uart_MdmGsmGprsReadService:
 35065                           	opt stack 8
 35066                           
 35067                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 35068                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 35069                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 35070                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 35071                           
 35072                           ;incstack = 0
 35073  003B82  0E00               	movlw	0
 35074  003B84  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 35075  003B86  0E00               	movlw	0
 35076  003B88  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 35077                           
 35078                           ;uart_drv.c: 383: switch (RxState)
 35079  003B8A  D058               	goto	i2l680
 35080  003B8C                     
 35081                           ;uart_drv.c: 387: if (UartData == '\r')
 35082  003B8C  0E0D               	movlw	13
 35083  003B8E  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 35084  003B90  A4D8               	btfss	status,2,c
 35085  003B92  D003               	goto	i2l682
 35086                           
 35087                           ;uart_drv.c: 388: {
 35088                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 35089  003B94  0E01               	movlw	1
 35090  003B96  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 35091                           
 35092                           ;uart_drv.c: 391: }
 35093  003B98  0012               	return	
 35094  003B9A                     i2l682:
 35095                           
 35096                           ;uart_drv.c: 392: else
 35097                           ;uart_drv.c: 393: {
 35098                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 35099  003B9A  0E90               	movlw	144
 35100  003B9C  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 35101  003B9E  0E01               	movlw	1
 35102  003BA0  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 35103  003BA2  B0D8               	btfsc	status,0,c
 35104  003BA4  0012               	return	
 35105                           
 35106                           ;uart_drv.c: 395: {
 35107                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 35108  003BA6  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 35109  003BA8  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 35110  003BAA  6ED9               	movwf	fsr2l,c
 35111  003BAC  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 35112  003BAE  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 35113  003BB0  6EDA               	movwf	fsr2h,c
 35114  003BB2  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 35115                           
 35116                           ;uart_drv.c: 399: RxCounter++;
 35117  003BB6  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 35118  003BB8  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 35119                           
 35120                           ;uart_drv.c: 400: }
 35121                           ;uart_drv.c: 401: }
 35122                           ;uart_drv.c: 402: break;
 35123  003BBA  0012               	return	
 35124  003BBC                     
 35125                           ;uart_drv.c: 406: if (UartData == '\n')
 35126  003BBC  0E0A               	movlw	10
 35127  003BBE  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 35128  003BC0  A4D8               	btfss	status,2,c
 35129  003BC2  D035               	goto	i2l688
 35130                           
 35131                           ;uart_drv.c: 407: {
 35132                           ;uart_drv.c: 409: if (RxCounter > 0)
 35133  003BC4  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 35134  003BC6  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 35135  003BC8  B4D8               	btfsc	status,2,c
 35136  003BCA  D031               	goto	i2l688
 35137                           
 35138                           ;uart_drv.c: 410: {
 35139                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 35140  003BCC  0E00               	movlw	0
 35141  003BCE  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 35142  003BD0  0E00               	movlw	0
 35143  003BD2  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 35144  003BD4  D010               	goto	i2l689
 35145  003BD6                     
 35146                           ;uart_drv.c: 413: {
 35147                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 35148  003BD6  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 35149  003BD8  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 35150  003BDA  6ED9               	movwf	fsr2l,c
 35151  003BDC  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 35152  003BDE  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 35153  003BE0  6EDA               	movwf	fsr2h,c
 35154  003BE2  0E58               	movlw	low _RxBuffer
 35155  003BE4  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 35156  003BE6  6EE1               	movwf	fsr1l,c
 35157  003BE8  0E0C               	movlw	high _RxBuffer
 35158  003BEA  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 35159  003BEC  6EE2               	movwf	fsr1h,c
 35160  003BEE  CFDF FFE7          	movff	indf2,indf1
 35161  003BF2  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 35162  003BF4  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 35163  003BF6                     i2l689:
 35164  003BF6  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 35165  003BF8  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 35166  003BFA  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 35167  003BFC  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 35168  003BFE  A0D8               	btfss	status,0,c
 35169  003C00  D7EA               	goto	i2l690
 35170                           
 35171                           ;uart_drv.c: 415: }
 35172                           ;uart_drv.c: 417: RxLen = RxCounter;
 35173  003C02  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 35174  003C06  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 35175                           
 35176                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 35177  003C0A  0E3C               	movlw	low _NewStringReceived
 35178  003C0C  6E01               	movwf	i2GenerateEvt@Event,c
 35179  003C0E  0E00               	movlw	high _NewStringReceived
 35180  003C10  6E02               	movwf	i2GenerateEvt@Event+1,c
 35181  003C12  EC3A  F031         	call	i2_GenerateEvt	;wreg free
 35182                           
 35183                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 35184  003C16  0E3B               	movlw	low _NewMdmEvtParserRequest
 35185  003C18  6E01               	movwf	i2GenerateEvt@Event,c
 35186  003C1A  0E00               	movlw	high _NewMdmEvtParserRequest
 35187  003C1C  6E02               	movwf	i2GenerateEvt@Event+1,c
 35188  003C1E  EC3A  F031         	call	i2_GenerateEvt	;wreg free
 35189                           
 35190                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 35191  003C22  0E3A               	movlw	low _NewStringMdmTerminal
 35192  003C24  6E01               	movwf	i2GenerateEvt@Event,c
 35193  003C26  0E00               	movlw	high _NewStringMdmTerminal
 35194  003C28  6E02               	movwf	i2GenerateEvt@Event+1,c
 35195  003C2A  EC3A  F031         	call	i2_GenerateEvt	;wreg free
 35196  003C2E                     i2l688:
 35197                           
 35198                           ;uart_drv.c: 427: }
 35199                           ;uart_drv.c: 429: RxState = ReadData;
 35200                           
 35201                           ;uart_drv.c: 424: else
 35202                           ;uart_drv.c: 425: {
 35203                           
 35204                           ;uart_drv.c: 422: }
 35205                           ;uart_drv.c: 423: }
 35206  003C2E  0E00               	movlw	0
 35207  003C30  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 35208                           
 35209                           ;uart_drv.c: 431: RxCounter = 0;
 35210  003C32  0E00               	movlw	0
 35211  003C34  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 35212  003C36  0E00               	movlw	0
 35213  003C38  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 35214                           
 35215                           ;uart_drv.c: 436: }
 35216                           
 35217                           ;uart_drv.c: 435: break;
 35218                           
 35219                           ;uart_drv.c: 434: default:
 35220                           
 35221                           ;uart_drv.c: 432: break;
 35222  003C3A  0012               	return	
 35223  003C3C                     i2l680:
 35224  003C3C  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 35225                           
 35226                           ; Switch size 1, requested type "space"
 35227                           ; Number of cases is 2, Range of values is 0 to 1
 35228                           ; switch strategies available:
 35229                           ; Name         Instructions Cycles
 35230                           ; simple_byte            7     4 (average)
 35231                           ;	Chosen strategy is simple_byte
 35232  003C3E  0A00               	xorlw	0	; case 0
 35233  003C40  B4D8               	btfsc	status,2,c
 35234  003C42  D7A4               	goto	i2l681
 35235  003C44  0A01               	xorlw	1	; case 1
 35236  003C46  A4D8               	btfss	status,2,c
 35237  003C48  0012               	return	
 35238  003C4A  D7B8               	goto	i2l686
 35239  003C4C                     __end_of_Uart_MdmGsmGprsReadService:
 35240                           	opt stack 0
 35241                           tosu	equ	0xFFF
 35242                           tosh	equ	0xFFE
 35243                           tosl	equ	0xFFD
 35244                           pclatu	equ	0xFFB
 35245                           pclath	equ	0xFFA
 35246                           tblptru	equ	0xFF8
 35247                           tblptrh	equ	0xFF7
 35248                           tblptrl	equ	0xFF6
 35249                           tablat	equ	0xFF5
 35250                           prodh	equ	0xFF4
 35251                           prodl	equ	0xFF3
 35252                           intcon	equ	0xFF2
 35253                           intcon2	equ	0xFF1
 35254                           intcon3	equ	0xFF0
 35255                           indf0	equ	0xFEF
 35256                           postinc0	equ	0xFEE
 35257                           plusw0	equ	0xFEB
 35258                           fsr0h	equ	0xFEA
 35259                           fsr0l	equ	0xFE9
 35260                           wreg	equ	0xFE8
 35261                           indf1	equ	0xFE7
 35262                           postinc1	equ	0xFE6
 35263                           postdec1	equ	0xFE5
 35264                           plusw1	equ	0xFE3
 35265                           fsr1h	equ	0xFE2
 35266                           fsr1l	equ	0xFE1
 35267                           bsr	equ	0xFE0
 35268                           indf2	equ	0xFDF
 35269                           postinc2	equ	0xFDE
 35270                           postdec2	equ	0xFDD
 35271                           plusw2	equ	0xFDB
 35272                           fsr2h	equ	0xFDA
 35273                           fsr2l	equ	0xFD9
 35274                           status	equ	0xFD8
 35275                           
 35276 ;; *************** function i2_GenerateEvt *****************
 35277 ;; Defined at:
 35278 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 35279 ;; Parameters:    Size  Location     Type
 35280 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 35281 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 35282 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 35283 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 35284 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 35285 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 35286 ;; Auto vars:     Size  Location     Type
 35287 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 35288 ;; Return value:  Size  Location     Type
 35289 ;;                  1    wreg      enum E7699
 35290 ;; Registers used:
 35291 ;;		wreg, fsr2l, fsr2h, status,2
 35292 ;; Tracked objects:
 35293 ;;		On entry : 0/0
 35294 ;;		On exit  : 0/0
 35295 ;;		Unchanged: 0/0
 35296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35300 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35301 ;;Total ram usage:        3 bytes
 35302 ;; Hardware stack levels used:    1
 35303 ;; This function calls:
 35304 ;;		Nothing
 35305 ;; This function is called by:
 35306 ;;		_Uart_MdmGsmGprsReadService
 35307 ;; This function uses a non-reentrant model
 35308 ;;
 35309                           
 35310                           	psect	text174
 35311  006274                     __ptext174:
 35312                           	opt stack 0
 35313  006274                     i2_GenerateEvt:
 35314                           	opt stack 8
 35315                           
 35316                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 35317                           
 35318                           ;incstack = 0
 35319  006274  0E00               	movlw	0
 35320  006276  6E03               	movwf	i2GenerateEvt@EventStatus,c
 35321                           
 35322                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 35323  006278  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 35324  00627C  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 35325  006280  0E02               	movlw	2
 35326  006282  6EDF               	movwf	indf2,c
 35327                           
 35328                           ;os_ser.c: 83: EventStatus = EventSent;
 35329  006284  0E02               	movlw	2
 35330  006286  6E03               	movwf	i2GenerateEvt@EventStatus,c
 35331  006288  0012               	return	
 35332  00628A                     __end_ofi2_GenerateEvt:
 35333                           	opt stack 0
 35334                           tosu	equ	0xFFF
 35335                           tosh	equ	0xFFE
 35336                           tosl	equ	0xFFD
 35337                           pclatu	equ	0xFFB
 35338                           pclath	equ	0xFFA
 35339                           tblptru	equ	0xFF8
 35340                           tblptrh	equ	0xFF7
 35341                           tblptrl	equ	0xFF6
 35342                           tablat	equ	0xFF5
 35343                           prodh	equ	0xFF4
 35344                           prodl	equ	0xFF3
 35345                           intcon	equ	0xFF2
 35346                           intcon2	equ	0xFF1
 35347                           intcon3	equ	0xFF0
 35348                           indf0	equ	0xFEF
 35349                           postinc0	equ	0xFEE
 35350                           plusw0	equ	0xFEB
 35351                           fsr0h	equ	0xFEA
 35352                           fsr0l	equ	0xFE9
 35353                           wreg	equ	0xFE8
 35354                           indf1	equ	0xFE7
 35355                           postinc1	equ	0xFE6
 35356                           postdec1	equ	0xFE5
 35357                           plusw1	equ	0xFE3
 35358                           fsr1h	equ	0xFE2
 35359                           fsr1l	equ	0xFE1
 35360                           bsr	equ	0xFE0
 35361                           indf2	equ	0xFDF
 35362                           postinc2	equ	0xFDE
 35363                           postdec2	equ	0xFDD
 35364                           plusw2	equ	0xFDB
 35365                           fsr2h	equ	0xFDA
 35366                           fsr2l	equ	0xFD9
 35367                           status	equ	0xFD8
 35368                           
 35369 ;; *************** function _Rtcc_RtcIsr *****************
 35370 ;; Defined at:
 35371 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 35372 ;; Parameters:    Size  Location     Type
 35373 ;;		None
 35374 ;; Auto vars:     Size  Location     Type
 35375 ;;		None
 35376 ;; Return value:  Size  Location     Type
 35377 ;;                  1    wreg      void 
 35378 ;; Registers used:
 35379 ;;		wreg, status,2, status,0
 35380 ;; Tracked objects:
 35381 ;;		On entry : 0/0
 35382 ;;		On exit  : 0/0
 35383 ;;		Unchanged: 0/0
 35384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35389 ;;Total ram usage:        0 bytes
 35390 ;; Hardware stack levels used:    1
 35391 ;; This function calls:
 35392 ;;		Nothing
 35393 ;; This function is called by:
 35394 ;;		_HighPriorityIsr
 35395 ;; This function uses a non-reentrant model
 35396 ;;
 35397                           
 35398                           	psect	text175
 35399  0063A2                     __ptext175:
 35400                           	opt stack 0
 35401  0063A2                     _Rtcc_RtcIsr:
 35402                           	opt stack 10
 35403                           
 35404                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 35405                           
 35406                           ;incstack = 0
 35407  0063A2  90A4               	bcf	4004,0,c	;volatile
 35408  0063A4  0012               	return	
 35409  0063A6                     __end_of_Rtcc_RtcIsr:
 35410                           	opt stack 0
 35411                           tosu	equ	0xFFF
 35412                           tosh	equ	0xFFE
 35413                           tosl	equ	0xFFD
 35414                           pclatu	equ	0xFFB
 35415                           pclath	equ	0xFFA
 35416                           tblptru	equ	0xFF8
 35417                           tblptrh	equ	0xFF7
 35418                           tblptrl	equ	0xFF6
 35419                           tablat	equ	0xFF5
 35420                           prodh	equ	0xFF4
 35421                           prodl	equ	0xFF3
 35422                           intcon	equ	0xFF2
 35423                           intcon2	equ	0xFF1
 35424                           intcon3	equ	0xFF0
 35425                           indf0	equ	0xFEF
 35426                           postinc0	equ	0xFEE
 35427                           plusw0	equ	0xFEB
 35428                           fsr0h	equ	0xFEA
 35429                           fsr0l	equ	0xFE9
 35430                           wreg	equ	0xFE8
 35431                           indf1	equ	0xFE7
 35432                           postinc1	equ	0xFE6
 35433                           postdec1	equ	0xFE5
 35434                           plusw1	equ	0xFE3
 35435                           fsr1h	equ	0xFE2
 35436                           fsr1l	equ	0xFE1
 35437                           bsr	equ	0xFE0
 35438                           indf2	equ	0xFDF
 35439                           postinc2	equ	0xFDE
 35440                           postdec2	equ	0xFDD
 35441                           plusw2	equ	0xFDB
 35442                           fsr2h	equ	0xFDA
 35443                           fsr2l	equ	0xFD9
 35444                           status	equ	0xFD8
 35445                           
 35446 ;; *************** function _Mcu_Int1Isr *****************
 35447 ;; Defined at:
 35448 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 35449 ;; Parameters:    Size  Location     Type
 35450 ;;		None
 35451 ;; Auto vars:     Size  Location     Type
 35452 ;;		None
 35453 ;; Return value:  Size  Location     Type
 35454 ;;                  1    wreg      void 
 35455 ;; Registers used:
 35456 ;;		wreg, status,2, status,0
 35457 ;; Tracked objects:
 35458 ;;		On entry : 0/0
 35459 ;;		On exit  : 0/0
 35460 ;;		Unchanged: 0/0
 35461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35466 ;;Total ram usage:        0 bytes
 35467 ;; Hardware stack levels used:    1
 35468 ;; This function calls:
 35469 ;;		Nothing
 35470 ;; This function is called by:
 35471 ;;		_HighPriorityIsr
 35472 ;; This function uses a non-reentrant model
 35473 ;;
 35474                           
 35475                           	psect	text176
 35476  0063A6                     __ptext176:
 35477                           	opt stack 0
 35478  0063A6                     _Mcu_Int1Isr:
 35479                           	opt stack 10
 35480                           
 35481                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 35482                           
 35483                           ;incstack = 0
 35484  0063A6  90F0               	bcf	intcon3,0,c	;volatile
 35485  0063A8  0012               	return	
 35486  0063AA                     __end_of_Mcu_Int1Isr:
 35487                           	opt stack 0
 35488                           tosu	equ	0xFFF
 35489                           tosh	equ	0xFFE
 35490                           tosl	equ	0xFFD
 35491                           pclatu	equ	0xFFB
 35492                           pclath	equ	0xFFA
 35493                           tblptru	equ	0xFF8
 35494                           tblptrh	equ	0xFF7
 35495                           tblptrl	equ	0xFF6
 35496                           tablat	equ	0xFF5
 35497                           prodh	equ	0xFF4
 35498                           prodl	equ	0xFF3
 35499                           intcon	equ	0xFF2
 35500                           intcon2	equ	0xFF1
 35501                           intcon3	equ	0xFF0
 35502                           indf0	equ	0xFEF
 35503                           postinc0	equ	0xFEE
 35504                           plusw0	equ	0xFEB
 35505                           fsr0h	equ	0xFEA
 35506                           fsr0l	equ	0xFE9
 35507                           wreg	equ	0xFE8
 35508                           indf1	equ	0xFE7
 35509                           postinc1	equ	0xFE6
 35510                           postdec1	equ	0xFE5
 35511                           plusw1	equ	0xFE3
 35512                           fsr1h	equ	0xFE2
 35513                           fsr1l	equ	0xFE1
 35514                           bsr	equ	0xFE0
 35515                           indf2	equ	0xFDF
 35516                           postinc2	equ	0xFDE
 35517                           postdec2	equ	0xFDD
 35518                           plusw2	equ	0xFDB
 35519                           fsr2h	equ	0xFDA
 35520                           fsr2l	equ	0xFD9
 35521                           status	equ	0xFD8
 35522                           
 35523 ;; *************** function _Mcu_Int0Isr *****************
 35524 ;; Defined at:
 35525 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 35526 ;; Parameters:    Size  Location     Type
 35527 ;;		None
 35528 ;; Auto vars:     Size  Location     Type
 35529 ;;		None
 35530 ;; Return value:  Size  Location     Type
 35531 ;;                  1    wreg      void 
 35532 ;; Registers used:
 35533 ;;		wreg, status,2, status,0
 35534 ;; Tracked objects:
 35535 ;;		On entry : 0/0
 35536 ;;		On exit  : 0/0
 35537 ;;		Unchanged: 0/0
 35538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35543 ;;Total ram usage:        0 bytes
 35544 ;; Hardware stack levels used:    1
 35545 ;; This function calls:
 35546 ;;		Nothing
 35547 ;; This function is called by:
 35548 ;;		_HighPriorityIsr
 35549 ;; This function uses a non-reentrant model
 35550 ;;
 35551                           
 35552                           	psect	text177
 35553  0063AA                     __ptext177:
 35554                           	opt stack 0
 35555  0063AA                     _Mcu_Int0Isr:
 35556                           	opt stack 10
 35557                           
 35558                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 35559                           
 35560                           ;incstack = 0
 35561  0063AA  92F2               	bcf	intcon,1,c	;volatile
 35562  0063AC  0012               	return	
 35563  0063AE                     __end_of_Mcu_Int0Isr:
 35564                           	opt stack 0
 35565                           tosu	equ	0xFFF
 35566                           tosh	equ	0xFFE
 35567                           tosl	equ	0xFFD
 35568                           pclatu	equ	0xFFB
 35569                           pclath	equ	0xFFA
 35570                           tblptru	equ	0xFF8
 35571                           tblptrh	equ	0xFF7
 35572                           tblptrl	equ	0xFF6
 35573                           tablat	equ	0xFF5
 35574                           prodh	equ	0xFF4
 35575                           prodl	equ	0xFF3
 35576                           intcon	equ	0xFF2
 35577                           intcon2	equ	0xFF1
 35578                           intcon3	equ	0xFF0
 35579                           indf0	equ	0xFEF
 35580                           postinc0	equ	0xFEE
 35581                           plusw0	equ	0xFEB
 35582                           fsr0h	equ	0xFEA
 35583                           fsr0l	equ	0xFE9
 35584                           wreg	equ	0xFE8
 35585                           indf1	equ	0xFE7
 35586                           postinc1	equ	0xFE6
 35587                           postdec1	equ	0xFE5
 35588                           plusw1	equ	0xFE3
 35589                           fsr1h	equ	0xFE2
 35590                           fsr1l	equ	0xFE1
 35591                           bsr	equ	0xFE0
 35592                           indf2	equ	0xFDF
 35593                           postinc2	equ	0xFDE
 35594                           postdec2	equ	0xFDD
 35595                           plusw2	equ	0xFDB
 35596                           fsr2h	equ	0xFDA
 35597                           fsr2l	equ	0xFD9
 35598                           status	equ	0xFD8
 35599                           tosu	equ	0xFFF
 35600                           tosh	equ	0xFFE
 35601                           tosl	equ	0xFFD
 35602                           pclatu	equ	0xFFB
 35603                           pclath	equ	0xFFA
 35604                           tblptru	equ	0xFF8
 35605                           tblptrh	equ	0xFF7
 35606                           tblptrl	equ	0xFF6
 35607                           tablat	equ	0xFF5
 35608                           prodh	equ	0xFF4
 35609                           prodl	equ	0xFF3
 35610                           intcon	equ	0xFF2
 35611                           intcon2	equ	0xFF1
 35612                           intcon3	equ	0xFF0
 35613                           indf0	equ	0xFEF
 35614                           postinc0	equ	0xFEE
 35615                           plusw0	equ	0xFEB
 35616                           fsr0h	equ	0xFEA
 35617                           fsr0l	equ	0xFE9
 35618                           wreg	equ	0xFE8
 35619                           indf1	equ	0xFE7
 35620                           postinc1	equ	0xFE6
 35621                           postdec1	equ	0xFE5
 35622                           plusw1	equ	0xFE3
 35623                           fsr1h	equ	0xFE2
 35624                           fsr1l	equ	0xFE1
 35625                           bsr	equ	0xFE0
 35626                           indf2	equ	0xFDF
 35627                           postinc2	equ	0xFDE
 35628                           postdec2	equ	0xFDD
 35629                           plusw2	equ	0xFDB
 35630                           fsr2h	equ	0xFDA
 35631                           fsr2l	equ	0xFD9
 35632                           status	equ	0xFD8
 35633                           
 35634                           	psect	text178
 35635  000000                     __ptext178:
 35636                           	opt stack 0
 35637                           tosu	equ	0xFFF
 35638                           tosh	equ	0xFFE
 35639                           tosl	equ	0xFFD
 35640                           pclatu	equ	0xFFB
 35641                           pclath	equ	0xFFA
 35642                           tblptru	equ	0xFF8
 35643                           tblptrh	equ	0xFF7
 35644                           tblptrl	equ	0xFF6
 35645                           tablat	equ	0xFF5
 35646                           prodh	equ	0xFF4
 35647                           prodl	equ	0xFF3
 35648                           intcon	equ	0xFF2
 35649                           intcon2	equ	0xFF1
 35650                           intcon3	equ	0xFF0
 35651                           indf0	equ	0xFEF
 35652                           postinc0	equ	0xFEE
 35653                           plusw0	equ	0xFEB
 35654                           fsr0h	equ	0xFEA
 35655                           fsr0l	equ	0xFE9
 35656                           wreg	equ	0xFE8
 35657                           indf1	equ	0xFE7
 35658                           postinc1	equ	0xFE6
 35659                           postdec1	equ	0xFE5
 35660                           plusw1	equ	0xFE3
 35661                           fsr1h	equ	0xFE2
 35662                           fsr1l	equ	0xFE1
 35663                           bsr	equ	0xFE0
 35664                           indf2	equ	0xFDF
 35665                           postinc2	equ	0xFDE
 35666                           postdec2	equ	0xFDD
 35667                           plusw2	equ	0xFDB
 35668                           fsr2h	equ	0xFDA
 35669                           fsr2l	equ	0xFD9
 35670                           status	equ	0xFD8
 35671                           
 35672                           	psect	rparam
 35673  0000                     tosu	equ	0xFFF
 35674                           tosh	equ	0xFFE
 35675                           tosl	equ	0xFFD
 35676                           pclatu	equ	0xFFB
 35677                           pclath	equ	0xFFA
 35678                           tblptru	equ	0xFF8
 35679                           tblptrh	equ	0xFF7
 35680                           tblptrl	equ	0xFF6
 35681                           tablat	equ	0xFF5
 35682                           prodh	equ	0xFF4
 35683                           prodl	equ	0xFF3
 35684                           intcon	equ	0xFF2
 35685                           intcon2	equ	0xFF1
 35686                           intcon3	equ	0xFF0
 35687                           indf0	equ	0xFEF
 35688                           postinc0	equ	0xFEE
 35689                           plusw0	equ	0xFEB
 35690                           fsr0h	equ	0xFEA
 35691                           fsr0l	equ	0xFE9
 35692                           wreg	equ	0xFE8
 35693                           indf1	equ	0xFE7
 35694                           postinc1	equ	0xFE6
 35695                           postdec1	equ	0xFE5
 35696                           plusw1	equ	0xFE3
 35697                           fsr1h	equ	0xFE2
 35698                           fsr1l	equ	0xFE1
 35699                           bsr	equ	0xFE0
 35700                           indf2	equ	0xFDF
 35701                           postinc2	equ	0xFDE
 35702                           postdec2	equ	0xFDD
 35703                           plusw2	equ	0xFDB
 35704                           fsr2h	equ	0xFDA
 35705                           fsr2l	equ	0xFD9
 35706                           status	equ	0xFD8
 35707                           
 35708                           	psect	temp
 35709  000042                     btemp:
 35710                           	opt stack 0
 35711  000042                     	ds	1
 35712  0000                     int$flags	set	btemp
 35713  0000                     wtemp6	set	btemp+1
 35714                           tosu	equ	0xFFF
 35715                           tosh	equ	0xFFE
 35716                           tosl	equ	0xFFD
 35717                           pclatu	equ	0xFFB
 35718                           pclath	equ	0xFFA
 35719                           tblptru	equ	0xFF8
 35720                           tblptrh	equ	0xFF7
 35721                           tblptrl	equ	0xFF6
 35722                           tablat	equ	0xFF5
 35723                           prodh	equ	0xFF4
 35724                           prodl	equ	0xFF3
 35725                           intcon	equ	0xFF2
 35726                           intcon2	equ	0xFF1
 35727                           intcon3	equ	0xFF0
 35728                           indf0	equ	0xFEF
 35729                           postinc0	equ	0xFEE
 35730                           plusw0	equ	0xFEB
 35731                           fsr0h	equ	0xFEA
 35732                           fsr0l	equ	0xFE9
 35733                           wreg	equ	0xFE8
 35734                           indf1	equ	0xFE7
 35735                           postinc1	equ	0xFE6
 35736                           postdec1	equ	0xFE5
 35737                           plusw1	equ	0xFE3
 35738                           fsr1h	equ	0xFE2
 35739                           fsr1l	equ	0xFE1
 35740                           bsr	equ	0xFE0
 35741                           indf2	equ	0xFDF
 35742                           postinc2	equ	0xFDE
 35743                           postdec2	equ	0xFDD
 35744                           plusw2	equ	0xFDB
 35745                           fsr2h	equ	0xFDA
 35746                           fsr2l	equ	0xFD9
 35747                           status	equ	0xFD8


Data Sizes:
    Strings     394
    Constant    567
    Data        184
    BSS         2341
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      2     256
    BANK4           192      4     172
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_31(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    blinkForSeconds@blinkTicks	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blinkTicks(BANK3[2]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> initGprsModem@modemCounter(BANK3[2]), MyApp_Task@blinkTicks(BANK3[2]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 14
		 -> memoryPreamble(BANK3[4]), MyApp_Task@phone(BANK4[14]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> MyApp_Task@phone(BANK4[14]), GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK5[50]), 
		 -> PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 14
		 -> MyApp_Task@phone(BANK4[14]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), ModemEvtParser@ClipString(BANK0[5]), 
		 -> ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8951 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4613$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4613$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4613$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4613$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3066$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3056$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3056$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3032$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3032$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3032$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3032$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 14
		 -> memoryPreamble(BANK3[4]), MyApp_Task@phone(BANK4[14]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> memoryPreamble(BANK3[4]), MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> memoryPreamble(BANK3[4]), MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2533_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2533_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_30(CODE[12]), STR_29(CODE[19]), STR_20(CODE[14]), STR_19(CODE[14]), 
		 -> STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), STR_14(CODE[21]), 
		 -> STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), STR_10(CODE[14]), 
		 -> STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), STR_4(CODE[12]), 
		 -> STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> memoryPreamble(BANK3[4]), MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> memoryPreamble(BANK3[4]), MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _MyApp_Task->_Eeprom_Read
    _initGprsModem->_Mdm_SetSmsFormat
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _blinkForSeconds->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _GetCallerNumber->_ClearBuffer
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _StringCompare->_GetCallerNumber
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_initFsm
    _initFsm->_initEeprom
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _Sch_MainScheduler->_InitializeTasks

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  719409
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  714778
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  357482
                                              0 BANK3      1     1      0
                                              0 BANK4      4     4      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  357296
                                              0 BANK3      2     2      0
                                              0 BANK4      1     1      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59042
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59042
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41832
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          25    25      0   96920
                                              4 BANK1      4     4      0
                        _ClearBuffer
                        _Eeprom_Read
                    _GetCallerNumber
                _Led_SetLedBlinkTime
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
                    _blinkForSeconds
                            _initFsm
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   40381
                                              3 BANK1      1     1      0
                         _initEeprom
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15266
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   25078
                                              0 BANK1      3     3      0
                        _Eeprom_Read
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Read                                          7     4      3   24146
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (7) _I2cSlv_QueryI2cData                                  7     0      7   23495
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3711
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _blinkForSeconds                                      3     1      2   11928
                                             51 BANK0      3     1      2
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _secondsAppTimer                                      9     6      3   10910
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_HangPhoneCall                                    0     0      0    2647
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _GetCallerNumber                                      2     0      2    5331
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   70348
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   15573
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   11578
                                             48 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _StringCompare                                       11     5      6    1792
                                             37 BANK0     11     5      6
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   14664
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8643
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13894
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   41683
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   20878
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   20805
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (6) _Uart_WriteConstString                                3     1      2    2647
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (7) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (7) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                          10     4      6    4563
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    6931
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    6931
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2669
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) _Led_SetLedStatus                                     2     1      1     852
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _Eeprom_Read
           _I2cSlv_QueryI2cData
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_GetTimerStatus
               _GetElapsedTime
                 _GetOsTickCounter
             _OsTmr_StartTimer
               _GetOsTickCounter
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _Led_SetLedStatus
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _Eeprom_Read
           _I2cSlv_QueryI2cData
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_GetTimerStatus
               _GetElapsedTime
                 _GetOsTickCounter
             _OsTmr_StartTimer
               _GetOsTickCounter
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _Led_SetLedStatus
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      2     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      4      AC      14       89.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     98E       8        0.0%
DATA                 0      0     CAE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 20 10:03:07 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 53A4  
                              _USB_SD_Ptr FC35                 __size_of_Mdm_SetSmsFormat 0050  
                    __size_of_TurnOnModem 0046                           ??_UpdateSchFlag 0019  
                      _Mcu_StartSystemPll 612A               Mdm_SetSmsFormat@UartMessage 0084  
                   ?_LedPulseStateMachine 008A                              ___awdiv@sign 0082  
                  I2c_ReadData@ReadPacket 0080                                        bsr 000FE0  
                  ??_LedBlinkStateMachine 008C                             _USBDeviceInit 2180  
                     ___wmul@multiplicand 007F                          i1___wmul@product 001D  
                      __size_of_CDCInitEP 006C                        i2GenerateEvt@Event 0001  
                InitSchedTimer@TmrBConfig 00A4                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0083      USER_USB_CALLBACK_EVENT_HANDLER@event 0089  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B                    I2c_ReadData@ReadStatus 0031  
                                     l202 209C                                       l203 20A4  
                                     l205 20EC                                       l206 2112  
                                     l208 211A                                       l160 1FE0  
                                     l209 213A                                       l161 1EB6  
                                     l162 201E                                       l170 1F7E  
                                     l171 1F94                                       l163 1EC2  
                                     l315 442C                                       l323 43F8  
                                     l164 1F02                                       l316 43A2  
                                     l420 49E0                                       l500 4890  
                                     l173 1F98                                       l325 4412  
                                     l421 4A00                                       l237 6136  
                                     l174 1FA0                                       l166 1F10  
                                     l318 43AC                                       l422 4A0C  
             __end_of_USBStdGetDscHandler 2CE2                                       l510 4862  
                                     l502 4822                                       l175 1FAC  
                                     l167 1F38                                       l319 43D2  
                                     l423 4A18                                       l511 4852  
                                     l503 4812                                       l192 2144  
                                     l176 1FC2                                       l416 4A2C  
                                     l424 4A24                                       l512 4876  
                                     l504 4838                                       l520 57B8  
                                     l193 2024                                       l169 1F4A  
                                     l417 49D2                                       l441 17EC  
                                     l513 4856                                       l505 4816  
                                     l521 5784                                       l194 217C  
                                     l418 4A5A                                       l442 15F4  
                                     l514 485C                                       l506 481C  
                                     l530 31C2                                       l195 2030  
                                     l179 1FCE                                       l419 49DA  
                                     l523 579E                                       l531 3228  
                                     l196 2070                                       l700 5A18  
                                     l444 163C                                       l532 31EE  
                                     l445 1684                                       l541 60F4  
                                     l198 207E                                       l446 16CC  
                                     l199 2092                                       l631 29F8  
                                     l447 1714                                       l448 175C  
                                     l528 322E                                       l633 2A70  
                                     l625 2984                                       l449 17A4  
                                     l529 321A                                       l538 60F8  
                                     l546 3CA4                                       l651 5708  
                                     l707 5B7E                                       l627 29A8  
                                     l715 5AF2                                       l539 60F0  
                                     l547 3CC0                                       l660 572C  
                                     l652 5702                                       l716 5AC8  
                                     l709 5B98                                       l629 29D0  
                                     l718 5AE0                                       l639 611C  
                                     l832 5EB8                                       l844 3D78  
                                     l668 0C44                                       _BDT 000400  
                                     l790 6152                                       l855 4E06  
                                     l775 2E04                                       l864 4B5E  
                                     l856 4DAC                                       l857 4E20  
                                     l698 59FC                                       l858 4DDC  
                                     l867 4B70                                       l982 255A  
                                     l983 242E                                       l985 2452  
                                     l987 246C                                       l988 24A0  
                                     l989 2512                                       l998 2536  
                 secondsAppTimer@isCyclic 008C                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                        ?_blinkForSeconds 0093                   __end_of_HighPriorityIsr 42F6  
                          ??_Mdm_MainTask 00AA                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 5D40                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1BAA  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CE  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 5ABC  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 242C  
           ??_Tmr_RegisterTmr2IsrCallback 007F                                      l1010 58A2  
         InitGprsNetwork@GprsNetInitState 01EC                                      l1100 1B1A  
                                    l1101 1B66                                      l1013 58BA  
                                    l1110 565A                               RiSm@Counter 02E0  
                                    l1031 392E                                      l1111 566E  
                                    l1032 3968                                      l1033 398E  
                                    l1009 58D4                                      l1121 56C6  
                                    l1027 39C6                                      l1035 39AE  
                                    l2003 5186                                      l1107 5680  
                                    l1220 0DE8                                      l1028 391E  
                                    l1052 1E88                                      l1060 1E5A  
                                    l1108 5644                                      l1221 0E22  
                                    l1053 1DA2                                      l2005 518C  
                                    l1222 0E96                                      l1070 2B96  
                                    l1223 0E5E                                      l1071 2A8E  
                                    l1055 1EA2                                      l2104 5E4C  
                                    l1216 1078                                      l1056 1DD4  
                                    l1152 5FF4                                      l1136 5FD0  
                                    l2105 5E3A                                      l1233 1010  
                                    l1225 0F3E                                      l1217 0DD0  
                                    l2113 5534                                      l1401 543E  
                                    l1250 05F4                                      l1234 1054  
                                    l1226 0F78                                      l1074 2AAA  
                                    l1058 1E24                                      l2114 54FE  
                                    l1402 53FE                                      l2107 5E40  
                                    l1219 10B0                                      l1227 0FB8  
                                    l1075 2AC2                                      l2211 55E2  
                                    l1091 1B80                                      l2060 269E  
                                    l2108 5E46                                      l1252 0AB6  
                                    l1260 07F2                                      l1228 0FBC  
                                    l2212 55B8                                      l1092 19FE  
                                    l1156 5CCA                                      l2116 5510  
                                    l1404 5438                                      l2061 2580  
                                    l1261 082C                                      l1253 060C  
                                    l1229 1000                                      l2213 55DE  
                                    l2117 5522                                      l2062 26B4  
                                    l1270 096E                                      l1262 0856  
                                    l1254 0646                                      l1238 106E  
                                    l1078 2B34                                      l1414 5AB6  
                                    l2063 25A8                                      l1263 0890  
                                    l1255 0680                                      l1095 1A1A  
                                    l2064 262C                                      l2224 5CFE  
                                    l1264 08CA                                      l1256 06BA  
                                    l1096 1AD0                                      l1440 379C  
                                    l3040 60C0                                      l2073 32EE  
                                    l2225 5CEA                                      l1249 0A54  
                                    l1265 090E                                      l1257 073E  
                                    l1097 1AF4                                      l1409 5B70  
                                    l1601 21CA                                      l2074 3236  
                                    l2090 449E                                      l2218 5176  
                                    l1282 0A42                                      l1274 097E  
                                    l1258 06F6                                      l1442 37FA  
                                    l3050 42FE                                      l2075 330A  
                                    l2083 44C2                                      l2091 44AC  
                                    l2219 5136                                      l1283 0A4A  
                                    l1275 09AA                                      l1419 60E0  
                                    l1443 380E                                      l2403 041E  
                                    l1603 21F2                                      l1291 585C  
                                    l1380 3EA6                                      l2076 3254  
                                    l2084 4454                                      l3052 433A  
                                    l2412 0524                                      l1700 3620  
                                    l1620 1C20                                      l1612 1BD6  
                                    l1381 3EC8                                      l3133 556C  
                                    l2085 44EA                                      l1277 09C4  
                                    l1269 092A                                      l1437 3834  
                                    l1445 382C                                      l3053 437C  
                                    l2413 0570                                      l2405 045E  
                                    l1605 2232                                      l1621 1C2C  
                                    l1613 1BCC                                      l1390 3F2A  
                                    l3134 5564                                      l2078 32C4  
                                    l2086 4464                                      l1278 0A32  
                                    l1438 377E                                      l3046 5994  
                                    l2406 0578                                      l2430 10DE  
                                    l1710 2E64                                      l1630 1CC0  
                                    l1614 1BCA                                      l2182 4BFC  
                                    l1391 3F36                                      l1383 3EEA  
                                    l2087 4476                                      l1439 384A  
                                    l3143 59CA                                      l1703 369C  
                                    l1711 2E3E                                      l1623 1C54  
                                    l2183 4B82                                      l3080 4D50  
                                    l2088 4490                                      l3144 59C2  
                                    l3320 185C                                      l2408 04B4  
                                    l3304 5B0C                                      l2432 10FA  
                                    l1704 3662                                      l1640 593E  
                                    l1288 588E                                      l2096 3AA4  
                                    l3081 4D44                                      l3137 558C  
                                    l3401 5F38                                      l2409 0478  
                                    l3305 5B06                                      l2441 114E  
                                    l1713 2EDC                                      l1641 594E  
                                    l1633 1CE6                                      l1625 1C6A  
                                    l1617 1BF2                                      l2097 39EC  
                                    l2185 4BE8                                      l1386 3EF2  
                                    l3138 5596                                      l3330 18D8  
                                    l3322 1874                                      l1714 2EC2  
                                    l1730 2CCA                                      l1722 336A  
                                    l1810 350E                                      l1626 1C76  
                                    l1618 1C02                                      l1379 3F44  
                                    l3147 59E2                                      l3331 18E8  
                                    l2371 0152                                      l3163 5DF0  
                                    l2427 131E                                      l2443 128E  
                                    l1731 2BC6                                      l1811 3522  
                                    l1635 1D0A                                      l1627 1CA0  
                                    l1619 1C0A                                      l2099 39FA  
                                    l1388 3F0E                                      l3084 4D84  
                                    l3148 59EC                                      l3340 19E0  
                                    l3324 18C8                                      l2372 01E2  
                                    l2380 01D0                                      l3164 5DDE  
                                    l2428 10B8                                      l1900 41C0  
                                    l1724 33DE                                      l1812 3528  
                                    l1628 1CAC                                      l2452 61C0  
              USBConfigureEndpoint@handle 0083                                      l3085 4D92  
                                    l1645 4044                                      l3333 1902  
                                    l3413 5BE8                                      l2445 12F8  
                                    l2437 110E                                      l1733 2BDA  
                                    l1805 3588                                      l3157 57FE  
                                    l1637 1D28                                      l2622 4AEA  
                                    l3406 607C                                      l2390 0304  
                                    l2374 01AE                                      l1902 41D8  
                                    l1822 137E                                      l1734 2C62  
                                    l1750 412C                                      l1814 352E  
                                    l1806 34F8                                      l1670 4726  
                                    l3158 57DC                                      l2623 4A9A  
                                    l1647 406E                                      l2367 05D2  
                                    l2391 02C6                                      l2375 019C  
                                    l2447 1318                                      l2439 112E  
                                    l1903 41E6                                      l1831 14EA  
                                    l1823 1384                                      l1743 416E  
                                    l1815 354C                                      l2455 61BA  
                                    l2551 2FB8                                      l2632 4578  
                                    l2616 4ACE                                      l2624 4AAE  
                                    l3344 6216                                      l3336 1914  
                                    l2368 00E2                                      l1664 3AFE  
                                    l1904 4204                                      l1736 2C6A  
                                    l1744 40F4                                      l1816 3568  
                                    l1808 3502                                      l1672 4740  
                                    l2472 602E                                      l2552 2FA8  
                                    l2633 4500                                      l2625 4AC6  
                                    l2617 4A68                                      l1649 40CA  
                                    l1921 4932                                      l3337 1980  
                                    l3417 61FE                                      l3361 3440  
                                    l2385 0392                                      l1905 421C  
                                    l1841 1570                                      l1833 14B2  
                                    l1825 13F6                                      l1737 2CBA  
                                    l1809 3508                                      l1681 30C6  
                                    l2473 6020                                      l2650 5828  
                                    l3370 34DE                                      l2386 0326  
                                    l3290 524A                                      l1834 14D0  
                                    l1682 306E                                      l2546 3034  
                                    l2554 2FF8                                      l2707 5306  
                                    l2635 4546                                      l3339 19A6  
                                    l2387 02B4                                      l1843 15C6  
                                    l1827 143E                                      l1739 2CC2  
                                    l1747 4184                                      l1771 49BA  
                                    l2475 6028                                      l2547 2F40  
                                    l2708 531A                                      l2652 583A  
                                    l2900 4F02                                      l1924 48E0  
                                    l3364 34A0                                      l2388 0250  
                                    l3292 526A                                      l1676 47DA  
                                    l1836 1532                                      l1828 1440  
                                    l1748 4106                                      l1772 49B4  
                                    l2637 458E                                      l1925 490C  
                                    l3365 3458                                      l2397 0402  
                                    l3293 5260                                      l1837 153E  
                                    l1829 145C                                      l1749 410C  
                                    l1757 5926                                      l1765 5C20  
                                    l2557 3030                                      l2549 2F5A  
                                    l2638 454E                                      l2646 5840  
                                    l1926 48E6                                      l3366 3470  
                                    l3358 3418                                      l2398 03D2  
                                    l1790 3F9A                                      l1782 5066  
                                    l1838 15BA                                      l1686 30F0  
                                    l1758 5924                                      l1766 5C1E  
                                    l2639 4560                                      l2647 581A  
                                    l3367 3480                                      l3359 3412  
                                    l1951 26EA                                      l1695 35EC  
                                    l1791 3FA0                                      l2672 5C58  
                                    l2584 54E8                                      l1960 2754  
                                    l1792 401C                                      l1784 50B4  
                                    l2665 45F6                                      l2649 5854  
                                    l3289 5250                                      l1953 271E  
                                    l1697 35F6                                      l1793 3FE2  
                                    l2586 54F4                                      l3298 5D86  
                                    l2690 38A4                                      l2682 385A  
                                    l2667 4622                                      l3299 5D7C  
                                    l2683 3874                                      l1963 27CE  
                                    l1699 365A                                      l1795 4002  
                                    l2668 4632                                      l2860 36A6  
                                    l3396 5E2A                                      l2684 38D6  
                                    l1964 2796                                      l1956 2730  
                                    l2693 38F6                                      l1957 2734  
                                    l1949 26DC                                      l2862 36EE  
                                    l1990 5F90                                      l2687 387A  
                                    l1967 27E8                                      l1959 278C  
              __size_of_Mdm_IsSmsReceived 0024                                      l1968 27EC  
                                    l1992 5F96                                _Led1OutSts 01FB  
                                    l2881 4CDE                                      l2865 373E  
                                    l2689 38C2                                      l2882 4CD6  
                                    l2866 3700                                      l2891 4EB0  
                                    l2859 36AC                                      l1899 4226  
                                    l2892 4EBC                                      l2868 3772  
                                    l2885 4CFE                                      l1997 5192  
                                    l1989 5FA0                                      l2886 4D08  
                                    l2878 4CB0                                      l2894 4ED2  
                                    l2887 4D16                                      l2879 4CC0  
                                    l2895 4ECA                                      l2898 4EEA  
                                    l2899 4EF4                                      STR_1 FFE5  
                                    STR_2 FF74                                      STR_3 FFDE  
                                    STR_4 FFC1                                      STR_5 FFCD  
                                    STR_6 FFEF                                      STR_7 FFEA  
                                    STR_8 FE96                                      STR_9 FECA  
                              _Led2OutSts 01F9                                _Led3OutSts 01F7  
                   ??_USBCtrlTrfTxService 007D                                      _UCFG 000F39  
                                    u8355 578E                                      u8356 5790  
                                    _UEP0 000F26                                      u8365 579A  
                                    _UEP1 000F27                                      u8366 579C  
                                    u8375 57A8                                      u8376 57AA  
                                    u8385 57B4                                      u8386 57B6  
                                    _UEIE 000F37                  __size_of_Uart_Uart1RxIsr 0010  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u9825 5EFA                                      u9826 5EFC  
                                    u9835 5F06                                      u9836 5F08  
                                    u9845 5F12                                      u9846 5F14  
                              _AlarmEvent 01F6                            ?_StopCondition 0001  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 031C  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 637E  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0032               Led_SetLedBlinkTime@OnTimeMs 007D  
  USBStdFeatureReqHandler@current_ep_data 0094                                      _pDst 02D4  
                    _NewStringMdmTerminal 003A                                      _atoi 36A4  
                                    _main 6340                           ??_Mdm_IsRinging 0081  
                                    _itoa 596E                          ?_SetUartBaudRate 0096  
                 __end_of_GetCallerNumber 5CD6                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0314  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 42F6                                      _xtoi 3402  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 6386  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 49CC  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 5AFC                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
                     __end_of_Eeprom_Read 54F8   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 6232  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
              __end_of_USBCheckStdRequest 35CC                           _Rtcm_SystemDate 0300  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 62D4  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 008E                            _GetElapsedTime 3D14  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091                       StringCopy@SourceStr 007D  
             __end_of_OsAlrm_ClearOsAlarm 53FC                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
                     __size_of_I2cDummyTx 001C                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 5B78  
                     ??_Rtcc_GetRtccValue 007D                           __end_of_Welcome FDB8  
                       ?_UpdateOsCounters 0001                   Uart_ClearRxBuffer@Index 007D  
                              _GetSmsText 00DD                                     l12014 5DDE  
                                   l12052 35F6                                     l13032 373A  
                                   l11286 6136                                     l12248 3362  
                                   l14302 1D9A                                     l14324 1E54  
                                   l13436 49E6                                     l13198 4632  
                                   l14176 322E                                     l14522 0FB0  
                                   l13562 5D1E                                     l13618 21C2  
                                   l13646 222A                                     l12882 57DC  
                                   l15286 4E30                                     l14840 1CB8  
                                   l15650 51DC                                     l15298 2CEC  
                                   l14688 09A4                                     l15648 51AC  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 4D20  
                                   STR_10 FF4A                                     STR_11 FF58  
                                   STR_12 FF9C                                     STR_20 FF3C  
                                   STR_13 FF66                                     STR_21 FE6C  
                                   STR_30 FFA9                                     STR_14 FEB5  
                                   STR_31 FFD7                                     STR_15 FEF3  
                                   STR_23 FEDF                                     STR_24 FFF4  
                                   STR_16 FF2B                                     STR_25 FFF4  
                                   STR_17 FF82                                     STR_26 FE93  
                                   STR_18 FF8F                                     STR_27 FF1A  
                                   STR_28 FFB5                           __end_of___awmod 4F0C  
                                   STR_29 FF07         __size_of_USBCtrlEPServiceComplete 0100  
                         __end_of___lldiv 4DA4                                     ?_utoa 008A  
                                   u11210 59CE                                     u11130 1554  
                                   u12120 189E                                     u11250 5BA6  
                                   u10610 3648                                     u11180 5570  
                                   u12140 18AE                           ___awdiv@divisor 007F  
                                   u10630 368A                                     u12320 4CE2  
                                   u10617 363E                                     u11530 5F34  
                                   u12090 1864                    __end_of_USBDeviceTasks 1D32  
                                   u11620 5BCC                                     u13300 5292  
                                   u10637 3680                                     u11550 5E1A  
                                   u10910 2CAE                                     u12415 5752  
                                   ?_xtoi 0083                                     u10680 56FE  
                                   u11720 29CC                                     u11640 5BD8  
                                   u13240 04BE                                     u10840 3396  
                                   u11490 4D54                                     u13307 5288  
                                   u13500 4424                                     u12380 4ED6  
                                   u11900 48BC                                     u12605 0C98  
                                   u10917 2CA4                                     u12615 0D22  
                                   u12535 6258                                     u12536 625A  
                                   u13360 390E                                     u10880 2C2C  
                                   u12720 21E6                                     u15008 2DB8  
                                   u11665 6298                                     u15009 2DE6  
                                   u11666 629A                                     u11770 5A26  
                                   u10890 2C5C                                     u12555 0AF4  
                                   u13380 4A78                                     u12565 0B14  
                                   u13525 6242                                     u12670 55EE  
                                   u13526 6246                                     u12750 228E  
                                   u13455 4F70                                     u12575 0B9E  
                                   u10887 2C22                                     u12680 516E  
                                   u10897 2C52                                     u13465 62AC  
                                   u13490 440A                                     u13570 24C8  
                                   u14450 1D2E                                     u13466 62AE  
               ?_USBCtrlEPServiceComplete 0001                                     u12595 0C78  
                                   u13651 1D4C                                     u14611 5118  
                                   u13740 1EA8                                     u14540 277C  
                                   u13661 1D5E                                     u13590 24DC  
                                   u12687 5164                                     u13671 1D70  
                                   u14560 27BE                                     u14570 27D6  
                                   u14547 2772                                     u14567 27B4  
                                   u14841 4BDA                                     u14851 4BF2  
                                   u14968 4E66                                     u14969 4E94  
                         __end_of___lwdiv 55A0                           __end_of___lwmod 59F6  
               TurnOnModem@TurnOnMdmState 0029                        ??_UpdateOsCounters 0019  
                                   i1l742 22EE                                     i1l747 242A  
                                   i2l680 3C3C                                     i2l681 3B8C  
                                   i2l690 3BD6                                     i2l682 3B9A  
                                   i2l686 3BBC                                     i2l688 3C2E  
                                   i2l689 3BF6                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B3  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E8  
                                   _USTAT 000F64                   __end_of_LedStateMachine 44F0  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C2  
         __end_of_USBCtrlEPAllowDataStage 4774                             _StringCompare 55A0  
                                   _sd000 FE68                                     _sd001 FE21  
                                   _sd002 FDFB            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3AB6  
                             _ApnLenLocal 01F0                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_initFsm 585A  
                         __end_of_isalpha 5E34                           __end_of_isdigit 60C8  
                                   atoi@a 0088                                     atoi@s 0083  
                             _ClearBuffer 5CD6                           __end_of_isspace 5F40  
             I2cSlv_QueryI2cData@RxBuffer 00A5                I2c_WriteData@I2cWriteState 0038  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 6084                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 5F8E  
               __end_of_Rtcc_GetRtccValue 4A60               I2cSlv_QueryI2cData@TxBuffer 00A2  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                         __end_of_CDCInitEP 4FEA  
                                   utoa@c 0092                             ??_SetBaudRate 009E  
                                   utoa@v 0090                                     status 000FD8  
                         _I2cSlv_MainTask 53FC                 Rtcc_GetRtccValue@RetValue 007F  
                     i1___wmul@multiplier 0019                                     wtemp6 0043  
                         __end_of_sprintf 391C                           __end_of_tolower 6202  
                     __end_of_Mcu_Int0Isr 63AE                       __end_of_Mcu_Int1Isr 63AA  
                                   xtoi@c 008A                                     xtoi@s 0083  
                         __end_of_toupper 621A                    __end_of_GetElapsedTime 3DDC  
                   __end_of_UartSetConfig 52F4                    __size_of_initGprsModem 0090  
             Rtcc_SetRtccValue@RtccPtrVal 0088                  Eeprom_Read@MemoryAddress 00AC  
                   __end_of_Term_MainTask 61D2                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 2BB4                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 5EEC  
                          _InitSchedTimer 5E64                           __initialization 280C  
                        __end_of_MdmCntSm 4448                      __end_of_I2c_ReadData 2180  
                 Rtcc_RtcConfig@RtcConfig 007E                      __end_of_I2cSendMsgSm 3F68  
                 LedStateMachine@LedPulse 0095                                _MyApp_Task 2F2C  
                            __end_of_atoi 377C                              __end_of_main 634C  
                     StringCompare@Result 008D                              __end_of_itoa 59B2  
                  ??_LedPulseStateMachine 008D                     _control_signal_bitmap 01E0  
                            __end_of_utoa 43A0                              __end_of_xtoi 34E8  
                __end_of_Rtcm_SetRtccDate 54A4                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 007D                          __end_of_ReadByte 636A  
            __size_of_I2cSlv_QueryI2cData 00D2                      Term_MainSm@TermDelay 03D0  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FE56  
               __size_of_USBCtrlEPService 0094                                    ??_atoi 0085  
                                  ??_main 00B0              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 48A2  
                              _ReceiveEvt 5E92          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                        _Mdm_RequestSmsData 62F4  
                          ?_StringCompare 0085                          __end_of_Terminal 05EC  
                    initFsm@isInitialized 0103                             ?_SetAckStatus 0001  
                       ?_Led_SetLedStatus 007D                                _OsTmr_Wait 4DA4  
                            _cdc_mem_type 01E1                        ??_Mcu_ConfigExtInt 007D  
                       CheckModem@Timeout 03F1                           ReceiveEvt@Event 007D  
                             ?_CheckModem 0001                          _CDCDataOutHandle 00BC  
                         ??_StopCondition 007D                        ??_Led_SetLedStatus 007E  
                        ___awdiv@dividend 007D        __end_of_Uart_MdmGsmGprsReadService 3C4C  
              _Uart_MdmGsmGprsReadService 3B82                __end_of_UsbDevice_MainTask 5FB2  
                         getsUSBUSART@len 0086                       ?_Mdm_RequestSmsData 0001  
                   __end_of_UartWriteByte 612A                          ??_LowPriorityIsr 0068  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
                             _Eeprom_Read 54A4        Irq_InitIntController@IntPriorityEn 007F  
                   __size_of_CDCTxService 0146                                    i1l1409 5C9A  
                             _GenerateEvt 621A                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
               Uart_Uart1RxIsr@UartRxData 002C                             CDCTxService@i 0084  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                    _RPINR1 000EE7  
                              _TaskNumber FC3D                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                        ?_GetCallerNumber 0083                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                               _ConnTimeout 02F5  
                    Mdm_IsSmsReceived@Ret 0081                  __end_of_Rtcc_AlarmConfig 5056  
                         ??_Mcu_SetWdgSts 007D                    __end_of_InitSchedTimer 5E92  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0081  
                          _EnableReceiver 639E                                _UartConfig 0326  
                    __end_of_Mdm_MainTask 5692                         ??_Uart_Uart1RxIsr 0007  
                       _shortPacketStatus 00CD                             ??_Term_MainSm 00A7  
                                  _Relay1 01DB                                    _Relay2 01DA  
                                  _Relay3 01D9                                    _Relay4 01D8  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                __end_of_MdmHttp_MainTask 58A0                                    _SmsLen 00D4  
                         USBDeviceTasks@i 0098               USBStdFeatureReqHandler@pUEP 0092  
                USBTransferOnePacket@data 007E                USBCtrlTrfInHandler@lastDTS 007E  
                           ??_RtccIrqInit 007D                  ??_OsAlrm_ProcessOsAlarms 0060  
                         ??_USBDeviceInit 0085                       __end_of_SetBaudRate 577E  
                                  ___lmul 52F4                      _I2cSlv_ReceiveI2cMsg 5A7C  
                      TurnOnModem@Counter 02DA                              ?_putUSBUSART 0083  
                                  ___wmul 5F40                                 ??___awdiv 0081  
          GetElapsedTime@CurrentTimestamp 0091                            __CFG_STVREN$ON 000000  
                        _Mdm_SetSmsFormat 5692                                 ??___awmod 0081  
                      __size_of_SendSmsSm 01B8                         ?_Rtcm_GetRtccDate 0081  
                     _Led_SetLedBlinkTime 54F8                                 ??___lldiv 0091  
                    __end_of_getsUSBUSART 4938                      ??_Mdm_RequestSmsData 0080  
                               ??___lwdiv 0087                    Tmr_TmrBPrSet@IntFreqHz 0096  
                               ??___lwmod 0081                         _USBEnableEndpoint 592A  
         __size_of_USBStdGetStatusHandler 00B2                             ??_Rtcc_RtcIsr 0001  
                            ReadByte@Byte 007D                                    _memcpy 57CA  
                  __size_of_HttpGetMethod 04D0                                    _memset 5DD4  
                                  clear_0 28AC                                    clear_1 28BE  
                                  clear_2 28CA                                    clear_3 28D6  
                                  clear_4 28E2                                    clear_5 28EE  
                                  clear_6 28FA                                    clear_7 2906  
                                  clear_8 2912                                    clear_9 291E  
                        ___awdiv@quotient 0083                        ??_Rtcm_GetRtccDate 0089  
                         ___awmod@divisor 007F                        _ExtInt0IsrCallback 02E4  
                       ?_OsTmr_StartTimer 0081                                _PostMethod 01ED  
                         ___awmod@counter 0081                       UartWriteByte@Module 007E  
                     GetSmsSm@GetSmsState 01F3                        ?_USBEnableEndpoint 0085  
                                  _strcat 5240                                    _strcpy 5D72  
                                  _strlen 5AFC                                    _strtol 181C  
                        ClearBuffer@Index 0081             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 5BF2                  HttpGetMethod@UartMessage 0100  
                               ??_initFsm 00B0                             _initGprsModem 4A60  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                       ModemEvtParser@F9111 03BD  
                     ModemEvtParser@F9113 04D0                       ModemEvtParser@F9107 03C7  
                     ModemEvtParser@F9109 03C2                              _CDCTxService 26C6  
                     MdmCntSm@MdmCntState 002E                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC34  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 04B8                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 6396  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 0039  
                 __end_of_I2cSlv_MainTask 5450                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 63AA  
                             _Mcu_Int1Isr 63A6                      ?_Led_SetLedBlinkTime 007D  
                               ??_sprintf 0083                                 ??_tolower 007D  
                  __size_of_ScheduleTasks 0126                               _CtrlTrfData 000438  
                               ??_toupper 007D                       ModemEvtParser@Match 00A8  
                    _controlTransferState 00CC                     __end_ofi1_GenerateEvt 6274  
                 Eeprom_Read@SlaveAddress 00AD                     __end_of_Rtcm_MainTask 4C0E  
              __size_of_Rtcc_GetRtccValue 0094                        _ExtInt1IsrCallback 02E2  
                              __accesstop 0060                             ?_Wdg_MainTask 0001  
                 __end_of__initialization 293C                        Eeprom_Read@ReadSts 00AE  
                  Tmr_TmrBPrSet@Prescaler 0098                              __pbssBIGRAMl 0AC8  
                  __end_of_EnableReceiver 63A2                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 0182               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                             _ReadAddress 01F5                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 5730  
         I2cSlv_QueryI2cData@TimeoutTimer 033B                      Terminal@FormatOption 02ED  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 5122  
                          __pcstackBANK10 0A00                     I2cDummyTx@DummyBuffer 01FD  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
                     initFsm@currentState 01D3  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02DE                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 596E  
                             _InitNetwork 00DB                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE6C  
                           __end_of_sd001 FE3F                             __end_of_sd002 FE21  
                            __pidataBANK1 63AE                              __pidataBANK2 6332  
                            __pidataBANK3 5A3A                              __pidataBANK4 61D2  
                            __pidataBANK5 55F2                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 59F6  
                     __size_of_CheckModem 0152                __end_of_Uart_ClearRxBuffer 5D40  
           __size_of_USBConfigureEndpoint 0098                  __size_of_InitializeTasks 0074  
                      __end_of_I2cDummyTx 619E               __end_of_USBCtrlTrfInHandler 402A  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 0085  
                    StringCompare@String2 0087                        ??_UartSetConfigLow 007D  
                     __end_of_Term_MainSm 135A                 initGprsModem@currentState 01D5  
                   LedStateMachine@LedOut 0091                     LedStateMachine@LedSts 008F  
                      LedStateMachine@Led 0099                                 ?i1___wmul 0019  
                          ?_initGprsModem 0001                       __end_of_RtccIrqInit 625E  
                   __size_of_Led_MainTask 00CC                           ??_StringCompare 008B  
           I2cSlv_QueryI2cData@I2cOpState 01E7                               ?_ReceiveEvt 007D  
                             _NewSmsEvent 0040                                _SystemInit 5DA4  
                              _cdc_notice 0459                     __end_of_Tmr_TmrBPrSet 3234  
                     __end_of_Rtcc_RtcIsr 63A6                                _cdc_rx_len 00C7  
                       __end_of_MsgFormat FD2F                                _cdc_tx_len 00C5  
                     Terminal@UsbRxBuffer 0A00                               ?_OsTmr_Wait 009B  
                   ??_Led_SetLedBlinkTime 0081                       Terminal@UsbTxBuffer 0200  
                               ?_GetSmsSm 0001               __end_ofi1_I2cSlv_SendI2cMsg 5CA0  
                ??_USBCtrlTrfSetupHandler 0097                   _USBTicksSinceSuspendEnd 01E2  
                          ClearBuffer@Len 007F                           _secondsAppTimer 4594  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 5EEC  
                  _USBStdGetStatusHandler 40E8                         __end_of_SendSmsSm 1BAA  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01EF  
                          _Rtcc_RtcConfig 4636                                __pbssBANK0 00B0  
                              __pbssBANK1 01C9                                __pbssBANK2 02C8  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                             _HttpGetMethod 05EC  
                 ?_Pm_DsReleasePinControl 0001                               _MessageText 0572  
                          ??_Wdg_MainTask 007E                     __end_ofi2_GenerateEvt 628A  
                __end_of_Uart_WriteString 5BB6                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 601E  
                             _SetBaudRate 5730                 initGprsModem@modemCounter 03BB  
             __size_of_USBWakeFromSuspend 003A                SendSmsSm@SendSms_NextState 01F1  
                             _pBDTEntryIn 00B6          UartTxBufferStatus@TxBufferStatus 007F  
        __end_of_USBCtrlEPServiceComplete 3146                                 ?_TmrBInit 007D  
                           _CheckTxStatus 636A                             ??_TurnOnModem 0080  
                 __size_of_Tmr_TmrBConfig 00C8               __size_of_USBCheckCDCRequest 00B0  
                Uart_WriteStringLen@Index 0083                         ?_GetOsTickCounter 007D  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 007D  
                     MyApp_Task@cmpString 0104                                 ?_Terminal 0001  
                                 ?___lmul 007D                              _Led_MainTask 39EA  
                          _Rtcc_UnlockRtc 62D4                              _I2cBusStatus 01E9  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 2CE2                 Uart_InitUartModule@Module 00A1  
                   __end_of_I2c_WriteData 2022                        ??_GetOsTickCounter 0081  
                                 ?_memcpy 007D                                   ?_memset 007D  
                          ___lmul@product 0085                                _device_dsc FE56  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 4938  
                   __end_of_UpdateSchFlag 6182                              _EepromBuffer 04A9  
                              _ep_data_in 02D1                           _I2cWriteDataEvt 00D9  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 10B6                                   ?_strcpy 007D  
                                 ?_strlen 007D                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 2F2C  
                       __end_of_WriteByte 6360                        _USBCheckStdRequest 34E8  
                       _configDescriptor1 FDB8                       Wdg_MainTask@Options 0001  
                             _PhoneNumber 0495               __end_of_USBCtrlTrfTxService 36A4  
                     _USBStdSetCfgHandler 331C                         triggerRelay@F8993 03CE  
                 __size_of_ConfigureModem 00CE                    I2cSlv_QueryI2cData@Ret 01E6  
                         __CFG_WDTPS$2048 000000                              _I2cSetConfig 5EC0  
                                 _SPBRGH1 000F7F                                   _SPBRGH2 000F7D  
                  __end_of_Rtcc_RtcConfig 46D6                                   _SSP2ADD 000F74  
                              ??_GetSmsSm 0087                                   _SSP2BUF 000F75  
                            _I2c_ReadData 2022                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm 3EA4  
                        ?_I2cSlv_MainTask 0001                        GsmGprsTerminal@SMS 01DE  
          __end_of_Pm_DsReleasePinControl 638C                       ?_USBCheckStdRequest 0001  
                   Mdm_SetSmsFormat@Index 0083              __size_of_USBStdGetDscHandler 012E  
                              ??_MdmCntSm 0081                       __size_of_MyApp_Task 011A  
                                 _UIEbits 000F36                            ?_HttpGetMethod 009B  
                            ?_ClearBuffer 007D                      _MdmOnOffPulseRequest 00E2  
                __size_of_blinkForSeconds 003A                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 002A                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FC                       _I2cSlv_QueryI2cData 377C  
                                 _Led2Sts 01FA                                   _Led3Sts 01F8  
              __end_of_Sch_SchmIntService 6332                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 0090                             _cdc_trf_state 00C6  
                              ??_ReadByte 007D                       _Uart_InitUartModule 0ABC  
                   __end_of_Mdm_DrvMainFn 6392                    initEeprom@currentState 01D4  
                        _ComChecCompleted 002B                            ?_CheckTxStatus 0001  
             __size_of_Mcu_StartSystemPll 001E                                   _pCDCDst 02C8  
                   __end_of_Mdm_IsRinging 5FFA                     InitGprsNetwork@ApnLen 009D  
                                 _pCDCSrc 02CB                     __size_of_getsUSBUSART 0096  
                                 _RelayB1 01DD                                   _RelayB2 01DC  
                             ?_StringCopy 007D                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 007F  
                  ??_I2cSlv_ReceiveI2cMsg 0084           ??_USBIncrement1msInternalTimers 007D  
                          _I2cReadDataEvt 00D8                                 ?_isxdigit 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 4F7E  
                  __end_of_Rtcc_UnlockRtc 62E4                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 0085                      __end_of_SetAckStatus 629E  
                              _initEeprom 44F0                               _Term_MainSm 10B6  
 Uart_WriteConstString@ConstStringToWrite 0080                                   _Welcome FD2F  
              __size_of_USBEnableEndpoint 0044                            ?_ScheduleTasks 0001  
                              ??_Terminal 00A2                         _Sch_MainScheduler 6148  
                  ?_Uart_WriteConstString 0080                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 6248  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 4C9A  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 4E9A  
                                 ___lldiv 4D20                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                                   ___lwdiv 554C  
                       ??_USBStallHandler 007D                                   ___lwmod 59B2  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
                      ?_Sch_MainScheduler 0001                      ?_I2cSlv_QueryI2cData 00A2  
                         ??_initGprsModem 0099                               _Rtcc_RtcIsr 63A2  
                    __size_of_putUSBUSART 0022                                   __pcinit 280C  
                      getsUSBUSART@buffer 0084                           __size_of_memcpy 0048  
                               _I2cComSts 00CF                       __end_of_TurnOnModem 58E6  
                         __size_of_memset 0030                   initEeprom@isInitialized 0102  
                               _I2cConfig 0351                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FDFB                                   __ramtop 0F00  
                             Terminal@Len 03AF                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 6340                                   __ptext1 5DA4  
                                 __ptext2 634C                                   __ptext3 6386  
                                 __ptext4 612A                                   __ptext5 619E  
                                 __ptext6 5EEC                                   __ptext7 5E64  
                                 __ptext8 3C4C                                   __ptext9 3146  
                                 _inPipes 00B0                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 4636  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                                 _initFsm 5812                              ??_USBSuspend 0091  
                               _T2CONbits 000FCA                                   _isalpha 5E04  
                                 _isdigit 60A6                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00B0                               ?_SystemInit 0001  
                                 clear_10 292A                                   clear_11 2936  
                        ___awmod@dividend 007D                         ??_InitializeTasks 03FE  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 02EA  
     __end_of_Tmr_RegisterTmr2IsrCallback 6356               _Tmr_RegisterTmr2IsrCallback 634C  
                                 _isspace 5F16                              _Mdm_MainTask 5642  
                                 _isupper 6062               __size_of_InitModemInterface 0008  
                    HttpGetMethod@GetData 009B                    ?_Irq_InitIntController 007D  
                  Term_MainSm@FwkBuildStr 013A                           ?_Rtcc_RtcConfig 007E  
                  _OsAlrm_ProcessOsAlarms 22D6                              ??_CheckModem 009B  
                      __end_of_USB_CD_Ptr FC3D                       Mcu_SetWdgSts@WdgSts 007D  
                             _Tmr_Tmr2Isr 5FFA                                   _sprintf 384E  
                                 _tolower 61EA           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 6314                          _HttpGetDataLocal 03A2  
                __end_of_Mdm_SetSmsFormat 56E2                    Term_MainSm@FwkMajorStr 0132  
                          __pintcode_body 424A                                   _toupper 6202  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 293C                              _getsUSBUSART 48A2  
                            ?_Eeprom_Read 00A9                          ??_GetElapsedTime 0085  
                             _SmsTxtReady 00DC               ?_Uart_MdmGsmGprsReadService 0004  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F4             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC3B       Irq_InitIntController@PerInt_LowPInt 007E  
                                 memcpy@d 0084                                   memcpy@n 0081  
                                 memcpy@s 0086                       _pBDTEntryEP0OutNext 00BE  
                                 itoa@buf 0093                                   memset@c 007F  
                                 itoa@val 0095                                   memset@n 0081  
                  Term_MainSm@FwkMinorStr 0136                                   memset@p 0083  
                           __Lmediumconst FC34                            _ModemEvtParser 1D32  
                                 int_func 424A                                 i1u1504_28 600A  
                         _USB1msTickCount 0318           _dummy_encapsulated_cmd_response 0376  
                               i1u1475_20 22EC                                 i1u1479_28 240C  
                               i1u1479_29 2420                  ?_USBStdFeatureReqHandler 0001  
               __size_of_Mcu_ConfigExtInt 001A                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 6166                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 15EE  
                       _Rtcc_SetRtcStatus 6232                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 5D72                             StringCopy@Len 0081  
                       ?_MdmHttp_MainTask 0001                  I2cSlv_QueryI2cData@RxLen 00A7  
                 _USBCtrlEPAllowDataStage 46D6                        _UsbDevice_MainTask 5F8E  
                I2cSlv_QueryI2cData@TxLen 00A4                              _Mcu_ClearWdg 6392  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0085                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                     ??_I2cSlv_QueryI2cData 00A9  
                                 utoa@buf 008A                        ??_MdmHttp_MainTask 00A1  
                _USBCtrlEPServiceComplete 3046                                   utoa@val 008C  
                 HttpGetMethod@GetMOutSts 01EA                     i1___wmul@multiplicand 001B  
                      __end_of_CheckModem 257E                           _RtccIsrCallback 02E6  
        OsAlrm_ProcessOsAlarms@AlarmIndex 0021                        Terminal@EchoOption 02F3  
           __size_of_LedPulseStateMachine 00E8                                   strlen@s 007D  
              _USBStatusStageEnabledFlag1 00C8                _USBStatusStageEnabledFlag2 0027  
                   ??_Uart_InitUartModule 009F                      __end_of_Wdg_MainTask 6040  
                                 strtol@a 0094                                   strtol@c 0098  
                          _Rtcm_RtccAlarm 0308                                   strtol@s 0089  
                      USBEnableEndpoint@p 0086                       ?_UsbDevice_MainTask 0001  
                                 xtoi@val 0088                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                       ??_Rtcc_SetRtccValue 0086  
                     ??_Rtcc_SetRtcStatus 007D                          __CFG_DSBOREN$OFF 000000  
                        ?_InitGprsNetwork 009B                         _Mdm_HangPhoneCall 62B0  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 60EA  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 007F  
                        __CFG_CPUDIV$OSC1 000000                        ?_Mdm_HangPhoneCall 0001  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 02E8  
                        _HttpGetMethodSts 01EE                                 _TRISBbits 000F93  
                    SendSmsSm@UartMessage 0100                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0062                        _BothEP0OutUOWNsSet 01E3  
                         ??_HttpGetMethod 009D                              strtol@endptr 008B  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
               I2c_WriteData@I2cNextState 0037                 USBConfigureEndpoint@EPNum 0082  
              ?_USBCtrlEPAllowStatusStage 0001                    __end_of_ModemEvtParser 1EB4  
                        ??_InitSchedTimer 00A4       USER_USB_CALLBACK_EVENT_HANDLER@size 008D  
                               _USTATcopy 00D6                     __end_of_StopCondition 639A  
                __size_of_HighPriorityIsr 42EE                       ??_Mdm_HangPhoneCall 0083  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 036D  
                               _Led2Blink 0364                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 035B              __end_of_USBTransferOnePacket 40E8  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 0391  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 181C                 __end_of_Rtcc_SetRtcStatus 6248  
                               _Led2Pulse 038B                                 _Led3Pulse 0385  
                       _I2cSlv_SendI2cMsg 5B3A           SetBaudRate@DesiredI2cBusClockHz 0096  
                     Eeprom_Read@QuerySts 00AF                         ??_blinkForSeconds 0095  
                         ??_ScheduleTasks 04E8                            _Tmr_TmrBConfig 3C4C  
                 Tmr_TmrBPrSet@Postscaler 0099                         putUSBUSART@length 0085  
                 MdmHttp_MainTask@Options 0001                     __end_of_Mcu_SetWdgSts 62B0  
                       _OsAlrm_SetOsAlarm 3DDC                      Terminal@TermRxBuffer 0540  
                      ?_I2cSlv_SendI2cMsg 0080                       __size_of_SystemInit 0030  
                          _Tmr_TmrBIrqSet 577E                               ?_initEeprom 0001  
                     __CFG_MSSP7B_EN$MSK7 000000                               _TurnOnModem 58A0  
                               _ClipEvent 00DF                              ??_MyApp_Task 00B0  
                    Terminal@TermTxBuffer 0100                                 _GetMethod 00DA  
                  _USBCtrlTrfSetupHandler 4C0E                        ?_OsAlrm_SetOsAlarm 0083  
                __size_of_GetCallerNumber 0036                     __end_of_USBDeviceInit 22D6  
   __end_of_USBIncrement1msInternalTimers 6062    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 6040               __size_of_Mdm_RequestSmsData 0010  
                          __end_of___lmul 534C                            _CheckAckStatus 6374  
                          __end_of___wmul 5F68                       ??_I2cSlv_SendI2cMsg 0084  
               __end_of_Mdm_HangPhoneCall 62C2                    __size_of_UartWriteByte 0020  
                          __end_of_memcpy 5812                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002D                            __end_of_memset 5E04  
                      _UartTxBufferStatus 56E2                       ??_OsAlrm_SetOsAlarm 008B  
                        __CFG_DSWDTEN$OFF 000000                              ??_ReceiveEvt 007F  
                       _USBBusIsSuspended 01E4                                 _Mdm_SmsRx 0700  
                        ?_secondsAppTimer 008A                         ??_SetUartBaudRate 0098  
                 __end_of_Uart_Uart1RxIsr 6324                                 _MdmStatus 00D2  
                          __end_of_strcat 529C                            __end_of_strcpy 5DA4  
                          __end_of_strlen 5B3A                            __end_of_strtol 19F2  
                     start_initialization 280C                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 391C  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003D  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 5D0C  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0500                               _cdc_data_tx 07B6  
            __end_of_USBConfigureEndpoint 480C           __end_of_USBStdFeatureReqHandler 15EE  
                               _MsgFormat FC3F                        __end_of_MyApp_Task 3046  
                        _UpdateOsCounters 6304                           ?_ModemEvtParser 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3B82                 __end_of_I2cSlv_SendI2cMsg 5B78  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 49CC                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 62F4  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3D14                                 _SendSmsSm 19F2  
               __end_of_OsAlrm_SetOsAlarm 3EA4                    __end_of_Tmr_TmrBIrqSet 57CA  
                               _TaskTable 05A4                                 _RingEvent 00E0  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D5                         __size_of_ReadByte 000A  
                               _RtcConfig 03B7                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 529C  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 5EC0  
                  _pBDTEntryEP0OutCurrent 00C0                             _Term_MainTask 61B8  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                    __end_of_CheckAckStatus 637E  
                                ??___lmul 0085                             _isxdigit$6530 0081  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2BB4                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 4E26                        HttpGetMethod@Index 01C8  
                             __pdataBANK1 01FE                               __pdataBANK2 02F3  
                             __pdataBANK3 03BD                               __pdataBANK4 04D0  
                             __pdataBANK5 05A4                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 051C                                  ??_memcpy 0083  
                                ??_memset 0083                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 007D                      ??_Uart_ClearRxBuffer 007D  
     __size_of_Uart_MdmGsmGprsReadService 00CA                                  ??_strcat 0081  
                                ??_strcpy 0081                                  ??_strlen 007F  
                  __size_of_Rtcm_MainTask 008E                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 554C                    __end_of_ConfigureModem 39EA  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D7  
          __end_of_USBStdGetStatusHandler 419A                             WriteByte@Byte 007D  
                      __end_of_TaskNumber FC3F                               __pbssCOMRAM 0023  
                 GetElapsedTime@TimeValue 008D                     __end_of_StringCompare 55F2  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
                           __pcstackBANK3 03FE              __size_of_USBCtrlTrfInHandler 00C2  
                           __pcstackBANK4 04E8                           RiSm@MdmDrvState 002F  
                  MyApp_Task@blinkSeconds 01D6                              _SetAckStatus 628A  
                            _isalpha$6520 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 6356                       __size_of_initEeprom 00A4  
                            _isdigit$6254 007E                      ?_USBStdGetDscHandler 0001  
           UpdateSchFlag@InterruptCounter 02DC                 SetUartBaudRate@UartConfig 0096  
                     _Uart_WriteStringLen 5ABC       InitGprsNetwork@GprsNetInitNextState 00D1  
                 GetElapsedTime@StartTime 0081                             _UartWriteByte 610A  
                             _ALRMRPTbits 000F90                __end_of_USBWakeFromSuspend 5C2C  
            __end_of_LedBlinkStateMachine 26C6                               sprintf@flag 0083  
                    __size_of_Eeprom_Read 0054                           _USBStallHandler 58E6  
                              ?_SendSmsSm 0001                              _pBDTEntryOut 030E  
              __size_of_Rtcc_SetRtccValue 022E                      __size_of_GenerateEvt 0018  
                         ?_Tmr_TmrBConfig 00A0                __size_of_Rtcc_SetRtcStatus 0016  
                        _Mcu_ConfigExtInt 619E                __end_of_USBCheckCDCRequest 424A  
            __size_ofi1_I2cSlv_SendI2cMsg 003A                       _OsAlrm_ClearOsAlarm 53A4  
                         ?_Tmr_TmrBIrqSet 007D                      MyApp_Task@blinkTicks 03FC  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 610A                              ??_StringCopy 0083  
                        _Led_SetLedStatus 5E34                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 60C8  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC34  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 5C2C  
                               __ptext101 4594                                 __ptext110 19F2  
                               __ptext102 62F4                                 __ptext111 5ABC  
                               __ptext103 5FB2                                 __ptext120 534C  
                               __ptext112 1D32                                 __ptext104 5FD6  
                               __ptext121 242C                                 __ptext113 5D0C  
                               __ptext105 62B0                                 __ptext130 5122  
                               __ptext122 43A0                                 __ptext114 55A0  
                               __ptext106 54F8                             Terminal@Index 00A6  
                               __ptext131 51E2                                 __ptext123 637E  
                               __ptext115 2A82                                 __ptext107 5CA0  
                               __ptext140 554C                                 __ptext132 4AF0  
                               __ptext124 0DC8                                 __ptext116 391C  
                               __ptext108 529C                                 __ptext141 3DDC  
                               __ptext133 3D14                                 __ptext125 05EC  
                               __ptext117 0ABC                                 __ptext109 58A0  
                               __ptext150 2022                                 __ptext142 5F40  
                               __ptext134 62C2                                 __ptext126 5B78  
                               __ptext118 294A                                 __ptext151 6356  
                               __ptext143 4F0C                                 __ptext135 5CD6  
                               __ptext127 59F6                                 __ptext119 52F4  
                               __ptext152 6396                                 __ptext144 5730  
                               __ptext136 4448                                 __ptext128 610A  
                               __ptext161 5FFA                                 __ptext153 639A  
                               __ptext145 4D20                                 __ptext137 3234  
                               __ptext129 56E2                                 __ptext170 625E  
                               __ptext162 6324                                 __ptext154 628A  
                               __ptext146 5EC0                                 __ptext138 5E34  
                               __ptext163 6166                                 __ptext155 6360  
                               __ptext147 3EA4                                 __ptext139 257E  
                               __ptext172 6314                                 __ptext164 6304  
                               __ptext156 621A                                 __ptext148 5E92  
                               __ptext173 3B82                                 __ptext165 22D6  
                               __ptext157 639E                                 __ptext149 1EB4  
                               __ptext174 6274                                 __ptext166 5F68  
                               __ptext158 636A                                 __ptext175 63A2  
                               __ptext167 53A4                                 __ptext159 6374  
                               __ptext176 63A6                                 __ptext168 6182  
                               __ptext177 63AA                                 __ptext169 5C66  
                               __ptext178 0000                                  ?___awmod 007D  
                      _Sch_SchmIntService 6324                           _InitializeTasks 4E26  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                __size_of_Mdm_HangPhoneCall 0012  
                  __size_ofi2_GenerateEvt 0016             I2cSlv_QueryI2cData@QueryTimer 0346  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 0397                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 402A  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
      Uart_MdmGsmGprsReadService@UartData 0004                               _I2cTxBuffer 044F  
                                ?_initFsm 0001                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                         ??_GetCallerNumber 0085  
                                ?_isalpha 0001                              ??_SystemInit 00AB  
                                ?_isdigit 0001                               _I2cTxPacket 039D  
          InitializeTasks@ActiveTaskIndex 04E8                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02EC  
                         Terminal@Payload 0766                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 50BC                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 50BC  
              ConfigureModem@DelayCounter 02D6                        __end_of_StringCopy 5184  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00E1  
                         Terminal@SwTimer 04C5                  initEeprom@memoryOpResult 0101  
                                ?_sprintf 007D                                  ?_tolower 0001  
               __size_of_Rtcm_SetRtccDate 0054              __size_of_USBCtrlTrfRxService 0124  
           USBConfigureEndpoint@direction 007D                                  ?_toupper 0001  
                                _I2cReady 01D7                         ?_Mdm_SetSmsFormat 0001  
                          ?_UartWriteByte 007D                    __size_of_I2c_WriteData 016E  
              ConfigureModem@DelayValueMs 02D8                          _OsTmr_StartTimer 51E2  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 007D                __size_of_I2cSlv_SendI2cMsg 003E  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 625E                __end_of_Mcu_StartSystemPll 6148  
                            _PhoneNumbLen 00D3                        ??_Mdm_SetSmsFormat 0083  
                            _Wdg_MainTask 601E                             _Rtcm_MainTask 4B80  
                          ___wmul@product 0081                  ModemEvtParser@ClipString 009A  
                        SendSmsSm@SwTimer 03E6                     Terminal@ReceivedBytes 00A5  
                    ??_Sch_SchmIntService 0023                    __size_of_UpdateSchFlag 001C  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 007E  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 008C                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
            ConfigureModem@MdmConfigState 0028           HttpGetMethod@GetMethodNextState 00D0  
                   ?_I2cSlv_I2cReadMsgSts 0001                         _I2c_InitI2cModule 4F0C  
                       _IncomingCallEvent 003F                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_LedStateMachine 0097                        __end_of_SystemInit 5DD4  
                                _RCONbits 000FD0                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    MyApp_Task@memoryFlag 00C4                      Rtcm_MainTask@Options 0001  
            __end_of_OsTmr_GetTimerStatus 4B80                                  _UCONbits 000F65  
                                _SSP2STAT 000F73                  ModemEvtParser@CompareIdx 00A9  
                    _USBConfigureEndpoint 4774                      _UsbMasterPhoneNumber 0440  
        __size_of_USBStdFeatureReqHandler 0294                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 242C                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 5F68                     __end_of_initGprsModem 4AF0  
                     ??_I2c_InitI2cModule 00A4                 __size_of_Rtcc_AlarmConfig 006C  
              __end_of_InitModemInterface 6386                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                            _RemoteWakeup 01E5                                  _ApnLocal 0324  
                          _StartCondition 639A                        SetAckStatus@AckSts 007D  
               __size_of_MdmHttp_MainTask 0046                    __size_of_Mdm_IsRinging 0024  
                        StringCompare@Len 0089               HttpGetMethod@GetMethodState 01EB  
                           _Tmr_TmrBPrSet 3146                         _NewStringReceived 003C  
                            _isspace$6523 007E                          _UartSetConfigLow 534C  
                                _GetSmsSm 2A82                   __end_of_USBStallHandler 592A  
                    Mdm_DrvMainFn@Options 0001                           _blinkForSeconds 5C2C  
                          _memoryPreamble 03A7                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03DB                                  _MdmCntSm 43A0  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 2820                                 copy_data1 2840  
                               copy_data2 2860                                 copy_data3 2898  
            __end_of_LedPulseStateMachine 331C                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 3402  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 6360                             i2_GenerateEvt 6274  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                      __end_of_device_dsc FE68                 __end_of_I2c_InitI2cModule 4F7E  
                                _MsgReady FE3F                           ??_Term_MainTask 00A7  
                 __end_of_InitializeTasks 4E9A                initGprsModem@isInitialized 0099  
                 ?_USBCtrlTrfSetupHandler 0001               __end_of_I2cSlv_QueryI2cData 384E  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 480C                      __size_of_SetBaudRate 004E  
                            ??_initEeprom 00B0                              ?_TurnOnModem 0001  
                                _TxBuffer 0320                            _LowPriorityIsr 0018  
                               memcpy@tmp 0083                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DE  
                         _SetUartBaudRate 294A              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1EB4                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                           MyApp_Task@F9003 03CB  
                __end_of_UpdateOsCounters 6314                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02EE                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                        __size_of___lwmod 0044                  I2c_WriteData@WritePacket 007E  
                       Terminal@TermState 02F0                             _UpdateSchFlag 6166  
                     __end_of_putUSBUSART 60A6                               _line_coding 037E  
                            _Rtcc_LockRtc 62E4              I2cSlv_QueryI2cData@SlaveAddr 00A8  
                    _LedBlinkStateMachine 257E                    __end_of_StartCondition 639E  
                          ??_CDCTxService 0084                  ??_Pm_DsReleasePinControl 007D  
                  SendSmsSm@SendSms_State 01F2                 Rtcm_GetRtccDate@LocalDate 008A  
                I2c_WriteData@WriteStatus 0035                              _isupper$6526 007E  
                              strcat@from 007F                   I2c_ReadData@DataCounter 0033  
                          ?_Tmr_TmrBPrSet 0096                          __size_of_initFsm 0048  
                        ??_ModemEvtParser 0090                          _GetOsTickCounter 62C2  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0188                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03AB                  ModemEvtParser@RingString 00A4  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                           MyApp_Task@phone 04DA  
                                __ptext10 577E                                  __ptext11 60EA  
                                __ptext20 5F8E                                  __ptext12 480C  
                                __ptext21 585A                                  __ptext13 6148  
                         ??_UartWriteByte 007E                                  __ptext30 5D40  
                                __ptext22 5642                                  __ptext14 2CE2  
                                __ptext31 58E6                                  __ptext23 53FC  
                                __ptext15 4E26                                  __ptext40 331C  
                                __ptext32 6040                                  __ptext24 638C  
                                __ptext16 2F2C                                  __ptext41 40E8  
                                __ptext33 2180                                  __ptext25 601E  
                                __ptext17 61B8                                  __ptext50 2E08  
                                __ptext42 2BB4                                  __ptext34 4938  
                                __ptext26 629E                                  __ptext18 4B80  
                                __ptext51 3AB6                                  __ptext43 135A  
                                __ptext35 57CA                                  __ptext27 6392  
                                __ptext19 39EA                                  __ptext60 00D0  
                                __ptext52 3F68                                  __ptext44 5184  
                                __ptext36 4C0E                                  __ptext28 1BAA  
                                __ptext61 3402                                  __ptext53 35CC  
                                __ptext45 419A                                  __ptext37 3046  
                                __ptext29 5BF2                                  __ptext70 6084  
                                __ptext62 61EA                                  __ptext54 26C6  
                                __ptext46 4F7E                                  __ptext38 46D6  
                                __ptext71 596E                                  __ptext63 5BB6  
                                __ptext55 10B6                                  __ptext47 592A  
                                __ptext39 34E8                                  __ptext80 15EE  
                                __ptext72 42F6                                  __ptext64 181C  
                                __ptext56 5AFC                                  __ptext48 4774  
                                __ptext81 4E9A                                  __ptext73 59B2  
                                __ptext65 6202                                  __ptext57 5240  
                                __ptext49 5056                                  __ptext90 5812  
                                __ptext82 4C9A                                  __ptext74 48A2  
                                __ptext66 5F16                                  __ptext58 384E  
                                __ptext91 4A60                                  __ptext83 62E4  
                                __ptext75 402A                                  __ptext67 5E04  
                                __ptext59 5DD4                                  __ptext92 5692  
                                __ptext84 50BC                                  __ptext76 36A4  
                                __ptext68 6062                                  __ptext93 44F0  
                                __ptext85 49CC                                  __ptext77 60A6  
                                __ptext69 5D72                                  __ptext94 54A4  
                                __ptext86 6232                                  __ptext78 5450  
                                __ptext95 377C                                  __ptext87 4636  
                                __ptext79 62D4                                  __ptext96 4DA4  
                                __ptext88 6248                                  __ptext97 5B3A  
                                __ptext89 4FEA                                  __ptext98 5A7C  
                                __ptext99 60C8                          __size_of_isupper 0022  
                 initEeprom@addressToRead 0100                                _I2cDummyTx 6182  
                  Tmr_TmrBIrqSet@Priority 007D                        __end_of_initEeprom 4594  
                   __end_of_HttpGetMethod 0ABC                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                                 isxdigit@c 0082  
                        __size_of_sprintf 00CE                          __size_of_tolower 0018  
                   __size_of_Tmr_StartTmr 0020                          __size_of_toupper 0018  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 0030  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                       _Mdm_IsSmsReceived 5FB2               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 007E  
          __end_of_USBCtrlTrfSetupHandler 4C9A                             __size_of_main 000C  
                       ?_USBCtrlEPService 0001                             __size_of_itoa 0044  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 6374  
                      ?_Mdm_IsSmsReceived 0001                             _Mdm_DrvMainFn 638C  
                      ??_USBCtrlEPService 0097                                  _isxdigit 5BB6  
                           _Mdm_IsRinging 5FD6                       _USBCtrlTrfInHandler 3F68  
                I2c_ReadData@I2cReadState 0034                __end_of_Mdm_RequestSmsData 6304  
                   __end_of_ScheduleTasks 2E08                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                                  _outPipes 01C9  
                    _USBCtrlTrfOutHandler 5056                       Led_SetLedStatus@Led 007E  
                                int$flags 0042                                strtol@base 008D  
                          ?_I2c_WriteData 007E                                  atoi@sign 0087  
                       ??_I2cSlv_MainTask 00A6                           StringCopy@Index 0085  
               _USBCtrlEPAllowStatusStage 3AB6                       ??_Mdm_IsSmsReceived 0081  
                    __size_of_Term_MainSm 02A4              ScheduleTasks@ActiveTaskIndex 03FE  
                              strtol@sign 0093                           Term_MainSm@Data 0463  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                 blinkForSeconds@blinkTicks 0093  
                          ?_UpdateSchFlag 0001                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 008A                   __end_of_blinkForSeconds 5C66  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 5C66  
                __end_of_Mcu_ConfigExtInt 61B8                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00C9                  CDCTxService@byte_to_send 0085  
           I2c_WriteData@TentativeCounter 0036                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 60EA                  __end_of_Led_SetLedStatus 5E64  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                   Eeprom_Read@DataLength 00AB                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 5450  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 5FD6  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    _OsTmr_GetTimerStatus 4AF0                                 sprintf@ap 0084  
                               sprintf@cp 0087                                 sprintf@sp 007D  
                       TmrBInit@Prescaler 007D                      __size_of_Tmr_Tmr2Isr 0024  
                  __size_of_USBDeviceInit 0156   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 51E2  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 008F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0089           _USER_USB_CALLBACK_EVENT_HANDLER 5184  
                 Rtcc_SetRtcStatus@Status 007D                          ___lwmod@dividend 007D  
                 __end_of_SetUartBaudRate 2A82                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                  blinkForSeconds@seconds 0095                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 009F                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 5A3A                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                           _GetCallerNumber 5CA0  
                __end_of_Rtcm_GetRtccDate 5122                               _putUSBUSART 6084  
                     _USBCtrlTrfRxService 2E08                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 5BF2  
                 _USBStdFeatureReqHandler 135A                  __end_of_OsTmr_StartTimer 5240  
                    _LedPulseStateMachine 3234                        _USBCheckCDCRequest 419A  
                     _USBCtrlTrfTxService 35CC                       RtccIrqInit@Priority 007D  
                                utoa@base 008E                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                             _isMemoryEmpty 01FE  
                        _Rtcc_AlarmConfig 4FEA                           ??_Tmr_TmrBPrSet 009A  
                                sprintf@c 0086                                  sprintf@f 007F  
                                tolower@c 007D                                  strcat@cp 0081  
                                strcat@to 007D                       ?_USBWakeFromSuspend 0001  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0091  
              InitGprsNetwork@GprsInitSts 01FF                           ___lwmod@divisor 007F  
             GsmGprsTerminal@FirstRecFlag 01DF                     ??_USBCtrlTrfInHandler 007E  
                                strcpy@cp 0081                                  strlen@cp 0081  
                                strcpy@to 007D                 UsbDevice_MainTask@Options 0001  
                   _USBAlternateInterface 02F1                           ___lwmod@counter 0081  
                           ?_Mdm_MainTask 0001                            ??_I2cSetConfig 007D  
          __size_of_Irq_InitIntController 002A                                  toupper@c 007D  
         SetUartBaudRate@BaudRateRegister 009A                       ?_USBCheckCDCRequest 0001  
                        _MdmHttp_MainTask 585A                            ??_I2c_ReadData 0082  
                          ??_I2cSendMsgSm 0084             __end_of_Irq_InitIntController 5F16  
                   ReceiveEvt@EventStatus 0080              ?_Tmr_RegisterTmr2IsrCallback 007D  
                     USBEnableEndpoint@ep 0088                           _endpoint_number 00CB  
                              _WDTCONbits 000FC0                    MyApp_Task@memoryResult 0107  
                             ?_I2cDummyTx 0001                                  xtoi@sign 0087  
                  _NewMdmEvtParserRequest 003B       Uart_MdmGsmGprsReadService@RxCounter 0023  
                    ?_USBCtrlTrfRxService 0001                           ??i2_GenerateEvt 0003  
            __size_of_Led_SetLedBlinkTime 0054                             ?_getsUSBUSART 0084  
                           ??_Eeprom_Read 00AC                  UartTxBufferStatus@Module 007E  
                   ?_OsTmr_GetTimerStatus 0095             SetUartBaudRate@DivisionFactor 009C  
          I2cSlv_ReceiveI2cMsg@DataLenght 0083                             ??_GenerateEvt 007F  
                         _LedStateMachine 4448          Uart_MdmGsmGprsReadService@Module 0001  
                         TmrBInit@TmrNumb 0080                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              ??_Uart_MdmGsmGprsReadService 0005  
                           _StopCondition 6396                     ??i1_I2cSlv_SendI2cMsg 0020  
                  Led_SetLedStatus@LedSts 007D              _USBStatusStageTimeoutCounter 00CA  
                        Mdm_IsRinging@Ret 0081                      ??_USBWakeFromSuspend 0091  
              USBTransferOnePacket@handle 0082                         ??_InitGprsNetwork 009E  
                     __end_of_ClearBuffer 5D0C                      __end_of_CDCTxService 280C  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC3B                     Eeprom_Read@ReadBuffer 00A9  
                         ??_I2c_WriteData 0080                   ConfigureModem@NextState 01F4  
                 _UsbMasterPhoneNumberLen 0322                             ?_Mcu_ClearWdg 0001  
                           _Mcu_SetWdgSts 629E  
