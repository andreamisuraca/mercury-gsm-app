

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 20 18:02:34 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    30                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    31                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    32                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    33                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    35                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	text0,global,reloc=2,class=CODE,delta=1
    37                           	psect	text1,global,reloc=2,class=CODE,delta=1
    38                           	psect	text2,global,reloc=2,class=CODE,delta=1
    39                           	psect	text3,global,reloc=2,class=CODE,delta=1
    40                           	psect	text4,global,reloc=2,class=CODE,delta=1
    41                           	psect	text5,global,reloc=2,class=CODE,delta=1
    42                           	psect	text6,global,reloc=2,class=CODE,delta=1
    43                           	psect	text7,global,reloc=2,class=CODE,delta=1
    44                           	psect	text8,global,reloc=2,class=CODE,delta=1
    45                           	psect	text9,global,reloc=2,class=CODE,delta=1
    46                           	psect	text10,global,reloc=2,class=CODE,delta=1
    47                           	psect	text11,global,reloc=2,class=CODE,delta=1
    48                           	psect	text12,global,reloc=2,class=CODE,delta=1
    49                           	psect	text13,global,reloc=2,class=CODE,delta=1
    50                           	psect	text14,global,reloc=2,class=CODE,delta=1
    51                           	psect	text15,global,reloc=2,class=CODE,delta=1
    52                           	psect	text16,global,reloc=2,class=CODE,delta=1
    53                           	psect	text17,global,reloc=2,class=CODE,delta=1
    54                           	psect	text18,global,reloc=2,class=CODE,delta=1
    55                           	psect	text19,global,reloc=2,class=CODE,delta=1
    56                           	psect	text20,global,reloc=2,class=CODE,delta=1
    57                           	psect	text21,global,reloc=2,class=CODE,delta=1
    58                           	psect	text22,global,reloc=2,class=CODE,delta=1
    59                           	psect	text23,global,reloc=2,class=CODE,delta=1
    60                           	psect	text24,global,reloc=2,class=CODE,delta=1
    61                           	psect	text25,global,reloc=2,class=CODE,delta=1
    62                           	psect	text26,global,reloc=2,class=CODE,delta=1
    63                           	psect	text27,global,reloc=2,class=CODE,delta=1
    64                           	psect	text28,global,reloc=2,class=CODE,delta=1
    65                           	psect	text29,global,reloc=2,class=CODE,delta=1
    66                           	psect	text30,global,reloc=2,class=CODE,delta=1
    67                           	psect	text31,global,reloc=2,class=CODE,delta=1
    68                           	psect	text32,global,reloc=2,class=CODE,delta=1
    69                           	psect	text33,global,reloc=2,class=CODE,delta=1
    70                           	psect	text34,global,reloc=2,class=CODE,delta=1
    71                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text36,global,reloc=2,class=CODE,delta=1
    73                           	psect	text37,global,reloc=2,class=CODE,delta=1
    74                           	psect	text38,global,reloc=2,class=CODE,delta=1
    75                           	psect	text39,global,reloc=2,class=CODE,delta=1
    76                           	psect	text40,global,reloc=2,class=CODE,delta=1
    77                           	psect	text41,global,reloc=2,class=CODE,delta=1
    78                           	psect	text42,global,reloc=2,class=CODE,delta=1
    79                           	psect	text43,global,reloc=2,class=CODE,delta=1
    80                           	psect	text44,global,reloc=2,class=CODE,delta=1
    81                           	psect	text45,global,reloc=2,class=CODE,delta=1
    82                           	psect	text46,global,reloc=2,class=CODE,delta=1
    83                           	psect	text47,global,reloc=2,class=CODE,delta=1
    84                           	psect	text48,global,reloc=2,class=CODE,delta=1
    85                           	psect	text49,global,reloc=2,class=CODE,delta=1
    86                           	psect	text50,global,reloc=2,class=CODE,delta=1
    87                           	psect	text51,global,reloc=2,class=CODE,delta=1
    88                           	psect	text52,global,reloc=2,class=CODE,delta=1
    89                           	psect	text53,global,reloc=2,class=CODE,delta=1
    90                           	psect	text54,global,reloc=2,class=CODE,delta=1
    91                           	psect	text55,global,reloc=2,class=CODE,delta=1
    92                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text58,global,reloc=2,class=CODE,delta=1
    95                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text60,global,reloc=2,class=CODE,delta=1
    97                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text70,global,reloc=2,class=CODE,delta=1
   107                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text74,global,reloc=2,class=CODE,delta=1
   111                           	psect	text75,global,reloc=2,class=CODE,delta=1
   112                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text78,global,reloc=2,class=CODE,delta=1
   115                           	psect	text79,global,reloc=2,class=CODE,delta=1
   116                           	psect	text80,global,reloc=2,class=CODE,delta=1
   117                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text83,global,reloc=2,class=CODE,delta=1
   120                           	psect	text84,global,reloc=2,class=CODE,delta=1
   121                           	psect	text85,global,reloc=2,class=CODE,delta=1
   122                           	psect	text86,global,reloc=2,class=CODE,delta=1
   123                           	psect	text87,global,reloc=2,class=CODE,delta=1
   124                           	psect	text88,global,reloc=2,class=CODE,delta=1
   125                           	psect	text89,global,reloc=2,class=CODE,delta=1
   126                           	psect	text90,global,reloc=2,class=CODE,delta=1
   127                           	psect	text91,global,reloc=2,class=CODE,delta=1
   128                           	psect	text92,global,reloc=2,class=CODE,delta=1
   129                           	psect	text93,global,reloc=2,class=CODE,delta=1
   130                           	psect	text94,global,reloc=2,class=CODE,delta=1
   131                           	psect	text95,global,reloc=2,class=CODE,delta=1
   132                           	psect	text96,global,reloc=2,class=CODE,delta=1
   133                           	psect	text97,global,reloc=2,class=CODE,delta=1
   134                           	psect	text98,global,reloc=2,class=CODE,delta=1
   135                           	psect	text99,global,reloc=2,class=CODE,delta=1
   136                           	psect	text100,global,reloc=2,class=CODE,delta=1
   137                           	psect	text101,global,reloc=2,class=CODE,delta=1
   138                           	psect	text102,global,reloc=2,class=CODE,delta=1
   139                           	psect	text103,global,reloc=2,class=CODE,delta=1
   140                           	psect	text104,global,reloc=2,class=CODE,delta=1
   141                           	psect	text105,global,reloc=2,class=CODE,delta=1
   142                           	psect	text106,global,reloc=2,class=CODE,delta=1
   143                           	psect	text107,global,reloc=2,class=CODE,delta=1
   144                           	psect	text108,global,reloc=2,class=CODE,delta=1
   145                           	psect	text109,global,reloc=2,class=CODE,delta=1
   146                           	psect	text110,global,reloc=2,class=CODE,delta=1
   147                           	psect	text111,global,reloc=2,class=CODE,delta=1
   148                           	psect	text112,global,reloc=2,class=CODE,delta=1
   149                           	psect	text113,global,reloc=2,class=CODE,delta=1
   150                           	psect	text114,global,reloc=2,class=CODE,delta=1
   151                           	psect	text115,global,reloc=2,class=CODE,delta=1
   152                           	psect	text116,global,reloc=2,class=CODE,delta=1
   153                           	psect	text117,global,reloc=2,class=CODE,delta=1
   154                           	psect	text118,global,reloc=2,class=CODE,delta=1
   155                           	psect	text119,global,reloc=2,class=CODE,delta=1
   156                           	psect	text120,global,reloc=2,class=CODE,delta=1
   157                           	psect	text121,global,reloc=2,class=CODE,delta=1
   158                           	psect	text122,global,reloc=2,class=CODE,delta=1
   159                           	psect	text123,global,reloc=2,class=CODE,delta=1
   160                           	psect	text124,global,reloc=2,class=CODE,delta=1
   161                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   162                           	psect	text126,global,reloc=2,class=CODE,delta=1
   163                           	psect	text127,global,reloc=2,class=CODE,delta=1
   164                           	psect	text128,global,reloc=2,class=CODE,delta=1
   165                           	psect	text129,global,reloc=2,class=CODE,delta=1
   166                           	psect	text130,global,reloc=2,class=CODE,delta=1
   167                           	psect	text131,global,reloc=2,class=CODE,delta=1
   168                           	psect	text132,global,reloc=2,class=CODE,delta=1
   169                           	psect	text133,global,reloc=2,class=CODE,delta=1
   170                           	psect	text134,global,reloc=2,class=CODE,delta=1
   171                           	psect	text135,global,reloc=2,class=CODE,delta=1
   172                           	psect	text136,global,reloc=2,class=CODE,delta=1
   173                           	psect	text137,global,reloc=2,class=CODE,delta=1
   174                           	psect	text138,global,reloc=2,class=CODE,delta=1
   175                           	psect	text139,global,reloc=2,class=CODE,delta=1
   176                           	psect	text140,global,reloc=2,class=CODE,delta=1
   177                           	psect	text141,global,reloc=2,class=CODE,delta=1
   178                           	psect	text142,global,reloc=2,class=CODE,delta=1
   179                           	psect	text143,global,reloc=2,class=CODE,delta=1
   180                           	psect	text144,global,reloc=2,class=CODE,delta=1
   181                           	psect	text145,global,reloc=2,class=CODE,delta=1
   182                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   183                           	psect	text147,global,reloc=2,class=CODE,delta=1
   184                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   185                           	psect	text149,global,reloc=2,class=CODE,delta=1
   186                           	psect	text150,global,reloc=2,class=CODE,delta=1
   187                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   188                           	psect	text152,global,reloc=2,class=CODE,delta=1
   189                           	psect	text153,global,reloc=2,class=CODE,delta=1
   190                           	psect	text154,global,reloc=2,class=CODE,delta=1
   191                           	psect	text155,global,reloc=2,class=CODE,delta=1
   192                           	psect	text156,global,reloc=2,class=CODE,delta=1
   193                           	psect	text157,global,reloc=2,class=CODE,delta=1
   194                           	psect	text158,global,reloc=2,class=CODE,delta=1
   195                           	psect	text159,global,reloc=2,class=CODE,delta=1
   196                           	psect	text160,global,reloc=2,class=CODE,delta=1
   197                           	psect	text161,global,reloc=2,class=CODE,delta=1
   198                           	psect	text162,global,reloc=2,class=CODE,delta=1
   199                           	psect	text163,global,reloc=2,class=CODE,delta=1
   200                           	psect	text164,global,reloc=2,class=CODE,delta=1
   201                           	psect	text165,global,reloc=2,class=CODE,delta=1
   202                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   203                           	psect	text167,global,reloc=2,class=CODE,delta=1
   204                           	psect	text168,global,reloc=2,class=CODE,delta=1
   205                           	psect	text169,global,reloc=2,class=CODE,delta=1
   206                           	psect	text170,global,reloc=2,class=CODE,delta=1
   207                           	psect	text171,global,reloc=2,class=CODE,delta=1
   208                           	psect	text172,global,reloc=2,class=CODE,delta=1
   209                           	psect	text173,global,reloc=2,class=CODE,delta=1
   210                           	psect	text174,global,reloc=2,class=CODE,delta=1
   211                           	psect	text175,global,reloc=2,class=CODE,delta=1
   212                           	psect	text176,global,reloc=2,class=CODE,delta=1
   213                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   214                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   215                           	psect	text178,global,reloc=2,class=CODE,delta=1
   216                           	psect	text179,global,reloc=2,class=CODE,delta=1
   217                           	psect	text180,global,reloc=2,class=CODE,delta=1
   218                           	psect	text181,global,reloc=2,class=CODE,delta=1
   219                           	psect	text182,global,reloc=2,class=CODE,delta=1
   220                           	psect	text183,global,reloc=2,class=CODE,delta=1
   221                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   222                           	psect	text184,global,reloc=2,class=CODE,delta=1
   223                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   224                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   225                           	dabs	1,0x400,48,_BDT
   226                           	dabs	1,0x438,8,_CtrlTrfData
   227                           	dabs	1,0x430,8,_SetupPkt
   228  0000                     
   229                           ; Version 1.45
   230                           ; Generated 16/11/2017 GMT
   231                           ; 
   232                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   233                           ; All rights reserved.
   234                           ; 
   235                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   236                           ; 
   237                           ; Redistribution and use in source and binary forms, with or without modification, are
   238                           ; permitted provided that the following conditions are met:
   239                           ; 
   240                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   241                           ;        conditions and the following disclaimer.
   242                           ; 
   243                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   244                           ;        of conditions and the following disclaimer in the documentation and/or other
   245                           ;        materials provided with the distribution.
   246                           ; 
   247                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   248                           ;        software without specific prior written permission.
   249                           ; 
   250                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   251                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   252                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   253                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   254                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   255                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   256                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   257                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   258                           ; 
   259                           ; 
   260                           ; Code-generator required, PIC18F46J50 Definitions
   261                           ; 
   262                           ; SFR Addresses
   263  0000                     
   264                           	psect	idataBANK1
   265  006512                     __pidataBANK1:
   266                           	opt stack 0
   267                           
   268                           ;initializer for _isMemoryEmpty
   269  006512  01                 	db	1
   270                           
   271                           ;initializer for InitGprsNetwork@GprsInitSts
   272  006513  01                 	db	1
   273                           
   274                           	psect	idataBANK2
   275  006496                     __pidataBANK2:
   276                           	opt stack 0
   277                           
   278                           ;initializer for Terminal@EchoOption
   279  006496  01                 	db	1
   280                           
   281                           ;initializer for _MainSystemTimebaseFlag
   282  006497  01                 	db	1
   283                           
   284                           ;initializer for _ConnTimeout
   285  006498  00                 	db	0
   286  006499  01                 	db	1
   287  00649A  0000               	dw	0
   288  00649C  0000               	dw	0
   289  00649E  0000               	dw	0
   290  0064A0  0000               	dw	0
   291  0064A2  00                 	db	0
   292                           
   293                           	psect	idataBANK3
   294  005BCE                     __pidataBANK3:
   295                           	opt stack 0
   296                           
   297                           ;initializer for ModemEvtParser@F9110
   298  005BCE  2B                 	db	43
   299  005BCF  43                 	db	67
   300  005BD0  4D                 	db	77
   301  005BD1  54                 	db	84
   302  005BD2  49                 	db	73
   303                           
   304                           ;initializer for ModemEvtParser@F9108
   305  005BD3  2B                 	db	43
   306  005BD4  43                 	db	67
   307  005BD5  4C                 	db	76
   308  005BD6  49                 	db	73
   309  005BD7  50                 	db	80
   310                           
   311                           ;initializer for ModemEvtParser@F9106
   312  005BD8  52                 	db	82
   313  005BD9  49                 	db	73
   314  005BDA  4E                 	db	78
   315  005BDB  47                 	db	71
   316                           
   317                           ;initializer for MyApp_Task@F9017
   318  005BDC  63                 	db	99
   319  005BDD  61                 	db	97
   320  005BDE  74                 	db	116
   321                           
   322                           ;initializer for triggerRelay@F9009
   323  005BDF  50                 	db	80
   324  005BE0  00                 	db	0
   325                           
   326                           ;initializer for Term_MainSm@TermDelay
   327  005BE1  01                 	db	1
   328  005BE2  01                 	db	1
   329  005BE3  0000               	dw	0
   330  005BE5  0000               	dw	0
   331  005BE7  0000               	dw	0
   332  005BE9  0000               	dw	0
   333  005BEB  00                 	db	0
   334                           
   335                           ;initializer for _ConnWait
   336  005BEC  00                 	db	0
   337  005BED  01                 	db	1
   338  005BEE  0000               	dw	0
   339  005BF0  0000               	dw	0
   340  005BF2  0000               	dw	0
   341  005BF4  0000               	dw	0
   342  005BF6  00                 	db	0
   343                           
   344                           ;initializer for SendSmsSm@SwTimer
   345  005BF7  01                 	db	1
   346  005BF8  01                 	db	1
   347  005BF9  0000               	dw	0
   348  005BFB  0000               	dw	0
   349  005BFD  0000               	dw	0
   350  005BFF  0000               	dw	0
   351  005C01  00                 	db	0
   352                           
   353                           ;initializer for CheckModem@Timeout
   354  005C02  00                 	db	0
   355  005C03  01                 	db	1
   356  005C04  0000               	dw	0
   357  005C06  0000               	dw	0
   358  005C08  0000               	dw	0
   359  005C0A  0000               	dw	0
   360  005C0C  00                 	db	0
   361                           
   362                           	psect	idataBANK4
   363  00637E                     __pidataBANK4:
   364                           	opt stack 0
   365                           
   366                           ;initializer for MyApp_Task@smsPhoneNumber
   367  00637E  2B                 	db	43
   368  00637F  33                 	db	51
   369  006380  39                 	db	57
   370  006381  30                 	db	48
   371  006382  31                 	db	49
   372  006383  32                 	db	50
   373  006384  33                 	db	51
   374  006385  34                 	db	52
   375  006386  35                 	db	53
   376  006387  36                 	db	54
   377  006388  37                 	db	55
   378  006389  38                 	db	56
   379  00638A  39                 	db	57
   380                           
   381                           ;initializer for ModemEvtParser@F9112
   382  00638B  43                 	db	67
   383  00638C  61                 	db	97
   384  00638D  6C                 	db	108
   385  00638E  6C                 	db	108
   386  00638F  20                 	db	32
   387  006390  52                 	db	82
   388  006391  65                 	db	101
   389  006392  61                 	db	97
   390  006393  64                 	db	100
   391  006394  79                 	db	121
   392                           
   393                           	psect	idataBANK5
   394  0056B8                     __pidataBANK5:
   395                           	opt stack 0
   396                           
   397                           ;initializer for _TaskTable
   398  0056B8  F0                 	db	low _Mdm_DrvMainFn
   399  0056B9  64                 	db	high _Mdm_DrvMainFn
   400  0056BA  00                 	db	0
   401  0056BB  0000               	dw	0
   402  0056BD  000A               	dw	10
   403  0056BF  00                 	db	0
   404  0056C0  70                 	db	low _I2cSlv_MainTask
   405  0056C1  54                 	db	high _I2cSlv_MainTask
   406  0056C2  00                 	db	0
   407  0056C3  0000               	dw	0
   408  0056C5  0001               	dw	1
   409  0056C7  00                 	db	0
   410  0056C8  08                 	db	low _Mdm_MainTask
   411  0056C9  57                 	db	high _Mdm_MainTask
   412  0056CA  00                 	db	0
   413  0056CB  0000               	dw	0
   414  0056CD  0001               	dw	1
   415  0056CF  00                 	db	0
   416  0056D0  6E                 	db	low _MdmHttp_MainTask
   417  0056D1  59                 	db	high _MdmHttp_MainTask
   418  0056D2  00                 	db	0
   419  0056D3  0000               	dw	0
   420  0056D5  0001               	dw	1
   421  0056D7  00                 	db	0
   422  0056D8  B8                 	db	low _UsbDevice_MainTask
   423  0056D9  60                 	db	high _UsbDevice_MainTask
   424  0056DA  00                 	db	0
   425  0056DB  0000               	dw	0
   426  0056DD  0001               	dw	1
   427  0056DF  00                 	db	0
   428  0056E0  48                 	db	low _Wdg_MainTask
   429  0056E1  61                 	db	high _Wdg_MainTask
   430  0056E2  00                 	db	0
   431  0056E3  0000               	dw	0
   432  0056E5  0064               	dw	100
   433  0056E7  00                 	db	0
   434  0056E8  46                 	db	low _Led_MainTask
   435  0056E9  39                 	db	high _Led_MainTask
   436  0056EA  00                 	db	0
   437  0056EB  0000               	dw	0
   438  0056ED  0032               	dw	50
   439  0056EF  00                 	db	0
   440  0056F0  02                 	db	low _Rtcm_MainTask
   441  0056F1  4B                 	db	high _Rtcm_MainTask
   442  0056F2  00                 	db	0
   443  0056F3  0000               	dw	0
   444  0056F5  0064               	dw	100
   445  0056F7  00                 	db	0
   446  0056F8  02                 	db	low _Term_MainTask
   447  0056F9  63                 	db	high _Term_MainTask
   448  0056FA  00                 	db	0
   449  0056FB  0000               	dw	0
   450  0056FD  0001               	dw	1
   451  0056FF  00                 	db	0
   452  005700  0C                 	db	low _MyApp_Task
   453  005701  28                 	db	high _MyApp_Task
   454  005702  00                 	db	0
   455  005703  0000               	dw	0
   456  005705  0064               	dw	100
   457  005707  00                 	db	0
   458                           
   459                           	psect	mediumconst
   460  00FC22                     __pmediumconst:
   461                           	opt stack 0
   462  00FC22  00                 	db	0
   463  00FC23                     _USB_SD_Ptr:
   464                           	opt stack 0
   465  00FC23  5A                 	db	low _sd000
   466  00FC24  FE                 	db	high _sd000
   467  00FC25  13                 	db	low _sd001
   468  00FC26  FE                 	db	high _sd001
   469  00FC27  ED                 	db	low _sd002
   470  00FC28  FD                 	db	high _sd002
   471  00FC29                     __end_of_USB_SD_Ptr:
   472                           	opt stack 0
   473  00FC29                     MyApp_Task@F9015:
   474                           	opt stack 0
   475  00FC29  4E                 	db	78
   476  00FC2A  55                 	db	85
   477  00FC2B  4D                 	db	77
   478  00FC2C  2B                 	db	43
   479  00FC2D                     __end_ofMyApp_Task@F9015:
   480                           	opt stack 0
   481  00FC2D                     _USB_CD_Ptr:
   482                           	opt stack 0
   483  00FC2D  AA                 	db	low _configDescriptor1
   484  00FC2E  FD                 	db	high _configDescriptor1
   485  00FC2F                     __end_of_USB_CD_Ptr:
   486                           	opt stack 0
   487  00FC2F                     _TaskNumber:
   488                           	opt stack 0
   489  00FC2F  000A               	dw	10
   490  00FC31                     __end_of_TaskNumber:
   491                           	opt stack 0
   492  00FC31                     _MsgFormat:
   493                           	opt stack 0
   494  00FC31  48                 	db	72
   495  00FC32  6F                 	db	111
   496  00FC33  73                 	db	115
   497  00FC34  74                 	db	116
   498  00FC35  20                 	db	32
   499  00FC36  6D                 	db	109
   500  00FC37  65                 	db	101
   501  00FC38  73                 	db	115
   502  00FC39  73                 	db	115
   503  00FC3A  61                 	db	97
   504  00FC3B  67                 	db	103
   505  00FC3C  65                 	db	101
   506  00FC3D  20                 	db	32
   507  00FC3E  66                 	db	102
   508  00FC3F  6F                 	db	111
   509  00FC40  72                 	db	114
   510  00FC41  6D                 	db	109
   511  00FC42  61                 	db	97
   512  00FC43  74                 	db	116
   513  00FC44  3A                 	db	58
   514  00FC45  20                 	db	32
   515  00FC46  0D                 	db	13
   516  00FC47  0A                 	db	10
   517  00FC48  5B                 	db	91
   518  00FC49  6F                 	db	111
   519  00FC4A  70                 	db	112
   520  00FC4B  5F                 	db	95
   521  00FC4C  74                 	db	116
   522  00FC4D  79                 	db	121
   523  00FC4E  70                 	db	112
   524  00FC4F  65                 	db	101
   525  00FC50  5D                 	db	93
   526  00FC51  3A                 	db	58
   527  00FC52  5B                 	db	91
   528  00FC53  6F                 	db	111
   529  00FC54  70                 	db	112
   530  00FC55  5D                 	db	93
   531  00FC56  3A                 	db	58
   532  00FC57  5B                 	db	91
   533  00FC58  6C                 	db	108
   534  00FC59  65                 	db	101
   535  00FC5A  6E                 	db	110
   536  00FC5B  5D                 	db	93
   537  00FC5C  3A                 	db	58
   538  00FC5D  5B                 	db	91
   539  00FC5E  61                 	db	97
   540  00FC5F  64                 	db	100
   541  00FC60  64                 	db	100
   542  00FC61  72                 	db	114
   543  00FC62  5D                 	db	93
   544  00FC63  3A                 	db	58
   545  00FC64  5B                 	db	91
   546  00FC65  70                 	db	112
   547  00FC66  61                 	db	97
   548  00FC67  79                 	db	121
   549  00FC68  6C                 	db	108
   550  00FC69  6F                 	db	111
   551  00FC6A  61                 	db	97
   552  00FC6B  64                 	db	100
   553  00FC6C  5D                 	db	93
   554  00FC6D  0D                 	db	13
   555  00FC6E  0A                 	db	10
   556  00FC6F  0D                 	db	13
   557  00FC70  0A                 	db	10
   558  00FC71  5B                 	db	91
   559  00FC72  6F                 	db	111
   560  00FC73  70                 	db	112
   561  00FC74  5F                 	db	95
   562  00FC75  74                 	db	116
   563  00FC76  79                 	db	121
   564  00FC77  70                 	db	112
   565  00FC78  65                 	db	101
   566  00FC79  5D                 	db	93
   567  00FC7A  20                 	db	32
   568  00FC7B  3D                 	db	61
   569  00FC7C  20                 	db	32
   570  00FC7D  53                 	db	83
   571  00FC7E  4F                 	db	79
   572  00FC7F  2C                 	db	44
   573  00FC80  53                 	db	83
   574  00FC81  42                 	db	66
   575  00FC82  0D                 	db	13
   576  00FC83  0A                 	db	10
   577  00FC84  5B                 	db	91
   578  00FC85  6F                 	db	111
   579  00FC86  70                 	db	112
   580  00FC87  5D                 	db	93
   581  00FC88  20                 	db	32
   582  00FC89  3D                 	db	61
   583  00FC8A  20                 	db	32
   584  00FC8B  52                 	db	82
   585  00FC8C  3A                 	db	58
   586  00FC8D  20                 	db	32
   587  00FC8E  72                 	db	114
   588  00FC8F  65                 	db	101
   589  00FC90  61                 	db	97
   590  00FC91  64                 	db	100
   591  00FC92  2C                 	db	44
   592  00FC93  57                 	db	87
   593  00FC94  3A                 	db	58
   594  00FC95  20                 	db	32
   595  00FC96  77                 	db	119
   596  00FC97  72                 	db	114
   597  00FC98  69                 	db	105
   598  00FC99  74                 	db	116
   599  00FC9A  65                 	db	101
   600  00FC9B  0D                 	db	13
   601  00FC9C  0A                 	db	10
   602  00FC9D  5B                 	db	91
   603  00FC9E  6C                 	db	108
   604  00FC9F  65                 	db	101
   605  00FCA0  6E                 	db	110
   606  00FCA1  5D                 	db	93
   607  00FCA2  20                 	db	32
   608  00FCA3  3D                 	db	61
   609  00FCA4  20                 	db	32
   610  00FCA5  32                 	db	50
   611  00FCA6  20                 	db	32
   612  00FCA7  62                 	db	98
   613  00FCA8  79                 	db	121
   614  00FCA9  74                 	db	116
   615  00FCAA  65                 	db	101
   616  00FCAB  20                 	db	32
   617  00FCAC  41                 	db	65
   618  00FCAD  53                 	db	83
   619  00FCAE  43                 	db	67
   620  00FCAF  49                 	db	73
   621  00FCB0  49                 	db	73
   622  00FCB1  0D                 	db	13
   623  00FCB2  0A                 	db	10
   624  00FCB3  5B                 	db	91
   625  00FCB4  61                 	db	97
   626  00FCB5  64                 	db	100
   627  00FCB6  64                 	db	100
   628  00FCB7  72                 	db	114
   629  00FCB8  5D                 	db	93
   630  00FCB9  20                 	db	32
   631  00FCBA  3D                 	db	61
   632  00FCBB  20                 	db	32
   633  00FCBC  32                 	db	50
   634  00FCBD  20                 	db	32
   635  00FCBE  62                 	db	98
   636  00FCBF  79                 	db	121
   637  00FCC0  74                 	db	116
   638  00FCC1  65                 	db	101
   639  00FCC2  20                 	db	32
   640  00FCC3  41                 	db	65
   641  00FCC4  53                 	db	83
   642  00FCC5  43                 	db	67
   643  00FCC6  49                 	db	73
   644  00FCC7  49                 	db	73
   645  00FCC8  0D                 	db	13
   646  00FCC9  0A                 	db	10
   647  00FCCA  5B                 	db	91
   648  00FCCB  70                 	db	112
   649  00FCCC  61                 	db	97
   650  00FCCD  79                 	db	121
   651  00FCCE  6C                 	db	108
   652  00FCCF  6F                 	db	111
   653  00FCD0  61                 	db	97
   654  00FCD1  64                 	db	100
   655  00FCD2  5D                 	db	93
   656  00FCD3  20                 	db	32
   657  00FCD4  3D                 	db	61
   658  00FCD5  20                 	db	32
   659  00FCD6  6D                 	db	109
   660  00FCD7  61                 	db	97
   661  00FCD8  78                 	db	120
   662  00FCD9  20                 	db	32
   663  00FCDA  32                 	db	50
   664  00FCDB  30                 	db	48
   665  00FCDC  20                 	db	32
   666  00FCDD  62                 	db	98
   667  00FCDE  79                 	db	121
   668  00FCDF  74                 	db	116
   669  00FCE0  65                 	db	101
   670  00FCE1  20                 	db	32
   671  00FCE2  41                 	db	65
   672  00FCE3  53                 	db	83
   673  00FCE4  43                 	db	67
   674  00FCE5  49                 	db	73
   675  00FCE6  49                 	db	73
   676  00FCE7  0D                 	db	13
   677  00FCE8  0A                 	db	10
   678  00FCE9  0D                 	db	13
   679  00FCEA  0A                 	db	10
   680  00FCEB  54                 	db	84
   681  00FCEC  65                 	db	101
   682  00FCED  72                 	db	114
   683  00FCEE  6D                 	db	109
   684  00FCEF  69                 	db	105
   685  00FCF0  6E                 	db	110
   686  00FCF1  61                 	db	97
   687  00FCF2  6C                 	db	108
   688  00FCF3  20                 	db	32
   689  00FCF4  4D                 	db	77
   690  00FCF5  6F                 	db	111
   691  00FCF6  64                 	db	100
   692  00FCF7  65                 	db	101
   693  00FCF8  3A                 	db	58
   694  00FCF9  20                 	db	32
   695  00FCFA  43                 	db	67
   696  00FCFB  4F                 	db	79
   697  00FCFC  4D                 	db	77
   698  00FCFD  4D                 	db	77
   699  00FCFE  41                 	db	65
   700  00FCFF  4E                 	db	78
   701  00FD00  44                 	db	68
   702  00FD01  20                 	db	32
   703  00FD02  4D                 	db	77
   704  00FD03  4F                 	db	79
   705  00FD04  44                 	db	68
   706  00FD05  45                 	db	69
   707  00FD06  0D                 	db	13
   708  00FD07  0A                 	db	10
   709  00FD08  4D                 	db	77
   710  00FD09  6F                 	db	111
   711  00FD0A  64                 	db	100
   712  00FD0B  65                 	db	101
   713  00FD0C  6D                 	db	109
   714  00FD0D  20                 	db	32
   715  00FD0E  54                 	db	84
   716  00FD0F  79                 	db	121
   717  00FD10  70                 	db	112
   718  00FD11  65                 	db	101
   719  00FD12  3A                 	db	58
   720  00FD13  20                 	db	32
   721  00FD14  47                 	db	71
   722  00FD15  53                 	db	83
   723  00FD16  4D                 	db	77
   724  00FD17  2F                 	db	47
   725  00FD18  47                 	db	71
   726  00FD19  50                 	db	80
   727  00FD1A  52                 	db	82
   728  00FD1B  53                 	db	83
   729  00FD1C  0D                 	db	13
   730  00FD1D  0A                 	db	10
   731  00FD1E  0D                 	db	13
   732  00FD1F  0A                 	db	10
   733  00FD20  00                 	db	0
   734  00FD21                     __end_of_MsgFormat:
   735                           	opt stack 0
   736  00FD21                     _Welcome:
   737                           	opt stack 0
   738  00FD21  2A                 	db	42
   739  00FD22  2A                 	db	42
   740  00FD23  2A                 	db	42
   741  00FD24  2A                 	db	42
   742  00FD25  2A                 	db	42
   743  00FD26  2A                 	db	42
   744  00FD27  2A                 	db	42
   745  00FD28  2A                 	db	42
   746  00FD29  2A                 	db	42
   747  00FD2A  2A                 	db	42
   748  00FD2B  2A                 	db	42
   749  00FD2C  2A                 	db	42
   750  00FD2D  2A                 	db	42
   751  00FD2E  2A                 	db	42
   752  00FD2F  2A                 	db	42
   753  00FD30  2A                 	db	42
   754  00FD31  2A                 	db	42
   755  00FD32  2A                 	db	42
   756  00FD33  2A                 	db	42
   757  00FD34  2A                 	db	42
   758  00FD35  2A                 	db	42
   759  00FD36  2A                 	db	42
   760  00FD37  2A                 	db	42
   761  00FD38  2A                 	db	42
   762  00FD39  2A                 	db	42
   763  00FD3A  2A                 	db	42
   764  00FD3B  2A                 	db	42
   765  00FD3C  2A                 	db	42
   766  00FD3D  2A                 	db	42
   767  00FD3E  2A                 	db	42
   768  00FD3F  2A                 	db	42
   769  00FD40  2A                 	db	42
   770  00FD41  2A                 	db	42
   771  00FD42  2A                 	db	42
   772  00FD43  2A                 	db	42
   773  00FD44  2A                 	db	42
   774  00FD45  2A                 	db	42
   775  00FD46  2A                 	db	42
   776  00FD47  2A                 	db	42
   777  00FD48  2A                 	db	42
   778  00FD49  2A                 	db	42
   779  00FD4A  2A                 	db	42
   780  00FD4B  2A                 	db	42
   781  00FD4C  2A                 	db	42
   782  00FD4D  2A                 	db	42
   783  00FD4E  2A                 	db	42
   784  00FD4F  2A                 	db	42
   785  00FD50  2A                 	db	42
   786  00FD51  2A                 	db	42
   787  00FD52  0D                 	db	13
   788  00FD53  0A                 	db	10
   789  00FD54  20                 	db	32
   790  00FD55  20                 	db	32
   791  00FD56  20                 	db	32
   792  00FD57  20                 	db	32
   793  00FD58  20                 	db	32
   794  00FD59  20                 	db	32
   795  00FD5A  20                 	db	32
   796  00FD5B  20                 	db	32
   797  00FD5C  20                 	db	32
   798  00FD5D  20                 	db	32
   799  00FD5E  20                 	db	32
   800  00FD5F  20                 	db	32
   801  00FD60  20                 	db	32
   802  00FD61  20                 	db	32
   803  00FD62  20                 	db	32
   804  00FD63  20                 	db	32
   805  00FD64  20                 	db	32
   806  00FD65  20                 	db	32
   807  00FD66  4D                 	db	77
   808  00FD67  45                 	db	69
   809  00FD68  52                 	db	82
   810  00FD69  43                 	db	67
   811  00FD6A  55                 	db	85
   812  00FD6B  52                 	db	82
   813  00FD6C  59                 	db	89
   814  00FD6D  20                 	db	32
   815  00FD6E  53                 	db	83
   816  00FD6F  59                 	db	89
   817  00FD70  53                 	db	83
   818  00FD71  54                 	db	84
   819  00FD72  45                 	db	69
   820  00FD73  4D                 	db	77
   821  00FD74  0D                 	db	13
   822  00FD75  0A                 	db	10
   823  00FD76  2A                 	db	42
   824  00FD77  2A                 	db	42
   825  00FD78  2A                 	db	42
   826  00FD79  2A                 	db	42
   827  00FD7A  2A                 	db	42
   828  00FD7B  2A                 	db	42
   829  00FD7C  2A                 	db	42
   830  00FD7D  2A                 	db	42
   831  00FD7E  2A                 	db	42
   832  00FD7F  2A                 	db	42
   833  00FD80  2A                 	db	42
   834  00FD81  2A                 	db	42
   835  00FD82  2A                 	db	42
   836  00FD83  2A                 	db	42
   837  00FD84  2A                 	db	42
   838  00FD85  2A                 	db	42
   839  00FD86  2A                 	db	42
   840  00FD87  2A                 	db	42
   841  00FD88  2A                 	db	42
   842  00FD89  2A                 	db	42
   843  00FD8A  2A                 	db	42
   844  00FD8B  2A                 	db	42
   845  00FD8C  2A                 	db	42
   846  00FD8D  2A                 	db	42
   847  00FD8E  2A                 	db	42
   848  00FD8F  2A                 	db	42
   849  00FD90  2A                 	db	42
   850  00FD91  2A                 	db	42
   851  00FD92  2A                 	db	42
   852  00FD93  2A                 	db	42
   853  00FD94  2A                 	db	42
   854  00FD95  2A                 	db	42
   855  00FD96  2A                 	db	42
   856  00FD97  2A                 	db	42
   857  00FD98  2A                 	db	42
   858  00FD99  2A                 	db	42
   859  00FD9A  2A                 	db	42
   860  00FD9B  2A                 	db	42
   861  00FD9C  2A                 	db	42
   862  00FD9D  2A                 	db	42
   863  00FD9E  2A                 	db	42
   864  00FD9F  2A                 	db	42
   865  00FDA0  2A                 	db	42
   866  00FDA1  2A                 	db	42
   867  00FDA2  2A                 	db	42
   868  00FDA3  2A                 	db	42
   869  00FDA4  2A                 	db	42
   870  00FDA5  2A                 	db	42
   871  00FDA6  2A                 	db	42
   872  00FDA7  0D                 	db	13
   873  00FDA8  0A                 	db	10
   874  00FDA9  00                 	db	0
   875  00FDAA                     __end_of_Welcome:
   876                           	opt stack 0
   877  00FDAA                     _configDescriptor1:
   878                           	opt stack 0
   879  00FDAA  09                 	db	9
   880  00FDAB  02                 	db	2
   881  00FDAC  43                 	db	67
   882  00FDAD  00                 	db	0
   883  00FDAE  02                 	db	2
   884  00FDAF  01                 	db	1
   885  00FDB0  00                 	db	0
   886  00FDB1  C0                 	db	192
   887  00FDB2  32                 	db	50
   888  00FDB3  09                 	db	9
   889  00FDB4  04                 	db	4
   890  00FDB5  00                 	db	0
   891  00FDB6  00                 	db	0
   892  00FDB7  01                 	db	1
   893  00FDB8  02                 	db	2
   894  00FDB9  02                 	db	2
   895  00FDBA  01                 	db	1
   896  00FDBB  00                 	db	0
   897  00FDBC  05                 	db	5
   898  00FDBD  24                 	db	36
   899  00FDBE  00                 	db	0
   900  00FDBF  10                 	db	16
   901  00FDC0  01                 	db	1
   902  00FDC1  04                 	db	4
   903  00FDC2  24                 	db	36
   904  00FDC3  02                 	db	2
   905  00FDC4  02                 	db	2
   906  00FDC5  05                 	db	5
   907  00FDC6  24                 	db	36
   908  00FDC7  06                 	db	6
   909  00FDC8  00                 	db	0
   910  00FDC9  01                 	db	1
   911  00FDCA  05                 	db	5
   912  00FDCB  24                 	db	36
   913  00FDCC  01                 	db	1
   914  00FDCD  00                 	db	0
   915  00FDCE  01                 	db	1
   916  00FDCF  07                 	db	7
   917  00FDD0  05                 	db	5
   918  00FDD1  81                 	db	129
   919  00FDD2  03                 	db	3
   920  00FDD3  08                 	db	8
   921  00FDD4  00                 	db	0
   922  00FDD5  02                 	db	2
   923  00FDD6  09                 	db	9
   924  00FDD7  04                 	db	4
   925  00FDD8  01                 	db	1
   926  00FDD9  00                 	db	0
   927  00FDDA  02                 	db	2
   928  00FDDB  0A                 	db	10
   929  00FDDC  00                 	db	0
   930  00FDDD  00                 	db	0
   931  00FDDE  00                 	db	0
   932  00FDDF  07                 	db	7
   933  00FDE0  05                 	db	5
   934  00FDE1  02                 	db	2
   935  00FDE2  02                 	db	2
   936  00FDE3  40                 	db	64
   937  00FDE4  00                 	db	0
   938  00FDE5  00                 	db	0
   939  00FDE6  07                 	db	7
   940  00FDE7  05                 	db	5
   941  00FDE8  82                 	db	130
   942  00FDE9  02                 	db	2
   943  00FDEA  40                 	db	64
   944  00FDEB  00                 	db	0
   945  00FDEC  00                 	db	0
   946  00FDED                     __end_of_configDescriptor1:
   947                           	opt stack 0
   948  00FDED                     _sd002:
   949                           	opt stack 0
   950  00FDED  26                 	db	38
   951  00FDEE  03                 	db	3
   952  00FDEF  0054               	dw	84
   953  00FDF1  0065               	dw	101
   954  00FDF3  0072               	dw	114
   955  00FDF5  006D               	dw	109
   956  00FDF7  0069               	dw	105
   957  00FDF9  006E               	dw	110
   958  00FDFB  0061               	dw	97
   959  00FDFD  006C               	dw	108
   960  00FDFF  0020               	dw	32
   961  00FE01  0049               	dw	73
   962  00FE03  006E               	dw	110
   963  00FE05  0074               	dw	116
   964  00FE07  0065               	dw	101
   965  00FE09  0072               	dw	114
   966  00FE0B  0066               	dw	102
   967  00FE0D  0061               	dw	97
   968  00FE0F  0063               	dw	99
   969  00FE11  0065               	dw	101
   970  00FE13                     __end_of_sd002:
   971                           	opt stack 0
   972  00FE13                     _sd001:
   973                           	opt stack 0
   974  00FE13  1E                 	db	30
   975  00FE14  03                 	db	3
   976  00FE15  004D               	dw	77
   977  00FE17  0065               	dw	101
   978  00FE19  0072               	dw	114
   979  00FE1B  0063               	dw	99
   980  00FE1D  0075               	dw	117
   981  00FE1F  0072               	dw	114
   982  00FE21  0079               	dw	121
   983  00FE23  0020               	dw	32
   984  00FE25  0053               	dw	83
   985  00FE27  0079               	dw	121
   986  00FE29  0073               	dw	115
   987  00FE2B  0074               	dw	116
   988  00FE2D  0065               	dw	101
   989  00FE2F  006D               	dw	109
   990  00FE31                     __end_of_sd001:
   991                           	opt stack 0
   992  00FE31                     _MsgReady:
   993                           	opt stack 0
   994  00FE31  0D                 	db	13
   995  00FE32  0A                 	db	10
   996  00FE33  53                 	db	83
   997  00FE34  79                 	db	121
   998  00FE35  73                 	db	115
   999  00FE36  74                 	db	116
  1000  00FE37  65                 	db	101
  1001  00FE38  6D                 	db	109
  1002  00FE39  20                 	db	32
  1003  00FE3A  52                 	db	82
  1004  00FE3B  65                 	db	101
  1005  00FE3C  61                 	db	97
  1006  00FE3D  64                 	db	100
  1007  00FE3E  79                 	db	121
  1008  00FE3F  2E                 	db	46
  1009  00FE40  2E                 	db	46
  1010  00FE41  2E                 	db	46
  1011  00FE42  20                 	db	32
  1012  00FE43  0D                 	db	13
  1013  00FE44  0A                 	db	10
  1014  00FE45  0D                 	db	13
  1015  00FE46  0A                 	db	10
  1016  00FE47  00                 	db	0
  1017  00FE48                     __end_of_MsgReady:
  1018                           	opt stack 0
  1019  00FE48                     _device_dsc:
  1020                           	opt stack 0
  1021  00FE48  12                 	db	18
  1022  00FE49  01                 	db	1
  1023  00FE4A  0200               	dw	512
  1024  00FE4C  02                 	db	2
  1025  00FE4D  00                 	db	0
  1026  00FE4E  00                 	db	0
  1027  00FE4F  08                 	db	8
  1028  00FE50  04D8               	dw	1240
  1029  00FE52  000A               	dw	10
  1030  00FE54  0100               	dw	256
  1031  00FE56  01                 	db	1
  1032  00FE57  02                 	db	2
  1033  00FE58  00                 	db	0
  1034  00FE59  01                 	db	1
  1035  00FE5A                     __end_of_device_dsc:
  1036                           	opt stack 0
  1037  00FE5A                     _sd000:
  1038                           	opt stack 0
  1039  00FE5A  04                 	db	4
  1040  00FE5B  03                 	db	3
  1041  00FE5C  0409               	dw	1033
  1042  00FE5E                     __end_of_sd000:
  1043                           	opt stack 0
  1044  0000                     _RPINR1	set	3815
  1045  0000                     _UEP0bits	set	3878
  1046  0000                     _UIEbits	set	3894
  1047  0000                     _UADDR	set	3896
  1048  0000                     _UIE	set	3894
  1049  0000                     _UEIE	set	3895
  1050  0000                     _UCFG	set	3897
  1051  0000                     _RTCCAL	set	3902
  1052  0000                     _PADCFG1bits	set	3900
  1053  0000                     _RTCCFGbits	set	3903
  1054  0000                     _DSCONLbits	set	3916
  1055  0000                     _DSGPR1	set	3919
  1056  0000                     _DSGPR0	set	3918
  1057  0000                     _DSCONHbits	set	3917
  1058  0000                     _ANCON1bits	set	3913
  1059  0000                     _UEP1	set	3879
  1060  0000                     _UEP0	set	3878
  1061  0000                     _T1CONbits	set	4045
  1062  0000                     _PORTDbits	set	3971
  1063  0000                     _USTAT	set	3940
  1064  0000                     _PIR2bits	set	4001
  1065  0000                     _UCON	set	3941
  1066  0000                     _UIRbits	set	3938
  1067  0000                     _UCONbits	set	3941
  1068  0000                     _UIR	set	3938
  1069  0000                     _UEIR	set	3939
  1070  0000                     _PIE2bits	set	4000
  1071  0000                     _BAUDCON2	set	3964
  1072  0000                     _RCSTA2	set	3996
  1073  0000                     _BAUDCON1	set	3966
  1074  0000                     _RCSTA1	set	4012
  1075  0000                     _TRISCbits	set	3988
  1076  0000                     _TXSTA2	set	4008
  1077  0000                     _TXSTA1	set	4013
  1078  0000                     _RCREG2	set	4010
  1079  0000                     _RCREG1	set	4015
  1080  0000                     _TXREG2	set	4009
  1081  0000                     _TXREG1	set	4014
  1082  0000                     _SPBRG2	set	4011
  1083  0000                     _SPBRGH2	set	3965
  1084  0000                     _SPBRG1	set	4016
  1085  0000                     _SPBRGH1	set	3967
  1086  0000                     _PR4	set	3959
  1087  0000                     _PR2	set	4043
  1088  0000                     _PIE1bits	set	3997
  1089  0000                     _IPR1bits	set	3999
  1090  0000                     _T4CONbits	set	3958
  1091  0000                     _T2CONbits	set	4042
  1092  0000                     _ALRMVALL	set	3982
  1093  0000                     _ALRMVALH	set	3983
  1094  0000                     _RTCVALH	set	3993
  1095  0000                     _RTCVALL	set	3992
  1096  0000                     _ALRMRPTbits	set	3984
  1097  0000                     _ALRMCFGbits	set	3985
  1098  0000                     _PIE3bits	set	4003
  1099  0000                     _IPR3bits	set	4005
  1100  0000                     _OSCCONbits	set	4051
  1101  0000                     _PORTEbits	set	3972
  1102  0000                     _TRISEbits	set	3990
  1103  0000                     _WDTCONbits	set	4032
  1104  0000                     _INTCON2bits	set	4081
  1105  0000                     _TRISBbits	set	3987
  1106  0000                     _OSCTUNEbits	set	3995
  1107  0000                     _SSP2CON1	set	3954
  1108  0000                     _TRISDbits	set	3989
  1109  0000                     _SSP2BUF	set	3957
  1110  0000                     _SSP2CON2bits	set	3953
  1111  0000                     _SSP2STAT	set	3955
  1112  0000                     _SSP2CON2	set	3953
  1113  0000                     _SSP2ADD	set	3956
  1114  0000                     _PIR1bits	set	3998
  1115  0000                     _PIR3bits	set	4004
  1116  0000                     _INTCON3bits	set	4080
  1117  0000                     _INTCONbits	set	4082
  1118  0000                     _RCONbits	set	4048
  1119  00FE5E                     STR_21:
  1120  00FE5E  20                 	db	32
  1121  00FE5F  4C                 	db	76	;'L'
  1122  00FE60  61                 	db	97	;'a'
  1123  00FE61  7A                 	db	122	;'z'
  1124  00FE62  79                 	db	121	;'y'
  1125  00FE63  20                 	db	32
  1126  00FE64  64                 	db	100	;'d'
  1127  00FE65  65                 	db	101	;'e'
  1128  00FE66  76                 	db	118	;'v'
  1129  00FE67  69                 	db	105	;'i'
  1130  00FE68  63                 	db	99	;'c'
  1131  00FE69  65                 	db	101	;'e'
  1132  00FE6A  2E                 	db	46
  1133  00FE6B  2E                 	db	46
  1134  00FE6C  2E                 	db	46
  1135  00FE6D  79                 	db	121	;'y'
  1136  00FE6E  6F                 	db	111	;'o'
  1137  00FE6F  75                 	db	117	;'u'
  1138  00FE70  27                 	db	39
  1139  00FE71  76                 	db	118	;'v'
  1140  00FE72  65                 	db	101	;'e'
  1141  00FE73  20                 	db	32
  1142  00FE74  62                 	db	98	;'b'
  1143  00FE75  65                 	db	101	;'e'
  1144  00FE76  65                 	db	101	;'e'
  1145  00FE77  6E                 	db	110	;'n'
  1146  00FE78  20                 	db	32
  1147  00FE79  74                 	db	116	;'t'
  1148  00FE7A  69                 	db	105	;'i'
  1149  00FE7B  6D                 	db	109	;'m'
  1150  00FE7C  65                 	db	101	;'e'
  1151  00FE7D  64                 	db	100	;'d'
  1152  00FE7E  2D                 	db	45
  1153  00FE7F  6F                 	db	111	;'o'
  1154  00FE80  75                 	db	117	;'u'
  1155  00FE81  74                 	db	116	;'t'
  1156  00FE82  21                 	db	33
  1157  00FE83  21                 	db	33
  1158  00FE84  21                 	db	33
  1159  00FE85  0D                 	db	13
  1160  00FE86  0A                 	db	10
  1161  00FE87  00                 	db	0
  1162  00FE88                     STR_8:
  1163  00FE88  41                 	db	65	;'A'
  1164  00FE89  54                 	db	84	;'T'
  1165  00FE8A  2B                 	db	43
  1166  00FE8B  53                 	db	83	;'S'
  1167  00FE8C  41                 	db	65	;'A'
  1168  00FE8D  50                 	db	80	;'P'
  1169  00FE8E  42                 	db	66	;'B'
  1170  00FE8F  52                 	db	82	;'R'
  1171  00FE90  3D                 	db	61	;'='
  1172  00FE91  33                 	db	51	;'3'
  1173  00FE92  2C                 	db	44
  1174  00FE93  31                 	db	49	;'1'
  1175  00FE94  2C                 	db	44
  1176  00FE95  22                 	db	34
  1177  00FE96  43                 	db	67	;'C'
  1178  00FE97  6F                 	db	111	;'o'
  1179  00FE98  6E                 	db	110	;'n'
  1180  00FE99  74                 	db	116	;'t'
  1181  00FE9A  79                 	db	121	;'y'
  1182  00FE9B  70                 	db	112	;'p'
  1183  00FE9C  65                 	db	101	;'e'
  1184  00FE9D  22                 	db	34
  1185  00FE9E  2C                 	db	44
  1186  00FE9F  22                 	db	34
  1187  00FEA0  47                 	db	71	;'G'
  1188  00FEA1  50                 	db	80	;'P'
  1189  00FEA2  52                 	db	82	;'R'
  1190  00FEA3  53                 	db	83	;'S'
  1191  00FEA4  22                 	db	34
  1192  00FEA5  0D                 	db	13
  1193  00FEA6  00                 	db	0
  1194  00FEA7                     STR_14:
  1195  00FEA7  41                 	db	65	;'A'
  1196  00FEA8  54                 	db	84	;'T'
  1197  00FEA9  2B                 	db	43
  1198  00FEAA  48                 	db	72	;'H'
  1199  00FEAB  54                 	db	84	;'T'
  1200  00FEAC  54                 	db	84	;'T'
  1201  00FEAD  50                 	db	80	;'P'
  1202  00FEAE  50                 	db	80	;'P'
  1203  00FEAF  41                 	db	65	;'A'
  1204  00FEB0  52                 	db	82	;'R'
  1205  00FEB1  41                 	db	65	;'A'
  1206  00FEB2  3D                 	db	61	;'='
  1207  00FEB3  22                 	db	34
  1208  00FEB4  43                 	db	67	;'C'
  1209  00FEB5  49                 	db	73	;'I'
  1210  00FEB6  44                 	db	68	;'D'
  1211  00FEB7  22                 	db	34
  1212  00FEB8  2C                 	db	44
  1213  00FEB9  31                 	db	49	;'1'
  1214  00FEBA  0D                 	db	13
  1215  00FEBB  00                 	db	0
  1216  00FEBC                     STR_9:
  1217  00FEBC  41                 	db	65	;'A'
  1218  00FEBD  54                 	db	84	;'T'
  1219  00FEBE  2B                 	db	43
  1220  00FEBF  53                 	db	83	;'S'
  1221  00FEC0  41                 	db	65	;'A'
  1222  00FEC1  50                 	db	80	;'P'
  1223  00FEC2  42                 	db	66	;'B'
  1224  00FEC3  52                 	db	82	;'R'
  1225  00FEC4  3D                 	db	61	;'='
  1226  00FEC5  33                 	db	51	;'3'
  1227  00FEC6  2C                 	db	44
  1228  00FEC7  31                 	db	49	;'1'
  1229  00FEC8  2C                 	db	44
  1230  00FEC9  22                 	db	34
  1231  00FECA  41                 	db	65	;'A'
  1232  00FECB  50                 	db	80	;'P'
  1233  00FECC  4E                 	db	78	;'N'
  1234  00FECD  22                 	db	34
  1235  00FECE  2C                 	db	44
  1236  00FECF  22                 	db	34
  1237  00FED0  00                 	db	0
  1238  00FED1                     STR_23:
  1239  00FED1  46                 	db	70	;'F'
  1240  00FED2  72                 	db	114	;'r'
  1241  00FED3  61                 	db	97	;'a'
  1242  00FED4  6D                 	db	109	;'m'
  1243  00FED5  65                 	db	101	;'e'
  1244  00FED6  77                 	db	119	;'w'
  1245  00FED7  6F                 	db	111	;'o'
  1246  00FED8  72                 	db	114	;'r'
  1247  00FED9  6B                 	db	107	;'k'
  1248  00FEDA  20                 	db	32
  1249  00FEDB  56                 	db	86	;'V'
  1250  00FEDC  65                 	db	101	;'e'
  1251  00FEDD  72                 	db	114	;'r'
  1252  00FEDE  73                 	db	115	;'s'
  1253  00FEDF  69                 	db	105	;'i'
  1254  00FEE0  6F                 	db	111	;'o'
  1255  00FEE1  6E                 	db	110	;'n'
  1256  00FEE2  3A                 	db	58	;':'
  1257  00FEE3  20                 	db	32
  1258  00FEE4  00                 	db	0
  1259  00FEE5                     STR_15:
  1260  00FEE5  41                 	db	65	;'A'
  1261  00FEE6  54                 	db	84	;'T'
  1262  00FEE7  2B                 	db	43
  1263  00FEE8  48                 	db	72	;'H'
  1264  00FEE9  54                 	db	84	;'T'
  1265  00FEEA  54                 	db	84	;'T'
  1266  00FEEB  50                 	db	80	;'P'
  1267  00FEEC  50                 	db	80	;'P'
  1268  00FEED  41                 	db	65	;'A'
  1269  00FEEE  52                 	db	82	;'R'
  1270  00FEEF  41                 	db	65	;'A'
  1271  00FEF0  3D                 	db	61	;'='
  1272  00FEF1  22                 	db	34
  1273  00FEF2  55                 	db	85	;'U'
  1274  00FEF3  52                 	db	82	;'R'
  1275  00FEF4  4C                 	db	76	;'L'
  1276  00FEF5  22                 	db	34
  1277  00FEF6  2C                 	db	44
  1278  00FEF7  22                 	db	34
  1279  00FEF8  00                 	db	0
  1280  00FEF9                     STR_30:
  1281  00FEF9  41                 	db	65	;'A'
  1282  00FEFA  54                 	db	84	;'T'
  1283  00FEFB  2B                 	db	43
  1284  00FEFC  43                 	db	67	;'C'
  1285  00FEFD  4D                 	db	77	;'M'
  1286  00FEFE  47                 	db	71	;'G'
  1287  00FEFF  44                 	db	68	;'D'
  1288  00FF00  41                 	db	65	;'A'
  1289  00FF01  3D                 	db	61	;'='
  1290  00FF02  44                 	db	68	;'D'
  1291  00FF03  45                 	db	69	;'E'
  1292  00FF04  4C                 	db	76	;'L'
  1293  00FF05  20                 	db	32
  1294  00FF06  41                 	db	65	;'A'
  1295  00FF07  4C                 	db	76	;'L'
  1296  00FF08  4C                 	db	76	;'L'
  1297  00FF09  0D                 	db	13
  1298  00FF0A  0A                 	db	10
  1299  00FF0B  00                 	db	0
  1300  00FF0C                     STR_27:
  1301  00FF0C  42                 	db	66	;'B'
  1302  00FF0D  75                 	db	117	;'u'
  1303  00FF0E  69                 	db	105	;'i'
  1304  00FF0F  6C                 	db	108	;'l'
  1305  00FF10  64                 	db	100	;'d'
  1306  00FF11  20                 	db	32
  1307  00FF12  44                 	db	68	;'D'
  1308  00FF13  61                 	db	97	;'a'
  1309  00FF14  74                 	db	116	;'t'
  1310  00FF15  65                 	db	101	;'e'
  1311  00FF16  3A                 	db	58	;':'
  1312  00FF17  20                 	db	32
  1313  00FF18  25                 	db	37
  1314  00FF19  73                 	db	115	;'s'
  1315  00FF1A  0D                 	db	13
  1316  00FF1B  0A                 	db	10
  1317  00FF1C  00                 	db	0
  1318  00FF1D                     STR_16:
  1319  00FF1D  41                 	db	65	;'A'
  1320  00FF1E  54                 	db	84	;'T'
  1321  00FF1F  2B                 	db	43
  1322  00FF20  48                 	db	72	;'H'
  1323  00FF21  54                 	db	84	;'T'
  1324  00FF22  54                 	db	84	;'T'
  1325  00FF23  50                 	db	80	;'P'
  1326  00FF24  41                 	db	65	;'A'
  1327  00FF25  43                 	db	67	;'C'
  1328  00FF26  54                 	db	84	;'T'
  1329  00FF27  49                 	db	73	;'I'
  1330  00FF28  4F                 	db	79	;'O'
  1331  00FF29  4E                 	db	78	;'N'
  1332  00FF2A  3D                 	db	61	;'='
  1333  00FF2B  30                 	db	48	;'0'
  1334  00FF2C  0D                 	db	13
  1335  00FF2D  00                 	db	0
  1336  00FF2E                     STR_29:
  1337  00FF2E  41                 	db	65	;'A'
  1338  00FF2F  54                 	db	84	;'T'
  1339  00FF30  2B                 	db	43
  1340  00FF31  43                 	db	67	;'C'
  1341  00FF32  4D                 	db	77	;'M'
  1342  00FF33  47                 	db	71	;'G'
  1343  00FF34  44                 	db	68	;'D'
  1344  00FF35  3D                 	db	61	;'='
  1345  00FF36  31                 	db	49	;'1'
  1346  00FF37  2C                 	db	44
  1347  00FF38  30                 	db	48	;'0'
  1348  00FF39  0D                 	db	13
  1349  00FF3A  0A                 	db	10
  1350  00FF3B  00                 	db	0
  1351  00FF3C  41                 	db	65	;'A'
  1352  00FF3D  54                 	db	84	;'T'
  1353  00FF3E  2B                 	db	43
  1354  00FF3F  48                 	db	72	;'H'
  1355  00FF40  54                 	db	84	;'T'
  1356  00FF41  54                 	db	84	;'T'
  1357  00FF42  50                 	db	80	;'P'
  1358  00FF43  53                 	db	83	;'S'
  1359  00FF44  53                 	db	83	;'S'
  1360  00FF45  4C                 	db	76	;'L'
  1361  00FF46  3D                 	db	61	;'='
  1362  00FF47  30                 	db	48	;'0'
  1363  00FF48  0D                 	db	13
  1364  00FF49  00                 	db	0
  1365  00FF4A                     STR_10:
  1366  00FF4A  41                 	db	65	;'A'
  1367  00FF4B  54                 	db	84	;'T'
  1368  00FF4C  2B                 	db	43
  1369  00FF4D  53                 	db	83	;'S'
  1370  00FF4E  41                 	db	65	;'A'
  1371  00FF4F  50                 	db	80	;'P'
  1372  00FF50  42                 	db	66	;'B'
  1373  00FF51  52                 	db	82	;'R'
  1374  00FF52  3D                 	db	61	;'='
  1375  00FF53  31                 	db	49	;'1'
  1376  00FF54  2C                 	db	44
  1377  00FF55  31                 	db	49	;'1'
  1378  00FF56  0D                 	db	13
  1379  00FF57  00                 	db	0
  1380  00FF58                     STR_11:
  1381  00FF58  41                 	db	65	;'A'
  1382  00FF59  54                 	db	84	;'T'
  1383  00FF5A  2B                 	db	43
  1384  00FF5B  53                 	db	83	;'S'
  1385  00FF5C  41                 	db	65	;'A'
  1386  00FF5D  50                 	db	80	;'P'
  1387  00FF5E  42                 	db	66	;'B'
  1388  00FF5F  52                 	db	82	;'R'
  1389  00FF60  3D                 	db	61	;'='
  1390  00FF61  32                 	db	50	;'2'
  1391  00FF62  2C                 	db	44
  1392  00FF63  31                 	db	49	;'1'
  1393  00FF64  0D                 	db	13
  1394  00FF65  00                 	db	0
  1395  00FF66                     STR_13:
  1396  00FF66  41                 	db	65	;'A'
  1397  00FF67  54                 	db	84	;'T'
  1398  00FF68  2B                 	db	43
  1399  00FF69  48                 	db	72	;'H'
  1400  00FF6A  54                 	db	84	;'T'
  1401  00FF6B  54                 	db	84	;'T'
  1402  00FF6C  50                 	db	80	;'P'
  1403  00FF6D  53                 	db	83	;'S'
  1404  00FF6E  53                 	db	83	;'S'
  1405  00FF6F  4C                 	db	76	;'L'
  1406  00FF70  3D                 	db	61	;'='
  1407  00FF71  31                 	db	49	;'1'
  1408  00FF72  0D                 	db	13
  1409  00FF73  00                 	db	0
  1410  00FF74                     STR_2:
  1411  00FF74  41                 	db	65	;'A'
  1412  00FF75  54                 	db	84	;'T'
  1413  00FF76  2B                 	db	43
  1414  00FF77  49                 	db	73	;'I'
  1415  00FF78  50                 	db	80	;'P'
  1416  00FF79  52                 	db	82	;'R'
  1417  00FF7A  3D                 	db	61	;'='
  1418  00FF7B  39                 	db	57	;'9'
  1419  00FF7C  36                 	db	54	;'6'
  1420  00FF7D  30                 	db	48	;'0'
  1421  00FF7E  30                 	db	48	;'0'
  1422  00FF7F  0D                 	db	13
  1423  00FF80  0A                 	db	10
  1424  00FF81  00                 	db	0
  1425  00FF82                     STR_17:
  1426  00FF82  41                 	db	65	;'A'
  1427  00FF83  54                 	db	84	;'T'
  1428  00FF84  2B                 	db	43
  1429  00FF85  48                 	db	72	;'H'
  1430  00FF86  54                 	db	84	;'T'
  1431  00FF87  54                 	db	84	;'T'
  1432  00FF88  50                 	db	80	;'P'
  1433  00FF89  52                 	db	82	;'R'
  1434  00FF8A  45                 	db	69	;'E'
  1435  00FF8B  41                 	db	65	;'A'
  1436  00FF8C  44                 	db	68	;'D'
  1437  00FF8D  0D                 	db	13
  1438  00FF8E  00                 	db	0
  1439  00FF8F                     STR_18:
  1440  00FF8F  41                 	db	65	;'A'
  1441  00FF90  54                 	db	84	;'T'
  1442  00FF91  2B                 	db	43
  1443  00FF92  48                 	db	72	;'H'
  1444  00FF93  54                 	db	84	;'T'
  1445  00FF94  54                 	db	84	;'T'
  1446  00FF95  50                 	db	80	;'P'
  1447  00FF96  54                 	db	84	;'T'
  1448  00FF97  45                 	db	69	;'E'
  1449  00FF98  52                 	db	82	;'R'
  1450  00FF99  4D                 	db	77	;'M'
  1451  00FF9A  0D                 	db	13
  1452  00FF9B  00                 	db	0
  1453  00FF9C                     STR_12:
  1454  00FF9C  41                 	db	65	;'A'
  1455  00FF9D  54                 	db	84	;'T'
  1456  00FF9E  2B                 	db	43
  1457  00FF9F  48                 	db	72	;'H'
  1458  00FFA0  54                 	db	84	;'T'
  1459  00FFA1  54                 	db	84	;'T'
  1460  00FFA2  50                 	db	80	;'P'
  1461  00FFA3  49                 	db	73	;'I'
  1462  00FFA4  4E                 	db	78	;'N'
  1463  00FFA5  49                 	db	73	;'I'
  1464  00FFA6  54                 	db	84	;'T'
  1465  00FFA7  0D                 	db	13
  1466  00FFA8  00                 	db	0
  1467  00FFA9                     STR_31:
  1468  00FFA9  41                 	db	65	;'A'
  1469  00FFAA  54                 	db	84	;'T'
  1470  00FFAB  2B                 	db	43
  1471  00FFAC  43                 	db	67	;'C'
  1472  00FFAD  4C                 	db	76	;'L'
  1473  00FFAE  49                 	db	73	;'I'
  1474  00FFAF  50                 	db	80	;'P'
  1475  00FFB0  3D                 	db	61	;'='
  1476  00FFB1  31                 	db	49	;'1'
  1477  00FFB2  0D                 	db	13
  1478  00FFB3  0A                 	db	10
  1479  00FFB4  00                 	db	0
  1480  00FFB5                     STR_28:
  1481  00FFB5  4D                 	db	77	;'M'
  1482  00FFB6  61                 	db	97	;'a'
  1483  00FFB7  72                 	db	114	;'r'
  1484  00FFB8  20                 	db	32
  1485  00FFB9  32                 	db	50	;'2'
  1486  00FFBA  30                 	db	48	;'0'
  1487  00FFBB  20                 	db	32
  1488  00FFBC  32                 	db	50	;'2'
  1489  00FFBD  30                 	db	48	;'0'
  1490  00FFBE  32                 	db	50	;'2'
  1491  00FFBF  32                 	db	50	;'2'
  1492  00FFC0  00                 	db	0
  1493  00FFC1                     STR_4:
  1494  00FFC1  41                 	db	65	;'A'
  1495  00FFC2  54                 	db	84	;'T'
  1496  00FFC3  2B                 	db	43
  1497  00FFC4  43                 	db	67	;'C'
  1498  00FFC5  4D                 	db	77	;'M'
  1499  00FFC6  47                 	db	71	;'G'
  1500  00FFC7  52                 	db	82	;'R'
  1501  00FFC8  3D                 	db	61	;'='
  1502  00FFC9  31                 	db	49	;'1'
  1503  00FFCA  0D                 	db	13
  1504  00FFCB  0A                 	db	10
  1505  00FFCC  00                 	db	0
  1506  00FFCD                     STR_5:
  1507  00FFCD  41                 	db	65	;'A'
  1508  00FFCE  54                 	db	84	;'T'
  1509  00FFCF  2B                 	db	43
  1510  00FFD0  43                 	db	67	;'C'
  1511  00FFD1  4D                 	db	77	;'M'
  1512  00FFD2  47                 	db	71	;'G'
  1513  00FFD3  53                 	db	83	;'S'
  1514  00FFD4  3D                 	db	61	;'='
  1515  00FFD5  22                 	db	34
  1516  00FFD6  00                 	db	0
  1517  00FFD7                     STR_32:
  1518  00FFD7  28                 	db	40
  1519  00FFD8  6E                 	db	110	;'n'
  1520  00FFD9  75                 	db	117	;'u'
  1521  00FFDA  6C                 	db	108	;'l'
  1522  00FFDB  6C                 	db	108	;'l'
  1523  00FFDC  29                 	db	41
  1524  00FFDD  00                 	db	0
  1525  00FFDE                     STR_3:
  1526  00FFDE  41                 	db	65	;'A'
  1527  00FFDF  54                 	db	84	;'T'
  1528  00FFE0  45                 	db	69	;'E'
  1529  00FFE1  30                 	db	48	;'0'
  1530  00FFE2  0D                 	db	13
  1531  00FFE3  0A                 	db	10
  1532  00FFE4  00                 	db	0
  1533  00FFE5                     STR_1:
  1534  00FFE5  41                 	db	65	;'A'
  1535  00FFE6  54                 	db	84	;'T'
  1536  00FFE7  0D                 	db	13
  1537  00FFE8  0A                 	db	10
  1538  00FFE9  00                 	db	0
  1539  00FFEA  41                 	db	65	;'A'
  1540  00FFEB  54                 	db	84	;'T'
  1541  00FFEC  41                 	db	65	;'A'
  1542  00FFED  0D                 	db	13
  1543  00FFEE  00                 	db	0
  1544  00FFEF                     STR_6:
  1545  00FFEF  41                 	db	65	;'A'
  1546  00FFF0  54                 	db	84	;'T'
  1547  00FFF1  48                 	db	72	;'H'
  1548  00FFF2  0D                 	db	13
  1549  00FFF3  00                 	db	0
  1550  00FFF4                     STR_24:
  1551  00FFF4  2E                 	db	46
  1552  00FFF5  00                 	db	0
  1553  0000                     
  1554                           ; #config settings
  1555  00FFF6  00                 	db	0	; dummy byte at the end
  1556  0000                     
  1557                           	psect	cinit
  1558  002950                     __pcinit:
  1559                           	opt stack 0
  1560  002950                     start_initialization:
  1561                           	opt stack 0
  1562  002950                     __initialization:
  1563                           	opt stack 0
  1564                           
  1565                           ; Initialize objects allocated to BANK5 (80 bytes)
  1566                           ; load TBLPTR registers with __pidataBANK5
  1567  002950  0EB8               	movlw	low __pidataBANK5
  1568  002952  6EF6               	movwf	tblptrl,c
  1569  002954  0E56               	movlw	high __pidataBANK5
  1570  002956  6EF7               	movwf	tblptrh,c
  1571  002958  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1572  00295A  6EF8               	movwf	tblptru,c
  1573  00295C  EE05  F0A4         	lfsr	0,__pdataBANK5
  1574  002960  EE10 F050          	lfsr	1,80
  1575  002964                     copy_data0:
  1576  002964  0009               	tblrd		*+
  1577  002966  CFF5 FFEE          	movff	tablat,postinc0
  1578  00296A  50E5               	movf	postdec1,w,c
  1579  00296C  50E1               	movf	fsr1l,w,c
  1580  00296E  E1FA               	bnz	copy_data0
  1581                           
  1582                           ; Initialize objects allocated to BANK3 (63 bytes)
  1583                           ; load TBLPTR registers with __pidataBANK3
  1584  002970  0ECE               	movlw	low __pidataBANK3
  1585  002972  6EF6               	movwf	tblptrl,c
  1586  002974  0E5B               	movlw	high __pidataBANK3
  1587  002976  6EF7               	movwf	tblptrh,c
  1588  002978  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1589  00297A  6EF8               	movwf	tblptru,c
  1590  00297C  EE03  F0C0         	lfsr	0,__pdataBANK3
  1591  002980  EE10 F03F          	lfsr	1,63
  1592  002984                     copy_data1:
  1593  002984  0009               	tblrd		*+
  1594  002986  CFF5 FFEE          	movff	tablat,postinc0
  1595  00298A  50E5               	movf	postdec1,w,c
  1596  00298C  50E1               	movf	fsr1l,w,c
  1597  00298E  E1FA               	bnz	copy_data1
  1598                           
  1599                           ; Initialize objects allocated to BANK2 (13 bytes)
  1600                           ; load TBLPTR registers with __pidataBANK2
  1601  002990  0E96               	movlw	low __pidataBANK2
  1602  002992  6EF6               	movwf	tblptrl,c
  1603  002994  0E64               	movlw	high __pidataBANK2
  1604  002996  6EF7               	movwf	tblptrh,c
  1605  002998  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1606  00299A  6EF8               	movwf	tblptru,c
  1607  00299C  EE02  F0F3         	lfsr	0,__pdataBANK2
  1608  0029A0  EE10 F00D          	lfsr	1,13
  1609  0029A4                     copy_data2:
  1610  0029A4  0009               	tblrd		*+
  1611  0029A6  CFF5 FFEE          	movff	tablat,postinc0
  1612  0029AA  50E5               	movf	postdec1,w,c
  1613  0029AC  50E1               	movf	fsr1l,w,c
  1614  0029AE  E1FA               	bnz	copy_data2
  1615                           
  1616                           ; Initialize objects allocated to BANK1 (2 bytes)
  1617                           ; load TBLPTR registers with __pidataBANK1
  1618  0029B0  0E12               	movlw	low __pidataBANK1
  1619  0029B2  6EF6               	movwf	tblptrl,c
  1620  0029B4  0E65               	movlw	high __pidataBANK1
  1621  0029B6  6EF7               	movwf	tblptrh,c
  1622  0029B8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1623  0029BA  6EF8               	movwf	tblptru,c
  1624  0029BC  0009               	tblrd		*+	;fetch initializer
  1625  0029BE  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1626  0029C2  0009               	tblrd		*+	;fetch initializer
  1627  0029C4  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1628                           
  1629                           ; Initialize objects allocated to BANK4 (23 bytes)
  1630                           ; load TBLPTR registers with __pidataBANK4
  1631  0029C8  0E7E               	movlw	low __pidataBANK4
  1632  0029CA  6EF6               	movwf	tblptrl,c
  1633  0029CC  0E63               	movlw	high __pidataBANK4
  1634  0029CE  6EF7               	movwf	tblptrh,c
  1635  0029D0  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1636  0029D2  6EF8               	movwf	tblptru,c
  1637  0029D4  EE04  F0E5         	lfsr	0,__pdataBANK4
  1638  0029D8  EE10 F017          	lfsr	1,23
  1639  0029DC                     copy_data3:
  1640  0029DC  0009               	tblrd		*+
  1641  0029DE  CFF5 FFEE          	movff	tablat,postinc0
  1642  0029E2  50E5               	movf	postdec1,w,c
  1643  0029E4  50E1               	movf	fsr1l,w,c
  1644  0029E6  E1FA               	bnz	copy_data3
  1645                           
  1646                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1647  0029E8  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1648  0029EC  EE13 F020          	lfsr	1,800
  1649  0029F0                     clear_0:
  1650  0029F0  6AEE               	clrf	postinc0,c
  1651  0029F2  50E5               	movf	postdec1,w,c
  1652  0029F4  50E1               	movf	fsr1l,w,c
  1653  0029F6  E1FC               	bnz	clear_0
  1654  0029F8  50E2               	movf	fsr1h,w,c
  1655  0029FA  E1FA               	bnz	clear_0
  1656                           
  1657                           ; Clear objects allocated to BANK9 (200 bytes)
  1658  0029FC  EE09  F000         	lfsr	0,__pbssBANK9
  1659  002A00  0EC8               	movlw	200
  1660  002A02                     clear_1:
  1661  002A02  6AEE               	clrf	postinc0,c
  1662  002A04  06E8               	decf	wreg,f,c
  1663  002A06  E1FD               	bnz	clear_1
  1664                           
  1665                           ; Clear objects allocated to BANK8 (200 bytes)
  1666  002A08  EE08  F000         	lfsr	0,__pbssBANK8
  1667  002A0C  0EC8               	movlw	200
  1668  002A0E                     clear_2:
  1669  002A0E  6AEE               	clrf	postinc0,c
  1670  002A10  06E8               	decf	wreg,f,c
  1671  002A12  E1FD               	bnz	clear_2
  1672                           
  1673                           ; Clear objects allocated to BANK7 (246 bytes)
  1674  002A14  EE07  F000         	lfsr	0,__pbssBANK7
  1675  002A18  0EF6               	movlw	246
  1676  002A1A                     clear_3:
  1677  002A1A  6AEE               	clrf	postinc0,c
  1678  002A1C  06E8               	decf	wreg,f,c
  1679  002A1E  E1FD               	bnz	clear_3
  1680                           
  1681                           ; Clear objects allocated to BANK6 (220 bytes)
  1682  002A20  EE06  F000         	lfsr	0,__pbssBANK6
  1683  002A24  0EDC               	movlw	220
  1684  002A26                     clear_4:
  1685  002A26  6AEE               	clrf	postinc0,c
  1686  002A28  06E8               	decf	wreg,f,c
  1687  002A2A  E1FD               	bnz	clear_4
  1688                           
  1689                           ; Clear objects allocated to BANK5 (164 bytes)
  1690  002A2C  EE05  F000         	lfsr	0,__pbssBANK5
  1691  002A30  0EA4               	movlw	164
  1692  002A32                     clear_5:
  1693  002A32  6AEE               	clrf	postinc0,c
  1694  002A34  06E8               	decf	wreg,f,c
  1695  002A36  E1FD               	bnz	clear_5
  1696                           
  1697                           ; Clear objects allocated to BANK3 (192 bytes)
  1698  002A38  EE03  F000         	lfsr	0,__pbssBANK3
  1699  002A3C  0EC0               	movlw	192
  1700  002A3E                     clear_6:
  1701  002A3E  6AEE               	clrf	postinc0,c
  1702  002A40  06E8               	decf	wreg,f,c
  1703  002A42  E1FD               	bnz	clear_6
  1704                           
  1705                           ; Clear objects allocated to BANK2 (43 bytes)
  1706  002A44  EE02  F0C8         	lfsr	0,__pbssBANK2
  1707  002A48  0E2B               	movlw	43
  1708  002A4A                     clear_7:
  1709  002A4A  6AEE               	clrf	postinc0,c
  1710  002A4C  06E8               	decf	wreg,f,c
  1711  002A4E  E1FD               	bnz	clear_7
  1712                           
  1713                           ; Clear objects allocated to BANK1 (53 bytes)
  1714  002A50  EE01  F0C9         	lfsr	0,__pbssBANK1
  1715  002A54  0E35               	movlw	53
  1716  002A56                     clear_8:
  1717  002A56  6AEE               	clrf	postinc0,c
  1718  002A58  06E8               	decf	wreg,f,c
  1719  002A5A  E1FD               	bnz	clear_8
  1720                           
  1721                           ; Clear objects allocated to BANK4 (165 bytes)
  1722  002A5C  EE04  F040         	lfsr	0,__pbssBANK4
  1723  002A60  0EA5               	movlw	165
  1724  002A62                     clear_9:
  1725  002A62  6AEE               	clrf	postinc0,c
  1726  002A64  06E8               	decf	wreg,f,c
  1727  002A66  E1FD               	bnz	clear_9
  1728                           
  1729                           ; Clear objects allocated to BANK0 (51 bytes)
  1730  002A68  EE00  F0B0         	lfsr	0,__pbssBANK0
  1731  002A6C  0E33               	movlw	51
  1732  002A6E                     clear_10:
  1733  002A6E  6AEE               	clrf	postinc0,c
  1734  002A70  06E8               	decf	wreg,f,c
  1735  002A72  E1FD               	bnz	clear_10
  1736                           
  1737                           ; Clear objects allocated to COMRAM (31 bytes)
  1738  002A74  EE00  F023         	lfsr	0,__pbssCOMRAM
  1739  002A78  0E1F               	movlw	31
  1740  002A7A                     clear_11:
  1741  002A7A  6AEE               	clrf	postinc0,c
  1742  002A7C  06E8               	decf	wreg,f,c
  1743  002A7E  E1FD               	bnz	clear_11
  1744  002A80                     end_of_initialization:
  1745                           	opt stack 0
  1746  002A80                     __end_of__initialization:
  1747                           	opt stack 0
  1748  002A80  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1749  002A82  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1750  002A84  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1751  002A86  6EF8               	movwf	tblptru,c
  1752  002A88  0100               	movlb	0
  1753  002A8A  EF52  F032         	goto	_main	;jump to C main() function
  1754                           tblptru	equ	0xFF8
  1755                           tblptrh	equ	0xFF7
  1756                           tblptrl	equ	0xFF6
  1757                           tablat	equ	0xFF5
  1758                           postinc0	equ	0xFEE
  1759                           wreg	equ	0xFE8
  1760                           postdec1	equ	0xFE5
  1761                           fsr1h	equ	0xFE2
  1762                           fsr1l	equ	0xFE1
  1763                           
  1764                           	psect	bssCOMRAM
  1765  000023                     __pbssCOMRAM:
  1766                           	opt stack 0
  1767  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1768                           	opt stack 0
  1769  000023                     	ds	2
  1770  000025                     _USBDeferOUTDataStagePackets:
  1771                           	opt stack 0
  1772  000025                     	ds	1
  1773  000026                     _USBDeferINDataStagePackets:
  1774                           	opt stack 0
  1775  000026                     	ds	1
  1776  000027                     ConfigureModem@NextState:
  1777                           	opt stack 0
  1778  000027                     	ds	1
  1779  000028                     ConfigureModem@MdmConfigState:
  1780                           	opt stack 0
  1781  000028                     	ds	1
  1782  000029                     TurnOnModem@TurnOnMdmState:
  1783                           	opt stack 0
  1784  000029                     	ds	1
  1785  00002A                     CheckModem@CheckMdmSts:
  1786                           	opt stack 0
  1787  00002A                     	ds	1
  1788  00002B                     _ComChecCompleted:
  1789                           	opt stack 0
  1790  00002B                     	ds	1
  1791  00002C                     Uart_Uart1RxIsr@UartRxData:
  1792                           	opt stack 0
  1793  00002C                     	ds	1
  1794  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1795                           	opt stack 0
  1796  00002D                     	ds	1
  1797  00002E                     MdmCntSm@MdmCntState:
  1798                           	opt stack 0
  1799  00002E                     	ds	1
  1800  00002F                     RiSm@MdmDrvState:
  1801                           	opt stack 0
  1802  00002F                     	ds	1
  1803  000030                     _Mmd_RingIndicator:
  1804                           	opt stack 0
  1805  000030                     	ds	1
  1806  000031                     I2c_ReadData@ReadStatus:
  1807                           	opt stack 0
  1808  000031                     	ds	1
  1809  000032                     I2c_ReadData@TentativeCounter:
  1810                           	opt stack 0
  1811  000032                     	ds	1
  1812  000033                     I2c_ReadData@DataCounter:
  1813                           	opt stack 0
  1814  000033                     	ds	1
  1815  000034                     I2c_ReadData@I2cReadState:
  1816                           	opt stack 0
  1817  000034                     	ds	1
  1818  000035                     I2c_WriteData@WriteStatus:
  1819                           	opt stack 0
  1820  000035                     	ds	1
  1821  000036                     I2c_WriteData@TentativeCounter:
  1822                           	opt stack 0
  1823  000036                     	ds	1
  1824  000037                     I2c_WriteData@I2cNextState:
  1825                           	opt stack 0
  1826  000037                     	ds	1
  1827  000038                     I2c_WriteData@I2cWriteState:
  1828                           	opt stack 0
  1829  000038                     	ds	1
  1830  000039                     _MdmStsReady:
  1831                           	opt stack 0
  1832  000039                     	ds	1
  1833  00003A                     _NewStringMdmTerminal:
  1834                           	opt stack 0
  1835  00003A                     	ds	1
  1836  00003B                     _NewMdmEvtParserRequest:
  1837                           	opt stack 0
  1838  00003B                     	ds	1
  1839  00003C                     _NewStringReceived:
  1840                           	opt stack 0
  1841  00003C                     	ds	1
  1842  00003D                     _MdmResetRequest:
  1843                           	opt stack 0
  1844  00003D                     	ds	1
  1845  00003E                     _CallClosedEvent:
  1846                           	opt stack 0
  1847  00003E                     	ds	1
  1848  00003F                     _IncomingCallEvent:
  1849                           	opt stack 0
  1850  00003F                     	ds	1
  1851  000040                     _NewSmsEvent:
  1852                           	opt stack 0
  1853  000040                     	ds	1
  1854  000041                     _ActivateRiDetection:
  1855                           	opt stack 0
  1856  000041                     	ds	1
  1857                           tblptru	equ	0xFF8
  1858                           tblptrh	equ	0xFF7
  1859                           tblptrl	equ	0xFF6
  1860                           tablat	equ	0xFF5
  1861                           postinc0	equ	0xFEE
  1862                           wreg	equ	0xFE8
  1863                           postdec1	equ	0xFE5
  1864                           fsr1h	equ	0xFE2
  1865                           fsr1l	equ	0xFE1
  1866                           
  1867                           	psect	bssBANK0
  1868  0000B0                     __pbssBANK0:
  1869                           	opt stack 0
  1870  0000B0                     _inPipes:
  1871                           	opt stack 0
  1872  0000B0                     	ds	6
  1873  0000B6                     _pBDTEntryIn:
  1874                           	opt stack 0
  1875  0000B6                     	ds	6
  1876  0000BC                     _CDCDataOutHandle:
  1877                           	opt stack 0
  1878  0000BC                     	ds	2
  1879  0000BE                     _pBDTEntryEP0OutNext:
  1880                           	opt stack 0
  1881  0000BE                     	ds	2
  1882  0000C0                     _pBDTEntryEP0OutCurrent:
  1883                           	opt stack 0
  1884  0000C0                     	ds	2
  1885  0000C2                     _RxLen:
  1886                           	opt stack 0
  1887  0000C2                     	ds	2
  1888  0000C4                     _cdc_tx_len:
  1889                           	opt stack 0
  1890  0000C4                     	ds	1
  1891  0000C5                     _cdc_trf_state:
  1892                           	opt stack 0
  1893  0000C5                     	ds	1
  1894  0000C6                     _cdc_rx_len:
  1895                           	opt stack 0
  1896  0000C6                     	ds	1
  1897  0000C7                     _USBStatusStageEnabledFlag2:
  1898                           	opt stack 0
  1899  0000C7                     	ds	1
  1900  0000C8                     _USBStatusStageEnabledFlag1:
  1901                           	opt stack 0
  1902  0000C8                     	ds	1
  1903  0000C9                     _USBDeferStatusStagePacket:
  1904                           	opt stack 0
  1905  0000C9                     	ds	1
  1906  0000CA                     _USBStatusStageTimeoutCounter:
  1907                           	opt stack 0
  1908  0000CA                     	ds	1
  1909  0000CB                     _endpoint_number:
  1910                           	opt stack 0
  1911  0000CB                     	ds	1
  1912  0000CC                     _controlTransferState:
  1913                           	opt stack 0
  1914  0000CC                     	ds	1
  1915  0000CD                     _shortPacketStatus:
  1916                           	opt stack 0
  1917  0000CD                     	ds	1
  1918  0000CE                     _USBDeviceState:
  1919                           	opt stack 0
  1920  0000CE                     	ds	1
  1921  0000CF                     _I2cComSts:
  1922                           	opt stack 0
  1923  0000CF                     	ds	1
  1924  0000D0                     HttpGetMethod@GetMethodNextState:
  1925                           	opt stack 0
  1926  0000D0                     	ds	1
  1927  0000D1                     InitGprsNetwork@GprsNetInitNextState:
  1928                           	opt stack 0
  1929  0000D1                     	ds	1
  1930  0000D2                     _MdmStatus:
  1931                           	opt stack 0
  1932  0000D2                     	ds	1
  1933  0000D3                     _PhoneNumbLen:
  1934                           	opt stack 0
  1935  0000D3                     	ds	1
  1936  0000D4                     _SmsLen:
  1937                           	opt stack 0
  1938  0000D4                     	ds	1
  1939  0000D5                     _SystemState:
  1940                           	opt stack 0
  1941  0000D5                     	ds	1
  1942  0000D6                     _USTATcopy:
  1943                           	opt stack 0
  1944  0000D6                     	ds	1
  1945  0000D7                     _USBActiveConfiguration:
  1946                           	opt stack 0
  1947  0000D7                     	ds	1
  1948  0000D8                     _I2cReadDataEvt:
  1949                           	opt stack 0
  1950  0000D8                     	ds	1
  1951  0000D9                     _I2cWriteDataEvt:
  1952                           	opt stack 0
  1953  0000D9                     	ds	1
  1954  0000DA                     _GetMethod:
  1955                           	opt stack 0
  1956  0000DA                     	ds	1
  1957  0000DB                     _InitNetwork:
  1958                           	opt stack 0
  1959  0000DB                     	ds	1
  1960  0000DC                     _SmsTxtReady:
  1961                           	opt stack 0
  1962  0000DC                     	ds	1
  1963  0000DD                     _GetSmsText:
  1964                           	opt stack 0
  1965  0000DD                     	ds	1
  1966  0000DE                     _SmsEvent:
  1967                           	opt stack 0
  1968  0000DE                     	ds	1
  1969  0000DF                     _ClipEvent:
  1970                           	opt stack 0
  1971  0000DF                     	ds	1
  1972  0000E0                     _RingEvent:
  1973                           	opt stack 0
  1974  0000E0                     	ds	1
  1975  0000E1                     _SendSmsEvent:
  1976                           	opt stack 0
  1977  0000E1                     	ds	1
  1978  0000E2                     _MdmOnOffPulseRequest:
  1979                           	opt stack 0
  1980  0000E2                     	ds	1
  1981                           tblptru	equ	0xFF8
  1982                           tblptrh	equ	0xFF7
  1983                           tblptrl	equ	0xFF6
  1984                           tablat	equ	0xFF5
  1985                           postinc0	equ	0xFEE
  1986                           wreg	equ	0xFE8
  1987                           postdec1	equ	0xFE5
  1988                           fsr1h	equ	0xFE2
  1989                           fsr1l	equ	0xFE1
  1990                           
  1991                           	psect	bssBANK1
  1992  0001C9                     __pbssBANK1:
  1993                           	opt stack 0
  1994  0001C9                     _outPipes:
  1995                           	opt stack 0
  1996  0001C9                     	ds	8
  1997  0001D1                     _CDCDataInHandle:
  1998                           	opt stack 0
  1999  0001D1                     	ds	2
  2000  0001D3                     initFsm@currentState:
  2001                           	opt stack 0
  2002  0001D3                     	ds	1
  2003  0001D4                     initEeprom@currentState:
  2004                           	opt stack 0
  2005  0001D4                     	ds	1
  2006  0001D5                     initGprsModem@currentState:
  2007                           	opt stack 0
  2008  0001D5                     	ds	1
  2009  0001D6                     _memorizedNumbersCount:
  2010                           	opt stack 0
  2011  0001D6                     	ds	1
  2012  0001D7                     MyApp_Task@currentState:
  2013                           	opt stack 0
  2014  0001D7                     	ds	1
  2015  0001D8                     	ds	1
  2016  0001D9                     	ds	1
  2017  0001DA                     	ds	1
  2018  0001DB                     	ds	1
  2019  0001DC                     	ds	1
  2020  0001DD                     	ds	1
  2021  0001DE                     	ds	1
  2022  0001DF                     GsmGprsTerminal@SMS:
  2023                           	opt stack 0
  2024  0001DF                     	ds	1
  2025  0001E0                     	ds	1
  2026  0001E1                     _control_signal_bitmap:
  2027                           	opt stack 0
  2028  0001E1                     	ds	1
  2029  0001E2                     _cdc_mem_type:
  2030                           	opt stack 0
  2031  0001E2                     	ds	1
  2032  0001E3                     _USBTicksSinceSuspendEnd:
  2033                           	opt stack 0
  2034  0001E3                     	ds	1
  2035  0001E4                     _BothEP0OutUOWNsSet:
  2036                           	opt stack 0
  2037  0001E4                     	ds	1
  2038  0001E5                     _USBBusIsSuspended:
  2039                           	opt stack 0
  2040  0001E5                     	ds	1
  2041  0001E6                     _RemoteWakeup:
  2042                           	opt stack 0
  2043  0001E6                     	ds	1
  2044  0001E7                     I2cSlv_QueryI2cData@Ret:
  2045                           	opt stack 0
  2046  0001E7                     	ds	1
  2047  0001E8                     I2cSlv_QueryI2cData@I2cOpState:
  2048                           	opt stack 0
  2049  0001E8                     	ds	1
  2050  0001E9                     I2cSendMsgSm@I2cComState:
  2051                           	opt stack 0
  2052  0001E9                     	ds	1
  2053  0001EA                     _I2cBusStatus:
  2054                           	opt stack 0
  2055  0001EA                     	ds	1
  2056  0001EB                     HttpGetMethod@GetMOutSts:
  2057                           	opt stack 0
  2058  0001EB                     	ds	1
  2059  0001EC                     HttpGetMethod@GetMethodState:
  2060                           	opt stack 0
  2061  0001EC                     	ds	1
  2062  0001ED                     InitGprsNetwork@GprsNetInitState:
  2063                           	opt stack 0
  2064  0001ED                     	ds	1
  2065  0001EE                     _PostMethod:
  2066                           	opt stack 0
  2067  0001EE                     	ds	1
  2068  0001EF                     _HttpGetMethodSts:
  2069                           	opt stack 0
  2070  0001EF                     	ds	1
  2071  0001F0                     _GprsNetworkSts:
  2072                           	opt stack 0
  2073  0001F0                     	ds	1
  2074  0001F1                     _ApnLenLocal:
  2075                           	opt stack 0
  2076  0001F1                     	ds	1
  2077  0001F2                     SendSmsSm@SendSms_NextState:
  2078                           	opt stack 0
  2079  0001F2                     	ds	1
  2080  0001F3                     SendSmsSm@SendSms_State:
  2081                           	opt stack 0
  2082  0001F3                     	ds	1
  2083  0001F4                     GetSmsSm@GetSmsState:
  2084                           	opt stack 0
  2085  0001F4                     	ds	1
  2086  0001F5                     _AlarmEvent:
  2087                           	opt stack 0
  2088  0001F5                     	ds	1
  2089  0001F6                     _Led3OutSts:
  2090                           	opt stack 0
  2091  0001F6                     	ds	1
  2092  0001F7                     _Led3Sts:
  2093                           	opt stack 0
  2094  0001F7                     	ds	1
  2095  0001F8                     _Led2OutSts:
  2096                           	opt stack 0
  2097  0001F8                     	ds	1
  2098  0001F9                     _Led2Sts:
  2099                           	opt stack 0
  2100  0001F9                     	ds	1
  2101  0001FA                     _Led1OutSts:
  2102                           	opt stack 0
  2103  0001FA                     	ds	1
  2104  0001FB                     _Led1Sts:
  2105                           	opt stack 0
  2106  0001FB                     	ds	1
  2107  0001FC                     _ReadAddress:
  2108                           	opt stack 0
  2109  0001FC                     	ds	1
  2110  0001FD                     I2cDummyTx@DummyBuffer:
  2111                           	opt stack 0
  2112  0001FD                     	ds	1
  2113                           tblptru	equ	0xFF8
  2114                           tblptrh	equ	0xFF7
  2115                           tblptrl	equ	0xFF6
  2116                           tablat	equ	0xFF5
  2117                           postinc0	equ	0xFEE
  2118                           wreg	equ	0xFE8
  2119                           postdec1	equ	0xFE5
  2120                           fsr1h	equ	0xFE2
  2121                           fsr1l	equ	0xFE1
  2122                           
  2123                           	psect	dataBANK1
  2124  0001FE                     __pdataBANK1:
  2125                           	opt stack 0
  2126  0001FE                     _isMemoryEmpty:
  2127                           	opt stack 0
  2128  0001FE                     	ds	1
  2129  0001FF                     InitGprsNetwork@GprsInitSts:
  2130                           	opt stack 0
  2131  0001FF                     	ds	1
  2132                           tblptru	equ	0xFF8
  2133                           tblptrh	equ	0xFF7
  2134                           tblptrl	equ	0xFF6
  2135                           tablat	equ	0xFF5
  2136                           postinc0	equ	0xFEE
  2137                           wreg	equ	0xFE8
  2138                           postdec1	equ	0xFE5
  2139                           fsr1h	equ	0xFE2
  2140                           fsr1l	equ	0xFE1
  2141                           
  2142                           	psect	bssBANK2
  2143  0002C8                     __pbssBANK2:
  2144                           	opt stack 0
  2145  0002C8                     _pCDCDst:
  2146                           	opt stack 0
  2147  0002C8                     	ds	3
  2148  0002CB                     _pCDCSrc:
  2149                           	opt stack 0
  2150  0002CB                     	ds	3
  2151  0002CE                     _ep_data_out:
  2152                           	opt stack 0
  2153  0002CE                     	ds	3
  2154  0002D1                     _ep_data_in:
  2155                           	opt stack 0
  2156  0002D1                     	ds	3
  2157  0002D4                     _pDst:
  2158                           	opt stack 0
  2159  0002D4                     	ds	2
  2160  0002D6                     ConfigureModem@DelayCounter:
  2161                           	opt stack 0
  2162  0002D6                     	ds	2
  2163  0002D8                     ConfigureModem@DelayValueMs:
  2164                           	opt stack 0
  2165  0002D8                     	ds	2
  2166  0002DA                     TurnOnModem@Counter:
  2167                           	opt stack 0
  2168  0002DA                     	ds	2
  2169  0002DC                     UpdateSchFlag@InterruptCounter:
  2170                           	opt stack 0
  2171  0002DC                     	ds	2
  2172  0002DE                     MdmCntSm@Counter:
  2173                           	opt stack 0
  2174  0002DE                     	ds	2
  2175  0002E0                     RiSm@Counter:
  2176                           	opt stack 0
  2177  0002E0                     	ds	2
  2178  0002E2                     _ExtInt1IsrCallback:
  2179                           	opt stack 0
  2180  0002E2                     	ds	2
  2181  0002E4                     _ExtInt0IsrCallback:
  2182                           	opt stack 0
  2183  0002E4                     	ds	2
  2184  0002E6                     _RtccIsrCallback:
  2185                           	opt stack 0
  2186  0002E6                     	ds	2
  2187  0002E8                     _Tmr4IsrCallback:
  2188                           	opt stack 0
  2189  0002E8                     	ds	2
  2190  0002EA                     _Tmr2IsrCallback:
  2191                           	opt stack 0
  2192  0002EA                     	ds	2
  2193  0002EC                     Term_MainSm@TermMainSmState:
  2194                           	opt stack 0
  2195  0002EC                     	ds	1
  2196  0002ED                     Terminal@FormatOption:
  2197                           	opt stack 0
  2198  0002ED                     	ds	1
  2199  0002EE                     Terminal@SlaveAddr:
  2200                           	opt stack 0
  2201  0002EE                     	ds	1
  2202  0002EF                     Terminal@PackageLen:
  2203                           	opt stack 0
  2204  0002EF                     	ds	1
  2205  0002F0                     Terminal@TermState:
  2206                           	opt stack 0
  2207  0002F0                     	ds	1
  2208  0002F1                     _USBAlternateInterface:
  2209                           	opt stack 0
  2210  0002F1                     	ds	2
  2211                           tblptru	equ	0xFF8
  2212                           tblptrh	equ	0xFF7
  2213                           tblptrl	equ	0xFF6
  2214                           tablat	equ	0xFF5
  2215                           postinc0	equ	0xFEE
  2216                           wreg	equ	0xFE8
  2217                           postdec1	equ	0xFE5
  2218                           fsr1h	equ	0xFE2
  2219                           fsr1l	equ	0xFE1
  2220                           
  2221                           	psect	dataBANK2
  2222  0002F3                     __pdataBANK2:
  2223                           	opt stack 0
  2224  0002F3                     Terminal@EchoOption:
  2225                           	opt stack 0
  2226  0002F3                     	ds	1
  2227  0002F4                     _MainSystemTimebaseFlag:
  2228                           	opt stack 0
  2229  0002F4                     	ds	1
  2230  0002F5                     _ConnTimeout:
  2231                           	opt stack 0
  2232  0002F5                     	ds	11
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           postinc0	equ	0xFEE
  2238                           wreg	equ	0xFE8
  2239                           postdec1	equ	0xFE5
  2240                           fsr1h	equ	0xFE2
  2241                           fsr1l	equ	0xFE1
  2242                           
  2243                           	psect	bssBANK3
  2244  000300                     __pbssBANK3:
  2245                           	opt stack 0
  2246  000300                     _Rtcm_SystemDate:
  2247                           	opt stack 0
  2248  000300                     	ds	8
  2249  000308                     _Rtcm_RtccAlarm:
  2250                           	opt stack 0
  2251  000308                     	ds	6
  2252  00030E                     _pBDTEntryOut:
  2253                           	opt stack 0
  2254  00030E                     	ds	6
  2255  000314                     _BaudRateGen:
  2256                           	opt stack 0
  2257  000314                     	ds	4
  2258  000318                     _USB1msTickCount:
  2259                           	opt stack 0
  2260  000318                     	ds	4
  2261  00031C                     _OsTmr_OsTickCounter:
  2262                           	opt stack 0
  2263  00031C                     	ds	4
  2264  000320                     	ds	2
  2265  000322                     _UsbMasterPhoneNumberLen:
  2266                           	opt stack 0
  2267  000322                     	ds	2
  2268  000324                     _ApnLocal:
  2269                           	opt stack 0
  2270  000324                     	ds	2
  2271  000326                     _UartConfig:
  2272                           	opt stack 0
  2273  000326                     	ds	21
  2274  00033B                     I2cSlv_QueryI2cData@TimeoutTimer:
  2275                           	opt stack 0
  2276  00033B                     	ds	11
  2277  000346                     I2cSlv_QueryI2cData@QueryTimer:
  2278                           	opt stack 0
  2279  000346                     	ds	11
  2280  000351                     _I2cConfig:
  2281                           	opt stack 0
  2282  000351                     	ds	10
  2283  00035B                     _Led3Blink:
  2284                           	opt stack 0
  2285  00035B                     	ds	9
  2286  000364                     _Led2Blink:
  2287                           	opt stack 0
  2288  000364                     	ds	9
  2289  00036D                     _Led1Blink:
  2290                           	opt stack 0
  2291  00036D                     	ds	9
  2292  000376                     _dummy_encapsulated_cmd_response:
  2293                           	opt stack 0
  2294  000376                     	ds	8
  2295  00037E                     _line_coding:
  2296                           	opt stack 0
  2297  00037E                     	ds	7
  2298  000385                     _Led3Pulse:
  2299                           	opt stack 0
  2300  000385                     	ds	6
  2301  00038B                     _Led2Pulse:
  2302                           	opt stack 0
  2303  00038B                     	ds	6
  2304  000391                     _Led1Pulse:
  2305                           	opt stack 0
  2306  000391                     	ds	6
  2307  000397                     _I2cRxPacket:
  2308                           	opt stack 0
  2309  000397                     	ds	6
  2310  00039D                     _memoryPreamble:
  2311                           	opt stack 0
  2312  00039D                     	ds	5
  2313  0003A2                     _I2cTxPacket:
  2314                           	opt stack 0
  2315  0003A2                     	ds	5
  2316  0003A7                     _HttpGetDataLocal:
  2317                           	opt stack 0
  2318  0003A7                     	ds	5
  2319  0003AC                     Terminal@Addr:
  2320                           	opt stack 0
  2321  0003AC                     	ds	4
  2322  0003B0                     Terminal@Len:
  2323                           	opt stack 0
  2324  0003B0                     	ds	4
  2325  0003B4                     _AlCfg:
  2326                           	opt stack 0
  2327  0003B4                     	ds	4
  2328  0003B8                     _RtcConfig:
  2329                           	opt stack 0
  2330  0003B8                     	ds	4
  2331  0003BC                     _setupCallTicks:
  2332                           	opt stack 0
  2333  0003BC                     	ds	2
  2334  0003BE                     initGprsModem@modemCounter:
  2335                           	opt stack 0
  2336  0003BE                     	ds	2
  2337                           tblptru	equ	0xFF8
  2338                           tblptrh	equ	0xFF7
  2339                           tblptrl	equ	0xFF6
  2340                           tablat	equ	0xFF5
  2341                           postinc0	equ	0xFEE
  2342                           wreg	equ	0xFE8
  2343                           postdec1	equ	0xFE5
  2344                           fsr1h	equ	0xFE2
  2345                           fsr1l	equ	0xFE1
  2346                           
  2347                           	psect	dataBANK3
  2348  0003C0                     __pdataBANK3:
  2349                           	opt stack 0
  2350  0003C0                     ModemEvtParser@F9110:
  2351                           	opt stack 0
  2352  0003C0                     	ds	5
  2353  0003C5                     ModemEvtParser@F9108:
  2354                           	opt stack 0
  2355  0003C5                     	ds	5
  2356  0003CA                     ModemEvtParser@F9106:
  2357                           	opt stack 0
  2358  0003CA                     	ds	4
  2359  0003CE                     MyApp_Task@F9017:
  2360                           	opt stack 0
  2361  0003CE                     	ds	3
  2362  0003D1                     triggerRelay@F9009:
  2363                           	opt stack 0
  2364  0003D1                     	ds	2
  2365  0003D3                     Term_MainSm@TermDelay:
  2366                           	opt stack 0
  2367  0003D3                     	ds	11
  2368  0003DE                     _ConnWait:
  2369                           	opt stack 0
  2370  0003DE                     	ds	11
  2371  0003E9                     SendSmsSm@SwTimer:
  2372                           	opt stack 0
  2373  0003E9                     	ds	11
  2374  0003F4                     CheckModem@Timeout:
  2375                           	opt stack 0
  2376  0003F4                     	ds	11
  2377                           tblptru	equ	0xFF8
  2378                           tblptrh	equ	0xFF7
  2379                           tblptrl	equ	0xFF6
  2380                           tablat	equ	0xFF5
  2381                           postinc0	equ	0xFEE
  2382                           wreg	equ	0xFE8
  2383                           postdec1	equ	0xFE5
  2384                           fsr1h	equ	0xFE2
  2385                           fsr1l	equ	0xFE1
  2386                           
  2387                           	psect	bssBANK4
  2388  000440                     __pbssBANK4:
  2389                           	opt stack 0
  2390  000440                     _UsbMasterPhoneNumber:
  2391                           	opt stack 0
  2392  000440                     	ds	15
  2393  00044F                     	ds	10
  2394  000459                     _cdc_notice:
  2395                           	opt stack 0
  2396  000459                     	ds	10
  2397  000463                     Term_MainSm@Data:
  2398                           	opt stack 0
  2399  000463                     	ds	50
  2400  000495                     _smsText:
  2401                           	opt stack 0
  2402  000495                     	ds	20
  2403  0004A9                     _PhoneNumber:
  2404                           	opt stack 0
  2405  0004A9                     	ds	20
  2406  0004BD                     _EepromBuffer:
  2407                           	opt stack 0
  2408  0004BD                     	ds	15
  2409  0004CC                     _callerNumber:
  2410                           	opt stack 0
  2411  0004CC                     	ds	14
  2412  0004DA                     Terminal@SwTimer:
  2413                           	opt stack 0
  2414  0004DA                     	ds	11
  2415                           tblptru	equ	0xFF8
  2416                           tblptrh	equ	0xFF7
  2417                           tblptrl	equ	0xFF6
  2418                           tablat	equ	0xFF5
  2419                           postinc0	equ	0xFEE
  2420                           wreg	equ	0xFE8
  2421                           postdec1	equ	0xFE5
  2422                           fsr1h	equ	0xFE2
  2423                           fsr1l	equ	0xFE1
  2424                           
  2425                           	psect	dataBANK4
  2426  0004E5                     __pdataBANK4:
  2427                           	opt stack 0
  2428  0004E5                     	ds	13
  2429  0004F2                     ModemEvtParser@F9112:
  2430                           	opt stack 0
  2431  0004F2                     	ds	10
  2432                           tblptru	equ	0xFF8
  2433                           tblptrh	equ	0xFF7
  2434                           tblptrl	equ	0xFF6
  2435                           tablat	equ	0xFF5
  2436                           postinc0	equ	0xFEE
  2437                           wreg	equ	0xFE8
  2438                           postdec1	equ	0xFE5
  2439                           fsr1h	equ	0xFE2
  2440                           fsr1l	equ	0xFE1
  2441                           
  2442                           	psect	bssBANK5
  2443  000500                     __pbssBANK5:
  2444                           	opt stack 0
  2445  000500                     _cdc_data_rx:
  2446                           	opt stack 0
  2447  000500                     	ds	64
  2448  000540                     Terminal@TermRxBuffer:
  2449                           	opt stack 0
  2450  000540                     	ds	50
  2451  000572                     _MessageText:
  2452                           	opt stack 0
  2453  000572                     	ds	50
  2454                           tblptru	equ	0xFF8
  2455                           tblptrh	equ	0xFF7
  2456                           tblptrl	equ	0xFF6
  2457                           tablat	equ	0xFF5
  2458                           postinc0	equ	0xFEE
  2459                           wreg	equ	0xFE8
  2460                           postdec1	equ	0xFE5
  2461                           fsr1h	equ	0xFE2
  2462                           fsr1l	equ	0xFE1
  2463                           
  2464                           	psect	dataBANK5
  2465  0005A4                     __pdataBANK5:
  2466                           	opt stack 0
  2467  0005A4                     _TaskTable:
  2468                           	opt stack 0
  2469  0005A4                     	ds	80
  2470                           tblptru	equ	0xFF8
  2471                           tblptrh	equ	0xFF7
  2472                           tblptrl	equ	0xFF6
  2473                           tablat	equ	0xFF5
  2474                           postinc0	equ	0xFEE
  2475                           wreg	equ	0xFE8
  2476                           postdec1	equ	0xFE5
  2477                           fsr1h	equ	0xFE2
  2478                           fsr1l	equ	0xFE1
  2479                           
  2480                           	psect	bssBANK6
  2481  000600                     __pbssBANK6:
  2482                           	opt stack 0
  2483  000600                     _OsAlarms:
  2484                           	opt stack 0
  2485  000600                     	ds	220
  2486                           tblptru	equ	0xFF8
  2487                           tblptrh	equ	0xFF7
  2488                           tblptrl	equ	0xFF6
  2489                           tablat	equ	0xFF5
  2490                           postinc0	equ	0xFEE
  2491                           wreg	equ	0xFE8
  2492                           postdec1	equ	0xFE5
  2493                           fsr1h	equ	0xFE2
  2494                           fsr1l	equ	0xFE1
  2495                           
  2496                           	psect	bssBANK7
  2497  000700                     __pbssBANK7:
  2498                           	opt stack 0
  2499  000700                     _Mdm_SmsRx:
  2500                           	opt stack 0
  2501  000700                     	ds	102
  2502  000766                     Terminal@Payload:
  2503                           	opt stack 0
  2504  000766                     	ds	80
  2505  0007B6                     _cdc_data_tx:
  2506                           	opt stack 0
  2507  0007B6                     	ds	64
  2508                           tblptru	equ	0xFF8
  2509                           tblptrh	equ	0xFF7
  2510                           tblptrl	equ	0xFF6
  2511                           tablat	equ	0xFF5
  2512                           postinc0	equ	0xFEE
  2513                           wreg	equ	0xFE8
  2514                           postdec1	equ	0xFE5
  2515                           fsr1h	equ	0xFE2
  2516                           fsr1l	equ	0xFE1
  2517                           
  2518                           	psect	bssBANK8
  2519  000800                     __pbssBANK8:
  2520                           	opt stack 0
  2521  000800                     GsmGprsTerminal@UsbBuffer:
  2522                           	opt stack 0
  2523  000800                     	ds	200
  2524                           tblptru	equ	0xFF8
  2525                           tblptrh	equ	0xFF7
  2526                           tblptrl	equ	0xFF6
  2527                           tablat	equ	0xFF5
  2528                           postinc0	equ	0xFEE
  2529                           wreg	equ	0xFE8
  2530                           postdec1	equ	0xFE5
  2531                           fsr1h	equ	0xFE2
  2532                           fsr1l	equ	0xFE1
  2533                           
  2534                           	psect	bssBANK9
  2535  000900                     __pbssBANK9:
  2536                           	opt stack 0
  2537  000900                     GsmGprsTerminal@UartBuffer:
  2538                           	opt stack 0
  2539  000900                     	ds	200
  2540                           tblptru	equ	0xFF8
  2541                           tblptrh	equ	0xFF7
  2542                           tblptrl	equ	0xFF6
  2543                           tablat	equ	0xFF5
  2544                           postinc0	equ	0xFEE
  2545                           wreg	equ	0xFE8
  2546                           postdec1	equ	0xFE5
  2547                           fsr1h	equ	0xFE2
  2548                           fsr1l	equ	0xFE1
  2549                           
  2550                           	psect	bssBIGRAMl
  2551  000AC8                     __pbssBIGRAMl:
  2552                           	opt stack 0
  2553  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2554                           	opt stack 0
  2555  000AC8                     	ds	400
  2556  000C58                     _RxBuffer:
  2557                           	opt stack 0
  2558  000C58                     	ds	400
  2559                           tblptru	equ	0xFF8
  2560                           tblptrh	equ	0xFF7
  2561                           tblptrl	equ	0xFF6
  2562                           tablat	equ	0xFF5
  2563                           postinc0	equ	0xFEE
  2564                           wreg	equ	0xFE8
  2565                           postdec1	equ	0xFE5
  2566                           fsr1h	equ	0xFE2
  2567                           fsr1l	equ	0xFE1
  2568                           
  2569                           	psect	cstackBANK10
  2570  000A00                     __pcstackBANK10:
  2571                           	opt stack 0
  2572  000A00                     Terminal@UsbRxBuffer:
  2573                           	opt stack 0
  2574                           
  2575                           ; 200 bytes @ 0x0
  2576  000A00                     	ds	200
  2577                           tblptru	equ	0xFF8
  2578                           tblptrh	equ	0xFF7
  2579                           tblptrl	equ	0xFF6
  2580                           tablat	equ	0xFF5
  2581                           postinc0	equ	0xFEE
  2582                           wreg	equ	0xFE8
  2583                           postdec1	equ	0xFE5
  2584                           fsr1h	equ	0xFE2
  2585                           fsr1l	equ	0xFE1
  2586                           
  2587                           	psect	cstackBANK4
  2588  0004FC                     __pcstackBANK4:
  2589                           	opt stack 0
  2590  0004FC                     ??_InitializeTasks:
  2591  0004FC                     ??_ScheduleTasks:
  2592                           
  2593                           ; 1 bytes @ 0x0
  2594  0004FC                     	ds	4
  2595                           tblptru	equ	0xFF8
  2596                           tblptrh	equ	0xFF7
  2597                           tblptrl	equ	0xFF6
  2598                           tablat	equ	0xFF5
  2599                           postinc0	equ	0xFEE
  2600                           wreg	equ	0xFE8
  2601                           postdec1	equ	0xFE5
  2602                           fsr1h	equ	0xFE2
  2603                           fsr1l	equ	0xFE1
  2604                           
  2605                           	psect	cstackBANK3
  2606  0003FF                     __pcstackBANK3:
  2607                           	opt stack 0
  2608  0003FF                     InitializeTasks@ActiveTaskIndex:
  2609                           	opt stack 0
  2610  0003FF                     ScheduleTasks@ActiveTaskIndex:
  2611                           	opt stack 0
  2612                           
  2613                           ; 1 bytes @ 0x0
  2614  0003FF                     	ds	1
  2615                           tblptru	equ	0xFF8
  2616                           tblptrh	equ	0xFF7
  2617                           tblptrl	equ	0xFF6
  2618                           tablat	equ	0xFF5
  2619                           postinc0	equ	0xFEE
  2620                           wreg	equ	0xFE8
  2621                           postdec1	equ	0xFE5
  2622                           fsr1h	equ	0xFE2
  2623                           fsr1l	equ	0xFE1
  2624                           
  2625                           	psect	cstackBANK2
  2626  000200                     __pcstackBANK2:
  2627                           	opt stack 0
  2628  000200                     Terminal@UsbTxBuffer:
  2629                           	opt stack 0
  2630                           
  2631                           ; 200 bytes @ 0x0
  2632  000200                     	ds	200
  2633                           tblptru	equ	0xFF8
  2634                           tblptrh	equ	0xFF7
  2635                           tblptrl	equ	0xFF6
  2636                           tablat	equ	0xFF5
  2637                           postinc0	equ	0xFEE
  2638                           wreg	equ	0xFE8
  2639                           postdec1	equ	0xFE5
  2640                           fsr1h	equ	0xFE2
  2641                           fsr1l	equ	0xFE1
  2642                           
  2643                           	psect	cstackBANK1
  2644  000100                     __pcstackBANK1:
  2645                           	opt stack 0
  2646  000100                     initEeprom@addressToRead:
  2647                           	opt stack 0
  2648  000100                     SendSmsSm@UartMessage:
  2649                           	opt stack 0
  2650  000100                     InitGprsNetwork@UartMessage:
  2651                           	opt stack 0
  2652  000100                     Terminal@TermTxBuffer:
  2653                           	opt stack 0
  2654  000100                     HttpGetMethod@UartMessage:
  2655                           	opt stack 0
  2656                           
  2657                           ; 200 bytes @ 0x0
  2658  000100                     	ds	1
  2659  000101                     initEeprom@memoryOpResult:
  2660                           	opt stack 0
  2661                           
  2662                           ; 1 bytes @ 0x1
  2663  000101                     	ds	1
  2664  000102                     initEeprom@isInitialized:
  2665                           	opt stack 0
  2666                           
  2667                           ; 1 bytes @ 0x2
  2668  000102                     	ds	1
  2669  000103                     initFsm@isInitialized:
  2670                           	opt stack 0
  2671                           
  2672                           ; 1 bytes @ 0x3
  2673  000103                     	ds	1
  2674  000104                     MyApp_Task@cmpString:
  2675                           	opt stack 0
  2676                           
  2677                           ; 3 bytes @ 0x4
  2678  000104                     	ds	3
  2679  000107                     MyApp_Task@cmdAddNumber:
  2680                           	opt stack 0
  2681                           
  2682                           ; 4 bytes @ 0x7
  2683  000107                     	ds	4
  2684  00010B                     MyApp_Task@memoryResult:
  2685                           	opt stack 0
  2686                           
  2687                           ; 1 bytes @ 0xB
  2688  00010B                     	ds	39
  2689  000132                     InitGprsNetwork@Index:
  2690                           	opt stack 0
  2691  000132                     Term_MainSm@FwkMajorStr:
  2692                           	opt stack 0
  2693                           
  2694                           ; 4 bytes @ 0x32
  2695  000132                     	ds	4
  2696  000136                     Term_MainSm@FwkMinorStr:
  2697                           	opt stack 0
  2698                           
  2699                           ; 4 bytes @ 0x36
  2700  000136                     	ds	4
  2701  00013A                     Term_MainSm@FwkBuildStr:
  2702                           	opt stack 0
  2703                           
  2704                           ; 4 bytes @ 0x3A
  2705  00013A                     	ds	142
  2706  0001C8                     HttpGetMethod@Index:
  2707                           	opt stack 0
  2708                           
  2709                           ; 1 bytes @ 0xC8
  2710  0001C8                     	ds	1
  2711                           tblptru	equ	0xFF8
  2712                           tblptrh	equ	0xFF7
  2713                           tblptrl	equ	0xFF6
  2714                           tablat	equ	0xFF5
  2715                           postinc0	equ	0xFEE
  2716                           wreg	equ	0xFE8
  2717                           postdec1	equ	0xFE5
  2718                           fsr1h	equ	0xFE2
  2719                           fsr1l	equ	0xFE1
  2720                           
  2721                           	psect	cstackBANK0
  2722  000060                     __pcstackBANK0:
  2723                           	opt stack 0
  2724  000060                     
  2725                           ; 1 bytes @ 0x0
  2726  000060                     	ds	8
  2727  000068                     ??_LowPriorityIsr:
  2728                           
  2729                           ; 1 bytes @ 0x8
  2730  000068                     	ds	21
  2731  00007D                     ??_isdigit:
  2732  00007D                     ??_isspace:
  2733  00007D                     ??_isupper:
  2734  00007D                     ??_Rtcc_GetRtccValue:
  2735  00007D                     ??_UartTxBufferStatus:
  2736  00007D                     ??_USBStdGetDscHandler:
  2737  00007D                     ??_USBStdGetStatusHandler:
  2738  00007D                     ?_USBTransferOnePacket:
  2739                           	opt stack 0
  2740  00007D                     ?_strlen:
  2741                           	opt stack 0
  2742  00007D                     ?_sprintf:
  2743                           	opt stack 0
  2744  00007D                     ?_initPreamble:
  2745                           	opt stack 0
  2746  00007D                     ?___wmul:
  2747                           	opt stack 0
  2748  00007D                     ?___awdiv:
  2749                           	opt stack 0
  2750  00007D                     ?___awmod:
  2751                           	opt stack 0
  2752  00007D                     ?___lwmod:
  2753                           	opt stack 0
  2754  00007D                     ?_GetOsTickCounter:
  2755                           	opt stack 0
  2756  00007D                     ?___lmul:
  2757                           	opt stack 0
  2758  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2759                           	opt stack 0
  2760  00007D                     SetAckStatus@AckSts:
  2761                           	opt stack 0
  2762  00007D                     WriteByte@Byte:
  2763                           	opt stack 0
  2764  00007D                     ReadByte@Byte:
  2765                           	opt stack 0
  2766  00007D                     Mcu_SetWdgSts@WdgSts:
  2767                           	opt stack 0
  2768  00007D                     RtccIrqInit@Priority:
  2769                           	opt stack 0
  2770  00007D                     Rtcc_SetRtcStatus@Status:
  2771                           	opt stack 0
  2772  00007D                     TmrBInit@Prescaler:
  2773                           	opt stack 0
  2774  00007D                     Tmr_TmrBIrqSet@Priority:
  2775                           	opt stack 0
  2776  00007D                     Tmr_StartTmr@TmrNumb:
  2777                           	opt stack 0
  2778  00007D                     UartWriteByte@ByteToWrite:
  2779                           	opt stack 0
  2780  00007D                     USBTransferOnePacket@dir:
  2781                           	opt stack 0
  2782  00007D                     USBConfigureEndpoint@direction:
  2783                           	opt stack 0
  2784  00007D                     USBCtrlTrfTxService@byteToSend:
  2785                           	opt stack 0
  2786  00007D                     USBCtrlTrfRxService@i:
  2787                           	opt stack 0
  2788  00007D                     Led_SetLedStatus@LedSts:
  2789                           	opt stack 0
  2790  00007D                     toupper@c:
  2791                           	opt stack 0
  2792  00007D                     tolower@c:
  2793                           	opt stack 0
  2794  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2795                           	opt stack 0
  2796  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2797                           	opt stack 0
  2798  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2799                           	opt stack 0
  2800  00007D                     Uart_ClearRxBuffer@Index:
  2801                           	opt stack 0
  2802  00007D                     GenerateEvt@Event:
  2803                           	opt stack 0
  2804  00007D                     ReceiveEvt@Event:
  2805                           	opt stack 0
  2806  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2807                           	opt stack 0
  2808  00007D                     StringCompare@String1:
  2809                           	opt stack 0
  2810  00007D                     StringCopy@SourceStr:
  2811                           	opt stack 0
  2812  00007D                     ClearBuffer@Buffer:
  2813                           	opt stack 0
  2814  00007D                     sprintf@sp:
  2815                           	opt stack 0
  2816  00007D                     ___wmul@multiplier:
  2817                           	opt stack 0
  2818  00007D                     ___awdiv@dividend:
  2819                           	opt stack 0
  2820  00007D                     ___awmod@dividend:
  2821                           	opt stack 0
  2822  00007D                     ___lwmod@dividend:
  2823                           	opt stack 0
  2824  00007D                     memcpy@d1:
  2825                           	opt stack 0
  2826  00007D                     memset@p1:
  2827                           	opt stack 0
  2828  00007D                     strcat@to:
  2829                           	opt stack 0
  2830  00007D                     strcpy@to:
  2831                           	opt stack 0
  2832  00007D                     strlen@s:
  2833                           	opt stack 0
  2834  00007D                     ___lmul@multiplier:
  2835                           	opt stack 0
  2836                           
  2837                           ; 4 bytes @ 0x1D
  2838  00007D                     	ds	1
  2839  00007E                     ??_USBConfigureEndpoint:
  2840  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2841                           	opt stack 0
  2842  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2843                           	opt stack 0
  2844  00007E                     TmrBInit@Postscaler:
  2845                           	opt stack 0
  2846  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2847                           	opt stack 0
  2848  00007E                     UartWriteByte@Module:
  2849                           	opt stack 0
  2850  00007E                     UartTxBufferStatus@Module:
  2851                           	opt stack 0
  2852  00007E                     USBCtrlTrfRxService@byteToRead:
  2853                           	opt stack 0
  2854  00007E                     USBCtrlTrfInHandler@lastDTS:
  2855                           	opt stack 0
  2856  00007E                     Led_SetLedStatus@Led:
  2857                           	opt stack 0
  2858  00007E                     _isdigit$6295:
  2859                           	opt stack 0
  2860  00007E                     _isspace$6564:
  2861                           	opt stack 0
  2862  00007E                     _isupper$6567:
  2863                           	opt stack 0
  2864  00007E                     I2c_WriteData@WritePacket:
  2865                           	opt stack 0
  2866  00007E                     Rtcc_RtcConfig@RtcConfig:
  2867                           	opt stack 0
  2868  00007E                     USBTransferOnePacket@data:
  2869                           	opt stack 0
  2870  00007E                     USBStdGetStatusHandler@p:
  2871                           	opt stack 0
  2872                           
  2873                           ; 2 bytes @ 0x1E
  2874  00007E                     	ds	1
  2875  00007F                     ??_strlen:
  2876  00007F                     ??_Rtcc_AlarmConfig:
  2877  00007F                     ??_TmrBInit:
  2878  00007F                     Irq_InitIntController@IntPriorityEn:
  2879                           	opt stack 0
  2880  00007F                     Rtcc_GetRtccValue@RetValue:
  2881                           	opt stack 0
  2882  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2883                           	opt stack 0
  2884  00007F                     UartTxBufferStatus@TxBufferStatus:
  2885                           	opt stack 0
  2886  00007F                     GenerateEvt@EventStatus:
  2887                           	opt stack 0
  2888  00007F                     isdigit@c:
  2889                           	opt stack 0
  2890  00007F                     isspace@c:
  2891                           	opt stack 0
  2892  00007F                     isupper@c:
  2893                           	opt stack 0
  2894  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2895                           	opt stack 0
  2896  00007F                     StringCompare@String2:
  2897                           	opt stack 0
  2898  00007F                     StringCopy@DestStr:
  2899                           	opt stack 0
  2900  00007F                     ClearBuffer@Len:
  2901                           	opt stack 0
  2902  00007F                     sprintf@f:
  2903                           	opt stack 0
  2904  00007F                     ___wmul@multiplicand:
  2905                           	opt stack 0
  2906  00007F                     ___awdiv@divisor:
  2907                           	opt stack 0
  2908  00007F                     ___awmod@divisor:
  2909                           	opt stack 0
  2910  00007F                     ___lwmod@divisor:
  2911                           	opt stack 0
  2912  00007F                     memcpy@s1:
  2913                           	opt stack 0
  2914  00007F                     memset@c:
  2915                           	opt stack 0
  2916  00007F                     strcat@from:
  2917                           	opt stack 0
  2918  00007F                     strcpy@from:
  2919                           	opt stack 0
  2920                           
  2921                           ; 2 bytes @ 0x1F
  2922  00007F                     	ds	1
  2923  000080                     ??_isalpha:
  2924  000080                     ??_isxdigit:
  2925  000080                     ??_I2c_WriteData:
  2926  000080                     ??_Rtcc_RtcConfig:
  2927  000080                     Rtcc_GetRtccValue@RegValue:
  2928                           	opt stack 0
  2929  000080                     TmrBInit@TmrNumb:
  2930                           	opt stack 0
  2931  000080                     ReceiveEvt@EventStatus:
  2932                           	opt stack 0
  2933  000080                     USBTransferOnePacket@len:
  2934                           	opt stack 0
  2935  000080                     I2c_ReadData@ReadPacket:
  2936                           	opt stack 0
  2937  000080                     Uart_WriteConstString@ConstStringToWrite:
  2938                           	opt stack 0
  2939  000080                     Uart_WriteString@StringToWrite:
  2940                           	opt stack 0
  2941  000080                     Uart_WriteStringLen@StringToWrite:
  2942                           	opt stack 0
  2943  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  2944                           	opt stack 0
  2945  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2946                           	opt stack 0
  2947                           
  2948                           ; 2 bytes @ 0x20
  2949  000080                     	ds	1
  2950  000081                     ?_GetElapsedTime:
  2951                           	opt stack 0
  2952  000081                     ?_Rtcm_GetRtccDate:
  2953                           	opt stack 0
  2954  000081                     Mdm_IsSmsReceived@Ret:
  2955                           	opt stack 0
  2956  000081                     Mdm_IsRinging@Ret:
  2957                           	opt stack 0
  2958  000081                     I2cSlv_I2cReadMsgSts@Result:
  2959                           	opt stack 0
  2960  000081                     USBTransferOnePacket@ep:
  2961                           	opt stack 0
  2962  000081                     Led_SetLedBlinkTime@Led:
  2963                           	opt stack 0
  2964  000081                     ___awdiv@counter:
  2965                           	opt stack 0
  2966  000081                     ___awmod@counter:
  2967                           	opt stack 0
  2968  000081                     ___lwmod@counter:
  2969                           	opt stack 0
  2970  000081                     _isalpha$6561:
  2971                           	opt stack 0
  2972  000081                     _isxdigit$6571:
  2973                           	opt stack 0
  2974  000081                     OsTmr_StartTimer@Timer:
  2975                           	opt stack 0
  2976  000081                     StringCompare@Len:
  2977                           	opt stack 0
  2978  000081                     StringCopy@Len:
  2979                           	opt stack 0
  2980  000081                     ClearBuffer@Index:
  2981                           	opt stack 0
  2982  000081                     ___wmul@product:
  2983                           	opt stack 0
  2984  000081                     memcpy@n:
  2985                           	opt stack 0
  2986  000081                     memset@n:
  2987                           	opt stack 0
  2988  000081                     strcat@cp:
  2989                           	opt stack 0
  2990  000081                     strcpy@cp:
  2991                           	opt stack 0
  2992  000081                     strlen@cp:
  2993                           	opt stack 0
  2994  000081                     GetElapsedTime@StartTime:
  2995                           	opt stack 0
  2996  000081                     ___lmul@multiplicand:
  2997                           	opt stack 0
  2998                           
  2999                           ; 4 bytes @ 0x21
  3000  000081                     	ds	1
  3001  000082                     ??_I2c_ReadData:
  3002  000082                     Uart_WriteConstString@Module:
  3003                           	opt stack 0
  3004  000082                     Uart_WriteString@Module:
  3005                           	opt stack 0
  3006  000082                     Uart_WriteStringLen@Len:
  3007                           	opt stack 0
  3008  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3009                           	opt stack 0
  3010  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3011                           	opt stack 0
  3012  000082                     USBConfigureEndpoint@EPNum:
  3013                           	opt stack 0
  3014  000082                     ___awdiv@sign:
  3015                           	opt stack 0
  3016  000082                     ___awmod@sign:
  3017                           	opt stack 0
  3018  000082                     isalpha@c:
  3019                           	opt stack 0
  3020  000082                     isxdigit@c:
  3021                           	opt stack 0
  3022  000082                     USBTransferOnePacket@handle:
  3023                           	opt stack 0
  3024                           
  3025                           ; 2 bytes @ 0x22
  3026  000082                     	ds	1
  3027  000083                     ??_StringCopy:
  3028  000083                     ?_GetCallerNumber:
  3029                           	opt stack 0
  3030  000083                     ?_atoi:
  3031                           	opt stack 0
  3032  000083                     ?_xtoi:
  3033                           	opt stack 0
  3034  000083                     ?___lwdiv:
  3035                           	opt stack 0
  3036  000083                     Uart_WriteStringLen@Index:
  3037                           	opt stack 0
  3038  000083                     Mdm_SetSmsFormat@Index:
  3039                           	opt stack 0
  3040  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3041                           	opt stack 0
  3042  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3043                           	opt stack 0
  3044  000083                     getSetupCall@isCalledReceived:
  3045                           	opt stack 0
  3046  000083                     sprintf@flag:
  3047                           	opt stack 0
  3048  000083                     memcpy@tmp:
  3049                           	opt stack 0
  3050  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3051                           	opt stack 0
  3052  000083                     USBConfigureEndpoint@handle:
  3053                           	opt stack 0
  3054  000083                     putUSBUSART@data:
  3055                           	opt stack 0
  3056  000083                     atoi@s:
  3057                           	opt stack 0
  3058  000083                     ___awdiv@quotient:
  3059                           	opt stack 0
  3060  000083                     ___lwdiv@dividend:
  3061                           	opt stack 0
  3062  000083                     memset@p:
  3063                           	opt stack 0
  3064  000083                     xtoi@s:
  3065                           	opt stack 0
  3066  000083                     OsTmr_StartTimer@Timeout:
  3067                           	opt stack 0
  3068                           
  3069                           ; 4 bytes @ 0x23
  3070  000083                     	ds	1
  3071  000084                     Uart_WriteStringLen@Module:
  3072                           	opt stack 0
  3073  000084                     I2cSlv_SendI2cMsg@TxSts:
  3074                           	opt stack 0
  3075  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3076                           	opt stack 0
  3077  000084                     CDCTxService@i:
  3078                           	opt stack 0
  3079  000084                     getsUSBUSART@buffer:
  3080                           	opt stack 0
  3081  000084                     sprintf@ap:
  3082                           	opt stack 0
  3083  000084                     memcpy@d:
  3084                           	opt stack 0
  3085  000084                     Mdm_SetSmsFormat@UartMessage:
  3086                           	opt stack 0
  3087                           
  3088                           ; 20 bytes @ 0x24
  3089  000084                     	ds	1
  3090  000085                     ??_atoi:
  3091  000085                     ??_xtoi:
  3092  000085                     ??_GetElapsedTime:
  3093  000085                     Rtcc_SetRtccValue@Value:
  3094                           	opt stack 0
  3095  000085                     USBDeviceInit@i:
  3096                           	opt stack 0
  3097  000085                     USBEnableEndpoint@options:
  3098                           	opt stack 0
  3099  000085                     putUSBUSART@length:
  3100                           	opt stack 0
  3101  000085                     CDCTxService@byte_to_send:
  3102                           	opt stack 0
  3103  000085                     StringCompare@Result:
  3104                           	opt stack 0
  3105  000085                     StringCopy@Index:
  3106                           	opt stack 0
  3107  000085                     ___lwdiv@divisor:
  3108                           	opt stack 0
  3109  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3110                           	opt stack 0
  3111  000085                     ___lmul@product:
  3112                           	opt stack 0
  3113                           
  3114                           ; 4 bytes @ 0x25
  3115  000085                     	ds	1
  3116  000086                     ??_Rtcc_SetRtccValue:
  3117  000086                     getsUSBUSART@len:
  3118                           	opt stack 0
  3119  000086                     sprintf@c:
  3120                           	opt stack 0
  3121  000086                     USBEnableEndpoint@p:
  3122                           	opt stack 0
  3123  000086                     StringCompare@Index:
  3124                           	opt stack 0
  3125  000086                     memcpy@s:
  3126                           	opt stack 0
  3127                           
  3128                           ; 2 bytes @ 0x26
  3129  000086                     	ds	1
  3130  000087                     atoi@sign:
  3131                           	opt stack 0
  3132  000087                     ___lwdiv@counter:
  3133                           	opt stack 0
  3134  000087                     xtoi@sign:
  3135                           	opt stack 0
  3136  000087                     Mdm_GetSmsData@MessageText:
  3137                           	opt stack 0
  3138  000087                     Eeprom_Write@WriteBuffer:
  3139                           	opt stack 0
  3140  000087                     sprintf@cp:
  3141                           	opt stack 0
  3142                           
  3143                           ; 2 bytes @ 0x27
  3144  000087                     	ds	1
  3145  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3146                           	opt stack 0
  3147  000088                     USBEnableEndpoint@ep:
  3148                           	opt stack 0
  3149  000088                     atoi@a:
  3150                           	opt stack 0
  3151  000088                     ___lwdiv@quotient:
  3152                           	opt stack 0
  3153  000088                     xtoi@val:
  3154                           	opt stack 0
  3155  000088                     ModemEvtParser@CallReadyString:
  3156                           	opt stack 0
  3157                           
  3158                           ; 10 bytes @ 0x28
  3159  000088                     	ds	1
  3160  000089                     ??_Rtcm_GetRtccDate:
  3161  000089                     ?_strtol:
  3162                           	opt stack 0
  3163  000089                     ?___lldiv:
  3164                           	opt stack 0
  3165  000089                     Mdm_GetSmsData@GetSmsStatus:
  3166                           	opt stack 0
  3167  000089                     Eeprom_Write@DataLength:
  3168                           	opt stack 0
  3169  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3170                           	opt stack 0
  3171  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3172                           	opt stack 0
  3173  000089                     strtol@s:
  3174                           	opt stack 0
  3175  000089                     ___lldiv@dividend:
  3176                           	opt stack 0
  3177  000089                     Rtcm_SetRtccDate@Date:
  3178                           	opt stack 0
  3179                           
  3180                           ; 8 bytes @ 0x29
  3181  000089                     	ds	1
  3182  00008A                     Eeprom_Write@WriteSts:
  3183                           	opt stack 0
  3184  00008A                     xtoi@c:
  3185                           	opt stack 0
  3186  00008A                     LedBlinkStateMachine@LedBlink:
  3187                           	opt stack 0
  3188  00008A                     LedPulseStateMachine@LedPulse:
  3189                           	opt stack 0
  3190  00008A                     secondsAppTimer@counter:
  3191                           	opt stack 0
  3192  00008A                     utoa@buf:
  3193                           	opt stack 0
  3194  00008A                     Rtcm_GetRtccDate@LocalDate:
  3195                           	opt stack 0
  3196                           
  3197                           ; 8 bytes @ 0x2A
  3198  00008A                     	ds	1
  3199  00008B                     Eeprom_Write@MemoryAddress:
  3200                           	opt stack 0
  3201  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3202                           	opt stack 0
  3203  00008B                     strtol@endptr:
  3204                           	opt stack 0
  3205                           
  3206                           ; 2 bytes @ 0x2B
  3207  00008B                     	ds	1
  3208  00008C                     Eeprom_Write@SlaveAddress:
  3209                           	opt stack 0
  3210  00008C                     LedPulseStateMachine@Led:
  3211                           	opt stack 0
  3212  00008C                     secondsAppTimer@isCyclic:
  3213                           	opt stack 0
  3214  00008C                     utoa@val:
  3215                           	opt stack 0
  3216                           
  3217                           ; 2 bytes @ 0x2C
  3218  00008C                     	ds	1
  3219  00008D                     Eeprom_Write@CommandLength:
  3220                           	opt stack 0
  3221  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3222                           	opt stack 0
  3223  00008D                     strtol@base:
  3224                           	opt stack 0
  3225  00008D                     GetElapsedTime@TimeValue:
  3226                           	opt stack 0
  3227  00008D                     ___lldiv@divisor:
  3228                           	opt stack 0
  3229                           
  3230                           ; 4 bytes @ 0x2D
  3231  00008D                     	ds	1
  3232  00008E                     saveMasterNumber@phoneNumber:
  3233                           	opt stack 0
  3234  00008E                     utoa@base:
  3235                           	opt stack 0
  3236                           
  3237                           ; 2 bytes @ 0x2E
  3238  00008E                     	ds	1
  3239  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3240  00008F                     ??_strtol:
  3241  00008F                     secondsAppTimer@seconds:
  3242                           	opt stack 0
  3243  00008F                     LedStateMachine@LedSts:
  3244                           	opt stack 0
  3245                           
  3246                           ; 2 bytes @ 0x2F
  3247  00008F                     	ds	1
  3248  000090                     secondsAppTimer@isExpired:
  3249                           	opt stack 0
  3250  000090                     saveMasterNumber@address:
  3251                           	opt stack 0
  3252  000090                     utoa@v:
  3253                           	opt stack 0
  3254                           
  3255                           ; 2 bytes @ 0x30
  3256  000090                     	ds	1
  3257  000091                     ??_USBStdFeatureReqHandler:
  3258  000091                     USBStdSetCfgHandler@i:
  3259                           	opt stack 0
  3260  000091                     LedStateMachine@LedOut:
  3261                           	opt stack 0
  3262  000091                     secondsAppTimer@destinationTicks:
  3263                           	opt stack 0
  3264  000091                     GetElapsedTime@CurrentTimestamp:
  3265                           	opt stack 0
  3266  000091                     ___lldiv@quotient:
  3267                           	opt stack 0
  3268                           
  3269                           ; 4 bytes @ 0x31
  3270  000091                     	ds	1
  3271  000092                     utoa@c:
  3272                           	opt stack 0
  3273  000092                     USBStdFeatureReqHandler@pUEP:
  3274                           	opt stack 0
  3275  000092                     ModemEvtParser@ClipString:
  3276                           	opt stack 0
  3277                           
  3278                           ; 5 bytes @ 0x32
  3279  000092                     	ds	1
  3280  000093                     waitSetupCall@isCallArrived:
  3281                           	opt stack 0
  3282  000093                     strtol@sign:
  3283                           	opt stack 0
  3284  000093                     LedStateMachine@LedBlink:
  3285                           	opt stack 0
  3286  000093                     itoa@buf:
  3287                           	opt stack 0
  3288                           
  3289                           ; 2 bytes @ 0x33
  3290  000093                     	ds	1
  3291  000094                     USBStdFeatureReqHandler@current_ep_data:
  3292                           	opt stack 0
  3293  000094                     strtol@a:
  3294                           	opt stack 0
  3295                           
  3296                           ; 4 bytes @ 0x34
  3297  000094                     	ds	1
  3298  000095                     ___lldiv@counter:
  3299                           	opt stack 0
  3300  000095                     OsTmr_GetTimerStatus@Timer:
  3301                           	opt stack 0
  3302  000095                     USBStdFeatureReqHandler@p:
  3303                           	opt stack 0
  3304  000095                     LedStateMachine@LedPulse:
  3305                           	opt stack 0
  3306  000095                     itoa@val:
  3307                           	opt stack 0
  3308                           
  3309                           ; 2 bytes @ 0x35
  3310  000095                     	ds	1
  3311  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3312                           	opt stack 0
  3313  000096                     SetUartBaudRate@UartConfig:
  3314                           	opt stack 0
  3315  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3316                           	opt stack 0
  3317                           
  3318                           ; 4 bytes @ 0x36
  3319  000096                     	ds	1
  3320  000097                     ??_USBCtrlEPService:
  3321  000097                     itoa@base:
  3322                           	opt stack 0
  3323  000097                     ModemEvtParser@SmsString:
  3324                           	opt stack 0
  3325                           
  3326                           ; 5 bytes @ 0x37
  3327  000097                     	ds	1
  3328  000098                     Tmr_TmrBPrSet@Prescaler:
  3329                           	opt stack 0
  3330  000098                     Mdm_SetSmsFormat@TextFormat:
  3331                           	opt stack 0
  3332  000098                     USBDeviceTasks@i:
  3333                           	opt stack 0
  3334  000098                     LedStateMachine@LedOutSts:
  3335                           	opt stack 0
  3336  000098                     strtol@c:
  3337                           	opt stack 0
  3338                           
  3339                           ; 1 bytes @ 0x38
  3340  000098                     	ds	1
  3341  000099                     Tmr_TmrBPrSet@Postscaler:
  3342                           	opt stack 0
  3343  000099                     SetUartBaudRate@Module:
  3344                           	opt stack 0
  3345  000099                     LedStateMachine@Led:
  3346                           	opt stack 0
  3347  000099                     initGprsModem@isInitialized:
  3348                           	opt stack 0
  3349  000099                     itoa@cp:
  3350                           	opt stack 0
  3351                           
  3352                           ; 2 bytes @ 0x39
  3353  000099                     	ds	1
  3354  00009A                     ??_Led_MainTask:
  3355  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3356                           	opt stack 0
  3357  00009A                     SetUartBaudRate@BaudRateRegister:
  3358                           	opt stack 0
  3359  00009A                     SetBaudRate@McuClockHz:
  3360                           	opt stack 0
  3361                           
  3362                           ; 4 bytes @ 0x3A
  3363  00009A                     	ds	1
  3364  00009B                     ??_SendSmsSm:
  3365  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3366                           	opt stack 0
  3367  00009B                     OsTmr_Wait@WaitTimer:
  3368                           	opt stack 0
  3369  00009B                     InitGprsNetwork@Apn:
  3370                           	opt stack 0
  3371  00009B                     HttpGetMethod@GetData:
  3372                           	opt stack 0
  3373                           
  3374                           ; 2 bytes @ 0x3B
  3375  00009B                     	ds	1
  3376  00009C                     SetUartBaudRate@DivisionFactor:
  3377                           	opt stack 0
  3378  00009C                     Tmr_TmrBPrSet@Divisor:
  3379                           	opt stack 0
  3380  00009C                     ModemEvtParser@RingString:
  3381                           	opt stack 0
  3382                           
  3383                           ; 4 bytes @ 0x3C
  3384  00009C                     	ds	1
  3385  00009D                     ??_HttpGetMethod:
  3386  00009D                     InitGprsNetwork@ApnLen:
  3387                           	opt stack 0
  3388  00009D                     Uart_InitUartModule@UartConfig:
  3389                           	opt stack 0
  3390  00009D                     OsTmr_Wait@DelayMs:
  3391                           	opt stack 0
  3392                           
  3393                           ; 4 bytes @ 0x3D
  3394  00009D                     	ds	1
  3395  00009E                     ??_SetBaudRate:
  3396  00009E                     ??_InitGprsNetwork:
  3397                           
  3398                           ; 1 bytes @ 0x3E
  3399  00009E                     	ds	1
  3400  00009F                     ??_Uart_InitUartModule:
  3401                           
  3402                           ; 1 bytes @ 0x3F
  3403  00009F                     	ds	1
  3404  0000A0                     ModemEvtParser@Match:
  3405                           	opt stack 0
  3406  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3407                           	opt stack 0
  3408                           
  3409                           ; 2 bytes @ 0x40
  3410  0000A0                     	ds	1
  3411  0000A1                     Uart_InitUartModule@Module:
  3412                           	opt stack 0
  3413  0000A1                     OsTmr_Wait@Ret:
  3414                           	opt stack 0
  3415  0000A1                     ModemEvtParser@CompareIdx:
  3416                           	opt stack 0
  3417                           
  3418                           ; 1 bytes @ 0x41
  3419  0000A1                     	ds	1
  3420  0000A2                     ??_Terminal:
  3421  0000A2                     I2c_InitI2cModule@I2cConfig:
  3422                           	opt stack 0
  3423  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3424                           	opt stack 0
  3425                           
  3426                           ; 2 bytes @ 0x42
  3427  0000A2                     	ds	1
  3428  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3429                           	opt stack 0
  3430                           
  3431                           ; 1 bytes @ 0x43
  3432  0000A3                     	ds	1
  3433  0000A4                     ??_I2c_InitI2cModule:
  3434  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3435                           	opt stack 0
  3436  0000A4                     Terminal@i:
  3437                           	opt stack 0
  3438  0000A4                     InitSchedTimer@TmrBConfig:
  3439                           	opt stack 0
  3440                           
  3441                           ; 7 bytes @ 0x44
  3442  0000A4                     	ds	1
  3443  0000A5                     Terminal@ReceivedBytes:
  3444                           	opt stack 0
  3445  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3446                           	opt stack 0
  3447                           
  3448                           ; 2 bytes @ 0x45
  3449  0000A5                     	ds	1
  3450  0000A6                     Terminal@Index:
  3451                           	opt stack 0
  3452                           
  3453                           ; 1 bytes @ 0x46
  3454  0000A6                     	ds	1
  3455  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3456                           	opt stack 0
  3457                           
  3458                           ; 1 bytes @ 0x47
  3459  0000A7                     	ds	1
  3460  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3461                           	opt stack 0
  3462                           
  3463                           ; 1 bytes @ 0x48
  3464  0000A8                     	ds	1
  3465  0000A9                     Eeprom_Read@ReadBuffer:
  3466                           	opt stack 0
  3467                           
  3468                           ; 2 bytes @ 0x49
  3469  0000A9                     	ds	2
  3470  0000AB                     Eeprom_Read@DataLength:
  3471                           	opt stack 0
  3472                           
  3473                           ; 1 bytes @ 0x4B
  3474  0000AB                     	ds	1
  3475  0000AC                     Eeprom_Read@MemoryAddress:
  3476                           	opt stack 0
  3477                           
  3478                           ; 1 bytes @ 0x4C
  3479  0000AC                     	ds	1
  3480  0000AD                     Eeprom_Read@SlaveAddress:
  3481                           	opt stack 0
  3482                           
  3483                           ; 1 bytes @ 0x4D
  3484  0000AD                     	ds	1
  3485  0000AE                     Eeprom_Read@ReadSts:
  3486                           	opt stack 0
  3487                           
  3488                           ; 1 bytes @ 0x4E
  3489  0000AE                     	ds	1
  3490  0000AF                     Eeprom_Read@QuerySts:
  3491                           	opt stack 0
  3492                           
  3493                           ; 1 bytes @ 0x4F
  3494  0000AF                     	ds	1
  3495  0000B0                     tblptru	equ	0xFF8
  3496                           tblptrh	equ	0xFF7
  3497                           tblptrl	equ	0xFF6
  3498                           tablat	equ	0xFF5
  3499                           postinc0	equ	0xFEE
  3500                           wreg	equ	0xFE8
  3501                           postdec1	equ	0xFE5
  3502                           fsr1h	equ	0xFE2
  3503                           fsr1l	equ	0xFE1
  3504                           
  3505                           ; 1 bytes @ 0x50
  3506                           
  3507                           	psect	cstackCOMRAM
  3508  000001                     __pcstackCOMRAM:
  3509                           	opt stack 0
  3510  000001                     i2GenerateEvt@Event:
  3511                           	opt stack 0
  3512                           
  3513                           ; 2 bytes @ 0x0
  3514  000001                     	ds	2
  3515  000003                     i2GenerateEvt@EventStatus:
  3516                           	opt stack 0
  3517                           
  3518                           ; 1 bytes @ 0x2
  3519  000003                     	ds	1
  3520  000004                     Uart_MdmGsmGprsReadService@UartData:
  3521                           	opt stack 0
  3522                           
  3523                           ; 1 bytes @ 0x3
  3524  000004                     	ds	1
  3525  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3526                           	opt stack 0
  3527                           
  3528                           ; 2 bytes @ 0x4
  3529  000005                     	ds	2
  3530  000007                     ??_HighPriorityIsr:
  3531                           
  3532                           ; 1 bytes @ 0x6
  3533  000007                     	ds	18
  3534  000019                     ?i1___wmul:
  3535                           	opt stack 0
  3536  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3537                           	opt stack 0
  3538  000019                     i1GenerateEvt@Event:
  3539                           	opt stack 0
  3540  000019                     i1___wmul@multiplier:
  3541                           	opt stack 0
  3542                           
  3543                           ; 2 bytes @ 0x18
  3544  000019                     	ds	2
  3545  00001B                     i1GenerateEvt@EventStatus:
  3546                           	opt stack 0
  3547  00001B                     i1___wmul@multiplicand:
  3548                           	opt stack 0
  3549                           
  3550                           ; 2 bytes @ 0x1A
  3551  00001B                     	ds	1
  3552  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3553                           	opt stack 0
  3554                           
  3555                           ; 2 bytes @ 0x1B
  3556  00001C                     	ds	1
  3557  00001D                     i1___wmul@product:
  3558                           	opt stack 0
  3559                           
  3560                           ; 2 bytes @ 0x1C
  3561  00001D                     	ds	1
  3562  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3563                           	opt stack 0
  3564                           
  3565                           ; 1 bytes @ 0x1D
  3566  00001E                     	ds	1
  3567  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3568                           	opt stack 0
  3569                           
  3570                           ; 1 bytes @ 0x1E
  3571  00001F                     	ds	1
  3572  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3573                           	opt stack 0
  3574                           
  3575                           ; 1 bytes @ 0x1F
  3576  000020                     	ds	1
  3577  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3578                           	opt stack 0
  3579                           
  3580                           ; 2 bytes @ 0x20
  3581  000021                     	ds	2
  3582  000023                     tblptru	equ	0xFF8
  3583                           tblptrh	equ	0xFF7
  3584                           tblptrl	equ	0xFF6
  3585                           tablat	equ	0xFF5
  3586                           postinc0	equ	0xFEE
  3587                           wreg	equ	0xFE8
  3588                           postdec1	equ	0xFE5
  3589                           fsr1h	equ	0xFE2
  3590                           fsr1l	equ	0xFE1
  3591                           
  3592                           ; 1 bytes @ 0x22
  3593 ;;
  3594 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3595 ;;
  3596 ;; *************** function _main *****************
  3597 ;; Defined at:
  3598 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  2   14[None  ] short 
  3605 ;; Registers used:
  3606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3616 ;;Total ram usage:        0 bytes
  3617 ;; Hardware stack levels required when called:   23
  3618 ;; This function calls:
  3619 ;;		_Sch_MainScheduler
  3620 ;;		_SystemInit
  3621 ;; This function is called by:
  3622 ;;		Startup code after reset
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text0
  3627  0064A4                     __ptext0:
  3628                           	opt stack 0
  3629  0064A4                     _main:
  3630                           	opt stack 8
  3631                           
  3632                           ;main.c: 61: SystemInit();
  3633                           
  3634                           ;incstack = 0
  3635  0064A4  EC3E  F02F         	call	_SystemInit	;wreg free
  3636                           
  3637                           ;main.c: 64: Sch_MainScheduler();
  3638  0064A8  EC49  F031         	call	_Sch_MainScheduler	;wreg free
  3639                           
  3640                           ;main.c: 67: return 0;
  3641                           ;	Return value of _main is never used
  3642  0064AC  EF66  F000         	goto	start
  3643  0064B0                     __end_of_main:
  3644                           	opt stack 0
  3645                           tblptru	equ	0xFF8
  3646                           tblptrh	equ	0xFF7
  3647                           tblptrl	equ	0xFF6
  3648                           tablat	equ	0xFF5
  3649                           postinc0	equ	0xFEE
  3650                           wreg	equ	0xFE8
  3651                           postdec1	equ	0xFE5
  3652                           fsr1h	equ	0xFE2
  3653                           fsr1l	equ	0xFE1
  3654                           
  3655 ;; *************** function _SystemInit *****************
  3656 ;; Defined at:
  3657 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;		None
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;		None
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3675 ;;Total ram usage:        0 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:   15
  3678 ;; This function calls:
  3679 ;;		_InitSchedTimer
  3680 ;;		_Irq_InitIntController
  3681 ;;		_Mcu_ConfigExtInt
  3682 ;;		_Mcu_StartSystemPll
  3683 ;;		_Pm_DsReleasePinControl
  3684 ;;		_Tmr_RegisterTmr2IsrCallback
  3685 ;; This function is called by:
  3686 ;;		_main
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text1
  3691  005E7C                     __ptext1:
  3692                           	opt stack 0
  3693  005E7C                     _SystemInit:
  3694                           	opt stack 15
  3695                           
  3696                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3697                           
  3698                           ;incstack = 0
  3699  005E7C  EC75  F032         	call	_Pm_DsReleasePinControl	;wreg free
  3700                           
  3701                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3702  005E80  EC3A  F031         	call	_Mcu_StartSystemPll	;wreg free
  3703                           
  3704                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3705  005E84  0E01               	movlw	1
  3706  005E86  0100               	movlb	0	; () banked
  3707  005E88  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3708  005E8A  0E01               	movlw	1
  3709  005E8C  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3710  005E8E  0E01               	movlw	1
  3711  005E90  ECE2  F02F         	call	_Irq_InitIntController
  3712                           
  3713                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3714  005E94  0E88               	movlw	low _Sch_SchmIntService
  3715  005E96  0100               	movlb	0	; () banked
  3716  005E98  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3717  005E9A  0E64               	movlw	high _Sch_SchmIntService
  3718  005E9C  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3719  005E9E  EC58  F032         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3720                           
  3721                           ;sys_init.c: 132: InitSchedTimer();
  3722  005EA2  EC9E  F02F         	call	_InitSchedTimer	;wreg free
  3723                           
  3724                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3725  005EA6  EC74  F031         	call	_Mcu_ConfigExtInt	;wreg free
  3726  005EAA  0012               	return		;funcret
  3727  005EAC                     __end_of_SystemInit:
  3728                           	opt stack 0
  3729                           tblptru	equ	0xFF8
  3730                           tblptrh	equ	0xFF7
  3731                           tblptrl	equ	0xFF6
  3732                           tablat	equ	0xFF5
  3733                           postinc0	equ	0xFEE
  3734                           wreg	equ	0xFE8
  3735                           postdec1	equ	0xFE5
  3736                           fsr1h	equ	0xFE2
  3737                           fsr1l	equ	0xFE1
  3738                           
  3739 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3740 ;; Defined at:
  3741 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3744 ;;		 -> Sch_SchmIntService(1), 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, status,2, status,0
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3756 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3759 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3760 ;;Total ram usage:        2 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:   11
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_SystemInit
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text2
  3771  0064B0                     __ptext2:
  3772                           	opt stack 0
  3773  0064B0                     _Tmr_RegisterTmr2IsrCallback:
  3774                           	opt stack 18
  3775                           
  3776                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3777                           
  3778                           ;incstack = 0
  3779  0064B0  C07D  F2EA         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3780  0064B4  C07E  F2EB         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3781  0064B8  0012               	return		;funcret
  3782  0064BA                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3783                           	opt stack 0
  3784                           tblptru	equ	0xFF8
  3785                           tblptrh	equ	0xFF7
  3786                           tblptrl	equ	0xFF6
  3787                           tablat	equ	0xFF5
  3788                           postinc0	equ	0xFEE
  3789                           wreg	equ	0xFE8
  3790                           postdec1	equ	0xFE5
  3791                           fsr1h	equ	0xFE2
  3792                           fsr1l	equ	0xFE1
  3793                           
  3794 ;; *************** function _Pm_DsReleasePinControl *****************
  3795 ;; Defined at:
  3796 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		None
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:   11
  3817 ;; This function calls:
  3818 ;;		Nothing
  3819 ;; This function is called by:
  3820 ;;		_SystemInit
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           	psect	text3
  3825  0064EA                     __ptext3:
  3826                           	opt stack 0
  3827  0064EA                     _Pm_DsReleasePinControl:
  3828                           	opt stack 18
  3829                           
  3830                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3831                           
  3832                           ;incstack = 0
  3833  0064EA  010F               	movlb	15	; () banked
  3834  0064EC  914C               	bcf	76,0,b	;volatile
  3835                           
  3836                           ; BSR set to: 15
  3837  0064EE  0012               	return		;funcret
  3838  0064F0                     __end_of_Pm_DsReleasePinControl:
  3839                           	opt stack 0
  3840                           tblptru	equ	0xFF8
  3841                           tblptrh	equ	0xFF7
  3842                           tblptrl	equ	0xFF6
  3843                           tablat	equ	0xFF5
  3844                           postinc0	equ	0xFEE
  3845                           wreg	equ	0xFE8
  3846                           postdec1	equ	0xFE5
  3847                           fsr1h	equ	0xFE2
  3848                           fsr1l	equ	0xFE1
  3849                           
  3850 ;; *************** function _Mcu_StartSystemPll *****************
  3851 ;; Defined at:
  3852 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;		None
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, status,2, status,0
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3867 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3869 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3870 ;;Total ram usage:        2 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:   11
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_SystemInit
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text4
  3881  006274                     __ptext4:
  3882                           	opt stack 0
  3883  006274                     _Mcu_StartSystemPll:
  3884                           	opt stack 18
  3885                           
  3886                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3887                           
  3888                           ; BSR set to: 15
  3889                           ;incstack = 0
  3890  006274  0E03               	movlw	3
  3891  006276  0100               	movlb	0	; () banked
  3892  006278  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3893  00627A  0EE8               	movlw	232
  3894  00627C  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3898  00627E  8C9B               	bsf	3995,6,c	;volatile
  3899  006280                     l11432:
  3900                           
  3901                           ; BSR set to: 0
  3902  006280  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3903  006282  A0D8               	btfss	status,0,c
  3904  006284  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3905  006286  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3906  006288  E1FB               	bnz	l11432
  3907  00628A  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3908  00628C  B4D8               	btfsc	status,2,c
  3909  00628E  0012               	return	
  3910  006290  D7F7               	goto	l237
  3911  006292                     __end_of_Mcu_StartSystemPll:
  3912                           	opt stack 0
  3913                           tblptru	equ	0xFF8
  3914                           tblptrh	equ	0xFF7
  3915                           tblptrl	equ	0xFF6
  3916                           tablat	equ	0xFF5
  3917                           postinc0	equ	0xFEE
  3918                           wreg	equ	0xFE8
  3919                           postdec1	equ	0xFE5
  3920                           fsr1h	equ	0xFE2
  3921                           fsr1l	equ	0xFE1
  3922                           status	equ	0xFD8
  3923                           
  3924 ;; *************** function _Mcu_ConfigExtInt *****************
  3925 ;; Defined at:
  3926 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;		None
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      void 
  3933 ;; Registers used:
  3934 ;;		wreg, status,2
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3944 ;;Total ram usage:        0 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:   11
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_SystemInit
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text5
  3955  0062E8                     __ptext5:
  3956                           	opt stack 0
  3957  0062E8                     _Mcu_ConfigExtInt:
  3958                           	opt stack 18
  3959                           
  3960                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;incstack = 0
  3964  0062E8  8093               	bsf	3987,0,c	;volatile
  3965                           
  3966                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  3967  0062EA  8695               	bsf	3989,3,c	;volatile
  3968                           
  3969                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  3970  0062EC  010F               	movlb	15	; () banked
  3971  0062EE  8949               	bsf	73,4,b	;volatile
  3972                           
  3973                           ; BSR set to: 15
  3974                           ;mcu_drv.c: 108: RPINR1 = 20;
  3975  0062F0  0E14               	movlw	20
  3976  0062F2  010E               	movlb	14	; () banked
  3977  0062F4  6FE7               	movwf	231,b	;volatile
  3978                           
  3979                           ; BSR set to: 14
  3980                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  3981  0062F6  88F2               	bsf	intcon,4,c	;volatile
  3982                           
  3983                           ; BSR set to: 14
  3984                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  3985  0062F8  86F0               	bsf	intcon3,3,c	;volatile
  3986                           
  3987                           ; BSR set to: 14
  3988                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  3989  0062FA  8CF0               	bsf	intcon3,6,c	;volatile
  3990                           
  3991                           ; BSR set to: 14
  3992                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  3993  0062FC  9CF1               	bcf	intcon2,6,c	;volatile
  3994                           
  3995                           ; BSR set to: 14
  3996                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  3997  0062FE  9AF1               	bcf	intcon2,5,c	;volatile
  3998                           
  3999                           ; BSR set to: 14
  4000  006300  0012               	return		;funcret
  4001  006302                     __end_of_Mcu_ConfigExtInt:
  4002                           	opt stack 0
  4003                           tblptru	equ	0xFF8
  4004                           tblptrh	equ	0xFF7
  4005                           tblptrl	equ	0xFF6
  4006                           tablat	equ	0xFF5
  4007                           intcon	equ	0xFF2
  4008                           intcon2	equ	0xFF1
  4009                           intcon3	equ	0xFF0
  4010                           postinc0	equ	0xFEE
  4011                           wreg	equ	0xFE8
  4012                           postdec1	equ	0xFE5
  4013                           fsr1h	equ	0xFE2
  4014                           fsr1l	equ	0xFE1
  4015                           status	equ	0xFD8
  4016                           
  4017 ;; *************** function _Irq_InitIntController *****************
  4018 ;; Defined at:
  4019 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  IntPriorityE    1    wreg     enum E7720
  4022 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4023 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      void 
  4028 ;; Registers used:
  4029 ;;		wreg
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4035 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4036 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4038 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4039 ;;Total ram usage:        3 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:   11
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_SystemInit
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text6
  4050  005FC4                     __ptext6:
  4051                           	opt stack 0
  4052  005FC4                     _Irq_InitIntController:
  4053                           	opt stack 18
  4054                           
  4055                           ; BSR set to: 14
  4056                           ;incstack = 0
  4057                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4058  005FC4  0100               	movlb	0	; () banked
  4059  005FC6  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4060                           
  4061                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4062  005FC8  0100               	movlb	0	; () banked
  4063  005FCA  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4064  005FCC  D002               	bra	u9835
  4065  005FCE  9ED0               	bcf	4048,7,c	;volatile
  4066  005FD0  D001               	bra	u9836
  4067  005FD2                     u9835:
  4068  005FD2  8ED0               	bsf	4048,7,c	;volatile
  4069  005FD4                     u9836:
  4070                           
  4071                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4072  005FD4  0100               	movlb	0	; () banked
  4073  005FD6  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4074  005FD8  D002               	bra	u9845
  4075  005FDA  9EF2               	bcf	intcon,7,c	;volatile
  4076  005FDC  D001               	bra	u9846
  4077  005FDE                     u9845:
  4078  005FDE  8EF2               	bsf	intcon,7,c	;volatile
  4079  005FE0                     u9846:
  4080                           
  4081                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4082  005FE0  0100               	movlb	0	; () banked
  4083  005FE2  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4084  005FE4  D002               	bra	u9855
  4085  005FE6  9CF2               	bcf	intcon,6,c	;volatile
  4086  005FE8  D001               	bra	u9856
  4087  005FEA                     u9855:
  4088  005FEA  8CF2               	bsf	intcon,6,c	;volatile
  4089  005FEC                     u9856:
  4090  005FEC  0012               	return		;funcret
  4091  005FEE                     __end_of_Irq_InitIntController:
  4092                           	opt stack 0
  4093                           tblptru	equ	0xFF8
  4094                           tblptrh	equ	0xFF7
  4095                           tblptrl	equ	0xFF6
  4096                           tablat	equ	0xFF5
  4097                           intcon	equ	0xFF2
  4098                           intcon2	equ	0xFF1
  4099                           intcon3	equ	0xFF0
  4100                           postinc0	equ	0xFEE
  4101                           wreg	equ	0xFE8
  4102                           postdec1	equ	0xFE5
  4103                           fsr1h	equ	0xFE2
  4104                           fsr1l	equ	0xFE1
  4105                           status	equ	0xFD8
  4106                           
  4107 ;; *************** function _InitSchedTimer *****************
  4108 ;; Defined at:
  4109 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      void 
  4116 ;; Registers used:
  4117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4124 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4126 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4127 ;;Total ram usage:        7 bytes
  4128 ;; Hardware stack levels used:    1
  4129 ;; Hardware stack levels required when called:   14
  4130 ;; This function calls:
  4131 ;;		_Tmr_TmrBConfig
  4132 ;; This function is called by:
  4133 ;;		_SystemInit
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           	psect	text7
  4138  005F3C                     __ptext7:
  4139                           	opt stack 0
  4140  005F3C                     _InitSchedTimer:
  4141                           	opt stack 15
  4142                           
  4143                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4144                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4145                           
  4146                           ;incstack = 0
  4147  005F3C  0E04               	movlw	4
  4148  005F3E  0100               	movlb	0	; () banked
  4149  005F40  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4150                           
  4151                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4152  005F42  0E0C               	movlw	12
  4153  005F44  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4154                           
  4155                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4156  005F46  0E00               	movlw	0
  4157  005F48  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4158                           
  4159                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4160  005F4A  0E01               	movlw	1
  4161  005F4C  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4162                           
  4163                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4164  005F4E  0E03               	movlw	3
  4165  005F50  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4166  005F52  0EE8               	movlw	232
  4167  005F54  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4168                           
  4169                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4170  005F56  0E01               	movlw	1
  4171  005F58  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4175  005F5A  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4176  005F5C  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4177  005F5E  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4178  005F60  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4179  005F62  0E02               	movlw	2
  4180  005F64  EC39  F01E         	call	_Tmr_TmrBConfig
  4181  005F68  0012               	return		;funcret
  4182  005F6A                     __end_of_InitSchedTimer:
  4183                           	opt stack 0
  4184                           tblptru	equ	0xFF8
  4185                           tblptrh	equ	0xFF7
  4186                           tblptrl	equ	0xFF6
  4187                           tablat	equ	0xFF5
  4188                           intcon	equ	0xFF2
  4189                           intcon2	equ	0xFF1
  4190                           intcon3	equ	0xFF0
  4191                           postinc0	equ	0xFEE
  4192                           wreg	equ	0xFE8
  4193                           postdec1	equ	0xFE5
  4194                           fsr1h	equ	0xFE2
  4195                           fsr1l	equ	0xFE1
  4196                           status	equ	0xFD8
  4197                           
  4198 ;; *************** function _Tmr_TmrBConfig *****************
  4199 ;; Defined at:
  4200 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  TmrNumb         1    wreg     unsigned char 
  4203 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4204 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      void 
  4209 ;; Registers used:
  4210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4216 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4217 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4218 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4219 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4220 ;;Total ram usage:        4 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:   13
  4223 ;; This function calls:
  4224 ;;		_TmrBInit
  4225 ;;		_Tmr_StartTmr
  4226 ;;		_Tmr_TmrBIrqSet
  4227 ;;		_Tmr_TmrBPrSet
  4228 ;; This function is called by:
  4229 ;;		_InitSchedTimer
  4230 ;;		_InitAuxTimer
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text8
  4235  003C72                     __ptext8:
  4236                           	opt stack 0
  4237  003C72                     _Tmr_TmrBConfig:
  4238                           	opt stack 15
  4239                           
  4240                           ;incstack = 0
  4241                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4242  003C72  0100               	movlb	0	; () banked
  4243  003C74  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4244                           
  4245                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4246  003C76  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4247  003C7A  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4248  003C7E  50DF               	movf	indf2,w,c
  4249  003C80  0100               	movlb	0	; () banked
  4250  003C82  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4251  003C84  EE20 F001          	lfsr	2,1
  4252  003C88  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4253  003C8A  26D9               	addwf	fsr2l,f,c
  4254  003C8C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4255  003C8E  22DA               	addwfc	fsr2h,f,c
  4256  003C90  50DF               	movf	indf2,w,c
  4257  003C92  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4258  003C94  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4259  003C96  ECC7  F023         	call	_TmrBInit
  4260                           
  4261                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4262  003C9A  0100               	movlb	0	; () banked
  4263  003C9C  EE20 F002          	lfsr	2,2
  4264  003CA0  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4265  003CA2  26D9               	addwf	fsr2l,f,c
  4266  003CA4  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4267  003CA6  22DA               	addwfc	fsr2h,f,c
  4268  003CA8  04DE               	decf	postinc2,w,c
  4269  003CAA  A4D8               	btfss	status,2,c
  4270  003CAC  D00E               	goto	l546
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;tmr_drv.c: 277: {
  4274                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4275  003CAE  EE20 F003          	lfsr	2,3
  4276  003CB2  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4277  003CB4  26D9               	addwf	fsr2l,f,c
  4278  003CB6  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4279  003CB8  22DA               	addwfc	fsr2h,f,c
  4280  003CBA  50DF               	movf	indf2,w,c
  4281  003CBC  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4282  003CBE  0E01               	movlw	1
  4283  003CC0  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4284  003CC2  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4285  003CC4  EC49  F02C         	call	_Tmr_TmrBIrqSet
  4286                           
  4287                           ;tmr_drv.c: 280: }
  4288  003CC8  D00E               	goto	l547
  4289  003CCA                     l546:
  4290                           
  4291                           ;tmr_drv.c: 281: else
  4292                           ;tmr_drv.c: 282: {
  4293                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4294  003CCA  0100               	movlb	0	; () banked
  4295  003CCC  EE20 F003          	lfsr	2,3
  4296  003CD0  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4297  003CD2  26D9               	addwf	fsr2l,f,c
  4298  003CD4  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4299  003CD6  22DA               	addwfc	fsr2h,f,c
  4300  003CD8  50DF               	movf	indf2,w,c
  4301  003CDA  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4302  003CDC  0E00               	movlw	0
  4303  003CDE  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4304  003CE0  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4305  003CE2  EC49  F02C         	call	_Tmr_TmrBIrqSet
  4306  003CE6                     l547:
  4307                           
  4308                           ;tmr_drv.c: 285: }
  4309                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4310  003CE6  0100               	movlb	0	; () banked
  4311  003CE8  EE20 F004          	lfsr	2,4
  4312  003CEC  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4313  003CEE  26D9               	addwf	fsr2l,f,c
  4314  003CF0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4315  003CF2  22DA               	addwfc	fsr2h,f,c
  4316  003CF4  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4317  003CF8  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4318  003CFC  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4319  003D00  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4320  003D04  50DF               	movf	indf2,w,c
  4321  003D06  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4322  003D08  EE20 F001          	lfsr	2,1
  4323  003D0C  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4324  003D0E  26D9               	addwf	fsr2l,f,c
  4325  003D10  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4326  003D12  22DA               	addwfc	fsr2h,f,c
  4327  003D14  50DF               	movf	indf2,w,c
  4328  003D16  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4329  003D18  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4330  003D1A  ECB8  F018         	call	_Tmr_TmrBPrSet
  4331                           
  4332                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4333  003D1E  0100               	movlb	0	; () banked
  4334  003D20  EE20 F006          	lfsr	2,6
  4335  003D24  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4336  003D26  26D9               	addwf	fsr2l,f,c
  4337  003D28  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4338  003D2A  22DA               	addwfc	fsr2h,f,c
  4339  003D2C  04DE               	decf	postinc2,w,c
  4340  003D2E  A4D8               	btfss	status,2,c
  4341  003D30  0012               	return	
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;tmr_drv.c: 290: {
  4345                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4346  003D32  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4347  003D34  EC0A  F031         	call	_Tmr_StartTmr
  4348                           
  4349                           ;tmr_drv.c: 293: }
  4350  003D38  0012               	return	
  4351  003D3A                     __end_of_Tmr_TmrBConfig:
  4352                           	opt stack 0
  4353                           tblptru	equ	0xFF8
  4354                           tblptrh	equ	0xFF7
  4355                           tblptrl	equ	0xFF6
  4356                           tablat	equ	0xFF5
  4357                           intcon	equ	0xFF2
  4358                           intcon2	equ	0xFF1
  4359                           intcon3	equ	0xFF0
  4360                           postinc0	equ	0xFEE
  4361                           wreg	equ	0xFE8
  4362                           postdec1	equ	0xFE5
  4363                           fsr1h	equ	0xFE2
  4364                           fsr1l	equ	0xFE1
  4365                           indf2	equ	0xFDF
  4366                           postinc2	equ	0xFDE
  4367                           postdec2	equ	0xFDD
  4368                           fsr2h	equ	0xFDA
  4369                           fsr2l	equ	0xFD9
  4370                           status	equ	0xFD8
  4371                           
  4372 ;; *************** function _Tmr_TmrBPrSet *****************
  4373 ;; Defined at:
  4374 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  TmrNumb         1    wreg     unsigned char 
  4377 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4378 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4379 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4382 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4383 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      enum E7736
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4393 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4394 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4396 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4397 ;;Total ram usage:       10 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:   12
  4400 ;; This function calls:
  4401 ;;		___lldiv
  4402 ;;		___lmul
  4403 ;; This function is called by:
  4404 ;;		_Tmr_TmrBConfig
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text9
  4409  003170                     __ptext9:
  4410                           	opt stack 0
  4411  003170                     _Tmr_TmrBPrSet:
  4412                           	opt stack 15
  4413                           
  4414                           ;incstack = 0
  4415                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4416  003170  0100               	movlb	0	; () banked
  4417  003172  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4418                           
  4419                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4420                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4421  003174  0E00               	movlw	0
  4422  003176  0100               	movlb	0	; () banked
  4423  003178  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4424  00317A  0E00               	movlw	0
  4425  00317C  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4426  00317E  0E00               	movlw	0
  4427  003180  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4428  003182  0E00               	movlw	0
  4429  003184  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4433  003186  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4434  003188  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4435  00318A  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4436  00318E  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4437  003192  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4438  003194  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4439  003196  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4440  00319A  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4441  00319E  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4442  0031A0  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4443  0031A2  ECB4  F029         	call	___lmul	;wreg free
  4444  0031A6  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4445  0031AA  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4446  0031AE  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4447  0031B2  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4448                           
  4449                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4450  0031B6  0E00               	movlw	0
  4451  0031B8  0100               	movlb	0	; () banked
  4452  0031BA  6F89               	movwf	___lldiv@dividend& (0+255),b
  4453  0031BC  0E1B               	movlw	27
  4454  0031BE  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4455  0031C0  0EB7               	movlw	183
  4456  0031C2  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4457  0031C4  0E00               	movlw	0
  4458  0031C6  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4459  0031C8  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4460  0031CC  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4461  0031D0  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4462  0031D4  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4463  0031D8  EC96  F026         	call	___lldiv	;wreg free
  4464  0031DC  0100               	movlb	0	; () banked
  4465  0031DE  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4466  0031E0  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4467  0031E2  E13A               	bnz	l14342
  4468  0031E4  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4469  0031E6  A0D8               	btfss	status,0,c
  4470  0031E8  D02D               	goto	l529
  4471  0031EA  D036               	goto	l528
  4472  0031EC                     
  4473                           ; BSR set to: 0
  4474                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4475                           
  4476                           ; BSR set to: 0
  4477  0031EC  0E00               	movlw	0
  4478  0031EE  6F89               	movwf	___lldiv@dividend& (0+255),b
  4479  0031F0  0E1B               	movlw	27
  4480  0031F2  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4481  0031F4  0EB7               	movlw	183
  4482  0031F6  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4483  0031F8  0E00               	movlw	0
  4484  0031FA  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4485  0031FC  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4486  003200  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4487  003204  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4488  003208  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4489  00320C  EC96  F026         	call	___lldiv	;wreg free
  4490  003210  0100               	movlb	0	; () banked
  4491  003212  5189               	movf	?___lldiv& (0+255),w,b
  4492  003214  6ECB               	movwf	4043,c	;volatile
  4493                           
  4494                           ;tmr_drv.c: 210: break;
  4495  003216  D01D               	goto	l531
  4496  003218                     
  4497                           ; BSR set to: 0
  4498                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4499                           
  4500                           ; BSR set to: 0
  4501  003218  0E00               	movlw	0
  4502  00321A  6F89               	movwf	___lldiv@dividend& (0+255),b
  4503  00321C  0E1B               	movlw	27
  4504  00321E  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4505  003220  0EB7               	movlw	183
  4506  003222  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4507  003224  0E00               	movlw	0
  4508  003226  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4509  003228  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4510  00322C  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4511  003230  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4512  003234  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4513  003238  EC96  F026         	call	___lldiv	;wreg free
  4514  00323C  0100               	movlb	0	; () banked
  4515  00323E  5189               	movf	?___lldiv& (0+255),w,b
  4516  003240  6E77               	movwf	3959,c	;volatile
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;tmr_drv.c: 219: }
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;tmr_drv.c: 218: break;
  4523                           
  4524                           ;tmr_drv.c: 217: default:
  4525                           
  4526                           ;tmr_drv.c: 215: break;
  4527  003242  D007               	goto	l531
  4528  003244                     l529:
  4529                           
  4530                           ; BSR set to: 0
  4531                           
  4532                           ; BSR set to: 0
  4533  003244  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4534                           
  4535                           ; Switch size 1, requested type "space"
  4536                           ; Number of cases is 2, Range of values is 2 to 4
  4537                           ; switch strategies available:
  4538                           ; Name         Instructions Cycles
  4539                           ; simple_byte            7     4 (average)
  4540                           ;	Chosen strategy is simple_byte
  4541  003246  0A02               	xorlw	2	; case 2
  4542  003248  B4D8               	btfsc	status,2,c
  4543  00324A  D7D0               	goto	l530
  4544  00324C  0A06               	xorlw	6	; case 4
  4545  00324E  B4D8               	btfsc	status,2,c
  4546  003250  D7E3               	goto	l532
  4547  003252                     l531:
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4551                           
  4552                           ; BSR set to: 0
  4553  003252  0E00               	movlw	0
  4554  003254  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4555                           
  4556                           ;tmr_drv.c: 223: }
  4557  003256  0012               	return	
  4558  003258                     l528:
  4559  003258                     l14342:
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;tmr_drv.c: 224: else
  4563                           ;tmr_drv.c: 225: {
  4564                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4565  003258  0E01               	movlw	1
  4566  00325A  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4567                           
  4568                           ; BSR set to: 0
  4569  00325C  0012               	return	
  4570  00325E                     __end_of_Tmr_TmrBPrSet:
  4571                           	opt stack 0
  4572                           tblptru	equ	0xFF8
  4573                           tblptrh	equ	0xFF7
  4574                           tblptrl	equ	0xFF6
  4575                           tablat	equ	0xFF5
  4576                           prodh	equ	0xFF4
  4577                           prodl	equ	0xFF3
  4578                           intcon	equ	0xFF2
  4579                           intcon2	equ	0xFF1
  4580                           intcon3	equ	0xFF0
  4581                           postinc0	equ	0xFEE
  4582                           wreg	equ	0xFE8
  4583                           postdec1	equ	0xFE5
  4584                           fsr1h	equ	0xFE2
  4585                           fsr1l	equ	0xFE1
  4586                           indf2	equ	0xFDF
  4587                           postinc2	equ	0xFDE
  4588                           postdec2	equ	0xFDD
  4589                           fsr2h	equ	0xFDA
  4590                           fsr2l	equ	0xFD9
  4591                           status	equ	0xFD8
  4592                           
  4593 ;; *************** function _Tmr_TmrBIrqSet *****************
  4594 ;; Defined at:
  4595 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  TmrNumb         1    wreg     unsigned char 
  4598 ;;  Priority        1   29[BANK0 ] enum E7716
  4599 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      void 
  4604 ;; Registers used:
  4605 ;;		wreg, status,2, status,0
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4611 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4614 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4615 ;;Total ram usage:        3 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; Hardware stack levels required when called:   11
  4618 ;; This function calls:
  4619 ;;		Nothing
  4620 ;; This function is called by:
  4621 ;;		_Tmr_TmrBConfig
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625                           	psect	text10
  4626  005892                     __ptext10:
  4627                           	opt stack 0
  4628  005892                     _Tmr_TmrBIrqSet:
  4629                           	opt stack 16
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;incstack = 0
  4633                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4634  005892  0100               	movlb	0	; () banked
  4635  005894  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4636                           
  4637                           ;tmr_drv.c: 156: switch (TmrNumb)
  4638  005896  D01A               	goto	l520
  4639  005898                     l521:
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4643  005898  929E               	bcf	3998,1,c	;volatile
  4644                           
  4645                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4646  00589A  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4647  00589C  D002               	bra	u8385
  4648  00589E  929F               	bcf	3999,1,c	;volatile
  4649  0058A0  D001               	bra	u8386
  4650  0058A2                     u8385:
  4651  0058A2  829F               	bsf	3999,1,c	;volatile
  4652  0058A4                     u8386:
  4653                           
  4654                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4655  0058A4  0100               	movlb	0	; () banked
  4656  0058A6  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4657  0058A8  D002               	bra	u8395
  4658  0058AA  929D               	bcf	3997,1,c	;volatile
  4659  0058AC  D001               	bra	u8396
  4660  0058AE                     u8395:
  4661  0058AE  829D               	bsf	3997,1,c	;volatile
  4662  0058B0                     u8396:
  4663                           
  4664                           ;tmr_drv.c: 165: break;
  4665  0058B0  0012               	return	
  4666  0058B2                     l523:
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4670  0058B2  96A4               	bcf	4004,3,c	;volatile
  4671                           
  4672                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4673  0058B4  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4674  0058B6  D002               	bra	u8405
  4675  0058B8  96A5               	bcf	4005,3,c	;volatile
  4676  0058BA  D001               	bra	u8406
  4677  0058BC                     u8405:
  4678  0058BC  86A5               	bsf	4005,3,c	;volatile
  4679  0058BE                     u8406:
  4680                           
  4681                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4682  0058BE  0100               	movlb	0	; () banked
  4683  0058C0  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4684  0058C2  D002               	bra	u8415
  4685  0058C4  96A3               	bcf	4003,3,c	;volatile
  4686  0058C6  D001               	bra	u8416
  4687  0058C8                     u8415:
  4688  0058C8  86A3               	bsf	4003,3,c	;volatile
  4689  0058CA                     u8416:
  4690                           
  4691                           ;tmr_drv.c: 178: }
  4692                           
  4693                           ;tmr_drv.c: 177: break;
  4694                           
  4695                           ;tmr_drv.c: 176: default:
  4696                           
  4697                           ;tmr_drv.c: 174: break;
  4698  0058CA  0012               	return	
  4699  0058CC                     l520:
  4700  0058CC  0100               	movlb	0	; () banked
  4701  0058CE  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4702                           
  4703                           ; Switch size 1, requested type "space"
  4704                           ; Number of cases is 2, Range of values is 2 to 4
  4705                           ; switch strategies available:
  4706                           ; Name         Instructions Cycles
  4707                           ; simple_byte            7     4 (average)
  4708                           ;	Chosen strategy is simple_byte
  4709  0058D0  0A02               	xorlw	2	; case 2
  4710  0058D2  B4D8               	btfsc	status,2,c
  4711  0058D4  D7E1               	goto	l521
  4712  0058D6  0A06               	xorlw	6	; case 4
  4713  0058D8  A4D8               	btfss	status,2,c
  4714  0058DA  0012               	return	
  4715  0058DC  D7EA               	goto	l523
  4716  0058DE                     __end_of_Tmr_TmrBIrqSet:
  4717                           	opt stack 0
  4718                           tblptru	equ	0xFF8
  4719                           tblptrh	equ	0xFF7
  4720                           tblptrl	equ	0xFF6
  4721                           tablat	equ	0xFF5
  4722                           prodh	equ	0xFF4
  4723                           prodl	equ	0xFF3
  4724                           intcon	equ	0xFF2
  4725                           intcon2	equ	0xFF1
  4726                           intcon3	equ	0xFF0
  4727                           postinc0	equ	0xFEE
  4728                           wreg	equ	0xFE8
  4729                           postdec1	equ	0xFE5
  4730                           fsr1h	equ	0xFE2
  4731                           fsr1l	equ	0xFE1
  4732                           indf2	equ	0xFDF
  4733                           postinc2	equ	0xFDE
  4734                           postdec2	equ	0xFDD
  4735                           fsr2h	equ	0xFDA
  4736                           fsr2l	equ	0xFD9
  4737                           status	equ	0xFD8
  4738                           
  4739 ;; *************** function _Tmr_StartTmr *****************
  4740 ;; Defined at:
  4741 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  TmrNumb         1    wreg     unsigned char 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, status,2, status,0
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4756 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4758 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4759 ;;Total ram usage:        1 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:   11
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_Tmr_TmrBConfig
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text11
  4770  006214                     __ptext11:
  4771                           	opt stack 0
  4772  006214                     _Tmr_StartTmr:
  4773                           	opt stack 16
  4774                           
  4775                           ;incstack = 0
  4776                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4777  006214  0100               	movlb	0	; () banked
  4778  006216  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4779                           
  4780                           ;tmr_drv.c: 245: switch (TmrNumb)
  4781  006218  D004               	goto	l538
  4782  00621A                     l539:
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4786  00621A  84CA               	bsf	4042,2,c	;volatile
  4787                           
  4788                           ;tmr_drv.c: 250: break;
  4789  00621C  0012               	return	
  4790  00621E                     l541:
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4794  00621E  8476               	bsf	3958,2,c	;volatile
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;tmr_drv.c: 259: }
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;tmr_drv.c: 258: break;
  4801                           
  4802                           ;tmr_drv.c: 257: default:
  4803                           
  4804                           ;tmr_drv.c: 255: break;
  4805  006220  0012               	return	
  4806  006222                     l538:
  4807                           
  4808                           ; BSR set to: 0
  4809  006222  0100               	movlb	0	; () banked
  4810  006224  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4811                           
  4812                           ; Switch size 1, requested type "space"
  4813                           ; Number of cases is 2, Range of values is 2 to 4
  4814                           ; switch strategies available:
  4815                           ; Name         Instructions Cycles
  4816                           ; simple_byte            7     4 (average)
  4817                           ;	Chosen strategy is simple_byte
  4818  006226  0A02               	xorlw	2	; case 2
  4819  006228  B4D8               	btfsc	status,2,c
  4820  00622A  D7F7               	goto	l539
  4821  00622C  0A06               	xorlw	6	; case 4
  4822  00622E  A4D8               	btfss	status,2,c
  4823  006230  0012               	return	
  4824  006232  D7F5               	goto	l541
  4825  006234                     __end_of_Tmr_StartTmr:
  4826                           	opt stack 0
  4827                           tblptru	equ	0xFF8
  4828                           tblptrh	equ	0xFF7
  4829                           tblptrl	equ	0xFF6
  4830                           tablat	equ	0xFF5
  4831                           prodh	equ	0xFF4
  4832                           prodl	equ	0xFF3
  4833                           intcon	equ	0xFF2
  4834                           intcon2	equ	0xFF1
  4835                           intcon3	equ	0xFF0
  4836                           postinc0	equ	0xFEE
  4837                           wreg	equ	0xFE8
  4838                           postdec1	equ	0xFE5
  4839                           fsr1h	equ	0xFE2
  4840                           fsr1l	equ	0xFE1
  4841                           indf2	equ	0xFDF
  4842                           postinc2	equ	0xFDE
  4843                           postdec2	equ	0xFDD
  4844                           fsr2h	equ	0xFDA
  4845                           fsr2l	equ	0xFD9
  4846                           status	equ	0xFD8
  4847                           
  4848 ;; *************** function _TmrBInit *****************
  4849 ;; Defined at:
  4850 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  TmrNumb         1    wreg     unsigned char 
  4853 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4854 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg, status,2, status,0
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4866 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4867 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4868 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4869 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4870 ;;Total ram usage:        4 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:   11
  4873 ;; This function calls:
  4874 ;;		Nothing
  4875 ;; This function is called by:
  4876 ;;		_Tmr_TmrBConfig
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           	psect	text12
  4881  00478E                     __ptext12:
  4882                           	opt stack 0
  4883  00478E                     _TmrBInit:
  4884                           	opt stack 16
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;incstack = 0
  4888                           ;TmrBInit@TmrNumb stored from wreg
  4889  00478E  0100               	movlb	0	; () banked
  4890  004790  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4891                           
  4892                           ;tmr_drv.c: 75: switch (TmrNumb)
  4893  004792  D03F               	goto	l500
  4894  004794                     l503:
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4898  004794  90CA               	bcf	4042,0,c	;volatile
  4899  004796  D001               	goto	L1
  4900  004798                     l505:
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4904  004798  80CA               	bsf	4042,0,c	;volatile
  4905  00479A                     L1:
  4906                           
  4907                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4908  00479A  92CA               	bcf	4042,1,c	;volatile
  4909                           
  4910                           ;tmr_drv.c: 91: break;
  4911  00479C  D00E               	goto	l504
  4912  00479E                     l506:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4916  00479E  80CA               	bsf	4042,0,c	;volatile
  4917                           
  4918                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4919  0047A0  82CA               	bsf	4042,1,c	;volatile
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;tmr_drv.c: 100: }
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;tmr_drv.c: 99: break;
  4926                           
  4927                           ;tmr_drv.c: 98: default:
  4928                           
  4929                           ;tmr_drv.c: 96: break;
  4930  0047A2  D00B               	goto	l504
  4931  0047A4                     
  4932                           ; BSR set to: 0
  4933  0047A4  0100               	movlb	0	; () banked
  4934  0047A6  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4935                           
  4936                           ; Switch size 1, requested type "space"
  4937                           ; Number of cases is 3, Range of values is 1 to 16
  4938                           ; switch strategies available:
  4939                           ; Name         Instructions Cycles
  4940                           ; simple_byte           10     6 (average)
  4941                           ;	Chosen strategy is simple_byte
  4942  0047A8  0A01               	xorlw	1	; case 1
  4943  0047AA  B4D8               	btfsc	status,2,c
  4944  0047AC  D7F3               	goto	l503
  4945  0047AE  0A05               	xorlw	5	; case 4
  4946  0047B0  B4D8               	btfsc	status,2,c
  4947  0047B2  D7F2               	goto	l505
  4948  0047B4  0A14               	xorlw	20	; case 16
  4949  0047B6  B4D8               	btfsc	status,2,c
  4950  0047B8  D7F2               	goto	l506
  4951  0047BA                     l504:
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4955                           
  4956                           ; BSR set to: 0
  4957  0047BA  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4958  0047BE  0EFF               	movlw	255
  4959  0047C0  277F               	addwf	??_TmrBInit& (0+255),f,b
  4960  0047C2  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4961  0047C4  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4962  0047C6  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4963  0047C8  50CA               	movf	4042,w,c	;volatile
  4964  0047CA  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4965  0047CC  0B87               	andlw	-121
  4966  0047CE  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4967  0047D0  6ECA               	movwf	4042,c	;volatile
  4968                           
  4969                           ;tmr_drv.c: 104: break;
  4970  0047D2  0012               	return	
  4971  0047D4                     l511:
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4975  0047D4  9076               	bcf	3958,0,c	;volatile
  4976  0047D6  D001               	goto	L2
  4977  0047D8                     l513:
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4981  0047D8  8076               	bsf	3958,0,c	;volatile
  4982  0047DA                     L2:
  4983                           
  4984                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4985  0047DA  9276               	bcf	3958,1,c	;volatile
  4986                           
  4987                           ;tmr_drv.c: 120: break;
  4988  0047DC  D00D               	goto	l512
  4989  0047DE                     l514:
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4993  0047DE  8076               	bsf	3958,0,c	;volatile
  4994                           
  4995                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4996  0047E0  8276               	bsf	3958,1,c	;volatile
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;tmr_drv.c: 129: }
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;tmr_drv.c: 128: break;
  5003                           
  5004                           ;tmr_drv.c: 127: default:
  5005                           
  5006                           ;tmr_drv.c: 125: break;
  5007  0047E2  D00A               	goto	l512
  5008  0047E4                     
  5009                           ; BSR set to: 0
  5010                           
  5011                           ; BSR set to: 0
  5012  0047E4  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5013                           
  5014                           ; Switch size 1, requested type "space"
  5015                           ; Number of cases is 3, Range of values is 1 to 16
  5016                           ; switch strategies available:
  5017                           ; Name         Instructions Cycles
  5018                           ; simple_byte           10     6 (average)
  5019                           ;	Chosen strategy is simple_byte
  5020  0047E6  0A01               	xorlw	1	; case 1
  5021  0047E8  B4D8               	btfsc	status,2,c
  5022  0047EA  D7F4               	goto	l511
  5023  0047EC  0A05               	xorlw	5	; case 4
  5024  0047EE  B4D8               	btfsc	status,2,c
  5025  0047F0  D7F3               	goto	l513
  5026  0047F2  0A14               	xorlw	20	; case 16
  5027  0047F4  B4D8               	btfsc	status,2,c
  5028  0047F6  D7F3               	goto	l514
  5029  0047F8                     l512:
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5033                           
  5034                           ; BSR set to: 0
  5035  0047F8  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5036  0047FC  0EFF               	movlw	255
  5037  0047FE  277F               	addwf	??_TmrBInit& (0+255),f,b
  5038  004800  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5039  004802  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5040  004804  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5041  004806  5076               	movf	3958,w,c	;volatile
  5042  004808  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5043  00480A  0B87               	andlw	-121
  5044  00480C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5045  00480E  6E76               	movwf	3958,c	;volatile
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;tmr_drv.c: 137: }
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;tmr_drv.c: 136: break;
  5052                           
  5053                           ;tmr_drv.c: 135: default:
  5054                           
  5055                           ;tmr_drv.c: 133: break;
  5056  004810  0012               	return	
  5057  004812                     l500:
  5058                           
  5059                           ; BSR set to: 0
  5060  004812  0100               	movlb	0	; () banked
  5061  004814  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5062                           
  5063                           ; Switch size 1, requested type "space"
  5064                           ; Number of cases is 2, Range of values is 2 to 4
  5065                           ; switch strategies available:
  5066                           ; Name         Instructions Cycles
  5067                           ; simple_byte            7     4 (average)
  5068                           ;	Chosen strategy is simple_byte
  5069  004816  0A02               	xorlw	2	; case 2
  5070  004818  B4D8               	btfsc	status,2,c
  5071  00481A  D7C4               	goto	l502
  5072  00481C  0A06               	xorlw	6	; case 4
  5073  00481E  A4D8               	btfss	status,2,c
  5074  004820  0012               	return	
  5075  004822  D7E0               	goto	l510
  5076  004824                     __end_of_TmrBInit:
  5077                           	opt stack 0
  5078                           tblptru	equ	0xFF8
  5079                           tblptrh	equ	0xFF7
  5080                           tblptrl	equ	0xFF6
  5081                           tablat	equ	0xFF5
  5082                           prodh	equ	0xFF4
  5083                           prodl	equ	0xFF3
  5084                           intcon	equ	0xFF2
  5085                           intcon2	equ	0xFF1
  5086                           intcon3	equ	0xFF0
  5087                           postinc0	equ	0xFEE
  5088                           wreg	equ	0xFE8
  5089                           postdec1	equ	0xFE5
  5090                           fsr1h	equ	0xFE2
  5091                           fsr1l	equ	0xFE1
  5092                           indf2	equ	0xFDF
  5093                           postinc2	equ	0xFDE
  5094                           postdec2	equ	0xFDD
  5095                           fsr2h	equ	0xFDA
  5096                           fsr2l	equ	0xFD9
  5097                           status	equ	0xFD8
  5098                           
  5099 ;; *************** function _Sch_MainScheduler *****************
  5100 ;; Defined at:
  5101 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;		None
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  1    wreg      void 
  5108 ;; Registers used:
  5109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5119 ;;Total ram usage:        0 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:   22
  5122 ;; This function calls:
  5123 ;;		_InitializeTasks
  5124 ;;		_ScheduleTasks
  5125 ;; This function is called by:
  5126 ;;		_main
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           	psect	text13
  5131  006292                     __ptext13:
  5132                           	opt stack 0
  5133  006292                     _Sch_MainScheduler:
  5134                           	opt stack 8
  5135                           
  5136                           ;os_sched.c: 178: InitializeTasks();
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;incstack = 0
  5140  006292  EC19  F027         	call	_InitializeTasks	;wreg free
  5141                           
  5142                           ;os_sched.c: 180: SystemState = RunningState;
  5143  006296  0E01               	movlw	1
  5144  006298  0100               	movlb	0	; () banked
  5145  00629A  6FD5               	movwf	_SystemState& (0+255),b
  5146  00629C                     
  5147                           ;os_sched.c: 188: {
  5148                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5149                           
  5150                           ; BSR set to: 0
  5151  00629C  0102               	movlb	2	; () banked
  5152  00629E  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5153  0062A0  A4D8               	btfss	status,2,c
  5154  0062A2  D7FC               	goto	l790
  5155                           
  5156                           ; BSR set to: 2
  5157                           ;os_sched.c: 191: {
  5158                           ;os_sched.c: 196: ScheduleTasks();
  5159  0062A4  EC13  F017         	call	_ScheduleTasks	;wreg free
  5160                           
  5161                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5162  0062A8  0E01               	movlw	1
  5163  0062AA  0102               	movlb	2	; () banked
  5164  0062AC  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5165                           
  5166                           ; BSR set to: 2
  5167                           
  5168                           ; BSR set to: 2
  5169  0062AE  D7F6               	goto	l790
  5170  0062B0                     __end_of_Sch_MainScheduler:
  5171                           	opt stack 0
  5172                           tblptru	equ	0xFF8
  5173                           tblptrh	equ	0xFF7
  5174                           tblptrl	equ	0xFF6
  5175                           tablat	equ	0xFF5
  5176                           prodh	equ	0xFF4
  5177                           prodl	equ	0xFF3
  5178                           intcon	equ	0xFF2
  5179                           intcon2	equ	0xFF1
  5180                           intcon3	equ	0xFF0
  5181                           postinc0	equ	0xFEE
  5182                           wreg	equ	0xFE8
  5183                           postdec1	equ	0xFE5
  5184                           fsr1h	equ	0xFE2
  5185                           fsr1l	equ	0xFE1
  5186                           indf2	equ	0xFDF
  5187                           postinc2	equ	0xFDE
  5188                           postdec2	equ	0xFDD
  5189                           fsr2h	equ	0xFDA
  5190                           fsr2l	equ	0xFD9
  5191                           status	equ	0xFD8
  5192                           
  5193 ;; *************** function _ScheduleTasks *****************
  5194 ;; Defined at:
  5195 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;		None
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;  ActiveTaskIn    1    0[BANK3 ] unsigned char 
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      void 
  5202 ;; Registers used:
  5203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5210 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5211 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5212 ;;      Totals:         0       0       0       0       1       4       0       0       0       0       0       0       
      +0       0       0       0
  5213 ;;Total ram usage:        5 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:   21
  5216 ;; This function calls:
  5217 ;;		_I2cSlv_MainTask
  5218 ;;		_Led_MainTask
  5219 ;;		_MdmHttp_MainTask
  5220 ;;		_Mdm_DrvMainFn
  5221 ;;		_Mdm_MainTask
  5222 ;;		_MyApp_Task
  5223 ;;		_Rtcm_MainTask
  5224 ;;		_Term_MainTask
  5225 ;;		_UsbDevice_MainTask
  5226 ;;		_Wdg_MainTask
  5227 ;; This function is called by:
  5228 ;;		_Sch_MainScheduler
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text14
  5233  002E26                     __ptext14:
  5234                           	opt stack 0
  5235  002E26                     _ScheduleTasks:
  5236                           	opt stack 8
  5237                           
  5238                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5239                           
  5240                           ; BSR set to: 2
  5241                           ;incstack = 0
  5242  002E26  0E00               	movlw	0
  5243  002E28  0103               	movlb	3	; () banked
  5244  002E2A  6FFF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5245                           
  5246                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5247  002E2C  0E00               	movlw	0
  5248  002E2E  6FFF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5249  002E30                     l15482:
  5250                           
  5251                           ; BSR set to: 3
  5252  002E30  0E2F               	movlw	low _TaskNumber
  5253  002E32  6EF6               	movwf	tblptrl,c
  5254  002E34                     	if	1	;There is more than 1 active tblptr byte
  5255  002E34  0EFC               	movlw	high _TaskNumber
  5256  002E36  6EF7               	movwf	tblptrh,c
  5257  002E38                     	endif
  5258  002E38                     	if	0	;There are less than 3 active tblptr bytes
  5259  002E38                     	endif
  5260  002E38  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5261  002E3A  0104               	movlb	4	; () banked
  5262  002E3C  6FFC               	movwf	??_ScheduleTasks& (0+255),b
  5263  002E3E  6BFD               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5264  002E40  0009               	tblrd		*+
  5265  002E42  50F5               	movf	tablat,w,c
  5266  002E44  5DFC               	subwf	??_ScheduleTasks& (0+255),w,b
  5267  002E46  0009               	tblrd		*+
  5268  002E48  50F5               	movf	tablat,w,c
  5269  002E4A  59FD               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5270  002E4C  B0D8               	btfsc	status,0,c
  5271  002E4E  0012               	return	
  5272                           
  5273                           ; BSR set to: 4
  5274                           ;os_sched.c: 106: {
  5275                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5276                           
  5277                           ; BSR set to: 4
  5278                           
  5279                           ; BSR set to: 4
  5280  002E50  0103               	movlb	3	; () banked
  5281  002E52  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5282  002E54  0D08               	mullw	8
  5283  002E56  0E03               	movlw	3
  5284  002E58  26F3               	addwf	prodl,f,c
  5285  002E5A  0E00               	movlw	0
  5286  002E5C  22F4               	addwfc	prodh,f,c
  5287  002E5E  0EA4               	movlw	low _TaskTable
  5288  002E60  24F3               	addwf	prodl,w,c
  5289  002E62  6ED9               	movwf	fsr2l,c
  5290  002E64  0E05               	movlw	high _TaskTable
  5291  002E66  20F4               	addwfc	prodh,w,c
  5292  002E68  6EDA               	movwf	fsr2h,c
  5293  002E6A  2ADE               	incf	postinc2,f,c
  5294  002E6C  0E00               	movlw	0
  5295  002E6E  22DD               	addwfc	postdec2,f,c
  5296                           
  5297                           ; BSR set to: 3
  5298                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5299  002E70  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5300  002E72  0D08               	mullw	8
  5301  002E74  0E05               	movlw	5
  5302  002E76  26F3               	addwf	prodl,f,c
  5303  002E78  0E00               	movlw	0
  5304  002E7A  22F4               	addwfc	prodh,f,c
  5305  002E7C  0EA4               	movlw	low _TaskTable
  5306  002E7E  24F3               	addwf	prodl,w,c
  5307  002E80  6ED9               	movwf	fsr2l,c
  5308  002E82  0E05               	movlw	high _TaskTable
  5309  002E84  20F4               	addwfc	prodh,w,c
  5310  002E86  6EDA               	movwf	fsr2h,c
  5311  002E88  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5312  002E8A  0D08               	mullw	8
  5313  002E8C  0E03               	movlw	3
  5314  002E8E  26F3               	addwf	prodl,f,c
  5315  002E90  0E00               	movlw	0
  5316  002E92  22F4               	addwfc	prodh,f,c
  5317  002E94  0EA4               	movlw	low _TaskTable
  5318  002E96  24F3               	addwf	prodl,w,c
  5319  002E98  6EE1               	movwf	fsr1l,c
  5320  002E9A  0E05               	movlw	high _TaskTable
  5321  002E9C  20F4               	addwfc	prodh,w,c
  5322  002E9E  6EE2               	movwf	fsr1h,c
  5323  002EA0  50DE               	movf	postinc2,w,c
  5324  002EA2  5CE6               	subwf	postinc1,w,c
  5325  002EA4  50DE               	movf	postinc2,w,c
  5326  002EA6  58E6               	subwfb	postinc1,w,c
  5327  002EA8  A0D8               	btfss	status,0,c
  5328  002EAA  D04E               	goto	l775
  5329                           
  5330                           ; BSR set to: 3
  5331                           ;os_sched.c: 111: {
  5332                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5333  002EAC  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5334  002EAE  0D08               	mullw	8
  5335  002EB0  0E03               	movlw	3
  5336  002EB2  26F3               	addwf	prodl,f,c
  5337  002EB4  0E00               	movlw	0
  5338  002EB6  22F4               	addwfc	prodh,f,c
  5339  002EB8  0EA4               	movlw	low _TaskTable
  5340  002EBA  24F3               	addwf	prodl,w,c
  5341  002EBC  6ED9               	movwf	fsr2l,c
  5342  002EBE  0E05               	movlw	high _TaskTable
  5343  002EC0  20F4               	addwfc	prodh,w,c
  5344  002EC2  6EDA               	movwf	fsr2h,c
  5345  002EC4  0E00               	movlw	0
  5346  002EC6  6EDE               	movwf	postinc2,c
  5347  002EC8  0E00               	movlw	0
  5348  002ECA  6EDD               	movwf	postdec2,c
  5349                           
  5350                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5351  002ECC  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5352  002ECE  0D08               	mullw	8
  5353  002ED0  0E02               	movlw	2
  5354  002ED2  26F3               	addwf	prodl,f,c
  5355  002ED4  0E00               	movlw	0
  5356  002ED6  22F4               	addwfc	prodh,f,c
  5357  002ED8  0EA4               	movlw	low _TaskTable
  5358  002EDA  24F3               	addwf	prodl,w,c
  5359  002EDC  6ED9               	movwf	fsr2l,c
  5360  002EDE  0E05               	movlw	high _TaskTable
  5361  002EE0  20F4               	addwfc	prodh,w,c
  5362  002EE2  6EDA               	movwf	fsr2h,c
  5363  002EE4  0E01               	movlw	1
  5364  002EE6  6EDF               	movwf	indf2,c
  5365                           
  5366                           ; BSR set to: 3
  5367                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5368  002EE8  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5369  002EEA  0D08               	mullw	8
  5370  002EEC  0EA4               	movlw	low _TaskTable
  5371  002EEE  24F3               	addwf	prodl,w,c
  5372  002EF0  6ED9               	movwf	fsr2l,c
  5373  002EF2  0E05               	movlw	high _TaskTable
  5374  002EF4  20F4               	addwfc	prodh,w,c
  5375  002EF6  6EDA               	movwf	fsr2h,c
  5376  002EF8  D801               	call	u15018
  5377  002EFA  D017               	goto	u15019
  5378  002EFC                     u15018:
  5379  002EFC  0005               	push	
  5380  002EFE  6EFA               	movwf	pclath,c
  5381  002F00  50DE               	movf	postinc2,w,c
  5382  002F02  6EFD               	movwf	tosl,c
  5383  002F04  50DE               	movf	postinc2,w,c
  5384  002F06  6EFE               	movwf	tosh,c
  5385  002F08  50F8               	movf	tblptru,w,c
  5386  002F0A  6EFF               	movwf	tosu,c
  5387  002F0C  50FA               	movf	pclath,w,c
  5388  002F0E  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5389  002F10  0D08               	mullw	8
  5390  002F12  0E07               	movlw	7
  5391  002F14  26F3               	addwf	prodl,f,c
  5392  002F16  0E00               	movlw	0
  5393  002F18  22F4               	addwfc	prodh,f,c
  5394  002F1A  0EA4               	movlw	low _TaskTable
  5395  002F1C  24F3               	addwf	prodl,w,c
  5396  002F1E  6ED9               	movwf	fsr2l,c
  5397  002F20  0E05               	movlw	high _TaskTable
  5398  002F22  20F4               	addwfc	prodh,w,c
  5399  002F24  6EDA               	movwf	fsr2h,c
  5400  002F26  50DF               	movf	indf2,w,c
  5401  002F28  0012               	return		;indir
  5402  002F2A                     u15019:
  5403                           
  5404                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5405  002F2A  0103               	movlb	3	; () banked
  5406  002F2C  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5407  002F2E  0D08               	mullw	8
  5408  002F30  0E02               	movlw	2
  5409  002F32  26F3               	addwf	prodl,f,c
  5410  002F34  0E00               	movlw	0
  5411  002F36  22F4               	addwfc	prodh,f,c
  5412  002F38  0EA4               	movlw	low _TaskTable
  5413  002F3A  24F3               	addwf	prodl,w,c
  5414  002F3C  6ED9               	movwf	fsr2l,c
  5415  002F3E  0E05               	movlw	high _TaskTable
  5416  002F40  20F4               	addwfc	prodh,w,c
  5417  002F42  6EDA               	movwf	fsr2h,c
  5418  002F44  0E00               	movlw	0
  5419  002F46  6EDF               	movwf	indf2,c
  5420  002F48                     l775:
  5421                           
  5422                           ; BSR set to: 3
  5423                           
  5424                           ; BSR set to: 3
  5425                           
  5426                           ;os_sched.c: 117: else
  5427                           ;os_sched.c: 118: {
  5428                           
  5429                           ; BSR set to: 3
  5430  002F48  2BFF               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5431  002F4A  D772               	goto	l15482
  5432  002F4C                     __end_of_ScheduleTasks:
  5433                           	opt stack 0
  5434                           tosu	equ	0xFFF
  5435                           tosh	equ	0xFFE
  5436                           tosl	equ	0xFFD
  5437                           pclath	equ	0xFFA
  5438                           tblptru	equ	0xFF8
  5439                           tblptrh	equ	0xFF7
  5440                           tblptrl	equ	0xFF6
  5441                           tablat	equ	0xFF5
  5442                           prodh	equ	0xFF4
  5443                           prodl	equ	0xFF3
  5444                           intcon	equ	0xFF2
  5445                           intcon2	equ	0xFF1
  5446                           intcon3	equ	0xFF0
  5447                           postinc0	equ	0xFEE
  5448                           wreg	equ	0xFE8
  5449                           postinc1	equ	0xFE6
  5450                           postdec1	equ	0xFE5
  5451                           fsr1h	equ	0xFE2
  5452                           fsr1l	equ	0xFE1
  5453                           indf2	equ	0xFDF
  5454                           postinc2	equ	0xFDE
  5455                           postdec2	equ	0xFDD
  5456                           fsr2h	equ	0xFDA
  5457                           fsr2l	equ	0xFD9
  5458                           status	equ	0xFD8
  5459                           
  5460 ;; *************** function _InitializeTasks *****************
  5461 ;; Defined at:
  5462 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;		None
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;  ActiveTaskIn    1    0[BANK3 ] unsigned char 
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5477 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5478 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  5479 ;;      Totals:         0       0       0       0       1       2       0       0       0       0       0       0       
      +0       0       0       0
  5480 ;;Total ram usage:        3 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:   21
  5483 ;; This function calls:
  5484 ;;		_I2cSlv_MainTask
  5485 ;;		_Led_MainTask
  5486 ;;		_MdmHttp_MainTask
  5487 ;;		_Mdm_DrvMainFn
  5488 ;;		_Mdm_MainTask
  5489 ;;		_MyApp_Task
  5490 ;;		_Rtcm_MainTask
  5491 ;;		_Term_MainTask
  5492 ;;		_UsbDevice_MainTask
  5493 ;;		_Wdg_MainTask
  5494 ;; This function is called by:
  5495 ;;		_Sch_MainScheduler
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text15
  5500  004E32                     __ptext15:
  5501                           	opt stack 0
  5502  004E32                     _InitializeTasks:
  5503                           	opt stack 8
  5504                           
  5505                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5506                           
  5507                           ; BSR set to: 4
  5508                           ;incstack = 0
  5509  004E32  0E00               	movlw	0
  5510  004E34  0103               	movlb	3	; () banked
  5511  004E36  6FFF               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5512                           
  5513                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5514  004E38  0E00               	movlw	0
  5515  004E3A  6FFF               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5516  004E3C                     l15470:
  5517                           
  5518                           ; BSR set to: 3
  5519  004E3C  0E2F               	movlw	low _TaskNumber
  5520  004E3E  6EF6               	movwf	tblptrl,c
  5521  004E40                     	if	1	;There is more than 1 active tblptr byte
  5522  004E40  0EFC               	movlw	high _TaskNumber
  5523  004E42  6EF7               	movwf	tblptrh,c
  5524  004E44                     	endif
  5525  004E44                     	if	0	;There are less than 3 active tblptr bytes
  5526  004E44                     	endif
  5527  004E44  51FF               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5528  004E46  0104               	movlb	4	; () banked
  5529  004E48  6FFC               	movwf	??_InitializeTasks& (0+255),b
  5530  004E4A  6BFD               	clrf	(??_InitializeTasks+1)& (0+255),b
  5531  004E4C  0009               	tblrd		*+
  5532  004E4E  50F5               	movf	tablat,w,c
  5533  004E50  5DFC               	subwf	??_InitializeTasks& (0+255),w,b
  5534  004E52  0009               	tblrd		*+
  5535  004E54  50F5               	movf	tablat,w,c
  5536  004E56  59FD               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5537  004E58  B0D8               	btfsc	status,0,c
  5538  004E5A  0012               	return	
  5539                           
  5540                           ; BSR set to: 4
  5541                           ;os_sched.c: 86: {
  5542                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5543                           
  5544                           ; BSR set to: 4
  5545                           
  5546                           ; BSR set to: 4
  5547  004E5C  0103               	movlb	3	; () banked
  5548  004E5E  51FF               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5549  004E60  0D08               	mullw	8
  5550  004E62  0EA4               	movlw	low _TaskTable
  5551  004E64  24F3               	addwf	prodl,w,c
  5552  004E66  6ED9               	movwf	fsr2l,c
  5553  004E68  0E05               	movlw	high _TaskTable
  5554  004E6A  20F4               	addwfc	prodh,w,c
  5555  004E6C  6EDA               	movwf	fsr2h,c
  5556  004E6E  D801               	call	u14978
  5557  004E70  D017               	goto	u14979
  5558  004E72                     u14978:
  5559  004E72  0005               	push	
  5560  004E74  6EFA               	movwf	pclath,c
  5561  004E76  50DE               	movf	postinc2,w,c
  5562  004E78  6EFD               	movwf	tosl,c
  5563  004E7A  50DE               	movf	postinc2,w,c
  5564  004E7C  6EFE               	movwf	tosh,c
  5565  004E7E  50F8               	movf	tblptru,w,c
  5566  004E80  6EFF               	movwf	tosu,c
  5567  004E82  50FA               	movf	pclath,w,c
  5568  004E84  51FF               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5569  004E86  0D08               	mullw	8
  5570  004E88  0E07               	movlw	7
  5571  004E8A  26F3               	addwf	prodl,f,c
  5572  004E8C  0E00               	movlw	0
  5573  004E8E  22F4               	addwfc	prodh,f,c
  5574  004E90  0EA4               	movlw	low _TaskTable
  5575  004E92  24F3               	addwf	prodl,w,c
  5576  004E94  6ED9               	movwf	fsr2l,c
  5577  004E96  0E05               	movlw	high _TaskTable
  5578  004E98  20F4               	addwfc	prodh,w,c
  5579  004E9A  6EDA               	movwf	fsr2h,c
  5580  004E9C  50DF               	movf	indf2,w,c
  5581  004E9E  0012               	return		;indir
  5582  004EA0                     u14979:
  5583  004EA0  0103               	movlb	3	; () banked
  5584  004EA2  2BFF               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5585  004EA4  D7CB               	goto	l15470
  5586  004EA6                     __end_of_InitializeTasks:
  5587                           	opt stack 0
  5588                           tosu	equ	0xFFF
  5589                           tosh	equ	0xFFE
  5590                           tosl	equ	0xFFD
  5591                           pclath	equ	0xFFA
  5592                           tblptru	equ	0xFF8
  5593                           tblptrh	equ	0xFF7
  5594                           tblptrl	equ	0xFF6
  5595                           tablat	equ	0xFF5
  5596                           prodh	equ	0xFF4
  5597                           prodl	equ	0xFF3
  5598                           intcon	equ	0xFF2
  5599                           intcon2	equ	0xFF1
  5600                           intcon3	equ	0xFF0
  5601                           postinc0	equ	0xFEE
  5602                           wreg	equ	0xFE8
  5603                           postinc1	equ	0xFE6
  5604                           postdec1	equ	0xFE5
  5605                           fsr1h	equ	0xFE2
  5606                           fsr1l	equ	0xFE1
  5607                           indf2	equ	0xFDF
  5608                           postinc2	equ	0xFDE
  5609                           postdec2	equ	0xFDD
  5610                           fsr2h	equ	0xFDA
  5611                           fsr2l	equ	0xFD9
  5612                           status	equ	0xFD8
  5613                           
  5614 ;; *************** function _MyApp_Task *****************
  5615 ;; Defined at:
  5616 ;;		line 146 in file "../Source/c/04_App/app.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  Options         1    wreg     unsigned char 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  Options         1    0[COMRAM] unsigned char 
  5621 ;;  cmdAddNumber    4    7[BANK1 ] const unsigned char [4]
  5622 ;;  cmpString       3    4[BANK1 ] unsigned char [3]
  5623 ;;  memoryResult    1   11[BANK1 ] enum E8114
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1    wreg      void 
  5626 ;; Registers used:
  5627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5634 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5636 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5637 ;;Total ram usage:        8 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; Hardware stack levels required when called:   19
  5640 ;; This function calls:
  5641 ;;		_GetCallerNumber
  5642 ;;		_Led_SetLedBlinkTime
  5643 ;;		_Led_SetLedStatus
  5644 ;;		_Mdm_GetSmsData
  5645 ;;		_Mdm_IsSmsReceived
  5646 ;;		_Mdm_RequestSmsData
  5647 ;;		_StringCompare
  5648 ;;		_Uart_WriteConstString
  5649 ;;		_initFsm
  5650 ;;		_saveMasterNumber
  5651 ;;		_updateMemorizedNumbersCount
  5652 ;;		_waitSetupCall
  5653 ;; This function is called by:
  5654 ;;		_InitializeTasks
  5655 ;;		_ScheduleTasks
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           	psect	text16
  5660  00280C                     __ptext16:
  5661                           	opt stack 0
  5662  00280C                     _MyApp_Task:
  5663                           	opt stack 9
  5664                           
  5665                           ;app.c: 148: static UINT8 smsPhoneNumber[] = {'+', '3', '9', '0', '1', '2', '3', '4', '5
      +                          ', '6', '7', '8', '9'};
  5666                           ;app.c: 153: const uint8_t cmdAddNumber[] = {'N', 'U', 'M', '+'};
  5667                           
  5668                           ; BSR set to: 4
  5669                           ;incstack = 0
  5670  00280C  0E29               	movlw	low MyApp_Task@F9015
  5671  00280E  6EF6               	movwf	tblptrl,c
  5672  002810                     	if	1	;There is more than 1 active tblptr byte
  5673  002810  0EFC               	movlw	high MyApp_Task@F9015
  5674  002812  6EF7               	movwf	tblptrh,c
  5675  002814                     	endif
  5676  002814                     	if	0	;There are less than 3 active tblptr bytes
  5677  002814                     	endif
  5678  002814  0009               	tblrd		*+
  5679  002816  CFF5 F107          	movff	tablat,MyApp_Task@cmdAddNumber
  5680  00281A  0009               	tblrd		*+
  5681  00281C  CFF5 F108          	movff	tablat,MyApp_Task@cmdAddNumber+1
  5682  002820  0009               	tblrd		*+
  5683  002822  CFF5 F109          	movff	tablat,MyApp_Task@cmdAddNumber+2
  5684  002826  000A               	tblrd		*-
  5685  002828  CFF5 F10A          	movff	tablat,MyApp_Task@cmdAddNumber+3
  5686                           
  5687                           ;app.c: 154: uint8_t cmpString[] = {'c', 'a', 't'};
  5688  00282C  C3CE  F104         	movff	MyApp_Task@F9017,MyApp_Task@cmpString
  5689  002830  C3CF  F105         	movff	MyApp_Task@F9017+1,MyApp_Task@cmpString+1
  5690  002834  C3D0  F106         	movff	MyApp_Task@F9017+2,MyApp_Task@cmpString+2
  5691                           
  5692                           ;app.c: 156: static gateFsmStates currentState = GATE_INIT;
  5693                           ;app.c: 157: I2cOpStsType memoryResult = OP_COMPLETE;
  5694  002838  0E01               	movlw	1
  5695  00283A  0101               	movlb	1	; () banked
  5696  00283C  6F0B               	movwf	MyApp_Task@memoryResult& (0+255),b
  5697                           
  5698                           ;app.c: 159: switch (SystemState)
  5699  00283E  D07F               	goto	l2576
  5700  002840                     
  5701                           ;app.c: 164: Led_SetLedBlinkTime(1u,100,900);
  5702                           
  5703                           ; BSR set to: 1
  5704  002840  0E00               	movlw	0
  5705  002842  0100               	movlb	0	; () banked
  5706  002844  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5707  002846  0E64               	movlw	100
  5708  002848  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5709  00284A  0E03               	movlw	3
  5710  00284C  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5711  00284E  0E84               	movlw	132
  5712  002850  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5713  002852  0E01               	movlw	1
  5714  002854  ECB6  F02A         	call	_Led_SetLedBlinkTime
  5715                           
  5716                           ;app.c: 165: break;
  5717  002858  0012               	return	
  5718  00285A                     
  5719                           ;app.c: 172: if (initFsm())
  5720  00285A  EC93  F02C         	call	_initFsm	;wreg free
  5721  00285E  0900               	iorlw	0
  5722  002860  B4D8               	btfsc	status,2,c
  5723  002862  0012               	return	
  5724                           
  5725                           ;app.c: 173: {
  5726                           ;app.c: 174: if (isMemoryEmpty)
  5727  002864  0101               	movlb	1	; () banked
  5728  002866  51FE               	movf	_isMemoryEmpty& (0+255),w,b
  5729  002868  B4D8               	btfsc	status,2,c
  5730  00286A  D036               	goto	l2583
  5731                           
  5732                           ; BSR set to: 1
  5733                           ;app.c: 175: {
  5734                           ;app.c: 176: if (waitSetupCall())
  5735  00286C  ECD4  F02B         	call	_waitSetupCall	;wreg free
  5736  002870  0900               	iorlw	0
  5737  002872  B4D8               	btfsc	status,2,c
  5738  002874  D003               	goto	l2584
  5739                           
  5740                           ;app.c: 177: {
  5741                           ;app.c: 178: currentState = GATE_SAVE_FIRST_MASTER;
  5742  002876  0E01               	movlw	1
  5743  002878  0101               	movlb	1	; () banked
  5744  00287A  6FD7               	movwf	MyApp_Task@currentState& (0+255),b
  5745  00287C                     l2584:
  5746                           
  5747                           ;app.c: 179: }
  5748                           ;app.c: 180: if (Mdm_IsSmsReceived())
  5749                           
  5750                           ; BSR set to: 1
  5751  00287C  EC80  F030         	call	_Mdm_IsSmsReceived	;wreg free
  5752  002880  0900               	iorlw	0
  5753  002882  A4D8               	btfss	status,2,c
  5754                           
  5755                           ;app.c: 181: {
  5756                           ;app.c: 182: Mdm_RequestSmsData();
  5757  002884  EC2C  F032         	call	_Mdm_RequestSmsData	;wreg free
  5758                           
  5759                           ;app.c: 183: }
  5760                           ;app.c: 184: if (Mdm_GetSmsData(smsText) == SmsDataReady)
  5761  002888  0E95               	movlw	low _smsText
  5762  00288A  0100               	movlb	0	; () banked
  5763  00288C  6F87               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  5764  00288E  0E04               	movlw	high _smsText
  5765  002890  6F88               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  5766  002892  EC31  F028         	call	_Mdm_GetSmsData	;wreg free
  5767  002896  06E8               	decf	wreg,f,c
  5768  002898  A4D8               	btfss	status,2,c
  5769  00289A  0012               	return	
  5770                           
  5771                           ;app.c: 185: {
  5772                           ;app.c: 186: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  5773  00289C  0E2E               	movlw	low STR_29
  5774  00289E  0100               	movlb	0	; () banked
  5775  0028A0  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  5776  0028A2  0EFF               	movlw	high STR_29
  5777  0028A4  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  5778  0028A6  0E01               	movlw	1
  5779  0028A8  EC85  F02D         	call	_Uart_WriteConstString
  5780                           
  5781                           ;app.c: 187: if (StringCompare(smsText, cmdAddNumber, sizeof(cmdAddNumber)))
  5782  0028AC  0E95               	movlw	low _smsText
  5783  0028AE  0100               	movlb	0	; () banked
  5784  0028B0  6F7D               	movwf	StringCompare@String1& (0+255),b
  5785  0028B2  0E04               	movlw	high _smsText
  5786  0028B4  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
  5787  0028B6  0E07               	movlw	low MyApp_Task@cmdAddNumber
  5788  0028B8  6F7F               	movwf	StringCompare@String2& (0+255),b
  5789  0028BA  0E01               	movlw	high MyApp_Task@cmdAddNumber
  5790  0028BC  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
  5791  0028BE  0E00               	movlw	0
  5792  0028C0  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
  5793  0028C2  0E04               	movlw	4
  5794  0028C4  6F81               	movwf	StringCompare@Len& (0+255),b
  5795  0028C6  EC33  F02B         	call	_StringCompare	;wreg free
  5796  0028CA  0900               	iorlw	0
  5797  0028CC  B4D8               	btfsc	status,2,c
  5798  0028CE  0012               	return	
  5799                           
  5800                           ;app.c: 188: {
  5801                           ;app.c: 189: currentState = GATE_SAVE_FIRST_MASTER;
  5802  0028D0  0E01               	movlw	1
  5803  0028D2  0101               	movlb	1	; () banked
  5804  0028D4  6FD7               	movwf	MyApp_Task@currentState& (0+255),b
  5805                           
  5806                           ; BSR set to: 1
  5807                           ;app.c: 190: }
  5808                           ;app.c: 191: }
  5809                           ;app.c: 192: }
  5810                           
  5811                           ; BSR set to: 1
  5812  0028D6  0012               	return	
  5813  0028D8                     l2583:
  5814                           
  5815                           ; BSR set to: 1
  5816                           ;app.c: 193: else
  5817                           ;app.c: 194: {
  5818                           ;app.c: 195: Led_SetLedStatus(1u, LED_STS_ON);
  5819                           
  5820                           ; BSR set to: 1
  5821  0028D8  0E01               	movlw	1
  5822  0028DA  0100               	movlb	0	; () banked
  5823  0028DC  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  5824  0028DE  0E01               	movlw	1
  5825  0028E0  EC86  F02F         	call	_Led_SetLedStatus
  5826                           
  5827                           ;app.c: 196: currentState = GATE_WAIT_EVENT;
  5828  0028E4  0E03               	movlw	3
  5829  0028E6  0101               	movlb	1	; () banked
  5830  0028E8  6FD7               	movwf	MyApp_Task@currentState& (0+255),b
  5831                           
  5832                           ; BSR set to: 1
  5833                           ;app.c: 197: }
  5834                           ;app.c: 198: }
  5835                           ;app.c: 199: break;
  5836                           
  5837                           ; BSR set to: 1
  5838  0028EA  0012               	return	
  5839  0028EC                     
  5840                           ; BSR set to: 1
  5841                           ;app.c: 202: saveMasterNumber(16, GetCallerNumber());
  5842                           
  5843                           ; BSR set to: 1
  5844  0028EC  ECBC  F02E         	call	_GetCallerNumber	;wreg free
  5845  0028F0  C083  F08E         	movff	?_GetCallerNumber,saveMasterNumber@phoneNumber
  5846  0028F4  C084  F08F         	movff	?_GetCallerNumber+1,saveMasterNumber@phoneNumber+1
  5847  0028F8  0E10               	movlw	16
  5848  0028FA  EC0C  F030         	call	_saveMasterNumber
  5849                           
  5850                           ;app.c: 203: currentState = GATE_UPDATE_NUMBERS_COUNT;
  5851  0028FE  0E02               	movlw	2
  5852  002900  0101               	movlb	1	; () banked
  5853  002902  6FD7               	movwf	MyApp_Task@currentState& (0+255),b
  5854                           
  5855                           ;app.c: 204: break;
  5856  002904  0012               	return	
  5857  002906                     
  5858                           ; BSR set to: 1
  5859                           ;app.c: 207: updateMemorizedNumbersCount();
  5860                           
  5861                           ; BSR set to: 1
  5862  002906  EC8E  F031         	call	_updateMemorizedNumbersCount	;wreg free
  5863                           
  5864                           ;app.c: 208: Led_SetLedStatus(1u, LED_STS_ON);
  5865  00290A  0E01               	movlw	1
  5866  00290C  0100               	movlb	0	; () banked
  5867  00290E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  5868  002910  0E01               	movlw	1
  5869  002912  EC86  F02F         	call	_Led_SetLedStatus
  5870                           
  5871                           ;app.c: 209: currentState = GATE_WAIT_EVENT;
  5872  002916  0E03               	movlw	3
  5873  002918  0101               	movlb	1	; () banked
  5874  00291A  6FD7               	movwf	MyApp_Task@currentState& (0+255),b
  5875                           
  5876                           ; BSR set to: 1
  5877                           ;app.c: 227: }
  5878                           
  5879                           ; BSR set to: 1
  5880                           ;app.c: 226: break;
  5881                           
  5882                           ;app.c: 225: default:
  5883                           
  5884                           ; BSR set to: 1
  5885                           ;app.c: 223: break;
  5886                           
  5887                           ;app.c: 217: case GATE_TRIGGER:
  5888                           
  5889                           ; BSR set to: 1
  5890                           ;app.c: 215: break;
  5891                           
  5892                           ;app.c: 212: case GATE_WAIT_EVENT:
  5893                           
  5894                           ;app.c: 210: break;
  5895  00291C  0012               	return	
  5896  00291E                     
  5897                           ; BSR set to: 1
  5898  00291E  0101               	movlb	1	; () banked
  5899  002920  51D7               	movf	MyApp_Task@currentState& (0+255),w,b
  5900                           
  5901                           ; Switch size 1, requested type "space"
  5902                           ; Number of cases is 5, Range of values is 0 to 4
  5903                           ; switch strategies available:
  5904                           ; Name         Instructions Cycles
  5905                           ; simple_byte           16     9 (average)
  5906                           ;	Chosen strategy is simple_byte
  5907  002922  0A00               	xorlw	0	; case 0
  5908  002924  B4D8               	btfsc	status,2,c
  5909  002926  D799               	goto	l2581
  5910  002928  0A01               	xorlw	1	; case 1
  5911  00292A  B4D8               	btfsc	status,2,c
  5912  00292C  D7DF               	goto	l2590
  5913  00292E  0A03               	xorlw	3	; case 2
  5914  002930  B4D8               	btfsc	status,2,c
  5915  002932  D7E9               	goto	l2591
  5916  002934  0A01               	xorlw	1	; case 3
  5917  002936  B4D8               	btfsc	status,2,c
  5918  002938  0012               	return	
  5919  00293A  0A07               	xorlw	7	; case 4
  5920                           
  5921                           ; BSR set to: 1
  5922                           ;app.c: 293: }
  5923                           
  5924                           ; BSR set to: 1
  5925                           ;app.c: 292: break;
  5926                           
  5927                           ;app.c: 291: default:
  5928                           
  5929                           ; BSR set to: 1
  5930                           ;app.c: 288: break;
  5931  00293C  0012               	return	
  5932  00293E                     l2576:
  5933                           
  5934                           ; BSR set to: 1
  5935                           
  5936                           ; BSR set to: 1
  5937  00293E  0100               	movlb	0	; () banked
  5938  002940  51D5               	movf	_SystemState& (0+255),w,b
  5939                           
  5940                           ; Switch size 1, requested type "space"
  5941                           ; Number of cases is 2, Range of values is 0 to 1
  5942                           ; switch strategies available:
  5943                           ; Name         Instructions Cycles
  5944                           ; simple_byte            7     4 (average)
  5945                           ;	Chosen strategy is simple_byte
  5946  002942  0A00               	xorlw	0	; case 0
  5947  002944  B4D8               	btfsc	status,2,c
  5948  002946  D77C               	goto	l2577
  5949  002948  0A01               	xorlw	1	; case 1
  5950  00294A  A4D8               	btfss	status,2,c
  5951  00294C  0012               	return	
  5952  00294E  D7E7               	goto	l2580
  5953  002950                     __end_of_MyApp_Task:
  5954                           	opt stack 0
  5955                           tosu	equ	0xFFF
  5956                           tosh	equ	0xFFE
  5957                           tosl	equ	0xFFD
  5958                           pclath	equ	0xFFA
  5959                           tblptru	equ	0xFF8
  5960                           tblptrh	equ	0xFF7
  5961                           tblptrl	equ	0xFF6
  5962                           tablat	equ	0xFF5
  5963                           prodh	equ	0xFF4
  5964                           prodl	equ	0xFF3
  5965                           intcon	equ	0xFF2
  5966                           intcon2	equ	0xFF1
  5967                           intcon3	equ	0xFF0
  5968                           postinc0	equ	0xFEE
  5969                           wreg	equ	0xFE8
  5970                           postinc1	equ	0xFE6
  5971                           postdec1	equ	0xFE5
  5972                           fsr1h	equ	0xFE2
  5973                           fsr1l	equ	0xFE1
  5974                           indf2	equ	0xFDF
  5975                           postinc2	equ	0xFDE
  5976                           postdec2	equ	0xFDD
  5977                           fsr2h	equ	0xFDA
  5978                           fsr2l	equ	0xFD9
  5979                           status	equ	0xFD8
  5980                           
  5981 ;; *************** function _Term_MainTask *****************
  5982 ;; Defined at:
  5983 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  Options         1    wreg     unsigned char 
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;  Options         1    0[COMRAM] unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1    wreg      void 
  5990 ;; Registers used:
  5991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6001 ;;Total ram usage:        0 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:   17
  6004 ;; This function calls:
  6005 ;;		_Term_MainSm
  6006 ;; This function is called by:
  6007 ;;		_InitializeTasks
  6008 ;;		_ScheduleTasks
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           	psect	text17
  6013  006302                     __ptext17:
  6014                           	opt stack 0
  6015  006302                     _Term_MainTask:
  6016                           	opt stack 11
  6017                           
  6018                           ;term.c: 847: switch (SystemState)
  6019                           
  6020                           ;incstack = 0
  6021  006302  D003               	goto	l2478
  6022  006304                     
  6023                           ;term.c: 858: Term_MainSm();
  6024  006304  EC5B  F008         	call	_Term_MainSm	;wreg free
  6025                           
  6026                           ;term.c: 865: }
  6027                           
  6028                           ;term.c: 864: break;
  6029                           
  6030                           ;term.c: 863: default:
  6031                           
  6032                           ;term.c: 860: break;
  6033  006308  0012               	return	
  6034  00630A                     l2478:
  6035  00630A  0100               	movlb	0	; () banked
  6036  00630C  51D5               	movf	_SystemState& (0+255),w,b
  6037                           
  6038                           ; Switch size 1, requested type "space"
  6039                           ; Number of cases is 2, Range of values is 0 to 1
  6040                           ; switch strategies available:
  6041                           ; Name         Instructions Cycles
  6042                           ; simple_byte            7     4 (average)
  6043                           ;	Chosen strategy is simple_byte
  6044  00630E  0A00               	xorlw	0	; case 0
  6045  006310  B4D8               	btfsc	status,2,c
  6046  006312  0012               	return	
  6047  006314  0A01               	xorlw	1	; case 1
  6048  006316  A4D8               	btfss	status,2,c
  6049  006318  0012               	return	
  6050  00631A  D7F4               	goto	l2481
  6051  00631C                     __end_of_Term_MainTask:
  6052                           	opt stack 0
  6053                           tosu	equ	0xFFF
  6054                           tosh	equ	0xFFE
  6055                           tosl	equ	0xFFD
  6056                           pclath	equ	0xFFA
  6057                           tblptru	equ	0xFF8
  6058                           tblptrh	equ	0xFF7
  6059                           tblptrl	equ	0xFF6
  6060                           tablat	equ	0xFF5
  6061                           prodh	equ	0xFF4
  6062                           prodl	equ	0xFF3
  6063                           intcon	equ	0xFF2
  6064                           intcon2	equ	0xFF1
  6065                           intcon3	equ	0xFF0
  6066                           postinc0	equ	0xFEE
  6067                           wreg	equ	0xFE8
  6068                           postinc1	equ	0xFE6
  6069                           postdec1	equ	0xFE5
  6070                           fsr1h	equ	0xFE2
  6071                           fsr1l	equ	0xFE1
  6072                           indf2	equ	0xFDF
  6073                           postinc2	equ	0xFDE
  6074                           postdec2	equ	0xFDD
  6075                           fsr2h	equ	0xFDA
  6076                           fsr2l	equ	0xFD9
  6077                           status	equ	0xFD8
  6078                           
  6079 ;; *************** function _Rtcm_MainTask *****************
  6080 ;; Defined at:
  6081 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  Options         1    wreg     unsigned char 
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;  Options         1    0[COMRAM] unsigned char 
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  1    wreg      void 
  6088 ;; Registers used:
  6089 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6099 ;;Total ram usage:        0 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; Hardware stack levels required when called:   14
  6102 ;; This function calls:
  6103 ;;		_Rtcc_AlarmConfig
  6104 ;;		_Rtcc_LockRtc
  6105 ;;		_Rtcc_RtcConfig
  6106 ;;		_Rtcc_SetRtcStatus
  6107 ;;		_Rtcc_UnlockRtc
  6108 ;;		_Rtcm_GetRtccDate
  6109 ;;		_Rtcm_SetRtccDate
  6110 ;; This function is called by:
  6111 ;;		_InitializeTasks
  6112 ;;		_ScheduleTasks
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           	psect	text18
  6117  004B02                     __ptext18:
  6118                           	opt stack 0
  6119  004B02                     _Rtcm_MainTask:
  6120                           	opt stack 14
  6121                           
  6122                           ;rtcm.c: 101: switch (SystemState)
  6123                           
  6124                           ;incstack = 0
  6125  004B02  D03D               	goto	l2208
  6126  004B04                     l2209:
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6130  004B04  86CD               	bsf	4045,3,c	;volatile
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6134  004B06  0E00               	movlw	0
  6135  004B08  0103               	movlb	3	; () banked
  6136  004B0A  6FB8               	movwf	_RtcConfig& (0+255),b
  6137                           
  6138                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6139  004B0C  0E00               	movlw	0
  6140  004B0E  6FB9               	movwf	(_RtcConfig+1)& (0+255),b
  6141                           
  6142                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6143  004B10  0E01               	movlw	1
  6144  004B12  6FBA               	movwf	(_RtcConfig+2)& (0+255),b
  6145                           
  6146                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6147  004B14  0E01               	movlw	1
  6148  004B16  6FBB               	movwf	(_RtcConfig+3)& (0+255),b
  6149                           
  6150                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6151  004B18  0E01               	movlw	1
  6152  004B1A  6FB4               	movwf	_AlCfg& (0+255),b
  6153                           
  6154                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6155  004B1C  0E01               	movlw	1
  6156  004B1E  6FB5               	movwf	(_AlCfg+1)& (0+255),b
  6157                           
  6158                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6159  004B20  0E01               	movlw	1
  6160  004B22  6FB6               	movwf	(_AlCfg+2)& (0+255),b
  6161                           
  6162                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6163  004B24  0E00               	movlw	0
  6164  004B26  6FB7               	movwf	(_AlCfg+3)& (0+255),b
  6165                           
  6166                           ; BSR set to: 3
  6167                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6168  004B28  EC1C  F032         	call	_Rtcc_UnlockRtc	;wreg free
  6169                           
  6170                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6171  004B2C  0EB8               	movlw	low _RtcConfig
  6172  004B2E  0100               	movlb	0	; () banked
  6173  004B30  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6174  004B32  0E03               	movlw	high _RtcConfig
  6175  004B34  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6176  004B36  ECDC  F022         	call	_Rtcc_RtcConfig	;wreg free
  6177                           
  6178                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6179  004B3A  0EB4               	movlw	low _AlCfg
  6180  004B3C  0100               	movlb	0	; () banked
  6181  004B3E  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6182  004B40  0E03               	movlw	high _AlCfg
  6183  004B42  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6184  004B44  ECFB  F027         	call	_Rtcc_AlarmConfig	;wreg free
  6185                           
  6186                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6187  004B48  0E01               	movlw	1
  6188  004B4A  ECCB  F031         	call	_Rtcc_SetRtcStatus
  6189                           
  6190                           ;rtcm.c: 127: Rtcc_LockRtc();
  6191  004B4E  EC24  F032         	call	_Rtcc_LockRtc	;wreg free
  6192                           
  6193                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6194  004B52  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6195  004B56  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6196  004B5A  0E07               	movlw	7
  6197  004B5C                     u14881:
  6198  004B5C  CFDB FFEB          	movff	plusw2,plusw0
  6199  004B60  06E8               	decf	wreg,f,c
  6200  004B62  E2FC               	bc	u14881
  6201  004B64  EC62  F02A         	call	_Rtcm_SetRtccDate	;wreg free
  6202                           
  6203                           ;rtcm.c: 154: break;
  6204  004B68  0012               	return	
  6205  004B6A                     
  6206                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6207  004B6A  EC98  F028         	call	_Rtcm_GetRtccDate	;wreg free
  6208  004B6E  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6209  004B72  0E07               	movlw	7
  6210  004B74                     u14891:
  6211  004B74  CFEB FFDB          	movff	plusw0,plusw2
  6212  004B78  06E8               	decf	wreg,f,c
  6213  004B7A  E2FC               	bc	u14891
  6214                           
  6215                           ;rtcm.c: 165: }
  6216                           
  6217                           ;rtcm.c: 164: break;
  6218                           
  6219                           ;rtcm.c: 163: default:
  6220                           
  6221                           ;rtcm.c: 160: break;
  6222  004B7C  0012               	return	
  6223  004B7E                     l2208:
  6224  004B7E  0100               	movlb	0	; () banked
  6225  004B80  51D5               	movf	_SystemState& (0+255),w,b
  6226                           
  6227                           ; Switch size 1, requested type "space"
  6228                           ; Number of cases is 2, Range of values is 0 to 1
  6229                           ; switch strategies available:
  6230                           ; Name         Instructions Cycles
  6231                           ; simple_byte            7     4 (average)
  6232                           ;	Chosen strategy is simple_byte
  6233  004B82  0A00               	xorlw	0	; case 0
  6234  004B84  B4D8               	btfsc	status,2,c
  6235  004B86  D7BE               	goto	l2209
  6236  004B88  0A01               	xorlw	1	; case 1
  6237  004B8A  A4D8               	btfss	status,2,c
  6238  004B8C  0012               	return	
  6239  004B8E  D7ED               	goto	l2211
  6240  004B90                     __end_of_Rtcm_MainTask:
  6241                           	opt stack 0
  6242                           tosu	equ	0xFFF
  6243                           tosh	equ	0xFFE
  6244                           tosl	equ	0xFFD
  6245                           pclath	equ	0xFFA
  6246                           tblptru	equ	0xFF8
  6247                           tblptrh	equ	0xFF7
  6248                           tblptrl	equ	0xFF6
  6249                           tablat	equ	0xFF5
  6250                           prodh	equ	0xFF4
  6251                           prodl	equ	0xFF3
  6252                           intcon	equ	0xFF2
  6253                           intcon2	equ	0xFF1
  6254                           intcon3	equ	0xFF0
  6255                           postinc0	equ	0xFEE
  6256                           plusw0	equ	0xFEB
  6257                           wreg	equ	0xFE8
  6258                           postinc1	equ	0xFE6
  6259                           postdec1	equ	0xFE5
  6260                           fsr1h	equ	0xFE2
  6261                           fsr1l	equ	0xFE1
  6262                           indf2	equ	0xFDF
  6263                           postinc2	equ	0xFDE
  6264                           postdec2	equ	0xFDD
  6265                           plusw2	equ	0xFDB
  6266                           fsr2h	equ	0xFDA
  6267                           fsr2l	equ	0xFD9
  6268                           status	equ	0xFD8
  6269                           
  6270 ;; *************** function _Led_MainTask *****************
  6271 ;; Defined at:
  6272 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  Options         1    wreg     unsigned char 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;  Options         1    0[COMRAM] unsigned char 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      void 
  6279 ;; Registers used:
  6280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6288 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6289 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6290 ;;Total ram usage:        1 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; Hardware stack levels required when called:   14
  6293 ;; This function calls:
  6294 ;;		_LedStateMachine
  6295 ;; This function is called by:
  6296 ;;		_InitializeTasks
  6297 ;;		_ScheduleTasks
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           	psect	text19
  6302  003946                     __ptext19:
  6303                           	opt stack 0
  6304  003946                     _Led_MainTask:
  6305                           	opt stack 14
  6306                           
  6307                           ;led.c: 300: switch (SystemState)
  6308                           
  6309                           ;incstack = 0
  6310  003946  D05C               	goto	l2122
  6311  003948                     l2123:
  6312                           
  6313                           ; BSR set to: 0
  6314                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6315  003948  9895               	bcf	3989,4,c	;volatile
  6316                           
  6317                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6318  00394A  9A95               	bcf	3989,5,c	;volatile
  6319                           
  6320                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6321  00394C  9C95               	bcf	3989,6,c	;volatile
  6322                           
  6323                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6324  00394E  9883               	bcf	3971,4,c	;volatile
  6325                           
  6326                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6327  003950  9A83               	bcf	3971,5,c	;volatile
  6328                           
  6329                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6330  003952  9C83               	bcf	3971,6,c	;volatile
  6331                           
  6332                           ;led.c: 311: break;
  6333  003954  0012               	return	
  6334  003956                     
  6335                           ; BSR set to: 0
  6336                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6337                           
  6338                           ; BSR set to: 0
  6339  003956  0EFB               	movlw	low _Led1Sts
  6340  003958  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6341  00395A  0E01               	movlw	high _Led1Sts
  6342  00395C  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6343  00395E  0EFA               	movlw	low _Led1OutSts
  6344  003960  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6345  003962  0E01               	movlw	high _Led1OutSts
  6346  003964  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6347  003966  0E6D               	movlw	low _Led1Blink
  6348  003968  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6349  00396A  0E03               	movlw	high _Led1Blink
  6350  00396C  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6351  00396E  0E91               	movlw	low _Led1Pulse
  6352  003970  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6353  003972  0E03               	movlw	high _Led1Pulse
  6354  003974  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6355  003976  0E01               	movlw	1
  6356  003978  EC37  F022         	call	_LedStateMachine
  6357  00397C  0100               	movlb	0	; () banked
  6358  00397E  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6359  003980  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6360  003982  5083               	movf	3971,w,c	;volatile
  6361  003984  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6362  003986  0BEF               	andlw	-17
  6363  003988  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6364  00398A  6E83               	movwf	3971,c	;volatile
  6365                           
  6366                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6367  00398C  0EF9               	movlw	low _Led2Sts
  6368  00398E  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6369  003990  0E01               	movlw	high _Led2Sts
  6370  003992  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6371  003994  0EF8               	movlw	low _Led2OutSts
  6372  003996  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6373  003998  0E01               	movlw	high _Led2OutSts
  6374  00399A  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6375  00399C  0E64               	movlw	low _Led2Blink
  6376  00399E  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6377  0039A0  0E03               	movlw	high _Led2Blink
  6378  0039A2  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6379  0039A4  0E8B               	movlw	low _Led2Pulse
  6380  0039A6  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6381  0039A8  0E03               	movlw	high _Led2Pulse
  6382  0039AA  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6383  0039AC  0E02               	movlw	2
  6384  0039AE  EC37  F022         	call	_LedStateMachine
  6385  0039B2  0100               	movlb	0	; () banked
  6386  0039B4  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6387  0039B6  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6388  0039B8  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6389  0039BA  5083               	movf	3971,w,c	;volatile
  6390  0039BC  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6391  0039BE  0BDF               	andlw	-33
  6392  0039C0  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6393  0039C2  6E83               	movwf	3971,c	;volatile
  6394                           
  6395                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6396  0039C4  0EF7               	movlw	low _Led3Sts
  6397  0039C6  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6398  0039C8  0E01               	movlw	high _Led3Sts
  6399  0039CA  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6400  0039CC  0EF6               	movlw	low _Led3OutSts
  6401  0039CE  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6402  0039D0  0E01               	movlw	high _Led3OutSts
  6403  0039D2  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6404  0039D4  0E5B               	movlw	low _Led3Blink
  6405  0039D6  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6406  0039D8  0E03               	movlw	high _Led3Blink
  6407  0039DA  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6408  0039DC  0E85               	movlw	low _Led3Pulse
  6409  0039DE  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6410  0039E0  0E03               	movlw	high _Led3Pulse
  6411  0039E2  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6412  0039E4  0E03               	movlw	3
  6413  0039E6  EC37  F022         	call	_LedStateMachine
  6414  0039EA  0100               	movlb	0	; () banked
  6415  0039EC  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6416  0039EE  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6417  0039F0  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6418  0039F2  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6419  0039F4  5083               	movf	3971,w,c	;volatile
  6420  0039F6  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6421  0039F8  0BBF               	andlw	-65
  6422  0039FA  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6423  0039FC  6E83               	movwf	3971,c	;volatile
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;led.c: 326: }
  6427                           
  6428                           ; BSR set to: 0
  6429                           ;led.c: 325: break;
  6430                           
  6431                           ;led.c: 324: default:
  6432                           
  6433                           ;led.c: 321: break;
  6434  0039FE  0012               	return	
  6435  003A00                     l2122:
  6436                           
  6437                           ; BSR set to: 0
  6438  003A00  0100               	movlb	0	; () banked
  6439  003A02  51D5               	movf	_SystemState& (0+255),w,b
  6440                           
  6441                           ; Switch size 1, requested type "space"
  6442                           ; Number of cases is 2, Range of values is 0 to 1
  6443                           ; switch strategies available:
  6444                           ; Name         Instructions Cycles
  6445                           ; simple_byte            7     4 (average)
  6446                           ;	Chosen strategy is simple_byte
  6447  003A04  0A00               	xorlw	0	; case 0
  6448  003A06  B4D8               	btfsc	status,2,c
  6449  003A08  D79F               	goto	l2123
  6450  003A0A  0A01               	xorlw	1	; case 1
  6451  003A0C  A4D8               	btfss	status,2,c
  6452  003A0E  0012               	return	
  6453  003A10  D7A2               	goto	l2125
  6454  003A12                     __end_of_Led_MainTask:
  6455                           	opt stack 0
  6456                           tosu	equ	0xFFF
  6457                           tosh	equ	0xFFE
  6458                           tosl	equ	0xFFD
  6459                           pclath	equ	0xFFA
  6460                           tblptru	equ	0xFF8
  6461                           tblptrh	equ	0xFF7
  6462                           tblptrl	equ	0xFF6
  6463                           tablat	equ	0xFF5
  6464                           prodh	equ	0xFF4
  6465                           prodl	equ	0xFF3
  6466                           intcon	equ	0xFF2
  6467                           intcon2	equ	0xFF1
  6468                           intcon3	equ	0xFF0
  6469                           postinc0	equ	0xFEE
  6470                           plusw0	equ	0xFEB
  6471                           wreg	equ	0xFE8
  6472                           postinc1	equ	0xFE6
  6473                           postdec1	equ	0xFE5
  6474                           fsr1h	equ	0xFE2
  6475                           fsr1l	equ	0xFE1
  6476                           indf2	equ	0xFDF
  6477                           postinc2	equ	0xFDE
  6478                           postdec2	equ	0xFDD
  6479                           plusw2	equ	0xFDB
  6480                           fsr2h	equ	0xFDA
  6481                           fsr2l	equ	0xFD9
  6482                           status	equ	0xFD8
  6483                           
  6484 ;; *************** function _UsbDevice_MainTask *****************
  6485 ;; Defined at:
  6486 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  Options         1    wreg     unsigned char 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  Options         1    0[COMRAM] unsigned char 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1    wreg      void 
  6493 ;; Registers used:
  6494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6504 ;;Total ram usage:        0 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:   20
  6507 ;; This function calls:
  6508 ;;		_CDCTxService
  6509 ;;		_USBDeviceInit
  6510 ;;		_USBDeviceTasks
  6511 ;; This function is called by:
  6512 ;;		_InitializeTasks
  6513 ;;		_ScheduleTasks
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	text20
  6518  0060B8                     __ptext20:
  6519                           	opt stack 0
  6520  0060B8                     _UsbDevice_MainTask:
  6521                           	opt stack 8
  6522                           
  6523                           ;usb_device_mgr.c: 74: switch (SystemState)
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;incstack = 0
  6527  0060B8  D008               	goto	l1989
  6528  0060BA                     
  6529                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6530  0060BA  ECC0  F010         	call	_USBDeviceInit	;wreg free
  6531                           
  6532                           ;usb_device_mgr.c: 80: ;
  6533                           ;usb_device_mgr.c: 81: break;
  6534  0060BE  0012               	return	
  6535  0060C0                     
  6536                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6537  0060C0  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6538                           
  6539                           ;usb_device_mgr.c: 90: CDCTxService();
  6540  0060C4  EC63  F013         	call	_CDCTxService	;wreg free
  6541                           
  6542                           ;usb_device_mgr.c: 101: }
  6543                           
  6544                           ;usb_device_mgr.c: 100: break;
  6545                           
  6546                           ;usb_device_mgr.c: 99: default:
  6547                           
  6548                           ;usb_device_mgr.c: 96: break;
  6549  0060C8  0012               	return	
  6550  0060CA                     l1989:
  6551  0060CA  0100               	movlb	0	; () banked
  6552  0060CC  51D5               	movf	_SystemState& (0+255),w,b
  6553                           
  6554                           ; Switch size 1, requested type "space"
  6555                           ; Number of cases is 2, Range of values is 0 to 1
  6556                           ; switch strategies available:
  6557                           ; Name         Instructions Cycles
  6558                           ; simple_byte            7     4 (average)
  6559                           ;	Chosen strategy is simple_byte
  6560  0060CE  0A00               	xorlw	0	; case 0
  6561  0060D0  B4D8               	btfsc	status,2,c
  6562  0060D2  D7F3               	goto	l1990
  6563  0060D4  0A01               	xorlw	1	; case 1
  6564  0060D6  A4D8               	btfss	status,2,c
  6565  0060D8  0012               	return	
  6566  0060DA  D7F2               	goto	l1992
  6567  0060DC                     __end_of_UsbDevice_MainTask:
  6568                           	opt stack 0
  6569                           tosu	equ	0xFFF
  6570                           tosh	equ	0xFFE
  6571                           tosl	equ	0xFFD
  6572                           pclath	equ	0xFFA
  6573                           tblptru	equ	0xFF8
  6574                           tblptrh	equ	0xFF7
  6575                           tblptrl	equ	0xFF6
  6576                           tablat	equ	0xFF5
  6577                           prodh	equ	0xFF4
  6578                           prodl	equ	0xFF3
  6579                           intcon	equ	0xFF2
  6580                           intcon2	equ	0xFF1
  6581                           intcon3	equ	0xFF0
  6582                           postinc0	equ	0xFEE
  6583                           plusw0	equ	0xFEB
  6584                           wreg	equ	0xFE8
  6585                           postinc1	equ	0xFE6
  6586                           postdec1	equ	0xFE5
  6587                           fsr1h	equ	0xFE2
  6588                           fsr1l	equ	0xFE1
  6589                           indf2	equ	0xFDF
  6590                           postinc2	equ	0xFDE
  6591                           postdec2	equ	0xFDD
  6592                           plusw2	equ	0xFDB
  6593                           fsr2h	equ	0xFDA
  6594                           fsr2l	equ	0xFD9
  6595                           status	equ	0xFD8
  6596                           
  6597 ;; *************** function _MdmHttp_MainTask *****************
  6598 ;; Defined at:
  6599 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;  Options         1    wreg     unsigned char 
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;  Options         1    0[COMRAM] unsigned char 
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  1    wreg      void 
  6606 ;; Registers used:
  6607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6617 ;;Total ram usage:        0 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:   15
  6620 ;; This function calls:
  6621 ;;		_HttpGetMethod
  6622 ;;		_InitGprsNetwork
  6623 ;; This function is called by:
  6624 ;;		_InitializeTasks
  6625 ;;		_ScheduleTasks
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629                           	psect	text21
  6630  00596E                     __ptext21:
  6631                           	opt stack 0
  6632  00596E                     _MdmHttp_MainTask:
  6633                           	opt stack 13
  6634                           
  6635                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6636                           
  6637                           ;incstack = 0
  6638  00596E  D019               	goto	l1288
  6639  005970                     
  6640                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6641  005970  0E03               	movlw	3
  6642  005972  0100               	movlb	0	; () banked
  6643  005974  19D2               	xorwf	_MdmStatus& (0+255),w,b
  6644  005976  A4D8               	btfss	status,2,c
  6645  005978  0012               	return	
  6646                           
  6647                           ; BSR set to: 0
  6648                           ;mdm_gsm_gprs_http.c: 570: {
  6649                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6650  00597A  C324  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6651  00597E  C325  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6652  005982  C1F1  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6653  005986  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6654  00598A  0101               	movlb	1	; () banked
  6655  00598C  6FF0               	movwf	_GprsNetworkSts& (0+255),b
  6656                           
  6657                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6658  00598E  0EA7               	movlw	low _HttpGetDataLocal
  6659  005990  0100               	movlb	0	; () banked
  6660  005992  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6661  005994  0E03               	movlw	high _HttpGetDataLocal
  6662  005996  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6663  005998  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6664  00599C  0101               	movlb	1	; () banked
  6665  00599E  6FEF               	movwf	_HttpGetMethodSts& (0+255),b
  6666                           
  6667                           ; BSR set to: 1
  6668                           ;mdm_gsm_gprs_http.c: 581: }
  6669                           
  6670                           ; BSR set to: 1
  6671                           ;mdm_gsm_gprs_http.c: 580: break;
  6672                           
  6673                           ;mdm_gsm_gprs_http.c: 579: default:
  6674                           
  6675                           ; BSR set to: 1
  6676                           ;mdm_gsm_gprs_http.c: 575: }
  6677                           ;mdm_gsm_gprs_http.c: 576: break;
  6678  0059A0  0012               	return	
  6679  0059A2                     l1288:
  6680                           
  6681                           ; BSR set to: 1
  6682  0059A2  0100               	movlb	0	; () banked
  6683  0059A4  51D5               	movf	_SystemState& (0+255),w,b
  6684                           
  6685                           ; Switch size 1, requested type "space"
  6686                           ; Number of cases is 2, Range of values is 0 to 1
  6687                           ; switch strategies available:
  6688                           ; Name         Instructions Cycles
  6689                           ; simple_byte            7     4 (average)
  6690                           ;	Chosen strategy is simple_byte
  6691  0059A6  0A00               	xorlw	0	; case 0
  6692  0059A8  B4D8               	btfsc	status,2,c
  6693  0059AA  0012               	return	
  6694  0059AC  0A01               	xorlw	1	; case 1
  6695  0059AE  A4D8               	btfss	status,2,c
  6696  0059B0  0012               	return	
  6697  0059B2  D7DE               	goto	l1291
  6698  0059B4                     __end_of_MdmHttp_MainTask:
  6699                           	opt stack 0
  6700                           tosu	equ	0xFFF
  6701                           tosh	equ	0xFFE
  6702                           tosl	equ	0xFFD
  6703                           pclath	equ	0xFFA
  6704                           tblptru	equ	0xFF8
  6705                           tblptrh	equ	0xFF7
  6706                           tblptrl	equ	0xFF6
  6707                           tablat	equ	0xFF5
  6708                           prodh	equ	0xFF4
  6709                           prodl	equ	0xFF3
  6710                           intcon	equ	0xFF2
  6711                           intcon2	equ	0xFF1
  6712                           intcon3	equ	0xFF0
  6713                           postinc0	equ	0xFEE
  6714                           plusw0	equ	0xFEB
  6715                           wreg	equ	0xFE8
  6716                           postinc1	equ	0xFE6
  6717                           postdec1	equ	0xFE5
  6718                           fsr1h	equ	0xFE2
  6719                           fsr1l	equ	0xFE1
  6720                           indf2	equ	0xFDF
  6721                           postinc2	equ	0xFDE
  6722                           postdec2	equ	0xFDD
  6723                           plusw2	equ	0xFDB
  6724                           fsr2h	equ	0xFDA
  6725                           fsr2l	equ	0xFD9
  6726                           status	equ	0xFD8
  6727                           
  6728 ;; *************** function _Mdm_MainTask *****************
  6729 ;; Defined at:
  6730 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  Options         1    wreg     unsigned char 
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;  Options         1    0[COMRAM] unsigned char 
  6735 ;; Return value:  Size  Location     Type
  6736 ;;                  1    wreg      void 
  6737 ;; Registers used:
  6738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6739 ;; Tracked objects:
  6740 ;;		On entry : 0/0
  6741 ;;		On exit  : 0/0
  6742 ;;		Unchanged: 0/0
  6743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6748 ;;Total ram usage:        0 bytes
  6749 ;; Hardware stack levels used:    1
  6750 ;; Hardware stack levels required when called:   15
  6751 ;; This function calls:
  6752 ;;		_CheckModem
  6753 ;;		_ConfigureModem
  6754 ;;		_GetSmsSm
  6755 ;;		_ModemEvtParser
  6756 ;;		_SendSmsSm
  6757 ;;		_TurnOnModem
  6758 ;;		_UartSetConfig
  6759 ;;		_Uart_InitUartModule
  6760 ;; This function is called by:
  6761 ;;		_InitializeTasks
  6762 ;;		_ScheduleTasks
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766                           	psect	text22
  6767  005708                     __ptext22:
  6768                           	opt stack 0
  6769  005708                     _Mdm_MainTask:
  6770                           	opt stack 13
  6771                           
  6772                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6773                           
  6774                           ;incstack = 0
  6775  005708  D01E               	goto	l1107
  6776  00570A                     
  6777                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6778  00570A  EC88  F029         	call	_UartSetConfig	;wreg free
  6779                           
  6780                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6781  00570E  0E26               	movlw	low _UartConfig
  6782  005710  0100               	movlb	0	; () banked
  6783  005712  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6784  005714  0E03               	movlw	high _UartConfig
  6785  005716  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6786  005718  0E01               	movlw	1
  6787  00571A  EC5E  F005         	call	_Uart_InitUartModule
  6788                           
  6789                           ;mdm_gsm_gprs.c: 764: break;
  6790  00571E  0012               	return	
  6791  005720                     
  6792                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6793  005720  EC16  F012         	call	_CheckModem	;wreg free
  6794                           
  6795                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6796  005724  042B               	decf	_ComChecCompleted,w,c
  6797  005726  A4D8               	btfss	status,2,c
  6798  005728  D005               	goto	l1111
  6799  00572A  0100               	movlb	0	; () banked
  6800  00572C  51D2               	movf	_MdmStatus& (0+255),w,b
  6801  00572E  B4D8               	btfsc	status,2,c
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;mdm_gsm_gprs.c: 772: {
  6805                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6806  005730  ECDA  F02C         	call	_TurnOnModem	;wreg free
  6807  005734                     l1111:
  6808                           
  6809                           ;mdm_gsm_gprs.c: 775: }
  6810                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6811  005734  EC6F  F01D         	call	_ConfigureModem	;wreg free
  6812                           
  6813                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6814  005738  EC99  F00E         	call	_ModemEvtParser	;wreg free
  6815                           
  6816                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6817  00573C  ECE3  F015         	call	_GetSmsSm	;wreg free
  6818                           
  6819                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6820  005740  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6821                           
  6822                           ;mdm_gsm_gprs.c: 789: }
  6823                           
  6824                           ;mdm_gsm_gprs.c: 788: break;
  6825                           
  6826                           ;mdm_gsm_gprs.c: 787: default:
  6827                           
  6828                           ;mdm_gsm_gprs.c: 784: break;
  6829  005744  0012               	return	
  6830  005746                     l1107:
  6831  005746  0100               	movlb	0	; () banked
  6832  005748  51D5               	movf	_SystemState& (0+255),w,b
  6833                           
  6834                           ; Switch size 1, requested type "space"
  6835                           ; Number of cases is 2, Range of values is 0 to 1
  6836                           ; switch strategies available:
  6837                           ; Name         Instructions Cycles
  6838                           ; simple_byte            7     4 (average)
  6839                           ;	Chosen strategy is simple_byte
  6840  00574A  0A00               	xorlw	0	; case 0
  6841  00574C  B4D8               	btfsc	status,2,c
  6842  00574E  D7DD               	goto	l1108
  6843  005750  0A01               	xorlw	1	; case 1
  6844  005752  A4D8               	btfss	status,2,c
  6845  005754  0012               	return	
  6846  005756  D7E4               	goto	l1110
  6847  005758                     __end_of_Mdm_MainTask:
  6848                           	opt stack 0
  6849                           tosu	equ	0xFFF
  6850                           tosh	equ	0xFFE
  6851                           tosl	equ	0xFFD
  6852                           pclath	equ	0xFFA
  6853                           tblptru	equ	0xFF8
  6854                           tblptrh	equ	0xFF7
  6855                           tblptrl	equ	0xFF6
  6856                           tablat	equ	0xFF5
  6857                           prodh	equ	0xFF4
  6858                           prodl	equ	0xFF3
  6859                           intcon	equ	0xFF2
  6860                           intcon2	equ	0xFF1
  6861                           intcon3	equ	0xFF0
  6862                           postinc0	equ	0xFEE
  6863                           plusw0	equ	0xFEB
  6864                           wreg	equ	0xFE8
  6865                           postinc1	equ	0xFE6
  6866                           postdec1	equ	0xFE5
  6867                           fsr1h	equ	0xFE2
  6868                           fsr1l	equ	0xFE1
  6869                           indf2	equ	0xFDF
  6870                           postinc2	equ	0xFDE
  6871                           postdec2	equ	0xFDD
  6872                           plusw2	equ	0xFDB
  6873                           fsr2h	equ	0xFDA
  6874                           fsr2l	equ	0xFD9
  6875                           status	equ	0xFD8
  6876                           
  6877 ;; *************** function _I2cSlv_MainTask *****************
  6878 ;; Defined at:
  6879 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  Options         1    wreg     unsigned char 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  Options         1    0[COMRAM] unsigned char 
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  1    wreg      void 
  6886 ;; Registers used:
  6887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6897 ;;Total ram usage:        0 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; Hardware stack levels required when called:   14
  6900 ;; This function calls:
  6901 ;;		_I2cSendMsgSm
  6902 ;;		_I2cSetConfig
  6903 ;;		_I2c_InitI2cModule
  6904 ;;		_OsAlrm_SetOsAlarm
  6905 ;; This function is called by:
  6906 ;;		_InitializeTasks
  6907 ;;		_ScheduleTasks
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           	psect	text23
  6912  005470                     __ptext23:
  6913                           	opt stack 0
  6914  005470                     _I2cSlv_MainTask:
  6915                           	opt stack 14
  6916                           
  6917                           ;i2c_slv.c: 217: switch (SystemState)
  6918                           
  6919                           ;incstack = 0
  6920  005470  D020               	goto	l1401
  6921  005472                     
  6922                           ;i2c_slv.c: 222: I2cSetConfig();
  6923  005472  ECCC  F02F         	call	_I2cSetConfig	;wreg free
  6924                           
  6925                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6926  005476  0E51               	movlw	low _I2cConfig
  6927  005478  0100               	movlb	0	; () banked
  6928  00547A  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6929  00547C  0E03               	movlw	high _I2cConfig
  6930  00547E  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6931  005480  EC8C  F027         	call	_I2c_InitI2cModule	;wreg free
  6932                           
  6933                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6934  005484  0E00               	movlw	0
  6935  005486  0100               	movlb	0	; () banked
  6936  005488  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  6937  00548A  0E00               	movlw	0
  6938  00548C  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  6939  00548E  0E32               	movlw	50
  6940  005490  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  6941  005492  0E00               	movlw	0
  6942  005494  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  6943  005496  0E00               	movlw	0
  6944  005498  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  6945  00549A  0E00               	movlw	0
  6946  00549C  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  6947  00549E  0ECC               	movlw	low _I2cDummyTx
  6948  0054A0  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  6949  0054A2  0E62               	movlw	high _I2cDummyTx
  6950  0054A4  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  6951  0054A6  EC01  F01F         	call	_OsAlrm_SetOsAlarm	;wreg free
  6952                           
  6953                           ;i2c_slv.c: 227: break;
  6954  0054AA  0012               	return	
  6955  0054AC                     
  6956                           ;i2c_slv.c: 232: I2cSendMsgSm();
  6957  0054AC  EC65  F01F         	call	_I2cSendMsgSm	;wreg free
  6958                           
  6959                           ;i2c_slv.c: 238: }
  6960                           
  6961                           ;i2c_slv.c: 237: break;
  6962                           
  6963                           ;i2c_slv.c: 236: default:
  6964                           
  6965                           ;i2c_slv.c: 233: break;
  6966  0054B0  0012               	return	
  6967  0054B2                     l1401:
  6968  0054B2  0100               	movlb	0	; () banked
  6969  0054B4  51D5               	movf	_SystemState& (0+255),w,b
  6970                           
  6971                           ; Switch size 1, requested type "space"
  6972                           ; Number of cases is 2, Range of values is 0 to 1
  6973                           ; switch strategies available:
  6974                           ; Name         Instructions Cycles
  6975                           ; simple_byte            7     4 (average)
  6976                           ;	Chosen strategy is simple_byte
  6977  0054B6  0A00               	xorlw	0	; case 0
  6978  0054B8  B4D8               	btfsc	status,2,c
  6979  0054BA  D7DB               	goto	l1402
  6980  0054BC  0A01               	xorlw	1	; case 1
  6981  0054BE  A4D8               	btfss	status,2,c
  6982  0054C0  0012               	return	
  6983  0054C2  D7F4               	goto	l1404
  6984  0054C4                     __end_of_I2cSlv_MainTask:
  6985                           	opt stack 0
  6986                           tosu	equ	0xFFF
  6987                           tosh	equ	0xFFE
  6988                           tosl	equ	0xFFD
  6989                           pclath	equ	0xFFA
  6990                           tblptru	equ	0xFF8
  6991                           tblptrh	equ	0xFF7
  6992                           tblptrl	equ	0xFF6
  6993                           tablat	equ	0xFF5
  6994                           prodh	equ	0xFF4
  6995                           prodl	equ	0xFF3
  6996                           intcon	equ	0xFF2
  6997                           intcon2	equ	0xFF1
  6998                           intcon3	equ	0xFF0
  6999                           postinc0	equ	0xFEE
  7000                           plusw0	equ	0xFEB
  7001                           wreg	equ	0xFE8
  7002                           postinc1	equ	0xFE6
  7003                           postdec1	equ	0xFE5
  7004                           fsr1h	equ	0xFE2
  7005                           fsr1l	equ	0xFE1
  7006                           indf2	equ	0xFDF
  7007                           postinc2	equ	0xFDE
  7008                           postdec2	equ	0xFDD
  7009                           plusw2	equ	0xFDB
  7010                           fsr2h	equ	0xFDA
  7011                           fsr2l	equ	0xFD9
  7012                           status	equ	0xFD8
  7013                           
  7014 ;; *************** function _Mdm_DrvMainFn *****************
  7015 ;; Defined at:
  7016 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  Options         1    wreg     unsigned char 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  Options         1    0[COMRAM] unsigned char 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  1    wreg      void 
  7023 ;; Registers used:
  7024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7034 ;;Total ram usage:        0 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:   13
  7037 ;; This function calls:
  7038 ;;		_MdmCntSm
  7039 ;; This function is called by:
  7040 ;;		_InitializeTasks
  7041 ;;		_ScheduleTasks
  7042 ;; This function uses a non-reentrant model
  7043 ;;
  7044                           
  7045                           	psect	text24
  7046  0064F0                     __ptext24:
  7047                           	opt stack 0
  7048  0064F0                     _Mdm_DrvMainFn:
  7049                           	opt stack 15
  7050                           
  7051                           ;mdm_drv.c: 307: MdmCntSm();
  7052                           
  7053                           ;incstack = 0
  7054  0064F0  ECE3  F021         	call	_MdmCntSm	;wreg free
  7055  0064F4  0012               	return		;funcret
  7056  0064F6                     __end_of_Mdm_DrvMainFn:
  7057                           	opt stack 0
  7058                           tosu	equ	0xFFF
  7059                           tosh	equ	0xFFE
  7060                           tosl	equ	0xFFD
  7061                           pclath	equ	0xFFA
  7062                           tblptru	equ	0xFF8
  7063                           tblptrh	equ	0xFF7
  7064                           tblptrl	equ	0xFF6
  7065                           tablat	equ	0xFF5
  7066                           prodh	equ	0xFF4
  7067                           prodl	equ	0xFF3
  7068                           intcon	equ	0xFF2
  7069                           intcon2	equ	0xFF1
  7070                           intcon3	equ	0xFF0
  7071                           postinc0	equ	0xFEE
  7072                           plusw0	equ	0xFEB
  7073                           wreg	equ	0xFE8
  7074                           postinc1	equ	0xFE6
  7075                           postdec1	equ	0xFE5
  7076                           fsr1h	equ	0xFE2
  7077                           fsr1l	equ	0xFE1
  7078                           indf2	equ	0xFDF
  7079                           postinc2	equ	0xFDE
  7080                           postdec2	equ	0xFDD
  7081                           plusw2	equ	0xFDB
  7082                           fsr2h	equ	0xFDA
  7083                           fsr2l	equ	0xFD9
  7084                           status	equ	0xFD8
  7085                           
  7086 ;; *************** function _Wdg_MainTask *****************
  7087 ;; Defined at:
  7088 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;  Options         1    wreg     unsigned char 
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;  Options         1    0[COMRAM] unsigned char 
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  1    wreg      void 
  7095 ;; Registers used:
  7096 ;;		wreg, status,2, status,0, cstack
  7097 ;; Tracked objects:
  7098 ;;		On entry : 0/0
  7099 ;;		On exit  : 0/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7106 ;;Total ram usage:        0 bytes
  7107 ;; Hardware stack levels used:    1
  7108 ;; Hardware stack levels required when called:   12
  7109 ;; This function calls:
  7110 ;;		_Mcu_ClearWdg
  7111 ;;		_Mcu_SetWdgSts
  7112 ;; This function is called by:
  7113 ;;		_InitializeTasks
  7114 ;;		_ScheduleTasks
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           	psect	text25
  7119  006148                     __ptext25:
  7120                           	opt stack 0
  7121  006148                     _Wdg_MainTask:
  7122                           	opt stack 16
  7123                           
  7124                           ;wdg.c: 75: switch (SystemState)
  7125                           
  7126                           ;incstack = 0
  7127  006148  D007               	goto	l2498
  7128  00614A                     
  7129                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7130  00614A  0E01               	movlw	1
  7131  00614C  EC01  F032         	call	_Mcu_SetWdgSts
  7132                           
  7133                           ;wdg.c: 81: break;
  7134  006150  0012               	return	
  7135  006152                     
  7136                           ;wdg.c: 86: Mcu_ClearWdg();
  7137  006152  EC7B  F032         	call	_Mcu_ClearWdg	;wreg free
  7138                           
  7139                           ;wdg.c: 92: }
  7140                           
  7141                           ;wdg.c: 91: break;
  7142                           
  7143                           ;wdg.c: 90: default:
  7144                           
  7145                           ;wdg.c: 87: break;
  7146  006156  0012               	return	
  7147  006158                     l2498:
  7148  006158  0100               	movlb	0	; () banked
  7149  00615A  51D5               	movf	_SystemState& (0+255),w,b
  7150                           
  7151                           ; Switch size 1, requested type "space"
  7152                           ; Number of cases is 2, Range of values is 0 to 1
  7153                           ; switch strategies available:
  7154                           ; Name         Instructions Cycles
  7155                           ; simple_byte            7     4 (average)
  7156                           ;	Chosen strategy is simple_byte
  7157  00615C  0A00               	xorlw	0	; case 0
  7158  00615E  B4D8               	btfsc	status,2,c
  7159  006160  D7F4               	goto	l2499
  7160  006162  0A01               	xorlw	1	; case 1
  7161  006164  A4D8               	btfss	status,2,c
  7162  006166  0012               	return	
  7163  006168  D7F4               	goto	l2501
  7164  00616A                     __end_of_Wdg_MainTask:
  7165                           	opt stack 0
  7166                           tosu	equ	0xFFF
  7167                           tosh	equ	0xFFE
  7168                           tosl	equ	0xFFD
  7169                           pclath	equ	0xFFA
  7170                           tblptru	equ	0xFF8
  7171                           tblptrh	equ	0xFF7
  7172                           tblptrl	equ	0xFF6
  7173                           tablat	equ	0xFF5
  7174                           prodh	equ	0xFF4
  7175                           prodl	equ	0xFF3
  7176                           intcon	equ	0xFF2
  7177                           intcon2	equ	0xFF1
  7178                           intcon3	equ	0xFF0
  7179                           postinc0	equ	0xFEE
  7180                           plusw0	equ	0xFEB
  7181                           wreg	equ	0xFE8
  7182                           postinc1	equ	0xFE6
  7183                           postdec1	equ	0xFE5
  7184                           fsr1h	equ	0xFE2
  7185                           fsr1l	equ	0xFE1
  7186                           indf2	equ	0xFDF
  7187                           postinc2	equ	0xFDE
  7188                           postdec2	equ	0xFDD
  7189                           plusw2	equ	0xFDB
  7190                           fsr2h	equ	0xFDA
  7191                           fsr2l	equ	0xFD9
  7192                           status	equ	0xFD8
  7193                           
  7194 ;; *************** function _Mcu_SetWdgSts *****************
  7195 ;; Defined at:
  7196 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  WdgSts          1    wreg     unsigned char 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  1    wreg      void 
  7203 ;; Registers used:
  7204 ;;		wreg
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7211 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7213 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7214 ;;Total ram usage:        1 bytes
  7215 ;; Hardware stack levels used:    1
  7216 ;; Hardware stack levels required when called:   11
  7217 ;; This function calls:
  7218 ;;		Nothing
  7219 ;; This function is called by:
  7220 ;;		_Wdg_MainTask
  7221 ;; This function uses a non-reentrant model
  7222 ;;
  7223                           
  7224                           	psect	text26
  7225  006402                     __ptext26:
  7226                           	opt stack 0
  7227  006402                     _Mcu_SetWdgSts:
  7228                           	opt stack 16
  7229                           
  7230                           ;incstack = 0
  7231                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7232  006402  0100               	movlb	0	; () banked
  7233  006404  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7234                           
  7235                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7236  006406  0100               	movlb	0	; () banked
  7237  006408  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7238  00640A  D002               	bra	u13495
  7239  00640C  90C0               	bcf	4032,0,c	;volatile
  7240  00640E  D001               	bra	u13496
  7241  006410                     u13495:
  7242  006410  80C0               	bsf	4032,0,c	;volatile
  7243  006412                     u13496:
  7244  006412  0012               	return		;funcret
  7245  006414                     __end_of_Mcu_SetWdgSts:
  7246                           	opt stack 0
  7247                           tosu	equ	0xFFF
  7248                           tosh	equ	0xFFE
  7249                           tosl	equ	0xFFD
  7250                           pclath	equ	0xFFA
  7251                           tblptru	equ	0xFF8
  7252                           tblptrh	equ	0xFF7
  7253                           tblptrl	equ	0xFF6
  7254                           tablat	equ	0xFF5
  7255                           prodh	equ	0xFF4
  7256                           prodl	equ	0xFF3
  7257                           intcon	equ	0xFF2
  7258                           intcon2	equ	0xFF1
  7259                           intcon3	equ	0xFF0
  7260                           postinc0	equ	0xFEE
  7261                           plusw0	equ	0xFEB
  7262                           wreg	equ	0xFE8
  7263                           postinc1	equ	0xFE6
  7264                           postdec1	equ	0xFE5
  7265                           fsr1h	equ	0xFE2
  7266                           fsr1l	equ	0xFE1
  7267                           indf2	equ	0xFDF
  7268                           postinc2	equ	0xFDE
  7269                           postdec2	equ	0xFDD
  7270                           plusw2	equ	0xFDB
  7271                           fsr2h	equ	0xFDA
  7272                           fsr2l	equ	0xFD9
  7273                           status	equ	0xFD8
  7274                           
  7275 ;; *************** function _Mcu_ClearWdg *****************
  7276 ;; Defined at:
  7277 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;		None
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;		None
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  1    wreg      void 
  7284 ;; Registers used:
  7285 ;;		None
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7295 ;;Total ram usage:        0 bytes
  7296 ;; Hardware stack levels used:    1
  7297 ;; Hardware stack levels required when called:   11
  7298 ;; This function calls:
  7299 ;;		Nothing
  7300 ;; This function is called by:
  7301 ;;		_Wdg_MainTask
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text27
  7306  0064F6                     __ptext27:
  7307                           	opt stack 0
  7308  0064F6                     _Mcu_ClearWdg:
  7309                           	opt stack 16
  7310                           
  7311                           ;incstack = 0
  7312  0064F6  0004               	clrwdt		;# 
  7313  0064F8  0012               	return		;funcret
  7314  0064FA                     __end_of_Mcu_ClearWdg:
  7315                           	opt stack 0
  7316                           tosu	equ	0xFFF
  7317                           tosh	equ	0xFFE
  7318                           tosl	equ	0xFFD
  7319                           pclath	equ	0xFFA
  7320                           tblptru	equ	0xFF8
  7321                           tblptrh	equ	0xFF7
  7322                           tblptrl	equ	0xFF6
  7323                           tablat	equ	0xFF5
  7324                           prodh	equ	0xFF4
  7325                           prodl	equ	0xFF3
  7326                           intcon	equ	0xFF2
  7327                           intcon2	equ	0xFF1
  7328                           intcon3	equ	0xFF0
  7329                           postinc0	equ	0xFEE
  7330                           plusw0	equ	0xFEB
  7331                           wreg	equ	0xFE8
  7332                           postinc1	equ	0xFE6
  7333                           postdec1	equ	0xFE5
  7334                           fsr1h	equ	0xFE2
  7335                           fsr1l	equ	0xFE1
  7336                           indf2	equ	0xFDF
  7337                           postinc2	equ	0xFDE
  7338                           postdec2	equ	0xFDD
  7339                           plusw2	equ	0xFDB
  7340                           fsr2h	equ	0xFDA
  7341                           fsr2l	equ	0xFD9
  7342                           status	equ	0xFD8
  7343                           
  7344 ;; *************** function _USBDeviceTasks *****************
  7345 ;; Defined at:
  7346 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;		None
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;  i               1   56[BANK0 ] unsigned char 
  7351 ;; Return value:  Size  Location     Type
  7352 ;;                  1    wreg      void 
  7353 ;; Registers used:
  7354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7355 ;; Tracked objects:
  7356 ;;		On entry : 0/0
  7357 ;;		On exit  : 0/0
  7358 ;;		Unchanged: 0/0
  7359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7361 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7363 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7364 ;;Total ram usage:        1 bytes
  7365 ;; Hardware stack levels used:    1
  7366 ;; Hardware stack levels required when called:   19
  7367 ;; This function calls:
  7368 ;;		_USBCtrlEPAllowStatusStage
  7369 ;;		_USBCtrlEPService
  7370 ;;		_USBDeviceInit
  7371 ;;		_USBIncrement1msInternalTimers
  7372 ;;		_USBStallHandler
  7373 ;;		_USBSuspend
  7374 ;;		_USBWakeFromSuspend
  7375 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7376 ;; This function is called by:
  7377 ;;		_UsbDevice_MainTask
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           	psect	text28
  7382  001BAA                     __ptext28:
  7383                           	opt stack 0
  7384  001BAA                     _USBDeviceTasks:
  7385                           	opt stack 8
  7386                           
  7387                           ;usb_device.c: 562: }
  7388                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7389                           
  7390                           ; BSR set to: 0
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;usb_device.c: 561: return;
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7397                           
  7398                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7399                           
  7400                           ;usb_device.c: 529: UIE = 0;
  7401                           
  7402                           ;usb_device.c: 524: {
  7403                           ;usb_device.c: 526: UCON = 0;
  7404                           
  7405                           ;usb_device.c: 497: uint8_t i;
  7406                           ;usb_device.c: 523: if (1 != 1)
  7407                           
  7408                           ;incstack = 0
  7409  001BAA  0100               	movlb	0	; () banked
  7410  001BAC  51CE               	movf	_USBDeviceState& (0+255),w,b
  7411  001BAE  A4D8               	btfss	status,2,c
  7412  001BB0  D012               	goto	l1612
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;usb_device.c: 585: {
  7416                           ;usb_device.c: 587: UCON = 0;
  7417  001BB2  0E00               	movlw	0
  7418  001BB4  6E65               	movwf	3941,c	;volatile
  7419                           
  7420                           ;usb_device.c: 590: UIE = 0;
  7421  001BB6  0E00               	movlw	0
  7422  001BB8  010F               	movlb	15	; () banked
  7423  001BBA  6F36               	movwf	54,b	;volatile
  7424                           
  7425                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7426  001BBC  0E16               	movlw	22
  7427  001BBE  6F39               	movwf	57,b	;volatile
  7428  001BC0  0E9F               	movlw	159
  7429  001BC2  6F37               	movwf	55,b	;volatile
  7430  001BC4  0E7B               	movlw	123
  7431  001BC6  6F36               	movwf	54,b	;volatile
  7432                           
  7433                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7434  001BC8  D001               	goto	l1613
  7435  001BCA                     l1614:
  7436  001BCA  8665               	bsf	3941,3,c	;volatile
  7437  001BCC                     l1613:
  7438  001BCC  A665               	btfss	3941,3,c	;volatile
  7439  001BCE  D7FD               	goto	l1614
  7440                           
  7441                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7442  001BD0  0E01               	movlw	1
  7443  001BD2  0100               	movlb	0	; () banked
  7444  001BD4  6FCE               	movwf	_USBDeviceState& (0+255),b
  7445  001BD6                     l1612:
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;usb_device.c: 605: }
  7449                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7450                           
  7451                           ; BSR set to: 0
  7452  001BD6  05CE               	decf	_USBDeviceState& (0+255),w,b
  7453  001BD8  B4D8               	btfsc	status,2,c
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;usb_device.c: 609: {
  7457                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7458  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7459  001BDC  D00A               	goto	l1617
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;usb_device.c: 620: {
  7463                           ;usb_device.c: 626: {UIR = 0;};
  7464  001BDE  0E00               	movlw	0
  7465  001BE0  6E62               	movwf	3938,c	;volatile
  7466                           
  7467                           ;usb_device.c: 630: UIE=0;
  7468  001BE2  0E00               	movlw	0
  7469  001BE4  010F               	movlb	15	; () banked
  7470  001BE6  6F36               	movwf	54,b	;volatile
  7471                           
  7472                           ; BSR set to: 15
  7473                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7474  001BE8  8136               	bsf	54,0,b	;volatile
  7475                           
  7476                           ; BSR set to: 15
  7477                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7478  001BEA  8936               	bsf	54,4,b	;volatile
  7479                           
  7480                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7481  001BEC  0E02               	movlw	2
  7482  001BEE  0100               	movlb	0	; () banked
  7483  001BF0  6FCE               	movwf	_USBDeviceState& (0+255),b
  7484  001BF2                     l1617:
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;usb_device.c: 635: }
  7488                           ;usb_device.c: 636: }
  7489                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7490                           
  7491                           ; BSR set to: 0
  7492                           
  7493                           ; BSR set to: 0
  7494  001BF2  A462               	btfss	3938,2,c	;volatile
  7495  001BF4  D006               	goto	l1618
  7496                           
  7497                           ; BSR set to: 0
  7498  001BF6  010F               	movlb	15	; () banked
  7499  001BF8  A536               	btfss	54,2,b	;volatile
  7500  001BFA  D003               	goto	l1618
  7501                           
  7502                           ; BSR set to: 15
  7503                           ;usb_device.c: 653: {
  7504                           ;usb_device.c: 654: (UIR &= 0xFB);
  7505  001BFC  9462               	bcf	3938,2,c	;volatile
  7506                           
  7507                           ; BSR set to: 15
  7508                           ;usb_device.c: 658: USBWakeFromSuspend();
  7509  001BFE  EC82  F02E         	call	_USBWakeFromSuspend	;wreg free
  7510  001C02                     l1618:
  7511                           
  7512                           ;usb_device.c: 660: }
  7513                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7514  001C02  A265               	btfss	3941,1,c	;volatile
  7515  001C04  D002               	goto	l1619
  7516                           
  7517                           ;usb_device.c: 666: {
  7518                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7519  001C06  98A1               	bcf	4001,4,c	;volatile
  7520                           
  7521                           ;usb_device.c: 668: return;
  7522  001C08  0012               	return	
  7523  001C0A                     l1619:
  7524                           
  7525                           ;usb_device.c: 669: }
  7526                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7527  001C0A  A062               	btfss	3938,0,c	;volatile
  7528  001C0C  D009               	goto	l1620
  7529  001C0E  010F               	movlb	15	; () banked
  7530  001C10  A136               	btfss	54,0,b	;volatile
  7531  001C12  D006               	goto	l1620
  7532                           
  7533                           ; BSR set to: 15
  7534                           ;usb_device.c: 682: {
  7535                           ;usb_device.c: 683: USBDeviceInit();
  7536  001C14  ECC0  F010         	call	_USBDeviceInit	;wreg free
  7537                           
  7538                           ;usb_device.c: 687: ;
  7539                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7540  001C18  0E04               	movlw	4
  7541  001C1A  0100               	movlb	0	; () banked
  7542  001C1C  6FCE               	movwf	_USBDeviceState& (0+255),b
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;usb_device.c: 699: (UIR &= 0xFE);
  7546  001C1E  9062               	bcf	3938,0,c	;volatile
  7547  001C20                     l1620:
  7548                           
  7549                           ;usb_device.c: 700: }
  7550                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7551                           
  7552                           ; BSR set to: 0
  7553  001C20  A862               	btfss	3938,4,c	;volatile
  7554  001C22  D004               	goto	l1621
  7555  001C24  010F               	movlb	15	; () banked
  7556  001C26  B936               	btfsc	54,4,b	;volatile
  7557                           
  7558                           ; BSR set to: 15
  7559                           ;usb_device.c: 706: {
  7560                           ;usb_device.c: 712: USBSuspend();
  7561  001C28  EC0C  F02F         	call	_USBSuspend	;wreg free
  7562  001C2C                     l1621:
  7563                           
  7564                           ;usb_device.c: 714: }
  7565                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7566  001C2C  AC62               	btfss	3938,6,c	;volatile
  7567  001C2E  D01D               	goto	l1625
  7568                           
  7569                           ;usb_device.c: 727: {
  7570                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7571  001C30  010F               	movlb	15	; () banked
  7572  001C32  AD36               	btfss	54,6,b	;volatile
  7573  001C34  D00F               	goto	l1623
  7574                           
  7575                           ; BSR set to: 15
  7576                           ;usb_device.c: 730: {
  7577                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7578  001C36  0E00               	movlw	0
  7579  001C38  0100               	movlb	0	; () banked
  7580  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7581  001C3C  0E73               	movlw	115
  7582  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7583  001C40  0E00               	movlw	0
  7584  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7585  001C44  0E00               	movlw	0
  7586  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7587  001C48  0E00               	movlw	0
  7588  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7589  001C4C  0E01               	movlw	1
  7590  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7591  001C50  ECFC  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7592  001C54                     l1623:
  7593                           
  7594                           ;usb_device.c: 732: }
  7595                           ;usb_device.c: 733: (UIR &= 0xBF);
  7596  001C54  9C62               	bcf	3938,6,c	;volatile
  7597                           
  7598                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7599  001C56  ECB5  F030         	call	_USBIncrement1msInternalTimers	;wreg free
  7600                           
  7601                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7602  001C5A  0100               	movlb	0	; () banked
  7603  001C5C  51CA               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7604  001C5E  A4D8               	btfss	status,2,c
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;usb_device.c: 754: {
  7608                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7609  001C60  07CA               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;usb_device.c: 756: }
  7613                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7614                           
  7615                           ; BSR set to: 0
  7616  001C62  51CA               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7617  001C64  B4D8               	btfsc	status,2,c
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;usb_device.c: 763: {
  7621                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7622  001C66  EC09  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7623  001C6A                     l1625:
  7624                           
  7625                           ;usb_device.c: 765: }
  7626                           ;usb_device.c: 767: }
  7627                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7628  001C6A  AA62               	btfss	3938,5,c	;volatile
  7629  001C6C  D004               	goto	l1626
  7630  001C6E  010F               	movlb	15	; () banked
  7631  001C70  BB36               	btfsc	54,5,b	;volatile
  7632                           
  7633                           ; BSR set to: 15
  7634                           ;usb_device.c: 770: {
  7635                           ;usb_device.c: 771: USBStallHandler();
  7636  001C72  ECFD  F02C         	call	_USBStallHandler	;wreg free
  7637  001C76                     l1626:
  7638                           
  7639                           ;usb_device.c: 772: }
  7640                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7641  001C76  A262               	btfss	3938,1,c	;volatile
  7642  001C78  D013               	goto	l1627
  7643  001C7A  010F               	movlb	15	; () banked
  7644  001C7C  A336               	btfss	54,1,b	;volatile
  7645  001C7E  D010               	goto	l1627
  7646                           
  7647                           ; BSR set to: 15
  7648                           ;usb_device.c: 775: {
  7649                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7650  001C80  0E7F               	movlw	127
  7651  001C82  0100               	movlb	0	; () banked
  7652  001C84  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7653  001C86  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7654  001C88  0E00               	movlw	0
  7655  001C8A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7656  001C8C  0E00               	movlw	0
  7657  001C8E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7658  001C90  0E00               	movlw	0
  7659  001C92  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7660  001C94  0E01               	movlw	1
  7661  001C96  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7662  001C98  ECFC  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7663                           
  7664                           ;usb_device.c: 777: {UEIR = 0;};
  7665  001C9C  0E00               	movlw	0
  7666  001C9E  6E63               	movwf	3939,c	;volatile
  7667  001CA0                     l1627:
  7668                           
  7669                           ;usb_device.c: 785: }
  7670                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7671  001CA0  0E04               	movlw	4
  7672  001CA2  0100               	movlb	0	; () banked
  7673  001CA4  61CE               	cpfslt	_USBDeviceState& (0+255),b
  7674  001CA6  D002               	goto	l1628
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;usb_device.c: 793: {
  7678                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7679  001CA8  98A1               	bcf	4001,4,c	;volatile
  7680                           
  7681                           ;usb_device.c: 795: return;
  7682  001CAA  0012               	return	
  7683  001CAC                     l1628:
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;usb_device.c: 796: }
  7687                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7688  001CAC  010F               	movlb	15	; () banked
  7689  001CAE  A736               	btfss	54,3,b	;volatile
  7690  001CB0  D03E               	goto	u14480
  7691                           
  7692                           ; BSR set to: 15
  7693                           ;usb_device.c: 802: {
  7694                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7695  001CB2  0E00               	movlw	0
  7696  001CB4  0100               	movlb	0	; () banked
  7697  001CB6  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7698  001CB8                     l15008:
  7699                           
  7700                           ; BSR set to: 0
  7701  001CB8  0E03               	movlw	3
  7702  001CBA  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7703  001CBC  D001               	goto	l1630
  7704  001CBE  D037               	goto	u14480
  7705  001CC0                     l1630:
  7706                           
  7707                           ; BSR set to: 0
  7708                           ;usb_device.c: 804: {
  7709                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7710  001CC0  A662               	btfss	3938,3,c	;volatile
  7711  001CC2  D035               	goto	u14480
  7712                           
  7713                           ; BSR set to: 0
  7714                           ;usb_device.c: 806: {
  7715                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7716  001CC4  CF64 F0D6          	movff	3940,_USTATcopy	;volatile
  7717                           
  7718                           ; BSR set to: 0
  7719                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7720  001CC8  31D6               	rrcf	_USTATcopy& (0+255),w,b
  7721  001CCA  32E8               	rrcf	wreg,f,c
  7722  001CCC  32E8               	rrcf	wreg,f,c
  7723  001CCE  0B0F               	andlw	15
  7724  001CD0  6FCB               	movwf	_endpoint_number& (0+255),b
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;usb_device.c: 811: (UIR &= 0xF7);
  7728  001CD2  9662               	bcf	3938,3,c	;volatile
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7732  001CD4  B5D6               	btfsc	_USTATcopy& (0+255),2,b
  7733  001CD6  D007               	goto	l1633
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;usb_device.c: 817: {
  7737                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7738  001CD8  51CB               	movf	_endpoint_number& (0+255),w,b
  7739  001CDA  0D01               	mullw	1
  7740  001CDC  0ECE               	movlw	low _ep_data_out
  7741  001CDE  24F3               	addwf	prodl,w,c
  7742  001CE0  6ED9               	movwf	fsr2l,c
  7743  001CE2  0E02               	movlw	high _ep_data_out
  7744  001CE4  D007               	goto	L3
  7745  001CE6                     l1633:
  7746                           
  7747                           ;usb_device.c: 820: else
  7748                           ;usb_device.c: 821: {
  7749                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7750                           
  7751                           ; BSR set to: 2
  7752  001CE6  0100               	movlb	0	; () banked
  7753  001CE8  51CB               	movf	_endpoint_number& (0+255),w,b
  7754  001CEA  0D01               	mullw	1
  7755  001CEC  0ED1               	movlw	low _ep_data_in
  7756  001CEE  24F3               	addwf	prodl,w,c
  7757  001CF0  6ED9               	movwf	fsr2l,c
  7758  001CF2  0E02               	movlw	high _ep_data_in
  7759  001CF4                     L3:
  7760  001CF4  20F4               	addwfc	prodh,w,c
  7761  001CF6  6EDA               	movwf	fsr2h,c
  7762  001CF8  0102               	movlb	2	; () banked
  7763  001CFA  70DF               	btg	indf2,0,c
  7764                           
  7765                           ; BSR set to: 2
  7766                           ;usb_device.c: 823: }
  7767                           ;usb_device.c: 828: if(endpoint_number == 0)
  7768                           
  7769                           ; BSR set to: 2
  7770  001CFC  0100               	movlb	0	; () banked
  7771  001CFE  51CB               	movf	_endpoint_number& (0+255),w,b
  7772  001D00  A4D8               	btfss	status,2,c
  7773  001D02  D003               	goto	l1635
  7774                           
  7775                           ; BSR set to: 0
  7776                           ;usb_device.c: 829: {
  7777                           ;usb_device.c: 830: USBCtrlEPService();
  7778  001D04  EC5D  F024         	call	_USBCtrlEPService	;wreg free
  7779                           
  7780                           ;usb_device.c: 831: }
  7781  001D08  D00F               	goto	l1637
  7782  001D0A                     l1635:
  7783                           
  7784                           ;usb_device.c: 832: else
  7785                           ;usb_device.c: 833: {
  7786                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7787  001D0A  0E00               	movlw	0
  7788  001D0C  0100               	movlb	0	; () banked
  7789  001D0E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7790  001D10  0E72               	movlw	114
  7791  001D12  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7792  001D14  0ED6               	movlw	low _USTATcopy
  7793  001D16  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7794  001D18  0E00               	movlw	high _USTATcopy
  7795  001D1A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7796  001D1C  0E00               	movlw	0
  7797  001D1E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7798  001D20  0E00               	movlw	0
  7799  001D22  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7800  001D24  ECFC  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7801  001D28                     l1637:
  7802  001D28  0100               	movlb	0	; () banked
  7803  001D2A  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7804  001D2C  D7C5               	goto	l15008
  7805  001D2E                     u14480:
  7806                           
  7807                           ;usb_device.c: 840: }
  7808                           ;usb_device.c: 841: }
  7809                           ;usb_device.c: 842: }
  7810                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7811                           
  7812                           ; BSR set to: 0
  7813  001D2E  98A1               	bcf	4001,4,c	;volatile
  7814  001D30  0012               	return		;funcret
  7815  001D32                     __end_of_USBDeviceTasks:
  7816                           	opt stack 0
  7817                           tosu	equ	0xFFF
  7818                           tosh	equ	0xFFE
  7819                           tosl	equ	0xFFD
  7820                           pclath	equ	0xFFA
  7821                           tblptru	equ	0xFF8
  7822                           tblptrh	equ	0xFF7
  7823                           tblptrl	equ	0xFF6
  7824                           tablat	equ	0xFF5
  7825                           prodh	equ	0xFF4
  7826                           prodl	equ	0xFF3
  7827                           intcon	equ	0xFF2
  7828                           intcon2	equ	0xFF1
  7829                           intcon3	equ	0xFF0
  7830                           postinc0	equ	0xFEE
  7831                           plusw0	equ	0xFEB
  7832                           wreg	equ	0xFE8
  7833                           postinc1	equ	0xFE6
  7834                           postdec1	equ	0xFE5
  7835                           fsr1h	equ	0xFE2
  7836                           fsr1l	equ	0xFE1
  7837                           indf2	equ	0xFDF
  7838                           postinc2	equ	0xFDE
  7839                           postdec2	equ	0xFDD
  7840                           plusw2	equ	0xFDB
  7841                           fsr2h	equ	0xFDA
  7842                           fsr2l	equ	0xFD9
  7843                           status	equ	0xFD8
  7844                           
  7845 ;; *************** function _USBWakeFromSuspend *****************
  7846 ;; Defined at:
  7847 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;		None
  7850 ;; Auto vars:     Size  Location     Type
  7851 ;;		None
  7852 ;; Return value:  Size  Location     Type
  7853 ;;                  1    wreg      void 
  7854 ;; Registers used:
  7855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7856 ;; Tracked objects:
  7857 ;;		On entry : 0/0
  7858 ;;		On exit  : 0/0
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7865 ;;Total ram usage:        0 bytes
  7866 ;; Hardware stack levels used:    1
  7867 ;; Hardware stack levels required when called:   15
  7868 ;; This function calls:
  7869 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7870 ;; This function is called by:
  7871 ;;		_USBDeviceTasks
  7872 ;; This function uses a non-reentrant model
  7873 ;;
  7874                           
  7875                           	psect	text29
  7876  005D04                     __ptext29:
  7877                           	opt stack 0
  7878  005D04                     _USBWakeFromSuspend:
  7879                           	opt stack 11
  7880                           
  7881                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7882                           
  7883                           ;incstack = 0
  7884  005D04  0E00               	movlw	0
  7885  005D06  0101               	movlb	1	; () banked
  7886  005D08  6FE5               	movwf	_USBBusIsSuspended& (0+255),b
  7887                           
  7888                           ; BSR set to: 1
  7889                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7890  005D0A  0E00               	movlw	0
  7891  005D0C  0100               	movlb	0	; () banked
  7892  005D0E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7893  005D10  0E74               	movlw	116
  7894  005D12  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7895  005D14  0E00               	movlw	0
  7896  005D16  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7897  005D18  0E00               	movlw	0
  7898  005D1A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7899  005D1C  0E00               	movlw	0
  7900  005D1E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7901  005D20  0E00               	movlw	0
  7902  005D22  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7903  005D24  ECFC  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7904                           
  7905                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7906  005D28  9265               	bcf	3941,1,c	;volatile
  7907                           
  7908                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7909  005D2A  010F               	movlb	15	; () banked
  7910  005D2C  9536               	bcf	54,2,b	;volatile
  7911                           
  7912                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7913  005D2E  D001               	goto	l1765
  7914  005D30                     
  7915                           ;usb_device.c: 2361: {
  7916                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7917                           
  7918                           ; BSR set to: 15
  7919  005D30  9462               	bcf	3938,2,c	;volatile
  7920  005D32                     l1765:
  7921  005D32  B462               	btfsc	3938,2,c	;volatile
  7922  005D34  D7FD               	goto	l1766
  7923                           
  7924                           ;usb_device.c: 2363: }
  7925                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7926  005D36  0E00               	movlw	0
  7927  005D38  0101               	movlb	1	; () banked
  7928  005D3A  6FE3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7929                           
  7930                           ; BSR set to: 1
  7931  005D3C  0012               	return		;funcret
  7932  005D3E                     __end_of_USBWakeFromSuspend:
  7933                           	opt stack 0
  7934                           tosu	equ	0xFFF
  7935                           tosh	equ	0xFFE
  7936                           tosl	equ	0xFFD
  7937                           pclath	equ	0xFFA
  7938                           tblptru	equ	0xFF8
  7939                           tblptrh	equ	0xFF7
  7940                           tblptrl	equ	0xFF6
  7941                           tablat	equ	0xFF5
  7942                           prodh	equ	0xFF4
  7943                           prodl	equ	0xFF3
  7944                           intcon	equ	0xFF2
  7945                           intcon2	equ	0xFF1
  7946                           intcon3	equ	0xFF0
  7947                           postinc0	equ	0xFEE
  7948                           plusw0	equ	0xFEB
  7949                           wreg	equ	0xFE8
  7950                           postinc1	equ	0xFE6
  7951                           postdec1	equ	0xFE5
  7952                           fsr1h	equ	0xFE2
  7953                           fsr1l	equ	0xFE1
  7954                           indf2	equ	0xFDF
  7955                           postinc2	equ	0xFDE
  7956                           postdec2	equ	0xFDD
  7957                           plusw2	equ	0xFDB
  7958                           fsr2h	equ	0xFDA
  7959                           fsr2l	equ	0xFD9
  7960                           status	equ	0xFD8
  7961                           
  7962 ;; *************** function _USBSuspend *****************
  7963 ;; Defined at:
  7964 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;		None
  7967 ;; Auto vars:     Size  Location     Type
  7968 ;;		None
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  1    wreg      void 
  7971 ;; Registers used:
  7972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7982 ;;Total ram usage:        0 bytes
  7983 ;; Hardware stack levels used:    1
  7984 ;; Hardware stack levels required when called:   15
  7985 ;; This function calls:
  7986 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7987 ;; This function is called by:
  7988 ;;		_USBDeviceTasks
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           	psect	text30
  7993  005E18                     __ptext30:
  7994                           	opt stack 0
  7995  005E18                     _USBSuspend:
  7996                           	opt stack 11
  7997                           
  7998                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  7999                           
  8000                           ; BSR set to: 1
  8001                           ;incstack = 0
  8002  005E18  010F               	movlb	15	; () banked
  8003  005E1A  8536               	bsf	54,2,b	;volatile
  8004                           
  8005                           ; BSR set to: 15
  8006                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8007  005E1C  9862               	bcf	3938,4,c	;volatile
  8008                           
  8009                           ; BSR set to: 15
  8010                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8011  005E1E  8265               	bsf	3941,1,c	;volatile
  8012                           
  8013                           ; BSR set to: 15
  8014                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8015  005E20  0E01               	movlw	1
  8016  005E22  0101               	movlb	1	; () banked
  8017  005E24  6FE5               	movwf	_USBBusIsSuspended& (0+255),b
  8018                           
  8019                           ; BSR set to: 1
  8020                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8021  005E26  0E00               	movlw	0
  8022  005E28  6FE3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8023                           
  8024                           ; BSR set to: 1
  8025                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8026  005E2A  0E00               	movlw	0
  8027  005E2C  0100               	movlb	0	; () banked
  8028  005E2E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8029  005E30  0E75               	movlw	117
  8030  005E32  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8031  005E34  0E00               	movlw	0
  8032  005E36  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8033  005E38  0E00               	movlw	0
  8034  005E3A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8035  005E3C  0E00               	movlw	0
  8036  005E3E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8037  005E40  0E00               	movlw	0
  8038  005E42  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8039  005E44  ECFC  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8040  005E48  0012               	return		;funcret
  8041  005E4A                     __end_of_USBSuspend:
  8042                           	opt stack 0
  8043                           tosu	equ	0xFFF
  8044                           tosh	equ	0xFFE
  8045                           tosl	equ	0xFFD
  8046                           pclath	equ	0xFFA
  8047                           tblptru	equ	0xFF8
  8048                           tblptrh	equ	0xFF7
  8049                           tblptrl	equ	0xFF6
  8050                           tablat	equ	0xFF5
  8051                           prodh	equ	0xFF4
  8052                           prodl	equ	0xFF3
  8053                           intcon	equ	0xFF2
  8054                           intcon2	equ	0xFF1
  8055                           intcon3	equ	0xFF0
  8056                           postinc0	equ	0xFEE
  8057                           plusw0	equ	0xFEB
  8058                           wreg	equ	0xFE8
  8059                           postinc1	equ	0xFE6
  8060                           postdec1	equ	0xFE5
  8061                           fsr1h	equ	0xFE2
  8062                           fsr1l	equ	0xFE1
  8063                           indf2	equ	0xFDF
  8064                           postinc2	equ	0xFDE
  8065                           postdec2	equ	0xFDD
  8066                           plusw2	equ	0xFDB
  8067                           fsr2h	equ	0xFDA
  8068                           fsr2l	equ	0xFD9
  8069                           status	equ	0xFD8
  8070                           
  8071 ;; *************** function _USBStallHandler *****************
  8072 ;; Defined at:
  8073 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;		None
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;		None
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  1    wreg      void 
  8080 ;; Registers used:
  8081 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8089 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8090 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8091 ;;Total ram usage:        1 bytes
  8092 ;; Hardware stack levels used:    1
  8093 ;; Hardware stack levels required when called:   11
  8094 ;; This function calls:
  8095 ;;		Nothing
  8096 ;; This function is called by:
  8097 ;;		_USBDeviceTasks
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           	psect	text31
  8102  0059FA                     __ptext31:
  8103                           	opt stack 0
  8104  0059FA                     _USBStallHandler:
  8105                           	opt stack 15
  8106                           
  8107                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8108                           
  8109                           ;incstack = 0
  8110  0059FA  010F               	movlb	15	; () banked
  8111  0059FC  A126               	btfss	38,0,b	;volatile
  8112  0059FE  D01D               	goto	l1757
  8113                           
  8114                           ; BSR set to: 15
  8115                           ;usb_device.c: 2233: {
  8116                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8117  005A00  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8118  005A04  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8119  005A08  0E80               	movlw	128
  8120  005A0A  18DE               	xorwf	postinc2,w,c
  8121  005A0C  A4D8               	btfss	status,2,c
  8122  005A0E  D014               	goto	l1758
  8123                           
  8124                           ; BSR set to: 15
  8125  005A10  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8126  005A14  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8127  005A18  0E84               	movlw	132
  8128  005A1A  18DE               	xorwf	postinc2,w,c
  8129  005A1C  A4D8               	btfss	status,2,c
  8130  005A1E  D00C               	goto	l1758
  8131                           
  8132                           ; BSR set to: 15
  8133                           ;usb_device.c: 2236: {
  8134                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8135  005A20  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8136  005A24  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8137  005A28  0E0C               	movlw	12
  8138  005A2A  6EDF               	movwf	indf2,c
  8139                           
  8140                           ; BSR set to: 15
  8141                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8142  005A2C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8143  005A30  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8144  005A34  0E00               	movlw	0
  8145  005A36  8EDB               	bsf	plusw2,7,c
  8146  005A38                     l1758:
  8147                           
  8148                           ; BSR set to: 15
  8149                           ;usb_device.c: 2240: }
  8150                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8151                           
  8152                           ; BSR set to: 15
  8153  005A38  9126               	bcf	38,0,b	;volatile
  8154  005A3A                     l1757:
  8155                           
  8156                           ; BSR set to: 15
  8157                           ;usb_device.c: 2242: }
  8158                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8159  005A3A  9A62               	bcf	3938,5,c	;volatile
  8160                           
  8161                           ; BSR set to: 15
  8162  005A3C  0012               	return		;funcret
  8163  005A3E                     __end_of_USBStallHandler:
  8164                           	opt stack 0
  8165                           tosu	equ	0xFFF
  8166                           tosh	equ	0xFFE
  8167                           tosl	equ	0xFFD
  8168                           pclath	equ	0xFFA
  8169                           tblptru	equ	0xFF8
  8170                           tblptrh	equ	0xFF7
  8171                           tblptrl	equ	0xFF6
  8172                           tablat	equ	0xFF5
  8173                           prodh	equ	0xFF4
  8174                           prodl	equ	0xFF3
  8175                           intcon	equ	0xFF2
  8176                           intcon2	equ	0xFF1
  8177                           intcon3	equ	0xFF0
  8178                           postinc0	equ	0xFEE
  8179                           plusw0	equ	0xFEB
  8180                           wreg	equ	0xFE8
  8181                           postinc1	equ	0xFE6
  8182                           postdec1	equ	0xFE5
  8183                           fsr1h	equ	0xFE2
  8184                           fsr1l	equ	0xFE1
  8185                           indf2	equ	0xFDF
  8186                           postinc2	equ	0xFDE
  8187                           postdec2	equ	0xFDD
  8188                           plusw2	equ	0xFDB
  8189                           fsr2h	equ	0xFDA
  8190                           fsr2l	equ	0xFD9
  8191                           status	equ	0xFD8
  8192                           
  8193 ;; *************** function _USBIncrement1msInternalTimers *****************
  8194 ;; Defined at:
  8195 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;		None
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;		None
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  1    wreg      void 
  8202 ;; Registers used:
  8203 ;;		wreg, status,2, status,0
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8213 ;;Total ram usage:        0 bytes
  8214 ;; Hardware stack levels used:    1
  8215 ;; Hardware stack levels required when called:   11
  8216 ;; This function calls:
  8217 ;;		Nothing
  8218 ;; This function is called by:
  8219 ;;		_USBDeviceTasks
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text32
  8224  00616A                     __ptext32:
  8225                           	opt stack 0
  8226  00616A                     _USBIncrement1msInternalTimers:
  8227                           	opt stack 15
  8228                           
  8229                           ;usb_device.c: 3050: USB1msTickCount++;
  8230                           
  8231                           ; BSR set to: 15
  8232                           ;incstack = 0
  8233  00616A  0E01               	movlw	1
  8234  00616C  0103               	movlb	3	; () banked
  8235  00616E  2718               	addwf	_USB1msTickCount& (0+255),f,b
  8236  006170  0E00               	movlw	0
  8237  006172  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8238  006174  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8239  006176  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8240                           
  8241                           ; BSR set to: 3
  8242                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8243  006178  0101               	movlb	1	; () banked
  8244  00617A  51E5               	movf	_USBBusIsSuspended& (0+255),w,b
  8245  00617C  A4D8               	btfss	status,2,c
  8246  00617E  0012               	return	
  8247                           
  8248                           ; BSR set to: 1
  8249                           ;usb_device.c: 3052: {
  8250                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8251  006180  2BE3               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8252                           
  8253                           ; BSR set to: 1
  8254                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8255  006182  51E3               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8256  006184  A4D8               	btfss	status,2,c
  8257  006186  0012               	return	
  8258                           
  8259                           ; BSR set to: 1
  8260                           ;usb_device.c: 3056: {
  8261                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8262  006188  69E3               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8263                           
  8264                           ; BSR set to: 1
  8265  00618A  0012               	return	
  8266  00618C                     __end_of_USBIncrement1msInternalTimers:
  8267                           	opt stack 0
  8268                           tosu	equ	0xFFF
  8269                           tosh	equ	0xFFE
  8270                           tosl	equ	0xFFD
  8271                           pclath	equ	0xFFA
  8272                           tblptru	equ	0xFF8
  8273                           tblptrh	equ	0xFF7
  8274                           tblptrl	equ	0xFF6
  8275                           tablat	equ	0xFF5
  8276                           prodh	equ	0xFF4
  8277                           prodl	equ	0xFF3
  8278                           intcon	equ	0xFF2
  8279                           intcon2	equ	0xFF1
  8280                           intcon3	equ	0xFF0
  8281                           postinc0	equ	0xFEE
  8282                           plusw0	equ	0xFEB
  8283                           wreg	equ	0xFE8
  8284                           postinc1	equ	0xFE6
  8285                           postdec1	equ	0xFE5
  8286                           fsr1h	equ	0xFE2
  8287                           fsr1l	equ	0xFE1
  8288                           indf2	equ	0xFDF
  8289                           postinc2	equ	0xFDE
  8290                           postdec2	equ	0xFDD
  8291                           plusw2	equ	0xFDB
  8292                           fsr2h	equ	0xFDA
  8293                           fsr2l	equ	0xFD9
  8294                           status	equ	0xFD8
  8295                           
  8296 ;; *************** function _USBDeviceInit *****************
  8297 ;; Defined at:
  8298 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;		None
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;  i               1   37[BANK0 ] unsigned char 
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  1    wreg      void 
  8305 ;; Registers used:
  8306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8307 ;; Tracked objects:
  8308 ;;		On entry : 0/0
  8309 ;;		On exit  : 0/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8315 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8316 ;;Total ram usage:        1 bytes
  8317 ;; Hardware stack levels used:    1
  8318 ;; Hardware stack levels required when called:   12
  8319 ;; This function calls:
  8320 ;;		_memset
  8321 ;; This function is called by:
  8322 ;;		_USBDeviceTasks
  8323 ;;		_UsbDevice_MainTask
  8324 ;; This function uses a non-reentrant model
  8325 ;;
  8326                           
  8327                           	psect	text33
  8328  002180                     __ptext33:
  8329                           	opt stack 0
  8330  002180                     _USBDeviceInit:
  8331                           	opt stack 14
  8332                           
  8333                           ;usb_device.c: 297: uint8_t i;
  8334                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8335                           
  8336                           ; BSR set to: 1
  8337                           ;incstack = 0
  8338  002180  98A0               	bcf	4000,4,c	;volatile
  8339                           
  8340                           ;usb_device.c: 303: ;
  8341                           ;usb_device.c: 306: {UEIR = 0;};
  8342  002182  0E00               	movlw	0
  8343  002184  6E63               	movwf	3939,c	;volatile
  8344                           
  8345                           ;usb_device.c: 309: {UIR = 0;};
  8346  002186  0E00               	movlw	0
  8347  002188  6E62               	movwf	3938,c	;volatile
  8348                           
  8349                           ;usb_device.c: 312: UEP0 = 0;
  8350  00218A  0E00               	movlw	0
  8351  00218C  010F               	movlb	15	; () banked
  8352  00218E  6F26               	movwf	38,b	;volatile
  8353                           
  8354                           ; BSR set to: 15
  8355                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8356  002190  0E27               	movlw	39
  8357  002192  0100               	movlb	0	; () banked
  8358  002194  6F7D               	movwf	memset@p1& (0+255),b
  8359  002196  0E0F               	movlw	15
  8360  002198  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8361  00219A  0E00               	movlw	0
  8362  00219C  6F80               	movwf	(memset@c+1)& (0+255),b
  8363  00219E  0E00               	movlw	0
  8364  0021A0  6F7F               	movwf	memset@c& (0+255),b
  8365  0021A2  0E00               	movlw	0
  8366  0021A4  6F82               	movwf	(memset@n+1)& (0+255),b
  8367  0021A6  0E02               	movlw	2
  8368  0021A8  6F81               	movwf	memset@n& (0+255),b
  8369  0021AA  EC56  F02F         	call	_memset	;wreg free
  8370                           
  8371                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8372  0021AE  0E16               	movlw	22
  8373  0021B0  010F               	movlb	15	; () banked
  8374  0021B2  6F39               	movwf	57,b	;volatile
  8375                           
  8376                           ; BSR set to: 15
  8377  0021B4  0E9F               	movlw	159
  8378  0021B6  6F37               	movwf	55,b	;volatile
  8379                           
  8380                           ; BSR set to: 15
  8381  0021B8  0E7B               	movlw	123
  8382  0021BA  6F36               	movwf	54,b	;volatile
  8383                           
  8384                           ; BSR set to: 15
  8385                           ;usb_device.c: 319: ;
  8386                           ;usb_device.c: 322: ;
  8387                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8388  0021BC  0E00               	movlw	0
  8389  0021BE  0100               	movlb	0	; () banked
  8390  0021C0  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8391  0021C2                     l13754:
  8392                           
  8393                           ; BSR set to: 0
  8394  0021C2  0E0B               	movlw	11
  8395  0021C4  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8396  0021C6  D001               	goto	l1601
  8397  0021C8  D00E               	goto	u12730
  8398  0021CA                     l1601:
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;usb_device.c: 326: {
  8402                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8403                           
  8404                           ; BSR set to: 0
  8405  0021CA  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8406  0021CC  0D04               	mullw	4
  8407  0021CE  0E00               	movlw	0
  8408  0021D0  24F3               	addwf	prodl,w,c
  8409  0021D2  6ED9               	movwf	fsr2l,c
  8410  0021D4  0E04               	movlw	4
  8411  0021D6  20F4               	addwfc	prodh,w,c
  8412  0021D8  6EDA               	movwf	fsr2h,c
  8413  0021DA  6ADE               	clrf	postinc2,c
  8414  0021DC  6ADE               	clrf	postinc2,c
  8415  0021DE  6ADE               	clrf	postinc2,c
  8416  0021E0  6ADD               	clrf	postdec2,c
  8417                           
  8418                           ; BSR set to: 0
  8419  0021E2  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8420  0021E4  D7EE               	goto	l13754
  8421  0021E6                     u12730:
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;usb_device.c: 328: }
  8425                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8426  0021E6  8C65               	bsf	3941,6,c	;volatile
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;usb_device.c: 334: UADDR = 0x00;
  8430  0021E8  0E00               	movlw	0
  8431  0021EA  010F               	movlb	15	; () banked
  8432  0021EC  6F38               	movwf	56,b	;volatile
  8433                           
  8434                           ; BSR set to: 15
  8435                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8436  0021EE  9865               	bcf	3941,4,c	;volatile
  8437                           
  8438                           ; BSR set to: 15
  8439                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8440  0021F0  9C65               	bcf	3941,6,c	;volatile
  8441  0021F2                     
  8442                           ;usb_device.c: 344: {
  8443                           ;usb_device.c: 345: (UIR &= 0xF7);
  8444                           
  8445                           ; BSR set to: 15
  8446  0021F2  9662               	bcf	3938,3,c	;volatile
  8447                           
  8448                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8449  0021F4  0E00               	movlw	0
  8450  0021F6  0100               	movlb	0	; () banked
  8451  0021F8  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8452                           
  8453                           ; BSR set to: 0
  8454                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8455  0021FA  0E00               	movlw	0
  8456  0021FC  0101               	movlb	1	; () banked
  8457  0021FE  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8458                           
  8459                           ; BSR set to: 1
  8460                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8461  002200  0E00               	movlw	0
  8462  002202  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8463  002204  0E00               	movlw	0
  8464  002206  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8465                           
  8466                           ; BSR set to: 1
  8467                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8468  002208  B662               	btfsc	3938,3,c	;volatile
  8469  00220A  D7F3               	goto	l1603
  8470                           
  8471                           ; BSR set to: 1
  8472                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8473                           
  8474                           ; BSR set to: 1
  8475  00220C  0E01               	movlw	1
  8476  00220E  0100               	movlb	0	; () banked
  8477  002210  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8478                           
  8479                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8480  002212  0E01               	movlw	1
  8481  002214  6FC7               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8482                           
  8483                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8484  002216  0E00               	movlw	0
  8485  002218  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8486                           
  8487                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8488  00221A  0E00               	movlw	0
  8489  00221C  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8490                           
  8491                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8492  00221E  0E00               	movlw	0
  8493  002220  0101               	movlb	1	; () banked
  8494  002222  6FE5               	movwf	_USBBusIsSuspended& (0+255),b
  8495                           
  8496                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8497  002224  0E00               	movlw	0
  8498  002226  0100               	movlb	0	; () banked
  8499  002228  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8500  00222A                     l13782:
  8501                           
  8502                           ; BSR set to: 0
  8503  00222A  0E02               	movlw	2
  8504  00222C  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8505  00222E  D001               	goto	l1605
  8506  002230  D02E               	goto	u12760
  8507  002232                     l1605:
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;usb_device.c: 364: {
  8511                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8512                           
  8513                           ; BSR set to: 0
  8514  002232  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8515  002234  0D02               	mullw	2
  8516  002236  0EB6               	movlw	low _pBDTEntryIn
  8517  002238  24F3               	addwf	prodl,w,c
  8518  00223A  6ED9               	movwf	fsr2l,c
  8519  00223C  0E00               	movlw	high _pBDTEntryIn
  8520  00223E  20F4               	addwfc	prodh,w,c
  8521  002240  6EDA               	movwf	fsr2h,c
  8522  002242  0E00               	movlw	0
  8523  002244  6EDE               	movwf	postinc2,c
  8524  002246  0E00               	movlw	0
  8525  002248  6EDD               	movwf	postdec2,c
  8526                           
  8527                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8528  00224A  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8529  00224C  0D02               	mullw	2
  8530  00224E  0E0E               	movlw	low _pBDTEntryOut
  8531  002250  24F3               	addwf	prodl,w,c
  8532  002252  6ED9               	movwf	fsr2l,c
  8533  002254  0E03               	movlw	high _pBDTEntryOut
  8534  002256  20F4               	addwfc	prodh,w,c
  8535  002258  6EDA               	movwf	fsr2h,c
  8536  00225A  0E00               	movlw	0
  8537  00225C  6EDE               	movwf	postinc2,c
  8538  00225E  0E00               	movlw	0
  8539  002260  6EDD               	movwf	postdec2,c
  8540                           
  8541                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8542  002262  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8543  002264  0D01               	mullw	1
  8544  002266  0ED1               	movlw	low _ep_data_in
  8545  002268  24F3               	addwf	prodl,w,c
  8546  00226A  6ED9               	movwf	fsr2l,c
  8547  00226C  0E02               	movlw	high _ep_data_in
  8548  00226E  20F4               	addwfc	prodh,w,c
  8549  002270  6EDA               	movwf	fsr2h,c
  8550  002272  0E00               	movlw	0
  8551  002274  6EDF               	movwf	indf2,c
  8552                           
  8553                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8554  002276  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8555  002278  0D01               	mullw	1
  8556  00227A  0ECE               	movlw	low _ep_data_out
  8557  00227C  24F3               	addwf	prodl,w,c
  8558  00227E  6ED9               	movwf	fsr2l,c
  8559  002280  0E02               	movlw	high _ep_data_out
  8560  002282  20F4               	addwfc	prodh,w,c
  8561  002284  6EDA               	movwf	fsr2h,c
  8562  002286  0E00               	movlw	0
  8563  002288  6EDF               	movwf	indf2,c
  8564                           
  8565                           ; BSR set to: 0
  8566  00228A  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8567  00228C  D7CE               	goto	l13782
  8568  00228E                     u12760:
  8569                           
  8570                           ; BSR set to: 0
  8571                           ;usb_device.c: 369: }
  8572                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8573                           
  8574                           ; BSR set to: 0
  8575  00228E  0E08               	movlw	8
  8576  002290  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8577  002292  0E04               	movlw	4
  8578  002294  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8579                           
  8580                           ; BSR set to: 0
  8581                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8582  002296  0E16               	movlw	22
  8583  002298  010F               	movlb	15	; () banked
  8584  00229A  6F26               	movwf	38,b	;volatile
  8585                           
  8586                           ; BSR set to: 15
  8587                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8588  00229C  0E04               	movlw	4
  8589  00229E  0104               	movlb	4	; () banked
  8590  0022A0  6F03               	movwf	3,b	;volatile
  8591  0022A2  0E30               	movlw	48
  8592  0022A4  6F02               	movwf	2,b	;volatile
  8593                           
  8594                           ; BSR set to: 4
  8595                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8596  0022A6  0E08               	movlw	8
  8597  0022A8  6F01               	movwf	1,b	;volatile
  8598                           
  8599                           ; BSR set to: 4
  8600                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8601  0022AA  0E04               	movlw	4
  8602  0022AC  6F00               	movwf	0,b	;volatile
  8603                           
  8604                           ; BSR set to: 4
  8605                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8606  0022AE  8F00               	bsf	0,7,b	;volatile
  8607                           
  8608                           ; BSR set to: 4
  8609                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8610  0022B0  0E00               	movlw	0
  8611  0022B2  0100               	movlb	0	; () banked
  8612  0022B4  6FD7               	movwf	_USBActiveConfiguration& (0+255),b
  8613                           
  8614                           ; BSR set to: 0
  8615                           ;usb_device.c: 384: USB1msTickCount = 0;
  8616  0022B6  0E00               	movlw	0
  8617  0022B8  0103               	movlb	3	; () banked
  8618  0022BA  6F18               	movwf	_USB1msTickCount& (0+255),b
  8619  0022BC  0E00               	movlw	0
  8620  0022BE  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8621  0022C0  0E00               	movlw	0
  8622  0022C2  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8623  0022C4  0E00               	movlw	0
  8624  0022C6  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8625                           
  8626                           ; BSR set to: 3
  8627                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8628  0022C8  0E00               	movlw	0
  8629  0022CA  0101               	movlb	1	; () banked
  8630  0022CC  6FE3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8631                           
  8632                           ; BSR set to: 1
  8633                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8634  0022CE  0E00               	movlw	0
  8635  0022D0  0100               	movlb	0	; () banked
  8636  0022D2  6FCE               	movwf	_USBDeviceState& (0+255),b
  8637                           
  8638                           ; BSR set to: 0
  8639  0022D4  0012               	return		;funcret
  8640  0022D6                     __end_of_USBDeviceInit:
  8641                           	opt stack 0
  8642                           tosu	equ	0xFFF
  8643                           tosh	equ	0xFFE
  8644                           tosl	equ	0xFFD
  8645                           pclath	equ	0xFFA
  8646                           tblptru	equ	0xFF8
  8647                           tblptrh	equ	0xFF7
  8648                           tblptrl	equ	0xFF6
  8649                           tablat	equ	0xFF5
  8650                           prodh	equ	0xFF4
  8651                           prodl	equ	0xFF3
  8652                           intcon	equ	0xFF2
  8653                           intcon2	equ	0xFF1
  8654                           intcon3	equ	0xFF0
  8655                           postinc0	equ	0xFEE
  8656                           plusw0	equ	0xFEB
  8657                           wreg	equ	0xFE8
  8658                           postinc1	equ	0xFE6
  8659                           postdec1	equ	0xFE5
  8660                           fsr1h	equ	0xFE2
  8661                           fsr1l	equ	0xFE1
  8662                           indf2	equ	0xFDF
  8663                           postinc2	equ	0xFDE
  8664                           postdec2	equ	0xFDD
  8665                           plusw2	equ	0xFDB
  8666                           fsr2h	equ	0xFDA
  8667                           fsr2l	equ	0xFD9
  8668                           status	equ	0xFD8
  8669                           
  8670 ;; *************** function _USBCtrlEPService *****************
  8671 ;; Defined at:
  8672 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;		None
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;		None
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  1    wreg      void 
  8679 ;; Registers used:
  8680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8688 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8689 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8690 ;;Total ram usage:        1 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; Hardware stack levels required when called:   18
  8693 ;; This function calls:
  8694 ;;		_USBCtrlTrfInHandler
  8695 ;;		_USBCtrlTrfOutHandler
  8696 ;;		_USBCtrlTrfSetupHandler
  8697 ;;		_memcpy
  8698 ;; This function is called by:
  8699 ;;		_USBDeviceTasks
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           	psect	text34
  8704  0048BA                     __ptext34:
  8705                           	opt stack 0
  8706  0048BA                     _USBCtrlEPService:
  8707                           	opt stack 8
  8708                           
  8709                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8710                           
  8711                           ; BSR set to: 0
  8712                           ;incstack = 0
  8713  0048BA  0E2D               	movlw	45
  8714  0048BC  0100               	movlb	0	; () banked
  8715  0048BE  6FCA               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8719  0048C0  C0D6  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8720  0048C4  0EFD               	movlw	253
  8721  0048C6  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8722  0048C8  A4D8               	btfss	status,2,c
  8723  0048CA  D038               	goto	l1771
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;usb_device.c: 2401: {
  8727                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8728  0048CC  C0D6  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8729  0048D0  90D8               	bcf	status,0,c
  8730  0048D2  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8731  0048D4  0E3F               	movlw	63
  8732  0048D6  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8733  0048D8  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8734  0048DA  0D04               	mullw	4
  8735  0048DC  0E00               	movlw	0
  8736  0048DE  24F3               	addwf	prodl,w,c
  8737  0048E0  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8738  0048E2  0E04               	movlw	4
  8739  0048E4  20F4               	addwfc	prodh,w,c
  8740  0048E6  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8744  0048E8  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8745  0048EC  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8749  0048F0  0E04               	movlw	4
  8750  0048F2  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8751                           
  8752                           ; BSR set to: 0
  8753                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8754  0048F4  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8755  0048F8  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8756  0048FC  30DF               	rrcf	223,w,c
  8757  0048FE  32E8               	rrcf	wreg,f,c
  8758  004900  0B0F               	andlw	15
  8759  004902  0A0D               	xorlw	13
  8760  004904  A4D8               	btfss	status,2,c
  8761  004906  D017               	goto	l1772
  8762                           
  8763                           ; BSR set to: 0
  8764                           ;usb_device.c: 2418: {
  8765                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8766  004908  0E30               	movlw	48
  8767  00490A  6F7D               	movwf	memcpy@d1& (0+255),b
  8768  00490C  0E04               	movlw	4
  8769  00490E  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8770  004910  EE20 F002          	lfsr	2,2
  8771  004914  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8772  004916  26D9               	addwf	fsr2l,f,c
  8773  004918  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8774  00491A  22DA               	addwfc	fsr2h,f,c
  8775  00491C  CFDE F07F          	movff	postinc2,memcpy@s1
  8776  004920  CFDD F080          	movff	postdec2,memcpy@s1+1
  8777  004924  0E00               	movlw	0
  8778  004926  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8779  004928  0E08               	movlw	8
  8780  00492A  6F81               	movwf	memcpy@n& (0+255),b
  8781  00492C  EC6F  F02C         	call	_memcpy	;wreg free
  8782                           
  8783                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8784  004930  ECC8  F025         	call	_USBCtrlTrfSetupHandler	;wreg free
  8785                           
  8786                           ;usb_device.c: 2427: }
  8787  004934  0012               	return	
  8788  004936                     l1772:
  8789                           
  8790                           ;usb_device.c: 2428: else
  8791                           ;usb_device.c: 2429: {
  8792                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8793  004936  EC65  F028         	call	_USBCtrlTrfOutHandler	;wreg free
  8794                           
  8795                           ;usb_device.c: 2432: }
  8796                           ;usb_device.c: 2433: }
  8797  00493A  0012               	return	
  8798  00493C                     l1771:
  8799                           
  8800                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8801  00493C  0100               	movlb	0	; () banked
  8802  00493E  51D6               	movf	_USTATcopy& (0+255),w,b
  8803  004940  0BFD               	andlw	253
  8804  004942  0A04               	xorlw	4
  8805  004944  A4D8               	btfss	status,2,c
  8806  004946  0012               	return	
  8807                           
  8808                           ; BSR set to: 0
  8809                           ;usb_device.c: 2435: {
  8810                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8811  004948  ECC7  F01F         	call	_USBCtrlTrfInHandler	;wreg free
  8812  00494C  0012               	return	
  8813  00494E                     __end_of_USBCtrlEPService:
  8814                           	opt stack 0
  8815                           tosu	equ	0xFFF
  8816                           tosh	equ	0xFFE
  8817                           tosl	equ	0xFFD
  8818                           pclath	equ	0xFFA
  8819                           tblptru	equ	0xFF8
  8820                           tblptrh	equ	0xFF7
  8821                           tblptrl	equ	0xFF6
  8822                           tablat	equ	0xFF5
  8823                           prodh	equ	0xFF4
  8824                           prodl	equ	0xFF3
  8825                           intcon	equ	0xFF2
  8826                           intcon2	equ	0xFF1
  8827                           intcon3	equ	0xFF0
  8828                           postinc0	equ	0xFEE
  8829                           plusw0	equ	0xFEB
  8830                           wreg	equ	0xFE8
  8831                           postinc1	equ	0xFE6
  8832                           postdec1	equ	0xFE5
  8833                           fsr1h	equ	0xFE2
  8834                           fsr1l	equ	0xFE1
  8835                           indf2	equ	0xFDF
  8836                           postinc2	equ	0xFDE
  8837                           postdec2	equ	0xFDD
  8838                           plusw2	equ	0xFDB
  8839                           fsr2h	equ	0xFDA
  8840                           fsr2l	equ	0xFD9
  8841                           status	equ	0xFD8
  8842                           
  8843 ;; *************** function _memcpy *****************
  8844 ;; Defined at:
  8845 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;  d1              2   29[BANK0 ] PTR void 
  8848 ;;		 -> SetupPkt(8), 
  8849 ;;  s1              2   31[BANK0 ] PTR const void 
  8850 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8851 ;;  n               2   33[BANK0 ] unsigned int 
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  8854 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8855 ;;  d               2   36[BANK0 ] PTR unsigned char 
  8856 ;;		 -> SetupPkt(8), 
  8857 ;;  tmp             1   35[BANK0 ] unsigned char 
  8858 ;; Return value:  Size  Location     Type
  8859 ;;                  2   29[BANK0 ] PTR void 
  8860 ;; Registers used:
  8861 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8862 ;; Tracked objects:
  8863 ;;		On entry : 0/0
  8864 ;;		On exit  : 0/0
  8865 ;;		Unchanged: 0/0
  8866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8867 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8868 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8870 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8871 ;;Total ram usage:       11 bytes
  8872 ;; Hardware stack levels used:    1
  8873 ;; Hardware stack levels required when called:   11
  8874 ;; This function calls:
  8875 ;;		Nothing
  8876 ;; This function is called by:
  8877 ;;		_USBCtrlEPService
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881                           	psect	text35
  8882  0058DE                     __ptext35:
  8883                           	opt stack 0
  8884  0058DE                     _memcpy:
  8885                           	opt stack 14
  8886                           
  8887                           ;incstack = 0
  8888  0058DE  C07F  F086         	movff	memcpy@s1,memcpy@s
  8889  0058E2  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  8890  0058E6  C07D  F084         	movff	memcpy@d1,memcpy@d
  8891  0058EA  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  8892  0058EE  D011               	goto	l3205
  8893  0058F0                     l13026:
  8894  0058F0  C086  FFD9         	movff	memcpy@s,fsr2l
  8895  0058F4  C087  FFDA         	movff	memcpy@s+1,fsr2h
  8896  0058F8  50DF               	movf	indf2,w,c
  8897  0058FA  0100               	movlb	0	; () banked
  8898  0058FC  6F83               	movwf	memcpy@tmp& (0+255),b
  8899                           
  8900                           ; BSR set to: 0
  8901  0058FE  4B86               	infsnz	memcpy@s& (0+255),f,b
  8902  005900  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  8903                           
  8904                           ; BSR set to: 0
  8905  005902  C084  FFD9         	movff	memcpy@d,fsr2l
  8906  005906  C085  FFDA         	movff	memcpy@d+1,fsr2h
  8907  00590A  C083  FFDF         	movff	memcpy@tmp,indf2
  8908                           
  8909                           ; BSR set to: 0
  8910  00590E  4B84               	infsnz	memcpy@d& (0+255),f,b
  8911  005910  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  8912  005912                     l3205:
  8913                           
  8914                           ; BSR set to: 0
  8915  005912  0100               	movlb	0	; () banked
  8916  005914  0781               	decf	memcpy@n& (0+255),f,b
  8917  005916  A0D8               	btfss	status,0,c
  8918  005918  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8919  00591A  2981               	incf	memcpy@n& (0+255),w,b
  8920  00591C  E1E9               	bnz	l13026
  8921  00591E  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8922  005920  B4D8               	btfsc	status,2,c
  8923  005922  0012               	return	
  8924  005924  D7E5               	goto	l3206
  8925  005926                     __end_of_memcpy:
  8926                           	opt stack 0
  8927                           tosu	equ	0xFFF
  8928                           tosh	equ	0xFFE
  8929                           tosl	equ	0xFFD
  8930                           pclath	equ	0xFFA
  8931                           tblptru	equ	0xFF8
  8932                           tblptrh	equ	0xFF7
  8933                           tblptrl	equ	0xFF6
  8934                           tablat	equ	0xFF5
  8935                           prodh	equ	0xFF4
  8936                           prodl	equ	0xFF3
  8937                           intcon	equ	0xFF2
  8938                           intcon2	equ	0xFF1
  8939                           intcon3	equ	0xFF0
  8940                           postinc0	equ	0xFEE
  8941                           plusw0	equ	0xFEB
  8942                           wreg	equ	0xFE8
  8943                           postinc1	equ	0xFE6
  8944                           postdec1	equ	0xFE5
  8945                           fsr1h	equ	0xFE2
  8946                           fsr1l	equ	0xFE1
  8947                           indf2	equ	0xFDF
  8948                           postinc2	equ	0xFDE
  8949                           postdec2	equ	0xFDD
  8950                           plusw2	equ	0xFDB
  8951                           fsr2h	equ	0xFDA
  8952                           fsr2l	equ	0xFD9
  8953                           status	equ	0xFD8
  8954                           
  8955 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8956 ;; Defined at:
  8957 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;		None
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;		None
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  1    wreg      void 
  8964 ;; Registers used:
  8965 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8975 ;;Total ram usage:        0 bytes
  8976 ;; Hardware stack levels used:    1
  8977 ;; Hardware stack levels required when called:   17
  8978 ;; This function calls:
  8979 ;;		_USBCheckStdRequest
  8980 ;;		_USBCtrlEPServiceComplete
  8981 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8982 ;; This function is called by:
  8983 ;;		_USBCtrlEPService
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           	psect	text36
  8988  004B90                     __ptext36:
  8989                           	opt stack 0
  8990  004B90                     _USBCtrlTrfSetupHandler:
  8991                           	opt stack 8
  8992                           
  8993                           ;usb_device.c: 2488: shortPacketStatus = 0;
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;incstack = 0
  8997  004B90  0E00               	movlw	0
  8998  004B92  0100               	movlb	0	; () banked
  8999  004B94  6FCD               	movwf	_shortPacketStatus& (0+255),b
  9000                           
  9001                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9002  004B96  0E00               	movlw	0
  9003  004B98  6FC9               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9004                           
  9005                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9006  004B9A  0E00               	movlw	0
  9007  004B9C  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9008                           
  9009                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9010  004B9E  0E00               	movlw	0
  9011  004BA0  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9012                           
  9013                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9014  004BA2  0E00               	movlw	0
  9015  004BA4  0101               	movlb	1	; () banked
  9016  004BA6  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9017                           
  9018                           ;usb_device.c: 2493: controlTransferState = 0;
  9019  004BA8  0E00               	movlw	0
  9020  004BAA  0100               	movlb	0	; () banked
  9021  004BAC  6FCC               	movwf	_controlTransferState& (0+255),b
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9025  004BAE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9026  004BB2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9027  004BB6  0E7F               	movlw	127
  9028  004BB8  16DF               	andwf	indf2,f,c
  9029                           
  9030                           ; BSR set to: 0
  9031                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9032  004BBA  0E04               	movlw	4
  9033  004BBC  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9037  004BBE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9038  004BC2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9039  004BC6  0E7F               	movlw	127
  9040  004BC8  16DF               	andwf	indf2,f,c
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9044  004BCA  0E04               	movlw	4
  9045  004BCC  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9049  004BCE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9050  004BD2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9051  004BD6  0E7F               	movlw	127
  9052  004BD8  16DF               	andwf	indf2,f,c
  9053                           
  9054                           ; BSR set to: 0
  9055                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9056  004BDA  0E00               	movlw	0
  9057  004BDC  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9058                           
  9059                           ; BSR set to: 0
  9060                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9061  004BDE  0E00               	movlw	0
  9062  004BE0  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9063  004BE2  0E00               	movlw	0
  9064  004BE4  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9065                           
  9066                           ; BSR set to: 0
  9067                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9068  004BE6  0E00               	movlw	0
  9069  004BE8  0101               	movlb	1	; () banked
  9070  004BEA  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9071                           
  9072                           ; BSR set to: 1
  9073                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9074  004BEC  0E00               	movlw	0
  9075  004BEE  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9076  004BF0  0E00               	movlw	0
  9077  004BF2  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9078                           
  9079                           ; BSR set to: 1
  9080                           ;usb_device.c: 2517: USBCheckStdRequest();
  9081  004BF4  EC89  F01A         	call	_USBCheckStdRequest	;wreg free
  9082                           
  9083                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9084  004BF8  0E00               	movlw	0
  9085  004BFA  0100               	movlb	0	; () banked
  9086  004BFC  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9087  004BFE  0E03               	movlw	3
  9088  004C00  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9089  004C02  0E00               	movlw	0
  9090  004C04  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9091  004C06  0E00               	movlw	0
  9092  004C08  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9093  004C0A  0E00               	movlw	0
  9094  004C0C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9095  004C0E  0E00               	movlw	0
  9096  004C10  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9097  004C12  ECFC  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9098                           
  9099                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9100  004C16  EC38  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9101  004C1A  0012               	return		;funcret
  9102  004C1C                     __end_of_USBCtrlTrfSetupHandler:
  9103                           	opt stack 0
  9104                           tosu	equ	0xFFF
  9105                           tosh	equ	0xFFE
  9106                           tosl	equ	0xFFD
  9107                           pclath	equ	0xFFA
  9108                           tblptru	equ	0xFF8
  9109                           tblptrh	equ	0xFF7
  9110                           tblptrl	equ	0xFF6
  9111                           tablat	equ	0xFF5
  9112                           prodh	equ	0xFF4
  9113                           prodl	equ	0xFF3
  9114                           intcon	equ	0xFF2
  9115                           intcon2	equ	0xFF1
  9116                           intcon3	equ	0xFF0
  9117                           postinc0	equ	0xFEE
  9118                           plusw0	equ	0xFEB
  9119                           wreg	equ	0xFE8
  9120                           postinc1	equ	0xFE6
  9121                           postdec1	equ	0xFE5
  9122                           fsr1h	equ	0xFE2
  9123                           fsr1l	equ	0xFE1
  9124                           indf2	equ	0xFDF
  9125                           postinc2	equ	0xFDE
  9126                           postdec2	equ	0xFDD
  9127                           plusw2	equ	0xFDB
  9128                           fsr2h	equ	0xFDA
  9129                           fsr2l	equ	0xFD9
  9130                           status	equ	0xFD8
  9131                           
  9132 ;; *************** function _USBCtrlEPServiceComplete *****************
  9133 ;; Defined at:
  9134 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;		None
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;		None
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  1    wreg      void 
  9141 ;; Registers used:
  9142 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/0
  9145 ;;		On exit  : 0/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9152 ;;Total ram usage:        0 bytes
  9153 ;; Hardware stack levels used:    1
  9154 ;; Hardware stack levels required when called:   13
  9155 ;; This function calls:
  9156 ;;		_USBCtrlEPAllowDataStage
  9157 ;;		_USBCtrlEPAllowStatusStage
  9158 ;; This function is called by:
  9159 ;;		_USBCtrlTrfSetupHandler
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           	psect	text37
  9164  003070                     __ptext37:
  9165                           	opt stack 0
  9166  003070                     _USBCtrlEPServiceComplete:
  9167                           	opt stack 11
  9168                           
  9169                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9170                           
  9171                           ;incstack = 0
  9172  003070  9865               	bcf	3941,4,c	;volatile
  9173                           
  9174                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9175  003072  0100               	movlb	0	; () banked
  9176  003074  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9177  003076  D03C               	goto	l1681
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;usb_device.c: 1647: {
  9181                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9182  003078  0101               	movlb	1	; () banked
  9183  00307A  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9184  00307C  D00D               	goto	l1682
  9185                           
  9186                           ; BSR set to: 1
  9187                           ;usb_device.c: 1649: {
  9188                           ;usb_device.c: 1650: controlTransferState = 2;
  9189  00307E  0E02               	movlw	2
  9190  003080  0100               	movlb	0	; () banked
  9191  003082  6FCC               	movwf	_controlTransferState& (0+255),b
  9192                           
  9193                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9194  003084  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9195  003086  B4D8               	btfsc	status,2,c
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;usb_device.c: 1662: {
  9199                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9200  003088  EC2C  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9201                           
  9202                           ;usb_device.c: 1664: }
  9203                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9204  00308C  0E00               	movlw	0
  9205  00308E  0100               	movlb	0	; () banked
  9206  003090  6FC7               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9210  003092  0E00               	movlw	0
  9211  003094  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9212                           
  9213                           ;usb_device.c: 1670: }
  9214  003096  0012               	return	
  9215  003098                     l1682:
  9216                           
  9217                           ;usb_device.c: 1671: else
  9218                           ;usb_device.c: 1672: {
  9219                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9220                           
  9221                           ; BSR set to: 0
  9222  003098  0100               	movlb	0	; () banked
  9223  00309A  EE20 F001          	lfsr	2,1
  9224  00309E  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9225  0030A0  26D9               	addwf	fsr2l,f,c
  9226  0030A2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9227  0030A4  22DA               	addwfc	fsr2h,f,c
  9228  0030A6  0E08               	movlw	8
  9229  0030A8  6EDF               	movwf	indf2,c
  9230                           
  9231                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9232  0030AA  EE20 F002          	lfsr	2,2
  9233  0030AE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9234  0030B0  26D9               	addwf	fsr2l,f,c
  9235  0030B2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9236  0030B4  22DA               	addwfc	fsr2h,f,c
  9237  0030B6  0E30               	movlw	48
  9238  0030B8  6EDE               	movwf	postinc2,c
  9239  0030BA  0E04               	movlw	4
  9240  0030BC  6EDD               	movwf	postdec2,c
  9241                           
  9242                           ; BSR set to: 0
  9243                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9244  0030BE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9245  0030C2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9246  0030C6  0E0C               	movlw	12
  9247  0030C8  6EDF               	movwf	indf2,c
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9251  0030CA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9252  0030CE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9253  0030D2  0E00               	movlw	0
  9254  0030D4  8EDB               	bsf	plusw2,7,c
  9255                           
  9256                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9257  0030D6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9258  0030DA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9259  0030DE  0E04               	movlw	4
  9260  0030E0  6EDF               	movwf	indf2,c
  9261                           
  9262                           ; BSR set to: 0
  9263                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9264  0030E2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9265  0030E6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9266  0030EA  0E00               	movlw	0
  9267  0030EC  8EDB               	bsf	plusw2,7,c
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;usb_device.c: 1683: }
  9271                           ;usb_device.c: 1684: }
  9272  0030EE  0012               	return	
  9273  0030F0                     l1681:
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;usb_device.c: 1685: else
  9277                           ;usb_device.c: 1686: {
  9278                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9279  0030F0  0104               	movlb	4	; () banked
  9280  0030F2  AF30               	btfss	48,7,b	;volatile
  9281  0030F4  D012               	goto	l1686
  9282                           
  9283                           ; BSR set to: 4
  9284                           ;usb_device.c: 1688: {
  9285                           ;usb_device.c: 1689: controlTransferState = 1;
  9286  0030F6  0E01               	movlw	1
  9287  0030F8  0100               	movlb	0	; () banked
  9288  0030FA  6FCC               	movwf	_controlTransferState& (0+255),b
  9289                           
  9290                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9291  0030FC  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9292  0030FE  B4D8               	btfsc	status,2,c
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;usb_device.c: 1704: {
  9296                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9297  003100  EC2C  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9298                           
  9299                           ;usb_device.c: 1706: }
  9300                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9301  003104  0E00               	movlw	0
  9302  003106  0100               	movlb	0	; () banked
  9303  003108  6FC7               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  9304                           
  9305                           ; BSR set to: 0
  9306                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9307  00310A  0E00               	movlw	0
  9308  00310C  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9309                           
  9310                           ; BSR set to: 0
  9311                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9312  00310E  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9313  003110  A4D8               	btfss	status,2,c
  9314  003112  0012               	return	
  9315                           
  9316                           ; BSR set to: 0
  9317                           ;usb_device.c: 1731: {
  9318                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9319  003114  EC09  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9320                           
  9321                           ;usb_device.c: 1733: }
  9322                           ;usb_device.c: 1734: }
  9323  003118  0012               	return	
  9324  00311A                     l1686:
  9325                           
  9326                           ;usb_device.c: 1735: else
  9327                           ;usb_device.c: 1736: {
  9328                           ;usb_device.c: 1747: controlTransferState = 2;
  9329  00311A  0E02               	movlw	2
  9330  00311C  0100               	movlb	0	; () banked
  9331  00311E  6FCC               	movwf	_controlTransferState& (0+255),b
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9335  003120  EE20 F001          	lfsr	2,1
  9336  003124  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9337  003126  26D9               	addwf	fsr2l,f,c
  9338  003128  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9339  00312A  22DA               	addwfc	fsr2h,f,c
  9340  00312C  0E08               	movlw	8
  9341  00312E  6EDF               	movwf	indf2,c
  9342                           
  9343                           ; BSR set to: 0
  9344                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9345  003130  EE20 F002          	lfsr	2,2
  9346  003134  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9347  003136  26D9               	addwf	fsr2l,f,c
  9348  003138  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9349  00313A  22DA               	addwfc	fsr2h,f,c
  9350  00313C  0E30               	movlw	48
  9351  00313E  6EDE               	movwf	postinc2,c
  9352  003140  0E04               	movlw	4
  9353  003142  6EDD               	movwf	postdec2,c
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9357  003144  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9358  003148  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9359  00314C  0E04               	movlw	4
  9360  00314E  6EDF               	movwf	indf2,c
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9364  003150  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9365  003154  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9366  003158  0E00               	movlw	0
  9367  00315A  8EDB               	bsf	plusw2,7,c
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9371  00315C  0E00               	movlw	0
  9372  00315E  6FC7               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9376  003160  0E00               	movlw	0
  9377  003162  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9378                           
  9379                           ; BSR set to: 0
  9380                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9381  003164  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9382  003166  A4D8               	btfss	status,2,c
  9383  003168  0012               	return	
  9384                           
  9385                           ; BSR set to: 0
  9386                           ;usb_device.c: 1759: {
  9387                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9388  00316A  EC09  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9389  00316E  0012               	return	
  9390  003170                     __end_of_USBCtrlEPServiceComplete:
  9391                           	opt stack 0
  9392                           tosu	equ	0xFFF
  9393                           tosh	equ	0xFFE
  9394                           tosl	equ	0xFFD
  9395                           pclath	equ	0xFFA
  9396                           tblptru	equ	0xFF8
  9397                           tblptrh	equ	0xFF7
  9398                           tblptrl	equ	0xFF6
  9399                           tablat	equ	0xFF5
  9400                           prodh	equ	0xFF4
  9401                           prodl	equ	0xFF3
  9402                           intcon	equ	0xFF2
  9403                           intcon2	equ	0xFF1
  9404                           intcon3	equ	0xFF0
  9405                           postinc0	equ	0xFEE
  9406                           plusw0	equ	0xFEB
  9407                           wreg	equ	0xFE8
  9408                           postinc1	equ	0xFE6
  9409                           postdec1	equ	0xFE5
  9410                           fsr1h	equ	0xFE2
  9411                           fsr1l	equ	0xFE1
  9412                           indf2	equ	0xFDF
  9413                           postinc2	equ	0xFDE
  9414                           postdec2	equ	0xFDD
  9415                           plusw2	equ	0xFDB
  9416                           fsr2h	equ	0xFDA
  9417                           fsr2l	equ	0xFD9
  9418                           status	equ	0xFD8
  9419                           
  9420 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9421 ;; Defined at:
  9422 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9423 ;; Parameters:    Size  Location     Type
  9424 ;;		None
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;		None
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  1    wreg      void 
  9429 ;; Registers used:
  9430 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9431 ;; Tracked objects:
  9432 ;;		On entry : 0/0
  9433 ;;		On exit  : 0/0
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9440 ;;Total ram usage:        0 bytes
  9441 ;; Hardware stack levels used:    1
  9442 ;; Hardware stack levels required when called:   12
  9443 ;; This function calls:
  9444 ;;		_USBCtrlTrfTxService
  9445 ;; This function is called by:
  9446 ;;		_USBCtrlEPServiceComplete
  9447 ;; This function uses a non-reentrant model
  9448 ;;
  9449                           
  9450                           	psect	text38
  9451  004658                     __ptext38:
  9452                           	opt stack 0
  9453  004658                     _USBCtrlEPAllowDataStage:
  9454                           	opt stack 11
  9455                           
  9456                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9457                           
  9458                           ;incstack = 0
  9459  004658  0E00               	movlw	0
  9460  00465A  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9461                           
  9462                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9463  00465C  0E00               	movlw	0
  9464  00465E  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9465                           
  9466                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9467  004660  0E02               	movlw	2
  9468  004662  0100               	movlb	0	; () banked
  9469  004664  19CC               	xorwf	_controlTransferState& (0+255),w,b
  9470  004666  A4D8               	btfss	status,2,c
  9471  004668  D01F               	goto	l1670
  9472                           
  9473                           ; BSR set to: 0
  9474                           ;usb_device.c: 1512: {
  9475                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9476  00466A  EE20 F001          	lfsr	2,1
  9477  00466E  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9478  004670  26D9               	addwf	fsr2l,f,c
  9479  004672  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9480  004674  22DA               	addwfc	fsr2h,f,c
  9481  004676  0E08               	movlw	8
  9482  004678  6EDF               	movwf	indf2,c
  9483                           
  9484                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9485  00467A  EE20 F002          	lfsr	2,2
  9486  00467E  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9487  004680  26D9               	addwf	fsr2l,f,c
  9488  004682  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9489  004684  22DA               	addwfc	fsr2h,f,c
  9490  004686  0E38               	movlw	56
  9491  004688  6EDE               	movwf	postinc2,c
  9492  00468A  0E04               	movlw	4
  9493  00468C  6EDD               	movwf	postdec2,c
  9494                           
  9495                           ; BSR set to: 0
  9496                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9497  00468E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9498  004692  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9499  004696  0E48               	movlw	72
  9500  004698  6EDF               	movwf	indf2,c
  9501                           
  9502                           ; BSR set to: 0
  9503                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9504  00469A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9505  00469E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9506  0046A2  0E00               	movlw	0
  9507  0046A4  8EDB               	bsf	plusw2,7,c
  9508                           
  9509                           ;usb_device.c: 1518: }
  9510  0046A6  0012               	return	
  9511  0046A8                     l1670:
  9512                           
  9513                           ; BSR set to: 0
  9514                           ;usb_device.c: 1519: else
  9515                           ;usb_device.c: 1520: {
  9516                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9517                           
  9518                           ; BSR set to: 0
  9519  0046A8  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9520  0046AA  0104               	movlb	4	; () banked
  9521  0046AC  5D36               	subwf	54,w,b	;volatile
  9522  0046AE  0100               	movlb	0	; () banked
  9523  0046B0  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9524  0046B2  0104               	movlb	4	; () banked
  9525  0046B4  5937               	subwfb	55,w,b	;volatile
  9526  0046B6  B0D8               	btfsc	status,0,c
  9527  0046B8  D004               	goto	l1672
  9528                           
  9529                           ; BSR set to: 4
  9530                           ;usb_device.c: 1524: {
  9531                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9532  0046BA  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9533  0046BE  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9534  0046C2                     l1672:
  9535                           
  9536                           ; BSR set to: 4
  9537                           ;usb_device.c: 1526: }
  9538                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9539                           
  9540                           ; BSR set to: 4
  9541  0046C2  ECFB  F01A         	call	_USBCtrlTrfTxService	;wreg free
  9542                           
  9543                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9544  0046C6  0100               	movlb	0	; () banked
  9545  0046C8  EE20 F002          	lfsr	2,2
  9546  0046CC  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9547  0046CE  26D9               	addwf	fsr2l,f,c
  9548  0046D0  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9549  0046D2  22DA               	addwfc	fsr2h,f,c
  9550  0046D4  0E38               	movlw	56
  9551  0046D6  6EDE               	movwf	postinc2,c
  9552  0046D8  0E04               	movlw	4
  9553  0046DA  6EDD               	movwf	postdec2,c
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9557  0046DC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9558  0046E0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9559  0046E4  0E48               	movlw	72
  9560  0046E6  6EDF               	movwf	indf2,c
  9561                           
  9562                           ; BSR set to: 0
  9563                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9564  0046E8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9565  0046EC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9566  0046F0  0E00               	movlw	0
  9567  0046F2  8EDB               	bsf	plusw2,7,c
  9568  0046F4  0012               	return	
  9569  0046F6                     __end_of_USBCtrlEPAllowDataStage:
  9570                           	opt stack 0
  9571                           tosu	equ	0xFFF
  9572                           tosh	equ	0xFFE
  9573                           tosl	equ	0xFFD
  9574                           pclath	equ	0xFFA
  9575                           tblptru	equ	0xFF8
  9576                           tblptrh	equ	0xFF7
  9577                           tblptrl	equ	0xFF6
  9578                           tablat	equ	0xFF5
  9579                           prodh	equ	0xFF4
  9580                           prodl	equ	0xFF3
  9581                           intcon	equ	0xFF2
  9582                           intcon2	equ	0xFF1
  9583                           intcon3	equ	0xFF0
  9584                           postinc0	equ	0xFEE
  9585                           plusw0	equ	0xFEB
  9586                           wreg	equ	0xFE8
  9587                           postinc1	equ	0xFE6
  9588                           postdec1	equ	0xFE5
  9589                           fsr1h	equ	0xFE2
  9590                           fsr1l	equ	0xFE1
  9591                           indf2	equ	0xFDF
  9592                           postinc2	equ	0xFDE
  9593                           postdec2	equ	0xFDD
  9594                           plusw2	equ	0xFDB
  9595                           fsr2h	equ	0xFDA
  9596                           fsr2l	equ	0xFD9
  9597                           status	equ	0xFD8
  9598                           
  9599 ;; *************** function _USBCheckStdRequest *****************
  9600 ;; Defined at:
  9601 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;		None
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;		None
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  1    wreg      void 
  9608 ;; Registers used:
  9609 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9619 ;;Total ram usage:        0 bytes
  9620 ;; Hardware stack levels used:    1
  9621 ;; Hardware stack levels required when called:   16
  9622 ;; This function calls:
  9623 ;;		_USBStdFeatureReqHandler
  9624 ;;		_USBStdGetDscHandler
  9625 ;;		_USBStdGetStatusHandler
  9626 ;;		_USBStdSetCfgHandler
  9627 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9628 ;; This function is called by:
  9629 ;;		_USBCtrlTrfSetupHandler
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           	psect	text39
  9634  003512                     __ptext39:
  9635                           	opt stack 0
  9636  003512                     _USBCheckStdRequest:
  9637                           	opt stack 8
  9638                           
  9639                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;incstack = 0
  9643  003512  0104               	movlb	4	; () banked
  9644  003514  3930               	swapf	48,w,b	;volatile
  9645  003516  32E8               	rrcf	wreg,f,c
  9646  003518  0B03               	andlw	3
  9647  00351A  0900               	iorlw	0
  9648  00351C  A4D8               	btfss	status,2,c
  9649  00351E  0012               	return	
  9650  003520  D048               	goto	l1805
  9651  003522                     l1806:
  9652                           
  9653                           ; BSR set to: 4
  9654                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9655  003522  0100               	movlb	0	; () banked
  9656  003524  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9660  003526  0E08               	movlw	8
  9661  003528  6FCE               	movwf	_USBDeviceState& (0+255),b
  9662                           
  9663                           ;usb_device.c: 2713: break;
  9664  00352A  0012               	return	
  9665  00352C                     
  9666                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9667                           
  9668                           ; BSR set to: 0
  9669  00352C  EC7C  F016         	call	_USBStdGetDscHandler	;wreg free
  9670                           
  9671                           ;usb_device.c: 2716: break;
  9672  003530  0012               	return	
  9673  003532                     
  9674                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9675  003532  ECA3  F019         	call	_USBStdSetCfgHandler	;wreg free
  9676                           
  9677                           ;usb_device.c: 2719: break;
  9678  003536  0012               	return	
  9679  003538                     
  9680                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9681  003538  0ED7               	movlw	low _USBActiveConfiguration
  9682  00353A  0100               	movlb	0	; () banked
  9683  00353C  6FB0               	movwf	_inPipes& (0+255),b
  9684  00353E  0E00               	movlw	high _USBActiveConfiguration
  9685  003540  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9686                           
  9687                           ; BSR set to: 0
  9688                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9689  003542  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9693  003544  0E01               	movlw	1
  9694  003546  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9695                           
  9696                           ; BSR set to: 0
  9697                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9698  003548  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9699                           
  9700                           ;usb_device.c: 2725: break;
  9701  00354A  0012               	return	
  9702  00354C                     
  9703                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9704                           
  9705                           ; BSR set to: 0
  9706  00354C  EC87  F020         	call	_USBStdGetStatusHandler	;wreg free
  9707                           
  9708                           ;usb_device.c: 2728: break;
  9709  003550  0012               	return	
  9710  003552                     
  9711                           ;usb_device.c: 2730: case 3:
  9712                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9713  003552  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9714                           
  9715                           ;usb_device.c: 2732: break;
  9716  003556  0012               	return	
  9717  003558                     
  9718                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9719  003558  0104               	movlb	4	; () banked
  9720  00355A  5134               	movf	52,w,b	;volatile
  9721  00355C  0D01               	mullw	1
  9722  00355E  0EF1               	movlw	low _USBAlternateInterface
  9723  003560  24F3               	addwf	prodl,w,c
  9724  003562  0100               	movlb	0	; () banked
  9725  003564  6FB0               	movwf	_inPipes& (0+255),b
  9726  003566  0E02               	movlw	high _USBAlternateInterface
  9727  003568  20F4               	addwfc	prodh,w,c
  9728  00356A  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9729                           
  9730                           ; BSR set to: 0
  9731                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9732  00356C  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9736  00356E  0E01               	movlw	1
  9737  003570  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9738                           
  9739                           ; BSR set to: 0
  9740                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9741  003572  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9742                           
  9743                           ;usb_device.c: 2738: break;
  9744  003574  0012               	return	
  9745  003576                     l1815:
  9746                           
  9747                           ; BSR set to: 4
  9748                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9749  003576  0100               	movlb	0	; () banked
  9750  003578  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9751                           
  9752                           ; BSR set to: 0
  9753                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9754  00357A  0104               	movlb	4	; () banked
  9755  00357C  5134               	movf	52,w,b	;volatile
  9756  00357E  0D01               	mullw	1
  9757  003580  0EF1               	movlw	low _USBAlternateInterface
  9758  003582  24F3               	addwf	prodl,w,c
  9759  003584  6ED9               	movwf	fsr2l,c
  9760  003586  0E02               	movlw	high _USBAlternateInterface
  9761  003588  20F4               	addwfc	prodh,w,c
  9762  00358A  6EDA               	movwf	fsr2h,c
  9763  00358C  C432 FFDF          	movff	1074,indf2	;volatile
  9764                           
  9765                           ;usb_device.c: 2742: break;
  9766  003590  0012               	return	
  9767  003592                     
  9768                           ; BSR set to: 4
  9769                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9770                           
  9771                           ; BSR set to: 4
  9772  003592  0E00               	movlw	0
  9773  003594  0100               	movlb	0	; () banked
  9774  003596  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9775  003598  0E02               	movlw	2
  9776  00359A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9777  00359C  0E00               	movlw	0
  9778  00359E  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9779  0035A0  0E00               	movlw	0
  9780  0035A2  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9781  0035A4  0E00               	movlw	0
  9782  0035A6  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9783  0035A8  0E00               	movlw	0
  9784  0035AA  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9785  0035AC  ECFC  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9786                           
  9787                           ;usb_device.c: 2749: }
  9788                           
  9789                           ;usb_device.c: 2748: break;
  9790                           
  9791                           ;usb_device.c: 2747: default:
  9792                           
  9793                           ;usb_device.c: 2746: case 12:
  9794                           
  9795                           ;usb_device.c: 2745: break;
  9796  0035B0  0012               	return	
  9797  0035B2                     l1805:
  9798  0035B2  0104               	movlb	4	; () banked
  9799  0035B4  5131               	movf	49,w,b	;volatile
  9800                           
  9801                           ; Switch size 1, requested type "space"
  9802                           ; Number of cases is 11, Range of values is 0 to 12
  9803                           ; switch strategies available:
  9804                           ; Name         Instructions Cycles
  9805                           ; simple_byte           34    18 (average)
  9806                           ;	Chosen strategy is simple_byte
  9807  0035B6  0A00               	xorlw	0	; case 0
  9808  0035B8  B4D8               	btfsc	status,2,c
  9809  0035BA  D7C8               	goto	l1811
  9810  0035BC  0A01               	xorlw	1	; case 1
  9811  0035BE  B4D8               	btfsc	status,2,c
  9812  0035C0  D7C8               	goto	l1812
  9813  0035C2  0A02               	xorlw	2	; case 3
  9814  0035C4  B4D8               	btfsc	status,2,c
  9815  0035C6  D7C5               	goto	l1812
  9816  0035C8  0A06               	xorlw	6	; case 5
  9817  0035CA  B4D8               	btfsc	status,2,c
  9818  0035CC  D7AA               	goto	l1806
  9819  0035CE  0A03               	xorlw	3	; case 6
  9820  0035D0  B4D8               	btfsc	status,2,c
  9821  0035D2  D7AC               	goto	l1808
  9822  0035D4  0A01               	xorlw	1	; case 7
  9823  0035D6  B4D8               	btfsc	status,2,c
  9824  0035D8  D7DC               	goto	l1816
  9825  0035DA  0A0F               	xorlw	15	; case 8
  9826  0035DC  B4D8               	btfsc	status,2,c
  9827  0035DE  D7AC               	goto	l1810
  9828  0035E0  0A01               	xorlw	1	; case 9
  9829  0035E2  B4D8               	btfsc	status,2,c
  9830  0035E4  D7A6               	goto	l1809
  9831  0035E6  0A03               	xorlw	3	; case 10
  9832  0035E8  B4D8               	btfsc	status,2,c
  9833  0035EA  D7B6               	goto	l1814
  9834  0035EC  0A01               	xorlw	1	; case 11
  9835  0035EE  B4D8               	btfsc	status,2,c
  9836  0035F0  D7C2               	goto	l1815
  9837  0035F2  0A07               	xorlw	7	; case 12
  9838  0035F4  0012               	return	
  9839  0035F6                     __end_of_USBCheckStdRequest:
  9840                           	opt stack 0
  9841                           tosu	equ	0xFFF
  9842                           tosh	equ	0xFFE
  9843                           tosl	equ	0xFFD
  9844                           pclath	equ	0xFFA
  9845                           tblptru	equ	0xFF8
  9846                           tblptrh	equ	0xFF7
  9847                           tblptrl	equ	0xFF6
  9848                           tablat	equ	0xFF5
  9849                           prodh	equ	0xFF4
  9850                           prodl	equ	0xFF3
  9851                           intcon	equ	0xFF2
  9852                           intcon2	equ	0xFF1
  9853                           intcon3	equ	0xFF0
  9854                           postinc0	equ	0xFEE
  9855                           plusw0	equ	0xFEB
  9856                           wreg	equ	0xFE8
  9857                           postinc1	equ	0xFE6
  9858                           postdec1	equ	0xFE5
  9859                           fsr1h	equ	0xFE2
  9860                           fsr1l	equ	0xFE1
  9861                           indf2	equ	0xFDF
  9862                           postinc2	equ	0xFDE
  9863                           postdec2	equ	0xFDD
  9864                           plusw2	equ	0xFDB
  9865                           fsr2h	equ	0xFDA
  9866                           fsr2l	equ	0xFD9
  9867                           status	equ	0xFD8
  9868                           
  9869 ;; *************** function _USBStdSetCfgHandler *****************
  9870 ;; Defined at:
  9871 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;		None
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;  i               1   49[BANK0 ] unsigned char 
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  1    wreg      void 
  9878 ;; Registers used:
  9879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9886 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9888 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9889 ;;Total ram usage:        1 bytes
  9890 ;; Hardware stack levels used:    1
  9891 ;; Hardware stack levels required when called:   15
  9892 ;; This function calls:
  9893 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9894 ;;		_memset
  9895 ;; This function is called by:
  9896 ;;		_USBCheckStdRequest
  9897 ;; This function uses a non-reentrant model
  9898 ;;
  9899                           
  9900                           	psect	text40
  9901  003346                     __ptext40:
  9902                           	opt stack 0
  9903  003346                     _USBStdSetCfgHandler:
  9904                           	opt stack 8
  9905                           
  9906                           ;usb_device.c: 1988: uint8_t i;
  9907                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9908                           
  9909                           ;incstack = 0
  9910  003346  0100               	movlb	0	; () banked
  9911  003348  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9915  00334A  0E27               	movlw	39
  9916  00334C  6F7D               	movwf	memset@p1& (0+255),b
  9917  00334E  0E0F               	movlw	15
  9918  003350  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9919  003352  0E00               	movlw	0
  9920  003354  6F80               	movwf	(memset@c+1)& (0+255),b
  9921  003356  0E00               	movlw	0
  9922  003358  6F7F               	movwf	memset@c& (0+255),b
  9923  00335A  0E00               	movlw	0
  9924  00335C  6F82               	movwf	(memset@n+1)& (0+255),b
  9925  00335E  0E02               	movlw	2
  9926  003360  6F81               	movwf	memset@n& (0+255),b
  9927  003362  EC56  F02F         	call	_memset	;wreg free
  9928                           
  9929                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9930  003366  0E00               	movlw	0
  9931  003368  0100               	movlb	0	; () banked
  9932  00336A  6F7D               	movwf	memset@p1& (0+255),b
  9933  00336C  0E04               	movlw	4
  9934  00336E  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9935  003370  0E00               	movlw	0
  9936  003372  6F80               	movwf	(memset@c+1)& (0+255),b
  9937  003374  0E00               	movlw	0
  9938  003376  6F7F               	movwf	memset@c& (0+255),b
  9939  003378  0E00               	movlw	0
  9940  00337A  6F82               	movwf	(memset@n+1)& (0+255),b
  9941  00337C  0E30               	movlw	48
  9942  00337E  6F81               	movwf	memset@n& (0+255),b
  9943  003380  EC56  F02F         	call	_memset	;wreg free
  9944                           
  9945                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9946  003384  8C65               	bsf	3941,6,c	;volatile
  9947                           
  9948                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9949  003386  0E00               	movlw	0
  9950  003388  0100               	movlb	0	; () banked
  9951  00338A  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
  9952  00338C                     l12374:
  9953                           
  9954                           ; BSR set to: 0
  9955  00338C  0E02               	movlw	2
  9956  00338E  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  9957  003390  D001               	goto	l1722
  9958  003392  D016               	goto	u10840
  9959  003394                     l1722:
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;usb_device.c: 2006: {
  9963                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  9964                           
  9965                           ; BSR set to: 0
  9966  003394  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9967  003396  0D01               	mullw	1
  9968  003398  0ED1               	movlw	low _ep_data_in
  9969  00339A  24F3               	addwf	prodl,w,c
  9970  00339C  6ED9               	movwf	fsr2l,c
  9971  00339E  0E02               	movlw	high _ep_data_in
  9972  0033A0  20F4               	addwfc	prodh,w,c
  9973  0033A2  6EDA               	movwf	fsr2h,c
  9974  0033A4  0E00               	movlw	0
  9975  0033A6  6EDF               	movwf	indf2,c
  9976                           
  9977                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  9978  0033A8  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9979  0033AA  0D01               	mullw	1
  9980  0033AC  0ECE               	movlw	low _ep_data_out
  9981  0033AE  24F3               	addwf	prodl,w,c
  9982  0033B0  6ED9               	movwf	fsr2l,c
  9983  0033B2  0E02               	movlw	high _ep_data_out
  9984  0033B4  20F4               	addwfc	prodh,w,c
  9985  0033B6  6EDA               	movwf	fsr2h,c
  9986  0033B8  0E00               	movlw	0
  9987  0033BA  6EDF               	movwf	indf2,c
  9988                           
  9989                           ; BSR set to: 0
  9990  0033BC  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  9991  0033BE  D7E6               	goto	l12374
  9992  0033C0                     u10840:
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;usb_device.c: 2009: }
  9996                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  9997                           
  9998                           ; BSR set to: 0
  9999  0033C0  0EF1               	movlw	low _USBAlternateInterface
 10000  0033C2  6F7D               	movwf	memset@p1& (0+255),b
 10001  0033C4  0E02               	movlw	high _USBAlternateInterface
 10002  0033C6  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10003  0033C8  0E00               	movlw	0
 10004  0033CA  6F80               	movwf	(memset@c+1)& (0+255),b
 10005  0033CC  0E00               	movlw	0
 10006  0033CE  6F7F               	movwf	memset@c& (0+255),b
 10007  0033D0  0E00               	movlw	0
 10008  0033D2  6F82               	movwf	(memset@n+1)& (0+255),b
 10009  0033D4  0E02               	movlw	2
 10010  0033D6  6F81               	movwf	memset@n& (0+255),b
 10011  0033D8  EC56  F02F         	call	_memset	;wreg free
 10012                           
 10013                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10014  0033DC  9C65               	bcf	3941,6,c	;volatile
 10015                           
 10016                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10017  0033DE  0E08               	movlw	8
 10018  0033E0  0100               	movlb	0	; () banked
 10019  0033E2  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10020  0033E4  0E04               	movlw	4
 10021  0033E6  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10025  0033E8  0E00               	movlw	0
 10026  0033EA  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10027  0033EC  0E04               	movlw	4
 10028  0033EE  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10032  0033F0  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10033  0033F4  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10037  0033F8  C432 F0D7          	movff	1074,_USBActiveConfiguration	;volatile
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10041  0033FC  51D7               	movf	_USBActiveConfiguration& (0+255),w,b
 10042  0033FE  A4D8               	btfss	status,2,c
 10043  003400  D003               	goto	l1724
 10044                           
 10045                           ; BSR set to: 0
 10046                           ;usb_device.c: 2028: {
 10047                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10048  003402  0E10               	movlw	16
 10049  003404  6FCE               	movwf	_USBDeviceState& (0+255),b
 10050                           
 10051                           ;usb_device.c: 2031: }
 10052  003406  0012               	return	
 10053  003408                     l1724:
 10054                           
 10055                           ; BSR set to: 0
 10056                           ;usb_device.c: 2032: else
 10057                           ;usb_device.c: 2033: {
 10058                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10059                           
 10060                           ; BSR set to: 0
 10061  003408  0E00               	movlw	0
 10062  00340A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10063  00340C  0E01               	movlw	1
 10064  00340E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10065  003410  0ED7               	movlw	low _USBActiveConfiguration
 10066  003412  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10067  003414  0E00               	movlw	high _USBActiveConfiguration
 10068  003416  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10069  003418  0E00               	movlw	0
 10070  00341A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10071  00341C  0E01               	movlw	1
 10072  00341E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10073  003420  ECFC  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10074                           
 10075                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10076  003424  0E20               	movlw	32
 10077  003426  0100               	movlb	0	; () banked
 10078  003428  6FCE               	movwf	_USBDeviceState& (0+255),b
 10079  00342A  0012               	return	
 10080  00342C                     __end_of_USBStdSetCfgHandler:
 10081                           	opt stack 0
 10082                           tosu	equ	0xFFF
 10083                           tosh	equ	0xFFE
 10084                           tosl	equ	0xFFD
 10085                           pclath	equ	0xFFA
 10086                           tblptru	equ	0xFF8
 10087                           tblptrh	equ	0xFF7
 10088                           tblptrl	equ	0xFF6
 10089                           tablat	equ	0xFF5
 10090                           prodh	equ	0xFF4
 10091                           prodl	equ	0xFF3
 10092                           intcon	equ	0xFF2
 10093                           intcon2	equ	0xFF1
 10094                           intcon3	equ	0xFF0
 10095                           postinc0	equ	0xFEE
 10096                           plusw0	equ	0xFEB
 10097                           wreg	equ	0xFE8
 10098                           postinc1	equ	0xFE6
 10099                           postdec1	equ	0xFE5
 10100                           fsr1h	equ	0xFE2
 10101                           fsr1l	equ	0xFE1
 10102                           indf2	equ	0xFDF
 10103                           postinc2	equ	0xFDE
 10104                           postdec2	equ	0xFDD
 10105                           plusw2	equ	0xFDB
 10106                           fsr2h	equ	0xFDA
 10107                           fsr2l	equ	0xFD9
 10108                           status	equ	0xFD8
 10109                           
 10110 ;; *************** function _USBStdGetStatusHandler *****************
 10111 ;; Defined at:
 10112 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;		None
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10117 ;;		 -> NULL(0), BDT(48), 
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  1    wreg      void 
 10120 ;; Registers used:
 10121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10128 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10130 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10131 ;;Total ram usage:        3 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; Hardware stack levels required when called:   11
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_USBCheckStdRequest
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           	psect	text41
 10142  00410E                     __ptext41:
 10143                           	opt stack 0
 10144  00410E                     _USBStdGetStatusHandler:
 10145                           	opt stack 12
 10146                           
 10147                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;incstack = 0
 10151  00410E  0E00               	movlw	0
 10152  004110  0104               	movlb	4	; () banked
 10153  004112  6F38               	movwf	56,b	;volatile
 10154                           
 10155                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10156  004114  0E00               	movlw	0
 10157  004116  6F39               	movwf	57,b	;volatile
 10158                           
 10159                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10160  004118  D03D               	goto	l1743
 10161  00411A                     l1744:
 10162                           
 10163                           ; BSR set to: 4
 10164                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10165  00411A  0100               	movlb	0	; () banked
 10166  00411C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10167                           
 10168                           ;usb_device.c: 2163: }
 10169                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10170                           
 10171                           ; BSR set to: 4
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;usb_device.c: 2161: {
 10175                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10176                           
 10177                           ;usb_device.c: 2160: if(0 == 1)
 10178  00411E  0101               	movlb	1	; () banked
 10179  004120  05E6               	decf	_RemoteWakeup& (0+255),w,b
 10180  004122  A4D8               	btfss	status,2,c
 10181  004124  D042               	goto	l1747
 10182                           
 10183                           ; BSR set to: 1
 10184                           ;usb_device.c: 2166: {
 10185                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10186  004126  0104               	movlb	4	; () banked
 10187  004128  8338               	bsf	56,1,b	;volatile
 10188                           
 10189                           ; BSR set to: 4
 10190                           ;usb_device.c: 2168: }
 10191                           ;usb_device.c: 2169: break;
 10192  00412A  D03F               	goto	l1747
 10193  00412C                     l1748:
 10194                           
 10195                           ; BSR set to: 4
 10196                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10197  00412C  0100               	movlb	0	; () banked
 10198  00412E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10199                           
 10200                           ;usb_device.c: 2172: break;
 10201  004130  D03C               	goto	l1747
 10202  004132                     l1749:
 10203                           
 10204                           ; BSR set to: 4
 10205                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10206  004132  0100               	movlb	0	; () banked
 10207  004134  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10208                           
 10209                           ;usb_device.c: 2178: {
 10210                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10211                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10212  004136  0104               	movlb	4	; () banked
 10213  004138  BF34               	btfsc	52,7,b	;volatile
 10214  00413A  D00B               	goto	l1750
 10215                           
 10216                           ; BSR set to: 4
 10217                           ;usb_device.c: 2182: {
 10218                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10219  00413C  5134               	movf	52,w,b	;volatile
 10220  00413E  0B0F               	andlw	15
 10221  004140  0100               	movlb	0	; () banked
 10222  004142  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10223  004144  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10224  004146  0D02               	mullw	2
 10225  004148  0E0E               	movlw	low _pBDTEntryOut
 10226  00414A  24F3               	addwf	prodl,w,c
 10227  00414C  6ED9               	movwf	fsr2l,c
 10228  00414E  0E03               	movlw	high _pBDTEntryOut
 10229  004150  D00B               	goto	L4
 10230  004152                     l1750:
 10231                           
 10232                           ;usb_device.c: 2185: else
 10233                           ;usb_device.c: 2186: {
 10234                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10235                           
 10236                           ; BSR set to: 0
 10237  004152  0104               	movlb	4	; () banked
 10238  004154  5134               	movf	52,w,b	;volatile
 10239  004156  0B0F               	andlw	15
 10240  004158  0100               	movlb	0	; () banked
 10241  00415A  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10242  00415C  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10243  00415E  0D02               	mullw	2
 10244  004160  0EB6               	movlw	low _pBDTEntryIn
 10245  004162  24F3               	addwf	prodl,w,c
 10246  004164  6ED9               	movwf	fsr2l,c
 10247  004166  0E00               	movlw	high _pBDTEntryIn
 10248  004168                     L4:
 10249  004168  20F4               	addwfc	prodh,w,c
 10250  00416A  6EDA               	movwf	fsr2h,c
 10251  00416C  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10252  004170  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10253                           
 10254                           ; BSR set to: 0
 10255                           ;usb_device.c: 2188: }
 10256                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10257                           
 10258                           ; BSR set to: 0
 10259  004174  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10260  004178  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10261  00417C  AEDF               	btfss	indf2,7,c
 10262  00417E  D015               	goto	l1747
 10263                           
 10264                           ; BSR set to: 0
 10265  004180  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10266  004184  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10267  004188  A4DF               	btfss	indf2,2,c
 10268  00418A  D00F               	goto	l1747
 10269                           
 10270                           ; BSR set to: 0
 10271                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10272  00418C  0E01               	movlw	1
 10273  00418E  0104               	movlb	4	; () banked
 10274  004190  6F38               	movwf	56,b	;volatile
 10275                           
 10276                           ; BSR set to: 4
 10277                           ;usb_device.c: 2193: }
 10278                           ;usb_device.c: 2194: }
 10279                           
 10280                           ; BSR set to: 4
 10281                           ;usb_device.c: 2192: break;
 10282  004192  D00B               	goto	l1747
 10283  004194                     l1743:
 10284                           
 10285                           ; BSR set to: 4
 10286                           
 10287                           ; BSR set to: 4
 10288  004194  5130               	movf	48,w,b	;volatile
 10289  004196  0B1F               	andlw	31
 10290                           
 10291                           ; Switch size 1, requested type "space"
 10292                           ; Number of cases is 3, Range of values is 0 to 2
 10293                           ; switch strategies available:
 10294                           ; Name         Instructions Cycles
 10295                           ; simple_byte           10     6 (average)
 10296                           ;	Chosen strategy is simple_byte
 10297  004198  0A00               	xorlw	0	; case 0
 10298  00419A  B4D8               	btfsc	status,2,c
 10299  00419C  D7BE               	goto	l1744
 10300  00419E  0A01               	xorlw	1	; case 1
 10301  0041A0  B4D8               	btfsc	status,2,c
 10302  0041A2  D7C4               	goto	l1748
 10303  0041A4  0A03               	xorlw	3	; case 2
 10304  0041A6  B4D8               	btfsc	status,2,c
 10305  0041A8  D7C4               	goto	l1749
 10306  0041AA                     l1747:
 10307                           
 10308                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10309  0041AA  0100               	movlb	0	; () banked
 10310  0041AC  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10311  0041AE  0012               	return	
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;usb_device.c: 2197: {
 10315                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10316  0041B0  0E38               	movlw	56
 10317  0041B2  6FB0               	movwf	_inPipes& (0+255),b
 10318  0041B4  0E04               	movlw	4
 10319  0041B6  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10323  0041B8  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10327  0041BA  0E02               	movlw	2
 10328  0041BC  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10329  0041BE  0012               	return	
 10330  0041C0                     __end_of_USBStdGetStatusHandler:
 10331                           	opt stack 0
 10332                           tosu	equ	0xFFF
 10333                           tosh	equ	0xFFE
 10334                           tosl	equ	0xFFD
 10335                           pclath	equ	0xFFA
 10336                           tblptru	equ	0xFF8
 10337                           tblptrh	equ	0xFF7
 10338                           tblptrl	equ	0xFF6
 10339                           tablat	equ	0xFF5
 10340                           prodh	equ	0xFF4
 10341                           prodl	equ	0xFF3
 10342                           intcon	equ	0xFF2
 10343                           intcon2	equ	0xFF1
 10344                           intcon3	equ	0xFF0
 10345                           postinc0	equ	0xFEE
 10346                           plusw0	equ	0xFEB
 10347                           wreg	equ	0xFE8
 10348                           postinc1	equ	0xFE6
 10349                           postdec1	equ	0xFE5
 10350                           fsr1h	equ	0xFE2
 10351                           fsr1l	equ	0xFE1
 10352                           indf2	equ	0xFDF
 10353                           postinc2	equ	0xFDE
 10354                           postdec2	equ	0xFDD
 10355                           plusw2	equ	0xFDB
 10356                           fsr2h	equ	0xFDA
 10357                           fsr2l	equ	0xFD9
 10358                           status	equ	0xFD8
 10359                           
 10360 ;; *************** function _USBStdGetDscHandler *****************
 10361 ;; Defined at:
 10362 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10363 ;; Parameters:    Size  Location     Type
 10364 ;;		None
 10365 ;; Auto vars:     Size  Location     Type
 10366 ;;		None
 10367 ;; Return value:  Size  Location     Type
 10368 ;;                  1    wreg      void 
 10369 ;; Registers used:
 10370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10371 ;; Tracked objects:
 10372 ;;		On entry : 0/0
 10373 ;;		On exit  : 0/0
 10374 ;;		Unchanged: 0/0
 10375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10378 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10379 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10380 ;;Total ram usage:        2 bytes
 10381 ;; Hardware stack levels used:    1
 10382 ;; Hardware stack levels required when called:   11
 10383 ;; This function calls:
 10384 ;;		Nothing
 10385 ;; This function is called by:
 10386 ;;		_USBCheckStdRequest
 10387 ;; This function uses a non-reentrant model
 10388 ;;
 10389                           
 10390                           	psect	text42
 10391  002CF8                     __ptext42:
 10392                           	opt stack 0
 10393  002CF8                     _USBStdGetDscHandler:
 10394                           	opt stack 12
 10395                           
 10396                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10397                           
 10398                           ; BSR set to: 0
 10399                           ;incstack = 0
 10400  002CF8  0E80               	movlw	128
 10401  002CFA  0104               	movlb	4	; () banked
 10402  002CFC  1930               	xorwf	48,w,b	;volatile
 10403  002CFE  A4D8               	btfss	status,2,c
 10404  002D00  0012               	return	
 10405                           
 10406                           ; BSR set to: 4
 10407                           ;usb_device.c: 2064: {
 10408                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10409  002D02  0EC0               	movlw	192
 10410  002D04  0100               	movlb	0	; () banked
 10411  002D06  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10412                           
 10413                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10414  002D08  D082               	goto	l1730
 10415  002D0A                     
 10416                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10417                           
 10418                           ; BSR set to: 0
 10419  002D0A  0E48               	movlw	low _device_dsc
 10420  002D0C  0100               	movlb	0	; () banked
 10421  002D0E  6FB0               	movwf	_inPipes& (0+255),b
 10422  002D10  0EFE               	movlw	high _device_dsc
 10423  002D12  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10424                           
 10425                           ; BSR set to: 0
 10426                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10427  002D14  0E00               	movlw	0
 10428  002D16  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10429  002D18  0E12               	movlw	18
 10430  002D1A  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10431                           
 10432                           ;usb_device.c: 2076: break;
 10433  002D1C  0012               	return	
 10434  002D1E                     
 10435                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10436                           
 10437                           ; BSR set to: 0
 10438  002D1E  0104               	movlb	4	; () banked
 10439  002D20  5132               	movf	50,w,b	;volatile
 10440  002D22  A4D8               	btfss	status,2,c
 10441  002D24  D040               	goto	l1734
 10442                           
 10443                           ; BSR set to: 4
 10444                           ;usb_device.c: 2082: {
 10445                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10446  002D26  5132               	movf	50,w,b	;volatile
 10447  002D28  0D02               	mullw	2
 10448  002D2A  0E2D               	movlw	low _USB_CD_Ptr
 10449  002D2C  24F3               	addwf	prodl,w,c
 10450  002D2E  6EF6               	movwf	tblptrl,c
 10451  002D30  0EFC               	movlw	high _USB_CD_Ptr
 10452  002D32  20F4               	addwfc	prodh,w,c
 10453  002D34  6EF7               	movwf	tblptrh,c
 10454  002D36                     	if	0	;There are less than 3 active tblptr bytes
 10455  002D36                     	endif
 10456  002D36  0009               	tblrd		*+
 10457  002D38  CFF5 F0B0          	movff	tablat,_inPipes
 10458  002D3C  000A               	tblrd		*-
 10459  002D3E  CFF5 F0B1          	movff	tablat,_inPipes+1
 10460                           
 10461                           ; BSR set to: 4
 10462                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10463  002D42  0E02               	movlw	2
 10464  002D44  0100               	movlb	0	; () banked
 10465  002D46  25B0               	addwf	_inPipes& (0+255),w,b
 10466  002D48  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10467  002D4A  0E00               	movlw	0
 10468  002D4C  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10469  002D4E  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10470  002D50  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10471  002D54  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10472  002D58  6AF8               	clrf	tblptru,c
 10473  002D5A  0E0E               	movlw	(high __ramtop+-1)
 10474  002D5C  64F7               	cpfsgt	tblptrh,c
 10475  002D5E  D003               	bra	u10887
 10476  002D60  0008               	tblrd		*
 10477  002D62  50F5               	movf	tablat,w,c
 10478  002D64  D005               	bra	u10880
 10479  002D66                     u10887:
 10480  002D66  CFF6 FFE9          	movff	tblptrl,fsr0l
 10481  002D6A  CFF7 FFEA          	movff	tblptrh,fsr0h
 10482  002D6E  50EF               	movf	indf0,w,c
 10483  002D70                     u10880:
 10484  002D70  0100               	movlb	0	; () banked
 10485  002D72  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10486                           
 10487                           ; BSR set to: 0
 10488                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10489  002D74  0E03               	movlw	3
 10490  002D76  25B0               	addwf	_inPipes& (0+255),w,b
 10491  002D78  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10492  002D7A  0E00               	movlw	0
 10493  002D7C  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10494  002D7E  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10495  002D80  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10496  002D84  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10497  002D88  6AF8               	clrf	tblptru,c
 10498  002D8A  0E0E               	movlw	(high __ramtop+-1)
 10499  002D8C  64F7               	cpfsgt	tblptrh,c
 10500  002D8E  D003               	bra	u10897
 10501  002D90  0008               	tblrd		*
 10502  002D92  50F5               	movf	tablat,w,c
 10503  002D94  D005               	bra	u10890
 10504  002D96                     u10897:
 10505  002D96  CFF6 FFE9          	movff	tblptrl,fsr0l
 10506  002D9A  CFF7 FFEA          	movff	tblptrh,fsr0h
 10507  002D9E  50EF               	movf	indf0,w,c
 10508  002DA0                     u10890:
 10509  002DA0  0100               	movlb	0	; () banked
 10510  002DA2  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10511                           
 10512                           ;usb_device.c: 2094: }
 10513  002DA4  0012               	return	
 10514  002DA6                     l1734:
 10515                           
 10516                           ;usb_device.c: 2095: else
 10517                           ;usb_device.c: 2096: {
 10518                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10519                           
 10520                           ; BSR set to: 0
 10521  002DA6  0E00               	movlw	0
 10522  002DA8  0100               	movlb	0	; () banked
 10523  002DAA  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10524                           
 10525                           ; BSR set to: 0
 10526                           ;usb_device.c: 2098: }
 10527                           ;usb_device.c: 2099: break;
 10528  002DAC  0012               	return	
 10529  002DAE                     
 10530                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10531                           
 10532                           ; BSR set to: 0
 10533  002DAE  0E03               	movlw	3
 10534  002DB0  0104               	movlb	4	; () banked
 10535  002DB2  6132               	cpfslt	50,b	;volatile
 10536  002DB4  D024               	goto	l1737
 10537                           
 10538                           ; BSR set to: 4
 10539                           ;usb_device.c: 2105: {
 10540                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10541  002DB6  5132               	movf	50,w,b	;volatile
 10542  002DB8  0D02               	mullw	2
 10543  002DBA  0E23               	movlw	low _USB_SD_Ptr
 10544  002DBC  24F3               	addwf	prodl,w,c
 10545  002DBE  6EF6               	movwf	tblptrl,c
 10546  002DC0  0EFC               	movlw	high _USB_SD_Ptr
 10547  002DC2  20F4               	addwfc	prodh,w,c
 10548  002DC4  6EF7               	movwf	tblptrh,c
 10549  002DC6                     	if	0	;There are less than 3 active tblptr bytes
 10550  002DC6                     	endif
 10551  002DC6  0009               	tblrd		*+
 10552  002DC8  CFF5 F0B0          	movff	tablat,_inPipes
 10553  002DCC  000A               	tblrd		*-
 10554  002DCE  CFF5 F0B1          	movff	tablat,_inPipes+1
 10555                           
 10556                           ; BSR set to: 4
 10557                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10558  002DD2  C0B0  FFF6         	movff	_inPipes,tblptrl
 10559  002DD6  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10560  002DDA  6AF8               	clrf	tblptru,c
 10561  002DDC  0E0E               	movlw	(high __ramtop+-1)
 10562  002DDE  64F7               	cpfsgt	tblptrh,c
 10563  002DE0  D003               	bra	u10917
 10564  002DE2  0008               	tblrd		*
 10565  002DE4  50F5               	movf	tablat,w,c
 10566  002DE6  D005               	bra	u10910
 10567  002DE8                     u10917:
 10568  002DE8  CFF6 FFE9          	movff	tblptrl,fsr0l
 10569  002DEC  CFF7 FFEA          	movff	tblptrh,fsr0h
 10570  002DF0  50EF               	movf	indf0,w,c
 10571  002DF2                     u10910:
 10572  002DF2  0100               	movlb	0	; () banked
 10573  002DF4  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10574  002DF6  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10575  002DF8  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10576  002DFA  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10577                           
 10578                           ;usb_device.c: 2110: }
 10579  002DFC  0012               	return	
 10580  002DFE                     l1737:
 10581                           
 10582                           ;usb_device.c: 2120: else
 10583                           ;usb_device.c: 2121: {
 10584                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10585                           
 10586                           ; BSR set to: 0
 10587  002DFE  0E00               	movlw	0
 10588  002E00  0100               	movlb	0	; () banked
 10589  002E02  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10590                           
 10591                           ; BSR set to: 0
 10592                           ;usb_device.c: 2123: }
 10593                           ;usb_device.c: 2124: break;
 10594  002E04  0012               	return	
 10595  002E06                     
 10596                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10597                           
 10598                           ; BSR set to: 0
 10599  002E06  0E00               	movlw	0
 10600  002E08  0100               	movlb	0	; () banked
 10601  002E0A  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10602                           
 10603                           ; BSR set to: 0
 10604                           ;usb_device.c: 2128: }
 10605                           
 10606                           ;usb_device.c: 2127: break;
 10607  002E0C  0012               	return	
 10608  002E0E                     l1730:
 10609                           
 10610                           ; BSR set to: 0
 10611                           
 10612                           ; BSR set to: 0
 10613  002E0E  0104               	movlb	4	; () banked
 10614  002E10  5133               	movf	51,w,b	;volatile
 10615                           
 10616                           ; Switch size 1, requested type "space"
 10617                           ; Number of cases is 3, Range of values is 1 to 3
 10618                           ; switch strategies available:
 10619                           ; Name         Instructions Cycles
 10620                           ; simple_byte           10     6 (average)
 10621                           ;	Chosen strategy is simple_byte
 10622  002E12  0A01               	xorlw	1	; case 1
 10623  002E14  B4D8               	btfsc	status,2,c
 10624  002E16  D779               	goto	l1731
 10625  002E18  0A03               	xorlw	3	; case 2
 10626  002E1A  B4D8               	btfsc	status,2,c
 10627  002E1C  D780               	goto	l1733
 10628  002E1E  0A01               	xorlw	1	; case 3
 10629  002E20  B4D8               	btfsc	status,2,c
 10630  002E22  D7C5               	goto	l1736
 10631  002E24  D7F0               	goto	l1739
 10632  002E26                     __end_of_USBStdGetDscHandler:
 10633                           	opt stack 0
 10634                           tosu	equ	0xFFF
 10635                           tosh	equ	0xFFE
 10636                           tosl	equ	0xFFD
 10637                           pclath	equ	0xFFA
 10638                           tblptru	equ	0xFF8
 10639                           tblptrh	equ	0xFF7
 10640                           tblptrl	equ	0xFF6
 10641                           tablat	equ	0xFF5
 10642                           prodh	equ	0xFF4
 10643                           prodl	equ	0xFF3
 10644                           intcon	equ	0xFF2
 10645                           intcon2	equ	0xFF1
 10646                           intcon3	equ	0xFF0
 10647                           indf0	equ	0xFEF
 10648                           postinc0	equ	0xFEE
 10649                           plusw0	equ	0xFEB
 10650                           fsr0h	equ	0xFEA
 10651                           fsr0l	equ	0xFE9
 10652                           wreg	equ	0xFE8
 10653                           postinc1	equ	0xFE6
 10654                           postdec1	equ	0xFE5
 10655                           fsr1h	equ	0xFE2
 10656                           fsr1l	equ	0xFE1
 10657                           indf2	equ	0xFDF
 10658                           postinc2	equ	0xFDE
 10659                           postdec2	equ	0xFDD
 10660                           plusw2	equ	0xFDB
 10661                           fsr2h	equ	0xFDA
 10662                           fsr2l	equ	0xFD9
 10663                           status	equ	0xFD8
 10664                           
 10665 ;; *************** function _USBStdFeatureReqHandler *****************
 10666 ;; Defined at:
 10667 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10668 ;; Parameters:    Size  Location     Type
 10669 ;;		None
 10670 ;; Auto vars:     Size  Location     Type
 10671 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10672 ;;		 -> NULL(0), BDT(48), 
 10673 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10674 ;;		 -> UEP0(1), 
 10675 ;;  current_ep_d    1   52[BANK0 ] struct .
 10676 ;; Return value:  Size  Location     Type
 10677 ;;                  1    wreg      void 
 10678 ;; Registers used:
 10679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10680 ;; Tracked objects:
 10681 ;;		On entry : 0/0
 10682 ;;		On exit  : 0/0
 10683 ;;		Unchanged: 0/0
 10684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10686 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10687 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10688 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10689 ;;Total ram usage:        6 bytes
 10690 ;; Hardware stack levels used:    1
 10691 ;; Hardware stack levels required when called:   15
 10692 ;; This function calls:
 10693 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10694 ;; This function is called by:
 10695 ;;		_USBCheckStdRequest
 10696 ;; This function uses a non-reentrant model
 10697 ;;
 10698                           
 10699                           	psect	text43
 10700  00135A                     __ptext43:
 10701                           	opt stack 0
 10702  00135A                     _USBStdFeatureReqHandler:
 10703                           	opt stack 8
 10704                           
 10705                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10706                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10707                           ;usb_device.c: 2778: unsigned char* pUEP;
 10708                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10709                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10710                           
 10711                           ;incstack = 0
 10712  00135A  0104               	movlb	4	; () banked
 10713  00135C  0532               	decf	50,w,b	;volatile
 10714  00135E  A4D8               	btfss	status,2,c
 10715  001360  D011               	goto	l1823
 10716                           
 10717                           ; BSR set to: 4
 10718  001362  5130               	movf	48,w,b	;volatile
 10719  001364  0B1F               	andlw	31
 10720  001366  0900               	iorlw	0
 10721  001368  A4D8               	btfss	status,2,c
 10722  00136A  D00C               	goto	l1823
 10723                           
 10724                           ; BSR set to: 4
 10725                           ;usb_device.c: 2818: {
 10726                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10727  00136C  0100               	movlb	0	; () banked
 10728  00136E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10729                           
 10730                           ; BSR set to: 0
 10731                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10732  001370  0E03               	movlw	3
 10733  001372  0104               	movlb	4	; () banked
 10734  001374  1931               	xorwf	49,w,b	;volatile
 10735  001376  A4D8               	btfss	status,2,c
 10736  001378  D002               	goto	l1822
 10737                           
 10738                           ; BSR set to: 4
 10739                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10740  00137A  0E01               	movlw	1
 10741  00137C  D001               	goto	L5
 10742  00137E                     l1822:
 10743                           
 10744                           ;usb_device.c: 2822: else
 10745                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10746                           
 10747                           ; BSR set to: 1
 10748  00137E  0E00               	movlw	0
 10749  001380                     L5:
 10750  001380  0101               	movlb	1	; () banked
 10751  001382  6FE6               	movwf	_RemoteWakeup& (0+255),b
 10752  001384                     l1823:
 10753                           
 10754                           ;usb_device.c: 2824: }
 10755                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10756                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10757                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10758                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10759                           
 10760                           ; BSR set to: 1
 10761  001384  0104               	movlb	4	; () banked
 10762  001386  5132               	movf	50,w,b	;volatile
 10763  001388  A4D8               	btfss	status,2,c
 10764  00138A  0012               	return	
 10765                           
 10766                           ; BSR set to: 4
 10767  00138C  5130               	movf	48,w,b	;volatile
 10768  00138E  0B1F               	andlw	31
 10769  001390  0A02               	xorlw	2
 10770  001392  A4D8               	btfss	status,2,c
 10771  001394  0012               	return	
 10772                           
 10773                           ; BSR set to: 4
 10774  001396  5134               	movf	52,w,b	;volatile
 10775  001398  0B0F               	andlw	15
 10776  00139A  0900               	iorlw	0
 10777  00139C  B4D8               	btfsc	status,2,c
 10778  00139E  0012               	return	
 10779                           
 10780                           ; BSR set to: 4
 10781  0013A0  5134               	movf	52,w,b	;volatile
 10782  0013A2  0B0F               	andlw	15
 10783  0013A4  0100               	movlb	0	; () banked
 10784  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10785  0013A8  0E03               	movlw	3
 10786  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10787  0013AC  0012               	return	
 10788                           
 10789                           ; BSR set to: 0
 10790  0013AE  0E20               	movlw	32
 10791  0013B0  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 10792  0013B2  A4D8               	btfss	status,2,c
 10793  0013B4  0012               	return	
 10794                           
 10795                           ; BSR set to: 0
 10796                           ;usb_device.c: 2831: {
 10797                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10798  0013B6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10799                           
 10800                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10801  0013B8  0104               	movlb	4	; () banked
 10802  0013BA  BF34               	btfsc	52,7,b	;volatile
 10803  0013BC  D01C               	goto	l1825
 10804                           
 10805                           ; BSR set to: 4
 10806                           ;usb_device.c: 2838: {
 10807                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10808  0013BE  5134               	movf	52,w,b	;volatile
 10809  0013C0  0B0F               	andlw	15
 10810  0013C2  0100               	movlb	0	; () banked
 10811  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10812  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10813  0013C8  0D02               	mullw	2
 10814  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10815  0013CC  24F3               	addwf	prodl,w,c
 10816  0013CE  6ED9               	movwf	fsr2l,c
 10817  0013D0  0E03               	movlw	high _pBDTEntryOut
 10818  0013D2  20F4               	addwfc	prodh,w,c
 10819  0013D4  6EDA               	movwf	fsr2h,c
 10820  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10821  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10822                           
 10823                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10824  0013DE  0104               	movlb	4	; () banked
 10825  0013E0  5134               	movf	52,w,b	;volatile
 10826  0013E2  0B0F               	andlw	15
 10827  0013E4  0100               	movlb	0	; () banked
 10828  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10829  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10830  0013EA  0D01               	mullw	1
 10831  0013EC  0ECE               	movlw	low _ep_data_out
 10832  0013EE  24F3               	addwf	prodl,w,c
 10833  0013F0  6ED9               	movwf	fsr2l,c
 10834  0013F2  0E02               	movlw	high _ep_data_out
 10835  0013F4  D01C               	goto	L6
 10836  0013F6                     l1825:
 10837                           
 10838                           ;usb_device.c: 2842: else
 10839                           ;usb_device.c: 2843: {
 10840                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10841                           
 10842                           ; BSR set to: 0
 10843  0013F6  0104               	movlb	4	; () banked
 10844  0013F8  5134               	movf	52,w,b	;volatile
 10845  0013FA  0B0F               	andlw	15
 10846  0013FC  0100               	movlb	0	; () banked
 10847  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10848  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10849  001402  0D02               	mullw	2
 10850  001404  0EB6               	movlw	low _pBDTEntryIn
 10851  001406  24F3               	addwf	prodl,w,c
 10852  001408  6ED9               	movwf	fsr2l,c
 10853  00140A  0E00               	movlw	high _pBDTEntryIn
 10854  00140C  20F4               	addwfc	prodh,w,c
 10855  00140E  6EDA               	movwf	fsr2h,c
 10856  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10857  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10858                           
 10859                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10860  001418  0104               	movlb	4	; () banked
 10861  00141A  5134               	movf	52,w,b	;volatile
 10862  00141C  0B0F               	andlw	15
 10863  00141E  0100               	movlb	0	; () banked
 10864  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10865  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10866  001424  0D01               	mullw	1
 10867  001426  0ED1               	movlw	low _ep_data_in
 10868  001428  24F3               	addwf	prodl,w,c
 10869  00142A  6ED9               	movwf	fsr2l,c
 10870  00142C  0E02               	movlw	high _ep_data_in
 10871  00142E                     L6:
 10872  00142E  20F4               	addwfc	prodh,w,c
 10873  001430  6EDA               	movwf	fsr2h,c
 10874  001432  50DF               	movf	indf2,w,c
 10875  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10876                           
 10877                           ; BSR set to: 0
 10878                           ;usb_device.c: 2846: }
 10879                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10880                           
 10881                           ; BSR set to: 0
 10882  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10883  001438  D002               	goto	l1827
 10884                           
 10885                           ; BSR set to: 0
 10886                           ;usb_device.c: 2853: {
 10887                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10888  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10889                           
 10890                           ;usb_device.c: 2855: }
 10891  00143C  D001               	goto	l1828
 10892  00143E                     l1827:
 10893                           
 10894                           ; BSR set to: 0
 10895                           ;usb_device.c: 2856: else
 10896                           ;usb_device.c: 2857: {
 10897                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10898                           
 10899                           ; BSR set to: 0
 10900  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10901  001440                     l1828:
 10902                           
 10903                           ; BSR set to: 0
 10904                           ;usb_device.c: 2859: }
 10905                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10906                           
 10907                           ; BSR set to: 0
 10908  001440  0104               	movlb	4	; () banked
 10909  001442  BF34               	btfsc	52,7,b	;volatile
 10910  001444  D00B               	goto	l1829
 10911                           
 10912                           ; BSR set to: 4
 10913                           ;usb_device.c: 2865: {
 10914                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10915  001446  5134               	movf	52,w,b	;volatile
 10916  001448  0B0F               	andlw	15
 10917  00144A  0100               	movlb	0	; () banked
 10918  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10919  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10920  001450  0D02               	mullw	2
 10921  001452  0E0E               	movlw	low _pBDTEntryOut
 10922  001454  24F3               	addwf	prodl,w,c
 10923  001456  6ED9               	movwf	fsr2l,c
 10924  001458  0E03               	movlw	high _pBDTEntryOut
 10925  00145A  D00B               	goto	L7
 10926  00145C                     l1829:
 10927                           
 10928                           ;usb_device.c: 2868: else
 10929                           ;usb_device.c: 2869: {
 10930                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10931                           
 10932                           ; BSR set to: 0
 10933  00145C  0104               	movlb	4	; () banked
 10934  00145E  5134               	movf	52,w,b	;volatile
 10935  001460  0B0F               	andlw	15
 10936  001462  0100               	movlb	0	; () banked
 10937  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10938  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10939  001468  0D02               	mullw	2
 10940  00146A  0EB6               	movlw	low _pBDTEntryIn
 10941  00146C  24F3               	addwf	prodl,w,c
 10942  00146E  6ED9               	movwf	fsr2l,c
 10943  001470  0E00               	movlw	high _pBDTEntryIn
 10944  001472                     L7:
 10945  001472  20F4               	addwfc	prodh,w,c
 10946  001474  6EDA               	movwf	fsr2h,c
 10947  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10948  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10949                           
 10950                           ; BSR set to: 0
 10951                           ;usb_device.c: 2871: }
 10952                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 10953                           
 10954                           ; BSR set to: 0
 10955  00147E  0E03               	movlw	3
 10956  001480  0104               	movlb	4	; () banked
 10957  001482  1931               	xorwf	49,w,b	;volatile
 10958  001484  A4D8               	btfss	status,2,c
 10959  001486  D031               	goto	l1831
 10960                           
 10961                           ; BSR set to: 4
 10962                           ;usb_device.c: 2875: {
 10963                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 10964  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10965  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10966  001490  0100               	movlb	0	; () banked
 10967  001492  AEDF               	btfss	indf2,7,c
 10968  001494  D01D               	goto	l1834
 10969                           
 10970                           ; BSR set to: 0
 10971                           ;usb_device.c: 2877: {
 10972                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 10973  001496  0104               	movlb	4	; () banked
 10974  001498  BF34               	btfsc	52,7,b	;volatile
 10975  00149A  D00B               	goto	l1833
 10976                           
 10977                           ; BSR set to: 4
 10978                           ;usb_device.c: 2881: {
 10979                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10980  00149C  5134               	movf	52,w,b	;volatile
 10981  00149E  0B0F               	andlw	15
 10982  0014A0  0100               	movlb	0	; () banked
 10983  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10984  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10985  0014A6  0D01               	mullw	1
 10986  0014A8  0ECE               	movlw	low _ep_data_out
 10987  0014AA  24F3               	addwf	prodl,w,c
 10988  0014AC  6ED9               	movwf	fsr2l,c
 10989  0014AE  0E02               	movlw	high _ep_data_out
 10990  0014B0  D00B               	goto	L8
 10991  0014B2                     l1833:
 10992                           
 10993                           ;usb_device.c: 2884: else
 10994                           ;usb_device.c: 2885: {
 10995                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10996                           
 10997                           ; BSR set to: 2
 10998  0014B2  0104               	movlb	4	; () banked
 10999  0014B4  5134               	movf	52,w,b	;volatile
 11000  0014B6  0B0F               	andlw	15
 11001  0014B8  0100               	movlb	0	; () banked
 11002  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11003  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11004  0014BE  0D01               	mullw	1
 11005  0014C0  0ED1               	movlw	low _ep_data_in
 11006  0014C2  24F3               	addwf	prodl,w,c
 11007  0014C4  6ED9               	movwf	fsr2l,c
 11008  0014C6  0E02               	movlw	high _ep_data_in
 11009  0014C8                     L8:
 11010  0014C8  20F4               	addwfc	prodh,w,c
 11011  0014CA  6EDA               	movwf	fsr2h,c
 11012  0014CC  0102               	movlb	2	; () banked
 11013  0014CE  82DF               	bsf	indf2,1,c
 11014  0014D0                     l1834:
 11015                           
 11016                           ;usb_device.c: 2887: }
 11017                           ;usb_device.c: 2888: }
 11018                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11019                           
 11020                           ; BSR set to: 2
 11021                           
 11022                           ; BSR set to: 2
 11023  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11024  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11025  0014D8  0E00               	movlw	0
 11026  0014DA  84DB               	bsf	plusw2,2,c
 11027                           
 11028                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11029  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11030  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11031  0014E4  0E00               	movlw	0
 11032  0014E6  8EDB               	bsf	plusw2,7,c
 11033                           
 11034                           ;usb_device.c: 2893: }
 11035  0014E8  0012               	return	
 11036  0014EA                     l1831:
 11037                           
 11038                           ;usb_device.c: 2894: else
 11039                           ;usb_device.c: 2895: {
 11040                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11041  0014EA  0E04               	movlw	4
 11042  0014EC  0100               	movlb	0	; () banked
 11043  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11044                           
 11045                           ; BSR set to: 0
 11046                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11047  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11048  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11049  0014F8  AEDF               	btfss	indf2,7,c
 11050  0014FA  D01B               	goto	l1836
 11051                           
 11052                           ; BSR set to: 0
 11053                           ;usb_device.c: 2902: {
 11054                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11055  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11056  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11057  001504  0E7F               	movlw	127
 11058  001506  16DF               	andwf	indf2,f,c
 11059                           
 11060                           ; BSR set to: 0
 11061                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11062  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11063  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11064  001510  0E00               	movlw	0
 11065  001512  8CDB               	bsf	plusw2,6,c
 11066                           
 11067                           ; BSR set to: 0
 11068                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11069  001514  0E00               	movlw	0
 11070  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11071  001518  0E05               	movlw	5
 11072  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11073  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11074  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11075  001524  0E00               	movlw	0
 11076  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11077  001528  0E02               	movlw	2
 11078  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11079  00152C  ECFC  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11080                           
 11081                           ;usb_device.c: 2908: }
 11082  001530  D006               	goto	l1837
 11083  001532                     l1836:
 11084                           
 11085                           ;usb_device.c: 2909: else
 11086                           ;usb_device.c: 2910: {
 11087                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11088  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11089  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11090  00153A  0E00               	movlw	0
 11091  00153C  8CDB               	bsf	plusw2,6,c
 11092  00153E                     l1837:
 11093                           
 11094                           ;usb_device.c: 2913: }
 11095                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11096  00153E  0E04               	movlw	4
 11097  001540  0100               	movlb	0	; () banked
 11098  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11099                           
 11100                           ; BSR set to: 0
 11101                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11102  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11103  001546  D006               	goto	u11130
 11104                           
 11105                           ; BSR set to: 0
 11106  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11107  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11108  001550  AEDF               	btfss	indf2,7,c
 11109  001552  D033               	goto	l1838
 11110  001554                     u11130:
 11111                           
 11112                           ; BSR set to: 0
 11113                           ;usb_device.c: 2924: {
 11114                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11115  001554  0104               	movlb	4	; () banked
 11116  001556  BF34               	btfsc	52,7,b	;volatile
 11117  001558  D00B               	goto	l1841
 11118                           
 11119                           ; BSR set to: 4
 11120                           ;usb_device.c: 2926: {
 11121                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11122  00155A  5134               	movf	52,w,b	;volatile
 11123  00155C  0B0F               	andlw	15
 11124  00155E  0100               	movlb	0	; () banked
 11125  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11126  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11127  001564  0D01               	mullw	1
 11128  001566  0ECE               	movlw	low _ep_data_out
 11129  001568  24F3               	addwf	prodl,w,c
 11130  00156A  6ED9               	movwf	fsr2l,c
 11131  00156C  0E02               	movlw	high _ep_data_out
 11132  00156E  D00B               	goto	L9
 11133  001570                     l1841:
 11134                           
 11135                           ;usb_device.c: 2929: else
 11136                           ;usb_device.c: 2930: {
 11137                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11138                           
 11139                           ; BSR set to: 2
 11140  001570  0104               	movlb	4	; () banked
 11141  001572  5134               	movf	52,w,b	;volatile
 11142  001574  0B0F               	andlw	15
 11143  001576  0100               	movlb	0	; () banked
 11144  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11145  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11146  00157C  0D01               	mullw	1
 11147  00157E  0ED1               	movlw	low _ep_data_in
 11148  001580  24F3               	addwf	prodl,w,c
 11149  001582  6ED9               	movwf	fsr2l,c
 11150  001584  0E02               	movlw	high _ep_data_in
 11151  001586                     L9:
 11152  001586  20F4               	addwfc	prodh,w,c
 11153  001588  6EDA               	movwf	fsr2h,c
 11154  00158A  0102               	movlb	2	; () banked
 11155  00158C  92DF               	bcf	indf2,1,c
 11156                           
 11157                           ; BSR set to: 2
 11158                           ;usb_device.c: 2932: }
 11159                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11160                           
 11161                           ; BSR set to: 2
 11162  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11163  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11164  001596  0E3B               	movlw	59
 11165  001598  16DF               	andwf	indf2,f,c
 11166                           
 11167                           ; BSR set to: 2
 11168                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11169  00159A  0E00               	movlw	0
 11170  00159C  0100               	movlb	0	; () banked
 11171  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11172  0015A0  0E05               	movlw	5
 11173  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11174  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11175  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11176  0015AC  0E00               	movlw	0
 11177  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11178  0015B0  0E02               	movlw	2
 11179  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11180  0015B4  ECFC  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11181                           
 11182                           ;usb_device.c: 2938: }
 11183  0015B8  D006               	goto	l1843
 11184  0015BA                     l1838:
 11185                           
 11186                           ;usb_device.c: 2939: else
 11187                           ;usb_device.c: 2940: {
 11188                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11189  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11190  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11191  0015C2  0E3B               	movlw	59
 11192  0015C4  16DF               	andwf	indf2,f,c
 11193  0015C6                     l1843:
 11194                           
 11195                           ;usb_device.c: 2943: }
 11196                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11197  0015C6  0104               	movlb	4	; () banked
 11198  0015C8  5134               	movf	52,w,b	;volatile
 11199  0015CA  0B0F               	andlw	15
 11200  0015CC  0100               	movlb	0	; () banked
 11201  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11202  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11203  0015D2  0D01               	mullw	1
 11204  0015D4  0E26               	movlw	38
 11205  0015D6  24F3               	addwf	prodl,w,c
 11206  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11207  0015DA  0E0F               	movlw	15
 11208  0015DC  20F4               	addwfc	prodh,w,c
 11209  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11210                           
 11211                           ; BSR set to: 0
 11212                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11213  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11214  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11215  0015E8  0EFE               	movlw	254
 11216  0015EA  16DF               	andwf	indf2,f,c
 11217                           
 11218                           ; BSR set to: 0
 11219  0015EC  0012               	return	
 11220  0015EE                     __end_of_USBStdFeatureReqHandler:
 11221                           	opt stack 0
 11222                           tosu	equ	0xFFF
 11223                           tosh	equ	0xFFE
 11224                           tosl	equ	0xFFD
 11225                           pclath	equ	0xFFA
 11226                           tblptru	equ	0xFF8
 11227                           tblptrh	equ	0xFF7
 11228                           tblptrl	equ	0xFF6
 11229                           tablat	equ	0xFF5
 11230                           prodh	equ	0xFF4
 11231                           prodl	equ	0xFF3
 11232                           intcon	equ	0xFF2
 11233                           intcon2	equ	0xFF1
 11234                           intcon3	equ	0xFF0
 11235                           indf0	equ	0xFEF
 11236                           postinc0	equ	0xFEE
 11237                           plusw0	equ	0xFEB
 11238                           fsr0h	equ	0xFEA
 11239                           fsr0l	equ	0xFE9
 11240                           wreg	equ	0xFE8
 11241                           postinc1	equ	0xFE6
 11242                           postdec1	equ	0xFE5
 11243                           fsr1h	equ	0xFE2
 11244                           fsr1l	equ	0xFE1
 11245                           indf2	equ	0xFDF
 11246                           postinc2	equ	0xFDE
 11247                           postdec2	equ	0xFDD
 11248                           plusw2	equ	0xFDB
 11249                           fsr2h	equ	0xFDA
 11250                           fsr2l	equ	0xFD9
 11251                           status	equ	0xFD8
 11252                           
 11253 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11254 ;; Defined at:
 11255 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;  event           2   41[BANK0 ] enum E8362
 11258 ;;  pdata           2   43[BANK0 ] PTR void 
 11259 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11260 ;;  size            2   45[BANK0 ] unsigned int 
 11261 ;; Auto vars:     Size  Location     Type
 11262 ;;		None
 11263 ;; Return value:  Size  Location     Type
 11264 ;;                  1    wreg      unsigned char 
 11265 ;; Registers used:
 11266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11267 ;; Tracked objects:
 11268 ;;		On entry : 0/0
 11269 ;;		On exit  : 0/0
 11270 ;;		Unchanged: 0/0
 11271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11272 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11274 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11275 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11276 ;;Total ram usage:        8 bytes
 11277 ;; Hardware stack levels used:    1
 11278 ;; Hardware stack levels required when called:   14
 11279 ;; This function calls:
 11280 ;;		_CDCInitEP
 11281 ;;		_USBCheckCDCRequest
 11282 ;; This function is called by:
 11283 ;;		_USBDeviceTasks
 11284 ;;		_USBStdSetCfgHandler
 11285 ;;		_USBSuspend
 11286 ;;		_USBWakeFromSuspend
 11287 ;;		_USBCtrlTrfSetupHandler
 11288 ;;		_USBCheckStdRequest
 11289 ;;		_USBStdFeatureReqHandler
 11290 ;; This function uses a non-reentrant model
 11291 ;;
 11292                           
 11293                           	psect	text44
 11294  0051F8                     __ptext44:
 11295                           	opt stack 0
 11296  0051F8                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11297                           	opt stack 12
 11298                           
 11299                           ;usb_device_mgr.c: 106: switch( (int) event )
 11300                           
 11301                           ;incstack = 0
 11302  0051F8  D006               	goto	l1997
 11303  0051FA                     
 11304                           ;usb_device_mgr.c: 134: CDCInitEP();
 11305  0051FA  ECC5  F027         	call	_CDCInitEP	;wreg free
 11306                           
 11307                           ;usb_device_mgr.c: 142: break;
 11308                           
 11309                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11310                           
 11311                           ;usb_device_mgr.c: 139: break;
 11312  0051FE  0012               	return	
 11313  005200                     
 11314                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11315  005200  ECE0  F020         	call	_USBCheckCDCRequest	;wreg free
 11316                           
 11317                           ;usb_device_mgr.c: 163: }
 11318                           
 11319                           ;usb_device_mgr.c: 162: break;
 11320                           
 11321                           ;usb_device_mgr.c: 161: default:
 11322                           
 11323                           ;usb_device_mgr.c: 159: break;
 11324                           
 11325                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11326                           
 11327                           ;usb_device_mgr.c: 156: break;
 11328                           
 11329                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11330                           
 11331                           ;usb_device_mgr.c: 153: break;
 11332  005204  0012               	return	
 11333  005206                     l1997:
 11334  005206  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11335  00520A  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11336                           
 11337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11338                           ; Switch size 1, requested type "space"
 11339                           ; Number of cases is 2, Range of values is 0 to 127
 11340                           ; switch strategies available:
 11341                           ; Name         Instructions Cycles
 11342                           ; simple_byte            7     4 (average)
 11343                           ;	Chosen strategy is simple_byte
 11344  00520E  0100               	movlb	0	; () banked
 11345  005210  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11346  005212  0A00               	xorlw	0	; case 0
 11347  005214  B4D8               	btfsc	status,2,c
 11348  005216  D004               	goto	l15812
 11349  005218  0A7F               	xorlw	127	; case 127
 11350  00521A  A4D8               	btfss	status,2,c
 11351  00521C  0012               	return	
 11352  00521E  D018               	goto	l15814
 11353  005220                     l15812:
 11354                           
 11355                           ; BSR set to: 0
 11356                           ; Switch size 1, requested type "space"
 11357                           ; Number of cases is 8, Range of values is 1 to 117
 11358                           ; switch strategies available:
 11359                           ; Name         Instructions Cycles
 11360                           ; simple_byte           25    13 (average)
 11361                           ;	Chosen strategy is simple_byte
 11362  005220  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11363  005222  0A01               	xorlw	1	; case 1
 11364  005224  B4D8               	btfsc	status,2,c
 11365  005226  D7E9               	goto	l2003
 11366  005228  0A03               	xorlw	3	; case 2
 11367  00522A  B4D8               	btfsc	status,2,c
 11368  00522C  0012               	return	
 11369  00522E  0A01               	xorlw	1	; case 3
 11370  005230  B4D8               	btfsc	status,2,c
 11371  005232  D7E6               	goto	l2005
 11372  005234  0A06               	xorlw	6	; case 5
 11373  005236  B4D8               	btfsc	status,2,c
 11374  005238  0012               	return	
 11375  00523A  0A77               	xorlw	119	; case 114
 11376  00523C  B4D8               	btfsc	status,2,c
 11377  00523E  0012               	return	
 11378  005240  0A01               	xorlw	1	; case 115
 11379  005242  B4D8               	btfsc	status,2,c
 11380  005244  0012               	return	
 11381  005246  0A07               	xorlw	7	; case 116
 11382  005248  B4D8               	btfsc	status,2,c
 11383  00524A  0012               	return	
 11384  00524C  0A01               	xorlw	1	; case 117
 11385  00524E  0012               	return	
 11386  005250                     l15814:
 11387                           
 11388                           ; BSR set to: 0
 11389                           ; Switch size 1, requested type "space"
 11390                           ; Number of cases is 1, Range of values is 255 to 255
 11391                           ; switch strategies available:
 11392                           ; Name         Instructions Cycles
 11393                           ; simple_byte            4     3 (average)
 11394                           ;	Chosen strategy is simple_byte
 11395  005250  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11396  005252  0AFF               	xorlw	255	; case 255
 11397  005254  0012               	return	
 11398  005256                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11399                           	opt stack 0
 11400                           tosu	equ	0xFFF
 11401                           tosh	equ	0xFFE
 11402                           tosl	equ	0xFFD
 11403                           pclath	equ	0xFFA
 11404                           tblptru	equ	0xFF8
 11405                           tblptrh	equ	0xFF7
 11406                           tblptrl	equ	0xFF6
 11407                           tablat	equ	0xFF5
 11408                           prodh	equ	0xFF4
 11409                           prodl	equ	0xFF3
 11410                           intcon	equ	0xFF2
 11411                           intcon2	equ	0xFF1
 11412                           intcon3	equ	0xFF0
 11413                           indf0	equ	0xFEF
 11414                           postinc0	equ	0xFEE
 11415                           plusw0	equ	0xFEB
 11416                           fsr0h	equ	0xFEA
 11417                           fsr0l	equ	0xFE9
 11418                           wreg	equ	0xFE8
 11419                           postinc1	equ	0xFE6
 11420                           postdec1	equ	0xFE5
 11421                           fsr1h	equ	0xFE2
 11422                           fsr1l	equ	0xFE1
 11423                           indf2	equ	0xFDF
 11424                           postinc2	equ	0xFDE
 11425                           postdec2	equ	0xFDD
 11426                           plusw2	equ	0xFDB
 11427                           fsr2h	equ	0xFDA
 11428                           fsr2l	equ	0xFD9
 11429                           status	equ	0xFD8
 11430                           
 11431 ;; *************** function _USBCheckCDCRequest *****************
 11432 ;; Defined at:
 11433 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11434 ;; Parameters:    Size  Location     Type
 11435 ;;		None
 11436 ;; Auto vars:     Size  Location     Type
 11437 ;;		None
 11438 ;; Return value:  Size  Location     Type
 11439 ;;                  1    wreg      void 
 11440 ;; Registers used:
 11441 ;;		wreg, status,2, status,0
 11442 ;; Tracked objects:
 11443 ;;		On entry : 0/0
 11444 ;;		On exit  : 0/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11451 ;;Total ram usage:        0 bytes
 11452 ;; Hardware stack levels used:    1
 11453 ;; Hardware stack levels required when called:   11
 11454 ;; This function calls:
 11455 ;;		Nothing
 11456 ;; This function is called by:
 11457 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11458 ;; This function uses a non-reentrant model
 11459 ;;
 11460                           
 11461                           	psect	text45
 11462  0041C0                     __ptext45:
 11463                           	opt stack 0
 11464  0041C0                     _USBCheckCDCRequest:
 11465                           	opt stack 14
 11466                           
 11467                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11468                           
 11469                           ;incstack = 0
 11470  0041C0  0104               	movlb	4	; () banked
 11471  0041C2  5130               	movf	48,w,b	;volatile
 11472  0041C4  0B1F               	andlw	31
 11473  0041C6  06E8               	decf	wreg,f,c
 11474  0041C8  A4D8               	btfss	status,2,c
 11475  0041CA  0012               	return	
 11476                           
 11477                           ; BSR set to: 4
 11478                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11479                           
 11480                           ; BSR set to: 4
 11481                           
 11482                           ; BSR set to: 4
 11483  0041CC  3930               	swapf	48,w,b	;volatile
 11484  0041CE  32E8               	rrcf	wreg,f,c
 11485  0041D0  0B03               	andlw	3
 11486  0041D2  06E8               	decf	wreg,f,c
 11487  0041D4  A4D8               	btfss	status,2,c
 11488  0041D6  0012               	return	
 11489                           
 11490                           ; BSR set to: 4
 11491                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11492                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11493                           
 11494                           ; BSR set to: 4
 11495                           
 11496                           ; BSR set to: 4
 11497  0041D8  5134               	movf	52,w,b	;volatile
 11498  0041DA  B4D8               	btfsc	status,2,c
 11499  0041DC  D037               	goto	l1899
 11500                           
 11501                           ; BSR set to: 4
 11502  0041DE  0534               	decf	52,w,b	;volatile
 11503  0041E0  A4D8               	btfss	status,2,c
 11504  0041E2  0012               	return	
 11505  0041E4  D033               	goto	l1899
 11506  0041E6                     
 11507                           ; BSR set to: 4
 11508                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11509                           
 11510                           ; BSR set to: 4
 11511  0041E6  0E76               	movlw	low _dummy_encapsulated_cmd_response
 11512  0041E8  0100               	movlb	0	; () banked
 11513  0041EA  6FB0               	movwf	_inPipes& (0+255),b
 11514  0041EC  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11515  0041EE  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11516                           
 11517                           ; BSR set to: 0
 11518                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11519  0041F0  0E00               	movlw	0
 11520  0041F2  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11521  0041F4  0E08               	movlw	8
 11522  0041F6  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11523                           
 11524                           ; BSR set to: 0
 11525                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11526  0041F8  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11530  0041FA  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11531                           
 11532                           ;usb_device_cdc.c: 178: break;
 11533  0041FC  0012               	return	
 11534  0041FE                     
 11535                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11536                           
 11537                           ; BSR set to: 0
 11538  0041FE  0E76               	movlw	low _dummy_encapsulated_cmd_response
 11539  004200  0100               	movlb	0	; () banked
 11540  004202  6FB0               	movwf	_inPipes& (0+255),b
 11541  004204  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11542  004206  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11546  004208  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11547                           
 11548                           ;usb_device_cdc.c: 183: break;
 11549  00420A  0012               	return	
 11550  00420C                     l1903:
 11551                           
 11552                           ; BSR set to: 4
 11553                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11554  00420C  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11555  004210  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11556                           
 11557                           ; BSR set to: 4
 11558                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11559  004214  0E7E               	movlw	low _line_coding
 11560  004216  0101               	movlb	1	; () banked
 11561  004218  6FC9               	movwf	_outPipes& (0+255),b
 11562  00421A  0E03               	movlw	high _line_coding
 11563  00421C  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11564                           
 11565                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11566  00421E  0E00               	movlw	0
 11567  004220  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11568  004222  0E00               	movlw	0
 11569  004224  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11570                           
 11571                           ; BSR set to: 1
 11572                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11573  004226  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11574                           
 11575                           ;usb_device_cdc.c: 192: break;
 11576  004228  0012               	return	
 11577  00422A                     
 11578                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11579                           
 11580                           ; BSR set to: 1
 11581  00422A  0E7E               	movlw	low _line_coding
 11582  00422C  0100               	movlb	0	; () banked
 11583  00422E  6FB0               	movwf	_inPipes& (0+255),b
 11584  004230  0E03               	movlw	high _line_coding
 11585  004232  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11586                           
 11587                           ; BSR set to: 0
 11588  004234  0E00               	movlw	0
 11589  004236  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11590  004238  0E07               	movlw	7
 11591  00423A  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11592                           
 11593                           ; BSR set to: 0
 11594  00423C  0EC1               	movlw	193
 11595  00423E  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11596                           
 11597                           ;usb_device_cdc.c: 199: break;
 11598  004240  0012               	return	
 11599  004242                     l1905:
 11600                           
 11601                           ; BSR set to: 4
 11602                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11603  004242  C432 F1E1          	movff	1074,_control_signal_bitmap	;volatile
 11604                           
 11605                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11606  004246  0100               	movlb	0	; () banked
 11607  004248  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;usb_device_cdc.c: 261: }
 11611                           
 11612                           ; BSR set to: 0
 11613                           ;usb_device_cdc.c: 260: break;
 11614                           
 11615                           ;usb_device_cdc.c: 259: default:
 11616                           
 11617                           ;usb_device_cdc.c: 235: break;
 11618  00424A  0012               	return	
 11619  00424C                     l1899:
 11620                           
 11621                           ; BSR set to: 0
 11622  00424C  0104               	movlb	4	; () banked
 11623  00424E  5131               	movf	49,w,b	;volatile
 11624                           
 11625                           ; Switch size 1, requested type "space"
 11626                           ; Number of cases is 5, Range of values is 0 to 34
 11627                           ; switch strategies available:
 11628                           ; Name         Instructions Cycles
 11629                           ; simple_byte           16     9 (average)
 11630                           ;	Chosen strategy is simple_byte
 11631  004250  0A00               	xorlw	0	; case 0
 11632  004252  B4D8               	btfsc	status,2,c
 11633  004254  D7C8               	goto	l1900
 11634  004256  0A01               	xorlw	1	; case 1
 11635  004258  B4D8               	btfsc	status,2,c
 11636  00425A  D7D1               	goto	l1902
 11637  00425C  0A21               	xorlw	33	; case 32
 11638  00425E  B4D8               	btfsc	status,2,c
 11639  004260  D7D5               	goto	l1903
 11640  004262  0A01               	xorlw	1	; case 33
 11641  004264  B4D8               	btfsc	status,2,c
 11642  004266  D7E1               	goto	l1904
 11643  004268  0A03               	xorlw	3	; case 34
 11644  00426A  A4D8               	btfss	status,2,c
 11645  00426C  0012               	return	
 11646  00426E  D7E9               	goto	l1905
 11647  004270                     __end_of_USBCheckCDCRequest:
 11648                           	opt stack 0
 11649                           tosu	equ	0xFFF
 11650                           tosh	equ	0xFFE
 11651                           tosl	equ	0xFFD
 11652                           pclath	equ	0xFFA
 11653                           tblptru	equ	0xFF8
 11654                           tblptrh	equ	0xFF7
 11655                           tblptrl	equ	0xFF6
 11656                           tablat	equ	0xFF5
 11657                           prodh	equ	0xFF4
 11658                           prodl	equ	0xFF3
 11659                           intcon	equ	0xFF2
 11660                           intcon2	equ	0xFF1
 11661                           intcon3	equ	0xFF0
 11662                           indf0	equ	0xFEF
 11663                           postinc0	equ	0xFEE
 11664                           plusw0	equ	0xFEB
 11665                           fsr0h	equ	0xFEA
 11666                           fsr0l	equ	0xFE9
 11667                           wreg	equ	0xFE8
 11668                           postinc1	equ	0xFE6
 11669                           postdec1	equ	0xFE5
 11670                           fsr1h	equ	0xFE2
 11671                           fsr1l	equ	0xFE1
 11672                           indf2	equ	0xFDF
 11673                           postinc2	equ	0xFDE
 11674                           postdec2	equ	0xFDD
 11675                           plusw2	equ	0xFDB
 11676                           fsr2h	equ	0xFDA
 11677                           fsr2l	equ	0xFD9
 11678                           status	equ	0xFD8
 11679                           
 11680 ;; *************** function _CDCInitEP *****************
 11681 ;; Defined at:
 11682 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11683 ;; Parameters:    Size  Location     Type
 11684 ;;		None
 11685 ;; Auto vars:     Size  Location     Type
 11686 ;;		None
 11687 ;; Return value:  Size  Location     Type
 11688 ;;                  1    wreg      void 
 11689 ;; Registers used:
 11690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11691 ;; Tracked objects:
 11692 ;;		On entry : 0/0
 11693 ;;		On exit  : 0/0
 11694 ;;		Unchanged: 0/0
 11695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11700 ;;Total ram usage:        0 bytes
 11701 ;; Hardware stack levels used:    1
 11702 ;; Hardware stack levels required when called:   13
 11703 ;; This function calls:
 11704 ;;		_USBEnableEndpoint
 11705 ;;		_USBTransferOnePacket
 11706 ;; This function is called by:
 11707 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           	psect	text46
 11712  004F8A                     __ptext46:
 11713                           	opt stack 0
 11714  004F8A                     _CDCInitEP:
 11715                           	opt stack 12
 11716                           
 11717                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11718                           
 11719                           ;incstack = 0
 11720  004F8A  0E80               	movlw	128
 11721  004F8C  0103               	movlb	3	; () banked
 11722  004F8E  6F7E               	movwf	_line_coding& (0+255),b
 11723  004F90  0E25               	movlw	37
 11724  004F92  6F7F               	movwf	(_line_coding+1)& (0+255),b
 11725  004F94  0E00               	movlw	0
 11726  004F96  6F80               	movwf	(_line_coding+2)& (0+255),b
 11727  004F98  0E00               	movlw	0
 11728  004F9A  6F81               	movwf	(_line_coding+3)& (0+255),b
 11729                           
 11730                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11731  004F9C  0E00               	movlw	0
 11732  004F9E  6F82               	movwf	(_line_coding+4)& (0+255),b
 11733                           
 11734                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11735  004FA0  0E00               	movlw	0
 11736  004FA2  6F83               	movwf	(_line_coding+5)& (0+255),b
 11737                           
 11738                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11739  004FA4  0E08               	movlw	8
 11740  004FA6  6F84               	movwf	(_line_coding+6)& (0+255),b
 11741                           
 11742                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11743  004FA8  0E00               	movlw	0
 11744  004FAA  0100               	movlb	0	; () banked
 11745  004FAC  6FC6               	movwf	_cdc_rx_len& (0+255),b
 11746                           
 11747                           ; BSR set to: 0
 11748                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11749  004FAE  0E1A               	movlw	26
 11750  004FB0  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11751  004FB2  0E01               	movlw	1
 11752  004FB4  EC1F  F02D         	call	_USBEnableEndpoint
 11753                           
 11754                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11755  004FB8  0E1E               	movlw	30
 11756  004FBA  0100               	movlb	0	; () banked
 11757  004FBC  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11758  004FBE  0E02               	movlw	2
 11759  004FC0  EC1F  F02D         	call	_USBEnableEndpoint
 11760                           
 11761                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11762  004FC4  0E00               	movlw	0
 11763  004FC6  0100               	movlb	0	; () banked
 11764  004FC8  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11765  004FCA  0E00               	movlw	low _cdc_data_rx
 11766  004FCC  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11767  004FCE  0E05               	movlw	high _cdc_data_rx
 11768  004FD0  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11769  004FD2  0E40               	movlw	64
 11770  004FD4  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11771  004FD6  0E02               	movlw	2
 11772  004FD8  EC28  F020         	call	_USBTransferOnePacket
 11773  004FDC  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11774  004FE0  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11775                           
 11776                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11777  004FE4  0E00               	movlw	0
 11778  004FE6  0101               	movlb	1	; () banked
 11779  004FE8  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11780  004FEA  0E00               	movlw	0
 11781  004FEC  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11782                           
 11783                           ; BSR set to: 1
 11784                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11785  004FEE  0E00               	movlw	0
 11786  004FF0  0100               	movlb	0	; () banked
 11787  004FF2  6FC5               	movwf	_cdc_trf_state& (0+255),b
 11788                           
 11789                           ; BSR set to: 0
 11790  004FF4  0012               	return		;funcret
 11791  004FF6                     __end_of_CDCInitEP:
 11792                           	opt stack 0
 11793                           tosu	equ	0xFFF
 11794                           tosh	equ	0xFFE
 11795                           tosl	equ	0xFFD
 11796                           pclath	equ	0xFFA
 11797                           tblptru	equ	0xFF8
 11798                           tblptrh	equ	0xFF7
 11799                           tblptrl	equ	0xFF6
 11800                           tablat	equ	0xFF5
 11801                           prodh	equ	0xFF4
 11802                           prodl	equ	0xFF3
 11803                           intcon	equ	0xFF2
 11804                           intcon2	equ	0xFF1
 11805                           intcon3	equ	0xFF0
 11806                           indf0	equ	0xFEF
 11807                           postinc0	equ	0xFEE
 11808                           plusw0	equ	0xFEB
 11809                           fsr0h	equ	0xFEA
 11810                           fsr0l	equ	0xFE9
 11811                           wreg	equ	0xFE8
 11812                           postinc1	equ	0xFE6
 11813                           postdec1	equ	0xFE5
 11814                           fsr1h	equ	0xFE2
 11815                           fsr1l	equ	0xFE1
 11816                           indf2	equ	0xFDF
 11817                           postinc2	equ	0xFDE
 11818                           postdec2	equ	0xFDD
 11819                           plusw2	equ	0xFDB
 11820                           fsr2h	equ	0xFDA
 11821                           fsr2l	equ	0xFD9
 11822                           status	equ	0xFD8
 11823                           
 11824 ;; *************** function _USBEnableEndpoint *****************
 11825 ;; Defined at:
 11826 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11827 ;; Parameters:    Size  Location     Type
 11828 ;;  ep              1    wreg     unsigned char 
 11829 ;;  options         1   37[BANK0 ] unsigned char 
 11830 ;; Auto vars:     Size  Location     Type
 11831 ;;  ep              1   40[BANK0 ] unsigned char 
 11832 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11833 ;;		 -> UEP0(1), 
 11834 ;; Return value:  Size  Location     Type
 11835 ;;                  1    wreg      void 
 11836 ;; Registers used:
 11837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11838 ;; Tracked objects:
 11839 ;;		On entry : 0/0
 11840 ;;		On exit  : 0/0
 11841 ;;		Unchanged: 0/0
 11842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11843 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11844 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11846 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11847 ;;Total ram usage:        4 bytes
 11848 ;; Hardware stack levels used:    1
 11849 ;; Hardware stack levels required when called:   12
 11850 ;; This function calls:
 11851 ;;		_USBConfigureEndpoint
 11852 ;; This function is called by:
 11853 ;;		_CDCInitEP
 11854 ;; This function uses a non-reentrant model
 11855 ;;
 11856                           
 11857                           	psect	text47
 11858  005A3E                     __ptext47:
 11859                           	opt stack 0
 11860  005A3E                     _USBEnableEndpoint:
 11861                           	opt stack 12
 11862                           
 11863                           ; BSR set to: 0
 11864                           ;incstack = 0
 11865                           ;USBEnableEndpoint@ep stored from wreg
 11866  005A3E  0100               	movlb	0	; () banked
 11867  005A40  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11868                           
 11869                           ;usb_device.c: 898: unsigned char* p;
 11870                           ;usb_device.c: 902: if(options & 0x04)
 11871  005A42  0100               	movlb	0	; () banked
 11872  005A44  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11873  005A46  D005               	goto	l1640
 11874                           
 11875                           ; BSR set to: 0
 11876                           ;usb_device.c: 903: {
 11877                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11878  005A48  0E00               	movlw	0
 11879  005A4A  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11880  005A4C  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11881  005A4E  EC7B  F023         	call	_USBConfigureEndpoint
 11882  005A52                     l1640:
 11883                           
 11884                           ;usb_device.c: 905: }
 11885                           ;usb_device.c: 906: if(options & 0x02)
 11886  005A52  0100               	movlb	0	; () banked
 11887  005A54  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11888  005A56  D005               	goto	l1641
 11889                           
 11890                           ; BSR set to: 0
 11891                           ;usb_device.c: 907: {
 11892                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11893  005A58  0E01               	movlw	1
 11894  005A5A  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11895  005A5C  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11896  005A5E  EC7B  F023         	call	_USBConfigureEndpoint
 11897  005A62                     l1641:
 11898                           
 11899                           ;usb_device.c: 909: }
 11900                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11901  005A62  0100               	movlb	0	; () banked
 11902  005A64  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11903  005A66  0D01               	mullw	1
 11904  005A68  0E26               	movlw	38
 11905  005A6A  24F3               	addwf	prodl,w,c
 11906  005A6C  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11907  005A6E  0E0F               	movlw	15
 11908  005A70  20F4               	addwfc	prodh,w,c
 11909  005A72  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11910                           
 11911                           ; BSR set to: 0
 11912                           ;usb_device.c: 919: *p = options;
 11913  005A74  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11914  005A78  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11915  005A7C  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11916                           
 11917                           ; BSR set to: 0
 11918  005A80  0012               	return		;funcret
 11919  005A82                     __end_of_USBEnableEndpoint:
 11920                           	opt stack 0
 11921                           tosu	equ	0xFFF
 11922                           tosh	equ	0xFFE
 11923                           tosl	equ	0xFFD
 11924                           pclath	equ	0xFFA
 11925                           tblptru	equ	0xFF8
 11926                           tblptrh	equ	0xFF7
 11927                           tblptrl	equ	0xFF6
 11928                           tablat	equ	0xFF5
 11929                           prodh	equ	0xFF4
 11930                           prodl	equ	0xFF3
 11931                           intcon	equ	0xFF2
 11932                           intcon2	equ	0xFF1
 11933                           intcon3	equ	0xFF0
 11934                           indf0	equ	0xFEF
 11935                           postinc0	equ	0xFEE
 11936                           plusw0	equ	0xFEB
 11937                           fsr0h	equ	0xFEA
 11938                           fsr0l	equ	0xFE9
 11939                           wreg	equ	0xFE8
 11940                           postinc1	equ	0xFE6
 11941                           postdec1	equ	0xFE5
 11942                           fsr1h	equ	0xFE2
 11943                           fsr1l	equ	0xFE1
 11944                           indf2	equ	0xFDF
 11945                           postinc2	equ	0xFDE
 11946                           postdec2	equ	0xFDD
 11947                           plusw2	equ	0xFDB
 11948                           fsr2h	equ	0xFDA
 11949                           fsr2l	equ	0xFD9
 11950                           status	equ	0xFD8
 11951                           
 11952 ;; *************** function _USBConfigureEndpoint *****************
 11953 ;; Defined at:
 11954 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11955 ;; Parameters:    Size  Location     Type
 11956 ;;  EPNum           1    wreg     unsigned char 
 11957 ;;  direction       1   29[BANK0 ] unsigned char 
 11958 ;; Auto vars:     Size  Location     Type
 11959 ;;  EPNum           1   34[BANK0 ] unsigned char 
 11960 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 11961 ;;		 -> BDT(48), 
 11962 ;; Return value:  Size  Location     Type
 11963 ;;                  1    wreg      void 
 11964 ;; Registers used:
 11965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11966 ;; Tracked objects:
 11967 ;;		On entry : 0/0
 11968 ;;		On exit  : 0/0
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11971 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11972 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11973 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11974 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11975 ;;Total ram usage:        8 bytes
 11976 ;; Hardware stack levels used:    1
 11977 ;; Hardware stack levels required when called:   11
 11978 ;; This function calls:
 11979 ;;		Nothing
 11980 ;; This function is called by:
 11981 ;;		_USBEnableEndpoint
 11982 ;; This function uses a non-reentrant model
 11983 ;;
 11984                           
 11985                           	psect	text48
 11986  0046F6                     __ptext48:
 11987                           	opt stack 0
 11988  0046F6                     _USBConfigureEndpoint:
 11989                           	opt stack 12
 11990                           
 11991                           ; BSR set to: 0
 11992                           ;incstack = 0
 11993                           ;USBConfigureEndpoint@EPNum stored from wreg
 11994  0046F6  0100               	movlb	0	; () banked
 11995  0046F8  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 11996                           
 11997                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 11998                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 11999  0046FA  0E00               	movlw	0
 12000  0046FC  0100               	movlb	0	; () banked
 12001  0046FE  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12002  004700  0E04               	movlw	4
 12003  004702  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12007  004704  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12008  004706  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12009  004708  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12010  00470A  90D8               	bcf	status,0,c
 12011  00470C  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12012  00470E  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12013  004710  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12014  004712  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12015  004714  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12016  004716  90D8               	bcf	status,0,c
 12017  004718  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12018  00471A  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12019  00471C  90D8               	bcf	status,0,c
 12020  00471E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12021  004720  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12022  004722  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12023  004724  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12024  004726  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12025  004728  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12026  00472A  90D8               	bcf	status,0,c
 12027  00472C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12028  00472E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12029  004730  90D8               	bcf	status,0,c
 12030  004732  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12031  004734  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12032  004736  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12033  004738  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12034  00473A  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12035  00473C  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12036                           
 12037                           ; BSR set to: 0
 12038                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12039  00473E  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12040  004742  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12041  004746  9EDF               	bcf	indf2,7,c
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;usb_device.c: 1575: if(direction == 0)
 12045  004748  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12046  00474A  A4D8               	btfss	status,2,c
 12047  00474C  D007               	goto	l1676
 12048                           
 12049                           ; BSR set to: 0
 12050                           ;usb_device.c: 1576: {
 12051                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12052  00474E  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12053  004750  0D02               	mullw	2
 12054  004752  0E0E               	movlw	low _pBDTEntryOut
 12055  004754  24F3               	addwf	prodl,w,c
 12056  004756  6ED9               	movwf	fsr2l,c
 12057  004758  0E03               	movlw	high _pBDTEntryOut
 12058  00475A  D006               	goto	L10
 12059  00475C                     l1676:
 12060                           
 12061                           ; BSR set to: 0
 12062                           ;usb_device.c: 1579: else
 12063                           ;usb_device.c: 1580: {
 12064                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12065                           
 12066                           ; BSR set to: 0
 12067  00475C  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12068  00475E  0D02               	mullw	2
 12069  004760  0EB6               	movlw	low _pBDTEntryIn
 12070  004762  24F3               	addwf	prodl,w,c
 12071  004764  6ED9               	movwf	fsr2l,c
 12072  004766  0E00               	movlw	high _pBDTEntryIn
 12073  004768                     L10:
 12074  004768  20F4               	addwfc	prodh,w,c
 12075  00476A  6EDA               	movwf	fsr2h,c
 12076  00476C  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12077  004770  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12078                           
 12079                           ; BSR set to: 0
 12080                           ;usb_device.c: 1582: }
 12081                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12082                           
 12083                           ; BSR set to: 0
 12084  004774  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12085  004778  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12086  00477C  9CDF               	bcf	indf2,6,c
 12087                           
 12088                           ; BSR set to: 0
 12089                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12090  00477E  EE20 F004          	lfsr	2,4
 12091  004782  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12092  004784  26D9               	addwf	fsr2l,f,c
 12093  004786  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12094  004788  22DA               	addwfc	fsr2h,f,c
 12095  00478A  8CDF               	bsf	indf2,6,c
 12096                           
 12097                           ; BSR set to: 0
 12098  00478C  0012               	return		;funcret
 12099  00478E                     __end_of_USBConfigureEndpoint:
 12100                           	opt stack 0
 12101                           tosu	equ	0xFFF
 12102                           tosh	equ	0xFFE
 12103                           tosl	equ	0xFFD
 12104                           pclath	equ	0xFFA
 12105                           tblptru	equ	0xFF8
 12106                           tblptrh	equ	0xFF7
 12107                           tblptrl	equ	0xFF6
 12108                           tablat	equ	0xFF5
 12109                           prodh	equ	0xFF4
 12110                           prodl	equ	0xFF3
 12111                           intcon	equ	0xFF2
 12112                           intcon2	equ	0xFF1
 12113                           intcon3	equ	0xFF0
 12114                           indf0	equ	0xFEF
 12115                           postinc0	equ	0xFEE
 12116                           plusw0	equ	0xFEB
 12117                           fsr0h	equ	0xFEA
 12118                           fsr0l	equ	0xFE9
 12119                           wreg	equ	0xFE8
 12120                           postinc1	equ	0xFE6
 12121                           postdec1	equ	0xFE5
 12122                           fsr1h	equ	0xFE2
 12123                           fsr1l	equ	0xFE1
 12124                           indf2	equ	0xFDF
 12125                           postinc2	equ	0xFDE
 12126                           postdec2	equ	0xFDD
 12127                           plusw2	equ	0xFDB
 12128                           fsr2h	equ	0xFDA
 12129                           fsr2l	equ	0xFD9
 12130                           status	equ	0xFD8
 12131                           
 12132 ;; *************** function _USBCtrlTrfOutHandler *****************
 12133 ;; Defined at:
 12134 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12135 ;; Parameters:    Size  Location     Type
 12136 ;;		None
 12137 ;; Auto vars:     Size  Location     Type
 12138 ;;		None
 12139 ;; Return value:  Size  Location     Type
 12140 ;;                  1    wreg      void 
 12141 ;; Registers used:
 12142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12143 ;; Tracked objects:
 12144 ;;		On entry : 0/0
 12145 ;;		On exit  : 0/0
 12146 ;;		Unchanged: 0/0
 12147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12152 ;;Total ram usage:        0 bytes
 12153 ;; Hardware stack levels used:    1
 12154 ;; Hardware stack levels required when called:   13
 12155 ;; This function calls:
 12156 ;;		_USBCtrlTrfRxService
 12157 ;; This function is called by:
 12158 ;;		_USBCtrlEPService
 12159 ;; This function uses a non-reentrant model
 12160 ;;
 12161                           
 12162                           	psect	text49
 12163  0050CA                     __ptext49:
 12164                           	opt stack 0
 12165  0050CA                     _USBCtrlTrfOutHandler:
 12166                           	opt stack 12
 12167                           
 12168                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;incstack = 0
 12172  0050CA  0E02               	movlw	2
 12173  0050CC  0100               	movlb	0	; () banked
 12174  0050CE  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12175  0050D0  A4D8               	btfss	status,2,c
 12176  0050D2  D003               	goto	l1782
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;usb_device.c: 2558: {
 12180                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12181  0050D4  ECA6  F017         	call	_USBCtrlTrfRxService	;wreg free
 12182                           
 12183                           ;usb_device.c: 2560: }
 12184  0050D8  0012               	return	
 12185  0050DA                     l1782:
 12186                           
 12187                           ;usb_device.c: 2561: else
 12188                           ;usb_device.c: 2562: {
 12189                           ;usb_device.c: 2565: controlTransferState = 0;
 12190  0050DA  0E00               	movlw	0
 12191  0050DC  0100               	movlb	0	; () banked
 12192  0050DE  6FCC               	movwf	_controlTransferState& (0+255),b
 12193                           
 12194                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12195  0050E0  0101               	movlb	1	; () banked
 12196  0050E2  51E4               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12197  0050E4  A4D8               	btfss	status,2,c
 12198  0050E6  D020               	goto	l1784
 12199                           
 12200                           ; BSR set to: 1
 12201                           ;usb_device.c: 2573: {
 12202                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12203  0050E8  0100               	movlb	0	; () banked
 12204  0050EA  EE20 F001          	lfsr	2,1
 12205  0050EE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12206  0050F0  26D9               	addwf	fsr2l,f,c
 12207  0050F2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12208  0050F4  22DA               	addwfc	fsr2h,f,c
 12209  0050F6  0E08               	movlw	8
 12210  0050F8  6EDF               	movwf	indf2,c
 12211                           
 12212                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12213  0050FA  EE20 F002          	lfsr	2,2
 12214  0050FE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12215  005100  26D9               	addwf	fsr2l,f,c
 12216  005102  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12217  005104  22DA               	addwfc	fsr2h,f,c
 12218  005106  0E30               	movlw	48
 12219  005108  6EDE               	movwf	postinc2,c
 12220  00510A  0E04               	movlw	4
 12221  00510C  6EDD               	movwf	postdec2,c
 12222                           
 12223                           ; BSR set to: 0
 12224                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12225  00510E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12226  005112  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12227  005116  0E0C               	movlw	12
 12228  005118  6EDF               	movwf	indf2,c
 12229                           
 12230                           ; BSR set to: 0
 12231                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12232  00511A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12233  00511E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12234  005122  0E00               	movlw	0
 12235  005124  8EDB               	bsf	plusw2,7,c
 12236                           
 12237                           ;usb_device.c: 2578: }
 12238  005126  0012               	return	
 12239  005128                     l1784:
 12240                           
 12241                           ;usb_device.c: 2579: else
 12242                           ;usb_device.c: 2580: {
 12243                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12244                           
 12245                           ; BSR set to: 0
 12246  005128  0E00               	movlw	0
 12247  00512A  0101               	movlb	1	; () banked
 12248  00512C  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12249                           
 12250                           ; BSR set to: 1
 12251  00512E  0012               	return	
 12252  005130                     __end_of_USBCtrlTrfOutHandler:
 12253                           	opt stack 0
 12254                           tosu	equ	0xFFF
 12255                           tosh	equ	0xFFE
 12256                           tosl	equ	0xFFD
 12257                           pclath	equ	0xFFA
 12258                           tblptru	equ	0xFF8
 12259                           tblptrh	equ	0xFF7
 12260                           tblptrl	equ	0xFF6
 12261                           tablat	equ	0xFF5
 12262                           prodh	equ	0xFF4
 12263                           prodl	equ	0xFF3
 12264                           intcon	equ	0xFF2
 12265                           intcon2	equ	0xFF1
 12266                           intcon3	equ	0xFF0
 12267                           indf0	equ	0xFEF
 12268                           postinc0	equ	0xFEE
 12269                           plusw0	equ	0xFEB
 12270                           fsr0h	equ	0xFEA
 12271                           fsr0l	equ	0xFE9
 12272                           wreg	equ	0xFE8
 12273                           postinc1	equ	0xFE6
 12274                           postdec1	equ	0xFE5
 12275                           fsr1h	equ	0xFE2
 12276                           fsr1l	equ	0xFE1
 12277                           indf2	equ	0xFDF
 12278                           postinc2	equ	0xFDE
 12279                           postdec2	equ	0xFDD
 12280                           plusw2	equ	0xFDB
 12281                           fsr2h	equ	0xFDA
 12282                           fsr2l	equ	0xFD9
 12283                           status	equ	0xFD8
 12284                           
 12285 ;; *************** function _USBCtrlTrfRxService *****************
 12286 ;; Defined at:
 12287 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12288 ;; Parameters:    Size  Location     Type
 12289 ;;		None
 12290 ;; Auto vars:     Size  Location     Type
 12291 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12292 ;;  i               1   29[BANK0 ] unsigned char 
 12293 ;; Return value:  Size  Location     Type
 12294 ;;                  1    wreg      void 
 12295 ;; Registers used:
 12296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12297 ;; Tracked objects:
 12298 ;;		On entry : 0/0
 12299 ;;		On exit  : 0/0
 12300 ;;		Unchanged: 0/0
 12301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12303 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12305 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12306 ;;Total ram usage:        2 bytes
 12307 ;; Hardware stack levels used:    1
 12308 ;; Hardware stack levels required when called:   12
 12309 ;; This function calls:
 12310 ;;		_USBCtrlEPAllowStatusStage
 12311 ;; This function is called by:
 12312 ;;		_USBCtrlTrfOutHandler
 12313 ;; This function uses a non-reentrant model
 12314 ;;
 12315                           
 12316                           	psect	text50
 12317  002F4C                     __ptext50:
 12318                           	opt stack 0
 12319  002F4C                     _USBCtrlTrfRxService:
 12320                           	opt stack 12
 12321                           
 12322                           ;usb_device.c: 1872: uint8_t byteToRead;
 12323                           ;usb_device.c: 1873: uint8_t i;
 12324                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12325                           
 12326                           ;incstack = 0
 12327  002F4C  0100               	movlb	0	; () banked
 12328  002F4E  EE20 F001          	lfsr	2,1
 12329  002F52  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12330  002F54  26D9               	addwf	fsr2l,f,c
 12331  002F56  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12332  002F58  22DA               	addwfc	fsr2h,f,c
 12333  002F5A  50DF               	movf	indf2,w,c
 12334  002F5C  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12335                           
 12336                           ; BSR set to: 0
 12337                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12338  002F5E  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12339  002F60  0101               	movlb	1	; () banked
 12340  002F62  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12341  002F64  0E00               	movlw	0
 12342  002F66  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12343  002F68  A0D8               	btfss	status,0,c
 12344                           
 12345                           ; BSR set to: 1
 12346                           ;usb_device.c: 1884: {
 12347                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12348  002F6A  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12349                           
 12350                           ; BSR set to: 1
 12351                           ;usb_device.c: 1886: }
 12352                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12353                           
 12354                           ; BSR set to: 1
 12355  002F6E  0100               	movlb	0	; () banked
 12356  002F70  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12357  002F72  0101               	movlb	1	; () banked
 12358  002F74  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12359  002F76  0E00               	movlw	0
 12360  002F78  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12361                           
 12362                           ; BSR set to: 1
 12363                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12364  002F7A  0E00               	movlw	0
 12365  002F7C  0100               	movlb	0	; () banked
 12366  002F7E  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12367  002F80  D013               	goto	l1710
 12368  002F82                     
 12369                           ; BSR set to: 0
 12370                           ;usb_device.c: 1893: {
 12371                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12372                           
 12373                           ; BSR set to: 0
 12374  002F82  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12375  002F84  0D01               	mullw	1
 12376  002F86  0E38               	movlw	56
 12377  002F88  24F3               	addwf	prodl,w,c
 12378  002F8A  6ED9               	movwf	fsr2l,c
 12379  002F8C  0E04               	movlw	4
 12380  002F8E  20F4               	addwfc	prodh,w,c
 12381  002F90  6EDA               	movwf	fsr2h,c
 12382  002F92  C1C9  FFE1         	movff	_outPipes,fsr1l
 12383  002F96  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12384  002F9A  CFDF FFE7          	movff	indf2,indf1
 12385                           
 12386                           ; BSR set to: 0
 12387  002F9E  0101               	movlb	1	; () banked
 12388  002FA0  4BC9               	infsnz	_outPipes& (0+255),f,b
 12389  002FA2  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12390                           
 12391                           ; BSR set to: 1
 12392  002FA4  0100               	movlb	0	; () banked
 12393  002FA6  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12394  002FA8                     l1710:
 12395                           
 12396                           ; BSR set to: 0
 12397                           
 12398                           ; BSR set to: 0
 12399  002FA8  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12400  002FAA  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12401  002FAC  A0D8               	btfss	status,0,c
 12402  002FAE  D7E9               	goto	l1711
 12403                           
 12404                           ; BSR set to: 0
 12405                           ;usb_device.c: 1895: }
 12406                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12407                           
 12408                           ; BSR set to: 0
 12409  002FB0  0101               	movlb	1	; () banked
 12410  002FB2  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12411  002FB4  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12412  002FB6  B4D8               	btfsc	status,2,c
 12413  002FB8  D033               	goto	l1713
 12414                           
 12415                           ; BSR set to: 1
 12416                           ;usb_device.c: 1900: {
 12417                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12418  002FBA  0100               	movlb	0	; () banked
 12419  002FBC  EE20 F001          	lfsr	2,1
 12420  002FC0  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12421  002FC2  26D9               	addwf	fsr2l,f,c
 12422  002FC4  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12423  002FC6  22DA               	addwfc	fsr2h,f,c
 12424  002FC8  0E08               	movlw	8
 12425  002FCA  6EDF               	movwf	indf2,c
 12426                           
 12427                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12428  002FCC  EE20 F002          	lfsr	2,2
 12429  002FD0  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12430  002FD2  26D9               	addwf	fsr2l,f,c
 12431  002FD4  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12432  002FD6  22DA               	addwfc	fsr2h,f,c
 12433  002FD8  0E38               	movlw	56
 12434  002FDA  6EDE               	movwf	postinc2,c
 12435  002FDC  0E04               	movlw	4
 12436  002FDE  6EDD               	movwf	postdec2,c
 12437                           
 12438                           ; BSR set to: 0
 12439                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12440  002FE0  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12441  002FE4  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12442  002FE8  BCDF               	btfsc	indf2,6,c
 12443  002FEA  D00D               	goto	l1714
 12444                           
 12445                           ; BSR set to: 0
 12446                           ;usb_device.c: 1904: {
 12447                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12448  002FEC  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12449  002FF0  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12450  002FF4  0E48               	movlw	72
 12451  002FF6  6EDF               	movwf	indf2,c
 12452                           
 12453                           ; BSR set to: 0
 12454                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12455  002FF8  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12456  002FFC  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12457  003000  0E00               	movlw	0
 12458  003002  8EDB               	bsf	plusw2,7,c
 12459                           
 12460                           ;usb_device.c: 1907: }
 12461  003004  0012               	return	
 12462  003006                     l1714:
 12463                           
 12464                           ; BSR set to: 0
 12465                           ;usb_device.c: 1908: else
 12466                           ;usb_device.c: 1909: {
 12467                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12468                           
 12469                           ; BSR set to: 0
 12470  003006  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12471  00300A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12472  00300E  0E08               	movlw	8
 12473  003010  6EDF               	movwf	indf2,c
 12474                           
 12475                           ; BSR set to: 0
 12476                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12477  003012  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12478  003016  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12479  00301A  0E00               	movlw	0
 12480  00301C  8EDB               	bsf	plusw2,7,c
 12481                           
 12482                           ; BSR set to: 0
 12483                           ;usb_device.c: 1912: }
 12484                           ;usb_device.c: 1913: }
 12485  00301E  0012               	return	
 12486  003020                     l1713:
 12487                           
 12488                           ;usb_device.c: 1914: else
 12489                           ;usb_device.c: 1915: {
 12490                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12491                           
 12492                           ; BSR set to: 0
 12493  003020  0100               	movlb	0	; () banked
 12494  003022  EE20 F001          	lfsr	2,1
 12495  003026  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12496  003028  26D9               	addwf	fsr2l,f,c
 12497  00302A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12498  00302C  22DA               	addwfc	fsr2h,f,c
 12499  00302E  0E08               	movlw	8
 12500  003030  6EDF               	movwf	indf2,c
 12501                           
 12502                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12503  003032  EE20 F002          	lfsr	2,2
 12504  003036  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12505  003038  26D9               	addwf	fsr2l,f,c
 12506  00303A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12507  00303C  22DA               	addwfc	fsr2h,f,c
 12508  00303E  0E30               	movlw	48
 12509  003040  6EDE               	movwf	postinc2,c
 12510  003042  0E04               	movlw	4
 12511  003044  6EDD               	movwf	postdec2,c
 12512                           
 12513                           ; BSR set to: 0
 12514                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12515  003046  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12516  00304A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12517  00304E  0E04               	movlw	4
 12518  003050  6EDF               	movwf	indf2,c
 12519                           
 12520                           ; BSR set to: 0
 12521                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12522  003052  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12523  003056  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12524  00305A  0E00               	movlw	0
 12525  00305C  8EDB               	bsf	plusw2,7,c
 12526                           
 12527                           ; BSR set to: 0
 12528                           ;usb_device.c: 1944: }
 12529                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12530                           
 12531                           ; BSR set to: 0
 12532  00305E  0101               	movlb	1	; () banked
 12533  003060  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12534                           
 12535                           ; BSR set to: 1
 12536                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12537  003062  0100               	movlb	0	; () banked
 12538  003064  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12539  003066  A4D8               	btfss	status,2,c
 12540  003068  0012               	return	
 12541                           
 12542                           ; BSR set to: 0
 12543                           ;usb_device.c: 1960: {
 12544                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12545  00306A  EC09  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12546  00306E  0012               	return	
 12547  003070                     __end_of_USBCtrlTrfRxService:
 12548                           	opt stack 0
 12549                           tosu	equ	0xFFF
 12550                           tosh	equ	0xFFE
 12551                           tosl	equ	0xFFD
 12552                           pclath	equ	0xFFA
 12553                           tblptru	equ	0xFF8
 12554                           tblptrh	equ	0xFF7
 12555                           tblptrl	equ	0xFF6
 12556                           tablat	equ	0xFF5
 12557                           prodh	equ	0xFF4
 12558                           prodl	equ	0xFF3
 12559                           intcon	equ	0xFF2
 12560                           intcon2	equ	0xFF1
 12561                           intcon3	equ	0xFF0
 12562                           indf0	equ	0xFEF
 12563                           postinc0	equ	0xFEE
 12564                           plusw0	equ	0xFEB
 12565                           fsr0h	equ	0xFEA
 12566                           fsr0l	equ	0xFE9
 12567                           wreg	equ	0xFE8
 12568                           indf1	equ	0xFE7
 12569                           postinc1	equ	0xFE6
 12570                           postdec1	equ	0xFE5
 12571                           fsr1h	equ	0xFE2
 12572                           fsr1l	equ	0xFE1
 12573                           indf2	equ	0xFDF
 12574                           postinc2	equ	0xFDE
 12575                           postdec2	equ	0xFDD
 12576                           plusw2	equ	0xFDB
 12577                           fsr2h	equ	0xFDA
 12578                           fsr2l	equ	0xFD9
 12579                           status	equ	0xFD8
 12580                           
 12581 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12582 ;; Defined at:
 12583 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12584 ;; Parameters:    Size  Location     Type
 12585 ;;		None
 12586 ;; Auto vars:     Size  Location     Type
 12587 ;;		None
 12588 ;; Return value:  Size  Location     Type
 12589 ;;                  1    wreg      void 
 12590 ;; Registers used:
 12591 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12592 ;; Tracked objects:
 12593 ;;		On entry : 0/0
 12594 ;;		On exit  : 0/0
 12595 ;;		Unchanged: 0/0
 12596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12601 ;;Total ram usage:        0 bytes
 12602 ;; Hardware stack levels used:    1
 12603 ;; Hardware stack levels required when called:   11
 12604 ;; This function calls:
 12605 ;;		Nothing
 12606 ;; This function is called by:
 12607 ;;		_USBDeviceTasks
 12608 ;;		_USBCtrlEPServiceComplete
 12609 ;;		_USBCtrlTrfRxService
 12610 ;; This function uses a non-reentrant model
 12611 ;;
 12612                           
 12613                           	psect	text51
 12614  003A12                     __ptext51:
 12615                           	opt stack 0
 12616  003A12                     _USBCtrlEPAllowStatusStage:
 12617                           	opt stack 12
 12618                           
 12619                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12620                           
 12621                           ;incstack = 0
 12622  003A12  0100               	movlb	0	; () banked
 12623  003A14  51C8               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 12624  003A16  A4D8               	btfss	status,2,c
 12625  003A18  0012               	return	
 12626                           
 12627                           ; BSR set to: 0
 12628                           ;usb_device.c: 1442: {
 12629                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12630  003A1A  0E01               	movlw	1
 12631  003A1C  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12632                           
 12633                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12634  003A1E  51C7               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 12635  003A20  A4D8               	btfss	status,2,c
 12636  003A22  0012               	return	
 12637                           
 12638                           ; BSR set to: 0
 12639                           ;usb_device.c: 1445: {
 12640                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12641  003A24  0E01               	movlw	1
 12642  003A26  6FC7               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12643                           
 12644                           ; BSR set to: 0
 12645                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12646  003A28  0E02               	movlw	2
 12647  003A2A  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12648  003A2C  A4D8               	btfss	status,2,c
 12649  003A2E  D015               	goto	l1664
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;usb_device.c: 1451: {
 12653                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12654  003A30  EE20 F001          	lfsr	2,1
 12655  003A34  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12656  003A36  26D9               	addwf	fsr2l,f,c
 12657  003A38  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12658  003A3A  22DA               	addwfc	fsr2h,f,c
 12659  003A3C  0E00               	movlw	0
 12660  003A3E  6EDF               	movwf	indf2,c
 12661                           
 12662                           ; BSR set to: 0
 12663                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12664  003A40  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12665  003A44  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12666  003A48  0E48               	movlw	72
 12667  003A4A  6EDF               	movwf	indf2,c
 12668                           
 12669                           ; BSR set to: 0
 12670                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12671  003A4C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12672  003A50  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12673  003A54  0E00               	movlw	0
 12674  003A56  8EDB               	bsf	plusw2,7,c
 12675                           
 12676                           ;usb_device.c: 1455: }
 12677  003A58  0012               	return	
 12678  003A5A                     l1664:
 12679                           
 12680                           ; BSR set to: 0
 12681                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12682                           
 12683                           ; BSR set to: 0
 12684  003A5A  05CC               	decf	_controlTransferState& (0+255),w,b
 12685  003A5C  A4D8               	btfss	status,2,c
 12686  003A5E  0012               	return	
 12687                           
 12688                           ; BSR set to: 0
 12689                           ;usb_device.c: 1457: {
 12690                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12691  003A60  0E00               	movlw	0
 12692  003A62  0101               	movlb	1	; () banked
 12693  003A64  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12694                           
 12695                           ; BSR set to: 1
 12696                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12697  003A66  0100               	movlb	0	; () banked
 12698  003A68  EE20 F001          	lfsr	2,1
 12699  003A6C  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12700  003A6E  26D9               	addwf	fsr2l,f,c
 12701  003A70  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12702  003A72  22DA               	addwfc	fsr2h,f,c
 12703  003A74  0E08               	movlw	8
 12704  003A76  6EDF               	movwf	indf2,c
 12705                           
 12706                           ; BSR set to: 0
 12707                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12708  003A78  EE20 F002          	lfsr	2,2
 12709  003A7C  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12710  003A7E  26D9               	addwf	fsr2l,f,c
 12711  003A80  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12712  003A82  22DA               	addwfc	fsr2h,f,c
 12713  003A84  0E30               	movlw	48
 12714  003A86  6EDE               	movwf	postinc2,c
 12715  003A88  0E04               	movlw	4
 12716  003A8A  6EDD               	movwf	postdec2,c
 12717                           
 12718                           ; BSR set to: 0
 12719                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12720  003A8C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12721  003A90  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12722  003A94  0E04               	movlw	4
 12723  003A96  6EDF               	movwf	indf2,c
 12724                           
 12725                           ; BSR set to: 0
 12726                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12727  003A98  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12728  003A9C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12729  003AA0  0E00               	movlw	0
 12730  003AA2  8EDB               	bsf	plusw2,7,c
 12731                           
 12732                           ; BSR set to: 0
 12733                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12734  003AA4  0E01               	movlw	1
 12735  003AA6  0101               	movlb	1	; () banked
 12736  003AA8  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12737                           
 12738                           ; BSR set to: 1
 12739                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12740  003AAA  0100               	movlb	0	; () banked
 12741  003AAC  EE20 F001          	lfsr	2,1
 12742  003AB0  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12743  003AB2  26D9               	addwf	fsr2l,f,c
 12744  003AB4  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12745  003AB6  22DA               	addwfc	fsr2h,f,c
 12746  003AB8  0E08               	movlw	8
 12747  003ABA  6EDF               	movwf	indf2,c
 12748                           
 12749                           ; BSR set to: 0
 12750                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12751  003ABC  EE20 F002          	lfsr	2,2
 12752  003AC0  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12753  003AC2  26D9               	addwf	fsr2l,f,c
 12754  003AC4  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12755  003AC6  22DA               	addwfc	fsr2h,f,c
 12756  003AC8  0E30               	movlw	48
 12757  003ACA  6EDE               	movwf	postinc2,c
 12758  003ACC  0E04               	movlw	4
 12759  003ACE  6EDD               	movwf	postdec2,c
 12760                           
 12761                           ; BSR set to: 0
 12762                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12763  003AD0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12764  003AD4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12765  003AD8  0E80               	movlw	128
 12766  003ADA  6EDF               	movwf	indf2,c
 12767                           
 12768                           ; BSR set to: 0
 12769                           
 12770                           ; BSR set to: 0
 12771                           
 12772                           ; BSR set to: 0
 12773  003ADC  0012               	return	
 12774  003ADE                     __end_of_USBCtrlEPAllowStatusStage:
 12775                           	opt stack 0
 12776                           tosu	equ	0xFFF
 12777                           tosh	equ	0xFFE
 12778                           tosl	equ	0xFFD
 12779                           pclath	equ	0xFFA
 12780                           tblptru	equ	0xFF8
 12781                           tblptrh	equ	0xFF7
 12782                           tblptrl	equ	0xFF6
 12783                           tablat	equ	0xFF5
 12784                           prodh	equ	0xFF4
 12785                           prodl	equ	0xFF3
 12786                           intcon	equ	0xFF2
 12787                           intcon2	equ	0xFF1
 12788                           intcon3	equ	0xFF0
 12789                           indf0	equ	0xFEF
 12790                           postinc0	equ	0xFEE
 12791                           plusw0	equ	0xFEB
 12792                           fsr0h	equ	0xFEA
 12793                           fsr0l	equ	0xFE9
 12794                           wreg	equ	0xFE8
 12795                           indf1	equ	0xFE7
 12796                           postinc1	equ	0xFE6
 12797                           postdec1	equ	0xFE5
 12798                           fsr1h	equ	0xFE2
 12799                           fsr1l	equ	0xFE1
 12800                           indf2	equ	0xFDF
 12801                           postinc2	equ	0xFDE
 12802                           postdec2	equ	0xFDD
 12803                           plusw2	equ	0xFDB
 12804                           fsr2h	equ	0xFDA
 12805                           fsr2l	equ	0xFD9
 12806                           status	equ	0xFD8
 12807                           
 12808 ;; *************** function _USBCtrlTrfInHandler *****************
 12809 ;; Defined at:
 12810 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12811 ;; Parameters:    Size  Location     Type
 12812 ;;		None
 12813 ;; Auto vars:     Size  Location     Type
 12814 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12815 ;; Return value:  Size  Location     Type
 12816 ;;                  1    wreg      void 
 12817 ;; Registers used:
 12818 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12819 ;; Tracked objects:
 12820 ;;		On entry : 0/0
 12821 ;;		On exit  : 0/0
 12822 ;;		Unchanged: 0/0
 12823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12825 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12827 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12828 ;;Total ram usage:        1 bytes
 12829 ;; Hardware stack levels used:    1
 12830 ;; Hardware stack levels required when called:   12
 12831 ;; This function calls:
 12832 ;;		_USBCtrlTrfTxService
 12833 ;; This function is called by:
 12834 ;;		_USBCtrlEPService
 12835 ;; This function uses a non-reentrant model
 12836 ;;
 12837                           
 12838                           	psect	text52
 12839  003F8E                     __ptext52:
 12840                           	opt stack 0
 12841  003F8E                     _USBCtrlTrfInHandler:
 12842                           	opt stack 13
 12843                           
 12844                           ;usb_device.c: 2611: uint8_t lastDTS;
 12845                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12846                           
 12847                           ; BSR set to: 0
 12848                           ;incstack = 0
 12849  003F8E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12850  003F92  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12851  003F96  0100               	movlb	0	; () banked
 12852  003F98  0E00               	movlw	0
 12853  003F9A  BCDF               	btfsc	indf2,6,c
 12854  003F9C  0E01               	movlw	1
 12855  003F9E  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12859  003FA0  0E04               	movlw	4
 12860  003FA2  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 12861                           
 12862                           ; BSR set to: 0
 12863                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12864  003FA4  0E08               	movlw	8
 12865  003FA6  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 12866  003FA8  A4D8               	btfss	status,2,c
 12867  003FAA  D00D               	goto	l1791
 12868                           
 12869                           ; BSR set to: 0
 12870                           ;usb_device.c: 2622: {
 12871                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12872  003FAC  0104               	movlb	4	; () banked
 12873  003FAE  5132               	movf	50,w,b	;volatile
 12874  003FB0  0B7F               	andlw	127
 12875  003FB2  010F               	movlb	15	; () banked
 12876  003FB4  6F38               	movwf	56,b	;volatile
 12877                           
 12878                           ; BSR set to: 15
 12879                           ;usb_device.c: 2624: if(UADDR != 0u)
 12880  003FB6  5138               	movf	56,w,b	;volatile
 12881  003FB8  B4D8               	btfsc	status,2,c
 12882  003FBA  D002               	goto	l1790
 12883                           
 12884                           ; BSR set to: 15
 12885                           ;usb_device.c: 2625: {
 12886                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12887  003FBC  0E10               	movlw	16
 12888  003FBE  D001               	goto	L11
 12889  003FC0                     l1790:
 12890                           
 12891                           ;usb_device.c: 2628: else
 12892                           ;usb_device.c: 2629: {
 12893                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12894                           
 12895                           ; BSR set to: 0
 12896  003FC0  0E04               	movlw	4
 12897  003FC2                     L11:
 12898  003FC2  0100               	movlb	0	; () banked
 12899  003FC4  6FCE               	movwf	_USBDeviceState& (0+255),b
 12900  003FC6                     l1791:
 12901                           
 12902                           ; BSR set to: 0
 12903                           ;usb_device.c: 2631: }
 12904                           ;usb_device.c: 2632: }
 12905                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12906                           
 12907                           ; BSR set to: 0
 12908                           
 12909                           ; BSR set to: 0
 12910  003FC6  05CC               	decf	_controlTransferState& (0+255),w,b
 12911  003FC8  A4D8               	btfss	status,2,c
 12912  003FCA  D03B               	goto	l1792
 12913                           
 12914                           ; BSR set to: 0
 12915                           ;usb_device.c: 2636: {
 12916                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12917  003FCC  EE20 F002          	lfsr	2,2
 12918  003FD0  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12919  003FD2  26D9               	addwf	fsr2l,f,c
 12920  003FD4  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12921  003FD6  22DA               	addwfc	fsr2h,f,c
 12922  003FD8  0E38               	movlw	56
 12923  003FDA  6EDE               	movwf	postinc2,c
 12924  003FDC  0E04               	movlw	4
 12925  003FDE  6EDD               	movwf	postdec2,c
 12926                           
 12927                           ; BSR set to: 0
 12928                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12929  003FE0  ECFB  F01A         	call	_USBCtrlTrfTxService	;wreg free
 12930                           
 12931                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12932  003FE4  0E02               	movlw	2
 12933  003FE6  0100               	movlb	0	; () banked
 12934  003FE8  19CD               	xorwf	_shortPacketStatus& (0+255),w,b
 12935  003FEA  A4D8               	btfss	status,2,c
 12936  003FEC  D00D               	goto	l1793
 12937                           
 12938                           ; BSR set to: 0
 12939                           ;usb_device.c: 2645: {
 12940                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12941  003FEE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12942  003FF2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12943  003FF6  0E04               	movlw	4
 12944  003FF8  6EDF               	movwf	indf2,c
 12945                           
 12946                           ; BSR set to: 0
 12947                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12948  003FFA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12949  003FFE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12950  004002  0E00               	movlw	0
 12951  004004  8EDB               	bsf	plusw2,7,c
 12952                           
 12953                           ;usb_device.c: 2650: }
 12954  004006  0012               	return	
 12955  004008                     l1793:
 12956                           
 12957                           ; BSR set to: 0
 12958                           ;usb_device.c: 2651: else
 12959                           ;usb_device.c: 2652: {
 12960                           ;usb_device.c: 2653: if(lastDTS == 0)
 12961                           
 12962                           ; BSR set to: 0
 12963  004008  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 12964  00400A  A4D8               	btfss	status,2,c
 12965  00400C  D00D               	goto	l1795
 12966                           
 12967                           ; BSR set to: 0
 12968                           ;usb_device.c: 2654: {
 12969                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12970  00400E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12971  004012  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12972  004016  0E48               	movlw	72
 12973  004018  6EDF               	movwf	indf2,c
 12974                           
 12975                           ; BSR set to: 0
 12976                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12977  00401A  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12978  00401E  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12979  004022  0E00               	movlw	0
 12980  004024  8EDB               	bsf	plusw2,7,c
 12981                           
 12982                           ;usb_device.c: 2657: }
 12983  004026  0012               	return	
 12984  004028                     l1795:
 12985                           
 12986                           ; BSR set to: 0
 12987                           ;usb_device.c: 2658: else
 12988                           ;usb_device.c: 2659: {
 12989                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 12990                           
 12991                           ; BSR set to: 0
 12992  004028  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12993  00402C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12994  004030  0E08               	movlw	8
 12995  004032  6EDF               	movwf	indf2,c
 12996                           
 12997                           ; BSR set to: 0
 12998                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12999  004034  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13000  004038  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13001  00403C  0E00               	movlw	0
 13002  00403E  8EDB               	bsf	plusw2,7,c
 13003                           
 13004                           ; BSR set to: 0
 13005                           ;usb_device.c: 2662: }
 13006                           ;usb_device.c: 2663: }
 13007                           ;usb_device.c: 2664: }
 13008                           
 13009                           ; BSR set to: 0
 13010  004040  0012               	return	
 13011  004042                     l1792:
 13012                           
 13013                           ; BSR set to: 0
 13014                           ;usb_device.c: 2665: else
 13015                           ;usb_device.c: 2666: {
 13016                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13017  004042  0101               	movlb	1	; () banked
 13018  004044  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13019                           
 13020                           ; BSR set to: 1
 13021                           ;usb_device.c: 2675: }
 13022                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13023                           
 13024                           ; BSR set to: 1
 13025  004046  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13026                           
 13027                           ; BSR set to: 1
 13028                           ;usb_device.c: 2677: }
 13029                           ;usb_device.c: 2679: controlTransferState = 0;
 13030                           
 13031                           ; BSR set to: 1
 13032  004048  0E00               	movlw	0
 13033  00404A  0100               	movlb	0	; () banked
 13034  00404C  6FCC               	movwf	_controlTransferState& (0+255),b
 13035  00404E  0012               	return	
 13036  004050                     __end_of_USBCtrlTrfInHandler:
 13037                           	opt stack 0
 13038                           tosu	equ	0xFFF
 13039                           tosh	equ	0xFFE
 13040                           tosl	equ	0xFFD
 13041                           pclath	equ	0xFFA
 13042                           tblptru	equ	0xFF8
 13043                           tblptrh	equ	0xFF7
 13044                           tblptrl	equ	0xFF6
 13045                           tablat	equ	0xFF5
 13046                           prodh	equ	0xFF4
 13047                           prodl	equ	0xFF3
 13048                           intcon	equ	0xFF2
 13049                           intcon2	equ	0xFF1
 13050                           intcon3	equ	0xFF0
 13051                           indf0	equ	0xFEF
 13052                           postinc0	equ	0xFEE
 13053                           plusw0	equ	0xFEB
 13054                           fsr0h	equ	0xFEA
 13055                           fsr0l	equ	0xFE9
 13056                           wreg	equ	0xFE8
 13057                           indf1	equ	0xFE7
 13058                           postinc1	equ	0xFE6
 13059                           postdec1	equ	0xFE5
 13060                           fsr1h	equ	0xFE2
 13061                           fsr1l	equ	0xFE1
 13062                           indf2	equ	0xFDF
 13063                           postinc2	equ	0xFDE
 13064                           postdec2	equ	0xFDD
 13065                           plusw2	equ	0xFDB
 13066                           fsr2h	equ	0xFDA
 13067                           fsr2l	equ	0xFD9
 13068                           status	equ	0xFD8
 13069                           
 13070 ;; *************** function _USBCtrlTrfTxService *****************
 13071 ;; Defined at:
 13072 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13073 ;; Parameters:    Size  Location     Type
 13074 ;;		None
 13075 ;; Auto vars:     Size  Location     Type
 13076 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13077 ;; Return value:  Size  Location     Type
 13078 ;;                  1    wreg      void 
 13079 ;; Registers used:
 13080 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13081 ;; Tracked objects:
 13082 ;;		On entry : 0/0
 13083 ;;		On exit  : 0/0
 13084 ;;		Unchanged: 0/0
 13085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13089 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13090 ;;Total ram usage:        1 bytes
 13091 ;; Hardware stack levels used:    1
 13092 ;; Hardware stack levels required when called:   11
 13093 ;; This function calls:
 13094 ;;		Nothing
 13095 ;; This function is called by:
 13096 ;;		_USBCtrlEPAllowDataStage
 13097 ;;		_USBCtrlTrfInHandler
 13098 ;; This function uses a non-reentrant model
 13099 ;;
 13100                           
 13101                           	psect	text53
 13102  0035F6                     __ptext53:
 13103                           	opt stack 0
 13104  0035F6                     _USBCtrlTrfTxService:
 13105                           	opt stack 11
 13106                           
 13107                           ;usb_device.c: 1791: uint8_t byteToSend;
 13108                           ;usb_device.c: 1795: byteToSend = 8;
 13109                           
 13110                           ; BSR set to: 0
 13111                           ;incstack = 0
 13112  0035F6  0E08               	movlw	8
 13113  0035F8  0100               	movlb	0	; () banked
 13114  0035FA  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13115                           
 13116                           ; BSR set to: 0
 13117                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13118  0035FC  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13119  0035FE  E110               	bnz	l12178
 13120  003600  0E08               	movlw	8
 13121  003602  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13122  003604  B0D8               	btfsc	status,0,c
 13123  003606  D00C               	goto	l1697
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;usb_device.c: 1797: {
 13127                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13128  003608  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13132  00360C  51CD               	movf	_shortPacketStatus& (0+255),w,b
 13133  00360E  A4D8               	btfss	status,2,c
 13134  003610  D002               	goto	l1695
 13135                           
 13136                           ; BSR set to: 0
 13137                           ;usb_device.c: 1806: {
 13138                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13139  003612  0E01               	movlw	1
 13140  003614  D004               	goto	L12
 13141  003616                     l1695:
 13142                           
 13143                           ; BSR set to: 0
 13144                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13145                           
 13146                           ; BSR set to: 0
 13147  003616  05CD               	decf	_shortPacketStatus& (0+255),w,b
 13148  003618  A4D8               	btfss	status,2,c
 13149  00361A  D002               	goto	l1697
 13150                           
 13151                           ; BSR set to: 0
 13152                           ;usb_device.c: 1810: {
 13153                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13154  00361C  0E02               	movlw	2
 13155  00361E                     L12:
 13156  00361E  6FCD               	movwf	_shortPacketStatus& (0+255),b
 13157  003620                     l1697:
 13158  003620                     l12178:
 13159                           
 13160                           ; BSR set to: 0
 13161                           ;usb_device.c: 1812: }
 13162                           ;usb_device.c: 1813: }
 13163                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13164  003620  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13165  003622  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13166  003624  0E00               	movlw	0
 13167  003626  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13168                           
 13169                           ; BSR set to: 0
 13170                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13171  003628  EE20 F001          	lfsr	2,1
 13172  00362C  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13173  00362E  26D9               	addwf	fsr2l,f,c
 13174  003630  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13175  003632  22DA               	addwfc	fsr2h,f,c
 13176  003634  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13177                           
 13178                           ; BSR set to: 0
 13179                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13180  003638  0E38               	movlw	56
 13181  00363A  0102               	movlb	2	; () banked
 13182  00363C  6FD4               	movwf	_pDst& (0+255),b
 13183  00363E  0E04               	movlw	4
 13184  003640  6FD5               	movwf	(_pDst+1)& (0+255),b
 13185                           
 13186                           ; BSR set to: 2
 13187                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13188  003642  0100               	movlb	0	; () banked
 13189  003644  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13190  003646  D01E               	goto	l1699
 13191  003648  D03E               	goto	l1703
 13192  00364A                     
 13193                           ; BSR set to: 0
 13194                           ;usb_device.c: 1830: {
 13195                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13196                           
 13197                           ; BSR set to: 0
 13198  00364A  C0B0  FFF6         	movff	_inPipes,tblptrl
 13199  00364E  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13200  003652  6AF8               	clrf	tblptru,c
 13201  003654  C2D4  FFD9         	movff	_pDst,fsr2l
 13202  003658  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13203  00365C  0E0E               	movlw	(high __ramtop+-1)
 13204  00365E  64F7               	cpfsgt	tblptrh,c
 13205  003660  D003               	bra	u10617
 13206  003662  0008               	tblrd		*
 13207  003664  50F5               	movf	tablat,w,c
 13208  003666  D005               	bra	u10610
 13209  003668                     u10617:
 13210  003668  CFF6 FFE9          	movff	tblptrl,fsr0l
 13211  00366C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13212  003670  50EF               	movf	indf0,w,c
 13213  003672                     u10610:
 13214  003672  6EDF               	movwf	indf2,c
 13215  003674  0100               	movlb	0	; () banked
 13216  003676  4BB0               	infsnz	_inPipes& (0+255),f,b
 13217  003678  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13218                           
 13219                           ; BSR set to: 0
 13220  00367A  0102               	movlb	2	; () banked
 13221  00367C  4BD4               	infsnz	_pDst& (0+255),f,b
 13222  00367E  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13223                           
 13224                           ; BSR set to: 2
 13225                           ;usb_device.c: 1832: byteToSend--;
 13226  003680  0100               	movlb	0	; () banked
 13227  003682  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13228  003684                     l1699:
 13229                           
 13230                           ; BSR set to: 0
 13231                           
 13232                           ; BSR set to: 0
 13233  003684  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13234  003686  B4D8               	btfsc	status,2,c
 13235  003688  0012               	return	
 13236  00368A  D7DF               	goto	l1700
 13237  00368C                     
 13238                           ; BSR set to: 0
 13239                           ;usb_device.c: 1838: {
 13240                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13241                           
 13242                           ; BSR set to: 0
 13243  00368C  C0B0  FFF6         	movff	_inPipes,tblptrl
 13244  003690  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13245  003694  6AF8               	clrf	tblptru,c
 13246  003696  C2D4  FFD9         	movff	_pDst,fsr2l
 13247  00369A  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13248  00369E  0E0E               	movlw	(high __ramtop+-1)
 13249  0036A0  64F7               	cpfsgt	tblptrh,c
 13250  0036A2  D003               	bra	u10637
 13251  0036A4  0008               	tblrd		*
 13252  0036A6  50F5               	movf	tablat,w,c
 13253  0036A8  D005               	bra	u10630
 13254  0036AA                     u10637:
 13255  0036AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 13256  0036AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 13257  0036B2  50EF               	movf	indf0,w,c
 13258  0036B4                     u10630:
 13259  0036B4  6EDF               	movwf	indf2,c
 13260  0036B6  0100               	movlb	0	; () banked
 13261  0036B8  4BB0               	infsnz	_inPipes& (0+255),f,b
 13262  0036BA  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13263                           
 13264                           ; BSR set to: 0
 13265  0036BC  0102               	movlb	2	; () banked
 13266  0036BE  4BD4               	infsnz	_pDst& (0+255),f,b
 13267  0036C0  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13268                           
 13269                           ; BSR set to: 2
 13270                           ;usb_device.c: 1840: byteToSend--;
 13271  0036C2  0100               	movlb	0	; () banked
 13272  0036C4  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13273  0036C6                     l1703:
 13274                           
 13275                           ; BSR set to: 0
 13276                           
 13277                           ; BSR set to: 0
 13278  0036C6  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13279  0036C8  B4D8               	btfsc	status,2,c
 13280  0036CA  0012               	return	
 13281  0036CC  D7DF               	goto	l1704
 13282  0036CE                     __end_of_USBCtrlTrfTxService:
 13283                           	opt stack 0
 13284                           tosu	equ	0xFFF
 13285                           tosh	equ	0xFFE
 13286                           tosl	equ	0xFFD
 13287                           pclath	equ	0xFFA
 13288                           tblptru	equ	0xFF8
 13289                           tblptrh	equ	0xFF7
 13290                           tblptrl	equ	0xFF6
 13291                           tablat	equ	0xFF5
 13292                           prodh	equ	0xFF4
 13293                           prodl	equ	0xFF3
 13294                           intcon	equ	0xFF2
 13295                           intcon2	equ	0xFF1
 13296                           intcon3	equ	0xFF0
 13297                           indf0	equ	0xFEF
 13298                           postinc0	equ	0xFEE
 13299                           plusw0	equ	0xFEB
 13300                           fsr0h	equ	0xFEA
 13301                           fsr0l	equ	0xFE9
 13302                           wreg	equ	0xFE8
 13303                           indf1	equ	0xFE7
 13304                           postinc1	equ	0xFE6
 13305                           postdec1	equ	0xFE5
 13306                           fsr1h	equ	0xFE2
 13307                           fsr1l	equ	0xFE1
 13308                           indf2	equ	0xFDF
 13309                           postinc2	equ	0xFDE
 13310                           postdec2	equ	0xFDD
 13311                           plusw2	equ	0xFDB
 13312                           fsr2h	equ	0xFDA
 13313                           fsr2l	equ	0xFD9
 13314                           status	equ	0xFD8
 13315                           
 13316 ;; *************** function _CDCTxService *****************
 13317 ;; Defined at:
 13318 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13319 ;; Parameters:    Size  Location     Type
 13320 ;;		None
 13321 ;; Auto vars:     Size  Location     Type
 13322 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13323 ;;  i               1   36[BANK0 ] unsigned char 
 13324 ;; Return value:  Size  Location     Type
 13325 ;;                  1    wreg      void 
 13326 ;; Registers used:
 13327 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13328 ;; Tracked objects:
 13329 ;;		On entry : 0/0
 13330 ;;		On exit  : 0/0
 13331 ;;		Unchanged: 0/0
 13332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13334 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13336 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13337 ;;Total ram usage:        2 bytes
 13338 ;; Hardware stack levels used:    1
 13339 ;; Hardware stack levels required when called:   12
 13340 ;; This function calls:
 13341 ;;		_USBTransferOnePacket
 13342 ;; This function is called by:
 13343 ;;		_UsbDevice_MainTask
 13344 ;; This function uses a non-reentrant model
 13345 ;;
 13346                           
 13347                           	psect	text54
 13348  0026C6                     __ptext54:
 13349                           	opt stack 0
 13350  0026C6                     _CDCTxService:
 13351                           	opt stack 15
 13352                           
 13353                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13354                           ;usb_device_cdc.c: 842: uint8_t i;
 13355                           ;usb_device_cdc.c: 844: ;
 13356                           ;usb_device_cdc.c: 846: {};
 13357                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13358                           
 13359                           ; BSR set to: 0
 13360                           ;incstack = 0
 13361  0026C6  0101               	movlb	1	; () banked
 13362  0026C8  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13363  0026CA  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13364  0026CC  B4D8               	btfsc	status,2,c
 13365  0026CE  D006               	goto	l1949
 13366                           
 13367                           ; BSR set to: 1
 13368  0026D0  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13369  0026D4  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13370  0026D8  BEDF               	btfsc	indf2,7,c
 13371  0026DA  0012               	return	
 13372  0026DC                     l1949:
 13373                           
 13374                           ; BSR set to: 1
 13375                           ;usb_device_cdc.c: 852: }
 13376                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13377                           
 13378                           ; BSR set to: 1
 13379  0026DC  0E03               	movlw	3
 13380  0026DE  0100               	movlb	0	; () banked
 13381  0026E0  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13382  0026E2  A4D8               	btfss	status,2,c
 13383  0026E4  D002               	goto	l1951
 13384                           
 13385                           ; BSR set to: 0
 13386                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13387  0026E6  0E00               	movlw	0
 13388  0026E8  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13389  0026EA                     l1951:
 13390                           
 13391                           ; BSR set to: 0
 13392                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13393  0026EA  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13394  0026EC  B4D8               	btfsc	status,2,c
 13395  0026EE  0012               	return	
 13396                           
 13397                           ; BSR set to: 0
 13398                           ;usb_device_cdc.c: 869: }
 13399                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13400                           
 13401                           ; BSR set to: 0
 13402                           
 13403                           ; BSR set to: 0
 13404                           ;usb_device_cdc.c: 866: {
 13405                           ;usb_device_cdc.c: 867: ;
 13406                           ;usb_device_cdc.c: 868: return;
 13407  0026F0  0E02               	movlw	2
 13408  0026F2  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13409  0026F4  A4D8               	btfss	status,2,c
 13410  0026F6  D013               	goto	l1953
 13411                           
 13412                           ; BSR set to: 0
 13413                           ;usb_device_cdc.c: 875: {
 13414                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13415  0026F8  0E01               	movlw	1
 13416  0026FA  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13417  0026FC  0E00               	movlw	0
 13418  0026FE  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13419  002700  0E00               	movlw	0
 13420  002702  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13421  002704  0E00               	movlw	0
 13422  002706  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13423  002708  0E02               	movlw	2
 13424  00270A  EC28  F020         	call	_USBTransferOnePacket
 13425  00270E  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13426  002712  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13427                           
 13428                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13429  002716  0E03               	movlw	3
 13430  002718  0100               	movlb	0	; () banked
 13431  00271A  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13432                           
 13433                           ;usb_device_cdc.c: 879: }
 13434  00271C  0012               	return	
 13435  00271E                     l1953:
 13436                           
 13437                           ; BSR set to: 0
 13438                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13439                           
 13440                           ; BSR set to: 0
 13441  00271E  05C5               	decf	_cdc_trf_state& (0+255),w,b
 13442  002720  A4D8               	btfss	status,2,c
 13443  002722  0012               	return	
 13444                           
 13445                           ; BSR set to: 0
 13446                           ;usb_device_cdc.c: 881: {
 13447                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13448  002724  0E40               	movlw	64
 13449  002726  65C4               	cpfsgt	_cdc_tx_len& (0+255),b
 13450  002728  D003               	goto	l1956
 13451                           
 13452                           ; BSR set to: 0
 13453                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13454  00272A  0E40               	movlw	64
 13455  00272C  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13456  00272E  D002               	goto	l1957
 13457  002730                     l1956:
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;usb_device_cdc.c: 887: else
 13461                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13462  002730  C0C4  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13463  002734                     l1957:
 13464                           
 13465                           ; BSR set to: 0
 13466                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13467                           
 13468                           ; BSR set to: 0
 13469  002734  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13470  002736  0800               	sublw	0
 13471  002738  25C4               	addwf	_cdc_tx_len& (0+255),w,b
 13472  00273A  6FC4               	movwf	_cdc_tx_len& (0+255),b
 13473                           
 13474                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13475  00273C  0EB6               	movlw	low _cdc_data_tx
 13476  00273E  0102               	movlb	2	; () banked
 13477  002740  6FC8               	movwf	_pCDCDst& (0+255),b
 13478  002742  0E07               	movlw	high _cdc_data_tx
 13479  002744  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13480                           
 13481                           ; BSR set to: 2
 13482                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13483  002746  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13484                           
 13485                           ; BSR set to: 2
 13486                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13487  00274A  0101               	movlb	1	; () banked
 13488  00274C  51E2               	movf	_cdc_mem_type& (0+255),w,b
 13489  00274E  B4D8               	btfsc	status,2,c
 13490  002750  D01D               	goto	l1959
 13491  002752  D03D               	goto	l1963
 13492  002754                     
 13493                           ;usb_device_cdc.c: 901: {
 13494                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13495                           
 13496                           ; BSR set to: 1
 13497  002754  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13498  002758  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13499  00275C  6AF8               	clrf	tblptru,c
 13500  00275E  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13501  002762  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13502  002766  0E0E               	movlw	(high __ramtop+-1)
 13503  002768  64F7               	cpfsgt	tblptrh,c
 13504  00276A  D003               	bra	u14577
 13505  00276C  0008               	tblrd		*
 13506  00276E  50F5               	movf	tablat,w,c
 13507  002770  D005               	bra	u14570
 13508  002772                     u14577:
 13509  002772  CFF6 FFE9          	movff	tblptrl,fsr0l
 13510  002776  CFF7 FFEA          	movff	tblptrh,fsr0h
 13511  00277A  50EF               	movf	indf0,w,c
 13512  00277C                     u14570:
 13513  00277C  6EDF               	movwf	indf2,c
 13514                           
 13515                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13516  00277E  0102               	movlb	2	; () banked
 13517  002780  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13518  002782  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13519                           
 13520                           ; BSR set to: 2
 13521                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13522  002784  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13523  002786  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13524                           
 13525                           ; BSR set to: 2
 13526                           ;usb_device_cdc.c: 905: i--;
 13527  002788  0100               	movlb	0	; () banked
 13528  00278A  0784               	decf	CDCTxService@i& (0+255),f,b
 13529  00278C                     l1959:
 13530                           
 13531                           ; BSR set to: 0
 13532  00278C  0100               	movlb	0	; () banked
 13533  00278E  5184               	movf	CDCTxService@i& (0+255),w,b
 13534  002790  B4D8               	btfsc	status,2,c
 13535  002792  D021               	goto	u14600
 13536  002794  D7DF               	goto	l1960
 13537  002796                     
 13538                           ; BSR set to: 0
 13539                           ;usb_device_cdc.c: 911: {
 13540                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13541                           
 13542                           ; BSR set to: 0
 13543  002796  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13544  00279A  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13545  00279E  6AF8               	clrf	tblptru,c
 13546  0027A0  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13547  0027A4  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13548  0027A8  0E0E               	movlw	(high __ramtop+-1)
 13549  0027AA  64F7               	cpfsgt	tblptrh,c
 13550  0027AC  D003               	bra	u14597
 13551  0027AE  0008               	tblrd		*
 13552  0027B0  50F5               	movf	tablat,w,c
 13553  0027B2  D005               	bra	u14590
 13554  0027B4                     u14597:
 13555  0027B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 13556  0027B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 13557  0027BC  50EF               	movf	indf0,w,c
 13558  0027BE                     u14590:
 13559  0027BE  6EDF               	movwf	indf2,c
 13560                           
 13561                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13562  0027C0  0102               	movlb	2	; () banked
 13563  0027C2  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13564  0027C4  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13565                           
 13566                           ; BSR set to: 2
 13567                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13568  0027C6  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13569  0027C8  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13570                           
 13571                           ; BSR set to: 2
 13572                           ;usb_device_cdc.c: 915: i--;
 13573  0027CA  0100               	movlb	0	; () banked
 13574  0027CC  0784               	decf	CDCTxService@i& (0+255),f,b
 13575  0027CE                     l1963:
 13576                           
 13577                           ; BSR set to: 0
 13578  0027CE  0100               	movlb	0	; () banked
 13579  0027D0  5184               	movf	CDCTxService@i& (0+255),w,b
 13580  0027D2  A4D8               	btfss	status,2,c
 13581  0027D4  D7E0               	goto	l1964
 13582  0027D6                     u14600:
 13583                           
 13584                           ; BSR set to: 0
 13585                           ;usb_device_cdc.c: 916: }
 13586                           ;usb_device_cdc.c: 917: }
 13587                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13588                           
 13589                           ; BSR set to: 0
 13590                           
 13591                           ; BSR set to: 0
 13592  0027D6  51C4               	movf	_cdc_tx_len& (0+255),w,b
 13593  0027D8  A4D8               	btfss	status,2,c
 13594  0027DA  D008               	goto	l1968
 13595                           
 13596                           ; BSR set to: 0
 13597                           ;usb_device_cdc.c: 924: {
 13598                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13599  0027DC  0E40               	movlw	64
 13600  0027DE  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13601  0027E0  A4D8               	btfss	status,2,c
 13602  0027E2  D002               	goto	l1967
 13603                           
 13604                           ; BSR set to: 0
 13605                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13606  0027E4  0E02               	movlw	2
 13607  0027E6  D001               	goto	L13
 13608  0027E8                     l1967:
 13609                           
 13610                           ; BSR set to: 0
 13611                           ;usb_device_cdc.c: 927: else
 13612                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13613                           
 13614                           ; BSR set to: 0
 13615  0027E8  0E03               	movlw	3
 13616  0027EA                     L13:
 13617  0027EA  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13618  0027EC                     l1968:
 13619                           
 13620                           ; BSR set to: 0
 13621                           ;usb_device_cdc.c: 929: }
 13622                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13623                           
 13624                           ; BSR set to: 0
 13625                           
 13626                           ; BSR set to: 0
 13627  0027EC  0E01               	movlw	1
 13628  0027EE  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13629  0027F0  0EB6               	movlw	low _cdc_data_tx
 13630  0027F2  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13631  0027F4  0E07               	movlw	high _cdc_data_tx
 13632  0027F6  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13633  0027F8  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13634  0027FC  0E02               	movlw	2
 13635  0027FE  EC28  F020         	call	_USBTransferOnePacket
 13636  002802  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13637  002806  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13638  00280A  0012               	return	
 13639  00280C                     __end_of_CDCTxService:
 13640                           	opt stack 0
 13641                           tosu	equ	0xFFF
 13642                           tosh	equ	0xFFE
 13643                           tosl	equ	0xFFD
 13644                           pclath	equ	0xFFA
 13645                           tblptru	equ	0xFF8
 13646                           tblptrh	equ	0xFF7
 13647                           tblptrl	equ	0xFF6
 13648                           tablat	equ	0xFF5
 13649                           prodh	equ	0xFF4
 13650                           prodl	equ	0xFF3
 13651                           intcon	equ	0xFF2
 13652                           intcon2	equ	0xFF1
 13653                           intcon3	equ	0xFF0
 13654                           indf0	equ	0xFEF
 13655                           postinc0	equ	0xFEE
 13656                           plusw0	equ	0xFEB
 13657                           fsr0h	equ	0xFEA
 13658                           fsr0l	equ	0xFE9
 13659                           wreg	equ	0xFE8
 13660                           indf1	equ	0xFE7
 13661                           postinc1	equ	0xFE6
 13662                           postdec1	equ	0xFE5
 13663                           fsr1h	equ	0xFE2
 13664                           fsr1l	equ	0xFE1
 13665                           indf2	equ	0xFDF
 13666                           postinc2	equ	0xFDE
 13667                           postdec2	equ	0xFDD
 13668                           plusw2	equ	0xFDB
 13669                           fsr2h	equ	0xFDA
 13670                           fsr2l	equ	0xFD9
 13671                           status	equ	0xFD8
 13672                           
 13673 ;; *************** function _Term_MainSm *****************
 13674 ;; Defined at:
 13675 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13676 ;; Parameters:    Size  Location     Type
 13677 ;;		None
 13678 ;; Auto vars:     Size  Location     Type
 13679 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13680 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13681 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13682 ;;  FwkBuildYear    4    0        unsigned char [4]
 13683 ;;  FwkBuildMont    4    0        unsigned char [4]
 13684 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13685 ;; Return value:  Size  Location     Type
 13686 ;;                  1    wreg      void 
 13687 ;; Registers used:
 13688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13689 ;; Tracked objects:
 13690 ;;		On entry : 0/0
 13691 ;;		On exit  : 0/0
 13692 ;;		Unchanged: 0/0
 13693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13695 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13697 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13698 ;;Total ram usage:       12 bytes
 13699 ;; Hardware stack levels used:    1
 13700 ;; Hardware stack levels required when called:   16
 13701 ;; This function calls:
 13702 ;;		_OsTmr_GetTimerStatus
 13703 ;;		_OsTmr_StartTimer
 13704 ;;		_Terminal
 13705 ;;		_memset
 13706 ;;		_putUSBUSART
 13707 ;;		_sprintf
 13708 ;;		_strcat
 13709 ;;		_strcpy
 13710 ;;		_strlen
 13711 ;;		_utoa
 13712 ;; This function is called by:
 13713 ;;		_Term_MainTask
 13714 ;; This function uses a non-reentrant model
 13715 ;;
 13716                           
 13717                           	psect	text55
 13718  0010B6                     __ptext55:
 13719                           	opt stack 0
 13720  0010B6                     _Term_MainSm:
 13721                           	opt stack 11
 13722                           
 13723                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13724                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13725                           ;term.c: 711: static UINT8 Data[50];
 13726                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13727                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13728                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13729                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13730                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13731                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13732                           ;term.c: 719: switch (TermMainSmState)
 13733                           
 13734                           ;incstack = 0
 13735  0010B6  D133               	goto	l2453
 13736  0010B8                     
 13737                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13738  0010B8  0ED3               	movlw	low Term_MainSm@TermDelay
 13739  0010BA  0100               	movlb	0	; () banked
 13740  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13741  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13742  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13743  0010C2  0ED0               	movlw	208
 13744  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13745  0010C6  0E07               	movlw	7
 13746  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13747  0010CA  0E00               	movlw	0
 13748  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13749  0010CE  0E00               	movlw	0
 13750  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13751  0010D2  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 13752                           
 13753                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13754  0010D6  0E01               	movlw	1
 13755  0010D8  0102               	movlb	2	; () banked
 13756  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13757                           
 13758                           ;term.c: 726: break;
 13759  0010DC  0012               	return	
 13760  0010DE                     
 13761                           ; BSR set to: 2
 13762                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13763                           
 13764                           ; BSR set to: 2
 13765  0010DE  0ED3               	movlw	low Term_MainSm@TermDelay
 13766  0010E0  0100               	movlb	0	; () banked
 13767  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13768  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13769  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13770  0010E8  EC39  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 13771  0010EC  06E8               	decf	wreg,f,c
 13772  0010EE  A4D8               	btfss	status,2,c
 13773  0010F0  0012               	return	
 13774                           
 13775                           ;term.c: 731: {
 13776                           ;term.c: 733: TermMainSmState = Term_InitState;
 13777  0010F2  0E02               	movlw	2
 13778  0010F4  0102               	movlb	2	; () banked
 13779  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13780                           
 13781                           ; BSR set to: 2
 13782                           ;term.c: 734: }
 13783                           ;term.c: 735: break;
 13784  0010F8  0012               	return	
 13785  0010FA                     
 13786                           ; BSR set to: 2
 13787                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13788                           
 13789                           ; BSR set to: 2
 13790  0010FA  0E1F               	movlw	31
 13791  0010FC  0100               	movlb	0	; () banked
 13792  0010FE  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 13793  001100  0012               	return	
 13794                           
 13795                           ; BSR set to: 0
 13796  001102  B265               	btfsc	3941,1,c	;volatile
 13797  001104  0012               	return	
 13798                           
 13799                           ; BSR set to: 0
 13800                           ;term.c: 743: else
 13801                           ;term.c: 744: {
 13802                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13803                           
 13804                           ; BSR set to: 0
 13805                           
 13806                           ; BSR set to: 0
 13807                           ;term.c: 740: {
 13808                           ;term.c: 742: }
 13809  001106  0E03               	movlw	3
 13810  001108  0102               	movlb	2	; () banked
 13811  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13812                           
 13813                           ; BSR set to: 2
 13814                           ;term.c: 747: }
 13815                           ;term.c: 748: break;
 13816  00110C  0012               	return	
 13817  00110E                     
 13818                           ; BSR set to: 2
 13819                           ;term.c: 752: if((cdc_trf_state == 0))
 13820                           
 13821                           ; BSR set to: 2
 13822  00110E  0100               	movlb	0	; () banked
 13823  001110  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13824  001112  A4D8               	btfss	status,2,c
 13825  001114  0012               	return	
 13826                           
 13827                           ; BSR set to: 0
 13828                           ;term.c: 753: {
 13829                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13830  001116  0E21               	movlw	low _Welcome
 13831  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13832  00111A  0EFD               	movlw	high _Welcome
 13833  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13834  00111E  0E88               	movlw	136
 13835  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13836  001122  ECD7  F030         	call	_putUSBUSART	;wreg free
 13837                           
 13838                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13839  001126  0E04               	movlw	4
 13840  001128  0102               	movlb	2	; () banked
 13841  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13842                           
 13843                           ; BSR set to: 2
 13844                           ;term.c: 758: }
 13845                           ;term.c: 759: break;
 13846  00112C  0012               	return	
 13847  00112E                     
 13848                           ; BSR set to: 2
 13849                           ;term.c: 763: if((cdc_trf_state == 0))
 13850                           
 13851                           ; BSR set to: 2
 13852  00112E  0100               	movlb	0	; () banked
 13853  001130  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13854  001132  A4D8               	btfss	status,2,c
 13855  001134  0012               	return	
 13856                           
 13857                           ; BSR set to: 0
 13858                           ;term.c: 764: {
 13859                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13860  001136  0E31               	movlw	low _MsgFormat
 13861  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13862  00113A  0EFC               	movlw	high _MsgFormat
 13863  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13864  00113E  0EEF               	movlw	239
 13865  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13866  001142  ECD7  F030         	call	_putUSBUSART	;wreg free
 13867                           
 13868                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13869  001146  0E05               	movlw	5
 13870  001148  0102               	movlb	2	; () banked
 13871  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13872                           
 13873                           ; BSR set to: 2
 13874                           ;term.c: 769: }
 13875                           ;term.c: 770: break;
 13876  00114C  0012               	return	
 13877  00114E                     
 13878                           ; BSR set to: 2
 13879                           ;term.c: 774: if((cdc_trf_state == 0))
 13880                           
 13881                           ; BSR set to: 2
 13882  00114E  0100               	movlb	0	; () banked
 13883  001150  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13884  001152  A4D8               	btfss	status,2,c
 13885  001154  0012               	return	
 13886                           
 13887                           ; BSR set to: 0
 13888                           ;term.c: 775: {
 13889                           ;term.c: 777: memset(Data,0,50);
 13890  001156  0E63               	movlw	low Term_MainSm@Data
 13891  001158  6F7D               	movwf	memset@p1& (0+255),b
 13892  00115A  0E04               	movlw	high Term_MainSm@Data
 13893  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13894  00115E  0E00               	movlw	0
 13895  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13896  001162  0E00               	movlw	0
 13897  001164  6F7F               	movwf	memset@c& (0+255),b
 13898  001166  0E00               	movlw	0
 13899  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13900  00116A  0E32               	movlw	50
 13901  00116C  6F81               	movwf	memset@n& (0+255),b
 13902  00116E  EC56  F02F         	call	_memset	;wreg free
 13903                           
 13904                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13905  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13906  001174  0100               	movlb	0	; () banked
 13907  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13908  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13909  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13910  00117C  0E00               	movlw	0
 13911  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13912  001180  0E01               	movlw	1
 13913  001182  6F8C               	movwf	utoa@val& (0+255),b
 13914  001184  0E00               	movlw	0
 13915  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13916  001188  0E0A               	movlw	10
 13917  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13918  00118C  EC8E  F021         	call	_utoa	;wreg free
 13919                           
 13920                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13921  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13922  001192  0100               	movlb	0	; () banked
 13923  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13924  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13925  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13926  00119A  0E00               	movlw	0
 13927  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13928  00119E  0E02               	movlw	2
 13929  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13930  0011A2  0E00               	movlw	0
 13931  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13932  0011A6  0E0A               	movlw	10
 13933  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13934  0011AA  EC8E  F021         	call	_utoa	;wreg free
 13935                           
 13936                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13937  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13938  0011B0  0100               	movlb	0	; () banked
 13939  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13940  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13941  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13942  0011B8  0E00               	movlw	0
 13943  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13944  0011BC  0E00               	movlw	0
 13945  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 13946  0011C0  0E00               	movlw	0
 13947  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13948  0011C4  0E0A               	movlw	10
 13949  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 13950  0011C8  EC8E  F021         	call	_utoa	;wreg free
 13951                           
 13952                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13953  0011CC  0E63               	movlw	low Term_MainSm@Data
 13954  0011CE  0100               	movlb	0	; () banked
 13955  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 13956  0011D2  0E04               	movlw	high Term_MainSm@Data
 13957  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 13958  0011D6  0ED1               	movlw	low STR_23
 13959  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 13960  0011DA  0EFE               	movlw	high STR_23
 13961  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 13962  0011DE  EC25  F02F         	call	_strcpy	;wreg free
 13963                           
 13964                           ;term.c: 783: strcat(Data,FwkMajorStr);
 13965  0011E2  0E63               	movlw	low Term_MainSm@Data
 13966  0011E4  0100               	movlb	0	; () banked
 13967  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 13968  0011E8  0E04               	movlw	high Term_MainSm@Data
 13969  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13970  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13971  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 13972  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13973  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 13974  0011F4  EC5A  F029         	call	_strcat	;wreg free
 13975                           
 13976                           ;term.c: 784: strcat(Data,".");
 13977  0011F8  0E63               	movlw	low Term_MainSm@Data
 13978  0011FA  0100               	movlb	0	; () banked
 13979  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 13980  0011FE  0E04               	movlw	high Term_MainSm@Data
 13981  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13982  001202  0EF4               	movlw	low STR_24
 13983  001204  6F7F               	movwf	strcat@from& (0+255),b
 13984  001206  0EFF               	movlw	high STR_24
 13985  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 13986  00120A  EC5A  F029         	call	_strcat	;wreg free
 13987                           
 13988                           ;term.c: 785: strcat(Data,FwkMinorStr);
 13989  00120E  0E63               	movlw	low Term_MainSm@Data
 13990  001210  0100               	movlb	0	; () banked
 13991  001212  6F7D               	movwf	strcat@to& (0+255),b
 13992  001214  0E04               	movlw	high Term_MainSm@Data
 13993  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13994  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13995  00121A  6F7F               	movwf	strcat@from& (0+255),b
 13996  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13997  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 13998  001220  EC5A  F029         	call	_strcat	;wreg free
 13999                           
 14000                           ;term.c: 786: strcat(Data,".");
 14001  001224  0E63               	movlw	low Term_MainSm@Data
 14002  001226  0100               	movlb	0	; () banked
 14003  001228  6F7D               	movwf	strcat@to& (0+255),b
 14004  00122A  0E04               	movlw	high Term_MainSm@Data
 14005  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14006  00122E  0EF4               	movlw	low STR_24
 14007  001230  6F7F               	movwf	strcat@from& (0+255),b
 14008  001232  0EFF               	movlw	high STR_24
 14009  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 14010  001236  EC5A  F029         	call	_strcat	;wreg free
 14011                           
 14012                           ;term.c: 787: strcat(Data,FwkBuildStr);
 14013  00123A  0E63               	movlw	low Term_MainSm@Data
 14014  00123C  0100               	movlb	0	; () banked
 14015  00123E  6F7D               	movwf	strcat@to& (0+255),b
 14016  001240  0E04               	movlw	high Term_MainSm@Data
 14017  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14018  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14019  001246  6F7F               	movwf	strcat@from& (0+255),b
 14020  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14021  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 14022  00124C  EC5A  F029         	call	_strcat	;wreg free
 14023                           
 14024                           ;term.c: 788: strcat(Data,"\r\n");
 14025  001250  0E63               	movlw	low Term_MainSm@Data
 14026  001252  0100               	movlb	0	; () banked
 14027  001254  6F7D               	movwf	strcat@to& (0+255),b
 14028  001256  0E04               	movlw	high Term_MainSm@Data
 14029  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14030  00125A  0E85               	movlw	low (STR_21+39)
 14031  00125C  6F7F               	movwf	strcat@from& (0+255),b
 14032  00125E  0EFE               	movlw	high (STR_21+39)
 14033  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 14034  001262  EC5A  F029         	call	_strcat	;wreg free
 14035                           
 14036                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 14037  001266  0E63               	movlw	low Term_MainSm@Data
 14038  001268  0100               	movlb	0	; () banked
 14039  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 14040  00126C  0E04               	movlw	high Term_MainSm@Data
 14041  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14042  001270  0E63               	movlw	low Term_MainSm@Data
 14043  001272  6F7D               	movwf	strlen@s& (0+255),b
 14044  001274  0E04               	movlw	high Term_MainSm@Data
 14045  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14046  001278  EC07  F02E         	call	_strlen	;wreg free
 14047  00127C  0100               	movlb	0	; () banked
 14048  00127E  517D               	movf	?_strlen& (0+255),w,b
 14049  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 14050  001282  ECD7  F030         	call	_putUSBUSART	;wreg free
 14051                           
 14052                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 14053  001286  0E06               	movlw	6
 14054  001288  0102               	movlb	2	; () banked
 14055  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14056                           
 14057                           ; BSR set to: 2
 14058                           ;term.c: 793: }
 14059                           ;term.c: 794: break;
 14060  00128C  0012               	return	
 14061  00128E                     
 14062                           ; BSR set to: 2
 14063                           ;term.c: 798: if((cdc_trf_state == 0))
 14064                           
 14065                           ; BSR set to: 2
 14066  00128E  0100               	movlb	0	; () banked
 14067  001290  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14068  001292  A4D8               	btfss	status,2,c
 14069  001294  0012               	return	
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;term.c: 799: {
 14073                           ;term.c: 801: memset(Data,0,50);
 14074  001296  0E63               	movlw	low Term_MainSm@Data
 14075  001298  6F7D               	movwf	memset@p1& (0+255),b
 14076  00129A  0E04               	movlw	high Term_MainSm@Data
 14077  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14078  00129E  0E00               	movlw	0
 14079  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 14080  0012A2  0E00               	movlw	0
 14081  0012A4  6F7F               	movwf	memset@c& (0+255),b
 14082  0012A6  0E00               	movlw	0
 14083  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 14084  0012AA  0E32               	movlw	50
 14085  0012AC  6F81               	movwf	memset@n& (0+255),b
 14086  0012AE  EC56  F02F         	call	_memset	;wreg free
 14087                           
 14088                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 20 2022");
 14089  0012B2  0E63               	movlw	low Term_MainSm@Data
 14090  0012B4  0100               	movlb	0	; () banked
 14091  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 14092  0012B8  0E04               	movlw	high Term_MainSm@Data
 14093  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14094  0012BC  0E0C               	movlw	low STR_27
 14095  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 14096  0012C0  0EFF               	movlw	high STR_27
 14097  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14098  0012C4  0EB5               	movlw	low STR_28
 14099  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14100  0012C8  0EFF               	movlw	high STR_28
 14101  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14102  0012CC  EC3C  F01C         	call	_sprintf	;wreg free
 14103                           
 14104                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14105  0012D0  0E63               	movlw	low Term_MainSm@Data
 14106  0012D2  0100               	movlb	0	; () banked
 14107  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 14108  0012D6  0E04               	movlw	high Term_MainSm@Data
 14109  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14110  0012DA  0E63               	movlw	low Term_MainSm@Data
 14111  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 14112  0012DE  0E04               	movlw	high Term_MainSm@Data
 14113  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14114  0012E2  EC07  F02E         	call	_strlen	;wreg free
 14115  0012E6  0100               	movlb	0	; () banked
 14116  0012E8  517D               	movf	?_strlen& (0+255),w,b
 14117  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14118  0012EC  ECD7  F030         	call	_putUSBUSART	;wreg free
 14119                           
 14120                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14121  0012F0  0E07               	movlw	7
 14122  0012F2  0102               	movlb	2	; () banked
 14123  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14124                           
 14125                           ; BSR set to: 2
 14126                           ;term.c: 808: }
 14127                           ;term.c: 809: break;
 14128  0012F6  0012               	return	
 14129  0012F8                     
 14130                           ; BSR set to: 2
 14131                           ;term.c: 813: if((cdc_trf_state == 0))
 14132                           
 14133                           ; BSR set to: 2
 14134  0012F8  0100               	movlb	0	; () banked
 14135  0012FA  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14136  0012FC  A4D8               	btfss	status,2,c
 14137  0012FE  0012               	return	
 14138                           
 14139                           ; BSR set to: 0
 14140                           ;term.c: 814: {
 14141                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14142  001300  0E31               	movlw	low _MsgReady
 14143  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14144  001304  0EFE               	movlw	high _MsgReady
 14145  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14146  001308  0E16               	movlw	22
 14147  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14148  00130C  ECD7  F030         	call	_putUSBUSART	;wreg free
 14149                           
 14150                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14151  001310  0E08               	movlw	8
 14152  001312  0102               	movlb	2	; () banked
 14153  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14154                           
 14155                           ; BSR set to: 2
 14156                           ;term.c: 819: }
 14157                           ;term.c: 820: break;
 14158  001316  0012               	return	
 14159  001318                     
 14160                           ; BSR set to: 2
 14161                           ;term.c: 824: Terminal();
 14162                           
 14163                           ; BSR set to: 2
 14164  001318  EC68  F000         	call	_Terminal	;wreg free
 14165                           
 14166                           ;term.c: 829: }
 14167                           
 14168                           ;term.c: 828: break;
 14169                           
 14170                           ;term.c: 827: default:
 14171                           
 14172                           ;term.c: 825: break;
 14173  00131C  0012               	return	
 14174  00131E                     l2453:
 14175  00131E  0102               	movlb	2	; () banked
 14176  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14177                           
 14178                           ; Switch size 1, requested type "space"
 14179                           ; Number of cases is 9, Range of values is 0 to 8
 14180                           ; switch strategies available:
 14181                           ; Name         Instructions Cycles
 14182                           ; simple_byte           28    15 (average)
 14183                           ;	Chosen strategy is simple_byte
 14184  001322  0A00               	xorlw	0	; case 0
 14185  001324  B4D8               	btfsc	status,2,c
 14186  001326  D6C8               	goto	l2454
 14187  001328  0A01               	xorlw	1	; case 1
 14188  00132A  B4D8               	btfsc	status,2,c
 14189  00132C  D6D8               	goto	l2456
 14190  00132E  0A03               	xorlw	3	; case 2
 14191  001330  B4D8               	btfsc	status,2,c
 14192  001332  D6E3               	goto	l2458
 14193  001334  0A01               	xorlw	1	; case 3
 14194  001336  B4D8               	btfsc	status,2,c
 14195  001338  D6EA               	goto	l2463
 14196  00133A  0A07               	xorlw	7	; case 4
 14197  00133C  B4D8               	btfsc	status,2,c
 14198  00133E  D6F7               	goto	l2465
 14199  001340  0A01               	xorlw	1	; case 5
 14200  001342  B4D8               	btfsc	status,2,c
 14201  001344  D704               	goto	l2467
 14202  001346  0A03               	xorlw	3	; case 6
 14203  001348  B4D8               	btfsc	status,2,c
 14204  00134A  D7A1               	goto	l2469
 14205  00134C  0A01               	xorlw	1	; case 7
 14206  00134E  B4D8               	btfsc	status,2,c
 14207  001350  D7D3               	goto	l2471
 14208  001352  0A0F               	xorlw	15	; case 8
 14209  001354  A4D8               	btfss	status,2,c
 14210  001356  0012               	return	
 14211  001358  D7DF               	goto	l2473
 14212  00135A                     __end_of_Term_MainSm:
 14213                           	opt stack 0
 14214                           tosu	equ	0xFFF
 14215                           tosh	equ	0xFFE
 14216                           tosl	equ	0xFFD
 14217                           pclath	equ	0xFFA
 14218                           tblptru	equ	0xFF8
 14219                           tblptrh	equ	0xFF7
 14220                           tblptrl	equ	0xFF6
 14221                           tablat	equ	0xFF5
 14222                           prodh	equ	0xFF4
 14223                           prodl	equ	0xFF3
 14224                           intcon	equ	0xFF2
 14225                           intcon2	equ	0xFF1
 14226                           intcon3	equ	0xFF0
 14227                           indf0	equ	0xFEF
 14228                           postinc0	equ	0xFEE
 14229                           plusw0	equ	0xFEB
 14230                           fsr0h	equ	0xFEA
 14231                           fsr0l	equ	0xFE9
 14232                           wreg	equ	0xFE8
 14233                           indf1	equ	0xFE7
 14234                           postinc1	equ	0xFE6
 14235                           postdec1	equ	0xFE5
 14236                           fsr1h	equ	0xFE2
 14237                           fsr1l	equ	0xFE1
 14238                           indf2	equ	0xFDF
 14239                           postinc2	equ	0xFDE
 14240                           postdec2	equ	0xFDD
 14241                           plusw2	equ	0xFDB
 14242                           fsr2h	equ	0xFDA
 14243                           fsr2l	equ	0xFD9
 14244                           status	equ	0xFD8
 14245                           
 14246 ;; *************** function _strlen *****************
 14247 ;; Defined at:
 14248 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14249 ;; Parameters:    Size  Location     Type
 14250 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14251 ;;		 -> Term_MainSm@Data(50), 
 14252 ;; Auto vars:     Size  Location     Type
 14253 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14254 ;;		 -> Term_MainSm@Data(50), 
 14255 ;; Return value:  Size  Location     Type
 14256 ;;                  2   29[BANK0 ] unsigned int 
 14257 ;; Registers used:
 14258 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14259 ;; Tracked objects:
 14260 ;;		On entry : 0/0
 14261 ;;		On exit  : 0/0
 14262 ;;		Unchanged: 0/0
 14263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14265 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14266 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14267 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14268 ;;Total ram usage:        6 bytes
 14269 ;; Hardware stack levels used:    1
 14270 ;; Hardware stack levels required when called:   11
 14271 ;; This function calls:
 14272 ;;		Nothing
 14273 ;; This function is called by:
 14274 ;;		_Term_MainSm
 14275 ;; This function uses a non-reentrant model
 14276 ;;
 14277                           
 14278                           	psect	text56
 14279  005C0E                     __ptext56:
 14280                           	opt stack 0
 14281  005C0E                     _strlen:
 14282                           	opt stack 15
 14283                           
 14284                           ;incstack = 0
 14285  005C0E  C07D  F081         	movff	strlen@s,strlen@cp
 14286  005C12  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14287  005C16  D003               	goto	l3352
 14288  005C18  0100               	movlb	0	; () banked
 14289  005C1A  4B81               	infsnz	strlen@cp& (0+255),f,b
 14290  005C1C  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14291  005C1E                     l3352:
 14292                           
 14293                           ; BSR set to: 0
 14294  005C1E  C081  FFD9         	movff	strlen@cp,fsr2l
 14295  005C22  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14296  005C26  50DF               	movf	indf2,w,c
 14297  005C28  A4D8               	btfss	status,2,c
 14298  005C2A  D7F6               	goto	l3353
 14299  005C2C  C07D  F07F         	movff	strlen@s,??_strlen
 14300  005C30  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14301  005C34  0100               	movlb	0	; () banked
 14302  005C36  1F7F               	comf	??_strlen& (0+255),f,b
 14303  005C38  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14304  005C3A  4B7F               	infsnz	??_strlen& (0+255),f,b
 14305  005C3C  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14306  005C3E  5181               	movf	strlen@cp& (0+255),w,b
 14307  005C40  257F               	addwf	??_strlen& (0+255),w,b
 14308  005C42  6F7D               	movwf	?_strlen& (0+255),b
 14309  005C44  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14310  005C46  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14311  005C48  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14312  005C4A  0012               	return	
 14313  005C4C                     __end_of_strlen:
 14314                           	opt stack 0
 14315                           tosu	equ	0xFFF
 14316                           tosh	equ	0xFFE
 14317                           tosl	equ	0xFFD
 14318                           pclath	equ	0xFFA
 14319                           tblptru	equ	0xFF8
 14320                           tblptrh	equ	0xFF7
 14321                           tblptrl	equ	0xFF6
 14322                           tablat	equ	0xFF5
 14323                           prodh	equ	0xFF4
 14324                           prodl	equ	0xFF3
 14325                           intcon	equ	0xFF2
 14326                           intcon2	equ	0xFF1
 14327                           intcon3	equ	0xFF0
 14328                           indf0	equ	0xFEF
 14329                           postinc0	equ	0xFEE
 14330                           plusw0	equ	0xFEB
 14331                           fsr0h	equ	0xFEA
 14332                           fsr0l	equ	0xFE9
 14333                           wreg	equ	0xFE8
 14334                           indf1	equ	0xFE7
 14335                           postinc1	equ	0xFE6
 14336                           postdec1	equ	0xFE5
 14337                           fsr1h	equ	0xFE2
 14338                           fsr1l	equ	0xFE1
 14339                           indf2	equ	0xFDF
 14340                           postinc2	equ	0xFDE
 14341                           postdec2	equ	0xFDD
 14342                           plusw2	equ	0xFDB
 14343                           fsr2h	equ	0xFDA
 14344                           fsr2l	equ	0xFD9
 14345                           status	equ	0xFD8
 14346                           
 14347 ;; *************** function _strcat *****************
 14348 ;; Defined at:
 14349 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14350 ;; Parameters:    Size  Location     Type
 14351 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14352 ;;		 -> Term_MainSm@Data(50), 
 14353 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14354 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14355 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14356 ;; Auto vars:     Size  Location     Type
 14357 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14358 ;;		 -> Term_MainSm@Data(50), 
 14359 ;; Return value:  Size  Location     Type
 14360 ;;                  2   29[BANK0 ] PTR unsigned char 
 14361 ;; Registers used:
 14362 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14363 ;; Tracked objects:
 14364 ;;		On entry : 0/0
 14365 ;;		On exit  : 0/0
 14366 ;;		Unchanged: 0/0
 14367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14368 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14369 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14371 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14372 ;;Total ram usage:        6 bytes
 14373 ;; Hardware stack levels used:    1
 14374 ;; Hardware stack levels required when called:   11
 14375 ;; This function calls:
 14376 ;;		Nothing
 14377 ;; This function is called by:
 14378 ;;		_Term_MainSm
 14379 ;; This function uses a non-reentrant model
 14380 ;;
 14381                           
 14382                           	psect	text57
 14383  0052B4                     __ptext57:
 14384                           	opt stack 0
 14385  0052B4                     _strcat:
 14386                           	opt stack 15
 14387                           
 14388                           ; BSR set to: 0
 14389                           ;incstack = 0
 14390  0052B4  C07D  F081         	movff	strcat@to,strcat@cp
 14391  0052B8  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14392  0052BC  D003               	goto	l3337
 14393  0052BE  0100               	movlb	0	; () banked
 14394  0052C0  4B81               	infsnz	strcat@cp& (0+255),f,b
 14395  0052C2  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14396  0052C4                     l3337:
 14397                           
 14398                           ; BSR set to: 0
 14399  0052C4  C081  FFD9         	movff	strcat@cp,fsr2l
 14400  0052C8  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14401  0052CC  50DF               	movf	indf2,w,c
 14402  0052CE  B4D8               	btfsc	status,2,c
 14403  0052D0  D006               	goto	l3340
 14404  0052D2  D7F5               	goto	l3338
 14405  0052D4  0100               	movlb	0	; () banked
 14406  0052D6  4B81               	infsnz	strcat@cp& (0+255),f,b
 14407  0052D8  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14408  0052DA  4B7F               	infsnz	strcat@from& (0+255),f,b
 14409  0052DC  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14410  0052DE                     l3340:
 14411                           
 14412                           ; BSR set to: 0
 14413  0052DE  C07F  FFF6         	movff	strcat@from,tblptrl
 14414  0052E2  C080  FFF7         	movff	strcat@from+1,tblptrh
 14415  0052E6  6AF8               	clrf	tblptru,c
 14416  0052E8  C081  FFD9         	movff	strcat@cp,fsr2l
 14417  0052EC  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14418  0052F0  0E0E               	movlw	(high __ramtop+-1)
 14419  0052F2  64F7               	cpfsgt	tblptrh,c
 14420  0052F4  D003               	bra	u13327
 14421  0052F6  0008               	tblrd		*
 14422  0052F8  50F5               	movf	tablat,w,c
 14423  0052FA  D005               	bra	u13320
 14424  0052FC                     u13327:
 14425  0052FC  CFF6 FFE9          	movff	tblptrl,fsr0l
 14426  005300  CFF7 FFEA          	movff	tblptrh,fsr0h
 14427  005304  50EF               	movf	indf0,w,c
 14428  005306                     u13320:
 14429  005306  6EDF               	movwf	indf2,c
 14430  005308  50DF               	movf	indf2,w,c
 14431  00530A  B4D8               	btfsc	status,2,c
 14432  00530C  0012               	return	
 14433  00530E  D7E2               	goto	l3341
 14434  005310                     __end_of_strcat:
 14435                           	opt stack 0
 14436                           tosu	equ	0xFFF
 14437                           tosh	equ	0xFFE
 14438                           tosl	equ	0xFFD
 14439                           pclath	equ	0xFFA
 14440                           tblptru	equ	0xFF8
 14441                           tblptrh	equ	0xFF7
 14442                           tblptrl	equ	0xFF6
 14443                           tablat	equ	0xFF5
 14444                           prodh	equ	0xFF4
 14445                           prodl	equ	0xFF3
 14446                           intcon	equ	0xFF2
 14447                           intcon2	equ	0xFF1
 14448                           intcon3	equ	0xFF0
 14449                           indf0	equ	0xFEF
 14450                           postinc0	equ	0xFEE
 14451                           plusw0	equ	0xFEB
 14452                           fsr0h	equ	0xFEA
 14453                           fsr0l	equ	0xFE9
 14454                           wreg	equ	0xFE8
 14455                           indf1	equ	0xFE7
 14456                           postinc1	equ	0xFE6
 14457                           postdec1	equ	0xFE5
 14458                           fsr1h	equ	0xFE2
 14459                           fsr1l	equ	0xFE1
 14460                           indf2	equ	0xFDF
 14461                           postinc2	equ	0xFDE
 14462                           postdec2	equ	0xFDD
 14463                           plusw2	equ	0xFDB
 14464                           fsr2h	equ	0xFDA
 14465                           fsr2l	equ	0xFD9
 14466                           status	equ	0xFD8
 14467                           
 14468 ;; *************** function _sprintf *****************
 14469 ;; Defined at:
 14470 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14471 ;; Parameters:    Size  Location     Type
 14472 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14473 ;;		 -> Term_MainSm@Data(50), 
 14474 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14475 ;;		 -> STR_27(17), 
 14476 ;; Auto vars:     Size  Location     Type
 14477 ;;  tmpval          4    0        struct .
 14478 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14479 ;;		 -> STR_32(7), STR_28(12), 
 14480 ;;  ap              2   36[BANK0 ] PTR void [1]
 14481 ;;		 -> ?_sprintf(2), 
 14482 ;;  len             2    0        unsigned int 
 14483 ;;  val             2    0        unsigned int 
 14484 ;;  c               1   38[BANK0 ] char 
 14485 ;;  flag            1   35[BANK0 ] unsigned char 
 14486 ;;  prec            1    0        char 
 14487 ;; Return value:  Size  Location     Type
 14488 ;;                  2   29[BANK0 ] int 
 14489 ;; Registers used:
 14490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14491 ;; Tracked objects:
 14492 ;;		On entry : 0/0
 14493 ;;		On exit  : 0/0
 14494 ;;		Unchanged: 0/0
 14495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14496 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14497 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14499 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14500 ;;Total ram usage:       12 bytes
 14501 ;; Hardware stack levels used:    1
 14502 ;; Hardware stack levels required when called:   11
 14503 ;; This function calls:
 14504 ;;		Nothing
 14505 ;; This function is called by:
 14506 ;;		_Term_MainSm
 14507 ;; This function uses a non-reentrant model
 14508 ;;
 14509                           
 14510                           	psect	text58
 14511  003878                     __ptext58:
 14512                           	opt stack 0
 14513  003878                     _sprintf:
 14514                           	opt stack 15
 14515                           
 14516                           ;doprnt.c: 494: va_list ap;
 14517                           ;doprnt.c: 499: signed char c;
 14518                           ;doprnt.c: 506: signed char prec;
 14519                           ;doprnt.c: 508: unsigned char flag;
 14520                           ;doprnt.c: 523: union {
 14521                           ;doprnt.c: 524: unsigned long vd;
 14522                           ;doprnt.c: 525: double integ;
 14523                           ;doprnt.c: 526: } tmpval;
 14524                           ;doprnt.c: 528: unsigned int val;
 14525                           ;doprnt.c: 529: unsigned len;
 14526                           ;doprnt.c: 530: const char * cp;
 14527                           ;doprnt.c: 533: *ap = __va_start();
 14528                           
 14529                           ;incstack = 0
 14530  003878  0E81               	movlw	low (?_sprintf+4)
 14531  00387A  0100               	movlb	0	; () banked
 14532  00387C  6F84               	movwf	sprintf@ap& (0+255),b
 14533  00387E  0E00               	movlw	high (?_sprintf+4)
 14534  003880  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14535                           
 14536                           ;doprnt.c: 536: while(c = *f++) {
 14537  003882  D04E               	goto	l2741
 14538  003884                     
 14539                           ; BSR set to: 0
 14540                           ;doprnt.c: 538: if(c != '%')
 14541                           
 14542                           ; BSR set to: 0
 14543  003884  0E25               	movlw	37
 14544  003886  1986               	xorwf	sprintf@c& (0+255),w,b
 14545  003888  B4D8               	btfsc	status,2,c
 14546  00388A  D009               	goto	l2731
 14547                           
 14548                           ; BSR set to: 0
 14549                           ;doprnt.c: 540: {
 14550                           ;doprnt.c: 541: ((*sp++ = (c)));
 14551  00388C  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14552  003890  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14553  003894  C086  FFDF         	movff	sprintf@c,indf2
 14554                           
 14555                           ; BSR set to: 0
 14556  003898  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14557  00389A  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14558                           
 14559                           ;doprnt.c: 542: continue;
 14560  00389C  D041               	goto	l2741
 14561  00389E                     l2731:
 14562                           
 14563                           ; BSR set to: 0
 14564                           ;doprnt.c: 543: }
 14565                           ;doprnt.c: 548: flag = 0;
 14566                           
 14567                           ; BSR set to: 0
 14568  00389E  0E00               	movlw	0
 14569  0038A0  6F83               	movwf	sprintf@flag& (0+255),b
 14570                           
 14571                           ;doprnt.c: 635: switch(c = *f++) {
 14572  0038A2  D02E               	goto	l2732
 14573  0038A4                     
 14574                           ; BSR set to: 0
 14575                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14576                           
 14577                           ; BSR set to: 0
 14578  0038A4  C084  FFD9         	movff	sprintf@ap,fsr2l
 14579  0038A8  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14580  0038AC  CFDE F087          	movff	postinc2,sprintf@cp
 14581  0038B0  CFDD F088          	movff	postdec2,sprintf@cp+1
 14582                           
 14583                           ; BSR set to: 0
 14584  0038B4  0E02               	movlw	2
 14585  0038B6  2784               	addwf	sprintf@ap& (0+255),f,b
 14586  0038B8  0E00               	movlw	0
 14587  0038BA  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14588                           
 14589                           ; BSR set to: 0
 14590                           ;doprnt.c: 740: if(!cp)
 14591  0038BC  5187               	movf	sprintf@cp& (0+255),w,b
 14592  0038BE  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14593  0038C0  A4D8               	btfss	status,2,c
 14594  0038C2  D014               	goto	l2737
 14595                           
 14596                           ; BSR set to: 0
 14597                           ;doprnt.c: 741: cp = "(null)";
 14598  0038C4  0ED7               	movlw	low STR_32
 14599  0038C6  6F87               	movwf	sprintf@cp& (0+255),b
 14600  0038C8  0EFF               	movlw	high STR_32
 14601  0038CA  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14602                           
 14603                           ; BSR set to: 0
 14604                           ;doprnt.c: 777: while(*cp)
 14605  0038CC  D00F               	goto	l2737
 14606  0038CE                     
 14607                           ; BSR set to: 0
 14608                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14609                           
 14610                           ; BSR set to: 0
 14611  0038CE  C087  FFF6         	movff	sprintf@cp,tblptrl
 14612  0038D2  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14613  0038D6                     	if	0	;tblptru may be non-zero
 14614  0038D6                     	endif
 14615  0038D6                     	if	0	;tblptru may be non-zero
 14616  0038D6                     	endif
 14617  0038D6  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14618  0038DA  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14619  0038DE  0008               	tblrd		*
 14620  0038E0  CFF5 FFDF          	movff	tablat,indf2
 14621                           
 14622                           ; BSR set to: 0
 14623  0038E4  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14624  0038E6  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14625                           
 14626                           ; BSR set to: 0
 14627  0038E8  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14628  0038EA  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14629  0038EC                     l2737:
 14630                           
 14631                           ; BSR set to: 0
 14632                           
 14633                           ; BSR set to: 0
 14634  0038EC  C087  FFF6         	movff	sprintf@cp,tblptrl
 14635  0038F0  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14636  0038F4                     	if	0	;tblptru may be non-zero
 14637  0038F4                     	endif
 14638  0038F4                     	if	0	;tblptru may be non-zero
 14639  0038F4                     	endif
 14640  0038F4  0008               	tblrd		*
 14641  0038F6  50F5               	movf	tablat,w,c
 14642  0038F8  0900               	iorlw	0
 14643  0038FA  B4D8               	btfsc	status,2,c
 14644  0038FC  D011               	goto	l2741
 14645  0038FE  D7E7               	goto	l2738
 14646  003900                     l2732:
 14647                           
 14648                           ; BSR set to: 0
 14649                           
 14650                           ; BSR set to: 0
 14651  003900  C07F  FFF6         	movff	sprintf@f,tblptrl
 14652  003904  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14653  003908  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14654  00390A  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14655  00390C                     	if	0	;tblptru may be non-zero
 14656  00390C                     	endif
 14657  00390C                     	if	0	;tblptru may be non-zero
 14658  00390C                     	endif
 14659  00390C  0008               	tblrd		*
 14660  00390E  CFF5 F086          	movff	tablat,sprintf@c
 14661  003912  5186               	movf	sprintf@c& (0+255),w,b
 14662                           
 14663                           ; Switch size 1, requested type "space"
 14664                           ; Number of cases is 2, Range of values is 0 to 115
 14665                           ; switch strategies available:
 14666                           ; Name         Instructions Cycles
 14667                           ; simple_byte            7     4 (average)
 14668                           ;	Chosen strategy is simple_byte
 14669  003914  0A00               	xorlw	0	; case 0
 14670  003916  B4D8               	btfsc	status,2,c
 14671  003918  D00F               	goto	u13380
 14672  00391A  0A73               	xorlw	115	; case 115
 14673  00391C  B4D8               	btfsc	status,2,c
 14674  00391E  D7C2               	goto	l2735
 14675  003920                     l2741:
 14676                           
 14677                           ; BSR set to: 0
 14678                           
 14679                           ; BSR set to: 0
 14680                           
 14681                           ;doprnt.c: 1422: {
 14682                           
 14683                           ; BSR set to: 0
 14684  003920  C07F  FFF6         	movff	sprintf@f,tblptrl
 14685  003924  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14686  003928  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14687  00392A  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14688  00392C                     	if	0	;tblptru may be non-zero
 14689  00392C                     	endif
 14690  00392C                     	if	0	;tblptru may be non-zero
 14691  00392C                     	endif
 14692  00392C  0008               	tblrd		*
 14693  00392E  CFF5 F086          	movff	tablat,sprintf@c
 14694  003932  5186               	movf	sprintf@c& (0+255),w,b
 14695  003934  A4D8               	btfss	status,2,c
 14696  003936  D7A6               	goto	l2730
 14697  003938                     u13380:
 14698                           
 14699                           ; BSR set to: 0
 14700                           ;doprnt.c: 1538: *sp = 0;
 14701                           
 14702                           ; BSR set to: 0
 14703                           
 14704                           ;doprnt.c: 1469: }
 14705                           ;doprnt.c: 1533: }
 14706                           ;doprnt.c: 1535: alldone:
 14707                           
 14708                           ; BSR set to: 0
 14709  003938  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14710  00393C  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14711  003940  0E00               	movlw	0
 14712  003942  6EDF               	movwf	indf2,c
 14713  003944  0012               	return	
 14714  003946                     __end_of_sprintf:
 14715                           	opt stack 0
 14716                           tosu	equ	0xFFF
 14717                           tosh	equ	0xFFE
 14718                           tosl	equ	0xFFD
 14719                           pclath	equ	0xFFA
 14720                           tblptru	equ	0xFF8
 14721                           tblptrh	equ	0xFF7
 14722                           tblptrl	equ	0xFF6
 14723                           tablat	equ	0xFF5
 14724                           prodh	equ	0xFF4
 14725                           prodl	equ	0xFF3
 14726                           intcon	equ	0xFF2
 14727                           intcon2	equ	0xFF1
 14728                           intcon3	equ	0xFF0
 14729                           indf0	equ	0xFEF
 14730                           postinc0	equ	0xFEE
 14731                           plusw0	equ	0xFEB
 14732                           fsr0h	equ	0xFEA
 14733                           fsr0l	equ	0xFE9
 14734                           wreg	equ	0xFE8
 14735                           indf1	equ	0xFE7
 14736                           postinc1	equ	0xFE6
 14737                           postdec1	equ	0xFE5
 14738                           fsr1h	equ	0xFE2
 14739                           fsr1l	equ	0xFE1
 14740                           indf2	equ	0xFDF
 14741                           postinc2	equ	0xFDE
 14742                           postdec2	equ	0xFDD
 14743                           plusw2	equ	0xFDB
 14744                           fsr2h	equ	0xFDA
 14745                           fsr2l	equ	0xFD9
 14746                           status	equ	0xFD8
 14747                           
 14748 ;; *************** function _memset *****************
 14749 ;; Defined at:
 14750 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14751 ;; Parameters:    Size  Location     Type
 14752 ;;  p1              2   29[BANK0 ] PTR void 
 14753 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14754 ;;  c               2   31[BANK0 ] int 
 14755 ;;  n               2   33[BANK0 ] unsigned int 
 14756 ;; Auto vars:     Size  Location     Type
 14757 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14758 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14759 ;; Return value:  Size  Location     Type
 14760 ;;                  2   29[BANK0 ] PTR void 
 14761 ;; Registers used:
 14762 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14763 ;; Tracked objects:
 14764 ;;		On entry : 0/0
 14765 ;;		On exit  : 0/0
 14766 ;;		Unchanged: 0/0
 14767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14768 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14769 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14771 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14772 ;;Total ram usage:        8 bytes
 14773 ;; Hardware stack levels used:    1
 14774 ;; Hardware stack levels required when called:   11
 14775 ;; This function calls:
 14776 ;;		Nothing
 14777 ;; This function is called by:
 14778 ;;		_USBDeviceInit
 14779 ;;		_USBStdSetCfgHandler
 14780 ;;		_Term_MainSm
 14781 ;; This function uses a non-reentrant model
 14782 ;;
 14783                           
 14784                           	psect	text59
 14785  005EAC                     __ptext59:
 14786                           	opt stack 0
 14787  005EAC                     _memset:
 14788                           	opt stack 14
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;incstack = 0
 14792  005EAC  C07D  F083         	movff	memset@p1,memset@p
 14793  005EB0  C07E  F084         	movff	memset@p1+1,memset@p+1
 14794  005EB4  D009               	goto	l3211
 14795  005EB6                     l12140:
 14796  005EB6  C083  FFD9         	movff	memset@p,fsr2l
 14797  005EBA  C084  FFDA         	movff	memset@p+1,fsr2h
 14798  005EBE  C07F  FFDF         	movff	memset@c,indf2
 14799  005EC2  0100               	movlb	0	; () banked
 14800  005EC4  4B83               	infsnz	memset@p& (0+255),f,b
 14801  005EC6  2B84               	incf	(memset@p+1)& (0+255),f,b
 14802  005EC8                     l3211:
 14803                           
 14804                           ; BSR set to: 0
 14805  005EC8  0100               	movlb	0	; () banked
 14806  005ECA  0781               	decf	memset@n& (0+255),f,b
 14807  005ECC  A0D8               	btfss	status,0,c
 14808  005ECE  0782               	decf	(memset@n+1)& (0+255),f,b
 14809  005ED0  2981               	incf	memset@n& (0+255),w,b
 14810  005ED2  E1F1               	bnz	l12140
 14811  005ED4  2982               	incf	(memset@n+1)& (0+255),w,b
 14812  005ED6  B4D8               	btfsc	status,2,c
 14813  005ED8  0012               	return	
 14814  005EDA  D7ED               	goto	l3212
 14815  005EDC                     __end_of_memset:
 14816                           	opt stack 0
 14817                           tosu	equ	0xFFF
 14818                           tosh	equ	0xFFE
 14819                           tosl	equ	0xFFD
 14820                           pclath	equ	0xFFA
 14821                           tblptru	equ	0xFF8
 14822                           tblptrh	equ	0xFF7
 14823                           tblptrl	equ	0xFF6
 14824                           tablat	equ	0xFF5
 14825                           prodh	equ	0xFF4
 14826                           prodl	equ	0xFF3
 14827                           intcon	equ	0xFF2
 14828                           intcon2	equ	0xFF1
 14829                           intcon3	equ	0xFF0
 14830                           indf0	equ	0xFEF
 14831                           postinc0	equ	0xFEE
 14832                           plusw0	equ	0xFEB
 14833                           fsr0h	equ	0xFEA
 14834                           fsr0l	equ	0xFE9
 14835                           wreg	equ	0xFE8
 14836                           indf1	equ	0xFE7
 14837                           postinc1	equ	0xFE6
 14838                           postdec1	equ	0xFE5
 14839                           fsr1h	equ	0xFE2
 14840                           fsr1l	equ	0xFE1
 14841                           indf2	equ	0xFDF
 14842                           postinc2	equ	0xFDE
 14843                           postdec2	equ	0xFDD
 14844                           plusw2	equ	0xFDB
 14845                           fsr2h	equ	0xFDA
 14846                           fsr2l	equ	0xFD9
 14847                           status	equ	0xFD8
 14848                           
 14849 ;; *************** function _Terminal *****************
 14850 ;; Defined at:
 14851 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14852 ;; Parameters:    Size  Location     Type
 14853 ;;		None
 14854 ;; Auto vars:     Size  Location     Type
 14855 ;;  i               1   68[BANK0 ] unsigned char 
 14856 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14857 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14858 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14859 ;;  Index           1   70[BANK0 ] unsigned char 
 14860 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14861 ;; Return value:  Size  Location     Type
 14862 ;;                  1    wreg      void 
 14863 ;; Registers used:
 14864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14865 ;; Tracked objects:
 14866 ;;		On entry : 0/0
 14867 ;;		On exit  : 0/0
 14868 ;;		Unchanged: 0/0
 14869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14871 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14872 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14873 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14874 ;;Total ram usage:      455 bytes
 14875 ;; Hardware stack levels used:    1
 14876 ;; Hardware stack levels required when called:   15
 14877 ;; This function calls:
 14878 ;;		_I2cSlv_I2cReadMsgSts
 14879 ;;		_I2cSlv_ReceiveI2cMsg
 14880 ;;		_I2cSlv_SendI2cMsg
 14881 ;;		_OsTmr_Wait
 14882 ;;		_atoi
 14883 ;;		_getsUSBUSART
 14884 ;;		_itoa
 14885 ;;		_putUSBUSART
 14886 ;;		_strcpy
 14887 ;;		_strtol
 14888 ;;		_xtoi
 14889 ;; This function is called by:
 14890 ;;		_Term_MainSm
 14891 ;; This function uses a non-reentrant model
 14892 ;;
 14893                           
 14894                           	psect	text60
 14895  0000D0                     __ptext60:
 14896                           	opt stack 0
 14897  0000D0                     _Terminal:
 14898                           	opt stack 11
 14899                           
 14900                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14901                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14902                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14903                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14904                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14905                           ;term.c: 435: UINT8 Index;
 14906                           ;term.c: 436: static UINT8 Len[4];
 14907                           ;term.c: 437: static UINT8 PackageLen;
 14908                           ;term.c: 438: static UINT8 Addr[4];
 14909                           ;term.c: 439: static UINT8 SlaveAddr;
 14910                           ;term.c: 440: static PayloadType Payload[20u];
 14911                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14912                           
 14913                           ; BSR set to: 0
 14914                           ;incstack = 0
 14915  0000D0  0E00               	movlw	0
 14916  0000D2  0100               	movlb	0	; () banked
 14917  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14918                           
 14919                           ; BSR set to: 0
 14920                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14921                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14922                           ;term.c: 445: static SwTimerType SwTimer;
 14923                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14924  0000D6  0E1F               	movlw	31
 14925  0000D8  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 14926  0000DA  0012               	return	
 14927                           
 14928                           ; BSR set to: 0
 14929  0000DC  B265               	btfsc	3941,1,c	;volatile
 14930  0000DE  0012               	return	
 14931  0000E0  D278               	goto	l2393
 14932  0000E2                     
 14933                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14934                           
 14935                           ; BSR set to: 0
 14936  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14937  0000E4  0100               	movlb	0	; () banked
 14938  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14939  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14940  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14941  0000EC  0EC8               	movlw	200
 14942  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14943  0000F0  EC12  F024         	call	_getsUSBUSART	;wreg free
 14944  0000F4  0100               	movlb	0	; () banked
 14945  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14946                           
 14947                           ; BSR set to: 0
 14948                           ;term.c: 458: if (ReceivedBytes > 0)
 14949  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14950  0000FA  B4D8               	btfsc	status,2,c
 14951  0000FC  0012               	return	
 14952                           
 14953                           ; BSR set to: 0
 14954                           ;term.c: 459: {
 14955                           ;term.c: 461: if (EchoOption == 1u)
 14956  0000FE  0102               	movlb	2	; () banked
 14957  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 14958  000102  A4D8               	btfss	status,2,c
 14959  000104  D026               	goto	l2397
 14960                           
 14961                           ; BSR set to: 2
 14962                           ;term.c: 462: {
 14963                           ;term.c: 464: if((cdc_trf_state == 0))
 14964  000106  0100               	movlb	0	; () banked
 14965  000108  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14966  00010A  A4D8               	btfss	status,2,c
 14967  00010C  D022               	goto	l2397
 14968                           
 14969                           ; BSR set to: 0
 14970                           ;term.c: 465: {
 14971                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 14972  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14973  000110  0D01               	mullw	1
 14974  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 14975  000114  24F3               	addwf	prodl,w,c
 14976  000116  6ED9               	movwf	fsr2l,c
 14977  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 14978  00011A  20F4               	addwfc	prodh,w,c
 14979  00011C  6EDA               	movwf	fsr2h,c
 14980  00011E  0E0D               	movlw	13
 14981  000120  6EDF               	movwf	indf2,c
 14982                           
 14983                           ; BSR set to: 0
 14984                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 14985  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14986  000124  6FA2               	movwf	??_Terminal& (0+255),b
 14987  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 14988  000128  0E01               	movlw	1
 14989  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 14990  00012C  0E00               	movlw	0
 14991  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 14992  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 14993  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 14994  000134  6ED9               	movwf	fsr2l,c
 14995  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 14996  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 14997  00013A  6EDA               	movwf	fsr2h,c
 14998  00013C  0E0A               	movlw	10
 14999  00013E  6EDF               	movwf	indf2,c
 15000                           
 15001                           ; BSR set to: 0
 15002                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15003  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15004  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15005  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15006  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15007  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15008  00014A  0F02               	addlw	2
 15009  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15010  00014E  ECD7  F030         	call	_putUSBUSART	;wreg free
 15011  000152                     l2397:
 15012                           
 15013                           ;term.c: 469: }
 15014                           ;term.c: 470: }
 15015                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 15016                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 15017                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15018  000152  0E53               	movlw	83
 15019  000154  010A               	movlb	10	; () banked
 15020  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15021  000158  A4D8               	btfss	status,2,c
 15022  00015A  D043               	goto	l2398
 15023                           
 15024                           ; BSR set to: 10
 15025  00015C  0E4F               	movlw	79
 15026  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15027  000160  A4D8               	btfss	status,2,c
 15028  000162  D03F               	goto	l2398
 15029                           
 15030                           ; BSR set to: 10
 15031  000164  0E3A               	movlw	58
 15032  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15033  000168  A4D8               	btfss	status,2,c
 15034  00016A  D03B               	goto	l2398
 15035                           
 15036                           ; BSR set to: 10
 15037                           ;term.c: 476: {
 15038                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15039  00016C  0E47               	movlw	71
 15040  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15041  000170  A4D8               	btfss	status,2,c
 15042  000172  0012               	return	
 15043                           
 15044                           ; BSR set to: 10
 15045  000174  0E3A               	movlw	58
 15046  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15047  000178  A4D8               	btfss	status,2,c
 15048  00017A  0012               	return	
 15049                           
 15050                           ; BSR set to: 10
 15051                           ;term.c: 479: {
 15052                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15053  00017C  0E44               	movlw	68
 15054  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15055  000180  A4D8               	btfss	status,2,c
 15056  000182  D015               	goto	l2400
 15057                           
 15058                           ; BSR set to: 10
 15059  000184  0E46               	movlw	70
 15060  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15061  000188  A4D8               	btfss	status,2,c
 15062  00018A  D011               	goto	l2400
 15063                           
 15064                           ; BSR set to: 10
 15065                           ;term.c: 482: {
 15066                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15067  00018C  0E41               	movlw	65
 15068  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15069  000190  A4D8               	btfss	status,2,c
 15070  000192  D004               	goto	l2401
 15071                           
 15072                           ; BSR set to: 10
 15073                           ;term.c: 484: {
 15074                           ;term.c: 485: FormatOption = 1u;
 15075  000194  0E01               	movlw	1
 15076  000196  0102               	movlb	2	; () banked
 15077  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15078                           
 15079                           ;term.c: 486: }
 15080  00019A  0012               	return	
 15081  00019C                     l2401:
 15082                           
 15083                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15084                           
 15085                           ; BSR set to: 2
 15086  00019C  0E42               	movlw	66
 15087  00019E  010A               	movlb	10	; () banked
 15088  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15089  0001A2  A4D8               	btfss	status,2,c
 15090  0001A4  0012               	return	
 15091                           
 15092                           ; BSR set to: 10
 15093                           ;term.c: 488: {
 15094                           ;term.c: 489: FormatOption = 0u;
 15095  0001A6  0E00               	movlw	0
 15096  0001A8  0102               	movlb	2	; () banked
 15097  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15098                           
 15099                           ; BSR set to: 2
 15100                           ;term.c: 490: }
 15101                           ;term.c: 491: }
 15102                           
 15103                           ; BSR set to: 2
 15104  0001AC  0012               	return	
 15105  0001AE                     l2400:
 15106                           
 15107                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15108                           
 15109                           ; BSR set to: 2
 15110  0001AE  0E45               	movlw	69
 15111  0001B0  010A               	movlb	10	; () banked
 15112  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15113  0001B4  A4D8               	btfss	status,2,c
 15114  0001B6  0012               	return	
 15115                           
 15116                           ; BSR set to: 10
 15117  0001B8  0E4D               	movlw	77
 15118  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15119  0001BC  A4D8               	btfss	status,2,c
 15120  0001BE  0012               	return	
 15121                           
 15122                           ; BSR set to: 10
 15123                           ;term.c: 494: {
 15124                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15125  0001C0  0E31               	movlw	49
 15126  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15127  0001C4  A4D8               	btfss	status,2,c
 15128  0001C6  D004               	goto	l2406
 15129                           
 15130                           ; BSR set to: 10
 15131                           ;term.c: 496: {
 15132                           ;term.c: 497: EchoOption = 1u;
 15133  0001C8  0E01               	movlw	1
 15134  0001CA  0102               	movlb	2	; () banked
 15135  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15136                           
 15137                           ;term.c: 498: }
 15138  0001CE  0012               	return	
 15139  0001D0                     l2406:
 15140                           
 15141                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15142                           
 15143                           ; BSR set to: 2
 15144  0001D0  0E30               	movlw	48
 15145  0001D2  010A               	movlb	10	; () banked
 15146  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15147  0001D6  A4D8               	btfss	status,2,c
 15148  0001D8  0012               	return	
 15149                           
 15150                           ; BSR set to: 10
 15151                           ;term.c: 500: {
 15152                           ;term.c: 501: EchoOption = 0u;
 15153  0001DA  0E00               	movlw	0
 15154  0001DC  0102               	movlb	2	; () banked
 15155  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15156                           
 15157                           ; BSR set to: 2
 15158                           ;term.c: 507: }
 15159                           ;term.c: 508: }
 15160                           ;term.c: 509: }
 15161                           
 15162                           ; BSR set to: 2
 15163                           
 15164                           ; BSR set to: 2
 15165                           
 15166                           ;term.c: 504: else
 15167                           ;term.c: 505: {
 15168                           
 15169                           ; BSR set to: 2
 15170                           
 15171                           ; BSR set to: 2
 15172                           ;term.c: 502: }
 15173                           ;term.c: 503: }
 15174                           
 15175                           ; BSR set to: 2
 15176  0001E0  0012               	return	
 15177  0001E2                     l2398:
 15178                           
 15179                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15180                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15181                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15182                           
 15183                           ; BSR set to: 2
 15184  0001E2  0E53               	movlw	83
 15185  0001E4  010A               	movlb	10	; () banked
 15186  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15187  0001E8  A4D8               	btfss	status,2,c
 15188  0001EA  D0D3               	goto	l2411
 15189                           
 15190                           ; BSR set to: 10
 15191  0001EC  0E42               	movlw	66
 15192  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15193  0001F0  A4D8               	btfss	status,2,c
 15194  0001F2  D0CF               	goto	l2411
 15195                           
 15196                           ; BSR set to: 10
 15197  0001F4  0E3A               	movlw	58
 15198  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15199  0001F8  A4D8               	btfss	status,2,c
 15200  0001FA  D0CB               	goto	l2411
 15201                           
 15202                           ; BSR set to: 10
 15203                           ;term.c: 513: {
 15204                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15205  0001FC  0E57               	movlw	87
 15206  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15207  000200  A4D8               	btfss	status,2,c
 15208  000202  D091               	goto	l2412
 15209                           
 15210                           ; BSR set to: 10
 15211  000204  0E3A               	movlw	58
 15212  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15213  000208  A4D8               	btfss	status,2,c
 15214  00020A  D08D               	goto	l2412
 15215                           
 15216                           ; BSR set to: 10
 15217                           ;term.c: 515: {
 15218                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15219  00020C  CA05  F3B0         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15220                           
 15221                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15222  000210  CA06  F3B1         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15223                           
 15224                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15225  000214  CA08  F3AC         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15226                           
 15227                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15228  000218  CA09  F3AD         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15229                           
 15230                           ; BSR set to: 10
 15231                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15232  00021C  0EB0               	movlw	low Terminal@Len
 15233  00021E  0100               	movlb	0	; () banked
 15234  000220  6F83               	movwf	atoi@s& (0+255),b
 15235  000222  0E03               	movlw	high Terminal@Len
 15236  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15237  000226  EC67  F01B         	call	_atoi	;wreg free
 15238  00022A  0100               	movlb	0	; () banked
 15239  00022C  5183               	movf	?_atoi& (0+255),w,b
 15240  00022E  0102               	movlb	2	; () banked
 15241  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15242                           
 15243                           ; BSR set to: 2
 15244                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15245  000232  0EAC               	movlw	low Terminal@Addr
 15246  000234  0100               	movlb	0	; () banked
 15247  000236  6F83               	movwf	xtoi@s& (0+255),b
 15248  000238  0E03               	movlw	high Terminal@Addr
 15249  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15250  00023C  EC16  F01A         	call	_xtoi	;wreg free
 15251  000240  0100               	movlb	0	; () banked
 15252  000242  5183               	movf	?_xtoi& (0+255),w,b
 15253  000244  0102               	movlb	2	; () banked
 15254  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15255                           
 15256                           ; BSR set to: 2
 15257                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15258  000248  0E00               	movlw	0
 15259  00024A  0100               	movlb	0	; () banked
 15260  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15261  00024E  D032               	goto	l2413
 15262  000250                     
 15263                           ;term.c: 527: {
 15264                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15265                           
 15266                           ; BSR set to: 0
 15267  000250  0100               	movlb	0	; () banked
 15268  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15269  000254  0D02               	mullw	2
 15270  000256  0E0B               	movlw	11
 15271  000258  26F3               	addwf	prodl,f,c
 15272  00025A  0E00               	movlw	0
 15273  00025C  22F4               	addwfc	prodh,f,c
 15274  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15275  000260  24F3               	addwf	prodl,w,c
 15276  000262  6ED9               	movwf	fsr2l,c
 15277  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15278  000266  20F4               	addwfc	prodh,w,c
 15279  000268  6EDA               	movwf	fsr2h,c
 15280  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15281  00026C  0D04               	mullw	4
 15282  00026E  0E66               	movlw	low Terminal@Payload
 15283  000270  24F3               	addwf	prodl,w,c
 15284  000272  6EE1               	movwf	fsr1l,c
 15285  000274  0E07               	movlw	high Terminal@Payload
 15286  000276  20F4               	addwfc	prodh,w,c
 15287  000278  6EE2               	movwf	fsr1h,c
 15288  00027A  CFDF FFE7          	movff	indf2,indf1
 15289                           
 15290                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15291  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15292  000280  0D02               	mullw	2
 15293  000282  0E0C               	movlw	12
 15294  000284  26F3               	addwf	prodl,f,c
 15295  000286  0E00               	movlw	0
 15296  000288  22F4               	addwfc	prodh,f,c
 15297  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15298  00028C  24F3               	addwf	prodl,w,c
 15299  00028E  6ED9               	movwf	fsr2l,c
 15300  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15301  000292  20F4               	addwfc	prodh,w,c
 15302  000294  6EDA               	movwf	fsr2h,c
 15303  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15304  000298  0D04               	mullw	4
 15305  00029A  0E01               	movlw	1
 15306  00029C  26F3               	addwf	prodl,f,c
 15307  00029E  0E00               	movlw	0
 15308  0002A0  22F4               	addwfc	prodh,f,c
 15309  0002A2  0E66               	movlw	low Terminal@Payload
 15310  0002A4  24F3               	addwf	prodl,w,c
 15311  0002A6  6EE1               	movwf	fsr1l,c
 15312  0002A8  0E07               	movlw	high Terminal@Payload
 15313  0002AA  20F4               	addwfc	prodh,w,c
 15314  0002AC  6EE2               	movwf	fsr1h,c
 15315  0002AE  CFDF FFE7          	movff	indf2,indf1
 15316                           
 15317                           ; BSR set to: 0
 15318  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15319  0002B4                     l2413:
 15320                           
 15321                           ; BSR set to: 0
 15322                           
 15323                           ; BSR set to: 0
 15324  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15325  0002B6  0102               	movlb	2	; () banked
 15326  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15327  0002BA  B0D8               	btfsc	status,0,c
 15328  0002BC  D7C9               	goto	l2414
 15329                           
 15330                           ; BSR set to: 2
 15331                           ;term.c: 530: }
 15332                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15333                           
 15334                           ; BSR set to: 2
 15335  0002BE  0E00               	movlw	0
 15336  0002C0  0100               	movlb	0	; () banked
 15337  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15338  0002C4  D01F               	goto	l2416
 15339  0002C6                     
 15340                           ;term.c: 533: {
 15341                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15342                           
 15343                           ; BSR set to: 0
 15344  0002C6  0100               	movlb	0	; () banked
 15345  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15346  0002CA  0D04               	mullw	4
 15347  0002CC  0E66               	movlw	low Terminal@Payload
 15348  0002CE  24F3               	addwf	prodl,w,c
 15349  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15350  0002D2  0E07               	movlw	high Terminal@Payload
 15351  0002D4  20F4               	addwfc	prodh,w,c
 15352  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15353  0002D8  0E00               	movlw	0
 15354  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15355  0002DC  0E00               	movlw	0
 15356  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15357  0002E0  0E00               	movlw	0
 15358  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15359  0002E4  0E10               	movlw	16
 15360  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15361  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15362  0002EC  0100               	movlb	0	; () banked
 15363  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15364  0002F0  0D01               	mullw	1
 15365  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15366  0002F4  24F3               	addwf	prodl,w,c
 15367  0002F6  6ED9               	movwf	fsr2l,c
 15368  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15369  0002FA  20F4               	addwfc	prodh,w,c
 15370  0002FC  6EDA               	movwf	fsr2h,c
 15371  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15372                           
 15373                           ; BSR set to: 0
 15374  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15375  000304                     l2416:
 15376                           
 15377                           ; BSR set to: 0
 15378                           
 15379                           ; BSR set to: 0
 15380  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15381  000306  0102               	movlb	2	; () banked
 15382  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15383  00030A  B0D8               	btfsc	status,0,c
 15384  00030C  D7DC               	goto	l2417
 15385                           
 15386                           ; BSR set to: 2
 15387                           ;term.c: 539: }
 15388                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15389                           
 15390                           ; BSR set to: 2
 15391  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15392  000310  0100               	movlb	0	; () banked
 15393  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15394  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15395  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15396  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15397  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15398  000320  EC26  F02E         	call	_I2cSlv_SendI2cMsg	;wreg free
 15399                           
 15400                           ;term.c: 543: }
 15401  000324  0012               	return	
 15402  000326                     l2412:
 15403                           
 15404                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15405  000326  0E52               	movlw	82
 15406  000328  010A               	movlb	10	; () banked
 15407  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15408  00032C  A4D8               	btfss	status,2,c
 15409  00032E  0012               	return	
 15410                           
 15411                           ; BSR set to: 10
 15412  000330  0E3A               	movlw	58
 15413  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15414  000334  A4D8               	btfss	status,2,c
 15415  000336  0012               	return	
 15416                           
 15417                           ; BSR set to: 10
 15418                           ;term.c: 545: {
 15419                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15420  000338  CA05  F3B0         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15421                           
 15422                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15423  00033C  CA06  F3B1         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15424                           
 15425                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15426  000340  CA08  F3AC         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15427                           
 15428                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15429  000344  CA09  F3AD         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15430                           
 15431                           ; BSR set to: 10
 15432                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15433  000348  0EB0               	movlw	low Terminal@Len
 15434  00034A  0100               	movlb	0	; () banked
 15435  00034C  6F83               	movwf	atoi@s& (0+255),b
 15436  00034E  0E03               	movlw	high Terminal@Len
 15437  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15438  000352  EC67  F01B         	call	_atoi	;wreg free
 15439  000356  0100               	movlb	0	; () banked
 15440  000358  5183               	movf	?_atoi& (0+255),w,b
 15441  00035A  0102               	movlb	2	; () banked
 15442  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15443                           
 15444                           ; BSR set to: 2
 15445                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15446  00035E  0EAC               	movlw	low Terminal@Addr
 15447  000360  0100               	movlb	0	; () banked
 15448  000362  6F83               	movwf	xtoi@s& (0+255),b
 15449  000364  0E03               	movlw	high Terminal@Addr
 15450  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15451  000368  EC16  F01A         	call	_xtoi	;wreg free
 15452  00036C  0100               	movlb	0	; () banked
 15453  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15454  000370  0102               	movlb	2	; () banked
 15455  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15456                           
 15457                           ; BSR set to: 2
 15458                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15459  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15460  000376  0100               	movlb	0	; () banked
 15461  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15462  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15463  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15464  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15465  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15466  000386  ECA7  F02D         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15467                           
 15468                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15469  00038A  0E01               	movlw	1
 15470  00038C  0102               	movlb	2	; () banked
 15471  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15472                           
 15473                           ; BSR set to: 2
 15474                           ;term.c: 561: }
 15475                           ;term.c: 562: }
 15476                           
 15477                           ; BSR set to: 2
 15478  000390  0012               	return	
 15479  000392                     l2411:
 15480                           
 15481                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15482                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15483                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15484                           
 15485                           ; BSR set to: 2
 15486  000392  0E54               	movlw	84
 15487  000394  010A               	movlb	10	; () banked
 15488  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15489  000398  A4D8               	btfss	status,2,c
 15490  00039A  0012               	return	
 15491                           
 15492                           ; BSR set to: 10
 15493  00039C  0E45               	movlw	69
 15494  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15495  0003A0  A4D8               	btfss	status,2,c
 15496  0003A2  0012               	return	
 15497                           
 15498                           ; BSR set to: 10
 15499  0003A4  0E4C               	movlw	76
 15500  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15501  0003A8  A4D8               	btfss	status,2,c
 15502  0003AA  0012               	return	
 15503                           
 15504                           ; BSR set to: 10
 15505                           ;term.c: 566: {
 15506                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15507  0003AC  CA03  F3B0         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15508                           
 15509                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15510  0003B0  CA04  F3B1         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15511                           
 15512                           ; BSR set to: 10
 15513                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 15514  0003B4  0EB0               	movlw	low Terminal@Len
 15515  0003B6  0100               	movlb	0	; () banked
 15516  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15517  0003BA  0E03               	movlw	high Terminal@Len
 15518  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15519  0003BE  EC67  F01B         	call	_atoi	;wreg free
 15520  0003C2  C083  F322         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15521  0003C6  C084  F323         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15522                           
 15523                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15524  0003CA  0E00               	movlw	0
 15525  0003CC  0100               	movlb	0	; () banked
 15526  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15527  0003D0  D018               	goto	l2423
 15528  0003D2                     
 15529                           ; BSR set to: 0
 15530                           ;term.c: 573: {
 15531                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15532                           
 15533                           ; BSR set to: 0
 15534  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15535  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15536  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15537  0003D8  0E05               	movlw	5
 15538  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15539  0003DC  0E00               	movlw	0
 15540  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15541  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15542  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15543  0003E4  6ED9               	movwf	fsr2l,c
 15544  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15545  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15546  0003EA  6EDA               	movwf	fsr2h,c
 15547  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15548  0003EE  0D01               	mullw	1
 15549  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 15550  0003F2  24F3               	addwf	prodl,w,c
 15551  0003F4  6EE1               	movwf	fsr1l,c
 15552  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15553  0003F8  20F4               	addwfc	prodh,w,c
 15554  0003FA  6EE2               	movwf	fsr1h,c
 15555  0003FC  CFDF FFE7          	movff	indf2,indf1
 15556                           
 15557                           ; BSR set to: 0
 15558  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15559  000402                     l2423:
 15560                           
 15561                           ; BSR set to: 0
 15562                           
 15563                           ; BSR set to: 0
 15564  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15565  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15566  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15567  000408  0103               	movlb	3	; () banked
 15568  00040A  5122               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15569  00040C  0100               	movlb	0	; () banked
 15570  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15571  000410  0103               	movlb	3	; () banked
 15572  000412  5123               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15573  000414  0100               	movlb	0	; () banked
 15574  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15575  000418  B0D8               	btfsc	status,0,c
 15576  00041A  0012               	return	
 15577  00041C  D7DA               	goto	l2424
 15578  00041E                     
 15579                           ;term.c: 619: if((cdc_trf_state == 0))
 15580                           
 15581                           ; BSR set to: 0
 15582  00041E  0100               	movlb	0	; () banked
 15583  000420  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15584  000422  A4D8               	btfss	status,2,c
 15585  000424  0012               	return	
 15586                           
 15587                           ; BSR set to: 0
 15588                           ;term.c: 620: {
 15589                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15590  000426  0E53               	movlw	83
 15591  000428  0102               	movlb	2	; () banked
 15592  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15593                           
 15594                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15595  00042C  0E42               	movlw	66
 15596  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15597                           
 15598                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15599  000430  0E5B               	movlw	91
 15600  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15601                           
 15602                           ; BSR set to: 2
 15603                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15604  000434  C3AC  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15605                           
 15606                           ; BSR set to: 2
 15607                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15608  000438  C3AD  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15609                           
 15610                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15611  00043C  0E5D               	movlw	93
 15612  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15613                           
 15614                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15615  000440  0E3A               	movlw	58
 15616  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15617                           
 15618                           ; BSR set to: 2
 15619                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15620  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15621  000446  0100               	movlb	0	; () banked
 15622  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15623  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15624  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15625  00044E  0E07               	movlw	7
 15626  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15627  000452  ECD7  F030         	call	_putUSBUSART	;wreg free
 15628                           
 15629                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15630  000456  0E02               	movlw	2
 15631  000458  0102               	movlb	2	; () banked
 15632  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15633                           
 15634                           ; BSR set to: 2
 15635                           ;term.c: 632: }
 15636                           ;term.c: 633: break;
 15637  00045C  0012               	return	
 15638  00045E                     
 15639                           ; BSR set to: 2
 15640                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15641                           
 15642                           ; BSR set to: 2
 15643  00045E  ECF9  F030         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15644  000462  06E8               	decf	wreg,f,c
 15645  000464  A4D8               	btfss	status,2,c
 15646  000466  D088               	goto	l2432
 15647                           
 15648                           ;term.c: 638: {
 15649                           ;term.c: 640: if (FormatOption == 1u)
 15650  000468  0102               	movlb	2	; () banked
 15651  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15652  00046C  A4D8               	btfss	status,2,c
 15653  00046E  D027               	goto	u13260
 15654                           
 15655                           ; BSR set to: 2
 15656                           ;term.c: 641: {
 15657                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15658  000470  0E00               	movlw	0
 15659  000472  0100               	movlb	0	; () banked
 15660  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15661  000476  D01E               	goto	l2434
 15662  000478                     
 15663                           ;term.c: 644: {
 15664                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15665                           
 15666                           ; BSR set to: 0
 15667  000478  0100               	movlb	0	; () banked
 15668  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15669  00047C  0D04               	mullw	4
 15670  00047E  0E66               	movlw	low Terminal@Payload
 15671  000480  24F3               	addwf	prodl,w,c
 15672  000482  6F93               	movwf	itoa@buf& (0+255),b
 15673  000484  0E07               	movlw	high Terminal@Payload
 15674  000486  20F4               	addwfc	prodh,w,c
 15675  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15676  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15677  00048C  0D01               	mullw	1
 15678  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 15679  000490  24F3               	addwf	prodl,w,c
 15680  000492  6ED9               	movwf	fsr2l,c
 15681  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15682  000496  20F4               	addwfc	prodh,w,c
 15683  000498  6EDA               	movwf	fsr2h,c
 15684  00049A  50DF               	movf	indf2,w,c
 15685  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15686  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15687  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15688  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15689  0004A4  0E00               	movlw	0
 15690  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15691  0004A8  0E0A               	movlw	10
 15692  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15693  0004AC  EC41  F02D         	call	_itoa	;wreg free
 15694  0004B0  0100               	movlb	0	; () banked
 15695  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15696  0004B4                     l2434:
 15697                           
 15698                           ; BSR set to: 0
 15699                           
 15700                           ; BSR set to: 0
 15701  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15702  0004B6  0102               	movlb	2	; () banked
 15703  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15704  0004BA  B0D8               	btfsc	status,0,c
 15705  0004BC  D7DD               	goto	l2435
 15706  0004BE                     u13260:
 15707                           
 15708                           ; BSR set to: 2
 15709                           ;term.c: 646: }
 15710                           ;term.c: 647: }
 15711                           ;term.c: 650: if((cdc_trf_state == 0))
 15712                           
 15713                           ; BSR set to: 2
 15714                           
 15715                           ; BSR set to: 2
 15716  0004BE  0100               	movlb	0	; () banked
 15717  0004C0  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15718  0004C2  A4D8               	btfss	status,2,c
 15719  0004C4  0012               	return	
 15720                           
 15721                           ; BSR set to: 0
 15722                           ;term.c: 651: {
 15723                           ;term.c: 653: if (FormatOption == 1u)
 15724  0004C6  0102               	movlb	2	; () banked
 15725  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15726  0004CA  A4D8               	btfss	status,2,c
 15727  0004CC  D02B               	goto	l2438
 15728                           
 15729                           ; BSR set to: 2
 15730                           ;term.c: 654: {
 15731                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15732  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15733  0004D0  0D08               	mullw	8
 15734  0004D2  0E03               	movlw	3
 15735  0004D4  26F3               	addwf	prodl,f,c
 15736  0004D6  0E00               	movlw	0
 15737  0004D8  22F4               	addwfc	prodh,f,c
 15738  0004DA  0E66               	movlw	low Terminal@Payload
 15739  0004DC  24F3               	addwf	prodl,w,c
 15740  0004DE  6ED9               	movwf	fsr2l,c
 15741  0004E0  0E07               	movlw	high Terminal@Payload
 15742  0004E2  20F4               	addwfc	prodh,w,c
 15743  0004E4  6EDA               	movwf	fsr2h,c
 15744  0004E6  0E0D               	movlw	13
 15745  0004E8  6EDF               	movwf	indf2,c
 15746                           
 15747                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15748  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15749  0004EC  0D08               	mullw	8
 15750  0004EE  0E02               	movlw	2
 15751  0004F0  26F3               	addwf	prodl,f,c
 15752  0004F2  0E00               	movlw	0
 15753  0004F4  22F4               	addwfc	prodh,f,c
 15754  0004F6  0E66               	movlw	low Terminal@Payload
 15755  0004F8  24F3               	addwf	prodl,w,c
 15756  0004FA  6ED9               	movwf	fsr2l,c
 15757  0004FC  0E07               	movlw	high Terminal@Payload
 15758  0004FE  20F4               	addwfc	prodh,w,c
 15759  000500  6EDA               	movwf	fsr2h,c
 15760  000502  0E0A               	movlw	10
 15761  000504  6EDF               	movwf	indf2,c
 15762                           
 15763                           ; BSR set to: 2
 15764                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15765  000506  0E66               	movlw	low Terminal@Payload
 15766  000508  0100               	movlb	0	; () banked
 15767  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15768  00050C  0E07               	movlw	high Terminal@Payload
 15769  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15770  000510  0102               	movlb	2	; () banked
 15771  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15772  000514  0D02               	mullw	2
 15773  000516  50F3               	movf	prodl,w,c
 15774  000518  0F04               	addlw	4
 15775  00051A  0100               	movlb	0	; () banked
 15776  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15777  00051E  ECD7  F030         	call	_putUSBUSART	;wreg free
 15778                           
 15779                           ;term.c: 659: }
 15780  000522  D026               	goto	l2439
 15781  000524                     l2438:
 15782                           
 15783                           ;term.c: 660: else
 15784                           ;term.c: 661: {
 15785                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15786  000524  0102               	movlb	2	; () banked
 15787  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15788  000528  0D01               	mullw	1
 15789  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 15790  00052C  24F3               	addwf	prodl,w,c
 15791  00052E  6ED9               	movwf	fsr2l,c
 15792  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15793  000532  20F4               	addwfc	prodh,w,c
 15794  000534  6EDA               	movwf	fsr2h,c
 15795  000536  0E0D               	movlw	13
 15796  000538  6EDF               	movwf	indf2,c
 15797                           
 15798                           ; BSR set to: 2
 15799                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15800  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15801  00053C  0100               	movlb	0	; () banked
 15802  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15803  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15804  000542  0E01               	movlw	1
 15805  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15806  000546  0E00               	movlw	0
 15807  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15808  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 15809  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15810  00054E  6ED9               	movwf	fsr2l,c
 15811  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15812  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15813  000554  6EDA               	movwf	fsr2h,c
 15814  000556  0E0A               	movlw	10
 15815  000558  6EDF               	movwf	indf2,c
 15816                           
 15817                           ; BSR set to: 0
 15818                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15819  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 15820  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15821  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15822  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15823  000562  0102               	movlb	2	; () banked
 15824  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15825  000566  0F02               	addlw	2
 15826  000568  0100               	movlb	0	; () banked
 15827  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15828  00056C  ECD7  F030         	call	_putUSBUSART	;wreg free
 15829  000570                     l2439:
 15830                           
 15831                           ;term.c: 666: }
 15832                           ;term.c: 668: TermState = Term_GetData;
 15833  000570  0E00               	movlw	0
 15834  000572  0102               	movlb	2	; () banked
 15835  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15836                           
 15837                           ; BSR set to: 2
 15838                           ;term.c: 669: }
 15839                           ;term.c: 670: }
 15840  000576  0012               	return	
 15841  000578                     l2432:
 15842                           
 15843                           ;term.c: 671: else
 15844                           ;term.c: 672: {
 15845                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15846                           
 15847                           ; BSR set to: 2
 15848  000578  0EDA               	movlw	low Terminal@SwTimer
 15849  00057A  0100               	movlb	0	; () banked
 15850  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15851  00057E  0E04               	movlw	high Terminal@SwTimer
 15852  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15853  000582  0EB8               	movlw	184
 15854  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15855  000586  0E0B               	movlw	11
 15856  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15857  00058A  0E00               	movlw	0
 15858  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15859  00058E  0E00               	movlw	0
 15860  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15861  000592  ECD8  F026         	call	_OsTmr_Wait	;wreg free
 15862  000596  06E8               	decf	wreg,f,c
 15863  000598  A4D8               	btfss	status,2,c
 15864  00059A  0012               	return	
 15865                           
 15866                           ;term.c: 675: {
 15867                           ;term.c: 677: if((cdc_trf_state == 0))
 15868  00059C  0100               	movlb	0	; () banked
 15869  00059E  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15870  0005A0  A4D8               	btfss	status,2,c
 15871  0005A2  0012               	return	
 15872                           
 15873                           ; BSR set to: 0
 15874                           ;term.c: 678: {
 15875                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15876  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15877  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15878  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15879  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15880  0005AC  0E5E               	movlw	low STR_21
 15881  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15882  0005B0  0EFE               	movlw	high STR_21
 15883  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15884  0005B4  EC25  F02F         	call	_strcpy	;wreg free
 15885                           
 15886                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15887  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15888  0005BA  0100               	movlb	0	; () banked
 15889  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15890  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15891  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15892  0005C2  0E29               	movlw	41
 15893  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15894  0005C6  ECD7  F030         	call	_putUSBUSART	;wreg free
 15895                           
 15896                           ;term.c: 682: TermState = Term_GetData;
 15897  0005CA  0E00               	movlw	0
 15898  0005CC  0102               	movlb	2	; () banked
 15899  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15900                           
 15901                           ; BSR set to: 2
 15902                           ;term.c: 693: }
 15903                           
 15904                           ; BSR set to: 2
 15905                           ;term.c: 692: break;
 15906                           
 15907                           ;term.c: 691: default:
 15908                           
 15909                           ; BSR set to: 2
 15910                           ;term.c: 689: break;
 15911                           
 15912                           ;term.c: 688: case Term_ReadSlvUartData:
 15913                           
 15914                           ; BSR set to: 2
 15915                           ;term.c: 683: }
 15916                           ;term.c: 684: }
 15917                           ;term.c: 685: }
 15918                           ;term.c: 686: break;
 15919                           
 15920                           ; BSR set to: 2
 15921                           
 15922                           ; BSR set to: 2
 15923  0005D0  0012               	return	
 15924  0005D2                     l2393:
 15925                           
 15926                           ; BSR set to: 2
 15927  0005D2  0102               	movlb	2	; () banked
 15928  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15929                           
 15930                           ; Switch size 1, requested type "space"
 15931                           ; Number of cases is 4, Range of values is 0 to 3
 15932                           ; switch strategies available:
 15933                           ; Name         Instructions Cycles
 15934                           ; simple_byte           13     7 (average)
 15935                           ;	Chosen strategy is simple_byte
 15936  0005D6  0A00               	xorlw	0	; case 0
 15937  0005D8  B4D8               	btfsc	status,2,c
 15938  0005DA  D583               	goto	l2394
 15939  0005DC  0A01               	xorlw	1	; case 1
 15940  0005DE  B4D8               	btfsc	status,2,c
 15941  0005E0  D71E               	goto	l2429
 15942  0005E2  0A03               	xorlw	3	; case 2
 15943  0005E4  B4D8               	btfsc	status,2,c
 15944  0005E6  D73B               	goto	l2431
 15945  0005E8  0A01               	xorlw	1	; case 3
 15946  0005EA  0012               	return	
 15947  0005EC                     __end_of_Terminal:
 15948                           	opt stack 0
 15949                           tosu	equ	0xFFF
 15950                           tosh	equ	0xFFE
 15951                           tosl	equ	0xFFD
 15952                           pclath	equ	0xFFA
 15953                           tblptru	equ	0xFF8
 15954                           tblptrh	equ	0xFF7
 15955                           tblptrl	equ	0xFF6
 15956                           tablat	equ	0xFF5
 15957                           prodh	equ	0xFF4
 15958                           prodl	equ	0xFF3
 15959                           intcon	equ	0xFF2
 15960                           intcon2	equ	0xFF1
 15961                           intcon3	equ	0xFF0
 15962                           indf0	equ	0xFEF
 15963                           postinc0	equ	0xFEE
 15964                           plusw0	equ	0xFEB
 15965                           fsr0h	equ	0xFEA
 15966                           fsr0l	equ	0xFE9
 15967                           wreg	equ	0xFE8
 15968                           indf1	equ	0xFE7
 15969                           postinc1	equ	0xFE6
 15970                           postdec1	equ	0xFE5
 15971                           fsr1h	equ	0xFE2
 15972                           fsr1l	equ	0xFE1
 15973                           indf2	equ	0xFDF
 15974                           postinc2	equ	0xFDE
 15975                           postdec2	equ	0xFDD
 15976                           plusw2	equ	0xFDB
 15977                           fsr2h	equ	0xFDA
 15978                           fsr2l	equ	0xFD9
 15979                           status	equ	0xFD8
 15980                           
 15981 ;; *************** function _xtoi *****************
 15982 ;; Defined at:
 15983 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 15984 ;; Parameters:    Size  Location     Type
 15985 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 15986 ;;		 -> Terminal@Addr(4), 
 15987 ;; Auto vars:     Size  Location     Type
 15988 ;;  val             2   40[BANK0 ] unsigned int 
 15989 ;;  c               1   42[BANK0 ] unsigned char 
 15990 ;;  sign            1   39[BANK0 ] unsigned char 
 15991 ;; Return value:  Size  Location     Type
 15992 ;;                  2   35[BANK0 ] unsigned int 
 15993 ;; Registers used:
 15994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15995 ;; Tracked objects:
 15996 ;;		On entry : 0/0
 15997 ;;		On exit  : 0/0
 15998 ;;		Unchanged: 0/0
 15999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16000 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16001 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16002 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16003 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16004 ;;Total ram usage:        8 bytes
 16005 ;; Hardware stack levels used:    1
 16006 ;; Hardware stack levels required when called:   13
 16007 ;; This function calls:
 16008 ;;		_isdigit
 16009 ;;		_isspace
 16010 ;;		_isupper
 16011 ;;		_isxdigit
 16012 ;;		_tolower
 16013 ;; This function is called by:
 16014 ;;		_Terminal
 16015 ;; This function uses a non-reentrant model
 16016 ;;
 16017                           
 16018                           	psect	text61
 16019  00342C                     __ptext61:
 16020                           	opt stack 0
 16021  00342C                     _xtoi:
 16022                           	opt stack 12
 16023                           
 16024                           ;incstack = 0
 16025  00342C  0E00               	movlw	0
 16026  00342E  0100               	movlb	0	; () banked
 16027  003430  6F87               	movwf	xtoi@sign& (0+255),b
 16028  003432  0E00               	movlw	0
 16029  003434  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16030  003436  0E00               	movlw	0
 16031  003438  6F88               	movwf	xtoi@val& (0+255),b
 16032  00343A  D003               	goto	l3406
 16033  00343C                     
 16034                           ; BSR set to: 0
 16035  00343C  0100               	movlb	0	; () banked
 16036  00343E  4B83               	infsnz	xtoi@s& (0+255),f,b
 16037  003440  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16038  003442                     l3406:
 16039                           
 16040                           ; BSR set to: 0
 16041                           
 16042                           ; BSR set to: 0
 16043  003442  C083  FFD9         	movff	xtoi@s,fsr2l
 16044  003446  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16045  00344A  50DF               	movf	indf2,w,c
 16046  00344C  ECF7  F02F         	call	_isspace
 16047  003450  B0D8               	btfsc	status,0,c
 16048  003452  D7F4               	goto	l3407
 16049  003454  C083  FFD9         	movff	xtoi@s,fsr2l
 16050  003458  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16051  00345C  0E2D               	movlw	45
 16052  00345E  18DE               	xorwf	postinc2,w,c
 16053  003460  A4D8               	btfss	status,2,c
 16054  003462  D003               	goto	l3409
 16055  003464  0100               	movlb	0	; () banked
 16056  003466  2B87               	incf	xtoi@sign& (0+255),f,b
 16057  003468  D009               	goto	L15
 16058  00346A                     l3409:
 16059                           
 16060                           ; BSR set to: 0
 16061  00346A  C083  FFD9         	movff	xtoi@s,fsr2l
 16062  00346E  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16063  003472  0E2B               	movlw	43
 16064  003474  18DE               	xorwf	postinc2,w,c
 16065  003476  A4D8               	btfss	status,2,c
 16066  003478  D028               	goto	l3412
 16067  00347A  0100               	movlb	0	; () banked
 16068  00347C                     L15:
 16069  00347C  4B83               	infsnz	xtoi@s& (0+255),f,b
 16070  00347E  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16071                           
 16072                           ; BSR set to: 0
 16073                           
 16074                           ; BSR set to: 0
 16075  003480  D024               	goto	l3412
 16076  003482                     
 16077                           ; BSR set to: 0
 16078  003482  0100               	movlb	0	; () banked
 16079  003484  518A               	movf	xtoi@c& (0+255),w,b
 16080  003486  ECC6  F030         	call	_isupper
 16081  00348A  A0D8               	btfss	status,0,c
 16082  00348C  D006               	goto	l3414
 16083  00348E  0100               	movlb	0	; () banked
 16084  003490  518A               	movf	xtoi@c& (0+255),w,b
 16085  003492  EC9B  F031         	call	_tolower
 16086  003496  0100               	movlb	0	; () banked
 16087  003498  6F8A               	movwf	xtoi@c& (0+255),b
 16088  00349A                     l3414:
 16089  00349A  0100               	movlb	0	; () banked
 16090  00349C  518A               	movf	xtoi@c& (0+255),w,b
 16091  00349E  ECE8  F030         	call	_isdigit
 16092  0034A2  A0D8               	btfss	status,0,c
 16093  0034A4  D002               	goto	l3415
 16094  0034A6  0E30               	movlw	48
 16095  0034A8  D001               	goto	L14
 16096  0034AA                     l3415:
 16097                           
 16098                           ; BSR set to: 0
 16099  0034AA  0E57               	movlw	87
 16100  0034AC                     L14:
 16101  0034AC  0100               	movlb	0	; () banked
 16102  0034AE  5F8A               	subwf	xtoi@c& (0+255),f,b
 16103                           
 16104                           ; BSR set to: 0
 16105  0034B0  3B88               	swapf	xtoi@val& (0+255),f,b
 16106  0034B2  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16107  0034B4  0EF0               	movlw	240
 16108  0034B6  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16109  0034B8  5188               	movf	xtoi@val& (0+255),w,b
 16110  0034BA  0B0F               	andlw	15
 16111  0034BC  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16112  0034BE  0EF0               	movlw	240
 16113  0034C0  1788               	andwf	xtoi@val& (0+255),f,b
 16114  0034C2  518A               	movf	xtoi@c& (0+255),w,b
 16115  0034C4  2788               	addwf	xtoi@val& (0+255),f,b
 16116  0034C6  0E00               	movlw	0
 16117  0034C8  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16118  0034CA                     l3412:
 16119                           
 16120                           ; BSR set to: 0
 16121  0034CA  C083  FFD9         	movff	xtoi@s,fsr2l
 16122  0034CE  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16123  0034D2  0100               	movlb	0	; () banked
 16124  0034D4  4B83               	infsnz	xtoi@s& (0+255),f,b
 16125  0034D6  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16126  0034D8  50DF               	movf	indf2,w,c
 16127  0034DA  6F8A               	movwf	xtoi@c& (0+255),b
 16128  0034DC  518A               	movf	xtoi@c& (0+255),w,b
 16129  0034DE  EC64  F02E         	call	_isxdigit
 16130  0034E2  B0D8               	btfsc	status,0,c
 16131  0034E4  D7CE               	goto	l3413
 16132  0034E6  0100               	movlb	0	; () banked
 16133  0034E8  5187               	movf	xtoi@sign& (0+255),w,b
 16134  0034EA  B4D8               	btfsc	status,2,c
 16135  0034EC  D00D               	goto	l3418
 16136                           
 16137                           ; BSR set to: 0
 16138  0034EE  C088  F085         	movff	xtoi@val,??_xtoi
 16139  0034F2  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16140  0034F6  1F85               	comf	??_xtoi& (0+255),f,b
 16141  0034F8  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16142  0034FA  4B85               	infsnz	??_xtoi& (0+255),f,b
 16143  0034FC  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16144  0034FE  C085  F083         	movff	??_xtoi,?_xtoi
 16145  003502  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16146  003506  0012               	return	
 16147  003508                     l3418:
 16148                           
 16149                           ; BSR set to: 0
 16150  003508  C088  F083         	movff	xtoi@val,?_xtoi
 16151  00350C  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16152                           
 16153                           ; BSR set to: 0
 16154  003510  0012               	return		;funcret
 16155  003512                     __end_of_xtoi:
 16156                           	opt stack 0
 16157                           tosu	equ	0xFFF
 16158                           tosh	equ	0xFFE
 16159                           tosl	equ	0xFFD
 16160                           pclath	equ	0xFFA
 16161                           tblptru	equ	0xFF8
 16162                           tblptrh	equ	0xFF7
 16163                           tblptrl	equ	0xFF6
 16164                           tablat	equ	0xFF5
 16165                           prodh	equ	0xFF4
 16166                           prodl	equ	0xFF3
 16167                           intcon	equ	0xFF2
 16168                           intcon2	equ	0xFF1
 16169                           intcon3	equ	0xFF0
 16170                           indf0	equ	0xFEF
 16171                           postinc0	equ	0xFEE
 16172                           plusw0	equ	0xFEB
 16173                           fsr0h	equ	0xFEA
 16174                           fsr0l	equ	0xFE9
 16175                           wreg	equ	0xFE8
 16176                           indf1	equ	0xFE7
 16177                           postinc1	equ	0xFE6
 16178                           postdec1	equ	0xFE5
 16179                           fsr1h	equ	0xFE2
 16180                           fsr1l	equ	0xFE1
 16181                           indf2	equ	0xFDF
 16182                           postinc2	equ	0xFDE
 16183                           postdec2	equ	0xFDD
 16184                           plusw2	equ	0xFDB
 16185                           fsr2h	equ	0xFDA
 16186                           fsr2l	equ	0xFD9
 16187                           status	equ	0xFD8
 16188                           
 16189 ;; *************** function _tolower *****************
 16190 ;; Defined at:
 16191 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16192 ;; Parameters:    Size  Location     Type
 16193 ;;  c               1    wreg     unsigned char 
 16194 ;; Auto vars:     Size  Location     Type
 16195 ;;  c               1   29[BANK0 ] unsigned char 
 16196 ;; Return value:  Size  Location     Type
 16197 ;;                  1    wreg      unsigned char 
 16198 ;; Registers used:
 16199 ;;		wreg, status,2, status,0
 16200 ;; Tracked objects:
 16201 ;;		On entry : 0/0
 16202 ;;		On exit  : 0/0
 16203 ;;		Unchanged: 0/0
 16204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16208 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16209 ;;Total ram usage:        1 bytes
 16210 ;; Hardware stack levels used:    1
 16211 ;; Hardware stack levels required when called:   11
 16212 ;; This function calls:
 16213 ;;		Nothing
 16214 ;; This function is called by:
 16215 ;;		_xtoi
 16216 ;; This function uses a non-reentrant model
 16217 ;;
 16218                           
 16219                           	psect	text62
 16220  006336                     __ptext62:
 16221                           	opt stack 0
 16222  006336                     _tolower:
 16223                           	opt stack 13
 16224                           
 16225                           ; BSR set to: 0
 16226                           ;incstack = 0
 16227                           ;tolower@c stored from wreg
 16228  006336  0100               	movlb	0	; () banked
 16229  006338  6F7D               	movwf	tolower@c& (0+255),b
 16230  00633A  0E5B               	movlw	91
 16231  00633C  0100               	movlb	0	; () banked
 16232  00633E  617D               	cpfslt	tolower@c& (0+255),b
 16233  006340  D004               	goto	l3465
 16234                           
 16235                           ; BSR set to: 0
 16236  006342  0E40               	movlw	64
 16237  006344  657D               	cpfsgt	tolower@c& (0+255),b
 16238  006346  D001               	goto	l3465
 16239                           
 16240                           ; BSR set to: 0
 16241  006348  8B7D               	bsf	tolower@c& (0+255),5,b
 16242  00634A                     l3465:
 16243                           
 16244                           ; BSR set to: 0
 16245                           
 16246                           ; BSR set to: 0
 16247  00634A  517D               	movf	tolower@c& (0+255),w,b
 16248  00634C  0012               	return	
 16249  00634E                     __end_of_tolower:
 16250                           	opt stack 0
 16251                           tosu	equ	0xFFF
 16252                           tosh	equ	0xFFE
 16253                           tosl	equ	0xFFD
 16254                           pclath	equ	0xFFA
 16255                           tblptru	equ	0xFF8
 16256                           tblptrh	equ	0xFF7
 16257                           tblptrl	equ	0xFF6
 16258                           tablat	equ	0xFF5
 16259                           prodh	equ	0xFF4
 16260                           prodl	equ	0xFF3
 16261                           intcon	equ	0xFF2
 16262                           intcon2	equ	0xFF1
 16263                           intcon3	equ	0xFF0
 16264                           indf0	equ	0xFEF
 16265                           postinc0	equ	0xFEE
 16266                           plusw0	equ	0xFEB
 16267                           fsr0h	equ	0xFEA
 16268                           fsr0l	equ	0xFE9
 16269                           wreg	equ	0xFE8
 16270                           indf1	equ	0xFE7
 16271                           postinc1	equ	0xFE6
 16272                           postdec1	equ	0xFE5
 16273                           fsr1h	equ	0xFE2
 16274                           fsr1l	equ	0xFE1
 16275                           indf2	equ	0xFDF
 16276                           postinc2	equ	0xFDE
 16277                           postdec2	equ	0xFDD
 16278                           plusw2	equ	0xFDB
 16279                           fsr2h	equ	0xFDA
 16280                           fsr2l	equ	0xFD9
 16281                           status	equ	0xFD8
 16282                           
 16283 ;; *************** function _isxdigit *****************
 16284 ;; Defined at:
 16285 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16286 ;; Parameters:    Size  Location     Type
 16287 ;;  c               1    wreg     unsigned char 
 16288 ;; Auto vars:     Size  Location     Type
 16289 ;;  c               1   34[BANK0 ] unsigned char 
 16290 ;; Return value:  Size  Location     Type
 16291 ;;		None               void
 16292 ;; Registers used:
 16293 ;;		wreg, status,2, status,0, cstack
 16294 ;; Tracked objects:
 16295 ;;		On entry : 0/0
 16296 ;;		On exit  : 0/0
 16297 ;;		Unchanged: 0/0
 16298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16301 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16302 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16303 ;;Total ram usage:        3 bytes
 16304 ;; Hardware stack levels used:    1
 16305 ;; Hardware stack levels required when called:   12
 16306 ;; This function calls:
 16307 ;;		_isdigit
 16308 ;; This function is called by:
 16309 ;;		_xtoi
 16310 ;; This function uses a non-reentrant model
 16311 ;;
 16312                           
 16313                           	psect	text63
 16314  005CC8                     __ptext63:
 16315                           	opt stack 0
 16316  005CC8                     _isxdigit:
 16317                           	opt stack 12
 16318                           
 16319                           ; BSR set to: 0
 16320                           ;incstack = 0
 16321                           ;isxdigit@c stored from wreg
 16322  005CC8  0100               	movlb	0	; () banked
 16323  005CCA  6F82               	movwf	isxdigit@c& (0+255),b
 16324  005CCC  0E01               	movlw	1
 16325  005CCE  0100               	movlb	0	; () banked
 16326  005CD0  6F81               	movwf	_isxdigit$6571& (0+255),b
 16327                           
 16328                           ; BSR set to: 0
 16329  005CD2  0E67               	movlw	103
 16330  005CD4  6182               	cpfslt	isxdigit@c& (0+255),b
 16331  005CD6  D003               	goto	u11640
 16332                           
 16333                           ; BSR set to: 0
 16334  005CD8  0E61               	movlw	97
 16335  005CDA  6182               	cpfslt	isxdigit@c& (0+255),b
 16336  005CDC  D00E               	goto	l3461
 16337  005CDE                     u11640:
 16338                           
 16339                           ; BSR set to: 0
 16340                           
 16341                           ; BSR set to: 0
 16342  005CDE  0E47               	movlw	71
 16343  005CE0  6182               	cpfslt	isxdigit@c& (0+255),b
 16344  005CE2  D003               	goto	u11660
 16345                           
 16346                           ; BSR set to: 0
 16347  005CE4  0E41               	movlw	65
 16348  005CE6  6182               	cpfslt	isxdigit@c& (0+255),b
 16349  005CE8  D008               	goto	l3461
 16350  005CEA                     u11660:
 16351                           
 16352                           ; BSR set to: 0
 16353                           
 16354                           ; BSR set to: 0
 16355  005CEA  5182               	movf	isxdigit@c& (0+255),w,b
 16356  005CEC  ECE8  F030         	call	_isdigit
 16357  005CF0  B0D8               	btfsc	status,0,c
 16358  005CF2  D003               	goto	l3461
 16359  005CF4  0E00               	movlw	0
 16360  005CF6  0100               	movlb	0	; () banked
 16361  005CF8  6F81               	movwf	_isxdigit$6571& (0+255),b
 16362  005CFA                     l3461:
 16363                           
 16364                           ; BSR set to: 0
 16365  005CFA  C081  F080         	movff	_isxdigit$6571,??_isxdigit
 16366  005CFE  0100               	movlb	0	; () banked
 16367  005D00  3180               	rrcf	??_isxdigit& (0+255),w,b
 16368  005D02  0012               	return	
 16369  005D04                     __end_of_isxdigit:
 16370                           	opt stack 0
 16371                           tosu	equ	0xFFF
 16372                           tosh	equ	0xFFE
 16373                           tosl	equ	0xFFD
 16374                           pclath	equ	0xFFA
 16375                           tblptru	equ	0xFF8
 16376                           tblptrh	equ	0xFF7
 16377                           tblptrl	equ	0xFF6
 16378                           tablat	equ	0xFF5
 16379                           prodh	equ	0xFF4
 16380                           prodl	equ	0xFF3
 16381                           intcon	equ	0xFF2
 16382                           intcon2	equ	0xFF1
 16383                           intcon3	equ	0xFF0
 16384                           indf0	equ	0xFEF
 16385                           postinc0	equ	0xFEE
 16386                           plusw0	equ	0xFEB
 16387                           fsr0h	equ	0xFEA
 16388                           fsr0l	equ	0xFE9
 16389                           wreg	equ	0xFE8
 16390                           indf1	equ	0xFE7
 16391                           postinc1	equ	0xFE6
 16392                           postdec1	equ	0xFE5
 16393                           fsr1h	equ	0xFE2
 16394                           fsr1l	equ	0xFE1
 16395                           indf2	equ	0xFDF
 16396                           postinc2	equ	0xFDE
 16397                           postdec2	equ	0xFDD
 16398                           plusw2	equ	0xFDB
 16399                           fsr2h	equ	0xFDA
 16400                           fsr2l	equ	0xFD9
 16401                           status	equ	0xFD8
 16402                           
 16403 ;; *************** function _strtol *****************
 16404 ;; Defined at:
 16405 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16406 ;; Parameters:    Size  Location     Type
 16407 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16408 ;;		 -> Terminal@Payload(80), 
 16409 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16410 ;;		 -> NULL(0), 
 16411 ;;  base            2   45[BANK0 ] int 
 16412 ;; Auto vars:     Size  Location     Type
 16413 ;;  a               4   52[BANK0 ] long 
 16414 ;;  c               1   56[BANK0 ] unsigned char 
 16415 ;;  sign            1   51[BANK0 ] unsigned char 
 16416 ;; Return value:  Size  Location     Type
 16417 ;;                  4   41[BANK0 ] long 
 16418 ;; Registers used:
 16419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16420 ;; Tracked objects:
 16421 ;;		On entry : 0/0
 16422 ;;		On exit  : 0/0
 16423 ;;		Unchanged: 0/0
 16424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16425 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16426 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16427 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16428 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16429 ;;Total ram usage:       16 bytes
 16430 ;; Hardware stack levels used:    1
 16431 ;; Hardware stack levels required when called:   13
 16432 ;; This function calls:
 16433 ;;		___lmul
 16434 ;;		_isalpha
 16435 ;;		_isdigit
 16436 ;;		_isspace
 16437 ;;		_toupper
 16438 ;; This function is called by:
 16439 ;;		_Terminal
 16440 ;; This function uses a non-reentrant model
 16441 ;;
 16442                           
 16443                           	psect	text64
 16444  00181C                     __ptext64:
 16445                           	opt stack 0
 16446  00181C                     _strtol:
 16447                           	opt stack 12
 16448                           
 16449                           ; BSR set to: 0
 16450                           ;incstack = 0
 16451  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16452  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16453  001824  50DF               	movf	indf2,w,c
 16454  001826  0100               	movlb	0	; () banked
 16455  001828  6F98               	movwf	strtol@c& (0+255),b
 16456                           
 16457                           ; BSR set to: 0
 16458  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16459  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16460                           
 16461                           ; BSR set to: 0
 16462  00182E  5198               	movf	strtol@c& (0+255),w,b
 16463  001830  ECF7  F02F         	call	_isspace
 16464  001834  B0D8               	btfsc	status,0,c
 16465  001836  D7F2               	goto	_strtol
 16466  001838  0E00               	movlw	0
 16467  00183A  0100               	movlb	0	; () banked
 16468  00183C  6F94               	movwf	strtol@a& (0+255),b
 16469  00183E  0E00               	movlw	0
 16470  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16471  001842  0E00               	movlw	0
 16472  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16473  001846  0E00               	movlw	0
 16474  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16475  00184A  0E00               	movlw	0
 16476  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16477                           
 16478                           ; BSR set to: 0
 16479  00184E  0E2D               	movlw	45
 16480  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16481  001852  A4D8               	btfss	status,2,c
 16482  001854  D003               	goto	l3368
 16483                           
 16484                           ; BSR set to: 0
 16485  001856  0E01               	movlw	1
 16486  001858  6F93               	movwf	strtol@sign& (0+255),b
 16487  00185A  D004               	goto	u12140
 16488  00185C                     l3368:
 16489                           
 16490                           ; BSR set to: 0
 16491                           
 16492                           ; BSR set to: 0
 16493  00185C  0E2B               	movlw	43
 16494  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16495  001860  A4D8               	btfss	status,2,c
 16496  001862  D008               	goto	l3370
 16497  001864                     u12140:
 16498                           
 16499                           ; BSR set to: 0
 16500  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16501  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16502  00186C  50DF               	movf	indf2,w,c
 16503  00186E  6F98               	movwf	strtol@c& (0+255),b
 16504                           
 16505                           ; BSR set to: 0
 16506  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16507  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16508  001874                     l3370:
 16509                           
 16510                           ; BSR set to: 0
 16511                           
 16512                           ; BSR set to: 0
 16513                           
 16514                           ; BSR set to: 0
 16515  001874  0E30               	movlw	48
 16516  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16517  001878  A4D8               	btfss	status,2,c
 16518  00187A  D02E               	goto	l3378
 16519                           
 16520                           ; BSR set to: 0
 16521  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16522  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16523  001884  50DF               	movf	indf2,w,c
 16524  001886  6F98               	movwf	strtol@c& (0+255),b
 16525                           
 16526                           ; BSR set to: 0
 16527  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16528  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16529                           
 16530                           ; BSR set to: 0
 16531  00188C  518D               	movf	strtol@base& (0+255),w,b
 16532  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16533  001890  B4D8               	btfsc	status,2,c
 16534  001892  D005               	goto	u12170
 16535                           
 16536                           ; BSR set to: 0
 16537  001894  0E10               	movlw	16
 16538  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16539  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16540  00189A  A4D8               	btfss	status,2,c
 16541  00189C  D015               	goto	l3372
 16542  00189E                     u12170:
 16543                           
 16544                           ; BSR set to: 0
 16545                           
 16546                           ; BSR set to: 0
 16547  00189E  0E78               	movlw	120
 16548  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16549  0018A2  B4D8               	btfsc	status,2,c
 16550  0018A4  D004               	goto	u12190
 16551                           
 16552                           ; BSR set to: 0
 16553  0018A6  0E58               	movlw	88
 16554  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16555  0018AA  A4D8               	btfss	status,2,c
 16556  0018AC  D00D               	goto	l3372
 16557  0018AE                     u12190:
 16558                           
 16559                           ; BSR set to: 0
 16560                           
 16561                           ; BSR set to: 0
 16562  0018AE  0E00               	movlw	0
 16563  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16564  0018B2  0E10               	movlw	16
 16565  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16566                           
 16567                           ; BSR set to: 0
 16568  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16569  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16570  0018BE  50DF               	movf	indf2,w,c
 16571  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16572                           
 16573                           ; BSR set to: 0
 16574  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16575  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16576  0018C6  D008               	goto	l3378
 16577  0018C8                     l3372:
 16578                           
 16579                           ; BSR set to: 0
 16580                           
 16581                           ; BSR set to: 0
 16582  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16583  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16584  0018CC  A4D8               	btfss	status,2,c
 16585  0018CE  D004               	goto	l3378
 16586                           
 16587                           ; BSR set to: 0
 16588  0018D0  0E00               	movlw	0
 16589  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16590  0018D4  0E08               	movlw	8
 16591  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16592  0018D8                     l3378:
 16593                           
 16594                           ; BSR set to: 0
 16595                           
 16596                           ; BSR set to: 0
 16597                           
 16598                           ; BSR set to: 0
 16599                           
 16600                           ; BSR set to: 0
 16601  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16602  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16603  0018DC  A4D8               	btfss	status,2,c
 16604  0018DE  D004               	goto	l3379
 16605                           
 16606                           ; BSR set to: 0
 16607  0018E0  0E00               	movlw	0
 16608  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16609  0018E4  0E0A               	movlw	10
 16610  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16611  0018E8                     l3379:
 16612                           
 16613                           ; BSR set to: 0
 16614                           
 16615                           ; BSR set to: 0
 16616                           
 16617                           ; BSR set to: 0
 16618  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16619  0018EA  EC6E  F02F         	call	_isalpha
 16620  0018EE  A0D8               	btfss	status,0,c
 16621  0018F0  D008               	goto	l3381
 16622  0018F2  0100               	movlb	0	; () banked
 16623  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16624  0018F6  ECA7  F031         	call	_toupper
 16625  0018FA  0FC9               	addlw	201
 16626  0018FC  0100               	movlb	0	; () banked
 16627  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16628  001900  D009               	goto	l3384
 16629  001902                     l3381:
 16630                           
 16631                           ; BSR set to: 0
 16632  001902  0100               	movlb	0	; () banked
 16633  001904  5198               	movf	strtol@c& (0+255),w,b
 16634  001906  ECE8  F030         	call	_isdigit
 16635  00190A  A0D8               	btfss	status,0,c
 16636  00190C  D039               	goto	l3385
 16637  00190E  0E30               	movlw	48
 16638  001910  0100               	movlb	0	; () banked
 16639  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16640  001914                     l3384:
 16641                           
 16642                           ; BSR set to: 0
 16643                           
 16644                           ; BSR set to: 0
 16645                           
 16646                           ; BSR set to: 0
 16647  001914  5198               	movf	strtol@c& (0+255),w,b
 16648  001916  6F8F               	movwf	??_strtol& (0+255),b
 16649  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16650  00191A  518D               	movf	strtol@base& (0+255),w,b
 16651  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16652  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16653  001920  0A80               	xorlw	128
 16654  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16655  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16656  001926  0A80               	xorlw	128
 16657  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16658  00192A  B0D8               	btfsc	status,0,c
 16659  00192C  D029               	goto	l3385
 16660                           
 16661                           ; BSR set to: 0
 16662                           
 16663                           ; BSR set to: 0
 16664                           
 16665                           ; BSR set to: 0
 16666  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16667  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16668  001936  0E00               	movlw	0
 16669  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16670  00193A  0EFF               	movlw	-1
 16671  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16672  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16673  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16674  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16675  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16676  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16677  001950  ECB4  F029         	call	___lmul	;wreg free
 16678  001954  0100               	movlb	0	; () banked
 16679  001956  5198               	movf	strtol@c& (0+255),w,b
 16680  001958  257D               	addwf	?___lmul& (0+255),w,b
 16681  00195A  6F94               	movwf	strtol@a& (0+255),b
 16682  00195C  0E00               	movlw	0
 16683  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16684  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16685  001962  0E00               	movlw	0
 16686  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16687  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16688  001968  0E00               	movlw	0
 16689  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16690  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16691                           
 16692                           ; BSR set to: 0
 16693  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16694  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16695  001976  50DF               	movf	indf2,w,c
 16696  001978  6F98               	movwf	strtol@c& (0+255),b
 16697                           
 16698                           ; BSR set to: 0
 16699  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16700  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16701  00197E  D7B4               	goto	l3379
 16702  001980                     l3385:
 16703                           
 16704                           ; BSR set to: 0
 16705  001980  0100               	movlb	0	; () banked
 16706  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16707  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16708  001986  B4D8               	btfsc	status,2,c
 16709  001988  D00E               	goto	l3387
 16710                           
 16711                           ; BSR set to: 0
 16712  00198A  0EFF               	movlw	255
 16713  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16714  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16715  001990  0EFF               	movlw	255
 16716  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16717  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16718  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16719  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16720  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16721  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16722  0019A6                     l3387:
 16723                           
 16724                           ; BSR set to: 0
 16725                           
 16726                           ; BSR set to: 0
 16727  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16728  0019A8  B4D8               	btfsc	status,2,c
 16729  0019AA  D01A               	goto	l3388
 16730                           
 16731                           ; BSR set to: 0
 16732  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16733  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16734  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16735  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16736  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16737  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16738  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16739  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16740  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16741  0019C6  0E00               	movlw	0
 16742  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16743  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16744  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16745  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16746  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16747  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16748  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16749                           
 16750                           ; BSR set to: 0
 16751  0019DE  0012               	return	
 16752  0019E0                     l3388:
 16753                           
 16754                           ; BSR set to: 0
 16755  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16756  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16757  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16758  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16759                           
 16760                           ; BSR set to: 0
 16761  0019F0  0012               	return		;funcret
 16762  0019F2                     __end_of_strtol:
 16763                           	opt stack 0
 16764                           tosu	equ	0xFFF
 16765                           tosh	equ	0xFFE
 16766                           tosl	equ	0xFFD
 16767                           pclath	equ	0xFFA
 16768                           tblptru	equ	0xFF8
 16769                           tblptrh	equ	0xFF7
 16770                           tblptrl	equ	0xFF6
 16771                           tablat	equ	0xFF5
 16772                           prodh	equ	0xFF4
 16773                           prodl	equ	0xFF3
 16774                           intcon	equ	0xFF2
 16775                           intcon2	equ	0xFF1
 16776                           intcon3	equ	0xFF0
 16777                           indf0	equ	0xFEF
 16778                           postinc0	equ	0xFEE
 16779                           plusw0	equ	0xFEB
 16780                           fsr0h	equ	0xFEA
 16781                           fsr0l	equ	0xFE9
 16782                           wreg	equ	0xFE8
 16783                           indf1	equ	0xFE7
 16784                           postinc1	equ	0xFE6
 16785                           postdec1	equ	0xFE5
 16786                           fsr1h	equ	0xFE2
 16787                           fsr1l	equ	0xFE1
 16788                           indf2	equ	0xFDF
 16789                           postinc2	equ	0xFDE
 16790                           postdec2	equ	0xFDD
 16791                           plusw2	equ	0xFDB
 16792                           fsr2h	equ	0xFDA
 16793                           fsr2l	equ	0xFD9
 16794                           status	equ	0xFD8
 16795                           
 16796 ;; *************** function _toupper *****************
 16797 ;; Defined at:
 16798 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16799 ;; Parameters:    Size  Location     Type
 16800 ;;  c               1    wreg     unsigned char 
 16801 ;; Auto vars:     Size  Location     Type
 16802 ;;  c               1   29[BANK0 ] unsigned char 
 16803 ;; Return value:  Size  Location     Type
 16804 ;;                  1    wreg      unsigned char 
 16805 ;; Registers used:
 16806 ;;		wreg, status,2, status,0
 16807 ;; Tracked objects:
 16808 ;;		On entry : 0/0
 16809 ;;		On exit  : 0/0
 16810 ;;		Unchanged: 0/0
 16811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16813 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16815 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16816 ;;Total ram usage:        1 bytes
 16817 ;; Hardware stack levels used:    1
 16818 ;; Hardware stack levels required when called:   11
 16819 ;; This function calls:
 16820 ;;		Nothing
 16821 ;; This function is called by:
 16822 ;;		_strtol
 16823 ;; This function uses a non-reentrant model
 16824 ;;
 16825                           
 16826                           	psect	text65
 16827  00634E                     __ptext65:
 16828                           	opt stack 0
 16829  00634E                     _toupper:
 16830                           	opt stack 13
 16831                           
 16832                           ; BSR set to: 0
 16833                           ;incstack = 0
 16834                           ;toupper@c stored from wreg
 16835  00634E  0100               	movlb	0	; () banked
 16836  006350  6F7D               	movwf	toupper@c& (0+255),b
 16837  006352  0E7B               	movlw	123
 16838  006354  0100               	movlb	0	; () banked
 16839  006356  617D               	cpfslt	toupper@c& (0+255),b
 16840  006358  D004               	goto	l3392
 16841                           
 16842                           ; BSR set to: 0
 16843  00635A  0E60               	movlw	96
 16844  00635C  657D               	cpfsgt	toupper@c& (0+255),b
 16845  00635E  D001               	goto	l3392
 16846                           
 16847                           ; BSR set to: 0
 16848  006360  9B7D               	bcf	toupper@c& (0+255),5,b
 16849  006362                     l3392:
 16850                           
 16851                           ; BSR set to: 0
 16852                           
 16853                           ; BSR set to: 0
 16854  006362  517D               	movf	toupper@c& (0+255),w,b
 16855  006364  0012               	return	
 16856  006366                     __end_of_toupper:
 16857                           	opt stack 0
 16858                           tosu	equ	0xFFF
 16859                           tosh	equ	0xFFE
 16860                           tosl	equ	0xFFD
 16861                           pclath	equ	0xFFA
 16862                           tblptru	equ	0xFF8
 16863                           tblptrh	equ	0xFF7
 16864                           tblptrl	equ	0xFF6
 16865                           tablat	equ	0xFF5
 16866                           prodh	equ	0xFF4
 16867                           prodl	equ	0xFF3
 16868                           intcon	equ	0xFF2
 16869                           intcon2	equ	0xFF1
 16870                           intcon3	equ	0xFF0
 16871                           indf0	equ	0xFEF
 16872                           postinc0	equ	0xFEE
 16873                           plusw0	equ	0xFEB
 16874                           fsr0h	equ	0xFEA
 16875                           fsr0l	equ	0xFE9
 16876                           wreg	equ	0xFE8
 16877                           indf1	equ	0xFE7
 16878                           postinc1	equ	0xFE6
 16879                           postdec1	equ	0xFE5
 16880                           fsr1h	equ	0xFE2
 16881                           fsr1l	equ	0xFE1
 16882                           indf2	equ	0xFDF
 16883                           postinc2	equ	0xFDE
 16884                           postdec2	equ	0xFDD
 16885                           plusw2	equ	0xFDB
 16886                           fsr2h	equ	0xFDA
 16887                           fsr2l	equ	0xFD9
 16888                           status	equ	0xFD8
 16889                           
 16890 ;; *************** function _isspace *****************
 16891 ;; Defined at:
 16892 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16893 ;; Parameters:    Size  Location     Type
 16894 ;;  c               1    wreg     unsigned char 
 16895 ;; Auto vars:     Size  Location     Type
 16896 ;;  c               1   31[BANK0 ] unsigned char 
 16897 ;; Return value:  Size  Location     Type
 16898 ;;		None               void
 16899 ;; Registers used:
 16900 ;;		wreg, status,2, status,0
 16901 ;; Tracked objects:
 16902 ;;		On entry : 0/0
 16903 ;;		On exit  : 0/0
 16904 ;;		Unchanged: 0/0
 16905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16907 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16908 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16909 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16910 ;;Total ram usage:        3 bytes
 16911 ;; Hardware stack levels used:    1
 16912 ;; Hardware stack levels required when called:   11
 16913 ;; This function calls:
 16914 ;;		Nothing
 16915 ;; This function is called by:
 16916 ;;		_strtol
 16917 ;;		_xtoi
 16918 ;; This function uses a non-reentrant model
 16919 ;;
 16920                           
 16921                           	psect	text66
 16922  005FEE                     __ptext66:
 16923                           	opt stack 0
 16924  005FEE                     _isspace:
 16925                           	opt stack 13
 16926                           
 16927                           ; BSR set to: 0
 16928                           ;incstack = 0
 16929                           ;isspace@c stored from wreg
 16930  005FEE  0100               	movlb	0	; () banked
 16931  005FF0  6F7F               	movwf	isspace@c& (0+255),b
 16932  005FF2  0E01               	movlw	1
 16933  005FF4  0100               	movlb	0	; () banked
 16934  005FF6  6F7E               	movwf	_isspace$6564& (0+255),b
 16935                           
 16936                           ; BSR set to: 0
 16937  005FF8  0E20               	movlw	32
 16938  005FFA  197F               	xorwf	isspace@c& (0+255),w,b
 16939  005FFC  B4D8               	btfsc	status,2,c
 16940  005FFE  D008               	goto	l3449
 16941                           
 16942                           ; BSR set to: 0
 16943  006000  0E0E               	movlw	14
 16944  006002  617F               	cpfslt	isspace@c& (0+255),b
 16945  006004  D003               	goto	u11550
 16946                           
 16947                           ; BSR set to: 0
 16948  006006  0E09               	movlw	9
 16949  006008  617F               	cpfslt	isspace@c& (0+255),b
 16950  00600A  D002               	goto	l3449
 16951  00600C                     u11550:
 16952                           
 16953                           ; BSR set to: 0
 16954                           
 16955                           ; BSR set to: 0
 16956  00600C  0E00               	movlw	0
 16957  00600E  6F7E               	movwf	_isspace$6564& (0+255),b
 16958  006010                     l3449:
 16959                           
 16960                           ; BSR set to: 0
 16961                           
 16962                           ; BSR set to: 0
 16963  006010  C07E  F07D         	movff	_isspace$6564,??_isspace
 16964  006014  317D               	rrcf	??_isspace& (0+255),w,b
 16965  006016  0012               	return	
 16966  006018                     __end_of_isspace:
 16967                           	opt stack 0
 16968                           tosu	equ	0xFFF
 16969                           tosh	equ	0xFFE
 16970                           tosl	equ	0xFFD
 16971                           pclath	equ	0xFFA
 16972                           tblptru	equ	0xFF8
 16973                           tblptrh	equ	0xFF7
 16974                           tblptrl	equ	0xFF6
 16975                           tablat	equ	0xFF5
 16976                           prodh	equ	0xFF4
 16977                           prodl	equ	0xFF3
 16978                           intcon	equ	0xFF2
 16979                           intcon2	equ	0xFF1
 16980                           intcon3	equ	0xFF0
 16981                           indf0	equ	0xFEF
 16982                           postinc0	equ	0xFEE
 16983                           plusw0	equ	0xFEB
 16984                           fsr0h	equ	0xFEA
 16985                           fsr0l	equ	0xFE9
 16986                           wreg	equ	0xFE8
 16987                           indf1	equ	0xFE7
 16988                           postinc1	equ	0xFE6
 16989                           postdec1	equ	0xFE5
 16990                           fsr1h	equ	0xFE2
 16991                           fsr1l	equ	0xFE1
 16992                           indf2	equ	0xFDF
 16993                           postinc2	equ	0xFDE
 16994                           postdec2	equ	0xFDD
 16995                           plusw2	equ	0xFDB
 16996                           fsr2h	equ	0xFDA
 16997                           fsr2l	equ	0xFD9
 16998                           status	equ	0xFD8
 16999                           
 17000 ;; *************** function _isalpha *****************
 17001 ;; Defined at:
 17002 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17003 ;; Parameters:    Size  Location     Type
 17004 ;;  c               1    wreg     unsigned char 
 17005 ;; Auto vars:     Size  Location     Type
 17006 ;;  c               1   34[BANK0 ] unsigned char 
 17007 ;; Return value:  Size  Location     Type
 17008 ;;		None               void
 17009 ;; Registers used:
 17010 ;;		wreg, status,2, status,0, cstack
 17011 ;; Tracked objects:
 17012 ;;		On entry : 0/0
 17013 ;;		On exit  : 0/0
 17014 ;;		Unchanged: 0/0
 17015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17017 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17018 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17019 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17020 ;;Total ram usage:        3 bytes
 17021 ;; Hardware stack levels used:    1
 17022 ;; Hardware stack levels required when called:   12
 17023 ;; This function calls:
 17024 ;;		_isupper
 17025 ;; This function is called by:
 17026 ;;		_strtol
 17027 ;; This function uses a non-reentrant model
 17028 ;;
 17029                           
 17030                           	psect	text67
 17031  005EDC                     __ptext67:
 17032                           	opt stack 0
 17033  005EDC                     _isalpha:
 17034                           	opt stack 12
 17035                           
 17036                           ; BSR set to: 0
 17037                           ;incstack = 0
 17038                           ;isalpha@c stored from wreg
 17039  005EDC  0100               	movlb	0	; () banked
 17040  005EDE  6F82               	movwf	isalpha@c& (0+255),b
 17041  005EE0  0E01               	movlw	1
 17042  005EE2  0100               	movlb	0	; () banked
 17043  005EE4  6F81               	movwf	_isalpha$6561& (0+255),b
 17044                           
 17045                           ; BSR set to: 0
 17046  005EE6  0E7B               	movlw	123
 17047  005EE8  6182               	cpfslt	isalpha@c& (0+255),b
 17048  005EEA  D003               	goto	u11570
 17049                           
 17050                           ; BSR set to: 0
 17051  005EEC  0E61               	movlw	97
 17052  005EEE  6182               	cpfslt	isalpha@c& (0+255),b
 17053  005EF0  D008               	goto	l3444
 17054  005EF2                     u11570:
 17055                           
 17056                           ; BSR set to: 0
 17057                           
 17058                           ; BSR set to: 0
 17059  005EF2  5182               	movf	isalpha@c& (0+255),w,b
 17060  005EF4  ECC6  F030         	call	_isupper
 17061  005EF8  B0D8               	btfsc	status,0,c
 17062  005EFA  D003               	goto	l3444
 17063  005EFC  0E00               	movlw	0
 17064  005EFE  0100               	movlb	0	; () banked
 17065  005F00  6F81               	movwf	_isalpha$6561& (0+255),b
 17066  005F02                     l3444:
 17067                           
 17068                           ; BSR set to: 0
 17069  005F02  C081  F080         	movff	_isalpha$6561,??_isalpha
 17070  005F06  0100               	movlb	0	; () banked
 17071  005F08  3180               	rrcf	??_isalpha& (0+255),w,b
 17072  005F0A  0012               	return	
 17073  005F0C                     __end_of_isalpha:
 17074                           	opt stack 0
 17075                           tosu	equ	0xFFF
 17076                           tosh	equ	0xFFE
 17077                           tosl	equ	0xFFD
 17078                           pclath	equ	0xFFA
 17079                           tblptru	equ	0xFF8
 17080                           tblptrh	equ	0xFF7
 17081                           tblptrl	equ	0xFF6
 17082                           tablat	equ	0xFF5
 17083                           prodh	equ	0xFF4
 17084                           prodl	equ	0xFF3
 17085                           intcon	equ	0xFF2
 17086                           intcon2	equ	0xFF1
 17087                           intcon3	equ	0xFF0
 17088                           indf0	equ	0xFEF
 17089                           postinc0	equ	0xFEE
 17090                           plusw0	equ	0xFEB
 17091                           fsr0h	equ	0xFEA
 17092                           fsr0l	equ	0xFE9
 17093                           wreg	equ	0xFE8
 17094                           indf1	equ	0xFE7
 17095                           postinc1	equ	0xFE6
 17096                           postdec1	equ	0xFE5
 17097                           fsr1h	equ	0xFE2
 17098                           fsr1l	equ	0xFE1
 17099                           indf2	equ	0xFDF
 17100                           postinc2	equ	0xFDE
 17101                           postdec2	equ	0xFDD
 17102                           plusw2	equ	0xFDB
 17103                           fsr2h	equ	0xFDA
 17104                           fsr2l	equ	0xFD9
 17105                           status	equ	0xFD8
 17106                           
 17107 ;; *************** function _isupper *****************
 17108 ;; Defined at:
 17109 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17110 ;; Parameters:    Size  Location     Type
 17111 ;;  c               1    wreg     unsigned char 
 17112 ;; Auto vars:     Size  Location     Type
 17113 ;;  c               1   31[BANK0 ] unsigned char 
 17114 ;; Return value:  Size  Location     Type
 17115 ;;		None               void
 17116 ;; Registers used:
 17117 ;;		wreg, status,2, status,0
 17118 ;; Tracked objects:
 17119 ;;		On entry : 0/0
 17120 ;;		On exit  : 0/0
 17121 ;;		Unchanged: 0/0
 17122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17124 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17125 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17126 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17127 ;;Total ram usage:        3 bytes
 17128 ;; Hardware stack levels used:    1
 17129 ;; Hardware stack levels required when called:   11
 17130 ;; This function calls:
 17131 ;;		Nothing
 17132 ;; This function is called by:
 17133 ;;		_xtoi
 17134 ;;		_isalpha
 17135 ;; This function uses a non-reentrant model
 17136 ;;
 17137                           
 17138                           	psect	text68
 17139  00618C                     __ptext68:
 17140                           	opt stack 0
 17141  00618C                     _isupper:
 17142                           	opt stack 13
 17143                           
 17144                           ; BSR set to: 0
 17145                           ;incstack = 0
 17146                           ;isupper@c stored from wreg
 17147  00618C  0100               	movlb	0	; () banked
 17148  00618E  6F7F               	movwf	isupper@c& (0+255),b
 17149  006190  0E00               	movlw	0
 17150  006192  0100               	movlb	0	; () banked
 17151  006194  6F7E               	movwf	_isupper$6567& (0+255),b
 17152                           
 17153                           ; BSR set to: 0
 17154  006196  0E5B               	movlw	91
 17155  006198  617F               	cpfslt	isupper@c& (0+255),b
 17156  00619A  D005               	goto	l3454
 17157                           
 17158                           ; BSR set to: 0
 17159  00619C  0E40               	movlw	64
 17160  00619E  657F               	cpfsgt	isupper@c& (0+255),b
 17161  0061A0  D002               	goto	l3454
 17162                           
 17163                           ; BSR set to: 0
 17164  0061A2  0E01               	movlw	1
 17165  0061A4  6F7E               	movwf	_isupper$6567& (0+255),b
 17166  0061A6                     l3454:
 17167                           
 17168                           ; BSR set to: 0
 17169                           
 17170                           ; BSR set to: 0
 17171  0061A6  C07E  F07D         	movff	_isupper$6567,??_isupper
 17172  0061AA  317D               	rrcf	??_isupper& (0+255),w,b
 17173  0061AC  0012               	return	
 17174  0061AE                     __end_of_isupper:
 17175                           	opt stack 0
 17176                           tosu	equ	0xFFF
 17177                           tosh	equ	0xFFE
 17178                           tosl	equ	0xFFD
 17179                           pclath	equ	0xFFA
 17180                           tblptru	equ	0xFF8
 17181                           tblptrh	equ	0xFF7
 17182                           tblptrl	equ	0xFF6
 17183                           tablat	equ	0xFF5
 17184                           prodh	equ	0xFF4
 17185                           prodl	equ	0xFF3
 17186                           intcon	equ	0xFF2
 17187                           intcon2	equ	0xFF1
 17188                           intcon3	equ	0xFF0
 17189                           indf0	equ	0xFEF
 17190                           postinc0	equ	0xFEE
 17191                           plusw0	equ	0xFEB
 17192                           fsr0h	equ	0xFEA
 17193                           fsr0l	equ	0xFE9
 17194                           wreg	equ	0xFE8
 17195                           indf1	equ	0xFE7
 17196                           postinc1	equ	0xFE6
 17197                           postdec1	equ	0xFE5
 17198                           fsr1h	equ	0xFE2
 17199                           fsr1l	equ	0xFE1
 17200                           indf2	equ	0xFDF
 17201                           postinc2	equ	0xFDE
 17202                           postdec2	equ	0xFDD
 17203                           plusw2	equ	0xFDB
 17204                           fsr2h	equ	0xFDA
 17205                           fsr2l	equ	0xFD9
 17206                           status	equ	0xFD8
 17207                           
 17208 ;; *************** function _strcpy *****************
 17209 ;; Defined at:
 17210 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17211 ;; Parameters:    Size  Location     Type
 17212 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17213 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17214 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17215 ;;		 -> STR_23(20), STR_21(42), 
 17216 ;; Auto vars:     Size  Location     Type
 17217 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17218 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17219 ;; Return value:  Size  Location     Type
 17220 ;;                  2   29[BANK0 ] PTR unsigned char 
 17221 ;; Registers used:
 17222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17223 ;; Tracked objects:
 17224 ;;		On entry : 0/0
 17225 ;;		On exit  : 0/0
 17226 ;;		Unchanged: 0/0
 17227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17228 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17229 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17231 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17232 ;;Total ram usage:        6 bytes
 17233 ;; Hardware stack levels used:    1
 17234 ;; Hardware stack levels required when called:   11
 17235 ;; This function calls:
 17236 ;;		Nothing
 17237 ;; This function is called by:
 17238 ;;		_Terminal
 17239 ;;		_Term_MainSm
 17240 ;; This function uses a non-reentrant model
 17241 ;;
 17242                           
 17243                           	psect	text69
 17244  005E4A                     __ptext69:
 17245                           	opt stack 0
 17246  005E4A                     _strcpy:
 17247                           	opt stack 15
 17248                           
 17249                           ; BSR set to: 0
 17250                           ;incstack = 0
 17251  005E4A  C07D  F081         	movff	strcpy@to,strcpy@cp
 17252  005E4E  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17253  005E52  D005               	goto	l3346
 17254  005E54  0100               	movlb	0	; () banked
 17255  005E56  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17256  005E58  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17257  005E5A  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17258  005E5C  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17259  005E5E                     l3346:
 17260                           
 17261                           ; BSR set to: 0
 17262  005E5E  C07F  FFF6         	movff	strcpy@from,tblptrl
 17263  005E62  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17264  005E66                     	if	0	;tblptru may be non-zero
 17265  005E66                     	endif
 17266  005E66                     	if	0	;tblptru may be non-zero
 17267  005E66                     	endif
 17268  005E66  C081  FFD9         	movff	strcpy@cp,fsr2l
 17269  005E6A  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17270  005E6E  0008               	tblrd		*
 17271  005E70  CFF5 FFDF          	movff	tablat,indf2
 17272  005E74  50DF               	movf	indf2,w,c
 17273  005E76  B4D8               	btfsc	status,2,c
 17274  005E78  0012               	return	
 17275  005E7A  D7EC               	goto	l3347
 17276  005E7C                     __end_of_strcpy:
 17277                           	opt stack 0
 17278                           tosu	equ	0xFFF
 17279                           tosh	equ	0xFFE
 17280                           tosl	equ	0xFFD
 17281                           pclath	equ	0xFFA
 17282                           tblptru	equ	0xFF8
 17283                           tblptrh	equ	0xFF7
 17284                           tblptrl	equ	0xFF6
 17285                           tablat	equ	0xFF5
 17286                           prodh	equ	0xFF4
 17287                           prodl	equ	0xFF3
 17288                           intcon	equ	0xFF2
 17289                           intcon2	equ	0xFF1
 17290                           intcon3	equ	0xFF0
 17291                           indf0	equ	0xFEF
 17292                           postinc0	equ	0xFEE
 17293                           plusw0	equ	0xFEB
 17294                           fsr0h	equ	0xFEA
 17295                           fsr0l	equ	0xFE9
 17296                           wreg	equ	0xFE8
 17297                           indf1	equ	0xFE7
 17298                           postinc1	equ	0xFE6
 17299                           postdec1	equ	0xFE5
 17300                           fsr1h	equ	0xFE2
 17301                           fsr1l	equ	0xFE1
 17302                           indf2	equ	0xFDF
 17303                           postinc2	equ	0xFDE
 17304                           postdec2	equ	0xFDD
 17305                           plusw2	equ	0xFDB
 17306                           fsr2h	equ	0xFDA
 17307                           fsr2l	equ	0xFD9
 17308                           status	equ	0xFD8
 17309                           
 17310 ;; *************** function _putUSBUSART *****************
 17311 ;; Defined at:
 17312 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17313 ;; Parameters:    Size  Location     Type
 17314 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17315 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17316 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17317 ;;		 -> RxBuffer(400), 
 17318 ;;  length          1   37[BANK0 ] unsigned char 
 17319 ;; Auto vars:     Size  Location     Type
 17320 ;;		None
 17321 ;; Return value:  Size  Location     Type
 17322 ;;                  1    wreg      void 
 17323 ;; Registers used:
 17324 ;;		wreg, status,2, status,0
 17325 ;; Tracked objects:
 17326 ;;		On entry : 0/0
 17327 ;;		On exit  : 0/0
 17328 ;;		Unchanged: 0/0
 17329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17330 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17333 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17334 ;;Total ram usage:        3 bytes
 17335 ;; Hardware stack levels used:    1
 17336 ;; Hardware stack levels required when called:   11
 17337 ;; This function calls:
 17338 ;;		Nothing
 17339 ;; This function is called by:
 17340 ;;		_Terminal
 17341 ;;		_Term_MainSm
 17342 ;;		_GsmGprsTerminal
 17343 ;; This function uses a non-reentrant model
 17344 ;;
 17345                           
 17346                           	psect	text70
 17347  0061AE                     __ptext70:
 17348                           	opt stack 0
 17349  0061AE                     _putUSBUSART:
 17350                           	opt stack 15
 17351                           
 17352                           ;usb_device_cdc.c: 584: ;
 17353                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17354                           
 17355                           ;incstack = 0
 17356  0061AE  0100               	movlb	0	; () banked
 17357  0061B0  51C5               	movf	_cdc_trf_state& (0+255),w,b
 17358  0061B2  A4D8               	btfss	status,2,c
 17359  0061B4  0012               	return	
 17360                           
 17361                           ; BSR set to: 0
 17362                           ;usb_device_cdc.c: 586: {
 17363                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17364  0061B6  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17365  0061BA  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17366                           
 17367                           ; BSR set to: 0
 17368  0061BE  C085  F0C4         	movff	putUSBUSART@length,_cdc_tx_len
 17369                           
 17370                           ; BSR set to: 0
 17371  0061C2  0E01               	movlw	1
 17372  0061C4  0101               	movlb	1	; () banked
 17373  0061C6  6FE2               	movwf	_cdc_mem_type& (0+255),b
 17374                           
 17375                           ; BSR set to: 1
 17376  0061C8  0E01               	movlw	1
 17377  0061CA  0100               	movlb	0	; () banked
 17378  0061CC  6FC5               	movwf	_cdc_trf_state& (0+255),b
 17379  0061CE  0012               	return	
 17380  0061D0                     __end_of_putUSBUSART:
 17381                           	opt stack 0
 17382                           tosu	equ	0xFFF
 17383                           tosh	equ	0xFFE
 17384                           tosl	equ	0xFFD
 17385                           pclath	equ	0xFFA
 17386                           tblptru	equ	0xFF8
 17387                           tblptrh	equ	0xFF7
 17388                           tblptrl	equ	0xFF6
 17389                           tablat	equ	0xFF5
 17390                           prodh	equ	0xFF4
 17391                           prodl	equ	0xFF3
 17392                           intcon	equ	0xFF2
 17393                           intcon2	equ	0xFF1
 17394                           intcon3	equ	0xFF0
 17395                           indf0	equ	0xFEF
 17396                           postinc0	equ	0xFEE
 17397                           plusw0	equ	0xFEB
 17398                           fsr0h	equ	0xFEA
 17399                           fsr0l	equ	0xFE9
 17400                           wreg	equ	0xFE8
 17401                           indf1	equ	0xFE7
 17402                           postinc1	equ	0xFE6
 17403                           postdec1	equ	0xFE5
 17404                           fsr1h	equ	0xFE2
 17405                           fsr1l	equ	0xFE1
 17406                           indf2	equ	0xFDF
 17407                           postinc2	equ	0xFDE
 17408                           postdec2	equ	0xFDD
 17409                           plusw2	equ	0xFDB
 17410                           fsr2h	equ	0xFDA
 17411                           fsr2l	equ	0xFD9
 17412                           status	equ	0xFD8
 17413                           
 17414 ;; *************** function _itoa *****************
 17415 ;; Defined at:
 17416 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17417 ;; Parameters:    Size  Location     Type
 17418 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17419 ;;		 -> Terminal@Payload(80), 
 17420 ;;  val             2   53[BANK0 ] int 
 17421 ;;  base            2   55[BANK0 ] int 
 17422 ;; Auto vars:     Size  Location     Type
 17423 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17424 ;;		 -> Terminal@Payload(80), 
 17425 ;; Return value:  Size  Location     Type
 17426 ;;                  2   51[BANK0 ] PTR unsigned char 
 17427 ;; Registers used:
 17428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17429 ;; Tracked objects:
 17430 ;;		On entry : 0/0
 17431 ;;		On exit  : 0/0
 17432 ;;		Unchanged: 0/0
 17433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17434 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17435 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17437 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17438 ;;Total ram usage:        8 bytes
 17439 ;; Hardware stack levels used:    1
 17440 ;; Hardware stack levels required when called:   13
 17441 ;; This function calls:
 17442 ;;		_utoa
 17443 ;; This function is called by:
 17444 ;;		_Terminal
 17445 ;; This function uses a non-reentrant model
 17446 ;;
 17447                           
 17448                           	psect	text71
 17449  005A82                     __ptext71:
 17450                           	opt stack 0
 17451  005A82                     _itoa:
 17452                           	opt stack 12
 17453                           
 17454                           ; BSR set to: 0
 17455                           ;incstack = 0
 17456  005A82  C093  F099         	movff	itoa@buf,itoa@cp
 17457  005A86  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17458  005A8A  0100               	movlb	0	; () banked
 17459  005A8C  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17460  005A8E  D00C               	goto	l3094
 17461                           
 17462                           ; BSR set to: 0
 17463  005A90  C093  FFD9         	movff	itoa@buf,fsr2l
 17464  005A94  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17465  005A98  0E2D               	movlw	45
 17466  005A9A  6EDF               	movwf	indf2,c
 17467                           
 17468                           ; BSR set to: 0
 17469  005A9C  4B93               	infsnz	itoa@buf& (0+255),f,b
 17470  005A9E  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17471                           
 17472                           ; BSR set to: 0
 17473  005AA0  6D95               	negf	itoa@val& (0+255),b
 17474  005AA2  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17475  005AA4  B0D8               	btfsc	status,0,c
 17476  005AA6  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17477  005AA8                     l3094:
 17478                           
 17479                           ; BSR set to: 0
 17480                           
 17481                           ; BSR set to: 0
 17482  005AA8  C093  F08A         	movff	itoa@buf,utoa@buf
 17483  005AAC  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17484  005AB0  C095  F08C         	movff	itoa@val,utoa@val
 17485  005AB4  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17486  005AB8  C097  F08E         	movff	itoa@base,utoa@base
 17487  005ABC  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17488  005AC0  EC8E  F021         	call	_utoa	;wreg free
 17489  005AC4  0012               	return	
 17490  005AC6                     __end_of_itoa:
 17491                           	opt stack 0
 17492                           tosu	equ	0xFFF
 17493                           tosh	equ	0xFFE
 17494                           tosl	equ	0xFFD
 17495                           pclath	equ	0xFFA
 17496                           tblptru	equ	0xFF8
 17497                           tblptrh	equ	0xFF7
 17498                           tblptrl	equ	0xFF6
 17499                           tablat	equ	0xFF5
 17500                           prodh	equ	0xFF4
 17501                           prodl	equ	0xFF3
 17502                           intcon	equ	0xFF2
 17503                           intcon2	equ	0xFF1
 17504                           intcon3	equ	0xFF0
 17505                           indf0	equ	0xFEF
 17506                           postinc0	equ	0xFEE
 17507                           plusw0	equ	0xFEB
 17508                           fsr0h	equ	0xFEA
 17509                           fsr0l	equ	0xFE9
 17510                           wreg	equ	0xFE8
 17511                           indf1	equ	0xFE7
 17512                           postinc1	equ	0xFE6
 17513                           postdec1	equ	0xFE5
 17514                           fsr1h	equ	0xFE2
 17515                           fsr1l	equ	0xFE1
 17516                           indf2	equ	0xFDF
 17517                           postinc2	equ	0xFDE
 17518                           postdec2	equ	0xFDD
 17519                           plusw2	equ	0xFDB
 17520                           fsr2h	equ	0xFDA
 17521                           fsr2l	equ	0xFD9
 17522                           status	equ	0xFD8
 17523                           
 17524 ;; *************** function _utoa *****************
 17525 ;; Defined at:
 17526 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17527 ;; Parameters:    Size  Location     Type
 17528 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17529 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17530 ;;  val             2   44[BANK0 ] unsigned int 
 17531 ;;  base            2   46[BANK0 ] int 
 17532 ;; Auto vars:     Size  Location     Type
 17533 ;;  v               2   48[BANK0 ] unsigned int 
 17534 ;;  c               1   50[BANK0 ] unsigned char 
 17535 ;; Return value:  Size  Location     Type
 17536 ;;                  2   42[BANK0 ] PTR unsigned char 
 17537 ;; Registers used:
 17538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17539 ;; Tracked objects:
 17540 ;;		On entry : 0/0
 17541 ;;		On exit  : 0/0
 17542 ;;		Unchanged: 0/0
 17543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17544 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17545 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17547 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17548 ;;Total ram usage:        9 bytes
 17549 ;; Hardware stack levels used:    1
 17550 ;; Hardware stack levels required when called:   12
 17551 ;; This function calls:
 17552 ;;		___lwdiv
 17553 ;;		___lwmod
 17554 ;; This function is called by:
 17555 ;;		_Term_MainSm
 17556 ;;		_itoa
 17557 ;; This function uses a non-reentrant model
 17558 ;;
 17559                           
 17560                           	psect	text72
 17561  00431C                     __ptext72:
 17562                           	opt stack 0
 17563  00431C                     _utoa:
 17564                           	opt stack 14
 17565                           
 17566                           ;incstack = 0
 17567  00431C  C08C  F090         	movff	utoa@val,utoa@v
 17568  004320  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17569  004324  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17570  004328  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17571  00432C  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17572  004330  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17573  004334  ECE0  F02A         	call	___lwdiv	;wreg free
 17574  004338  C083  F090         	movff	?___lwdiv,utoa@v
 17575  00433C  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17576  004340  0100               	movlb	0	; () banked
 17577  004342  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17578  004344  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17579                           
 17580                           ; BSR set to: 0
 17581  004346  5190               	movf	utoa@v& (0+255),w,b
 17582  004348  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17583  00434A  A4D8               	btfss	status,2,c
 17584  00434C  D7EB               	goto	l3098
 17585                           
 17586                           ; BSR set to: 0
 17587                           
 17588                           ; BSR set to: 0
 17589  00434E  C08A  FFD9         	movff	utoa@buf,fsr2l
 17590  004352  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17591  004356  0E00               	movlw	0
 17592  004358  6EDF               	movwf	indf2,c
 17593                           
 17594                           ; BSR set to: 0
 17595  00435A  078A               	decf	utoa@buf& (0+255),f,b
 17596  00435C  A0D8               	btfss	status,0,c
 17597  00435E  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17598  004360                     
 17599                           ; BSR set to: 0
 17600                           
 17601                           ; BSR set to: 0
 17602  004360  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17603  004364  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17604  004368  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17605  00436C  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17606  004370  EC63  F02D         	call	___lwmod	;wreg free
 17607  004374  0100               	movlb	0	; () banked
 17608  004376  517D               	movf	?___lwmod& (0+255),w,b
 17609  004378  6F92               	movwf	utoa@c& (0+255),b
 17610                           
 17611                           ; BSR set to: 0
 17612  00437A  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17613  00437E  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17614  004382  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17615  004386  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17616  00438A  ECE0  F02A         	call	___lwdiv	;wreg free
 17617  00438E  C083  F08C         	movff	?___lwdiv,utoa@val
 17618  004392  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17619  004396  0E09               	movlw	9
 17620  004398  0100               	movlb	0	; () banked
 17621  00439A  6592               	cpfsgt	utoa@c& (0+255),b
 17622  00439C  D002               	goto	l3101
 17623                           
 17624                           ; BSR set to: 0
 17625  00439E  0E07               	movlw	7
 17626  0043A0  2792               	addwf	utoa@c& (0+255),f,b
 17627  0043A2                     l3101:
 17628                           
 17629                           ; BSR set to: 0
 17630  0043A2  0E30               	movlw	48
 17631  0043A4  2792               	addwf	utoa@c& (0+255),f,b
 17632                           
 17633                           ; BSR set to: 0
 17634  0043A6  C08A  FFD9         	movff	utoa@buf,fsr2l
 17635  0043AA  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17636  0043AE  C092  FFDF         	movff	utoa@c,indf2
 17637                           
 17638                           ; BSR set to: 0
 17639  0043B2  078A               	decf	utoa@buf& (0+255),f,b
 17640  0043B4  A0D8               	btfss	status,0,c
 17641  0043B6  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17642                           
 17643                           ; BSR set to: 0
 17644  0043B8  518C               	movf	utoa@val& (0+255),w,b
 17645  0043BA  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17646  0043BC  A4D8               	btfss	status,2,c
 17647  0043BE  D7D0               	goto	l3100
 17648                           
 17649                           ; BSR set to: 0
 17650                           ;	Return value of _utoa is never used
 17651                           
 17652                           ; BSR set to: 0
 17653  0043C0  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17654  0043C2  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17655  0043C4  0012               	return	
 17656  0043C6                     __end_of_utoa:
 17657                           	opt stack 0
 17658                           tosu	equ	0xFFF
 17659                           tosh	equ	0xFFE
 17660                           tosl	equ	0xFFD
 17661                           pclath	equ	0xFFA
 17662                           tblptru	equ	0xFF8
 17663                           tblptrh	equ	0xFF7
 17664                           tblptrl	equ	0xFF6
 17665                           tablat	equ	0xFF5
 17666                           prodh	equ	0xFF4
 17667                           prodl	equ	0xFF3
 17668                           intcon	equ	0xFF2
 17669                           intcon2	equ	0xFF1
 17670                           intcon3	equ	0xFF0
 17671                           indf0	equ	0xFEF
 17672                           postinc0	equ	0xFEE
 17673                           plusw0	equ	0xFEB
 17674                           fsr0h	equ	0xFEA
 17675                           fsr0l	equ	0xFE9
 17676                           wreg	equ	0xFE8
 17677                           indf1	equ	0xFE7
 17678                           postinc1	equ	0xFE6
 17679                           postdec1	equ	0xFE5
 17680                           fsr1h	equ	0xFE2
 17681                           fsr1l	equ	0xFE1
 17682                           indf2	equ	0xFDF
 17683                           postinc2	equ	0xFDE
 17684                           postdec2	equ	0xFDD
 17685                           plusw2	equ	0xFDB
 17686                           fsr2h	equ	0xFDA
 17687                           fsr2l	equ	0xFD9
 17688                           status	equ	0xFD8
 17689                           
 17690 ;; *************** function ___lwmod *****************
 17691 ;; Defined at:
 17692 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17693 ;; Parameters:    Size  Location     Type
 17694 ;;  dividend        2   29[BANK0 ] unsigned int 
 17695 ;;  divisor         2   31[BANK0 ] unsigned int 
 17696 ;; Auto vars:     Size  Location     Type
 17697 ;;  counter         1   33[BANK0 ] unsigned char 
 17698 ;; Return value:  Size  Location     Type
 17699 ;;                  2   29[BANK0 ] unsigned int 
 17700 ;; Registers used:
 17701 ;;		wreg, status,2, status,0
 17702 ;; Tracked objects:
 17703 ;;		On entry : 0/0
 17704 ;;		On exit  : 0/0
 17705 ;;		Unchanged: 0/0
 17706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17707 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17710 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17711 ;;Total ram usage:        5 bytes
 17712 ;; Hardware stack levels used:    1
 17713 ;; Hardware stack levels required when called:   11
 17714 ;; This function calls:
 17715 ;;		Nothing
 17716 ;; This function is called by:
 17717 ;;		_utoa
 17718 ;; This function uses a non-reentrant model
 17719 ;;
 17720                           
 17721                           	psect	text73
 17722  005AC6                     __ptext73:
 17723                           	opt stack 0
 17724  005AC6                     ___lwmod:
 17725                           	opt stack 14
 17726                           
 17727                           ; BSR set to: 0
 17728                           ;incstack = 0
 17729  005AC6  0100               	movlb	0	; () banked
 17730  005AC8  517F               	movf	___lwmod@divisor& (0+255),w,b
 17731  005ACA  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17732  005ACC  B4D8               	btfsc	status,2,c
 17733  005ACE  D018               	goto	l3196
 17734                           
 17735                           ; BSR set to: 0
 17736  005AD0  0E01               	movlw	1
 17737  005AD2  6F81               	movwf	___lwmod@counter& (0+255),b
 17738  005AD4  D004               	goto	l3191
 17739  005AD6                     
 17740                           ; BSR set to: 0
 17741                           
 17742                           ; BSR set to: 0
 17743  005AD6  90D8               	bcf	status,0,c
 17744  005AD8  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17745  005ADA  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17746  005ADC  2B81               	incf	___lwmod@counter& (0+255),f,b
 17747  005ADE                     l3191:
 17748                           
 17749                           ; BSR set to: 0
 17750                           
 17751                           ; BSR set to: 0
 17752  005ADE  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17753  005AE0  D7FA               	goto	l3192
 17754  005AE2                     u11210:
 17755                           
 17756                           ; BSR set to: 0
 17757                           
 17758                           ; BSR set to: 0
 17759                           
 17760                           ; BSR set to: 0
 17761  005AE2  517F               	movf	___lwmod@divisor& (0+255),w,b
 17762  005AE4  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17763  005AE6  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17764  005AE8  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17765  005AEA  A0D8               	btfss	status,0,c
 17766  005AEC  D004               	goto	l3195
 17767                           
 17768                           ; BSR set to: 0
 17769  005AEE  517F               	movf	___lwmod@divisor& (0+255),w,b
 17770  005AF0  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17771  005AF2  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17772  005AF4  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17773  005AF6                     l3195:
 17774                           
 17775                           ; BSR set to: 0
 17776                           
 17777                           ; BSR set to: 0
 17778  005AF6  90D8               	bcf	status,0,c
 17779  005AF8  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17780  005AFA  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17781                           
 17782                           ; BSR set to: 0
 17783  005AFC  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17784  005AFE  D7F1               	goto	u11210
 17785  005B00                     l3196:
 17786                           
 17787                           ; BSR set to: 0
 17788                           
 17789                           ; BSR set to: 0
 17790  005B00  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17791  005B04  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17792                           
 17793                           ; BSR set to: 0
 17794  005B08  0012               	return		;funcret
 17795  005B0A                     __end_of___lwmod:
 17796                           	opt stack 0
 17797                           tosu	equ	0xFFF
 17798                           tosh	equ	0xFFE
 17799                           tosl	equ	0xFFD
 17800                           pclath	equ	0xFFA
 17801                           tblptru	equ	0xFF8
 17802                           tblptrh	equ	0xFF7
 17803                           tblptrl	equ	0xFF6
 17804                           tablat	equ	0xFF5
 17805                           prodh	equ	0xFF4
 17806                           prodl	equ	0xFF3
 17807                           intcon	equ	0xFF2
 17808                           intcon2	equ	0xFF1
 17809                           intcon3	equ	0xFF0
 17810                           indf0	equ	0xFEF
 17811                           postinc0	equ	0xFEE
 17812                           plusw0	equ	0xFEB
 17813                           fsr0h	equ	0xFEA
 17814                           fsr0l	equ	0xFE9
 17815                           wreg	equ	0xFE8
 17816                           indf1	equ	0xFE7
 17817                           postinc1	equ	0xFE6
 17818                           postdec1	equ	0xFE5
 17819                           fsr1h	equ	0xFE2
 17820                           fsr1l	equ	0xFE1
 17821                           indf2	equ	0xFDF
 17822                           postinc2	equ	0xFDE
 17823                           postdec2	equ	0xFDD
 17824                           plusw2	equ	0xFDB
 17825                           fsr2h	equ	0xFDA
 17826                           fsr2l	equ	0xFD9
 17827                           status	equ	0xFD8
 17828                           
 17829 ;; *************** function _getsUSBUSART *****************
 17830 ;; Defined at:
 17831 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17832 ;; Parameters:    Size  Location     Type
 17833 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17834 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17835 ;;  len             1   38[BANK0 ] unsigned char 
 17836 ;; Auto vars:     Size  Location     Type
 17837 ;;		None
 17838 ;; Return value:  Size  Location     Type
 17839 ;;                  1    wreg      unsigned char 
 17840 ;; Registers used:
 17841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17842 ;; Tracked objects:
 17843 ;;		On entry : 0/0
 17844 ;;		On exit  : 0/0
 17845 ;;		Unchanged: 0/0
 17846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17847 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17850 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17851 ;;Total ram usage:        4 bytes
 17852 ;; Hardware stack levels used:    1
 17853 ;; Hardware stack levels required when called:   12
 17854 ;; This function calls:
 17855 ;;		_USBTransferOnePacket
 17856 ;; This function is called by:
 17857 ;;		_Terminal
 17858 ;;		_GsmGprsTerminal
 17859 ;; This function uses a non-reentrant model
 17860 ;;
 17861                           
 17862                           	psect	text74
 17863  004824                     __ptext74:
 17864                           	opt stack 0
 17865  004824                     _getsUSBUSART:
 17866                           	opt stack 13
 17867                           
 17868                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17869                           
 17870                           ; BSR set to: 0
 17871                           ;incstack = 0
 17872  004824  0E00               	movlw	0
 17873  004826  0100               	movlb	0	; () banked
 17874  004828  6FC6               	movwf	_cdc_rx_len& (0+255),b
 17875                           
 17876                           ; BSR set to: 0
 17877                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17878  00482A  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17879  00482C  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17880  00482E  B4D8               	btfsc	status,2,c
 17881  004830  D006               	goto	u11930
 17882                           
 17883                           ; BSR set to: 0
 17884  004832  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17885  004836  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17886  00483A  BEDF               	btfsc	indf2,7,c
 17887  00483C  D03B               	goto	l1921
 17888  00483E                     u11930:
 17889                           
 17890                           ; BSR set to: 0
 17891                           ;usb_device_cdc.c: 493: {
 17892                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17893                           
 17894                           ; BSR set to: 0
 17895  00483E  EE20 F001          	lfsr	2,1
 17896  004842  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17897  004844  26D9               	addwf	fsr2l,f,c
 17898  004846  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17899  004848  22DA               	addwfc	fsr2h,f,c
 17900  00484A  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17901  00484C  5CDE               	subwf	postinc2,w,c
 17902  00484E  B0D8               	btfsc	status,0,c
 17903  004850  D008               	goto	l1924
 17904                           
 17905                           ; BSR set to: 0
 17906                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17907  004852  EE20 F001          	lfsr	2,1
 17908  004856  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17909  004858  26D9               	addwf	fsr2l,f,c
 17910  00485A  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17911  00485C  22DA               	addwfc	fsr2h,f,c
 17912  00485E  50DF               	movf	indf2,w,c
 17913  004860  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17914  004862                     l1924:
 17915                           
 17916                           ; BSR set to: 0
 17917                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17918                           
 17919                           ; BSR set to: 0
 17920  004862  0E00               	movlw	0
 17921  004864  6FC6               	movwf	_cdc_rx_len& (0+255),b
 17922  004866  D013               	goto	l1925
 17923  004868                     
 17924                           ; BSR set to: 0
 17925                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17926                           
 17927                           ; BSR set to: 0
 17928  004868  51C6               	movf	_cdc_rx_len& (0+255),w,b
 17929  00486A  0D01               	mullw	1
 17930  00486C  0E00               	movlw	low _cdc_data_rx
 17931  00486E  24F3               	addwf	prodl,w,c
 17932  004870  6ED9               	movwf	fsr2l,c
 17933  004872  0E05               	movlw	high _cdc_data_rx
 17934  004874  20F4               	addwfc	prodh,w,c
 17935  004876  6EDA               	movwf	fsr2h,c
 17936  004878  51C6               	movf	_cdc_rx_len& (0+255),w,b
 17937  00487A  0D01               	mullw	1
 17938  00487C  50F3               	movf	prodl,w,c
 17939  00487E  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17940  004880  6EE1               	movwf	fsr1l,c
 17941  004882  50F4               	movf	prodh,w,c
 17942  004884  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17943  004886  6EE2               	movwf	fsr1h,c
 17944  004888  CFDF FFE7          	movff	indf2,indf1
 17945                           
 17946                           ; BSR set to: 0
 17947  00488C  2BC6               	incf	_cdc_rx_len& (0+255),f,b
 17948  00488E                     l1925:
 17949                           
 17950                           ; BSR set to: 0
 17951                           
 17952                           ; BSR set to: 0
 17953  00488E  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17954  004890  5DC6               	subwf	_cdc_rx_len& (0+255),w,b
 17955  004892  A0D8               	btfss	status,0,c
 17956  004894  D7E9               	goto	l1926
 17957                           
 17958                           ; BSR set to: 0
 17959                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17960                           
 17961                           ; BSR set to: 0
 17962  004896  0E00               	movlw	0
 17963  004898  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 17964  00489A  0E00               	movlw	low _cdc_data_rx
 17965  00489C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 17966  00489E  0E05               	movlw	high _cdc_data_rx
 17967  0048A0  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17968  0048A2  0E40               	movlw	64
 17969  0048A4  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 17970  0048A6  0E02               	movlw	2
 17971  0048A8  EC28  F020         	call	_USBTransferOnePacket
 17972  0048AC  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17973  0048B0  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17974  0048B4                     l1921:
 17975                           
 17976                           ;usb_device_cdc.c: 513: }
 17977                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 17978  0048B4  0100               	movlb	0	; () banked
 17979  0048B6  51C6               	movf	_cdc_rx_len& (0+255),w,b
 17980  0048B8  0012               	return	
 17981  0048BA                     __end_of_getsUSBUSART:
 17982                           	opt stack 0
 17983                           tosu	equ	0xFFF
 17984                           tosh	equ	0xFFE
 17985                           tosl	equ	0xFFD
 17986                           pclath	equ	0xFFA
 17987                           tblptru	equ	0xFF8
 17988                           tblptrh	equ	0xFF7
 17989                           tblptrl	equ	0xFF6
 17990                           tablat	equ	0xFF5
 17991                           prodh	equ	0xFF4
 17992                           prodl	equ	0xFF3
 17993                           intcon	equ	0xFF2
 17994                           intcon2	equ	0xFF1
 17995                           intcon3	equ	0xFF0
 17996                           indf0	equ	0xFEF
 17997                           postinc0	equ	0xFEE
 17998                           plusw0	equ	0xFEB
 17999                           fsr0h	equ	0xFEA
 18000                           fsr0l	equ	0xFE9
 18001                           wreg	equ	0xFE8
 18002                           indf1	equ	0xFE7
 18003                           postinc1	equ	0xFE6
 18004                           postdec1	equ	0xFE5
 18005                           fsr1h	equ	0xFE2
 18006                           fsr1l	equ	0xFE1
 18007                           indf2	equ	0xFDF
 18008                           postinc2	equ	0xFDE
 18009                           postdec2	equ	0xFDD
 18010                           plusw2	equ	0xFDB
 18011                           fsr2h	equ	0xFDA
 18012                           fsr2l	equ	0xFD9
 18013                           status	equ	0xFD8
 18014                           
 18015 ;; *************** function _USBTransferOnePacket *****************
 18016 ;; Defined at:
 18017 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18018 ;; Parameters:    Size  Location     Type
 18019 ;;  ep              1    wreg     unsigned char 
 18020 ;;  dir             1   29[BANK0 ] unsigned char 
 18021 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18022 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18023 ;;  len             1   32[BANK0 ] unsigned char 
 18024 ;; Auto vars:     Size  Location     Type
 18025 ;;  ep              1   33[BANK0 ] unsigned char 
 18026 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18027 ;;		 -> NULL(0), BDT(48), 
 18028 ;; Return value:  Size  Location     Type
 18029 ;;                  2   29[BANK0 ] PTR void 
 18030 ;; Registers used:
 18031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18032 ;; Tracked objects:
 18033 ;;		On entry : 0/0
 18034 ;;		On exit  : 0/0
 18035 ;;		Unchanged: 0/0
 18036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18037 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18038 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18040 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18041 ;;Total ram usage:        7 bytes
 18042 ;; Hardware stack levels used:    1
 18043 ;; Hardware stack levels required when called:   11
 18044 ;; This function calls:
 18045 ;;		Nothing
 18046 ;; This function is called by:
 18047 ;;		_CDCInitEP
 18048 ;;		_getsUSBUSART
 18049 ;;		_CDCTxService
 18050 ;;		_USBCDCEventHandler
 18051 ;; This function uses a non-reentrant model
 18052 ;;
 18053                           
 18054                           	psect	text75
 18055  004050                     __ptext75:
 18056                           	opt stack 0
 18057  004050                     _USBTransferOnePacket:
 18058                           	opt stack 13
 18059                           
 18060                           ; BSR set to: 0
 18061                           ;incstack = 0
 18062                           ;USBTransferOnePacket@ep stored from wreg
 18063  004050  0100               	movlb	0	; () banked
 18064  004052  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18065                           
 18066                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18067                           ;usb_device.c: 1018: if(dir != 0)
 18068  004054  0100               	movlb	0	; () banked
 18069  004056  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18070  004058  B4D8               	btfsc	status,2,c
 18071  00405A  D007               	goto	l1645
 18072                           
 18073                           ; BSR set to: 0
 18074                           ;usb_device.c: 1019: {
 18075                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18076  00405C  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18077  00405E  0D02               	mullw	2
 18078  004060  0EB6               	movlw	low _pBDTEntryIn
 18079  004062  24F3               	addwf	prodl,w,c
 18080  004064  6ED9               	movwf	fsr2l,c
 18081  004066  0E00               	movlw	high _pBDTEntryIn
 18082  004068  D006               	goto	L16
 18083  00406A                     l1645:
 18084                           
 18085                           ; BSR set to: 0
 18086                           ;usb_device.c: 1023: else
 18087                           ;usb_device.c: 1024: {
 18088                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18089                           
 18090                           ; BSR set to: 0
 18091  00406A  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18092  00406C  0D02               	mullw	2
 18093  00406E  0E0E               	movlw	low _pBDTEntryOut
 18094  004070  24F3               	addwf	prodl,w,c
 18095  004072  6ED9               	movwf	fsr2l,c
 18096  004074  0E03               	movlw	high _pBDTEntryOut
 18097  004076                     L16:
 18098  004076  20F4               	addwfc	prodh,w,c
 18099  004078  6EDA               	movwf	fsr2h,c
 18100  00407A  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18101  00407E  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18102                           
 18103                           ; BSR set to: 0
 18104                           ;usb_device.c: 1027: }
 18105                           ;usb_device.c: 1031: if(handle == 0)
 18106                           
 18107                           ; BSR set to: 0
 18108  004082  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18109  004084  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18110  004086  A4D8               	btfss	status,2,c
 18111  004088  D005               	goto	l1647
 18112                           
 18113                           ; BSR set to: 0
 18114                           ;usb_device.c: 1032: {
 18115                           ;usb_device.c: 1033: return 0;
 18116  00408A  0E00               	movlw	0
 18117  00408C  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18118  00408E  0E00               	movlw	0
 18119  004090  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18120                           
 18121                           ; BSR set to: 0
 18122  004092  0012               	return	
 18123  004094                     l1647:
 18124                           
 18125                           ; BSR set to: 0
 18126                           ;usb_device.c: 1034: }
 18127                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18128                           
 18129                           ; BSR set to: 0
 18130  004094  EE20 F002          	lfsr	2,2
 18131  004098  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18132  00409A  26D9               	addwf	fsr2l,f,c
 18133  00409C  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18134  00409E  22DA               	addwfc	fsr2h,f,c
 18135  0040A0  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18136  0040A4  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18137                           
 18138                           ;usb_device.c: 1048: handle->CNT = len;
 18139  0040A8  EE20 F001          	lfsr	2,1
 18140  0040AC  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18141  0040AE  26D9               	addwf	fsr2l,f,c
 18142  0040B0  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18143  0040B2  22DA               	addwfc	fsr2h,f,c
 18144  0040B4  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18145                           
 18146                           ; BSR set to: 0
 18147                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18148  0040B8  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18149  0040BC  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18150  0040C0  0E40               	movlw	64
 18151  0040C2  16DF               	andwf	indf2,f,c
 18152                           
 18153                           ; BSR set to: 0
 18154                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18155  0040C4  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18156  0040C8  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18157  0040CC  0E00               	movlw	0
 18158  0040CE  86DB               	bsf	plusw2,3,c
 18159                           
 18160                           ; BSR set to: 0
 18161                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18162  0040D0  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18163  0040D4  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18164  0040D8  0E00               	movlw	0
 18165  0040DA  8EDB               	bsf	plusw2,7,c
 18166                           
 18167                           ; BSR set to: 0
 18168                           ;usb_device.c: 1054: if(dir != 0)
 18169  0040DC  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18170  0040DE  B4D8               	btfsc	status,2,c
 18171  0040E0  D007               	goto	l1649
 18172                           
 18173                           ; BSR set to: 0
 18174                           ;usb_device.c: 1055: {
 18175                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18176  0040E2  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18177  0040E4  0D02               	mullw	2
 18178  0040E6  0EB6               	movlw	low _pBDTEntryIn
 18179  0040E8  24F3               	addwf	prodl,w,c
 18180  0040EA  6ED9               	movwf	fsr2l,c
 18181  0040EC  0E00               	movlw	high _pBDTEntryIn
 18182  0040EE  D006               	goto	L17
 18183  0040F0                     l1649:
 18184                           
 18185                           ; BSR set to: 0
 18186                           ;usb_device.c: 1059: else
 18187                           ;usb_device.c: 1060: {
 18188                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18189                           
 18190                           ; BSR set to: 0
 18191  0040F0  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18192  0040F2  0D02               	mullw	2
 18193  0040F4  0E0E               	movlw	low _pBDTEntryOut
 18194  0040F6  24F3               	addwf	prodl,w,c
 18195  0040F8  6ED9               	movwf	fsr2l,c
 18196  0040FA  0E03               	movlw	high _pBDTEntryOut
 18197  0040FC                     L17:
 18198  0040FC  20F4               	addwfc	prodh,w,c
 18199  0040FE  6EDA               	movwf	fsr2h,c
 18200  004100  0E04               	movlw	4
 18201  004102  1ADF               	xorwf	indf2,f,c
 18202                           
 18203                           ; BSR set to: 0
 18204                           ;usb_device.c: 1063: }
 18205                           ;usb_device.c: 1064: return (void*)handle;
 18206                           
 18207                           ; BSR set to: 0
 18208  004104  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18209  004108  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18210  00410C  0012               	return	
 18211  00410E                     __end_of_USBTransferOnePacket:
 18212                           	opt stack 0
 18213                           tosu	equ	0xFFF
 18214                           tosh	equ	0xFFE
 18215                           tosl	equ	0xFFD
 18216                           pclath	equ	0xFFA
 18217                           tblptru	equ	0xFF8
 18218                           tblptrh	equ	0xFF7
 18219                           tblptrl	equ	0xFF6
 18220                           tablat	equ	0xFF5
 18221                           prodh	equ	0xFF4
 18222                           prodl	equ	0xFF3
 18223                           intcon	equ	0xFF2
 18224                           intcon2	equ	0xFF1
 18225                           intcon3	equ	0xFF0
 18226                           indf0	equ	0xFEF
 18227                           postinc0	equ	0xFEE
 18228                           plusw0	equ	0xFEB
 18229                           fsr0h	equ	0xFEA
 18230                           fsr0l	equ	0xFE9
 18231                           wreg	equ	0xFE8
 18232                           indf1	equ	0xFE7
 18233                           postinc1	equ	0xFE6
 18234                           postdec1	equ	0xFE5
 18235                           fsr1h	equ	0xFE2
 18236                           fsr1l	equ	0xFE1
 18237                           indf2	equ	0xFDF
 18238                           postinc2	equ	0xFDE
 18239                           postdec2	equ	0xFDD
 18240                           plusw2	equ	0xFDB
 18241                           fsr2h	equ	0xFDA
 18242                           fsr2l	equ	0xFD9
 18243                           status	equ	0xFD8
 18244                           
 18245 ;; *************** function _atoi *****************
 18246 ;; Defined at:
 18247 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18248 ;; Parameters:    Size  Location     Type
 18249 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18250 ;;		 -> Terminal@Len(4), 
 18251 ;; Auto vars:     Size  Location     Type
 18252 ;;  a               2   40[BANK0 ] int 
 18253 ;;  sign            1   39[BANK0 ] unsigned char 
 18254 ;; Return value:  Size  Location     Type
 18255 ;;                  2   35[BANK0 ] int 
 18256 ;; Registers used:
 18257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18258 ;; Tracked objects:
 18259 ;;		On entry : 0/0
 18260 ;;		On exit  : 0/0
 18261 ;;		Unchanged: 0/0
 18262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18263 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18264 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18265 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18266 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18267 ;;Total ram usage:        7 bytes
 18268 ;; Hardware stack levels used:    1
 18269 ;; Hardware stack levels required when called:   12
 18270 ;; This function calls:
 18271 ;;		___wmul
 18272 ;;		_isdigit
 18273 ;; This function is called by:
 18274 ;;		_Terminal
 18275 ;; This function uses a non-reentrant model
 18276 ;;
 18277                           
 18278                           	psect	text76
 18279  0036CE                     __ptext76:
 18280                           	opt stack 0
 18281  0036CE                     _atoi:
 18282                           	opt stack 13
 18283                           
 18284                           ; BSR set to: 0
 18285                           ;incstack = 0
 18286  0036CE  D003               	goto	l2907
 18287  0036D0  0100               	movlb	0	; () banked
 18288  0036D2  4B83               	infsnz	atoi@s& (0+255),f,b
 18289  0036D4  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18290  0036D6                     l2907:
 18291                           
 18292                           ; BSR set to: 0
 18293  0036D6  C083  FFD9         	movff	atoi@s,fsr2l
 18294  0036DA  C084  FFDA         	movff	atoi@s+1,fsr2h
 18295  0036DE  0E20               	movlw	32
 18296  0036E0  18DE               	xorwf	postinc2,w,c
 18297  0036E2  B4D8               	btfsc	status,2,c
 18298  0036E4  D7F5               	goto	l2908
 18299  0036E6  C083  FFD9         	movff	atoi@s,fsr2l
 18300  0036EA  C084  FFDA         	movff	atoi@s+1,fsr2h
 18301  0036EE  0E09               	movlw	9
 18302  0036F0  18DE               	xorwf	postinc2,w,c
 18303  0036F2  B4D8               	btfsc	status,2,c
 18304  0036F4  D7ED               	goto	l2908
 18305  0036F6  0E00               	movlw	0
 18306  0036F8  0100               	movlb	0	; () banked
 18307  0036FA  6F89               	movwf	(atoi@a+1)& (0+255),b
 18308  0036FC  0E00               	movlw	0
 18309  0036FE  6F88               	movwf	atoi@a& (0+255),b
 18310  003700  0E00               	movlw	0
 18311  003702  6F87               	movwf	atoi@sign& (0+255),b
 18312                           
 18313                           ; BSR set to: 0
 18314  003704  C083  FFD9         	movff	atoi@s,fsr2l
 18315  003708  C084  FFDA         	movff	atoi@s+1,fsr2h
 18316  00370C  0E2D               	movlw	45
 18317  00370E  18DE               	xorwf	postinc2,w,c
 18318  003710  A4D8               	btfss	status,2,c
 18319  003712  D002               	goto	l2910
 18320                           
 18321                           ; BSR set to: 0
 18322  003714  2B87               	incf	atoi@sign& (0+255),f,b
 18323  003716  D026               	goto	l13192
 18324  003718                     l2910:
 18325                           
 18326                           ; BSR set to: 0
 18327                           
 18328                           ; BSR set to: 0
 18329  003718  C083  FFD9         	movff	atoi@s,fsr2l
 18330  00371C  C084  FFDA         	movff	atoi@s+1,fsr2h
 18331  003720  0E2B               	movlw	43
 18332  003722  18DE               	xorwf	postinc2,w,c
 18333  003724  A4D8               	btfss	status,2,c
 18334  003726  D020               	goto	l2913
 18335  003728  D01D               	goto	l13192
 18336  00372A                     
 18337                           ; BSR set to: 0
 18338  00372A  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18339  00372E  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18340  003732  0E00               	movlw	0
 18341  003734  0100               	movlb	0	; () banked
 18342  003736  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18343  003738  0E0A               	movlw	10
 18344  00373A  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18345  00373C  EC35  F030         	call	___wmul	;wreg free
 18346  003740  C083  FFD9         	movff	atoi@s,fsr2l
 18347  003744  C084  FFDA         	movff	atoi@s+1,fsr2h
 18348  003748  50DF               	movf	indf2,w,c
 18349  00374A  0100               	movlb	0	; () banked
 18350  00374C  6F85               	movwf	??_atoi& (0+255),b
 18351  00374E  6B86               	clrf	(??_atoi+1)& (0+255),b
 18352  003750  517D               	movf	?___wmul& (0+255),w,b
 18353  003752  2785               	addwf	??_atoi& (0+255),f,b
 18354  003754  517E               	movf	(?___wmul+1)& (0+255),w,b
 18355  003756  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18356  003758  0ED0               	movlw	208
 18357  00375A  2585               	addwf	??_atoi& (0+255),w,b
 18358  00375C  6F88               	movwf	atoi@a& (0+255),b
 18359  00375E  0EFF               	movlw	255
 18360  003760  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18361  003762  6F89               	movwf	(atoi@a+1)& (0+255),b
 18362  003764                     l13192:
 18363                           
 18364                           ; BSR set to: 0
 18365  003764  4B83               	infsnz	atoi@s& (0+255),f,b
 18366  003766  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18367  003768                     l2913:
 18368                           
 18369                           ; BSR set to: 0
 18370                           
 18371                           ; BSR set to: 0
 18372  003768  C083  FFD9         	movff	atoi@s,fsr2l
 18373  00376C  C084  FFDA         	movff	atoi@s+1,fsr2h
 18374  003770  50DF               	movf	indf2,w,c
 18375  003772  ECE8  F030         	call	_isdigit
 18376  003776  B0D8               	btfsc	status,0,c
 18377  003778  D7D8               	goto	l2914
 18378  00377A  0100               	movlb	0	; () banked
 18379  00377C  5187               	movf	atoi@sign& (0+255),w,b
 18380  00377E  B4D8               	btfsc	status,2,c
 18381  003780  D00D               	goto	l2916
 18382                           
 18383                           ; BSR set to: 0
 18384  003782  C088  F085         	movff	atoi@a,??_atoi
 18385  003786  C089  F086         	movff	atoi@a+1,??_atoi+1
 18386  00378A  1F85               	comf	??_atoi& (0+255),f,b
 18387  00378C  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18388  00378E  4B85               	infsnz	??_atoi& (0+255),f,b
 18389  003790  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18390  003792  C085  F083         	movff	??_atoi,?_atoi
 18391  003796  C086  F084         	movff	??_atoi+1,?_atoi+1
 18392  00379A  0012               	return	
 18393  00379C                     l2916:
 18394                           
 18395                           ; BSR set to: 0
 18396  00379C  C088  F083         	movff	atoi@a,?_atoi
 18397  0037A0  C089  F084         	movff	atoi@a+1,?_atoi+1
 18398                           
 18399                           ; BSR set to: 0
 18400  0037A4  0012               	return		;funcret
 18401  0037A6                     __end_of_atoi:
 18402                           	opt stack 0
 18403                           tosu	equ	0xFFF
 18404                           tosh	equ	0xFFE
 18405                           tosl	equ	0xFFD
 18406                           pclath	equ	0xFFA
 18407                           tblptru	equ	0xFF8
 18408                           tblptrh	equ	0xFF7
 18409                           tblptrl	equ	0xFF6
 18410                           tablat	equ	0xFF5
 18411                           prodh	equ	0xFF4
 18412                           prodl	equ	0xFF3
 18413                           intcon	equ	0xFF2
 18414                           intcon2	equ	0xFF1
 18415                           intcon3	equ	0xFF0
 18416                           indf0	equ	0xFEF
 18417                           postinc0	equ	0xFEE
 18418                           plusw0	equ	0xFEB
 18419                           fsr0h	equ	0xFEA
 18420                           fsr0l	equ	0xFE9
 18421                           wreg	equ	0xFE8
 18422                           indf1	equ	0xFE7
 18423                           postinc1	equ	0xFE6
 18424                           postdec1	equ	0xFE5
 18425                           fsr1h	equ	0xFE2
 18426                           fsr1l	equ	0xFE1
 18427                           indf2	equ	0xFDF
 18428                           postinc2	equ	0xFDE
 18429                           postdec2	equ	0xFDD
 18430                           plusw2	equ	0xFDB
 18431                           fsr2h	equ	0xFDA
 18432                           fsr2l	equ	0xFD9
 18433                           status	equ	0xFD8
 18434                           
 18435 ;; *************** function _isdigit *****************
 18436 ;; Defined at:
 18437 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18438 ;; Parameters:    Size  Location     Type
 18439 ;;  c               1    wreg     unsigned char 
 18440 ;; Auto vars:     Size  Location     Type
 18441 ;;  c               1   31[BANK0 ] unsigned char 
 18442 ;; Return value:  Size  Location     Type
 18443 ;;		None               void
 18444 ;; Registers used:
 18445 ;;		wreg, status,2, status,0
 18446 ;; Tracked objects:
 18447 ;;		On entry : 0/0
 18448 ;;		On exit  : 0/0
 18449 ;;		Unchanged: 0/0
 18450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18452 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18453 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18454 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18455 ;;Total ram usage:        3 bytes
 18456 ;; Hardware stack levels used:    1
 18457 ;; Hardware stack levels required when called:   11
 18458 ;; This function calls:
 18459 ;;		Nothing
 18460 ;; This function is called by:
 18461 ;;		_atoi
 18462 ;;		_strtol
 18463 ;;		_xtoi
 18464 ;;		_isxdigit
 18465 ;; This function uses a non-reentrant model
 18466 ;;
 18467                           
 18468                           	psect	text77
 18469  0061D0                     __ptext77:
 18470                           	opt stack 0
 18471  0061D0                     _isdigit:
 18472                           	opt stack 12
 18473                           
 18474                           ; BSR set to: 0
 18475                           ;incstack = 0
 18476                           ;isdigit@c stored from wreg
 18477  0061D0  0100               	movlb	0	; () banked
 18478  0061D2  6F7F               	movwf	isdigit@c& (0+255),b
 18479  0061D4  0E00               	movlw	0
 18480  0061D6  0100               	movlb	0	; () banked
 18481  0061D8  6F7E               	movwf	_isdigit$6295& (0+255),b
 18482                           
 18483                           ; BSR set to: 0
 18484  0061DA  0E3A               	movlw	58
 18485  0061DC  617F               	cpfslt	isdigit@c& (0+255),b
 18486  0061DE  D005               	goto	l3088
 18487                           
 18488                           ; BSR set to: 0
 18489  0061E0  0E2F               	movlw	47
 18490  0061E2  657F               	cpfsgt	isdigit@c& (0+255),b
 18491  0061E4  D002               	goto	l3088
 18492                           
 18493                           ; BSR set to: 0
 18494  0061E6  0E01               	movlw	1
 18495  0061E8  6F7E               	movwf	_isdigit$6295& (0+255),b
 18496  0061EA                     l3088:
 18497                           
 18498                           ; BSR set to: 0
 18499                           
 18500                           ; BSR set to: 0
 18501  0061EA  C07E  F07D         	movff	_isdigit$6295,??_isdigit
 18502  0061EE  317D               	rrcf	??_isdigit& (0+255),w,b
 18503  0061F0  0012               	return	
 18504  0061F2                     __end_of_isdigit:
 18505                           	opt stack 0
 18506                           tosu	equ	0xFFF
 18507                           tosh	equ	0xFFE
 18508                           tosl	equ	0xFFD
 18509                           pclath	equ	0xFFA
 18510                           tblptru	equ	0xFF8
 18511                           tblptrh	equ	0xFF7
 18512                           tblptrl	equ	0xFF6
 18513                           tablat	equ	0xFF5
 18514                           prodh	equ	0xFF4
 18515                           prodl	equ	0xFF3
 18516                           intcon	equ	0xFF2
 18517                           intcon2	equ	0xFF1
 18518                           intcon3	equ	0xFF0
 18519                           indf0	equ	0xFEF
 18520                           postinc0	equ	0xFEE
 18521                           plusw0	equ	0xFEB
 18522                           fsr0h	equ	0xFEA
 18523                           fsr0l	equ	0xFE9
 18524                           wreg	equ	0xFE8
 18525                           indf1	equ	0xFE7
 18526                           postinc1	equ	0xFE6
 18527                           postdec1	equ	0xFE5
 18528                           fsr1h	equ	0xFE2
 18529                           fsr1l	equ	0xFE1
 18530                           indf2	equ	0xFDF
 18531                           postinc2	equ	0xFDE
 18532                           postdec2	equ	0xFDD
 18533                           plusw2	equ	0xFDB
 18534                           fsr2h	equ	0xFDA
 18535                           fsr2l	equ	0xFD9
 18536                           status	equ	0xFD8
 18537                           
 18538 ;; *************** function _Rtcm_SetRtccDate *****************
 18539 ;; Defined at:
 18540 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18541 ;; Parameters:    Size  Location     Type
 18542 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18543 ;; Auto vars:     Size  Location     Type
 18544 ;;		None
 18545 ;; Return value:  Size  Location     Type
 18546 ;;                  1    wreg      void 
 18547 ;; Registers used:
 18548 ;;		wreg, status,2, status,0, cstack
 18549 ;; Tracked objects:
 18550 ;;		On entry : 0/0
 18551 ;;		On exit  : 0/0
 18552 ;;		Unchanged: 0/0
 18553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18554 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18557 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18558 ;;Total ram usage:        8 bytes
 18559 ;; Hardware stack levels used:    1
 18560 ;; Hardware stack levels required when called:   13
 18561 ;; This function calls:
 18562 ;;		_Rtcc_LockRtc
 18563 ;;		_Rtcc_SetRtccValue
 18564 ;;		_Rtcc_UnlockRtc
 18565 ;; This function is called by:
 18566 ;;		_Rtcm_MainTask
 18567 ;; This function uses a non-reentrant model
 18568 ;;
 18569                           
 18570                           	psect	text78
 18571  0054C4                     __ptext78:
 18572                           	opt stack 0
 18573  0054C4                     _Rtcm_SetRtccDate:
 18574                           	opt stack 14
 18575                           
 18576                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18577                           
 18578                           ; BSR set to: 0
 18579                           ;incstack = 0
 18580  0054C4  EC1C  F032         	call	_Rtcc_UnlockRtc	;wreg free
 18581                           
 18582                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18583  0054C8  0100               	movlb	0	; () banked
 18584  0054CA  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18585  0054CC  0F30               	addlw	48
 18586  0054CE  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18587  0054D0  0E00               	movlw	0
 18588  0054D2  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18589                           
 18590                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18591  0054D6  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18592  0054DA  0E01               	movlw	1
 18593  0054DC  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18594                           
 18595                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18596  0054E0  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18597  0054E4  0E02               	movlw	2
 18598  0054E6  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18599                           
 18600                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18601  0054EA  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18602  0054EE  0E03               	movlw	3
 18603  0054F0  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18604                           
 18605                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18606  0054F4  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18607  0054F8  0E04               	movlw	4
 18608  0054FA  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18609                           
 18610                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18611  0054FE  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18612  005502  0E05               	movlw	5
 18613  005504  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18614                           
 18615                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18616  005508  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18617  00550C  0E06               	movlw	6
 18618  00550E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18619                           
 18620                           ;rtcm.c: 191: Rtcc_LockRtc();
 18621  005512  EC24  F032         	call	_Rtcc_LockRtc	;wreg free
 18622  005516  0012               	return		;funcret
 18623  005518                     __end_of_Rtcm_SetRtccDate:
 18624                           	opt stack 0
 18625                           tosu	equ	0xFFF
 18626                           tosh	equ	0xFFE
 18627                           tosl	equ	0xFFD
 18628                           pclath	equ	0xFFA
 18629                           tblptru	equ	0xFF8
 18630                           tblptrh	equ	0xFF7
 18631                           tblptrl	equ	0xFF6
 18632                           tablat	equ	0xFF5
 18633                           prodh	equ	0xFF4
 18634                           prodl	equ	0xFF3
 18635                           intcon	equ	0xFF2
 18636                           intcon2	equ	0xFF1
 18637                           intcon3	equ	0xFF0
 18638                           indf0	equ	0xFEF
 18639                           postinc0	equ	0xFEE
 18640                           plusw0	equ	0xFEB
 18641                           fsr0h	equ	0xFEA
 18642                           fsr0l	equ	0xFE9
 18643                           wreg	equ	0xFE8
 18644                           indf1	equ	0xFE7
 18645                           postinc1	equ	0xFE6
 18646                           postdec1	equ	0xFE5
 18647                           fsr1h	equ	0xFE2
 18648                           fsr1l	equ	0xFE1
 18649                           indf2	equ	0xFDF
 18650                           postinc2	equ	0xFDE
 18651                           postdec2	equ	0xFDD
 18652                           plusw2	equ	0xFDB
 18653                           fsr2h	equ	0xFDA
 18654                           fsr2l	equ	0xFD9
 18655                           status	equ	0xFD8
 18656                           
 18657 ;; *************** function _Rtcc_UnlockRtc *****************
 18658 ;; Defined at:
 18659 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18660 ;; Parameters:    Size  Location     Type
 18661 ;;		None
 18662 ;; Auto vars:     Size  Location     Type
 18663 ;;		None
 18664 ;; Return value:  Size  Location     Type
 18665 ;;                  1    wreg      void 
 18666 ;; Registers used:
 18667 ;;		None
 18668 ;; Tracked objects:
 18669 ;;		On entry : 0/0
 18670 ;;		On exit  : 0/0
 18671 ;;		Unchanged: 0/0
 18672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18677 ;;Total ram usage:        0 bytes
 18678 ;; Hardware stack levels used:    1
 18679 ;; Hardware stack levels required when called:   11
 18680 ;; This function calls:
 18681 ;;		Nothing
 18682 ;; This function is called by:
 18683 ;;		_Rtcm_MainTask
 18684 ;;		_Rtcm_SetRtccDate
 18685 ;;		_Rtcm_SetRtccAlarm
 18686 ;; This function uses a non-reentrant model
 18687 ;;
 18688                           
 18689                           	psect	text79
 18690  006438                     __ptext79:
 18691                           	opt stack 0
 18692  006438                     _Rtcc_UnlockRtc:
 18693                           	opt stack 15
 18694                           
 18695                           ;incstack = 0
 18696  006438  010F               	movlb	15	;# 
 18697  00643A  0E55               	movlw	85	;# 
 18698  00643C  6EA7               	movwf	4007,c	;# 
 18699  00643E  0EAA               	movlw	170	;# 
 18700  006440  6EA7               	movwf	4007,c	;# 
 18701                           
 18702                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18703  006442  010F               	movlb	15	; () banked
 18704  006444  8B3F               	bsf	63,5,b	;volatile
 18705                           
 18706                           ; BSR set to: 15
 18707  006446  0012               	return		;funcret
 18708  006448                     __end_of_Rtcc_UnlockRtc:
 18709                           	opt stack 0
 18710                           tosu	equ	0xFFF
 18711                           tosh	equ	0xFFE
 18712                           tosl	equ	0xFFD
 18713                           pclath	equ	0xFFA
 18714                           tblptru	equ	0xFF8
 18715                           tblptrh	equ	0xFF7
 18716                           tblptrl	equ	0xFF6
 18717                           tablat	equ	0xFF5
 18718                           prodh	equ	0xFF4
 18719                           prodl	equ	0xFF3
 18720                           intcon	equ	0xFF2
 18721                           intcon2	equ	0xFF1
 18722                           intcon3	equ	0xFF0
 18723                           indf0	equ	0xFEF
 18724                           postinc0	equ	0xFEE
 18725                           plusw0	equ	0xFEB
 18726                           fsr0h	equ	0xFEA
 18727                           fsr0l	equ	0xFE9
 18728                           wreg	equ	0xFE8
 18729                           indf1	equ	0xFE7
 18730                           postinc1	equ	0xFE6
 18731                           postdec1	equ	0xFE5
 18732                           fsr1h	equ	0xFE2
 18733                           fsr1l	equ	0xFE1
 18734                           indf2	equ	0xFDF
 18735                           postinc2	equ	0xFDE
 18736                           postdec2	equ	0xFDD
 18737                           plusw2	equ	0xFDB
 18738                           fsr2h	equ	0xFDA
 18739                           fsr2l	equ	0xFD9
 18740                           status	equ	0xFD8
 18741                           
 18742 ;; *************** function _Rtcc_SetRtccValue *****************
 18743 ;; Defined at:
 18744 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18745 ;; Parameters:    Size  Location     Type
 18746 ;;  RtccPtrVal      1    wreg     enum E7757
 18747 ;;  Value           1   37[BANK0 ] unsigned char 
 18748 ;; Auto vars:     Size  Location     Type
 18749 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18750 ;; Return value:  Size  Location     Type
 18751 ;;                  1    wreg      void 
 18752 ;; Registers used:
 18753 ;;		wreg, status,2, status,0, cstack
 18754 ;; Tracked objects:
 18755 ;;		On entry : 0/0
 18756 ;;		On exit  : 0/0
 18757 ;;		Unchanged: 0/0
 18758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18759 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18760 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18761 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18762 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18763 ;;Total ram usage:        4 bytes
 18764 ;; Hardware stack levels used:    1
 18765 ;; Hardware stack levels required when called:   12
 18766 ;; This function calls:
 18767 ;;		___awdiv
 18768 ;;		___awmod
 18769 ;; This function is called by:
 18770 ;;		_Rtcm_SetRtccDate
 18771 ;; This function uses a non-reentrant model
 18772 ;;
 18773                           
 18774                           	psect	text80
 18775  0015EE                     __ptext80:
 18776                           	opt stack 0
 18777  0015EE                     _Rtcc_SetRtccValue:
 18778                           	opt stack 14
 18779                           
 18780                           ; BSR set to: 15
 18781                           ;incstack = 0
 18782                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18783  0015EE  0100               	movlb	0	; () banked
 18784  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18785                           
 18786                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18787  0015F2  D0FC               	goto	l441
 18788  0015F4                     l442:
 18789                           
 18790                           ; BSR set to: 0
 18791                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18792  0015F4  010F               	movlb	15	; () banked
 18793  0015F6  833F               	bsf	63,1,b	;volatile
 18794                           
 18795                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18796  0015F8  813F               	bsf	63,0,b	;volatile
 18797                           
 18798                           ; BSR set to: 15
 18799                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18800  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18801  0015FE  0100               	movlb	0	; () banked
 18802  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18803  001602  0E00               	movlw	0
 18804  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18805  001606  0E0A               	movlw	10
 18806  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 18807  00160A  EC53  F027         	call	___awmod	;wreg free
 18808  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18809  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18810  001616  0E0F               	movlw	15
 18811  001618  0100               	movlb	0	; () banked
 18812  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18813  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18814  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18815  001622  0E00               	movlw	0
 18816  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18817  001626  0E0A               	movlw	10
 18818  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18819  00162A  EC53  F026         	call	___awdiv	;wreg free
 18820  00162E  0100               	movlb	0	; () banked
 18821  001630  397D               	swapf	?___awdiv& (0+255),w,b
 18822  001632  0BF0               	andlw	240
 18823  001634  0BF0               	andlw	240
 18824  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18825  001638  6E98               	movwf	3992,c	;volatile
 18826                           
 18827                           ;rtcc_drv.c: 393: break;
 18828  00163A  0012               	return	
 18829  00163C                     l444:
 18830                           
 18831                           ; BSR set to: 0
 18832                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18833  00163C  010F               	movlb	15	; () banked
 18834  00163E  833F               	bsf	63,1,b	;volatile
 18835                           
 18836                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18837  001640  913F               	bcf	63,0,b	;volatile
 18838                           
 18839                           ; BSR set to: 15
 18840                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18841  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18842  001646  0100               	movlb	0	; () banked
 18843  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18844  00164A  0E00               	movlw	0
 18845  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18846  00164E  0E0A               	movlw	10
 18847  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 18848  001652  EC53  F027         	call	___awmod	;wreg free
 18849  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18850  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18851  00165E  0E0F               	movlw	15
 18852  001660  0100               	movlb	0	; () banked
 18853  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18854  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18855  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18856  00166A  0E00               	movlw	0
 18857  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18858  00166E  0E0A               	movlw	10
 18859  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18860  001672  EC53  F026         	call	___awdiv	;wreg free
 18861  001676  0100               	movlb	0	; () banked
 18862  001678  397D               	swapf	?___awdiv& (0+255),w,b
 18863  00167A  0BF0               	andlw	240
 18864  00167C  0BF0               	andlw	240
 18865  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18866  001680  6E99               	movwf	3993,c	;volatile
 18867                           
 18868                           ;rtcc_drv.c: 401: break;
 18869  001682  0012               	return	
 18870  001684                     l445:
 18871                           
 18872                           ; BSR set to: 0
 18873                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 18874  001684  010F               	movlb	15	; () banked
 18875  001686  833F               	bsf	63,1,b	;volatile
 18876                           
 18877                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 18878  001688  913F               	bcf	63,0,b	;volatile
 18879                           
 18880                           ; BSR set to: 15
 18881                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18882  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18883  00168E  0100               	movlb	0	; () banked
 18884  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18885  001692  0E00               	movlw	0
 18886  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18887  001696  0E0A               	movlw	10
 18888  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 18889  00169A  EC53  F027         	call	___awmod	;wreg free
 18890  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18891  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18892  0016A6  0E0F               	movlw	15
 18893  0016A8  0100               	movlb	0	; () banked
 18894  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18895  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18896  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18897  0016B2  0E00               	movlw	0
 18898  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18899  0016B6  0E0A               	movlw	10
 18900  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18901  0016BA  EC53  F026         	call	___awdiv	;wreg free
 18902  0016BE  0100               	movlb	0	; () banked
 18903  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 18904  0016C2  0BF0               	andlw	240
 18905  0016C4  0BF0               	andlw	240
 18906  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18907  0016C8  6E98               	movwf	3992,c	;volatile
 18908                           
 18909                           ;rtcc_drv.c: 409: break;
 18910  0016CA  0012               	return	
 18911  0016CC                     l446:
 18912                           
 18913                           ; BSR set to: 0
 18914                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 18915  0016CC  010F               	movlb	15	; () banked
 18916  0016CE  933F               	bcf	63,1,b	;volatile
 18917                           
 18918                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 18919  0016D0  813F               	bsf	63,0,b	;volatile
 18920                           
 18921                           ; BSR set to: 15
 18922                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18923  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18924  0016D6  0100               	movlb	0	; () banked
 18925  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18926  0016DA  0E00               	movlw	0
 18927  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18928  0016DE  0E0A               	movlw	10
 18929  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 18930  0016E2  EC53  F027         	call	___awmod	;wreg free
 18931  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18932  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18933  0016EE  0E0F               	movlw	15
 18934  0016F0  0100               	movlb	0	; () banked
 18935  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18936  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18937  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18938  0016FA  0E00               	movlw	0
 18939  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18940  0016FE  0E0A               	movlw	10
 18941  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18942  001702  EC53  F026         	call	___awdiv	;wreg free
 18943  001706  0100               	movlb	0	; () banked
 18944  001708  397D               	swapf	?___awdiv& (0+255),w,b
 18945  00170A  0BF0               	andlw	240
 18946  00170C  0BF0               	andlw	240
 18947  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18948  001710  6E99               	movwf	3993,c	;volatile
 18949                           
 18950                           ;rtcc_drv.c: 417: break;
 18951  001712  0012               	return	
 18952  001714                     l447:
 18953                           
 18954                           ; BSR set to: 0
 18955                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 18956  001714  010F               	movlb	15	; () banked
 18957  001716  933F               	bcf	63,1,b	;volatile
 18958                           
 18959                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 18960  001718  813F               	bsf	63,0,b	;volatile
 18961                           
 18962                           ; BSR set to: 15
 18963                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18964  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18965  00171E  0100               	movlb	0	; () banked
 18966  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18967  001722  0E00               	movlw	0
 18968  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18969  001726  0E0A               	movlw	10
 18970  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 18971  00172A  EC53  F027         	call	___awmod	;wreg free
 18972  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18973  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18974  001736  0E0F               	movlw	15
 18975  001738  0100               	movlb	0	; () banked
 18976  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18977  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18978  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18979  001742  0E00               	movlw	0
 18980  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18981  001746  0E0A               	movlw	10
 18982  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18983  00174A  EC53  F026         	call	___awdiv	;wreg free
 18984  00174E  0100               	movlb	0	; () banked
 18985  001750  397D               	swapf	?___awdiv& (0+255),w,b
 18986  001752  0BF0               	andlw	240
 18987  001754  0BF0               	andlw	240
 18988  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18989  001758  6E98               	movwf	3992,c	;volatile
 18990                           
 18991                           ;rtcc_drv.c: 425: break;
 18992  00175A  0012               	return	
 18993  00175C                     l448:
 18994                           
 18995                           ; BSR set to: 0
 18996                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 18997  00175C  010F               	movlb	15	; () banked
 18998  00175E  933F               	bcf	63,1,b	;volatile
 18999                           
 19000                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19001  001760  913F               	bcf	63,0,b	;volatile
 19002                           
 19003                           ; BSR set to: 15
 19004                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19005  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19006  001766  0100               	movlb	0	; () banked
 19007  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19008  00176A  0E00               	movlw	0
 19009  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19010  00176E  0E0A               	movlw	10
 19011  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19012  001772  EC53  F027         	call	___awmod	;wreg free
 19013  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19014  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19015  00177E  0E0F               	movlw	15
 19016  001780  0100               	movlb	0	; () banked
 19017  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19018  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19019  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19020  00178A  0E00               	movlw	0
 19021  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19022  00178E  0E0A               	movlw	10
 19023  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19024  001792  EC53  F026         	call	___awdiv	;wreg free
 19025  001796  0100               	movlb	0	; () banked
 19026  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19027  00179A  0BF0               	andlw	240
 19028  00179C  0BF0               	andlw	240
 19029  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19030  0017A0  6E99               	movwf	3993,c	;volatile
 19031                           
 19032                           ;rtcc_drv.c: 433: break;
 19033  0017A2  0012               	return	
 19034  0017A4                     l449:
 19035                           
 19036                           ; BSR set to: 0
 19037                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19038  0017A4  010F               	movlb	15	; () banked
 19039  0017A6  933F               	bcf	63,1,b	;volatile
 19040                           
 19041                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19042  0017A8  913F               	bcf	63,0,b	;volatile
 19043                           
 19044                           ; BSR set to: 15
 19045                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19046  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19047  0017AE  0100               	movlb	0	; () banked
 19048  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19049  0017B2  0E00               	movlw	0
 19050  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19051  0017B6  0E0A               	movlw	10
 19052  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19053  0017BA  EC53  F027         	call	___awmod	;wreg free
 19054  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19055  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19056  0017C6  0E0F               	movlw	15
 19057  0017C8  0100               	movlb	0	; () banked
 19058  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19059  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19060  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19061  0017D2  0E00               	movlw	0
 19062  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19063  0017D6  0E0A               	movlw	10
 19064  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19065  0017DA  EC53  F026         	call	___awdiv	;wreg free
 19066  0017DE  0100               	movlb	0	; () banked
 19067  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19068  0017E2  0BF0               	andlw	240
 19069  0017E4  0BF0               	andlw	240
 19070  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19071  0017E8  6E98               	movwf	3992,c	;volatile
 19072                           
 19073                           ; BSR set to: 0
 19074                           ;rtcc_drv.c: 445: }
 19075                           
 19076                           ; BSR set to: 0
 19077                           ;rtcc_drv.c: 444: break;
 19078                           
 19079                           ;rtcc_drv.c: 443: default:
 19080                           
 19081                           ;rtcc_drv.c: 441: break;
 19082  0017EA  0012               	return	
 19083  0017EC                     l441:
 19084                           
 19085                           ; BSR set to: 0
 19086  0017EC  0100               	movlb	0	; () banked
 19087  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19088                           
 19089                           ; Switch size 1, requested type "space"
 19090                           ; Number of cases is 7, Range of values is 0 to 6
 19091                           ; switch strategies available:
 19092                           ; Name         Instructions Cycles
 19093                           ; simple_byte           22    12 (average)
 19094                           ;	Chosen strategy is simple_byte
 19095  0017F0  0A00               	xorlw	0	; case 0
 19096  0017F2  B4D8               	btfsc	status,2,c
 19097  0017F4  D6FF               	goto	l442
 19098  0017F6  0A01               	xorlw	1	; case 1
 19099  0017F8  B4D8               	btfsc	status,2,c
 19100  0017FA  D720               	goto	l444
 19101  0017FC  0A03               	xorlw	3	; case 2
 19102  0017FE  B4D8               	btfsc	status,2,c
 19103  001800  D741               	goto	l445
 19104  001802  0A01               	xorlw	1	; case 3
 19105  001804  B4D8               	btfsc	status,2,c
 19106  001806  D762               	goto	l446
 19107  001808  0A07               	xorlw	7	; case 4
 19108  00180A  B4D8               	btfsc	status,2,c
 19109  00180C  D783               	goto	l447
 19110  00180E  0A01               	xorlw	1	; case 5
 19111  001810  B4D8               	btfsc	status,2,c
 19112  001812  D7A4               	goto	l448
 19113  001814  0A03               	xorlw	3	; case 6
 19114  001816  A4D8               	btfss	status,2,c
 19115  001818  0012               	return	
 19116  00181A  D7C4               	goto	l449
 19117  00181C                     __end_of_Rtcc_SetRtccValue:
 19118                           	opt stack 0
 19119                           tosu	equ	0xFFF
 19120                           tosh	equ	0xFFE
 19121                           tosl	equ	0xFFD
 19122                           pclath	equ	0xFFA
 19123                           tblptru	equ	0xFF8
 19124                           tblptrh	equ	0xFF7
 19125                           tblptrl	equ	0xFF6
 19126                           tablat	equ	0xFF5
 19127                           prodh	equ	0xFF4
 19128                           prodl	equ	0xFF3
 19129                           intcon	equ	0xFF2
 19130                           intcon2	equ	0xFF1
 19131                           intcon3	equ	0xFF0
 19132                           indf0	equ	0xFEF
 19133                           postinc0	equ	0xFEE
 19134                           plusw0	equ	0xFEB
 19135                           fsr0h	equ	0xFEA
 19136                           fsr0l	equ	0xFE9
 19137                           wreg	equ	0xFE8
 19138                           indf1	equ	0xFE7
 19139                           postinc1	equ	0xFE6
 19140                           postdec1	equ	0xFE5
 19141                           fsr1h	equ	0xFE2
 19142                           fsr1l	equ	0xFE1
 19143                           indf2	equ	0xFDF
 19144                           postinc2	equ	0xFDE
 19145                           postdec2	equ	0xFDD
 19146                           plusw2	equ	0xFDB
 19147                           fsr2h	equ	0xFDA
 19148                           fsr2l	equ	0xFD9
 19149                           status	equ	0xFD8
 19150                           
 19151 ;; *************** function ___awmod *****************
 19152 ;; Defined at:
 19153 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19154 ;; Parameters:    Size  Location     Type
 19155 ;;  dividend        2   29[BANK0 ] int 
 19156 ;;  divisor         2   31[BANK0 ] int 
 19157 ;; Auto vars:     Size  Location     Type
 19158 ;;  sign            1   34[BANK0 ] unsigned char 
 19159 ;;  counter         1   33[BANK0 ] unsigned char 
 19160 ;; Return value:  Size  Location     Type
 19161 ;;                  2   29[BANK0 ] int 
 19162 ;; Registers used:
 19163 ;;		wreg, status,2, status,0
 19164 ;; Tracked objects:
 19165 ;;		On entry : 0/0
 19166 ;;		On exit  : 0/0
 19167 ;;		Unchanged: 0/0
 19168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19169 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19170 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19172 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19173 ;;Total ram usage:        6 bytes
 19174 ;; Hardware stack levels used:    1
 19175 ;; Hardware stack levels required when called:   11
 19176 ;; This function calls:
 19177 ;;		Nothing
 19178 ;; This function is called by:
 19179 ;;		_Rtcc_SetRtccValue
 19180 ;;		_Rtcc_SetRtccAlarm
 19181 ;; This function uses a non-reentrant model
 19182 ;;
 19183                           
 19184                           	psect	text81
 19185  004EA6                     __ptext81:
 19186                           	opt stack 0
 19187  004EA6                     ___awmod:
 19188                           	opt stack 14
 19189                           
 19190                           ; BSR set to: 0
 19191                           ;incstack = 0
 19192  004EA6  0E00               	movlw	0
 19193  004EA8  0100               	movlb	0	; () banked
 19194  004EAA  6F82               	movwf	___awmod@sign& (0+255),b
 19195                           
 19196                           ; BSR set to: 0
 19197  004EAC  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19198  004EAE  D006               	goto	l2939
 19199                           
 19200                           ; BSR set to: 0
 19201  004EB0  6D7D               	negf	___awmod@dividend& (0+255),b
 19202  004EB2  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19203  004EB4  B0D8               	btfsc	status,0,c
 19204  004EB6  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19205                           
 19206                           ; BSR set to: 0
 19207  004EB8  0E01               	movlw	1
 19208  004EBA  6F82               	movwf	___awmod@sign& (0+255),b
 19209  004EBC                     l2939:
 19210                           
 19211                           ; BSR set to: 0
 19212                           
 19213                           ; BSR set to: 0
 19214  004EBC  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19215  004EBE  D004               	goto	l2940
 19216                           
 19217                           ; BSR set to: 0
 19218  004EC0  6D7F               	negf	___awmod@divisor& (0+255),b
 19219  004EC2  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19220  004EC4  B0D8               	btfsc	status,0,c
 19221  004EC6  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19222  004EC8                     l2940:
 19223                           
 19224                           ; BSR set to: 0
 19225                           
 19226                           ; BSR set to: 0
 19227  004EC8  517F               	movf	___awmod@divisor& (0+255),w,b
 19228  004ECA  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19229  004ECC  B4D8               	btfsc	status,2,c
 19230  004ECE  D018               	goto	l2947
 19231                           
 19232                           ; BSR set to: 0
 19233  004ED0  0E01               	movlw	1
 19234  004ED2  6F81               	movwf	___awmod@counter& (0+255),b
 19235  004ED4  D004               	goto	l2942
 19236  004ED6                     
 19237                           ; BSR set to: 0
 19238                           
 19239                           ; BSR set to: 0
 19240  004ED6  90D8               	bcf	status,0,c
 19241  004ED8  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19242  004EDA  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19243  004EDC  2B81               	incf	___awmod@counter& (0+255),f,b
 19244  004EDE                     l2942:
 19245                           
 19246                           ; BSR set to: 0
 19247                           
 19248                           ; BSR set to: 0
 19249  004EDE  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19250  004EE0  D7FA               	goto	l2943
 19251  004EE2                     u12410:
 19252                           
 19253                           ; BSR set to: 0
 19254                           
 19255                           ; BSR set to: 0
 19256                           
 19257                           ; BSR set to: 0
 19258  004EE2  517F               	movf	___awmod@divisor& (0+255),w,b
 19259  004EE4  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19260  004EE6  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19261  004EE8  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19262  004EEA  A0D8               	btfss	status,0,c
 19263  004EEC  D004               	goto	l2946
 19264                           
 19265                           ; BSR set to: 0
 19266  004EEE  517F               	movf	___awmod@divisor& (0+255),w,b
 19267  004EF0  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19268  004EF2  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19269  004EF4  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19270  004EF6                     l2946:
 19271                           
 19272                           ; BSR set to: 0
 19273                           
 19274                           ; BSR set to: 0
 19275  004EF6  90D8               	bcf	status,0,c
 19276  004EF8  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19277  004EFA  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19278                           
 19279                           ; BSR set to: 0
 19280  004EFC  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19281  004EFE  D7F1               	goto	u12410
 19282  004F00                     l2947:
 19283                           
 19284                           ; BSR set to: 0
 19285                           
 19286                           ; BSR set to: 0
 19287                           
 19288                           ; BSR set to: 0
 19289  004F00  5182               	movf	___awmod@sign& (0+255),w,b
 19290  004F02  B4D8               	btfsc	status,2,c
 19291  004F04  D004               	goto	l2948
 19292                           
 19293                           ; BSR set to: 0
 19294  004F06  6D7D               	negf	___awmod@dividend& (0+255),b
 19295  004F08  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19296  004F0A  B0D8               	btfsc	status,0,c
 19297  004F0C  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19298  004F0E                     l2948:
 19299                           
 19300                           ; BSR set to: 0
 19301                           
 19302                           ; BSR set to: 0
 19303  004F0E  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19304  004F12  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19305  004F16  0012               	return	
 19306  004F18                     __end_of___awmod:
 19307                           	opt stack 0
 19308                           tosu	equ	0xFFF
 19309                           tosh	equ	0xFFE
 19310                           tosl	equ	0xFFD
 19311                           pclath	equ	0xFFA
 19312                           tblptru	equ	0xFF8
 19313                           tblptrh	equ	0xFF7
 19314                           tblptrl	equ	0xFF6
 19315                           tablat	equ	0xFF5
 19316                           prodh	equ	0xFF4
 19317                           prodl	equ	0xFF3
 19318                           intcon	equ	0xFF2
 19319                           intcon2	equ	0xFF1
 19320                           intcon3	equ	0xFF0
 19321                           indf0	equ	0xFEF
 19322                           postinc0	equ	0xFEE
 19323                           plusw0	equ	0xFEB
 19324                           fsr0h	equ	0xFEA
 19325                           fsr0l	equ	0xFE9
 19326                           wreg	equ	0xFE8
 19327                           indf1	equ	0xFE7
 19328                           postinc1	equ	0xFE6
 19329                           postdec1	equ	0xFE5
 19330                           fsr1h	equ	0xFE2
 19331                           fsr1l	equ	0xFE1
 19332                           indf2	equ	0xFDF
 19333                           postinc2	equ	0xFDE
 19334                           postdec2	equ	0xFDD
 19335                           plusw2	equ	0xFDB
 19336                           fsr2h	equ	0xFDA
 19337                           fsr2l	equ	0xFD9
 19338                           status	equ	0xFD8
 19339                           
 19340 ;; *************** function ___awdiv *****************
 19341 ;; Defined at:
 19342 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19343 ;; Parameters:    Size  Location     Type
 19344 ;;  dividend        2   29[BANK0 ] int 
 19345 ;;  divisor         2   31[BANK0 ] int 
 19346 ;; Auto vars:     Size  Location     Type
 19347 ;;  quotient        2   35[BANK0 ] int 
 19348 ;;  sign            1   34[BANK0 ] unsigned char 
 19349 ;;  counter         1   33[BANK0 ] unsigned char 
 19350 ;; Return value:  Size  Location     Type
 19351 ;;                  2   29[BANK0 ] int 
 19352 ;; Registers used:
 19353 ;;		wreg, status,2, status,0
 19354 ;; Tracked objects:
 19355 ;;		On entry : 0/0
 19356 ;;		On exit  : 0/0
 19357 ;;		Unchanged: 0/0
 19358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19359 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19360 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19362 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19363 ;;Total ram usage:        8 bytes
 19364 ;; Hardware stack levels used:    1
 19365 ;; Hardware stack levels required when called:   11
 19366 ;; This function calls:
 19367 ;;		Nothing
 19368 ;; This function is called by:
 19369 ;;		_Rtcc_SetRtccValue
 19370 ;;		_Rtcc_SetRtccAlarm
 19371 ;; This function uses a non-reentrant model
 19372 ;;
 19373                           
 19374                           	psect	text82
 19375  004CA6                     __ptext82:
 19376                           	opt stack 0
 19377  004CA6                     ___awdiv:
 19378                           	opt stack 14
 19379                           
 19380                           ; BSR set to: 0
 19381                           ;incstack = 0
 19382  004CA6  0E00               	movlw	0
 19383  004CA8  0100               	movlb	0	; () banked
 19384  004CAA  6F82               	movwf	___awdiv@sign& (0+255),b
 19385                           
 19386                           ; BSR set to: 0
 19387  004CAC  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19388  004CAE  D006               	goto	l2926
 19389                           
 19390                           ; BSR set to: 0
 19391  004CB0  6D7F               	negf	___awdiv@divisor& (0+255),b
 19392  004CB2  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19393  004CB4  B0D8               	btfsc	status,0,c
 19394  004CB6  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19395                           
 19396                           ; BSR set to: 0
 19397  004CB8  0E01               	movlw	1
 19398  004CBA  6F82               	movwf	___awdiv@sign& (0+255),b
 19399  004CBC                     l2926:
 19400                           
 19401                           ; BSR set to: 0
 19402                           
 19403                           ; BSR set to: 0
 19404  004CBC  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19405  004CBE  D006               	goto	l2927
 19406                           
 19407                           ; BSR set to: 0
 19408  004CC0  6D7D               	negf	___awdiv@dividend& (0+255),b
 19409  004CC2  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19410  004CC4  B0D8               	btfsc	status,0,c
 19411  004CC6  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19412                           
 19413                           ; BSR set to: 0
 19414  004CC8  0E01               	movlw	1
 19415  004CCA  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19416  004CCC                     l2927:
 19417                           
 19418                           ; BSR set to: 0
 19419                           
 19420                           ; BSR set to: 0
 19421  004CCC  0E00               	movlw	0
 19422  004CCE  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19423  004CD0  0E00               	movlw	0
 19424  004CD2  6F83               	movwf	___awdiv@quotient& (0+255),b
 19425                           
 19426                           ; BSR set to: 0
 19427  004CD4  517F               	movf	___awdiv@divisor& (0+255),w,b
 19428  004CD6  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19429  004CD8  B4D8               	btfsc	status,2,c
 19430  004CDA  D01C               	goto	l2934
 19431                           
 19432                           ; BSR set to: 0
 19433  004CDC  0E01               	movlw	1
 19434  004CDE  6F81               	movwf	___awdiv@counter& (0+255),b
 19435  004CE0  D004               	goto	l2929
 19436  004CE2                     
 19437                           ; BSR set to: 0
 19438                           
 19439                           ; BSR set to: 0
 19440  004CE2  90D8               	bcf	status,0,c
 19441  004CE4  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19442  004CE6  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19443  004CE8  2B81               	incf	___awdiv@counter& (0+255),f,b
 19444  004CEA                     l2929:
 19445                           
 19446                           ; BSR set to: 0
 19447                           
 19448                           ; BSR set to: 0
 19449  004CEA  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19450  004CEC  D7FA               	goto	l2930
 19451  004CEE                     u12350:
 19452                           
 19453                           ; BSR set to: 0
 19454                           
 19455                           ; BSR set to: 0
 19456                           
 19457                           ; BSR set to: 0
 19458  004CEE  90D8               	bcf	status,0,c
 19459  004CF0  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19460  004CF2  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19461                           
 19462                           ; BSR set to: 0
 19463  004CF4  517F               	movf	___awdiv@divisor& (0+255),w,b
 19464  004CF6  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19465  004CF8  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19466  004CFA  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19467  004CFC  A0D8               	btfss	status,0,c
 19468  004CFE  D005               	goto	l2933
 19469                           
 19470                           ; BSR set to: 0
 19471  004D00  517F               	movf	___awdiv@divisor& (0+255),w,b
 19472  004D02  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19473  004D04  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19474  004D06  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19475                           
 19476                           ; BSR set to: 0
 19477  004D08  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19478  004D0A                     l2933:
 19479                           
 19480                           ; BSR set to: 0
 19481                           
 19482                           ; BSR set to: 0
 19483  004D0A  90D8               	bcf	status,0,c
 19484  004D0C  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19485  004D0E  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19486                           
 19487                           ; BSR set to: 0
 19488  004D10  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19489  004D12  D7ED               	goto	u12350
 19490  004D14                     l2934:
 19491                           
 19492                           ; BSR set to: 0
 19493                           
 19494                           ; BSR set to: 0
 19495                           
 19496                           ; BSR set to: 0
 19497  004D14  5182               	movf	___awdiv@sign& (0+255),w,b
 19498  004D16  B4D8               	btfsc	status,2,c
 19499  004D18  D004               	goto	l2935
 19500                           
 19501                           ; BSR set to: 0
 19502  004D1A  6D83               	negf	___awdiv@quotient& (0+255),b
 19503  004D1C  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19504  004D1E  B0D8               	btfsc	status,0,c
 19505  004D20  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19506  004D22                     l2935:
 19507                           
 19508                           ; BSR set to: 0
 19509                           
 19510                           ; BSR set to: 0
 19511  004D22  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19512  004D26  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19513  004D2A  0012               	return	
 19514  004D2C                     __end_of___awdiv:
 19515                           	opt stack 0
 19516                           tosu	equ	0xFFF
 19517                           tosh	equ	0xFFE
 19518                           tosl	equ	0xFFD
 19519                           pclath	equ	0xFFA
 19520                           tblptru	equ	0xFF8
 19521                           tblptrh	equ	0xFF7
 19522                           tblptrl	equ	0xFF6
 19523                           tablat	equ	0xFF5
 19524                           prodh	equ	0xFF4
 19525                           prodl	equ	0xFF3
 19526                           intcon	equ	0xFF2
 19527                           intcon2	equ	0xFF1
 19528                           intcon3	equ	0xFF0
 19529                           indf0	equ	0xFEF
 19530                           postinc0	equ	0xFEE
 19531                           plusw0	equ	0xFEB
 19532                           fsr0h	equ	0xFEA
 19533                           fsr0l	equ	0xFE9
 19534                           wreg	equ	0xFE8
 19535                           indf1	equ	0xFE7
 19536                           postinc1	equ	0xFE6
 19537                           postdec1	equ	0xFE5
 19538                           fsr1h	equ	0xFE2
 19539                           fsr1l	equ	0xFE1
 19540                           indf2	equ	0xFDF
 19541                           postinc2	equ	0xFDE
 19542                           postdec2	equ	0xFDD
 19543                           plusw2	equ	0xFDB
 19544                           fsr2h	equ	0xFDA
 19545                           fsr2l	equ	0xFD9
 19546                           status	equ	0xFD8
 19547                           
 19548 ;; *************** function _Rtcc_LockRtc *****************
 19549 ;; Defined at:
 19550 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19551 ;; Parameters:    Size  Location     Type
 19552 ;;		None
 19553 ;; Auto vars:     Size  Location     Type
 19554 ;;		None
 19555 ;; Return value:  Size  Location     Type
 19556 ;;                  1    wreg      void 
 19557 ;; Registers used:
 19558 ;;		None
 19559 ;; Tracked objects:
 19560 ;;		On entry : 0/0
 19561 ;;		On exit  : 0/0
 19562 ;;		Unchanged: 0/0
 19563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19568 ;;Total ram usage:        0 bytes
 19569 ;; Hardware stack levels used:    1
 19570 ;; Hardware stack levels required when called:   11
 19571 ;; This function calls:
 19572 ;;		Nothing
 19573 ;; This function is called by:
 19574 ;;		_Rtcm_MainTask
 19575 ;;		_Rtcm_SetRtccDate
 19576 ;;		_Rtcm_SetRtccAlarm
 19577 ;; This function uses a non-reentrant model
 19578 ;;
 19579                           
 19580                           	psect	text83
 19581  006448                     __ptext83:
 19582                           	opt stack 0
 19583  006448                     _Rtcc_LockRtc:
 19584                           	opt stack 15
 19585                           
 19586                           ; BSR set to: 0
 19587                           ;incstack = 0
 19588  006448  010F               	movlb	15	;# 
 19589  00644A  0E55               	movlw	85	;# 
 19590  00644C  6EA7               	movwf	4007,c	;# 
 19591  00644E  0EAA               	movlw	170	;# 
 19592  006450  6EA7               	movwf	4007,c	;# 
 19593                           
 19594                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19595  006452  010F               	movlb	15	; () banked
 19596  006454  9B3F               	bcf	63,5,b	;volatile
 19597                           
 19598                           ; BSR set to: 15
 19599  006456  0012               	return		;funcret
 19600  006458                     __end_of_Rtcc_LockRtc:
 19601                           	opt stack 0
 19602                           tosu	equ	0xFFF
 19603                           tosh	equ	0xFFE
 19604                           tosl	equ	0xFFD
 19605                           pclath	equ	0xFFA
 19606                           tblptru	equ	0xFF8
 19607                           tblptrh	equ	0xFF7
 19608                           tblptrl	equ	0xFF6
 19609                           tablat	equ	0xFF5
 19610                           prodh	equ	0xFF4
 19611                           prodl	equ	0xFF3
 19612                           intcon	equ	0xFF2
 19613                           intcon2	equ	0xFF1
 19614                           intcon3	equ	0xFF0
 19615                           indf0	equ	0xFEF
 19616                           postinc0	equ	0xFEE
 19617                           plusw0	equ	0xFEB
 19618                           fsr0h	equ	0xFEA
 19619                           fsr0l	equ	0xFE9
 19620                           wreg	equ	0xFE8
 19621                           indf1	equ	0xFE7
 19622                           postinc1	equ	0xFE6
 19623                           postdec1	equ	0xFE5
 19624                           fsr1h	equ	0xFE2
 19625                           fsr1l	equ	0xFE1
 19626                           indf2	equ	0xFDF
 19627                           postinc2	equ	0xFDE
 19628                           postdec2	equ	0xFDD
 19629                           plusw2	equ	0xFDB
 19630                           fsr2h	equ	0xFDA
 19631                           fsr2l	equ	0xFD9
 19632                           status	equ	0xFD8
 19633                           
 19634 ;; *************** function _Rtcm_GetRtccDate *****************
 19635 ;; Defined at:
 19636 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19637 ;; Parameters:    Size  Location     Type
 19638 ;;		None
 19639 ;; Auto vars:     Size  Location     Type
 19640 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19641 ;; Return value:  Size  Location     Type
 19642 ;;                  8   33[BANK0 ] struct _RtccDateType
 19643 ;; Registers used:
 19644 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19645 ;; Tracked objects:
 19646 ;;		On entry : 0/0
 19647 ;;		On exit  : 0/0
 19648 ;;		Unchanged: 0/0
 19649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19650 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19651 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19652 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19653 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19654 ;;Total ram usage:       17 bytes
 19655 ;; Hardware stack levels used:    1
 19656 ;; Hardware stack levels required when called:   12
 19657 ;; This function calls:
 19658 ;;		_Rtcc_GetRtccValue
 19659 ;; This function is called by:
 19660 ;;		_Rtcm_MainTask
 19661 ;; This function uses a non-reentrant model
 19662 ;;
 19663                           
 19664                           	psect	text84
 19665  005130                     __ptext84:
 19666                           	opt stack 0
 19667  005130                     _Rtcm_GetRtccDate:
 19668                           	opt stack 15
 19669                           
 19670                           ;rtcm.c: 204: RtccDateType LocalDate;
 19671                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19672                           
 19673                           ; BSR set to: 15
 19674                           ;incstack = 0
 19675  005130  0E00               	movlw	0
 19676  005132  ECA7  F024         	call	_Rtcc_GetRtccValue
 19677  005136  0100               	movlb	0	; () banked
 19678  005138  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19679  00513A  0ED0               	movlw	208
 19680  00513C  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19681  00513E  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19682  005140  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19683  005142  0E07               	movlw	7
 19684  005144  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19685                           
 19686                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19687  005146  0E01               	movlw	1
 19688  005148  ECA7  F024         	call	_Rtcc_GetRtccValue
 19689  00514C  0100               	movlb	0	; () banked
 19690  00514E  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19691                           
 19692                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19693  005150  0E02               	movlw	2
 19694  005152  ECA7  F024         	call	_Rtcc_GetRtccValue
 19695  005156  0100               	movlb	0	; () banked
 19696  005158  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19697                           
 19698                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19699  00515A  0E03               	movlw	3
 19700  00515C  ECA7  F024         	call	_Rtcc_GetRtccValue
 19701  005160  0100               	movlb	0	; () banked
 19702  005162  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19703                           
 19704                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19705  005164  0E04               	movlw	4
 19706  005166  ECA7  F024         	call	_Rtcc_GetRtccValue
 19707  00516A  0100               	movlb	0	; () banked
 19708  00516C  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19709                           
 19710                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19711  00516E  0E05               	movlw	5
 19712  005170  ECA7  F024         	call	_Rtcc_GetRtccValue
 19713  005174  0100               	movlb	0	; () banked
 19714  005176  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19715                           
 19716                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19717  005178  0E06               	movlw	6
 19718  00517A  ECA7  F024         	call	_Rtcc_GetRtccValue
 19719  00517E  0100               	movlb	0	; () banked
 19720  005180  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19721                           
 19722                           ; BSR set to: 0
 19723                           ;rtcm.c: 216: return LocalDate;
 19724  005182  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19725  005186  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19726  00518A  0E07               	movlw	7
 19727  00518C                     u14641:
 19728  00518C  CFDB FFEB          	movff	plusw2,plusw0
 19729  005190  06E8               	decf	wreg,f,c
 19730  005192  E2FC               	bc	u14641
 19731  005194  0012               	return	
 19732  005196                     __end_of_Rtcm_GetRtccDate:
 19733                           	opt stack 0
 19734                           tosu	equ	0xFFF
 19735                           tosh	equ	0xFFE
 19736                           tosl	equ	0xFFD
 19737                           pclath	equ	0xFFA
 19738                           tblptru	equ	0xFF8
 19739                           tblptrh	equ	0xFF7
 19740                           tblptrl	equ	0xFF6
 19741                           tablat	equ	0xFF5
 19742                           prodh	equ	0xFF4
 19743                           prodl	equ	0xFF3
 19744                           intcon	equ	0xFF2
 19745                           intcon2	equ	0xFF1
 19746                           intcon3	equ	0xFF0
 19747                           indf0	equ	0xFEF
 19748                           postinc0	equ	0xFEE
 19749                           plusw0	equ	0xFEB
 19750                           fsr0h	equ	0xFEA
 19751                           fsr0l	equ	0xFE9
 19752                           wreg	equ	0xFE8
 19753                           indf1	equ	0xFE7
 19754                           postinc1	equ	0xFE6
 19755                           postdec1	equ	0xFE5
 19756                           fsr1h	equ	0xFE2
 19757                           fsr1l	equ	0xFE1
 19758                           indf2	equ	0xFDF
 19759                           postinc2	equ	0xFDE
 19760                           postdec2	equ	0xFDD
 19761                           plusw2	equ	0xFDB
 19762                           fsr2h	equ	0xFDA
 19763                           fsr2l	equ	0xFD9
 19764                           status	equ	0xFD8
 19765                           
 19766 ;; *************** function _Rtcc_GetRtccValue *****************
 19767 ;; Defined at:
 19768 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19769 ;; Parameters:    Size  Location     Type
 19770 ;;  RtccPtrVal      1    wreg     enum E7757
 19771 ;; Auto vars:     Size  Location     Type
 19772 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19773 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19774 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19775 ;; Return value:  Size  Location     Type
 19776 ;;                  1    wreg      unsigned char 
 19777 ;; Registers used:
 19778 ;;		wreg, status,2, status,0, prodl, prodh
 19779 ;; Tracked objects:
 19780 ;;		On entry : 0/0
 19781 ;;		On exit  : 0/0
 19782 ;;		Unchanged: 0/0
 19783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19785 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19786 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19787 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19788 ;;Total ram usage:        4 bytes
 19789 ;; Hardware stack levels used:    1
 19790 ;; Hardware stack levels required when called:   11
 19791 ;; This function calls:
 19792 ;;		Nothing
 19793 ;; This function is called by:
 19794 ;;		_Rtcm_GetRtccDate
 19795 ;; This function uses a non-reentrant model
 19796 ;;
 19797                           
 19798                           	psect	text85
 19799  00494E                     __ptext85:
 19800                           	opt stack 0
 19801  00494E                     _Rtcc_GetRtccValue:
 19802                           	opt stack 15
 19803                           
 19804                           ; BSR set to: 0
 19805                           ;incstack = 0
 19806                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19807  00494E  0100               	movlb	0	; () banked
 19808  004950  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19809                           
 19810                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19811                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19812                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19813  004952  D02D               	goto	l416
 19814  004954                     l417:
 19815                           
 19816                           ; BSR set to: 0
 19817                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19818  004954  010F               	movlb	15	; () banked
 19819  004956  833F               	bsf	63,1,b	;volatile
 19820  004958                     
 19821                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19822  004958  813F               	bsf	63,0,b	;volatile
 19823  00495A  D01C               	goto	L18
 19824  00495C                     l419:
 19825                           
 19826                           ; BSR set to: 0
 19827                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19828  00495C  010F               	movlb	15	; () banked
 19829  00495E  833F               	bsf	63,1,b	;volatile
 19830  004960  D01E               	goto	L19
 19831  004962                     l420:
 19832                           
 19833                           ; BSR set to: 0
 19834                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19835  004962  010F               	movlb	15	; () banked
 19836  004964  833F               	bsf	63,1,b	;volatile
 19837  004966  D021               	goto	L22
 19838  004968                     l13580:
 19839                           
 19840                           ; BSR set to: 15
 19841                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 19842  004968  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 19843  00496C  0E0F               	movlw	15
 19844  00496E  0100               	movlb	0	; () banked
 19845  004970  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 19846  004972  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 19847  004974  0B0F               	andlw	15
 19848  004976  0B0F               	andlw	15
 19849  004978  0D0A               	mullw	10
 19850  00497A  50F3               	movf	prodl,w,c
 19851  00497C  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 19852  00497E  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 19853                           
 19854                           ;rtcc_drv.c: 241: break;
 19855  004980  D02D               	goto	l418
 19856  004982                     l421:
 19857                           
 19858                           ; BSR set to: 0
 19859                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 19860  004982  010F               	movlb	15	; () banked
 19861  004984  933F               	bcf	63,1,b	;volatile
 19862                           
 19863                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 19864  004986  813F               	bsf	63,0,b	;volatile
 19865                           
 19866                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 19867  004988  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 19868                           
 19869                           ;rtcc_drv.c: 249: break;
 19870  00498C  D027               	goto	l418
 19871  00498E                     l422:
 19872                           
 19873                           ; BSR set to: 0
 19874                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 19875  00498E  010F               	movlb	15	; () banked
 19876  004990  933F               	bcf	63,1,b	;volatile
 19877  004992  D7E2               	goto	L20
 19878  004994                     L18:
 19879                           
 19880                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 19881  004994  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 19882  004998  D7E7               	goto	l13580
 19883  00499A                     l423:
 19884                           
 19885                           ; BSR set to: 0
 19886                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 19887  00499A  010F               	movlb	15	; () banked
 19888  00499C  933F               	bcf	63,1,b	;volatile
 19889  00499E                     L19:
 19890                           
 19891                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 19892  00499E  913F               	bcf	63,0,b	;volatile
 19893                           
 19894                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 19895  0049A0  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 19896  0049A4  D7E1               	goto	l13580
 19897  0049A6                     l424:
 19898                           
 19899                           ; BSR set to: 0
 19900                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 19901  0049A6  010F               	movlb	15	; () banked
 19902  0049A8  933F               	bcf	63,1,b	;volatile
 19903  0049AA                     L22:
 19904                           
 19905                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 19906  0049AA  913F               	bcf	63,0,b	;volatile
 19907  0049AC  D7F3               	goto	L18
 19908  0049AE                     l416:
 19909                           
 19910                           ; BSR set to: 0
 19911  0049AE  0100               	movlb	0	; () banked
 19912  0049B0  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 19913                           
 19914                           ; Switch size 1, requested type "space"
 19915                           ; Number of cases is 7, Range of values is 0 to 6
 19916                           ; switch strategies available:
 19917                           ; Name         Instructions Cycles
 19918                           ; simple_byte           22    12 (average)
 19919                           ;	Chosen strategy is simple_byte
 19920  0049B2  0A00               	xorlw	0	; case 0
 19921  0049B4  B4D8               	btfsc	status,2,c
 19922  0049B6  D7CE               	goto	l417
 19923  0049B8  0A01               	xorlw	1	; case 1
 19924  0049BA  B4D8               	btfsc	status,2,c
 19925  0049BC  D7CF               	goto	l419
 19926  0049BE  0A03               	xorlw	3	; case 2
 19927  0049C0  B4D8               	btfsc	status,2,c
 19928  0049C2  D7CF               	goto	l420
 19929  0049C4  0A01               	xorlw	1	; case 3
 19930  0049C6  B4D8               	btfsc	status,2,c
 19931  0049C8  D7DC               	goto	l421
 19932  0049CA  0A07               	xorlw	7	; case 4
 19933  0049CC  B4D8               	btfsc	status,2,c
 19934  0049CE  D7DF               	goto	l422
 19935  0049D0  0A01               	xorlw	1	; case 5
 19936  0049D2  B4D8               	btfsc	status,2,c
 19937  0049D4  D7E2               	goto	l423
 19938  0049D6  0A03               	xorlw	3	; case 6
 19939  0049D8  B4D8               	btfsc	status,2,c
 19940  0049DA  D7E5               	goto	l424
 19941  0049DC                     l418:
 19942                           
 19943                           ;rtcc_drv.c: 286: return RetValue;
 19944                           
 19945                           ; BSR set to: 0
 19946  0049DC  0100               	movlb	0	; () banked
 19947  0049DE  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 19948  0049E0  0012               	return	
 19949  0049E2                     __end_of_Rtcc_GetRtccValue:
 19950                           	opt stack 0
 19951                           tosu	equ	0xFFF
 19952                           tosh	equ	0xFFE
 19953                           tosl	equ	0xFFD
 19954                           pclath	equ	0xFFA
 19955                           tblptru	equ	0xFF8
 19956                           tblptrh	equ	0xFF7
 19957                           tblptrl	equ	0xFF6
 19958                           tablat	equ	0xFF5
 19959                           prodh	equ	0xFF4
 19960                           prodl	equ	0xFF3
 19961                           intcon	equ	0xFF2
 19962                           intcon2	equ	0xFF1
 19963                           intcon3	equ	0xFF0
 19964                           indf0	equ	0xFEF
 19965                           postinc0	equ	0xFEE
 19966                           plusw0	equ	0xFEB
 19967                           fsr0h	equ	0xFEA
 19968                           fsr0l	equ	0xFE9
 19969                           wreg	equ	0xFE8
 19970                           indf1	equ	0xFE7
 19971                           postinc1	equ	0xFE6
 19972                           postdec1	equ	0xFE5
 19973                           fsr1h	equ	0xFE2
 19974                           fsr1l	equ	0xFE1
 19975                           indf2	equ	0xFDF
 19976                           postinc2	equ	0xFDE
 19977                           postdec2	equ	0xFDD
 19978                           plusw2	equ	0xFDB
 19979                           fsr2h	equ	0xFDA
 19980                           fsr2l	equ	0xFD9
 19981                           status	equ	0xFD8
 19982                           
 19983 ;; *************** function _Rtcc_SetRtcStatus *****************
 19984 ;; Defined at:
 19985 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19986 ;; Parameters:    Size  Location     Type
 19987 ;;  Status          1    wreg     unsigned char 
 19988 ;; Auto vars:     Size  Location     Type
 19989 ;;  Status          1   29[BANK0 ] unsigned char 
 19990 ;; Return value:  Size  Location     Type
 19991 ;;                  1    wreg      void 
 19992 ;; Registers used:
 19993 ;;		wreg
 19994 ;; Tracked objects:
 19995 ;;		On entry : 0/0
 19996 ;;		On exit  : 0/0
 19997 ;;		Unchanged: 0/0
 19998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20002 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20003 ;;Total ram usage:        1 bytes
 20004 ;; Hardware stack levels used:    1
 20005 ;; Hardware stack levels required when called:   11
 20006 ;; This function calls:
 20007 ;;		Nothing
 20008 ;; This function is called by:
 20009 ;;		_Rtcm_MainTask
 20010 ;; This function uses a non-reentrant model
 20011 ;;
 20012                           
 20013                           	psect	text86
 20014  006396                     __ptext86:
 20015                           	opt stack 0
 20016  006396                     _Rtcc_SetRtcStatus:
 20017                           	opt stack 16
 20018                           
 20019                           ; BSR set to: 0
 20020                           ;incstack = 0
 20021                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20022  006396  0100               	movlb	0	; () banked
 20023  006398  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20024                           
 20025                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20026  00639A  0100               	movlb	0	; () banked
 20027  00639C  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20028  00639E  D003               	bra	u13555
 20029  0063A0  010F               	movlb	15	; () banked
 20030  0063A2  9F3F               	bcf	63,7,b	;volatile
 20031  0063A4  D002               	bra	u13556
 20032  0063A6                     u13555:
 20033  0063A6  010F               	movlb	15	; () banked
 20034  0063A8  8F3F               	bsf	63,7,b	;volatile
 20035  0063AA                     u13556:
 20036                           
 20037                           ; BSR set to: 15
 20038  0063AA  0012               	return		;funcret
 20039  0063AC                     __end_of_Rtcc_SetRtcStatus:
 20040                           	opt stack 0
 20041                           tosu	equ	0xFFF
 20042                           tosh	equ	0xFFE
 20043                           tosl	equ	0xFFD
 20044                           pclath	equ	0xFFA
 20045                           tblptru	equ	0xFF8
 20046                           tblptrh	equ	0xFF7
 20047                           tblptrl	equ	0xFF6
 20048                           tablat	equ	0xFF5
 20049                           prodh	equ	0xFF4
 20050                           prodl	equ	0xFF3
 20051                           intcon	equ	0xFF2
 20052                           intcon2	equ	0xFF1
 20053                           intcon3	equ	0xFF0
 20054                           indf0	equ	0xFEF
 20055                           postinc0	equ	0xFEE
 20056                           plusw0	equ	0xFEB
 20057                           fsr0h	equ	0xFEA
 20058                           fsr0l	equ	0xFE9
 20059                           wreg	equ	0xFE8
 20060                           indf1	equ	0xFE7
 20061                           postinc1	equ	0xFE6
 20062                           postdec1	equ	0xFE5
 20063                           fsr1h	equ	0xFE2
 20064                           fsr1l	equ	0xFE1
 20065                           indf2	equ	0xFDF
 20066                           postinc2	equ	0xFDE
 20067                           postdec2	equ	0xFDD
 20068                           plusw2	equ	0xFDB
 20069                           fsr2h	equ	0xFDA
 20070                           fsr2l	equ	0xFD9
 20071                           status	equ	0xFD8
 20072                           
 20073 ;; *************** function _Rtcc_RtcConfig *****************
 20074 ;; Defined at:
 20075 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20076 ;; Parameters:    Size  Location     Type
 20077 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20078 ;;		 -> RtcConfig(4), 
 20079 ;; Auto vars:     Size  Location     Type
 20080 ;;		None
 20081 ;; Return value:  Size  Location     Type
 20082 ;;                  1    wreg      void 
 20083 ;; Registers used:
 20084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20085 ;; Tracked objects:
 20086 ;;		On entry : 0/0
 20087 ;;		On exit  : 0/0
 20088 ;;		Unchanged: 0/0
 20089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20092 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20093 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20094 ;;Total ram usage:        3 bytes
 20095 ;; Hardware stack levels used:    1
 20096 ;; Hardware stack levels required when called:   12
 20097 ;; This function calls:
 20098 ;;		_RtccIrqInit
 20099 ;; This function is called by:
 20100 ;;		_Rtcm_MainTask
 20101 ;; This function uses a non-reentrant model
 20102 ;;
 20103                           
 20104                           	psect	text87
 20105  0045B8                     __ptext87:
 20106                           	opt stack 0
 20107  0045B8                     _Rtcc_RtcConfig:
 20108                           	opt stack 15
 20109                           
 20110                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20111                           
 20112                           ; BSR set to: 15
 20113                           ;incstack = 0
 20114  0045B8  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20115  0045BC  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20116  0045C0  50DF               	movf	indf2,w,c
 20117  0045C2  0100               	movlb	0	; () banked
 20118  0045C4  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20119  0045C6  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20120  0045C8  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20121  0045CA  010F               	movlb	15	; () banked
 20122  0045CC  513F               	movf	63,w,b	;volatile
 20123  0045CE  0100               	movlb	0	; () banked
 20124  0045D0  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20125  0045D2  0BFB               	andlw	-5
 20126  0045D4  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20127  0045D6  010F               	movlb	15	; () banked
 20128  0045D8  6F3F               	movwf	63,b	;volatile
 20129                           
 20130                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20131  0045DA  0100               	movlb	0	; () banked
 20132  0045DC  EE20 F001          	lfsr	2,1
 20133  0045E0  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20134  0045E2  26D9               	addwf	fsr2l,f,c
 20135  0045E4  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20136  0045E6  22DA               	addwfc	fsr2h,f,c
 20137  0045E8  50DF               	movf	indf2,w,c
 20138  0045EA  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20139  0045EC  0E01               	movlw	1
 20140  0045EE  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20141  0045F0  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20142  0045F2  010F               	movlb	15	; () banked
 20143  0045F4  513C               	movf	60,w,b	;volatile
 20144  0045F6  0100               	movlb	0	; () banked
 20145  0045F8  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20146  0045FA  0BFD               	andlw	-3
 20147  0045FC  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20148  0045FE  010F               	movlb	15	; () banked
 20149  004600  6F3C               	movwf	60,b	;volatile
 20150                           
 20151                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20152  004602  0100               	movlb	0	; () banked
 20153  004604  EE20 F001          	lfsr	2,1
 20154  004608  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20155  00460A  26D9               	addwf	fsr2l,f,c
 20156  00460C  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20157  00460E  22DA               	addwfc	fsr2h,f,c
 20158  004610  50DF               	movf	indf2,w,c
 20159  004612  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20160  004614  90D8               	bcf	status,0,c
 20161  004616  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20162  004618  0E01               	movlw	1
 20163  00461A  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20164  00461C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20165  00461E  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20166  004620  010F               	movlb	15	; () banked
 20167  004622  513C               	movf	60,w,b	;volatile
 20168  004624  0100               	movlb	0	; () banked
 20169  004626  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20170  004628  0BFB               	andlw	-5
 20171  00462A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20172  00462C  010F               	movlb	15	; () banked
 20173  00462E  6F3C               	movwf	60,b	;volatile
 20174                           
 20175                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20176  004630  0100               	movlb	0	; () banked
 20177  004632  EE20 F002          	lfsr	2,2
 20178  004636  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20179  004638  26D9               	addwf	fsr2l,f,c
 20180  00463A  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20181  00463C  22DA               	addwfc	fsr2h,f,c
 20182  00463E  04DE               	decf	postinc2,w,c
 20183  004640  A4D8               	btfss	status,2,c
 20184  004642  0012               	return	
 20185                           
 20186                           ; BSR set to: 0
 20187                           ;rtcc_drv.c: 115: {
 20188                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20189  004644  EE20 F003          	lfsr	2,3
 20190  004648  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20191  00464A  26D9               	addwf	fsr2l,f,c
 20192  00464C  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20193  00464E  22DA               	addwfc	fsr2h,f,c
 20194  004650  50DF               	movf	indf2,w,c
 20195  004652  ECD6  F031         	call	_RtccIrqInit
 20196  004656  0012               	return	
 20197  004658                     __end_of_Rtcc_RtcConfig:
 20198                           	opt stack 0
 20199                           tosu	equ	0xFFF
 20200                           tosh	equ	0xFFE
 20201                           tosl	equ	0xFFD
 20202                           pclath	equ	0xFFA
 20203                           tblptru	equ	0xFF8
 20204                           tblptrh	equ	0xFF7
 20205                           tblptrl	equ	0xFF6
 20206                           tablat	equ	0xFF5
 20207                           prodh	equ	0xFF4
 20208                           prodl	equ	0xFF3
 20209                           intcon	equ	0xFF2
 20210                           intcon2	equ	0xFF1
 20211                           intcon3	equ	0xFF0
 20212                           indf0	equ	0xFEF
 20213                           postinc0	equ	0xFEE
 20214                           plusw0	equ	0xFEB
 20215                           fsr0h	equ	0xFEA
 20216                           fsr0l	equ	0xFE9
 20217                           wreg	equ	0xFE8
 20218                           indf1	equ	0xFE7
 20219                           postinc1	equ	0xFE6
 20220                           postdec1	equ	0xFE5
 20221                           fsr1h	equ	0xFE2
 20222                           fsr1l	equ	0xFE1
 20223                           indf2	equ	0xFDF
 20224                           postinc2	equ	0xFDE
 20225                           postdec2	equ	0xFDD
 20226                           plusw2	equ	0xFDB
 20227                           fsr2h	equ	0xFDA
 20228                           fsr2l	equ	0xFD9
 20229                           status	equ	0xFD8
 20230                           
 20231 ;; *************** function _RtccIrqInit *****************
 20232 ;; Defined at:
 20233 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20234 ;; Parameters:    Size  Location     Type
 20235 ;;  Priority        1    wreg     enum E7716
 20236 ;; Auto vars:     Size  Location     Type
 20237 ;;  Priority        1   29[BANK0 ] enum E7716
 20238 ;; Return value:  Size  Location     Type
 20239 ;;                  1    wreg      void 
 20240 ;; Registers used:
 20241 ;;		wreg
 20242 ;; Tracked objects:
 20243 ;;		On entry : 0/0
 20244 ;;		On exit  : 0/0
 20245 ;;		Unchanged: 0/0
 20246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20250 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20251 ;;Total ram usage:        1 bytes
 20252 ;; Hardware stack levels used:    1
 20253 ;; Hardware stack levels required when called:   11
 20254 ;; This function calls:
 20255 ;;		Nothing
 20256 ;; This function is called by:
 20257 ;;		_Rtcc_RtcConfig
 20258 ;; This function uses a non-reentrant model
 20259 ;;
 20260                           
 20261                           	psect	text88
 20262  0063AC                     __ptext88:
 20263                           	opt stack 0
 20264  0063AC                     _RtccIrqInit:
 20265                           	opt stack 15
 20266                           
 20267                           ;incstack = 0
 20268                           ;RtccIrqInit@Priority stored from wreg
 20269  0063AC  0100               	movlb	0	; () banked
 20270  0063AE  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20271                           
 20272                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20273  0063B0  90A4               	bcf	4004,0,c	;volatile
 20274                           
 20275                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20276  0063B2  0100               	movlb	0	; () banked
 20277  0063B4  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20278  0063B6  D002               	bra	u12565
 20279  0063B8  90A5               	bcf	4005,0,c	;volatile
 20280  0063BA  D001               	bra	u12566
 20281  0063BC                     u12565:
 20282  0063BC  80A5               	bsf	4005,0,c	;volatile
 20283  0063BE                     u12566:
 20284                           
 20285                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20286  0063BE  80A3               	bsf	4003,0,c	;volatile
 20287  0063C0  0012               	return		;funcret
 20288  0063C2                     __end_of_RtccIrqInit:
 20289                           	opt stack 0
 20290                           tosu	equ	0xFFF
 20291                           tosh	equ	0xFFE
 20292                           tosl	equ	0xFFD
 20293                           pclath	equ	0xFFA
 20294                           tblptru	equ	0xFF8
 20295                           tblptrh	equ	0xFF7
 20296                           tblptrl	equ	0xFF6
 20297                           tablat	equ	0xFF5
 20298                           prodh	equ	0xFF4
 20299                           prodl	equ	0xFF3
 20300                           intcon	equ	0xFF2
 20301                           intcon2	equ	0xFF1
 20302                           intcon3	equ	0xFF0
 20303                           indf0	equ	0xFEF
 20304                           postinc0	equ	0xFEE
 20305                           plusw0	equ	0xFEB
 20306                           fsr0h	equ	0xFEA
 20307                           fsr0l	equ	0xFE9
 20308                           wreg	equ	0xFE8
 20309                           indf1	equ	0xFE7
 20310                           postinc1	equ	0xFE6
 20311                           postdec1	equ	0xFE5
 20312                           fsr1h	equ	0xFE2
 20313                           fsr1l	equ	0xFE1
 20314                           indf2	equ	0xFDF
 20315                           postinc2	equ	0xFDE
 20316                           postdec2	equ	0xFDD
 20317                           plusw2	equ	0xFDB
 20318                           fsr2h	equ	0xFDA
 20319                           fsr2l	equ	0xFD9
 20320                           status	equ	0xFD8
 20321                           
 20322 ;; *************** function _Rtcc_AlarmConfig *****************
 20323 ;; Defined at:
 20324 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20325 ;; Parameters:    Size  Location     Type
 20326 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20327 ;;		 -> AlCfg(4), 
 20328 ;; Auto vars:     Size  Location     Type
 20329 ;;		None
 20330 ;; Return value:  Size  Location     Type
 20331 ;;                  1    wreg      void 
 20332 ;; Registers used:
 20333 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20334 ;; Tracked objects:
 20335 ;;		On entry : 0/0
 20336 ;;		On exit  : 0/0
 20337 ;;		Unchanged: 0/0
 20338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20341 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20342 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20343 ;;Total ram usage:        3 bytes
 20344 ;; Hardware stack levels used:    1
 20345 ;; Hardware stack levels required when called:   11
 20346 ;; This function calls:
 20347 ;;		Nothing
 20348 ;; This function is called by:
 20349 ;;		_Rtcm_MainTask
 20350 ;; This function uses a non-reentrant model
 20351 ;;
 20352                           
 20353                           	psect	text89
 20354  004FF6                     __ptext89:
 20355                           	opt stack 0
 20356  004FF6                     _Rtcc_AlarmConfig:
 20357                           	opt stack 16
 20358                           
 20359                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20360                           
 20361                           ;incstack = 0
 20362  004FF6  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20363  004FFA  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20364  004FFE  50DF               	movf	indf2,w,c
 20365  005000  0100               	movlb	0	; () banked
 20366  005002  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20367  005004  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20368  005006  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20369  005008  5091               	movf	3985,w,c	;volatile
 20370  00500A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20371  00500C  0B7F               	andlw	-129
 20372  00500E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20373  005010  6E91               	movwf	3985,c	;volatile
 20374                           
 20375                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20376  005012  EE20 F001          	lfsr	2,1
 20377  005016  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20378  005018  26D9               	addwf	fsr2l,f,c
 20379  00501A  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20380  00501C  22DA               	addwfc	fsr2h,f,c
 20381  00501E  50DF               	movf	indf2,w,c
 20382  005020  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20383  005022  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20384  005024  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20385  005026  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20386  005028  5091               	movf	3985,w,c	;volatile
 20387  00502A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20388  00502C  0BBF               	andlw	-65
 20389  00502E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20390  005030  6E91               	movwf	3985,c	;volatile
 20391                           
 20392                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20393  005032  EE20 F002          	lfsr	2,2
 20394  005036  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20395  005038  26D9               	addwf	fsr2l,f,c
 20396  00503A  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20397  00503C  22DA               	addwfc	fsr2h,f,c
 20398  00503E  50DF               	movf	indf2,w,c
 20399  005040  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20400  005042  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20401  005044  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20402  005046  5091               	movf	3985,w,c	;volatile
 20403  005048  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20404  00504A  0BC3               	andlw	-61
 20405  00504C  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20406  00504E  6E91               	movwf	3985,c	;volatile
 20407                           
 20408                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20409  005050  EE20 F003          	lfsr	2,3
 20410  005054  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20411  005056  26D9               	addwf	fsr2l,f,c
 20412  005058  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20413  00505A  22DA               	addwfc	fsr2h,f,c
 20414  00505C  50DF               	movf	indf2,w,c
 20415  00505E  6E90               	movwf	3984,c	;volatile
 20416                           
 20417                           ; BSR set to: 0
 20418  005060  0012               	return		;funcret
 20419  005062                     __end_of_Rtcc_AlarmConfig:
 20420                           	opt stack 0
 20421                           tosu	equ	0xFFF
 20422                           tosh	equ	0xFFE
 20423                           tosl	equ	0xFFD
 20424                           pclath	equ	0xFFA
 20425                           tblptru	equ	0xFF8
 20426                           tblptrh	equ	0xFF7
 20427                           tblptrl	equ	0xFF6
 20428                           tablat	equ	0xFF5
 20429                           prodh	equ	0xFF4
 20430                           prodl	equ	0xFF3
 20431                           intcon	equ	0xFF2
 20432                           intcon2	equ	0xFF1
 20433                           intcon3	equ	0xFF0
 20434                           indf0	equ	0xFEF
 20435                           postinc0	equ	0xFEE
 20436                           plusw0	equ	0xFEB
 20437                           fsr0h	equ	0xFEA
 20438                           fsr0l	equ	0xFE9
 20439                           wreg	equ	0xFE8
 20440                           indf1	equ	0xFE7
 20441                           postinc1	equ	0xFE6
 20442                           postdec1	equ	0xFE5
 20443                           fsr1h	equ	0xFE2
 20444                           fsr1l	equ	0xFE1
 20445                           indf2	equ	0xFDF
 20446                           postinc2	equ	0xFDE
 20447                           postdec2	equ	0xFDD
 20448                           plusw2	equ	0xFDB
 20449                           fsr2h	equ	0xFDA
 20450                           fsr2l	equ	0xFD9
 20451                           status	equ	0xFD8
 20452                           
 20453 ;; *************** function _waitSetupCall *****************
 20454 ;; Defined at:
 20455 ;;		line 84 in file "../Source/c/04_App/app_gate.c"
 20456 ;; Parameters:    Size  Location     Type
 20457 ;;		None
 20458 ;; Auto vars:     Size  Location     Type
 20459 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 20460 ;; Return value:  Size  Location     Type
 20461 ;;                  1    wreg      unsigned char 
 20462 ;; Registers used:
 20463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20464 ;; Tracked objects:
 20465 ;;		On entry : 0/0
 20466 ;;		On exit  : 0/0
 20467 ;;		Unchanged: 0/0
 20468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20472 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20473 ;;Total ram usage:        1 bytes
 20474 ;; Hardware stack levels used:    1
 20475 ;; Hardware stack levels required when called:   15
 20476 ;; This function calls:
 20477 ;;		_Led_SetLedStatus
 20478 ;;		_getSetupCall
 20479 ;;		_secondsAppTimer
 20480 ;; This function is called by:
 20481 ;;		_MyApp_Task
 20482 ;; This function uses a non-reentrant model
 20483 ;;
 20484                           
 20485                           	psect	text90
 20486  0057A8                     __ptext90:
 20487                           	opt stack 0
 20488  0057A8                     _waitSetupCall:
 20489                           	opt stack 12
 20490                           
 20491                           ;app_gate.c: 86: bool isCallArrived = 0;
 20492                           
 20493                           ; BSR set to: 0
 20494                           ;incstack = 0
 20495  0057A8  0E00               	movlw	0
 20496  0057AA  0100               	movlb	0	; () banked
 20497  0057AC  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 20498                           
 20499                           ; BSR set to: 0
 20500                           ;app_gate.c: 87: if (!secondsAppTimer(30, &setupCallTicks, 0))
 20501  0057AE  0EBC               	movlw	low _setupCallTicks
 20502  0057B0  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20503  0057B2  0E03               	movlw	high _setupCallTicks
 20504  0057B4  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20505  0057B6  0E00               	movlw	0
 20506  0057B8  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20507  0057BA  0E1E               	movlw	30
 20508  0057BC  EC8B  F022         	call	_secondsAppTimer
 20509  0057C0  0900               	iorlw	0
 20510  0057C2  A4D8               	btfss	status,2,c
 20511  0057C4  D00F               	goto	l2713
 20512                           
 20513                           ;app_gate.c: 88: {
 20514                           ;app_gate.c: 89: Led_SetLedStatus(1u, LED_STS_BLINK);
 20515  0057C6  0E03               	movlw	3
 20516  0057C8  0100               	movlb	0	; () banked
 20517  0057CA  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20518  0057CC  0E01               	movlw	1
 20519  0057CE  EC86  F02F         	call	_Led_SetLedStatus
 20520                           
 20521                           ;app_gate.c: 90: if (getSetupCall())
 20522  0057D2  EC1A  F031         	call	_getSetupCall	;wreg free
 20523  0057D6  0900               	iorlw	0
 20524  0057D8  B4D8               	btfsc	status,2,c
 20525  0057DA  D00A               	goto	l2715
 20526                           
 20527                           ;app_gate.c: 91: {
 20528                           ;app_gate.c: 92: isCallArrived = 1;
 20529  0057DC  0E01               	movlw	1
 20530  0057DE  0100               	movlb	0	; () banked
 20531  0057E0  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 20532                           
 20533                           ; BSR set to: 0
 20534                           ;app_gate.c: 93: }
 20535                           ;app_gate.c: 94: }
 20536  0057E2  D006               	goto	l2715
 20537  0057E4                     l2713:
 20538                           
 20539                           ;app_gate.c: 95: else
 20540                           ;app_gate.c: 96: {
 20541                           ;app_gate.c: 97: Led_SetLedStatus(1u, LED_STS_ON);
 20542                           
 20543                           ; BSR set to: 0
 20544  0057E4  0E01               	movlw	1
 20545  0057E6  0100               	movlb	0	; () banked
 20546  0057E8  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20547  0057EA  0E01               	movlw	1
 20548  0057EC  EC86  F02F         	call	_Led_SetLedStatus
 20549  0057F0                     l2715:
 20550                           
 20551                           ;app_gate.c: 98: }
 20552                           ;app_gate.c: 99: return isCallArrived;
 20553  0057F0  0100               	movlb	0	; () banked
 20554  0057F2  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 20555  0057F4  0012               	return	
 20556  0057F6                     __end_of_waitSetupCall:
 20557                           	opt stack 0
 20558                           tosu	equ	0xFFF
 20559                           tosh	equ	0xFFE
 20560                           tosl	equ	0xFFD
 20561                           pclath	equ	0xFFA
 20562                           tblptru	equ	0xFF8
 20563                           tblptrh	equ	0xFF7
 20564                           tblptrl	equ	0xFF6
 20565                           tablat	equ	0xFF5
 20566                           prodh	equ	0xFF4
 20567                           prodl	equ	0xFF3
 20568                           intcon	equ	0xFF2
 20569                           intcon2	equ	0xFF1
 20570                           intcon3	equ	0xFF0
 20571                           indf0	equ	0xFEF
 20572                           postinc0	equ	0xFEE
 20573                           plusw0	equ	0xFEB
 20574                           fsr0h	equ	0xFEA
 20575                           fsr0l	equ	0xFE9
 20576                           wreg	equ	0xFE8
 20577                           indf1	equ	0xFE7
 20578                           postinc1	equ	0xFE6
 20579                           postdec1	equ	0xFE5
 20580                           fsr1h	equ	0xFE2
 20581                           fsr1l	equ	0xFE1
 20582                           indf2	equ	0xFDF
 20583                           postinc2	equ	0xFDE
 20584                           postdec2	equ	0xFDD
 20585                           plusw2	equ	0xFDB
 20586                           fsr2h	equ	0xFDA
 20587                           fsr2l	equ	0xFD9
 20588                           status	equ	0xFD8
 20589                           
 20590 ;; *************** function _getSetupCall *****************
 20591 ;; Defined at:
 20592 ;;		line 65 in file "../Source/c/04_App/app_gate.c"
 20593 ;; Parameters:    Size  Location     Type
 20594 ;;		None
 20595 ;; Auto vars:     Size  Location     Type
 20596 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 20597 ;; Return value:  Size  Location     Type
 20598 ;;                  1    wreg      unsigned char 
 20599 ;; Registers used:
 20600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20601 ;; Tracked objects:
 20602 ;;		On entry : 0/0
 20603 ;;		On exit  : 0/0
 20604 ;;		Unchanged: 0/0
 20605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20607 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20609 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20610 ;;Total ram usage:        1 bytes
 20611 ;; Hardware stack levels used:    1
 20612 ;; Hardware stack levels required when called:   14
 20613 ;; This function calls:
 20614 ;;		_Mdm_HangPhoneCall
 20615 ;;		_Mdm_IsRinging
 20616 ;; This function is called by:
 20617 ;;		_waitSetupCall
 20618 ;; This function uses a non-reentrant model
 20619 ;;
 20620                           
 20621                           	psect	text91
 20622  006234                     __ptext91:
 20623                           	opt stack 0
 20624  006234                     _getSetupCall:
 20625                           	opt stack 12
 20626                           
 20627                           ;app_gate.c: 67: bool isCalledReceived = 0;
 20628                           
 20629                           ; BSR set to: 0
 20630                           ;incstack = 0
 20631  006234  0E00               	movlw	0
 20632  006236  0100               	movlb	0	; () banked
 20633  006238  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 20634                           
 20635                           ; BSR set to: 0
 20636                           ;app_gate.c: 69: if (Mdm_IsRinging())
 20637  00623A  EC6E  F030         	call	_Mdm_IsRinging	;wreg free
 20638  00623E  0900               	iorlw	0
 20639  006240  B4D8               	btfsc	status,2,c
 20640  006242  D005               	goto	l2709
 20641                           
 20642                           ;app_gate.c: 70: {
 20643                           ;app_gate.c: 71: Mdm_HangPhoneCall();
 20644  006244  EC0A  F032         	call	_Mdm_HangPhoneCall	;wreg free
 20645                           
 20646                           ;app_gate.c: 72: isCalledReceived = 1;
 20647  006248  0E01               	movlw	1
 20648  00624A  0100               	movlb	0	; () banked
 20649  00624C  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 20650  00624E                     l2709:
 20651                           
 20652                           ;app_gate.c: 73: }
 20653                           ;app_gate.c: 74: return isCalledReceived;
 20654                           
 20655                           ; BSR set to: 0
 20656  00624E  0100               	movlb	0	; () banked
 20657  006250  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 20658  006252  0012               	return	
 20659  006254                     __end_of_getSetupCall:
 20660                           	opt stack 0
 20661                           tosu	equ	0xFFF
 20662                           tosh	equ	0xFFE
 20663                           tosl	equ	0xFFD
 20664                           pclath	equ	0xFFA
 20665                           tblptru	equ	0xFF8
 20666                           tblptrh	equ	0xFF7
 20667                           tblptrl	equ	0xFF6
 20668                           tablat	equ	0xFF5
 20669                           prodh	equ	0xFF4
 20670                           prodl	equ	0xFF3
 20671                           intcon	equ	0xFF2
 20672                           intcon2	equ	0xFF1
 20673                           intcon3	equ	0xFF0
 20674                           indf0	equ	0xFEF
 20675                           postinc0	equ	0xFEE
 20676                           plusw0	equ	0xFEB
 20677                           fsr0h	equ	0xFEA
 20678                           fsr0l	equ	0xFE9
 20679                           wreg	equ	0xFE8
 20680                           indf1	equ	0xFE7
 20681                           postinc1	equ	0xFE6
 20682                           postdec1	equ	0xFE5
 20683                           fsr1h	equ	0xFE2
 20684                           fsr1l	equ	0xFE1
 20685                           indf2	equ	0xFDF
 20686                           postinc2	equ	0xFDE
 20687                           postdec2	equ	0xFDD
 20688                           plusw2	equ	0xFDB
 20689                           fsr2h	equ	0xFDA
 20690                           fsr2l	equ	0xFD9
 20691                           status	equ	0xFD8
 20692                           
 20693 ;; *************** function _Mdm_IsRinging *****************
 20694 ;; Defined at:
 20695 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 20696 ;; Parameters:    Size  Location     Type
 20697 ;;		None
 20698 ;; Auto vars:     Size  Location     Type
 20699 ;;  Ret             1   33[BANK0 ] enum E8924
 20700 ;; Return value:  Size  Location     Type
 20701 ;;                  1    wreg      enum E8924
 20702 ;; Registers used:
 20703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20704 ;; Tracked objects:
 20705 ;;		On entry : 0/0
 20706 ;;		On exit  : 0/0
 20707 ;;		Unchanged: 0/0
 20708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20710 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20712 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20713 ;;Total ram usage:        1 bytes
 20714 ;; Hardware stack levels used:    1
 20715 ;; Hardware stack levels required when called:   12
 20716 ;; This function calls:
 20717 ;;		_ReceiveEvt
 20718 ;; This function is called by:
 20719 ;;		_getSetupCall
 20720 ;; This function uses a non-reentrant model
 20721 ;;
 20722                           
 20723                           	psect	text92
 20724  0060DC                     __ptext92:
 20725                           	opt stack 0
 20726  0060DC                     _Mdm_IsRinging:
 20727                           	opt stack 13
 20728                           
 20729                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 20730                           
 20731                           ; BSR set to: 0
 20732                           ;incstack = 0
 20733  0060DC  0E00               	movlw	0
 20734  0060DE  0100               	movlb	0	; () banked
 20735  0060E0  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 20736                           
 20737                           ; BSR set to: 0
 20738                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 20739  0060E2  0EE0               	movlw	low _RingEvent
 20740  0060E4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 20741  0060E6  0E00               	movlw	high _RingEvent
 20742  0060E8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 20743  0060EA  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 20744  0060EE  0900               	iorlw	0
 20745  0060F0  B4D8               	btfsc	status,2,c
 20746  0060F2  D003               	goto	l1152
 20747                           
 20748                           ;mdm_gsm_gprs.c: 1030: {
 20749                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 20750  0060F4  0E01               	movlw	1
 20751  0060F6  0100               	movlb	0	; () banked
 20752  0060F8  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 20753  0060FA                     l1152:
 20754                           
 20755                           ;mdm_gsm_gprs.c: 1032: }
 20756                           ;mdm_gsm_gprs.c: 1034: return Ret;
 20757  0060FA  0100               	movlb	0	; () banked
 20758  0060FC  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 20759  0060FE  0012               	return	
 20760  006100                     __end_of_Mdm_IsRinging:
 20761                           	opt stack 0
 20762                           tosu	equ	0xFFF
 20763                           tosh	equ	0xFFE
 20764                           tosl	equ	0xFFD
 20765                           pclath	equ	0xFFA
 20766                           tblptru	equ	0xFF8
 20767                           tblptrh	equ	0xFF7
 20768                           tblptrl	equ	0xFF6
 20769                           tablat	equ	0xFF5
 20770                           prodh	equ	0xFF4
 20771                           prodl	equ	0xFF3
 20772                           intcon	equ	0xFF2
 20773                           intcon2	equ	0xFF1
 20774                           intcon3	equ	0xFF0
 20775                           indf0	equ	0xFEF
 20776                           postinc0	equ	0xFEE
 20777                           plusw0	equ	0xFEB
 20778                           fsr0h	equ	0xFEA
 20779                           fsr0l	equ	0xFE9
 20780                           wreg	equ	0xFE8
 20781                           indf1	equ	0xFE7
 20782                           postinc1	equ	0xFE6
 20783                           postdec1	equ	0xFE5
 20784                           fsr1h	equ	0xFE2
 20785                           fsr1l	equ	0xFE1
 20786                           indf2	equ	0xFDF
 20787                           postinc2	equ	0xFDE
 20788                           postdec2	equ	0xFDD
 20789                           plusw2	equ	0xFDB
 20790                           fsr2h	equ	0xFDA
 20791                           fsr2l	equ	0xFD9
 20792                           status	equ	0xFD8
 20793                           
 20794 ;; *************** function _Mdm_HangPhoneCall *****************
 20795 ;; Defined at:
 20796 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 20797 ;; Parameters:    Size  Location     Type
 20798 ;;		None
 20799 ;; Auto vars:     Size  Location     Type
 20800 ;;		None
 20801 ;; Return value:  Size  Location     Type
 20802 ;;                  1    wreg      void 
 20803 ;; Registers used:
 20804 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20805 ;; Tracked objects:
 20806 ;;		On entry : 0/0
 20807 ;;		On exit  : 0/0
 20808 ;;		Unchanged: 0/0
 20809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20814 ;;Total ram usage:        0 bytes
 20815 ;; Hardware stack levels used:    1
 20816 ;; Hardware stack levels required when called:   13
 20817 ;; This function calls:
 20818 ;;		_Uart_WriteConstString
 20819 ;; This function is called by:
 20820 ;;		_getSetupCall
 20821 ;; This function uses a non-reentrant model
 20822 ;;
 20823                           
 20824                           	psect	text93
 20825  006414                     __ptext93:
 20826                           	opt stack 0
 20827  006414                     _Mdm_HangPhoneCall:
 20828                           	opt stack 12
 20829                           
 20830                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 20831                           
 20832                           ; BSR set to: 0
 20833                           ;incstack = 0
 20834  006414  0EEF               	movlw	low STR_6
 20835  006416  0100               	movlb	0	; () banked
 20836  006418  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 20837  00641A  0EFF               	movlw	high STR_6
 20838  00641C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 20839  00641E  0E01               	movlw	1
 20840  006420  EC85  F02D         	call	_Uart_WriteConstString
 20841  006424  0012               	return		;funcret
 20842  006426                     __end_of_Mdm_HangPhoneCall:
 20843                           	opt stack 0
 20844                           tosu	equ	0xFFF
 20845                           tosh	equ	0xFFE
 20846                           tosl	equ	0xFFD
 20847                           pclath	equ	0xFFA
 20848                           tblptru	equ	0xFF8
 20849                           tblptrh	equ	0xFF7
 20850                           tblptrl	equ	0xFF6
 20851                           tablat	equ	0xFF5
 20852                           prodh	equ	0xFF4
 20853                           prodl	equ	0xFF3
 20854                           intcon	equ	0xFF2
 20855                           intcon2	equ	0xFF1
 20856                           intcon3	equ	0xFF0
 20857                           indf0	equ	0xFEF
 20858                           postinc0	equ	0xFEE
 20859                           plusw0	equ	0xFEB
 20860                           fsr0h	equ	0xFEA
 20861                           fsr0l	equ	0xFE9
 20862                           wreg	equ	0xFE8
 20863                           indf1	equ	0xFE7
 20864                           postinc1	equ	0xFE6
 20865                           postdec1	equ	0xFE5
 20866                           fsr1h	equ	0xFE2
 20867                           fsr1l	equ	0xFE1
 20868                           indf2	equ	0xFDF
 20869                           postinc2	equ	0xFDE
 20870                           postdec2	equ	0xFDD
 20871                           plusw2	equ	0xFDB
 20872                           fsr2h	equ	0xFDA
 20873                           fsr2l	equ	0xFD9
 20874                           status	equ	0xFD8
 20875                           
 20876 ;; *************** function _updateMemorizedNumbersCount *****************
 20877 ;; Defined at:
 20878 ;;		line 118 in file "../Source/c/04_App/app_gate.c"
 20879 ;; Parameters:    Size  Location     Type
 20880 ;;		None
 20881 ;; Auto vars:     Size  Location     Type
 20882 ;;		None
 20883 ;; Return value:  Size  Location     Type
 20884 ;;                  1    wreg      void 
 20885 ;; Registers used:
 20886 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20887 ;; Tracked objects:
 20888 ;;		On entry : 0/0
 20889 ;;		On exit  : 0/0
 20890 ;;		Unchanged: 0/0
 20891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20896 ;;Total ram usage:        0 bytes
 20897 ;; Hardware stack levels used:    1
 20898 ;; Hardware stack levels required when called:   14
 20899 ;; This function calls:
 20900 ;;		_Eeprom_Write
 20901 ;;		_initPreamble
 20902 ;; This function is called by:
 20903 ;;		_MyApp_Task
 20904 ;; This function uses a non-reentrant model
 20905 ;;
 20906                           
 20907                           	psect	text94
 20908  00631C                     __ptext94:
 20909                           	opt stack 0
 20910  00631C                     _updateMemorizedNumbersCount:
 20911                           	opt stack 13
 20912                           
 20913                           ;app_gate.c: 120: Eeprom_Write(0, initPreamble(), 5);
 20914                           
 20915                           ;incstack = 0
 20916  00631C  EC21  F030         	call	_initPreamble	;wreg free
 20917  006320  C07D  F087         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 20918  006324  C07E  F088         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 20919  006328  0E05               	movlw	5
 20920  00632A  0100               	movlb	0	; () banked
 20921  00632C  6F89               	movwf	Eeprom_Write@DataLength& (0+255),b
 20922  00632E  0E00               	movlw	0
 20923  006330  EC0A  F02B         	call	_Eeprom_Write
 20924  006334  0012               	return		;funcret
 20925  006336                     __end_of_updateMemorizedNumbersCount:
 20926                           	opt stack 0
 20927                           tosu	equ	0xFFF
 20928                           tosh	equ	0xFFE
 20929                           tosl	equ	0xFFD
 20930                           pclath	equ	0xFFA
 20931                           tblptru	equ	0xFF8
 20932                           tblptrh	equ	0xFF7
 20933                           tblptrl	equ	0xFF6
 20934                           tablat	equ	0xFF5
 20935                           prodh	equ	0xFF4
 20936                           prodl	equ	0xFF3
 20937                           intcon	equ	0xFF2
 20938                           intcon2	equ	0xFF1
 20939                           intcon3	equ	0xFF0
 20940                           indf0	equ	0xFEF
 20941                           postinc0	equ	0xFEE
 20942                           plusw0	equ	0xFEB
 20943                           fsr0h	equ	0xFEA
 20944                           fsr0l	equ	0xFE9
 20945                           wreg	equ	0xFE8
 20946                           indf1	equ	0xFE7
 20947                           postinc1	equ	0xFE6
 20948                           postdec1	equ	0xFE5
 20949                           fsr1h	equ	0xFE2
 20950                           fsr1l	equ	0xFE1
 20951                           indf2	equ	0xFDF
 20952                           postinc2	equ	0xFDE
 20953                           postdec2	equ	0xFDD
 20954                           plusw2	equ	0xFDB
 20955                           fsr2h	equ	0xFDA
 20956                           fsr2l	equ	0xFD9
 20957                           status	equ	0xFD8
 20958                           
 20959 ;; *************** function _initPreamble *****************
 20960 ;; Defined at:
 20961 ;;		line 213 in file "../Source/c/04_App/app_init.c"
 20962 ;; Parameters:    Size  Location     Type
 20963 ;;		None
 20964 ;; Auto vars:     Size  Location     Type
 20965 ;;		None
 20966 ;; Return value:  Size  Location     Type
 20967 ;;                  2   29[BANK0 ] PTR unsigned char 
 20968 ;; Registers used:
 20969 ;;		wreg, status,2, status,0
 20970 ;; Tracked objects:
 20971 ;;		On entry : 0/0
 20972 ;;		On exit  : 0/0
 20973 ;;		Unchanged: 0/0
 20974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20975 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20978 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20979 ;;Total ram usage:        2 bytes
 20980 ;; Hardware stack levels used:    1
 20981 ;; Hardware stack levels required when called:   11
 20982 ;; This function calls:
 20983 ;;		Nothing
 20984 ;; This function is called by:
 20985 ;;		_updateMemorizedNumbersCount
 20986 ;; This function uses a non-reentrant model
 20987 ;;
 20988                           
 20989                           	psect	text95
 20990  006042                     __ptext95:
 20991                           	opt stack 0
 20992  006042                     _initPreamble:
 20993                           	opt stack 15
 20994                           
 20995                           ;app_init.c: 215: memoryPreamble[0] = 'U';
 20996                           
 20997                           ;incstack = 0
 20998  006042  0E55               	movlw	85
 20999  006044  0103               	movlb	3	; () banked
 21000  006046  6F9D               	movwf	_memoryPreamble& (0+255),b
 21001                           
 21002                           ;app_init.c: 216: memoryPreamble[1] = 'S';
 21003  006048  0E53               	movlw	83
 21004  00604A  6F9E               	movwf	(_memoryPreamble+1)& (0+255),b
 21005                           
 21006                           ;app_init.c: 217: memoryPreamble[2] = 'I';
 21007  00604C  0E49               	movlw	73
 21008  00604E  6F9F               	movwf	(_memoryPreamble+2)& (0+255),b
 21009                           
 21010                           ;app_init.c: 218: memoryPreamble[3] = 'M';
 21011  006050  0E4D               	movlw	77
 21012  006052  6FA0               	movwf	(_memoryPreamble+3)& (0+255),b
 21013                           
 21014                           ;app_init.c: 219: memoryPreamble[4] = '1';
 21015  006054  0E31               	movlw	49
 21016  006056  6FA1               	movwf	(_memoryPreamble+4)& (0+255),b
 21017                           
 21018                           ;app_init.c: 220: memorizedNumbersCount[0] = 1;
 21019  006058  0E01               	movlw	1
 21020  00605A  0101               	movlb	1	; () banked
 21021  00605C  6FD6               	movwf	_memorizedNumbersCount& (0+255),b
 21022                           
 21023                           ; BSR set to: 1
 21024                           ;app_init.c: 221: return memoryPreamble;
 21025  00605E  0E9D               	movlw	low _memoryPreamble
 21026  006060  0100               	movlb	0	; () banked
 21027  006062  6F7D               	movwf	?_initPreamble& (0+255),b
 21028  006064  0E03               	movlw	high _memoryPreamble
 21029  006066  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 21030  006068  0012               	return	
 21031  00606A                     __end_of_initPreamble:
 21032                           	opt stack 0
 21033                           tosu	equ	0xFFF
 21034                           tosh	equ	0xFFE
 21035                           tosl	equ	0xFFD
 21036                           pclath	equ	0xFFA
 21037                           tblptru	equ	0xFF8
 21038                           tblptrh	equ	0xFF7
 21039                           tblptrl	equ	0xFF6
 21040                           tablat	equ	0xFF5
 21041                           prodh	equ	0xFF4
 21042                           prodl	equ	0xFF3
 21043                           intcon	equ	0xFF2
 21044                           intcon2	equ	0xFF1
 21045                           intcon3	equ	0xFF0
 21046                           indf0	equ	0xFEF
 21047                           postinc0	equ	0xFEE
 21048                           plusw0	equ	0xFEB
 21049                           fsr0h	equ	0xFEA
 21050                           fsr0l	equ	0xFE9
 21051                           wreg	equ	0xFE8
 21052                           indf1	equ	0xFE7
 21053                           postinc1	equ	0xFE6
 21054                           postdec1	equ	0xFE5
 21055                           fsr1h	equ	0xFE2
 21056                           fsr1l	equ	0xFE1
 21057                           indf2	equ	0xFDF
 21058                           postinc2	equ	0xFDE
 21059                           postdec2	equ	0xFDD
 21060                           plusw2	equ	0xFDB
 21061                           fsr2h	equ	0xFDA
 21062                           fsr2l	equ	0xFD9
 21063                           status	equ	0xFD8
 21064                           
 21065 ;; *************** function _saveMasterNumber *****************
 21066 ;; Defined at:
 21067 ;;		line 108 in file "../Source/c/04_App/app_gate.c"
 21068 ;; Parameters:    Size  Location     Type
 21069 ;;  address         1    wreg     unsigned char 
 21070 ;;  phoneNumber     2   46[BANK0 ] PTR unsigned char 
 21071 ;;		 -> callerNumber(14), 
 21072 ;; Auto vars:     Size  Location     Type
 21073 ;;  address         1   48[BANK0 ] unsigned char 
 21074 ;; Return value:  Size  Location     Type
 21075 ;;                  1    wreg      void 
 21076 ;; Registers used:
 21077 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21078 ;; Tracked objects:
 21079 ;;		On entry : 0/0
 21080 ;;		On exit  : 0/0
 21081 ;;		Unchanged: 0/0
 21082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21083 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21084 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21086 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21087 ;;Total ram usage:        3 bytes
 21088 ;; Hardware stack levels used:    1
 21089 ;; Hardware stack levels required when called:   14
 21090 ;; This function calls:
 21091 ;;		_Eeprom_Write
 21092 ;; This function is called by:
 21093 ;;		_MyApp_Task
 21094 ;; This function uses a non-reentrant model
 21095 ;;
 21096                           
 21097                           	psect	text96
 21098  006018                     __ptext96:
 21099                           	opt stack 0
 21100  006018                     _saveMasterNumber:
 21101                           	opt stack 13
 21102                           
 21103                           ; BSR set to: 0
 21104                           ;incstack = 0
 21105                           ;saveMasterNumber@address stored from wreg
 21106  006018  0100               	movlb	0	; () banked
 21107  00601A  6F90               	movwf	saveMasterNumber@address& (0+255),b
 21108                           
 21109                           ;app_gate.c: 110: phoneNumber[((UINT8)(14)) - 1] = 'M';
 21110  00601C  0100               	movlb	0	; () banked
 21111  00601E  EE20 F00D          	lfsr	2,13
 21112  006022  518E               	movf	saveMasterNumber@phoneNumber& (0+255),w,b
 21113  006024  26D9               	addwf	fsr2l,f,c
 21114  006026  518F               	movf	(saveMasterNumber@phoneNumber+1)& (0+255),w,b
 21115  006028  22DA               	addwfc	fsr2h,f,c
 21116  00602A  0E4D               	movlw	77
 21117  00602C  6EDF               	movwf	indf2,c
 21118                           
 21119                           ; BSR set to: 0
 21120                           ;app_gate.c: 111: Eeprom_Write(address, phoneNumber, ((UINT8)(14)));
 21121  00602E  C08E  F087         	movff	saveMasterNumber@phoneNumber,Eeprom_Write@WriteBuffer
 21122  006032  C08F  F088         	movff	saveMasterNumber@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 21123  006036  0E0E               	movlw	14
 21124  006038  6F89               	movwf	Eeprom_Write@DataLength& (0+255),b
 21125  00603A  5190               	movf	saveMasterNumber@address& (0+255),w,b
 21126  00603C  EC0A  F02B         	call	_Eeprom_Write
 21127  006040  0012               	return		;funcret
 21128  006042                     __end_of_saveMasterNumber:
 21129                           	opt stack 0
 21130                           tosu	equ	0xFFF
 21131                           tosh	equ	0xFFE
 21132                           tosl	equ	0xFFD
 21133                           pclath	equ	0xFFA
 21134                           tblptru	equ	0xFF8
 21135                           tblptrh	equ	0xFF7
 21136                           tblptrl	equ	0xFF6
 21137                           tablat	equ	0xFF5
 21138                           prodh	equ	0xFF4
 21139                           prodl	equ	0xFF3
 21140                           intcon	equ	0xFF2
 21141                           intcon2	equ	0xFF1
 21142                           intcon3	equ	0xFF0
 21143                           indf0	equ	0xFEF
 21144                           postinc0	equ	0xFEE
 21145                           plusw0	equ	0xFEB
 21146                           fsr0h	equ	0xFEA
 21147                           fsr0l	equ	0xFE9
 21148                           wreg	equ	0xFE8
 21149                           indf1	equ	0xFE7
 21150                           postinc1	equ	0xFE6
 21151                           postdec1	equ	0xFE5
 21152                           fsr1h	equ	0xFE2
 21153                           fsr1l	equ	0xFE1
 21154                           indf2	equ	0xFDF
 21155                           postinc2	equ	0xFDE
 21156                           postdec2	equ	0xFDD
 21157                           plusw2	equ	0xFDB
 21158                           fsr2h	equ	0xFDA
 21159                           fsr2l	equ	0xFD9
 21160                           status	equ	0xFD8
 21161                           
 21162 ;; *************** function _Eeprom_Write *****************
 21163 ;; Defined at:
 21164 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 21165 ;; Parameters:    Size  Location     Type
 21166 ;;  MemoryAddres    1    wreg     unsigned char 
 21167 ;;  WriteBuffer     2   39[BANK0 ] PTR unsigned char 
 21168 ;;		 -> memoryPreamble(5), callerNumber(14), 
 21169 ;;  DataLength      1   41[BANK0 ] unsigned char 
 21170 ;; Auto vars:     Size  Location     Type
 21171 ;;  MemoryAddres    1   43[BANK0 ] unsigned char 
 21172 ;;  CommandLengt    1   45[BANK0 ] const unsigned char 
 21173 ;;  SlaveAddress    1   44[BANK0 ] const unsigned char 
 21174 ;;  WriteSts        1   42[BANK0 ] unsigned char 
 21175 ;; Return value:  Size  Location     Type
 21176 ;;                  1    wreg      unsigned char 
 21177 ;; Registers used:
 21178 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21179 ;; Tracked objects:
 21180 ;;		On entry : 0/0
 21181 ;;		On exit  : 0/0
 21182 ;;		Unchanged: 0/0
 21183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21184 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21185 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21187 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21188 ;;Total ram usage:        7 bytes
 21189 ;; Hardware stack levels used:    1
 21190 ;; Hardware stack levels required when called:   13
 21191 ;; This function calls:
 21192 ;;		_I2cSlv_SendI2cMsg
 21193 ;;		_StringCopy
 21194 ;; This function is called by:
 21195 ;;		_saveMasterNumber
 21196 ;;		_updateMemorizedNumbersCount
 21197 ;; This function uses a non-reentrant model
 21198 ;;
 21199                           
 21200                           	psect	text97
 21201  005614                     __ptext97:
 21202                           	opt stack 0
 21203  005614                     _Eeprom_Write:
 21204                           	opt stack 13
 21205                           
 21206                           ;incstack = 0
 21207                           ;Eeprom_Write@MemoryAddress stored from wreg
 21208  005614  0100               	movlb	0	; () banked
 21209  005616  6F8B               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 21210                           
 21211                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 21212  005618  0E50               	movlw	80
 21213  00561A  0100               	movlb	0	; () banked
 21214  00561C  6F8C               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 21215                           
 21216                           ; BSR set to: 0
 21217                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 21218  00561E  2989               	incf	Eeprom_Write@DataLength& (0+255),w,b
 21219  005620  6F8D               	movwf	Eeprom_Write@CommandLength& (0+255),b
 21220                           
 21221                           ; BSR set to: 0
 21222                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 21223  005622  0E00               	movlw	0
 21224  005624  6F8A               	movwf	Eeprom_Write@WriteSts& (0+255),b
 21225                           
 21226                           ; BSR set to: 0
 21227                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 21228  005626  0E10               	movlw	16
 21229  005628  618D               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 21230  00562A  0012               	return	
 21231                           
 21232                           ; BSR set to: 0
 21233                           ;eeprom_if.c: 85: {
 21234                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 21235  00562C  C08B  F4BD         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 21236                           
 21237                           ; BSR set to: 0
 21238                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 21239  005630  C087  F07D         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 21240  005634  C088  F07E         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 21241  005638  0EBE               	movlw	low (_EepromBuffer+1)
 21242  00563A  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 21243  00563C  0E04               	movlw	high (_EepromBuffer+1)
 21244  00563E  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 21245  005640  C089  F081         	movff	Eeprom_Write@DataLength,StringCopy@Len
 21246  005644  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 21247  005646  ECCB  F028         	call	_StringCopy	;wreg free
 21248                           
 21249                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 21250  00564A  0EBD               	movlw	low _EepromBuffer
 21251  00564C  0100               	movlb	0	; () banked
 21252  00564E  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 21253  005650  0E04               	movlw	high _EepromBuffer
 21254  005652  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 21255  005654  C08C  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 21256  005658  C08D  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 21257  00565C  EC26  F02E         	call	_I2cSlv_SendI2cMsg	;wreg free
 21258  005660  0100               	movlb	0	; () banked
 21259  005662  6F8A               	movwf	Eeprom_Write@WriteSts& (0+255),b
 21260                           
 21261                           ; BSR set to: 0
 21262  005664  0012               	return	
 21263  005666                     __end_of_Eeprom_Write:
 21264                           	opt stack 0
 21265                           tosu	equ	0xFFF
 21266                           tosh	equ	0xFFE
 21267                           tosl	equ	0xFFD
 21268                           pclath	equ	0xFFA
 21269                           tblptru	equ	0xFF8
 21270                           tblptrh	equ	0xFF7
 21271                           tblptrl	equ	0xFF6
 21272                           tablat	equ	0xFF5
 21273                           prodh	equ	0xFF4
 21274                           prodl	equ	0xFF3
 21275                           intcon	equ	0xFF2
 21276                           intcon2	equ	0xFF1
 21277                           intcon3	equ	0xFF0
 21278                           indf0	equ	0xFEF
 21279                           postinc0	equ	0xFEE
 21280                           plusw0	equ	0xFEB
 21281                           fsr0h	equ	0xFEA
 21282                           fsr0l	equ	0xFE9
 21283                           wreg	equ	0xFE8
 21284                           indf1	equ	0xFE7
 21285                           postinc1	equ	0xFE6
 21286                           postdec1	equ	0xFE5
 21287                           fsr1h	equ	0xFE2
 21288                           fsr1l	equ	0xFE1
 21289                           indf2	equ	0xFDF
 21290                           postinc2	equ	0xFDE
 21291                           postdec2	equ	0xFDD
 21292                           plusw2	equ	0xFDB
 21293                           fsr2h	equ	0xFDA
 21294                           fsr2l	equ	0xFD9
 21295                           status	equ	0xFD8
 21296                           
 21297 ;; *************** function _initFsm *****************
 21298 ;; Defined at:
 21299 ;;		line 177 in file "../Source/c/04_App/app_init.c"
 21300 ;; Parameters:    Size  Location     Type
 21301 ;;		None
 21302 ;; Auto vars:     Size  Location     Type
 21303 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 21304 ;; Return value:  Size  Location     Type
 21305 ;;                  1    wreg      unsigned char 
 21306 ;; Registers used:
 21307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21308 ;; Tracked objects:
 21309 ;;		On entry : 0/0
 21310 ;;		On exit  : 0/0
 21311 ;;		Unchanged: 0/0
 21312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21314 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21316 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21317 ;;Total ram usage:        1 bytes
 21318 ;; Hardware stack levels used:    1
 21319 ;; Hardware stack levels required when called:   18
 21320 ;; This function calls:
 21321 ;;		_initEeprom
 21322 ;;		_initGprsModem
 21323 ;; This function is called by:
 21324 ;;		_MyApp_Task
 21325 ;; This function uses a non-reentrant model
 21326 ;;
 21327                           
 21328                           	psect	text98
 21329  005926                     __ptext98:
 21330                           	opt stack 0
 21331  005926                     _initFsm:
 21332                           	opt stack 9
 21333                           
 21334                           ;app_init.c: 179: static initFsmStates currentState = INIT_FSM_MODEM;
 21335                           ;app_init.c: 180: bool isInitialized = 0;
 21336                           
 21337                           ; BSR set to: 0
 21338                           ;incstack = 0
 21339  005926  0E00               	movlw	0
 21340  005928  0101               	movlb	1	; () banked
 21341  00592A  6F03               	movwf	initFsm@isInitialized& (0+255),b
 21342                           
 21343                           ;app_init.c: 182: switch (currentState)
 21344  00592C  D013               	goto	l2655
 21345  00592E                     
 21346                           ; BSR set to: 1
 21347                           ;app_init.c: 185: if (initGprsModem())
 21348                           
 21349                           ; BSR set to: 1
 21350  00592E  ECF1  F024         	call	_initGprsModem	;wreg free
 21351  005932  0900               	iorlw	0
 21352  005934  B4D8               	btfsc	status,2,c
 21353  005936  D018               	goto	l2658
 21354                           
 21355                           ;app_init.c: 186: {
 21356                           ;app_init.c: 187: currentState = INIT_FSM_EEPROM;
 21357  005938  0E01               	movlw	1
 21358  00593A  D006               	goto	L23
 21359  00593C                     
 21360                           ; BSR set to: 1
 21361                           ;app_init.c: 192: if (initEeprom())
 21362                           
 21363                           ; BSR set to: 1
 21364  00593C  EC0E  F026         	call	_initEeprom	;wreg free
 21365  005940  0900               	iorlw	0
 21366  005942  B4D8               	btfsc	status,2,c
 21367  005944  D011               	goto	l2658
 21368                           
 21369                           ;app_init.c: 193: {
 21370                           ;app_init.c: 194: currentState = INIT_FSM_COMPLETE;
 21371  005946  0E02               	movlw	2
 21372  005948                     L23:
 21373  005948  0101               	movlb	1	; () banked
 21374  00594A  6FD3               	movwf	initFsm@currentState& (0+255),b
 21375                           
 21376                           ; BSR set to: 1
 21377                           ;app_init.c: 195: }
 21378                           ;app_init.c: 196: break;
 21379  00594C  D00D               	goto	l2658
 21380  00594E                     
 21381                           ; BSR set to: 1
 21382                           ;app_init.c: 199: isInitialized = 1;
 21383                           
 21384                           ; BSR set to: 1
 21385  00594E  0E01               	movlw	1
 21386  005950  6F03               	movwf	initFsm@isInitialized& (0+255),b
 21387                           
 21388                           ; BSR set to: 1
 21389                           ;app_init.c: 204: }
 21390                           
 21391                           ; BSR set to: 1
 21392                           ;app_init.c: 203: break;
 21393                           
 21394                           ;app_init.c: 202: default:
 21395                           
 21396                           ;app_init.c: 200: break;
 21397  005952  D00A               	goto	l2658
 21398  005954                     l2655:
 21399                           
 21400                           ; BSR set to: 1
 21401                           
 21402                           ; BSR set to: 1
 21403  005954  51D3               	movf	initFsm@currentState& (0+255),w,b
 21404                           
 21405                           ; Switch size 1, requested type "space"
 21406                           ; Number of cases is 3, Range of values is 0 to 2
 21407                           ; switch strategies available:
 21408                           ; Name         Instructions Cycles
 21409                           ; simple_byte           10     6 (average)
 21410                           ;	Chosen strategy is simple_byte
 21411  005956  0A00               	xorlw	0	; case 0
 21412  005958  B4D8               	btfsc	status,2,c
 21413  00595A  D7E9               	goto	l2656
 21414  00595C  0A01               	xorlw	1	; case 1
 21415  00595E  B4D8               	btfsc	status,2,c
 21416  005960  D7ED               	goto	l2659
 21417  005962  0A03               	xorlw	3	; case 2
 21418  005964  B4D8               	btfsc	status,2,c
 21419  005966  D7F3               	goto	l2661
 21420  005968                     l2658:
 21421                           
 21422                           ;app_init.c: 205: return isInitialized;
 21423                           
 21424                           ; BSR set to: 1
 21425  005968  0101               	movlb	1	; () banked
 21426  00596A  5103               	movf	initFsm@isInitialized& (0+255),w,b
 21427  00596C  0012               	return	
 21428  00596E                     __end_of_initFsm:
 21429                           	opt stack 0
 21430                           tosu	equ	0xFFF
 21431                           tosh	equ	0xFFE
 21432                           tosl	equ	0xFFD
 21433                           pclath	equ	0xFFA
 21434                           tblptru	equ	0xFF8
 21435                           tblptrh	equ	0xFF7
 21436                           tblptrl	equ	0xFF6
 21437                           tablat	equ	0xFF5
 21438                           prodh	equ	0xFF4
 21439                           prodl	equ	0xFF3
 21440                           intcon	equ	0xFF2
 21441                           intcon2	equ	0xFF1
 21442                           intcon3	equ	0xFF0
 21443                           indf0	equ	0xFEF
 21444                           postinc0	equ	0xFEE
 21445                           plusw0	equ	0xFEB
 21446                           fsr0h	equ	0xFEA
 21447                           fsr0l	equ	0xFE9
 21448                           wreg	equ	0xFE8
 21449                           indf1	equ	0xFE7
 21450                           postinc1	equ	0xFE6
 21451                           postdec1	equ	0xFE5
 21452                           fsr1h	equ	0xFE2
 21453                           fsr1l	equ	0xFE1
 21454                           indf2	equ	0xFDF
 21455                           postinc2	equ	0xFDE
 21456                           postdec2	equ	0xFDD
 21457                           plusw2	equ	0xFDB
 21458                           fsr2h	equ	0xFDA
 21459                           fsr2l	equ	0xFD9
 21460                           status	equ	0xFD8
 21461                           
 21462 ;; *************** function _initGprsModem *****************
 21463 ;; Defined at:
 21464 ;;		line 84 in file "../Source/c/04_App/app_init.c"
 21465 ;; Parameters:    Size  Location     Type
 21466 ;;		None
 21467 ;; Auto vars:     Size  Location     Type
 21468 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 21469 ;; Return value:  Size  Location     Type
 21470 ;;                  1    wreg      unsigned char 
 21471 ;; Registers used:
 21472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21473 ;; Tracked objects:
 21474 ;;		On entry : 0/0
 21475 ;;		On exit  : 0/0
 21476 ;;		Unchanged: 0/0
 21477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21479 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21481 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21482 ;;Total ram usage:        1 bytes
 21483 ;; Hardware stack levels used:    1
 21484 ;; Hardware stack levels required when called:   14
 21485 ;; This function calls:
 21486 ;;		_Mdm_SetSmsFormat
 21487 ;;		_Uart_WriteConstString
 21488 ;;		_secondsAppTimer
 21489 ;; This function is called by:
 21490 ;;		_initFsm
 21491 ;; This function uses a non-reentrant model
 21492 ;;
 21493                           
 21494                           	psect	text99
 21495  0049E2                     __ptext99:
 21496                           	opt stack 0
 21497  0049E2                     _initGprsModem:
 21498                           	opt stack 12
 21499                           
 21500                           ;app_init.c: 86: static uint16_t modemCounter = 0;
 21501                           ;app_init.c: 87: static modemStates currentState = MODEM_INIT;
 21502                           ;app_init.c: 88: bool isInitialized = 0;
 21503                           
 21504                           ; BSR set to: 1
 21505                           ;incstack = 0
 21506  0049E2  0E00               	movlw	0
 21507  0049E4  0100               	movlb	0	; () banked
 21508  0049E6  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21509                           
 21510                           ;app_init.c: 90: switch(currentState)
 21511  0049E8  D033               	goto	l2625
 21512  0049EA                     
 21513                           ;app_init.c: 93: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 21514                           
 21515                           ; BSR set to: 0
 21516  0049EA  0E03               	movlw	3
 21517  0049EC  0100               	movlb	0	; () banked
 21518  0049EE  19D2               	xorwf	_MdmStatus& (0+255),w,b
 21519  0049F0  B4D8               	btfsc	status,2,c
 21520  0049F2  D003               	goto	u13400
 21521                           
 21522                           ; BSR set to: 0
 21523  0049F4  05D2               	decf	_MdmStatus& (0+255),w,b
 21524  0049F6  A4D8               	btfss	status,2,c
 21525  0049F8  D039               	goto	l2631
 21526  0049FA                     u13400:
 21527                           
 21528                           ; BSR set to: 0
 21529                           ;app_init.c: 94: {
 21530                           ;app_init.c: 95: if (secondsAppTimer(4, &modemCounter, 0))
 21531                           
 21532                           ; BSR set to: 0
 21533  0049FA  0EBE               	movlw	low initGprsModem@modemCounter
 21534  0049FC  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21535  0049FE  0E03               	movlw	high initGprsModem@modemCounter
 21536  004A00  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21537  004A02  0E00               	movlw	0
 21538  004A04  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21539  004A06  0E04               	movlw	4
 21540  004A08  EC8B  F022         	call	_secondsAppTimer
 21541  004A0C  0900               	iorlw	0
 21542  004A0E  B4D8               	btfsc	status,2,c
 21543  004A10  D02D               	goto	l2631
 21544                           
 21545                           ;app_init.c: 96: {
 21546                           ;app_init.c: 97: Mdm_SetSmsFormat(1);
 21547  004A12  0E01               	movlw	1
 21548  004A14  ECAC  F02B         	call	_Mdm_SetSmsFormat
 21549                           
 21550                           ;app_init.c: 98: currentState = MODEM_DELETE_SMS;
 21551  004A18  0E01               	movlw	1
 21552  004A1A  D013               	goto	L25
 21553  004A1C                     
 21554                           ; BSR set to: 1
 21555                           ;app_init.c: 104: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 21556                           
 21557                           ; BSR set to: 1
 21558  004A1C  0EF9               	movlw	low STR_30
 21559  004A1E  0100               	movlb	0	; () banked
 21560  004A20  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21561  004A22  0EFE               	movlw	high STR_30
 21562  004A24  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21563  004A26  0E01               	movlw	1
 21564  004A28  EC85  F02D         	call	_Uart_WriteConstString
 21565                           
 21566                           ;app_init.c: 105: currentState = MODEM_SET_CALLER_ID;
 21567  004A2C  0E02               	movlw	2
 21568  004A2E  D009               	goto	L25
 21569  004A30                     
 21570                           ; BSR set to: 1
 21571                           ;app_init.c: 109: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 21572                           
 21573                           ; BSR set to: 1
 21574  004A30  0EA9               	movlw	low STR_31
 21575  004A32  0100               	movlb	0	; () banked
 21576  004A34  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21577  004A36  0EFF               	movlw	high STR_31
 21578  004A38  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21579  004A3A  0E01               	movlw	1
 21580  004A3C  EC85  F02D         	call	_Uart_WriteConstString
 21581                           
 21582                           ;app_init.c: 110: currentState = MODEM_INIT_COMPLETE;
 21583  004A40  0E03               	movlw	3
 21584  004A42                     L25:
 21585  004A42  0101               	movlb	1	; () banked
 21586  004A44  6FD5               	movwf	initGprsModem@currentState& (0+255),b
 21587                           
 21588                           ;app_init.c: 111: break;
 21589  004A46  D012               	goto	l2631
 21590  004A48                     
 21591                           ; BSR set to: 1
 21592                           ;app_init.c: 114: isInitialized = 1;
 21593                           
 21594                           ; BSR set to: 1
 21595  004A48  0E01               	movlw	1
 21596  004A4A  0100               	movlb	0	; () banked
 21597  004A4C  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21598                           
 21599                           ; BSR set to: 0
 21600                           ;app_init.c: 119: }
 21601                           
 21602                           ; BSR set to: 0
 21603                           ;app_init.c: 118: break;
 21604                           
 21605                           ;app_init.c: 117: default:
 21606                           
 21607                           ;app_init.c: 115: break;
 21608  004A4E  D00E               	goto	l2631
 21609  004A50                     l2625:
 21610                           
 21611                           ; BSR set to: 0
 21612                           
 21613                           ; BSR set to: 0
 21614  004A50  0101               	movlb	1	; () banked
 21615  004A52  51D5               	movf	initGprsModem@currentState& (0+255),w,b
 21616                           
 21617                           ; Switch size 1, requested type "space"
 21618                           ; Number of cases is 4, Range of values is 0 to 3
 21619                           ; switch strategies available:
 21620                           ; Name         Instructions Cycles
 21621                           ; simple_byte           13     7 (average)
 21622                           ;	Chosen strategy is simple_byte
 21623  004A54  0A00               	xorlw	0	; case 0
 21624  004A56  B4D8               	btfsc	status,2,c
 21625  004A58  D7C8               	goto	l2626
 21626  004A5A  0A01               	xorlw	1	; case 1
 21627  004A5C  B4D8               	btfsc	status,2,c
 21628  004A5E  D7DE               	goto	l2632
 21629  004A60  0A03               	xorlw	3	; case 2
 21630  004A62  B4D8               	btfsc	status,2,c
 21631  004A64  D7E5               	goto	l2633
 21632  004A66  0A01               	xorlw	1	; case 3
 21633  004A68  B4D8               	btfsc	status,2,c
 21634  004A6A  D7EE               	goto	l2634
 21635  004A6C                     l2631:
 21636                           
 21637                           ;app_init.c: 120: return isInitialized;
 21638                           
 21639                           ; BSR set to: 1
 21640  004A6C  0100               	movlb	0	; () banked
 21641  004A6E  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 21642  004A70  0012               	return	
 21643  004A72                     __end_of_initGprsModem:
 21644                           	opt stack 0
 21645                           tosu	equ	0xFFF
 21646                           tosh	equ	0xFFE
 21647                           tosl	equ	0xFFD
 21648                           pclath	equ	0xFFA
 21649                           tblptru	equ	0xFF8
 21650                           tblptrh	equ	0xFF7
 21651                           tblptrl	equ	0xFF6
 21652                           tablat	equ	0xFF5
 21653                           prodh	equ	0xFF4
 21654                           prodl	equ	0xFF3
 21655                           intcon	equ	0xFF2
 21656                           intcon2	equ	0xFF1
 21657                           intcon3	equ	0xFF0
 21658                           indf0	equ	0xFEF
 21659                           postinc0	equ	0xFEE
 21660                           plusw0	equ	0xFEB
 21661                           fsr0h	equ	0xFEA
 21662                           fsr0l	equ	0xFE9
 21663                           wreg	equ	0xFE8
 21664                           indf1	equ	0xFE7
 21665                           postinc1	equ	0xFE6
 21666                           postdec1	equ	0xFE5
 21667                           fsr1h	equ	0xFE2
 21668                           fsr1l	equ	0xFE1
 21669                           indf2	equ	0xFDF
 21670                           postinc2	equ	0xFDE
 21671                           postdec2	equ	0xFDD
 21672                           plusw2	equ	0xFDB
 21673                           fsr2h	equ	0xFDA
 21674                           fsr2l	equ	0xFD9
 21675                           status	equ	0xFD8
 21676                           
 21677 ;; *************** function _secondsAppTimer *****************
 21678 ;; Defined at:
 21679 ;;		line 66 in file "../Source/c/04_App/app_utils.c"
 21680 ;; Parameters:    Size  Location     Type
 21681 ;;  seconds         1    wreg     unsigned char 
 21682 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 21683 ;;		 -> setupCallTicks(2), initGprsModem@modemCounter(2), 
 21684 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 21685 ;; Auto vars:     Size  Location     Type
 21686 ;;  seconds         1   47[BANK0 ] unsigned char 
 21687 ;;  destinationT    2   49[BANK0 ] unsigned int 
 21688 ;;  isExpired       1   48[BANK0 ] unsigned char 
 21689 ;; Return value:  Size  Location     Type
 21690 ;;                  1    wreg      unsigned char 
 21691 ;; Registers used:
 21692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21693 ;; Tracked objects:
 21694 ;;		On entry : 0/0
 21695 ;;		On exit  : 0/0
 21696 ;;		Unchanged: 0/0
 21697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21698 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21699 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21700 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21701 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21702 ;;Total ram usage:        9 bytes
 21703 ;; Hardware stack levels used:    1
 21704 ;; Hardware stack levels required when called:   12
 21705 ;; This function calls:
 21706 ;;		___lwdiv
 21707 ;;		___wmul
 21708 ;; This function is called by:
 21709 ;;		_initGprsModem
 21710 ;;		_waitSetupCall
 21711 ;;		_blinkForSeconds
 21712 ;; This function uses a non-reentrant model
 21713 ;;
 21714                           
 21715                           	psect	text100
 21716  004516                     __ptext100:
 21717                           	opt stack 0
 21718  004516                     _secondsAppTimer:
 21719                           	opt stack 14
 21720                           
 21721                           ; BSR set to: 0
 21722                           ;incstack = 0
 21723                           ;secondsAppTimer@seconds stored from wreg
 21724  004516  0100               	movlb	0	; () banked
 21725  004518  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 21726                           
 21727                           ;app_utils.c: 68: bool isExpired = 1;
 21728  00451A  0E01               	movlw	1
 21729  00451C  0100               	movlb	0	; () banked
 21730  00451E  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21731                           
 21732                           ; BSR set to: 0
 21733                           ;app_utils.c: 69: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 21734  004520  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 21735  004524  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 21736  004526  0E03               	movlw	3
 21737  004528  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21738  00452A  0EE8               	movlw	232
 21739  00452C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 21740  00452E  EC35  F030         	call	___wmul	;wreg free
 21741  004532  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 21742  004536  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 21743  00453A  0E00               	movlw	0
 21744  00453C  0100               	movlb	0	; () banked
 21745  00453E  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21746  004540  0E64               	movlw	100
 21747  004542  6F85               	movwf	___lwdiv@divisor& (0+255),b
 21748  004544  ECE0  F02A         	call	___lwdiv	;wreg free
 21749  004548  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 21750  00454C  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 21751                           
 21752                           ;app_utils.c: 71: if (*counter < destinationTicks)
 21753  004550  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21754  004554  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21755  004558  0100               	movlb	0	; () banked
 21756  00455A  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21757  00455C  5CDE               	subwf	postinc2,w,c
 21758  00455E  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21759  004560  58DE               	subwfb	postinc2,w,c
 21760  004562  B0D8               	btfsc	status,0,c
 21761  004564  D009               	goto	l2677
 21762                           
 21763                           ; BSR set to: 0
 21764                           ;app_utils.c: 72: {
 21765                           ;app_utils.c: 73: *counter += 1;
 21766  004566  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21767  00456A  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21768  00456E  2ADE               	incf	postinc2,f,c
 21769  004570  0E00               	movlw	0
 21770  004572  22DD               	addwfc	postdec2,f,c
 21771                           
 21772                           ; BSR set to: 0
 21773                           ;app_utils.c: 74: isExpired = 0;
 21774  004574  0E00               	movlw	0
 21775  004576  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21776  004578                     l2677:
 21777                           
 21778                           ; BSR set to: 0
 21779                           ;app_utils.c: 75: }
 21780                           ;app_utils.c: 76: if (*counter == destinationTicks)
 21781                           
 21782                           ; BSR set to: 0
 21783  004578  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21784  00457C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21785  004580  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21786  004582  18DE               	xorwf	postinc2,w,c
 21787  004584  E117               	bnz	l13342
 21788  004586  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21789  004588  18DE               	xorwf	postinc2,w,c
 21790  00458A  A4D8               	btfss	status,2,c
 21791  00458C  D013               	goto	l2680
 21792                           
 21793                           ; BSR set to: 0
 21794                           ;app_utils.c: 77: {
 21795                           ;app_utils.c: 78: if (isCyclic)
 21796  00458E  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 21797  004590  B4D8               	btfsc	status,2,c
 21798  004592  D008               	goto	l2679
 21799                           
 21800                           ; BSR set to: 0
 21801                           ;app_utils.c: 79: {
 21802                           ;app_utils.c: 80: *counter = 0;
 21803  004594  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21804  004598  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21805  00459C  0E00               	movlw	0
 21806  00459E  6EDE               	movwf	postinc2,c
 21807  0045A0  0E00               	movlw	0
 21808  0045A2  D007               	goto	L26
 21809  0045A4                     l2679:
 21810                           
 21811                           ; BSR set to: 0
 21812                           ;app_utils.c: 82: else
 21813                           ;app_utils.c: 83: {
 21814                           ;app_utils.c: 84: *counter = 0xFFFF;
 21815                           
 21816                           ; BSR set to: 0
 21817  0045A4  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21818  0045A8  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21819  0045AC  0EFF               	movlw	255
 21820  0045AE  6EDE               	movwf	postinc2,c
 21821  0045B0  0EFF               	movlw	255
 21822  0045B2                     L26:
 21823  0045B2  6EDD               	movwf	postdec2,c
 21824  0045B4                     l2680:
 21825  0045B4                     l13342:
 21826                           
 21827                           ; BSR set to: 0
 21828                           ;app_utils.c: 85: }
 21829                           ;app_utils.c: 86: }
 21830                           ;app_utils.c: 87: return isExpired;
 21831  0045B4  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 21832  0045B6  0012               	return	
 21833  0045B8                     __end_of_secondsAppTimer:
 21834                           	opt stack 0
 21835                           tosu	equ	0xFFF
 21836                           tosh	equ	0xFFE
 21837                           tosl	equ	0xFFD
 21838                           pclath	equ	0xFFA
 21839                           tblptru	equ	0xFF8
 21840                           tblptrh	equ	0xFF7
 21841                           tblptrl	equ	0xFF6
 21842                           tablat	equ	0xFF5
 21843                           prodh	equ	0xFF4
 21844                           prodl	equ	0xFF3
 21845                           intcon	equ	0xFF2
 21846                           intcon2	equ	0xFF1
 21847                           intcon3	equ	0xFF0
 21848                           indf0	equ	0xFEF
 21849                           postinc0	equ	0xFEE
 21850                           plusw0	equ	0xFEB
 21851                           fsr0h	equ	0xFEA
 21852                           fsr0l	equ	0xFE9
 21853                           wreg	equ	0xFE8
 21854                           indf1	equ	0xFE7
 21855                           postinc1	equ	0xFE6
 21856                           postdec1	equ	0xFE5
 21857                           fsr1h	equ	0xFE2
 21858                           fsr1l	equ	0xFE1
 21859                           indf2	equ	0xFDF
 21860                           postinc2	equ	0xFDE
 21861                           postdec2	equ	0xFDD
 21862                           plusw2	equ	0xFDB
 21863                           fsr2h	equ	0xFDA
 21864                           fsr2l	equ	0xFD9
 21865                           status	equ	0xFD8
 21866                           
 21867 ;; *************** function _Mdm_SetSmsFormat *****************
 21868 ;; Defined at:
 21869 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21870 ;; Parameters:    Size  Location     Type
 21871 ;;  TextFormat      1    wreg     unsigned char 
 21872 ;; Auto vars:     Size  Location     Type
 21873 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 21874 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 21875 ;;  Index           1   35[BANK0 ] unsigned char 
 21876 ;; Return value:  Size  Location     Type
 21877 ;;                  1    wreg      void 
 21878 ;; Registers used:
 21879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21880 ;; Tracked objects:
 21881 ;;		On entry : 0/0
 21882 ;;		On exit  : 0/0
 21883 ;;		Unchanged: 0/0
 21884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21886 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21888 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21889 ;;Total ram usage:       22 bytes
 21890 ;; Hardware stack levels used:    1
 21891 ;; Hardware stack levels required when called:   13
 21892 ;; This function calls:
 21893 ;;		_Uart_WriteString
 21894 ;; This function is called by:
 21895 ;;		_initGprsModem
 21896 ;; This function uses a non-reentrant model
 21897 ;;
 21898                           
 21899                           	psect	text101
 21900  005758                     __ptext101:
 21901                           	opt stack 0
 21902  005758                     _Mdm_SetSmsFormat:
 21903                           	opt stack 12
 21904                           
 21905                           ; BSR set to: 0
 21906                           ;incstack = 0
 21907                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 21908  005758  0100               	movlb	0	; () banked
 21909  00575A  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 21910                           
 21911                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 21912                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 21913  00575C  0E00               	movlw	0
 21914  00575E  0100               	movlb	0	; () banked
 21915  005760  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 21916                           
 21917                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 21918  005762  0E41               	movlw	65
 21919  005764  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 21920                           
 21921                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 21922  005766  0E54               	movlw	84
 21923  005768  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 21924                           
 21925                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 21926  00576A  0E2B               	movlw	43
 21927  00576C  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 21928                           
 21929                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 21930  00576E  0E43               	movlw	67
 21931  005770  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 21932                           
 21933                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 21934  005772  0E4D               	movlw	77
 21935  005774  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 21936                           
 21937                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 21938  005776  0E47               	movlw	71
 21939  005778  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 21940                           
 21941                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 21942  00577A  0E46               	movlw	70
 21943  00577C  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 21944                           
 21945                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 21946  00577E  0E3D               	movlw	61
 21947  005780  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 21948                           
 21949                           ; BSR set to: 0
 21950                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 21951  005782  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 21952  005784  A4D8               	btfss	status,2,c
 21953  005786  D002               	goto	l1121
 21954                           
 21955                           ; BSR set to: 0
 21956                           ;mdm_gsm_gprs.c: 854: {
 21957                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 21958  005788  0E31               	movlw	49
 21959  00578A  D001               	goto	L27
 21960  00578C                     l1121:
 21961                           
 21962                           ; BSR set to: 0
 21963                           ;mdm_gsm_gprs.c: 857: else
 21964                           ;mdm_gsm_gprs.c: 858: {
 21965                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 21966                           
 21967                           ; BSR set to: 0
 21968  00578C  0E30               	movlw	48
 21969  00578E                     L27:
 21970  00578E  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 21971                           
 21972                           ; BSR set to: 0
 21973                           ;mdm_gsm_gprs.c: 860: }
 21974                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 21975  005790  0E0D               	movlw	13
 21976  005792  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 21977                           
 21978                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 21979  005794  0E00               	movlw	0
 21980  005796  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 21981                           
 21982                           ; BSR set to: 0
 21983                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 21984  005798  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 21985  00579A  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 21986  00579C  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 21987  00579E  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 21988  0057A0  0E01               	movlw	1
 21989  0057A2  EC45  F02E         	call	_Uart_WriteString
 21990  0057A6  0012               	return		;funcret
 21991  0057A8                     __end_of_Mdm_SetSmsFormat:
 21992                           	opt stack 0
 21993                           tosu	equ	0xFFF
 21994                           tosh	equ	0xFFE
 21995                           tosl	equ	0xFFD
 21996                           pclath	equ	0xFFA
 21997                           tblptru	equ	0xFF8
 21998                           tblptrh	equ	0xFF7
 21999                           tblptrl	equ	0xFF6
 22000                           tablat	equ	0xFF5
 22001                           prodh	equ	0xFF4
 22002                           prodl	equ	0xFF3
 22003                           intcon	equ	0xFF2
 22004                           intcon2	equ	0xFF1
 22005                           intcon3	equ	0xFF0
 22006                           indf0	equ	0xFEF
 22007                           postinc0	equ	0xFEE
 22008                           plusw0	equ	0xFEB
 22009                           fsr0h	equ	0xFEA
 22010                           fsr0l	equ	0xFE9
 22011                           wreg	equ	0xFE8
 22012                           indf1	equ	0xFE7
 22013                           postinc1	equ	0xFE6
 22014                           postdec1	equ	0xFE5
 22015                           fsr1h	equ	0xFE2
 22016                           fsr1l	equ	0xFE1
 22017                           indf2	equ	0xFDF
 22018                           postinc2	equ	0xFDE
 22019                           postdec2	equ	0xFDD
 22020                           plusw2	equ	0xFDB
 22021                           fsr2h	equ	0xFDA
 22022                           fsr2l	equ	0xFD9
 22023                           status	equ	0xFD8
 22024                           
 22025 ;; *************** function _initEeprom *****************
 22026 ;; Defined at:
 22027 ;;		line 127 in file "../Source/c/04_App/app_init.c"
 22028 ;; Parameters:    Size  Location     Type
 22029 ;;		None
 22030 ;; Auto vars:     Size  Location     Type
 22031 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22032 ;;  memoryOpResu    1    1[BANK1 ] enum E8244
 22033 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22034 ;; Return value:  Size  Location     Type
 22035 ;;                  1    wreg      unsigned char 
 22036 ;; Registers used:
 22037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22038 ;; Tracked objects:
 22039 ;;		On entry : 0/0
 22040 ;;		On exit  : 0/0
 22041 ;;		Unchanged: 0/0
 22042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22044 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22046 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22047 ;;Total ram usage:        3 bytes
 22048 ;; Hardware stack levels used:    1
 22049 ;; Hardware stack levels required when called:   17
 22050 ;; This function calls:
 22051 ;;		_Eeprom_Read
 22052 ;; This function is called by:
 22053 ;;		_initFsm
 22054 ;; This function uses a non-reentrant model
 22055 ;;
 22056                           
 22057                           	psect	text102
 22058  004C1C                     __ptext102:
 22059                           	opt stack 0
 22060  004C1C                     _initEeprom:
 22061                           	opt stack 9
 22062                           
 22063                           ;app_init.c: 129: const uint8_t addressToRead = 0;
 22064                           
 22065                           ;incstack = 0
 22066  004C1C  0E00               	movlw	0
 22067  004C1E  0101               	movlb	1	; () banked
 22068  004C20  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22069                           
 22070                           ;app_init.c: 130: static eepromStates currentState = EEPROM_INIT;
 22071                           ;app_init.c: 131: EepromStsType memoryOpResult = OP_PENDING;
 22072  004C22  0E02               	movlw	2
 22073  004C24  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22074                           
 22075                           ;app_init.c: 132: bool isInitialized = 0;
 22076  004C26  0E00               	movlw	0
 22077  004C28  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22078                           
 22079                           ;app_init.c: 134: switch (currentState)
 22080  004C2A  D031               	goto	l2641
 22081  004C2C                     
 22082                           ; BSR set to: 1
 22083                           ;app_init.c: 137: memoryOpResult = Eeprom_Read(0, memoryPreamble, 5);
 22084                           
 22085                           ; BSR set to: 1
 22086  004C2C  0E9D               	movlw	low _memoryPreamble
 22087  004C2E  0100               	movlb	0	; () banked
 22088  004C30  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 22089  004C32  0E03               	movlw	high _memoryPreamble
 22090  004C34  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 22091  004C36  0E05               	movlw	5
 22092  004C38  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 22093  004C3A  0E00               	movlw	0
 22094  004C3C  EC8C  F02A         	call	_Eeprom_Read
 22095  004C40  0101               	movlb	1	; () banked
 22096  004C42  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22097                           
 22098                           ; BSR set to: 1
 22099                           ;app_init.c: 138: if (memoryOpResult != OP_PENDING)
 22100  004C44  0E02               	movlw	2
 22101  004C46  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 22102  004C48  B4D8               	btfsc	status,2,c
 22103  004C4A  D02B               	goto	l2646
 22104                           
 22105                           ; BSR set to: 1
 22106                           ;app_init.c: 139: {
 22107                           ;app_init.c: 140: if (memoryPreamble[0] == 'U' &&
 22108                           ;app_init.c: 141: memoryPreamble[1] == 'S' &&
 22109                           ;app_init.c: 142: memoryPreamble[2] == 'I' &&
 22110                           ;app_init.c: 143: memoryPreamble[3] == 'M')
 22111  004C4C  0E55               	movlw	85
 22112  004C4E  0103               	movlb	3	; () banked
 22113  004C50  199D               	xorwf	_memoryPreamble& (0+255),w,b
 22114  004C52  A4D8               	btfss	status,2,c
 22115  004C54  D00E               	goto	l2644
 22116                           
 22117                           ; BSR set to: 3
 22118  004C56  0E53               	movlw	83
 22119  004C58  199E               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 22120  004C5A  A4D8               	btfss	status,2,c
 22121  004C5C  D00A               	goto	l2644
 22122                           
 22123                           ; BSR set to: 3
 22124  004C5E  0E49               	movlw	73
 22125  004C60  199F               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 22126  004C62  A4D8               	btfss	status,2,c
 22127  004C64  D006               	goto	l2644
 22128                           
 22129                           ; BSR set to: 3
 22130  004C66  0E4D               	movlw	77
 22131  004C68  19A0               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 22132  004C6A  A4D8               	btfss	status,2,c
 22133  004C6C  D002               	goto	l2644
 22134                           
 22135                           ; BSR set to: 3
 22136                           ;app_init.c: 144: {
 22137                           ;app_init.c: 145: currentState = EEPROM_NOT_EMPTY;
 22138  004C6E  0E02               	movlw	2
 22139  004C70  D003               	goto	L28
 22140  004C72                     l2644:
 22141                           
 22142                           ; BSR set to: 3
 22143                           ;app_init.c: 147: else
 22144                           ;app_init.c: 148: {
 22145                           ;app_init.c: 149: memorizedNumbersCount[0] = memoryPreamble[4];
 22146  004C72  C3A1  F1D6         	movff	_memoryPreamble+4,_memorizedNumbersCount
 22147                           
 22148                           ; BSR set to: 3
 22149                           ;app_init.c: 150: currentState = EEPROM_EMPTY;
 22150  004C76  0E01               	movlw	1
 22151  004C78                     L28:
 22152  004C78  0101               	movlb	1	; () banked
 22153  004C7A  6FD4               	movwf	initEeprom@currentState& (0+255),b
 22154                           
 22155                           ; BSR set to: 1
 22156                           ;app_init.c: 151: }
 22157                           ;app_init.c: 152: }
 22158                           ;app_init.c: 153: break;
 22159                           
 22160                           ; BSR set to: 1
 22161  004C7C  D012               	goto	l2646
 22162  004C7E                     
 22163                           ; BSR set to: 1
 22164                           ;app_init.c: 156: isInitialized = 1;
 22165                           
 22166                           ; BSR set to: 1
 22167  004C7E  0E01               	movlw	1
 22168  004C80  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22169                           
 22170                           ;app_init.c: 157: break;
 22171  004C82  D00F               	goto	l2646
 22172  004C84                     
 22173                           ; BSR set to: 1
 22174                           ;app_init.c: 160: isInitialized = 1;
 22175                           
 22176                           ; BSR set to: 1
 22177  004C84  0E01               	movlw	1
 22178  004C86  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22179                           
 22180                           ;app_init.c: 161: isMemoryEmpty = 0;
 22181  004C88  0E00               	movlw	0
 22182  004C8A  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 22183                           
 22184                           ; BSR set to: 1
 22185                           ;app_init.c: 166: }
 22186                           
 22187                           ; BSR set to: 1
 22188                           ;app_init.c: 165: break;
 22189                           
 22190                           ;app_init.c: 164: default:
 22191                           
 22192                           ;app_init.c: 162: break;
 22193  004C8C  D00A               	goto	l2646
 22194  004C8E                     l2641:
 22195                           
 22196                           ; BSR set to: 1
 22197                           
 22198                           ; BSR set to: 1
 22199  004C8E  51D4               	movf	initEeprom@currentState& (0+255),w,b
 22200                           
 22201                           ; Switch size 1, requested type "space"
 22202                           ; Number of cases is 3, Range of values is 0 to 2
 22203                           ; switch strategies available:
 22204                           ; Name         Instructions Cycles
 22205                           ; simple_byte           10     6 (average)
 22206                           ;	Chosen strategy is simple_byte
 22207  004C90  0A00               	xorlw	0	; case 0
 22208  004C92  B4D8               	btfsc	status,2,c
 22209  004C94  D7CB               	goto	l2642
 22210  004C96  0A01               	xorlw	1	; case 1
 22211  004C98  B4D8               	btfsc	status,2,c
 22212  004C9A  D7F1               	goto	l2647
 22213  004C9C  0A03               	xorlw	3	; case 2
 22214  004C9E  B4D8               	btfsc	status,2,c
 22215  004CA0  D7F1               	goto	l2648
 22216  004CA2                     l2646:
 22217                           
 22218                           ; BSR set to: 1
 22219                           ;app_init.c: 167: return isInitialized;
 22220                           
 22221                           ; BSR set to: 1
 22222  004CA2  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 22223  004CA4  0012               	return	
 22224  004CA6                     __end_of_initEeprom:
 22225                           	opt stack 0
 22226                           tosu	equ	0xFFF
 22227                           tosh	equ	0xFFE
 22228                           tosl	equ	0xFFD
 22229                           pclath	equ	0xFFA
 22230                           tblptru	equ	0xFF8
 22231                           tblptrh	equ	0xFF7
 22232                           tblptrl	equ	0xFF6
 22233                           tablat	equ	0xFF5
 22234                           prodh	equ	0xFF4
 22235                           prodl	equ	0xFF3
 22236                           intcon	equ	0xFF2
 22237                           intcon2	equ	0xFF1
 22238                           intcon3	equ	0xFF0
 22239                           indf0	equ	0xFEF
 22240                           postinc0	equ	0xFEE
 22241                           plusw0	equ	0xFEB
 22242                           fsr0h	equ	0xFEA
 22243                           fsr0l	equ	0xFE9
 22244                           wreg	equ	0xFE8
 22245                           indf1	equ	0xFE7
 22246                           postinc1	equ	0xFE6
 22247                           postdec1	equ	0xFE5
 22248                           fsr1h	equ	0xFE2
 22249                           fsr1l	equ	0xFE1
 22250                           indf2	equ	0xFDF
 22251                           postinc2	equ	0xFDE
 22252                           postdec2	equ	0xFDD
 22253                           plusw2	equ	0xFDB
 22254                           fsr2h	equ	0xFDA
 22255                           fsr2l	equ	0xFD9
 22256                           status	equ	0xFD8
 22257                           
 22258 ;; *************** function _Eeprom_Read *****************
 22259 ;; Defined at:
 22260 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 22261 ;; Parameters:    Size  Location     Type
 22262 ;;  MemoryAddres    1    wreg     unsigned char 
 22263 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 22264 ;;		 -> memoryPreamble(5), 
 22265 ;;  DataLength      1   75[BANK0 ] unsigned char 
 22266 ;; Auto vars:     Size  Location     Type
 22267 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 22268 ;;  QuerySts        1   79[BANK0 ] enum E8930
 22269 ;;  ReadSts         1   78[BANK0 ] enum E8956
 22270 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 22271 ;; Return value:  Size  Location     Type
 22272 ;;                  1    wreg      enum E8956
 22273 ;; Registers used:
 22274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22275 ;; Tracked objects:
 22276 ;;		On entry : 0/0
 22277 ;;		On exit  : 0/0
 22278 ;;		Unchanged: 0/0
 22279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22280 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22281 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22283 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22284 ;;Total ram usage:        7 bytes
 22285 ;; Hardware stack levels used:    1
 22286 ;; Hardware stack levels required when called:   16
 22287 ;; This function calls:
 22288 ;;		_I2cSlv_QueryI2cData
 22289 ;; This function is called by:
 22290 ;;		_initEeprom
 22291 ;; This function uses a non-reentrant model
 22292 ;;
 22293                           
 22294                           	psect	text103
 22295  005518                     __ptext103:
 22296                           	opt stack 0
 22297  005518                     _Eeprom_Read:
 22298                           	opt stack 9
 22299                           
 22300                           ; BSR set to: 1
 22301                           ;incstack = 0
 22302                           ;Eeprom_Read@MemoryAddress stored from wreg
 22303  005518  0100               	movlb	0	; () banked
 22304  00551A  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 22305                           
 22306                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 22307  00551C  0E50               	movlw	80
 22308  00551E  0100               	movlb	0	; () banked
 22309  005520  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 22310                           
 22311                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 22312  005522  0E00               	movlw	0
 22313  005524  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 22314                           
 22315                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 22316  005526  0E02               	movlw	2
 22317  005528  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 22318                           
 22319                           ; BSR set to: 0
 22320                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 22321  00552A  C0AC  F1FC         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 22322                           
 22323                           ; BSR set to: 0
 22324                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 22325  00552E  0EFC               	movlw	low _ReadAddress
 22326  005530  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 22327  005532  0E01               	movlw	high _ReadAddress
 22328  005534  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 22329  005536  0E01               	movlw	1
 22330  005538  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 22331  00553A  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 22332  00553E  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 22333  005542  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 22334  005546  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 22335  00554A  ECD3  F01B         	call	_I2cSlv_QueryI2cData	;wreg free
 22336  00554E  0100               	movlb	0	; () banked
 22337  005550  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 22338                           
 22339                           ; BSR set to: 0
 22340                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 22341  005552  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 22342  005554  A4D8               	btfss	status,2,c
 22343  005556  D002               	goto	l2032
 22344                           
 22345                           ; BSR set to: 0
 22346                           ;eeprom_if.c: 114: {
 22347                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 22348  005558  0E00               	movlw	0
 22349  00555A  D005               	goto	L29
 22350  00555C                     l2032:
 22351                           
 22352                           ; BSR set to: 0
 22353                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 22354                           
 22355                           ; BSR set to: 0
 22356  00555C  0E02               	movlw	2
 22357  00555E  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 22358  005560  A4D8               	btfss	status,2,c
 22359  005562  D002               	goto	l2034
 22360                           
 22361                           ; BSR set to: 0
 22362                           ;eeprom_if.c: 118: {
 22363                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 22364  005564  0E01               	movlw	1
 22365  005566                     L29:
 22366  005566  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 22367  005568                     l2034:
 22368                           
 22369                           ; BSR set to: 0
 22370                           ;eeprom_if.c: 120: }
 22371                           ;eeprom_if.c: 121: return ReadSts;
 22372                           
 22373                           ; BSR set to: 0
 22374  005568  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 22375  00556A  0012               	return	
 22376  00556C                     __end_of_Eeprom_Read:
 22377                           	opt stack 0
 22378                           tosu	equ	0xFFF
 22379                           tosh	equ	0xFFE
 22380                           tosl	equ	0xFFD
 22381                           pclath	equ	0xFFA
 22382                           tblptru	equ	0xFF8
 22383                           tblptrh	equ	0xFF7
 22384                           tblptrl	equ	0xFF6
 22385                           tablat	equ	0xFF5
 22386                           prodh	equ	0xFF4
 22387                           prodl	equ	0xFF3
 22388                           intcon	equ	0xFF2
 22389                           intcon2	equ	0xFF1
 22390                           intcon3	equ	0xFF0
 22391                           indf0	equ	0xFEF
 22392                           postinc0	equ	0xFEE
 22393                           plusw0	equ	0xFEB
 22394                           fsr0h	equ	0xFEA
 22395                           fsr0l	equ	0xFE9
 22396                           wreg	equ	0xFE8
 22397                           indf1	equ	0xFE7
 22398                           postinc1	equ	0xFE6
 22399                           postdec1	equ	0xFE5
 22400                           fsr1h	equ	0xFE2
 22401                           fsr1l	equ	0xFE1
 22402                           indf2	equ	0xFDF
 22403                           postinc2	equ	0xFDE
 22404                           postdec2	equ	0xFDD
 22405                           plusw2	equ	0xFDB
 22406                           fsr2h	equ	0xFDA
 22407                           fsr2l	equ	0xFD9
 22408                           status	equ	0xFD8
 22409                           
 22410 ;; *************** function _I2cSlv_QueryI2cData *****************
 22411 ;; Defined at:
 22412 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 22413 ;; Parameters:    Size  Location     Type
 22414 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 22415 ;;		 -> ReadAddress(1), 
 22416 ;;  TxLen           1   68[BANK0 ] unsigned char 
 22417 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 22418 ;;		 -> memoryPreamble(5), 
 22419 ;;  RxLen           1   71[BANK0 ] unsigned char 
 22420 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 22421 ;; Auto vars:     Size  Location     Type
 22422 ;;		None
 22423 ;; Return value:  Size  Location     Type
 22424 ;;                  1    wreg      enum E8943
 22425 ;; Registers used:
 22426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22427 ;; Tracked objects:
 22428 ;;		On entry : 0/0
 22429 ;;		On exit  : 0/0
 22430 ;;		Unchanged: 0/0
 22431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22432 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22435 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22436 ;;Total ram usage:        7 bytes
 22437 ;; Hardware stack levels used:    1
 22438 ;; Hardware stack levels required when called:   15
 22439 ;; This function calls:
 22440 ;;		_I2cSlv_I2cReadMsgSts
 22441 ;;		_I2cSlv_ReceiveI2cMsg
 22442 ;;		_I2cSlv_SendI2cMsg
 22443 ;;		_OsTmr_GetTimerStatus
 22444 ;;		_OsTmr_StartTimer
 22445 ;;		_OsTmr_Wait
 22446 ;; This function is called by:
 22447 ;;		_Eeprom_Read
 22448 ;; This function uses a non-reentrant model
 22449 ;;
 22450                           
 22451                           	psect	text104
 22452  0037A6                     __ptext104:
 22453                           	opt stack 0
 22454  0037A6                     _I2cSlv_QueryI2cData:
 22455                           	opt stack 9
 22456                           
 22457                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 22458                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 22459                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 22460                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 22461                           ;i2c_slv.c: 388: switch(I2cOpState)
 22462                           
 22463                           ; BSR set to: 0
 22464                           ;incstack = 0
 22465  0037A6  D05B               	goto	l1437
 22466  0037A8                     
 22467                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 22468  0037A8  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 22469  0037AC  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 22470  0037B0  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 22471  0037B4  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 22472  0037B8  EC26  F02E         	call	_I2cSlv_SendI2cMsg	;wreg free
 22473                           
 22474                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 22475  0037BC  0E01               	movlw	1
 22476  0037BE  0101               	movlb	1	; () banked
 22477  0037C0  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 22478                           
 22479                           ; BSR set to: 1
 22480                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 22481  0037C2  0E00               	movlw	0
 22482  0037C4  D04A               	goto	L33
 22483  0037C6                     
 22484                           ; BSR set to: 1
 22485                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 22486                           
 22487                           ; BSR set to: 1
 22488  0037C6  0E46               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 22489  0037C8  0100               	movlb	0	; () banked
 22490  0037CA  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 22491  0037CC  0E03               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 22492  0037CE  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 22493  0037D0  0EF4               	movlw	244
 22494  0037D2  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 22495  0037D4  0E01               	movlw	1
 22496  0037D6  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 22497  0037D8  0E00               	movlw	0
 22498  0037DA  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 22499  0037DC  0E00               	movlw	0
 22500  0037DE  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 22501  0037E0  ECD8  F026         	call	_OsTmr_Wait	;wreg free
 22502  0037E4  06E8               	decf	wreg,f,c
 22503  0037E6  A4D8               	btfss	status,2,c
 22504  0037E8  D036               	goto	l1445
 22505                           
 22506                           ;i2c_slv.c: 402: {
 22507                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 22508  0037EA  0E3B               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 22509  0037EC  0100               	movlb	0	; () banked
 22510  0037EE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 22511  0037F0  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 22512  0037F2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 22513  0037F4  0EC4               	movlw	196
 22514  0037F6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 22515  0037F8  0E09               	movlw	9
 22516  0037FA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 22517  0037FC  0E00               	movlw	0
 22518  0037FE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 22519  003800  0E00               	movlw	0
 22520  003802  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 22521  003804  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 22522                           
 22523                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 22524  003808  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 22525  00380C  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 22526  003810  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 22527  003814  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 22528  003818  ECA7  F02D         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 22529                           
 22530                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 22531  00381C  0E02               	movlw	2
 22532  00381E  0101               	movlb	1	; () banked
 22533  003820  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 22534  003822  D019               	goto	l1445
 22535  003824                     
 22536                           ; BSR set to: 1
 22537                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 22538                           
 22539                           ; BSR set to: 1
 22540  003824  ECF9  F030         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 22541  003828  06E8               	decf	wreg,f,c
 22542  00382A  A4D8               	btfss	status,2,c
 22543  00382C  D005               	goto	l1443
 22544                           
 22545                           ;i2c_slv.c: 414: {
 22546                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 22547  00382E  0E00               	movlw	0
 22548  003830  0101               	movlb	1	; () banked
 22549  003832  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 22550                           
 22551                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 22552  003834  0E01               	movlw	1
 22553  003836  D011               	goto	L33
 22554  003838                     l1443:
 22555                           
 22556                           ;i2c_slv.c: 420: else
 22557                           ;i2c_slv.c: 421: {
 22558                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 22559                           
 22560                           ; BSR set to: 1
 22561  003838  0E3B               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 22562  00383A  0100               	movlb	0	; () banked
 22563  00383C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 22564  00383E  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 22565  003840  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 22566  003842  EC39  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 22567  003846  06E8               	decf	wreg,f,c
 22568  003848  A4D8               	btfss	status,2,c
 22569  00384A  D005               	goto	l1445
 22570                           
 22571                           ;i2c_slv.c: 423: {
 22572                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 22573  00384C  0E00               	movlw	0
 22574  00384E  0101               	movlb	1	; () banked
 22575  003850  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 22576                           
 22577                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 22578  003852  0E02               	movlw	2
 22579  003854  D002               	goto	L33
 22580  003856                     l1445:
 22581                           
 22582                           ;i2c_slv.c: 429: else
 22583                           ;i2c_slv.c: 430: {
 22584                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 22585                           
 22586                           ; BSR set to: 1
 22587  003856  0E00               	movlw	0
 22588  003858  0101               	movlb	1	; () banked
 22589  00385A                     L33:
 22590  00385A  6FE7               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 22591                           
 22592                           ; BSR set to: 1
 22593                           ;i2c_slv.c: 439: }
 22594                           
 22595                           ; BSR set to: 1
 22596                           ;i2c_slv.c: 438: break;
 22597                           
 22598                           ;i2c_slv.c: 437: default:
 22599                           
 22600                           ; BSR set to: 1
 22601                           ;i2c_slv.c: 433: }
 22602                           ;i2c_slv.c: 434: }
 22603                           ;i2c_slv.c: 435: break;
 22604                           
 22605                           ; BSR set to: 1
 22606  00385C  D00B               	goto	l1439
 22607  00385E                     l1437:
 22608                           
 22609                           ; BSR set to: 1
 22610  00385E  0101               	movlb	1	; () banked
 22611  003860  51E8               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 22612                           
 22613                           ; Switch size 1, requested type "space"
 22614                           ; Number of cases is 3, Range of values is 0 to 2
 22615                           ; switch strategies available:
 22616                           ; Name         Instructions Cycles
 22617                           ; simple_byte           10     6 (average)
 22618                           ;	Chosen strategy is simple_byte
 22619  003862  0A00               	xorlw	0	; case 0
 22620  003864  B4D8               	btfsc	status,2,c
 22621  003866  D7A0               	goto	l1438
 22622  003868  0A01               	xorlw	1	; case 1
 22623  00386A  B4D8               	btfsc	status,2,c
 22624  00386C  D7AC               	goto	l1440
 22625  00386E  0A03               	xorlw	3	; case 2
 22626  003870  B4D8               	btfsc	status,2,c
 22627  003872  D7D8               	goto	l1442
 22628  003874                     l1439:
 22629                           
 22630                           ; BSR set to: 1
 22631                           ;i2c_slv.c: 441: return Ret;
 22632                           
 22633                           ; BSR set to: 1
 22634  003874  51E7               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 22635  003876  0012               	return	
 22636  003878                     __end_of_I2cSlv_QueryI2cData:
 22637                           	opt stack 0
 22638                           tosu	equ	0xFFF
 22639                           tosh	equ	0xFFE
 22640                           tosl	equ	0xFFD
 22641                           pclath	equ	0xFFA
 22642                           tblptru	equ	0xFF8
 22643                           tblptrh	equ	0xFF7
 22644                           tblptrl	equ	0xFF6
 22645                           tablat	equ	0xFF5
 22646                           prodh	equ	0xFF4
 22647                           prodl	equ	0xFF3
 22648                           intcon	equ	0xFF2
 22649                           intcon2	equ	0xFF1
 22650                           intcon3	equ	0xFF0
 22651                           indf0	equ	0xFEF
 22652                           postinc0	equ	0xFEE
 22653                           plusw0	equ	0xFEB
 22654                           fsr0h	equ	0xFEA
 22655                           fsr0l	equ	0xFE9
 22656                           wreg	equ	0xFE8
 22657                           indf1	equ	0xFE7
 22658                           postinc1	equ	0xFE6
 22659                           postdec1	equ	0xFE5
 22660                           fsr1h	equ	0xFE2
 22661                           fsr1l	equ	0xFE1
 22662                           indf2	equ	0xFDF
 22663                           postinc2	equ	0xFDE
 22664                           postdec2	equ	0xFDD
 22665                           plusw2	equ	0xFDB
 22666                           fsr2h	equ	0xFDA
 22667                           fsr2l	equ	0xFD9
 22668                           status	equ	0xFD8
 22669                           
 22670 ;; *************** function _OsTmr_Wait *****************
 22671 ;; Defined at:
 22672 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 22673 ;; Parameters:    Size  Location     Type
 22674 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 22675 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 22676 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 22677 ;; Auto vars:     Size  Location     Type
 22678 ;;  Ret             1   65[BANK0 ] enum E7749
 22679 ;; Return value:  Size  Location     Type
 22680 ;;                  1    wreg      enum E7749
 22681 ;; Registers used:
 22682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22683 ;; Tracked objects:
 22684 ;;		On entry : 0/0
 22685 ;;		On exit  : 0/0
 22686 ;;		Unchanged: 0/0
 22687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22688 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22689 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22691 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22692 ;;Total ram usage:        7 bytes
 22693 ;; Hardware stack levels used:    1
 22694 ;; Hardware stack levels required when called:   14
 22695 ;; This function calls:
 22696 ;;		_OsTmr_GetTimerStatus
 22697 ;;		_OsTmr_StartTimer
 22698 ;; This function is called by:
 22699 ;;		_I2cSlv_QueryI2cData
 22700 ;;		_Terminal
 22701 ;; This function uses a non-reentrant model
 22702 ;;
 22703                           
 22704                           	psect	text105
 22705  004DB0                     __ptext105:
 22706                           	opt stack 0
 22707  004DB0                     _OsTmr_Wait:
 22708                           	opt stack 11
 22709                           
 22710                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 22711                           
 22712                           ; BSR set to: 1
 22713                           ;incstack = 0
 22714  004DB0  0E00               	movlw	0
 22715  004DB2  0100               	movlb	0	; () banked
 22716  004DB4  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 22717                           
 22718                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 22719  004DB6  D02D               	goto	l855
 22720  004DB8                     
 22721                           ; BSR set to: 0
 22722                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 22723                           
 22724                           ; BSR set to: 0
 22725  004DB8  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 22726  004DBC  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 22727  004DC0  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 22728  004DC4  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 22729  004DC8  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 22730  004DCC  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 22731  004DD0  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 22732                           
 22733                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 22734  004DD4  0100               	movlb	0	; () banked
 22735  004DD6  EE20 F00A          	lfsr	2,10
 22736  004DDA  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 22737  004DDC  26D9               	addwf	fsr2l,f,c
 22738  004DDE  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 22739  004DE0  22DA               	addwfc	fsr2h,f,c
 22740  004DE2  0E01               	movlw	1
 22741  004DE4  6EDF               	movwf	indf2,c
 22742                           
 22743                           ;os_timers.c: 165: break;
 22744  004DE6  D022               	goto	l857
 22745  004DE8                     
 22746                           ; BSR set to: 0
 22747                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 22748                           
 22749                           ; BSR set to: 0
 22750  004DE8  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 22751  004DEC  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 22752  004DF0  EC39  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 22753  004DF4  06E8               	decf	wreg,f,c
 22754  004DF6  A4D8               	btfss	status,2,c
 22755  004DF8  D019               	goto	l857
 22756                           
 22757                           ;os_timers.c: 170: {
 22758                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 22759  004DFA  0100               	movlb	0	; () banked
 22760  004DFC  EE20 F00A          	lfsr	2,10
 22761  004E00  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 22762  004E02  26D9               	addwf	fsr2l,f,c
 22763  004E04  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 22764  004E06  22DA               	addwfc	fsr2h,f,c
 22765  004E08  0E00               	movlw	0
 22766  004E0A  6EDF               	movwf	indf2,c
 22767                           
 22768                           ; BSR set to: 0
 22769                           ;os_timers.c: 174: Ret = DelayExpired;
 22770  004E0C  0E01               	movlw	1
 22771  004E0E  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 22772                           
 22773                           ; BSR set to: 0
 22774                           ;os_timers.c: 180: }
 22775                           
 22776                           ; BSR set to: 0
 22777                           ;os_timers.c: 179: break;
 22778                           
 22779                           ;os_timers.c: 178: default:
 22780                           
 22781                           ; BSR set to: 0
 22782                           ;os_timers.c: 175: }
 22783                           ;os_timers.c: 176: break;
 22784  004E10  D00D               	goto	l857
 22785  004E12                     l855:
 22786                           
 22787                           ; BSR set to: 0
 22788                           
 22789                           ; BSR set to: 0
 22790  004E12  EE20 F00A          	lfsr	2,10
 22791  004E16  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 22792  004E18  26D9               	addwf	fsr2l,f,c
 22793  004E1A  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 22794  004E1C  22DA               	addwfc	fsr2h,f,c
 22795  004E1E  50DF               	movf	indf2,w,c
 22796                           
 22797                           ; Switch size 1, requested type "space"
 22798                           ; Number of cases is 2, Range of values is 0 to 1
 22799                           ; switch strategies available:
 22800                           ; Name         Instructions Cycles
 22801                           ; simple_byte            7     4 (average)
 22802                           ;	Chosen strategy is simple_byte
 22803  004E20  0A00               	xorlw	0	; case 0
 22804  004E22  B4D8               	btfsc	status,2,c
 22805  004E24  D7C9               	goto	l856
 22806  004E26  0A01               	xorlw	1	; case 1
 22807  004E28  B4D8               	btfsc	status,2,c
 22808  004E2A  D7DE               	goto	l858
 22809  004E2C                     l857:
 22810                           
 22811                           ;os_timers.c: 182: return Ret;
 22812                           
 22813                           ; BSR set to: 0
 22814  004E2C  0100               	movlb	0	; () banked
 22815  004E2E  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 22816  004E30  0012               	return	
 22817  004E32                     __end_of_OsTmr_Wait:
 22818                           	opt stack 0
 22819                           tosu	equ	0xFFF
 22820                           tosh	equ	0xFFE
 22821                           tosl	equ	0xFFD
 22822                           pclath	equ	0xFFA
 22823                           tblptru	equ	0xFF8
 22824                           tblptrh	equ	0xFF7
 22825                           tblptrl	equ	0xFF6
 22826                           tablat	equ	0xFF5
 22827                           prodh	equ	0xFF4
 22828                           prodl	equ	0xFF3
 22829                           intcon	equ	0xFF2
 22830                           intcon2	equ	0xFF1
 22831                           intcon3	equ	0xFF0
 22832                           indf0	equ	0xFEF
 22833                           postinc0	equ	0xFEE
 22834                           plusw0	equ	0xFEB
 22835                           fsr0h	equ	0xFEA
 22836                           fsr0l	equ	0xFE9
 22837                           wreg	equ	0xFE8
 22838                           indf1	equ	0xFE7
 22839                           postinc1	equ	0xFE6
 22840                           postdec1	equ	0xFE5
 22841                           fsr1h	equ	0xFE2
 22842                           fsr1l	equ	0xFE1
 22843                           indf2	equ	0xFDF
 22844                           postinc2	equ	0xFDE
 22845                           postdec2	equ	0xFDD
 22846                           plusw2	equ	0xFDB
 22847                           fsr2h	equ	0xFDA
 22848                           fsr2l	equ	0xFD9
 22849                           status	equ	0xFD8
 22850                           
 22851 ;; *************** function _I2cSlv_SendI2cMsg *****************
 22852 ;; Defined at:
 22853 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 22854 ;; Parameters:    Size  Location     Type
 22855 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 22856 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 22857 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 22858 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 22859 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 22860 ;; Auto vars:     Size  Location     Type
 22861 ;;  TxSts           1   36[BANK0 ] unsigned char 
 22862 ;; Return value:  Size  Location     Type
 22863 ;;                  1    wreg      unsigned char 
 22864 ;; Registers used:
 22865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22866 ;; Tracked objects:
 22867 ;;		On entry : 0/0
 22868 ;;		On exit  : 0/0
 22869 ;;		Unchanged: 0/0
 22870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22871 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22874 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22875 ;;Total ram usage:        5 bytes
 22876 ;; Hardware stack levels used:    1
 22877 ;; Hardware stack levels required when called:   12
 22878 ;; This function calls:
 22879 ;;		_GenerateEvt
 22880 ;; This function is called by:
 22881 ;;		_I2cSlv_QueryI2cData
 22882 ;;		_Eeprom_Write
 22883 ;;		_Terminal
 22884 ;;		_triggerRelay
 22885 ;; This function uses a non-reentrant model
 22886 ;;
 22887                           
 22888                           	psect	text106
 22889  005C4C                     __ptext106:
 22890                           	opt stack 0
 22891  005C4C                     _I2cSlv_SendI2cMsg:
 22892                           	opt stack 13
 22893                           
 22894                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 22895                           
 22896                           ; BSR set to: 0
 22897                           ;incstack = 0
 22898  005C4C  0E00               	movlw	0
 22899  005C4E  0100               	movlb	0	; () banked
 22900  005C50  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 22901                           
 22902                           ; BSR set to: 0
 22903                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 22904  005C52  05CF               	decf	_I2cComSts& (0+255),w,b
 22905  005C54  B4D8               	btfsc	status,2,c
 22906  005C56  D015               	goto	l1409
 22907                           
 22908                           ; BSR set to: 0
 22909                           ;i2c_slv.c: 257: {
 22910                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 22911  005C58  C082  F3A2         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 22912                           
 22913                           ; BSR set to: 0
 22914                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 22915  005C5C  0E00               	movlw	0
 22916  005C5E  0103               	movlb	3	; () banked
 22917  005C60  6FA3               	movwf	(_I2cTxPacket+1)& (0+255),b
 22918                           
 22919                           ; BSR set to: 3
 22920                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 22921  005C62  C083  F3A6         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 22922                           
 22923                           ; BSR set to: 3
 22924                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 22925  005C66  C080  F3A4         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 22926  005C6A  C081  F3A5         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 22927                           
 22928                           ; BSR set to: 3
 22929                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 22930  005C6E  0ED9               	movlw	low _I2cWriteDataEvt
 22931  005C70  0100               	movlb	0	; () banked
 22932  005C72  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22933  005C74  0E00               	movlw	high _I2cWriteDataEvt
 22934  005C76  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22935  005C78  ECB3  F031         	call	_GenerateEvt	;wreg free
 22936                           
 22937                           ;i2c_slv.c: 267: TxSts = 1u;
 22938  005C7C  0E01               	movlw	1
 22939  005C7E  0100               	movlb	0	; () banked
 22940  005C80  D001               	goto	L34
 22941  005C82                     l1409:
 22942                           
 22943                           ; BSR set to: 0
 22944                           ;i2c_slv.c: 269: else
 22945                           ;i2c_slv.c: 270: {
 22946                           ;i2c_slv.c: 272: TxSts = 0u;
 22947                           
 22948                           ; BSR set to: 0
 22949  005C82  0E00               	movlw	0
 22950  005C84                     L34:
 22951  005C84  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 22952                           
 22953                           ; BSR set to: 0
 22954                           ;i2c_slv.c: 273: }
 22955                           ;i2c_slv.c: 275: return TxSts;
 22956  005C86  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 22957  005C88  0012               	return	
 22958  005C8A                     __end_of_I2cSlv_SendI2cMsg:
 22959                           	opt stack 0
 22960                           tosu	equ	0xFFF
 22961                           tosh	equ	0xFFE
 22962                           tosl	equ	0xFFD
 22963                           pclath	equ	0xFFA
 22964                           tblptru	equ	0xFF8
 22965                           tblptrh	equ	0xFF7
 22966                           tblptrl	equ	0xFF6
 22967                           tablat	equ	0xFF5
 22968                           prodh	equ	0xFF4
 22969                           prodl	equ	0xFF3
 22970                           intcon	equ	0xFF2
 22971                           intcon2	equ	0xFF1
 22972                           intcon3	equ	0xFF0
 22973                           indf0	equ	0xFEF
 22974                           postinc0	equ	0xFEE
 22975                           plusw0	equ	0xFEB
 22976                           fsr0h	equ	0xFEA
 22977                           fsr0l	equ	0xFE9
 22978                           wreg	equ	0xFE8
 22979                           indf1	equ	0xFE7
 22980                           postinc1	equ	0xFE6
 22981                           postdec1	equ	0xFE5
 22982                           fsr1h	equ	0xFE2
 22983                           fsr1l	equ	0xFE1
 22984                           indf2	equ	0xFDF
 22985                           postinc2	equ	0xFDE
 22986                           postdec2	equ	0xFDD
 22987                           plusw2	equ	0xFDB
 22988                           fsr2h	equ	0xFDA
 22989                           fsr2l	equ	0xFD9
 22990                           status	equ	0xFD8
 22991                           
 22992 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 22993 ;; Defined at:
 22994 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 22995 ;; Parameters:    Size  Location     Type
 22996 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 22997 ;;		 -> memoryPreamble(5), Terminal@TermRxBuffer(50), 
 22998 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 22999 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 23000 ;; Auto vars:     Size  Location     Type
 23001 ;;  RxSts           1   36[BANK0 ] unsigned char 
 23002 ;; Return value:  Size  Location     Type
 23003 ;;                  1    wreg      unsigned char 
 23004 ;; Registers used:
 23005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23006 ;; Tracked objects:
 23007 ;;		On entry : 0/0
 23008 ;;		On exit  : 0/0
 23009 ;;		Unchanged: 0/0
 23010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23014 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23015 ;;Total ram usage:        5 bytes
 23016 ;; Hardware stack levels used:    1
 23017 ;; Hardware stack levels required when called:   12
 23018 ;; This function calls:
 23019 ;;		_GenerateEvt
 23020 ;; This function is called by:
 23021 ;;		_I2cSlv_QueryI2cData
 23022 ;;		_Terminal
 23023 ;; This function uses a non-reentrant model
 23024 ;;
 23025                           
 23026                           	psect	text107
 23027  005B4E                     __ptext107:
 23028                           	opt stack 0
 23029  005B4E                     _I2cSlv_ReceiveI2cMsg:
 23030                           	opt stack 13
 23031                           
 23032                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 23033                           
 23034                           ; BSR set to: 0
 23035                           ;incstack = 0
 23036  005B4E  0E00               	movlw	0
 23037  005B50  0100               	movlb	0	; () banked
 23038  005B52  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 23039                           
 23040                           ; BSR set to: 0
 23041                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 23042  005B54  0E02               	movlw	2
 23043  005B56  19CF               	xorwf	_I2cComSts& (0+255),w,b
 23044  005B58  B4D8               	btfsc	status,2,c
 23045  005B5A  D016               	goto	l1414
 23046                           
 23047                           ; BSR set to: 0
 23048                           ;i2c_slv.c: 294: {
 23049                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 23050  005B5C  C082  F397         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 23051                           
 23052                           ; BSR set to: 0
 23053                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 23054  005B60  0E01               	movlw	1
 23055  005B62  0103               	movlb	3	; () banked
 23056  005B64  6F98               	movwf	(_I2cRxPacket+1)& (0+255),b
 23057                           
 23058                           ; BSR set to: 3
 23059                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 23060  005B66  C083  F39B         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 23061                           
 23062                           ; BSR set to: 3
 23063                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 23064  005B6A  C080  F399         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 23065  005B6E  C081  F39A         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 23066                           
 23067                           ; BSR set to: 3
 23068                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 23069  005B72  0ED8               	movlw	low _I2cReadDataEvt
 23070  005B74  0100               	movlb	0	; () banked
 23071  005B76  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23072  005B78  0E00               	movlw	high _I2cReadDataEvt
 23073  005B7A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23074  005B7C  ECB3  F031         	call	_GenerateEvt	;wreg free
 23075                           
 23076                           ;i2c_slv.c: 304: RxSts = 1u;
 23077  005B80  0E01               	movlw	1
 23078  005B82  0100               	movlb	0	; () banked
 23079  005B84  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 23080                           
 23081                           ;i2c_slv.c: 305: }
 23082  005B86  0012               	return	
 23083  005B88                     l1414:
 23084                           
 23085                           ; BSR set to: 0
 23086                           ;i2c_slv.c: 306: else
 23087                           ;i2c_slv.c: 307: {
 23088                           ;i2c_slv.c: 309: RxSts = 0u;
 23089                           
 23090                           ; BSR set to: 0
 23091  005B88  0E00               	movlw	0
 23092  005B8A  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 23093                           
 23094                           ; BSR set to: 0
 23095  005B8C  0012               	return	
 23096  005B8E                     __end_of_I2cSlv_ReceiveI2cMsg:
 23097                           	opt stack 0
 23098                           tosu	equ	0xFFF
 23099                           tosh	equ	0xFFE
 23100                           tosl	equ	0xFFD
 23101                           pclath	equ	0xFFA
 23102                           tblptru	equ	0xFF8
 23103                           tblptrh	equ	0xFF7
 23104                           tblptrl	equ	0xFF6
 23105                           tablat	equ	0xFF5
 23106                           prodh	equ	0xFF4
 23107                           prodl	equ	0xFF3
 23108                           intcon	equ	0xFF2
 23109                           intcon2	equ	0xFF1
 23110                           intcon3	equ	0xFF0
 23111                           indf0	equ	0xFEF
 23112                           postinc0	equ	0xFEE
 23113                           plusw0	equ	0xFEB
 23114                           fsr0h	equ	0xFEA
 23115                           fsr0l	equ	0xFE9
 23116                           wreg	equ	0xFE8
 23117                           indf1	equ	0xFE7
 23118                           postinc1	equ	0xFE6
 23119                           postdec1	equ	0xFE5
 23120                           fsr1h	equ	0xFE2
 23121                           fsr1l	equ	0xFE1
 23122                           indf2	equ	0xFDF
 23123                           postinc2	equ	0xFDE
 23124                           postdec2	equ	0xFDD
 23125                           plusw2	equ	0xFDB
 23126                           fsr2h	equ	0xFDA
 23127                           fsr2l	equ	0xFD9
 23128                           status	equ	0xFD8
 23129                           
 23130 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 23131 ;; Defined at:
 23132 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 23133 ;; Parameters:    Size  Location     Type
 23134 ;;		None
 23135 ;; Auto vars:     Size  Location     Type
 23136 ;;  Result          1   33[BANK0 ] enum E8931
 23137 ;; Return value:  Size  Location     Type
 23138 ;;                  1    wreg      enum E8931
 23139 ;; Registers used:
 23140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23141 ;; Tracked objects:
 23142 ;;		On entry : 0/0
 23143 ;;		On exit  : 0/0
 23144 ;;		Unchanged: 0/0
 23145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23147 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23149 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23150 ;;Total ram usage:        1 bytes
 23151 ;; Hardware stack levels used:    1
 23152 ;; Hardware stack levels required when called:   12
 23153 ;; This function calls:
 23154 ;;		_ReceiveEvt
 23155 ;; This function is called by:
 23156 ;;		_I2cSlv_QueryI2cData
 23157 ;;		_Terminal
 23158 ;; This function uses a non-reentrant model
 23159 ;;
 23160                           
 23161                           	psect	text108
 23162  0061F2                     __ptext108:
 23163                           	opt stack 0
 23164  0061F2                     _I2cSlv_I2cReadMsgSts:
 23165                           	opt stack 13
 23166                           
 23167                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 23168                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 23169                           
 23170                           ; BSR set to: 0
 23171                           ;incstack = 0
 23172  0061F2  0E9C               	movlw	low (_I2cRxPacket+5)
 23173  0061F4  0100               	movlb	0	; () banked
 23174  0061F6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23175  0061F8  0E03               	movlw	high (_I2cRxPacket+5)
 23176  0061FA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23177  0061FC  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 23178  006200  0900               	iorlw	0
 23179  006202  B4D8               	btfsc	status,2,c
 23180  006204  D002               	goto	l1419
 23181                           
 23182                           ;i2c_slv.c: 331: {
 23183                           ;i2c_slv.c: 332: Result = MessageReceived;
 23184  006206  0E01               	movlw	1
 23185  006208  D001               	goto	L35
 23186  00620A                     l1419:
 23187                           
 23188                           ;i2c_slv.c: 334: else
 23189                           ;i2c_slv.c: 335: {
 23190                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 23191                           
 23192                           ; BSR set to: 0
 23193  00620A  0E00               	movlw	0
 23194  00620C                     L35:
 23195  00620C  0100               	movlb	0	; () banked
 23196  00620E  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 23197                           
 23198                           ; BSR set to: 0
 23199                           ;i2c_slv.c: 337: }
 23200                           ;i2c_slv.c: 339: return Result;
 23201  006210  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 23202  006212  0012               	return	
 23203  006214                     __end_of_I2cSlv_I2cReadMsgSts:
 23204                           	opt stack 0
 23205                           tosu	equ	0xFFF
 23206                           tosh	equ	0xFFE
 23207                           tosl	equ	0xFFD
 23208                           pclath	equ	0xFFA
 23209                           tblptru	equ	0xFF8
 23210                           tblptrh	equ	0xFF7
 23211                           tblptrl	equ	0xFF6
 23212                           tablat	equ	0xFF5
 23213                           prodh	equ	0xFF4
 23214                           prodl	equ	0xFF3
 23215                           intcon	equ	0xFF2
 23216                           intcon2	equ	0xFF1
 23217                           intcon3	equ	0xFF0
 23218                           indf0	equ	0xFEF
 23219                           postinc0	equ	0xFEE
 23220                           plusw0	equ	0xFEB
 23221                           fsr0h	equ	0xFEA
 23222                           fsr0l	equ	0xFE9
 23223                           wreg	equ	0xFE8
 23224                           indf1	equ	0xFE7
 23225                           postinc1	equ	0xFE6
 23226                           postdec1	equ	0xFE5
 23227                           fsr1h	equ	0xFE2
 23228                           fsr1l	equ	0xFE1
 23229                           indf2	equ	0xFDF
 23230                           postinc2	equ	0xFDE
 23231                           postdec2	equ	0xFDD
 23232                           plusw2	equ	0xFDB
 23233                           fsr2h	equ	0xFDA
 23234                           fsr2l	equ	0xFD9
 23235                           status	equ	0xFD8
 23236                           
 23237 ;; *************** function _Mdm_RequestSmsData *****************
 23238 ;; Defined at:
 23239 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23240 ;; Parameters:    Size  Location     Type
 23241 ;;		None
 23242 ;; Auto vars:     Size  Location     Type
 23243 ;;		None
 23244 ;; Return value:  Size  Location     Type
 23245 ;;                  1    wreg      void 
 23246 ;; Registers used:
 23247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23248 ;; Tracked objects:
 23249 ;;		On entry : 0/0
 23250 ;;		On exit  : 0/0
 23251 ;;		Unchanged: 0/0
 23252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23257 ;;Total ram usage:        0 bytes
 23258 ;; Hardware stack levels used:    1
 23259 ;; Hardware stack levels required when called:   12
 23260 ;; This function calls:
 23261 ;;		_GenerateEvt
 23262 ;; This function is called by:
 23263 ;;		_MyApp_Task
 23264 ;; This function uses a non-reentrant model
 23265 ;;
 23266                           
 23267                           	psect	text109
 23268  006458                     __ptext109:
 23269                           	opt stack 0
 23270  006458                     _Mdm_RequestSmsData:
 23271                           	opt stack 15
 23272                           
 23273                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 23274                           
 23275                           ; BSR set to: 0
 23276                           ;incstack = 0
 23277  006458  0EDD               	movlw	low _GetSmsText
 23278  00645A  0100               	movlb	0	; () banked
 23279  00645C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23280  00645E  0E00               	movlw	high _GetSmsText
 23281  006460  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23282  006462  ECB3  F031         	call	_GenerateEvt	;wreg free
 23283  006466  0012               	return		;funcret
 23284  006468                     __end_of_Mdm_RequestSmsData:
 23285                           	opt stack 0
 23286                           tosu	equ	0xFFF
 23287                           tosh	equ	0xFFE
 23288                           tosl	equ	0xFFD
 23289                           pclath	equ	0xFFA
 23290                           tblptru	equ	0xFF8
 23291                           tblptrh	equ	0xFF7
 23292                           tblptrl	equ	0xFF6
 23293                           tablat	equ	0xFF5
 23294                           prodh	equ	0xFF4
 23295                           prodl	equ	0xFF3
 23296                           intcon	equ	0xFF2
 23297                           intcon2	equ	0xFF1
 23298                           intcon3	equ	0xFF0
 23299                           indf0	equ	0xFEF
 23300                           postinc0	equ	0xFEE
 23301                           plusw0	equ	0xFEB
 23302                           fsr0h	equ	0xFEA
 23303                           fsr0l	equ	0xFE9
 23304                           wreg	equ	0xFE8
 23305                           indf1	equ	0xFE7
 23306                           postinc1	equ	0xFE6
 23307                           postdec1	equ	0xFE5
 23308                           fsr1h	equ	0xFE2
 23309                           fsr1l	equ	0xFE1
 23310                           indf2	equ	0xFDF
 23311                           postinc2	equ	0xFDE
 23312                           postdec2	equ	0xFDD
 23313                           plusw2	equ	0xFDB
 23314                           fsr2h	equ	0xFDA
 23315                           fsr2l	equ	0xFD9
 23316                           status	equ	0xFD8
 23317                           
 23318 ;; *************** function _Mdm_IsSmsReceived *****************
 23319 ;; Defined at:
 23320 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23321 ;; Parameters:    Size  Location     Type
 23322 ;;		None
 23323 ;; Auto vars:     Size  Location     Type
 23324 ;;  Ret             1   33[BANK0 ] enum E8928
 23325 ;; Return value:  Size  Location     Type
 23326 ;;                  1    wreg      enum E8928
 23327 ;; Registers used:
 23328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23329 ;; Tracked objects:
 23330 ;;		On entry : 0/0
 23331 ;;		On exit  : 0/0
 23332 ;;		Unchanged: 0/0
 23333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23335 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23337 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23338 ;;Total ram usage:        1 bytes
 23339 ;; Hardware stack levels used:    1
 23340 ;; Hardware stack levels required when called:   12
 23341 ;; This function calls:
 23342 ;;		_ReceiveEvt
 23343 ;; This function is called by:
 23344 ;;		_MyApp_Task
 23345 ;; This function uses a non-reentrant model
 23346 ;;
 23347                           
 23348                           	psect	text110
 23349  006100                     __ptext110:
 23350                           	opt stack 0
 23351  006100                     _Mdm_IsSmsReceived:
 23352                           	opt stack 15
 23353                           
 23354                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 23355                           
 23356                           ;incstack = 0
 23357  006100  0E00               	movlw	0
 23358  006102  0100               	movlb	0	; () banked
 23359  006104  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 23360                           
 23361                           ; BSR set to: 0
 23362                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 23363  006106  0EDE               	movlw	low _SmsEvent
 23364  006108  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23365  00610A  0E00               	movlw	high _SmsEvent
 23366  00610C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23367  00610E  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 23368  006112  0900               	iorlw	0
 23369  006114  B4D8               	btfsc	status,2,c
 23370  006116  D003               	goto	l1136
 23371                           
 23372                           ;mdm_gsm_gprs.c: 947: {
 23373                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 23374  006118  0E01               	movlw	1
 23375  00611A  0100               	movlb	0	; () banked
 23376  00611C  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 23377  00611E                     l1136:
 23378                           
 23379                           ;mdm_gsm_gprs.c: 949: }
 23380                           ;mdm_gsm_gprs.c: 951: return Ret;
 23381  00611E  0100               	movlb	0	; () banked
 23382  006120  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 23383  006122  0012               	return	
 23384  006124                     __end_of_Mdm_IsSmsReceived:
 23385                           	opt stack 0
 23386                           tosu	equ	0xFFF
 23387                           tosh	equ	0xFFE
 23388                           tosl	equ	0xFFD
 23389                           pclath	equ	0xFFA
 23390                           tblptru	equ	0xFF8
 23391                           tblptrh	equ	0xFF7
 23392                           tblptrl	equ	0xFF6
 23393                           tablat	equ	0xFF5
 23394                           prodh	equ	0xFF4
 23395                           prodl	equ	0xFF3
 23396                           intcon	equ	0xFF2
 23397                           intcon2	equ	0xFF1
 23398                           intcon3	equ	0xFF0
 23399                           indf0	equ	0xFEF
 23400                           postinc0	equ	0xFEE
 23401                           plusw0	equ	0xFEB
 23402                           fsr0h	equ	0xFEA
 23403                           fsr0l	equ	0xFE9
 23404                           wreg	equ	0xFE8
 23405                           indf1	equ	0xFE7
 23406                           postinc1	equ	0xFE6
 23407                           postdec1	equ	0xFE5
 23408                           fsr1h	equ	0xFE2
 23409                           fsr1l	equ	0xFE1
 23410                           indf2	equ	0xFDF
 23411                           postinc2	equ	0xFDE
 23412                           postdec2	equ	0xFDD
 23413                           plusw2	equ	0xFDB
 23414                           fsr2h	equ	0xFDA
 23415                           fsr2l	equ	0xFD9
 23416                           status	equ	0xFD8
 23417                           
 23418 ;; *************** function _Mdm_GetSmsData *****************
 23419 ;; Defined at:
 23420 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23421 ;; Parameters:    Size  Location     Type
 23422 ;;  MessageText     2   39[BANK0 ] PTR unsigned char 
 23423 ;;		 -> smsText(20), 
 23424 ;; Auto vars:     Size  Location     Type
 23425 ;;  GetSmsStatus    1   41[BANK0 ] enum E8920
 23426 ;; Return value:  Size  Location     Type
 23427 ;;                  1    wreg      enum E8920
 23428 ;; Registers used:
 23429 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23430 ;; Tracked objects:
 23431 ;;		On entry : 0/0
 23432 ;;		On exit  : 0/0
 23433 ;;		Unchanged: 0/0
 23434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23435 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23438 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23439 ;;Total ram usage:        3 bytes
 23440 ;; Hardware stack levels used:    1
 23441 ;; Hardware stack levels required when called:   12
 23442 ;; This function calls:
 23443 ;;		_ReceiveEvt
 23444 ;;		_StringCopy
 23445 ;; This function is called by:
 23446 ;;		_MyApp_Task
 23447 ;; This function uses a non-reentrant model
 23448 ;;
 23449                           
 23450                           	psect	text111
 23451  005062                     __ptext111:
 23452                           	opt stack 0
 23453  005062                     _Mdm_GetSmsData:
 23454                           	opt stack 15
 23455                           
 23456                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 23457                           
 23458                           ; BSR set to: 0
 23459                           ;incstack = 0
 23460  005062  0E00               	movlw	0
 23461  005064  0100               	movlb	0	; () banked
 23462  005066  6F89               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23463                           
 23464                           ; BSR set to: 0
 23465                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 23466  005068  0EDC               	movlw	low _SmsTxtReady
 23467  00506A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23468  00506C  0E00               	movlw	high _SmsTxtReady
 23469  00506E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23470  005070  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 23471  005074  0900               	iorlw	0
 23472  005076  B4D8               	btfsc	status,2,c
 23473  005078  D025               	goto	l1129
 23474                           
 23475                           ;mdm_gsm_gprs.c: 898: {
 23476                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 23477  00507A  0E50               	movlw	low (_Mdm_SmsRx+80)
 23478  00507C  0100               	movlb	0	; () banked
 23479  00507E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23480  005080  0E07               	movlw	high (_Mdm_SmsRx+80)
 23481  005082  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23482  005084  C087  F07F         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 23483  005088  C088  F080         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 23484  00508C  0E01               	movlw	1
 23485  00508E  0107               	movlb	7	; () banked
 23486  005090  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 23487  005092  0100               	movlb	0	; () banked
 23488  005094  6F81               	movwf	StringCopy@Len& (0+255),b
 23489  005096  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 23490  005098  0E00               	movlw	0
 23491  00509A  2382               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 23492  00509C  ECCB  F028         	call	_StringCopy	;wreg free
 23493                           
 23494                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(14)
      +                          ));
 23495  0050A0  0E15               	movlw	low (_Mdm_SmsRx+21)
 23496  0050A2  0100               	movlb	0	; () banked
 23497  0050A4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23498  0050A6  0E07               	movlw	high (_Mdm_SmsRx+21)
 23499  0050A8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23500  0050AA  0ECC               	movlw	low _callerNumber
 23501  0050AC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23502  0050AE  0E04               	movlw	high _callerNumber
 23503  0050B0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23504  0050B2  0E00               	movlw	0
 23505  0050B4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 23506  0050B6  0E0E               	movlw	14
 23507  0050B8  6F81               	movwf	StringCopy@Len& (0+255),b
 23508  0050BA  ECCB  F028         	call	_StringCopy	;wreg free
 23509                           
 23510                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 23511  0050BE  0E01               	movlw	1
 23512  0050C0  0100               	movlb	0	; () banked
 23513  0050C2  6F89               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23514  0050C4                     l1129:
 23515                           
 23516                           ;mdm_gsm_gprs.c: 904: }
 23517                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 23518                           
 23519                           ; BSR set to: 0
 23520  0050C4  0100               	movlb	0	; () banked
 23521  0050C6  5189               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 23522  0050C8  0012               	return	
 23523  0050CA                     __end_of_Mdm_GetSmsData:
 23524                           	opt stack 0
 23525                           tosu	equ	0xFFF
 23526                           tosh	equ	0xFFE
 23527                           tosl	equ	0xFFD
 23528                           pclath	equ	0xFFA
 23529                           tblptru	equ	0xFF8
 23530                           tblptrh	equ	0xFF7
 23531                           tblptrl	equ	0xFF6
 23532                           tablat	equ	0xFF5
 23533                           prodh	equ	0xFF4
 23534                           prodl	equ	0xFF3
 23535                           intcon	equ	0xFF2
 23536                           intcon2	equ	0xFF1
 23537                           intcon3	equ	0xFF0
 23538                           indf0	equ	0xFEF
 23539                           postinc0	equ	0xFEE
 23540                           plusw0	equ	0xFEB
 23541                           fsr0h	equ	0xFEA
 23542                           fsr0l	equ	0xFE9
 23543                           wreg	equ	0xFE8
 23544                           indf1	equ	0xFE7
 23545                           postinc1	equ	0xFE6
 23546                           postdec1	equ	0xFE5
 23547                           fsr1h	equ	0xFE2
 23548                           fsr1l	equ	0xFE1
 23549                           indf2	equ	0xFDF
 23550                           postinc2	equ	0xFDE
 23551                           postdec2	equ	0xFDD
 23552                           plusw2	equ	0xFDB
 23553                           fsr2h	equ	0xFDA
 23554                           fsr2l	equ	0xFD9
 23555                           status	equ	0xFD8
 23556                           
 23557 ;; *************** function _Led_SetLedBlinkTime *****************
 23558 ;; Defined at:
 23559 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 23560 ;; Parameters:    Size  Location     Type
 23561 ;;  Led             1    wreg     unsigned char 
 23562 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 23563 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 23564 ;; Auto vars:     Size  Location     Type
 23565 ;;  Led             1   33[BANK0 ] unsigned char 
 23566 ;; Return value:  Size  Location     Type
 23567 ;;                  1    wreg      void 
 23568 ;; Registers used:
 23569 ;;		wreg, status,2, status,0
 23570 ;; Tracked objects:
 23571 ;;		On entry : 0/0
 23572 ;;		On exit  : 0/0
 23573 ;;		Unchanged: 0/0
 23574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23575 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23576 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23578 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23579 ;;Total ram usage:        5 bytes
 23580 ;; Hardware stack levels used:    1
 23581 ;; Hardware stack levels required when called:   11
 23582 ;; This function calls:
 23583 ;;		Nothing
 23584 ;; This function is called by:
 23585 ;;		_MyApp_Task
 23586 ;; This function uses a non-reentrant model
 23587 ;;
 23588                           
 23589                           	psect	text112
 23590  00556C                     __ptext112:
 23591                           	opt stack 0
 23592  00556C                     _Led_SetLedBlinkTime:
 23593                           	opt stack 16
 23594                           
 23595                           ; BSR set to: 0
 23596                           ;incstack = 0
 23597                           ;Led_SetLedBlinkTime@Led stored from wreg
 23598  00556C  0100               	movlb	0	; () banked
 23599  00556E  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 23600                           
 23601                           ;led.c: 374: switch (Led)
 23602  005570  D01B               	goto	l2139
 23603  005572                     l2140:
 23604                           
 23605                           ; BSR set to: 0
 23606                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 23607  005572  C07D  F371         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 23608  005576  C07E  F372         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 23609                           
 23610                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 23611  00557A  C07F  F373         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 23612  00557E  C080  F374         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 23613                           
 23614                           ;led.c: 379: break;
 23615  005582  0012               	return	
 23616  005584                     l2142:
 23617                           
 23618                           ; BSR set to: 0
 23619                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 23620  005584  C07D  F368         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 23621  005588  C07E  F369         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 23622                           
 23623                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 23624  00558C  C07F  F36A         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 23625  005590  C080  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 23626                           
 23627                           ;led.c: 384: break;
 23628  005594  0012               	return	
 23629  005596                     l2143:
 23630                           
 23631                           ; BSR set to: 0
 23632                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 23633  005596  C07D  F368         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 23634  00559A  C07E  F369         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 23635                           
 23636                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 23637  00559E  C07F  F36A         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 23638  0055A2  C080  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 23639                           
 23640                           ; BSR set to: 0
 23641                           ;led.c: 393: }
 23642                           
 23643                           ; BSR set to: 0
 23644                           ;led.c: 392: break;
 23645                           
 23646                           ;led.c: 391: default:
 23647                           
 23648                           ;led.c: 389: break;
 23649  0055A6  0012               	return	
 23650  0055A8                     l2139:
 23651                           
 23652                           ; BSR set to: 0
 23653  0055A8  0100               	movlb	0	; () banked
 23654  0055AA  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 23655                           
 23656                           ; Switch size 1, requested type "space"
 23657                           ; Number of cases is 3, Range of values is 1 to 3
 23658                           ; switch strategies available:
 23659                           ; Name         Instructions Cycles
 23660                           ; simple_byte           10     6 (average)
 23661                           ;	Chosen strategy is simple_byte
 23662  0055AC  0A01               	xorlw	1	; case 1
 23663  0055AE  B4D8               	btfsc	status,2,c
 23664  0055B0  D7E0               	goto	l2140
 23665  0055B2  0A03               	xorlw	3	; case 2
 23666  0055B4  B4D8               	btfsc	status,2,c
 23667  0055B6  D7E6               	goto	l2142
 23668  0055B8  0A01               	xorlw	1	; case 3
 23669  0055BA  A4D8               	btfss	status,2,c
 23670  0055BC  0012               	return	
 23671  0055BE  D7EB               	goto	l2143
 23672  0055C0                     __end_of_Led_SetLedBlinkTime:
 23673                           	opt stack 0
 23674                           tosu	equ	0xFFF
 23675                           tosh	equ	0xFFE
 23676                           tosl	equ	0xFFD
 23677                           pclath	equ	0xFFA
 23678                           tblptru	equ	0xFF8
 23679                           tblptrh	equ	0xFF7
 23680                           tblptrl	equ	0xFF6
 23681                           tablat	equ	0xFF5
 23682                           prodh	equ	0xFF4
 23683                           prodl	equ	0xFF3
 23684                           intcon	equ	0xFF2
 23685                           intcon2	equ	0xFF1
 23686                           intcon3	equ	0xFF0
 23687                           indf0	equ	0xFEF
 23688                           postinc0	equ	0xFEE
 23689                           plusw0	equ	0xFEB
 23690                           fsr0h	equ	0xFEA
 23691                           fsr0l	equ	0xFE9
 23692                           wreg	equ	0xFE8
 23693                           indf1	equ	0xFE7
 23694                           postinc1	equ	0xFE6
 23695                           postdec1	equ	0xFE5
 23696                           fsr1h	equ	0xFE2
 23697                           fsr1l	equ	0xFE1
 23698                           indf2	equ	0xFDF
 23699                           postinc2	equ	0xFDE
 23700                           postdec2	equ	0xFDD
 23701                           plusw2	equ	0xFDB
 23702                           fsr2h	equ	0xFDA
 23703                           fsr2l	equ	0xFD9
 23704                           status	equ	0xFD8
 23705                           
 23706 ;; *************** function _GetCallerNumber *****************
 23707 ;; Defined at:
 23708 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23709 ;; Parameters:    Size  Location     Type
 23710 ;;		None
 23711 ;; Auto vars:     Size  Location     Type
 23712 ;;		None
 23713 ;; Return value:  Size  Location     Type
 23714 ;;                  2   35[BANK0 ] PTR unsigned char 
 23715 ;; Registers used:
 23716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23717 ;; Tracked objects:
 23718 ;;		On entry : 0/0
 23719 ;;		On exit  : 0/0
 23720 ;;		Unchanged: 0/0
 23721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23722 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23725 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23726 ;;Total ram usage:        2 bytes
 23727 ;; Hardware stack levels used:    1
 23728 ;; Hardware stack levels required when called:   12
 23729 ;; This function calls:
 23730 ;;		_ClearBuffer
 23731 ;;		_ReceiveEvt
 23732 ;; This function is called by:
 23733 ;;		_MyApp_Task
 23734 ;; This function uses a non-reentrant model
 23735 ;;
 23736                           
 23737                           	psect	text113
 23738  005D78                     __ptext113:
 23739                           	opt stack 0
 23740  005D78                     _GetCallerNumber:
 23741                           	opt stack 15
 23742                           
 23743                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 23744                           
 23745                           ; BSR set to: 0
 23746                           ;incstack = 0
 23747  005D78  0EDF               	movlw	low _ClipEvent
 23748  005D7A  0100               	movlb	0	; () banked
 23749  005D7C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23750  005D7E  0E00               	movlw	high _ClipEvent
 23751  005D80  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23752  005D82  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 23753  005D86  0900               	iorlw	0
 23754  005D88  A4D8               	btfss	status,2,c
 23755  005D8A  D00B               	goto	l1156
 23756                           
 23757                           ;mdm_gsm_gprs.c: 1040: {
 23758                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(14)));
 23759  005D8C  0ECC               	movlw	low _callerNumber
 23760  005D8E  0100               	movlb	0	; () banked
 23761  005D90  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23762  005D92  0E04               	movlw	high _callerNumber
 23763  005D94  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23764  005D96  0E00               	movlw	0
 23765  005D98  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23766  005D9A  0E0E               	movlw	14
 23767  005D9C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23768  005D9E  ECD7  F02E         	call	_ClearBuffer	;wreg free
 23769  005DA2                     l1156:
 23770                           
 23771                           ;mdm_gsm_gprs.c: 1042: }
 23772                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 23773  005DA2  0ECC               	movlw	low _callerNumber
 23774  005DA4  0100               	movlb	0	; () banked
 23775  005DA6  6F83               	movwf	?_GetCallerNumber& (0+255),b
 23776  005DA8  0E04               	movlw	high _callerNumber
 23777  005DAA  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 23778  005DAC  0012               	return	
 23779  005DAE                     __end_of_GetCallerNumber:
 23780                           	opt stack 0
 23781                           tosu	equ	0xFFF
 23782                           tosh	equ	0xFFE
 23783                           tosl	equ	0xFFD
 23784                           pclath	equ	0xFFA
 23785                           tblptru	equ	0xFF8
 23786                           tblptrh	equ	0xFF7
 23787                           tblptrl	equ	0xFF6
 23788                           tablat	equ	0xFF5
 23789                           prodh	equ	0xFF4
 23790                           prodl	equ	0xFF3
 23791                           intcon	equ	0xFF2
 23792                           intcon2	equ	0xFF1
 23793                           intcon3	equ	0xFF0
 23794                           indf0	equ	0xFEF
 23795                           postinc0	equ	0xFEE
 23796                           plusw0	equ	0xFEB
 23797                           fsr0h	equ	0xFEA
 23798                           fsr0l	equ	0xFE9
 23799                           wreg	equ	0xFE8
 23800                           indf1	equ	0xFE7
 23801                           postinc1	equ	0xFE6
 23802                           postdec1	equ	0xFE5
 23803                           fsr1h	equ	0xFE2
 23804                           fsr1l	equ	0xFE1
 23805                           indf2	equ	0xFDF
 23806                           postinc2	equ	0xFDE
 23807                           postdec2	equ	0xFDD
 23808                           plusw2	equ	0xFDB
 23809                           fsr2h	equ	0xFDA
 23810                           fsr2l	equ	0xFD9
 23811                           status	equ	0xFD8
 23812                           
 23813 ;; *************** function _UartSetConfig *****************
 23814 ;; Defined at:
 23815 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23816 ;; Parameters:    Size  Location     Type
 23817 ;;		None
 23818 ;; Auto vars:     Size  Location     Type
 23819 ;;		None
 23820 ;; Return value:  Size  Location     Type
 23821 ;;                  1    wreg      void 
 23822 ;; Registers used:
 23823 ;;		wreg, status,2
 23824 ;; Tracked objects:
 23825 ;;		On entry : 0/0
 23826 ;;		On exit  : 0/0
 23827 ;;		Unchanged: 0/0
 23828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23833 ;;Total ram usage:        0 bytes
 23834 ;; Hardware stack levels used:    1
 23835 ;; Hardware stack levels required when called:   11
 23836 ;; This function calls:
 23837 ;;		Nothing
 23838 ;; This function is called by:
 23839 ;;		_Mdm_MainTask
 23840 ;; This function uses a non-reentrant model
 23841 ;;
 23842                           
 23843                           	psect	text114
 23844  005310                     __ptext114:
 23845                           	opt stack 0
 23846  005310                     _UartSetConfig:
 23847                           	opt stack 16
 23848                           
 23849                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 23850                           
 23851                           ; BSR set to: 0
 23852                           ;incstack = 0
 23853  005310  0E01               	movlw	1
 23854  005312  0103               	movlb	3	; () banked
 23855  005314  6F26               	movwf	_UartConfig& (0+255),b
 23856                           
 23857                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 23858  005316  0E00               	movlw	0
 23859  005318  6F27               	movwf	(_UartConfig+1)& (0+255),b
 23860                           
 23861                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 23862  00531A  0E00               	movlw	0
 23863  00531C  6F28               	movwf	(_UartConfig+2)& (0+255),b
 23864                           
 23865                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 23866  00531E  0E00               	movlw	0
 23867  005320  6F29               	movwf	(_UartConfig+3)& (0+255),b
 23868                           
 23869                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 23870  005322  0E00               	movlw	0
 23871  005324  6F2A               	movwf	(_UartConfig+4)& (0+255),b
 23872                           
 23873                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 23874  005326  0E00               	movlw	0
 23875  005328  6F2B               	movwf	(_UartConfig+5)& (0+255),b
 23876                           
 23877                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 23878  00532A  0E01               	movlw	1
 23879  00532C  6F2C               	movwf	(_UartConfig+6)& (0+255),b
 23880                           
 23881                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 23882  00532E  0E01               	movlw	1
 23883  005330  6F2D               	movwf	(_UartConfig+7)& (0+255),b
 23884                           
 23885                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 23886  005332  0E00               	movlw	0
 23887  005334  6F2E               	movwf	(_UartConfig+8)& (0+255),b
 23888                           
 23889                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 23890  005336  0E00               	movlw	0
 23891  005338  6F2F               	movwf	(_UartConfig+9)& (0+255),b
 23892                           
 23893                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 23894  00533A  0E00               	movlw	0
 23895  00533C  6F30               	movwf	(_UartConfig+10)& (0+255),b
 23896                           
 23897                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 23898  00533E  0E00               	movlw	0
 23899  005340  6F31               	movwf	(_UartConfig+11)& (0+255),b
 23900                           
 23901                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 23902  005342  0E01               	movlw	1
 23903  005344  6F32               	movwf	(_UartConfig+12)& (0+255),b
 23904                           
 23905                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 23906  005346  0E00               	movlw	0
 23907  005348  6F33               	movwf	(_UartConfig+13)& (0+255),b
 23908  00534A  0E6C               	movlw	108
 23909  00534C  6F34               	movwf	(_UartConfig+14)& (0+255),b
 23910  00534E  0EDC               	movlw	220
 23911  005350  6F35               	movwf	(_UartConfig+15)& (0+255),b
 23912  005352  0E02               	movlw	2
 23913  005354  6F36               	movwf	(_UartConfig+16)& (0+255),b
 23914                           
 23915                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 23916  005356  0E80               	movlw	128
 23917  005358  6F37               	movwf	(_UartConfig+17)& (0+255),b
 23918  00535A  0E25               	movlw	37
 23919  00535C  6F38               	movwf	(_UartConfig+18)& (0+255),b
 23920  00535E  0E00               	movlw	0
 23921  005360  6F39               	movwf	(_UartConfig+19)& (0+255),b
 23922  005362  0E00               	movlw	0
 23923  005364  6F3A               	movwf	(_UartConfig+20)& (0+255),b
 23924                           
 23925                           ; BSR set to: 3
 23926  005366  0012               	return		;funcret
 23927  005368                     __end_of_UartSetConfig:
 23928                           	opt stack 0
 23929                           tosu	equ	0xFFF
 23930                           tosh	equ	0xFFE
 23931                           tosl	equ	0xFFD
 23932                           pclath	equ	0xFFA
 23933                           tblptru	equ	0xFF8
 23934                           tblptrh	equ	0xFF7
 23935                           tblptrl	equ	0xFF6
 23936                           tablat	equ	0xFF5
 23937                           prodh	equ	0xFF4
 23938                           prodl	equ	0xFF3
 23939                           intcon	equ	0xFF2
 23940                           intcon2	equ	0xFF1
 23941                           intcon3	equ	0xFF0
 23942                           indf0	equ	0xFEF
 23943                           postinc0	equ	0xFEE
 23944                           plusw0	equ	0xFEB
 23945                           fsr0h	equ	0xFEA
 23946                           fsr0l	equ	0xFE9
 23947                           wreg	equ	0xFE8
 23948                           indf1	equ	0xFE7
 23949                           postinc1	equ	0xFE6
 23950                           postdec1	equ	0xFE5
 23951                           fsr1h	equ	0xFE2
 23952                           fsr1l	equ	0xFE1
 23953                           indf2	equ	0xFDF
 23954                           postinc2	equ	0xFDE
 23955                           postdec2	equ	0xFDD
 23956                           plusw2	equ	0xFDB
 23957                           fsr2h	equ	0xFDA
 23958                           fsr2l	equ	0xFD9
 23959                           status	equ	0xFD8
 23960                           
 23961 ;; *************** function _TurnOnModem *****************
 23962 ;; Defined at:
 23963 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23964 ;; Parameters:    Size  Location     Type
 23965 ;;		None
 23966 ;; Auto vars:     Size  Location     Type
 23967 ;;		None
 23968 ;; Return value:  Size  Location     Type
 23969 ;;                  1    wreg      void 
 23970 ;; Registers used:
 23971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23972 ;; Tracked objects:
 23973 ;;		On entry : 0/0
 23974 ;;		On exit  : 0/0
 23975 ;;		Unchanged: 0/0
 23976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23981 ;;Total ram usage:        0 bytes
 23982 ;; Hardware stack levels used:    1
 23983 ;; Hardware stack levels required when called:   12
 23984 ;; This function calls:
 23985 ;;		_GenerateEvt
 23986 ;; This function is called by:
 23987 ;;		_Mdm_MainTask
 23988 ;; This function uses a non-reentrant model
 23989 ;;
 23990                           
 23991                           	psect	text115
 23992  0059B4                     __ptext115:
 23993                           	opt stack 0
 23994  0059B4                     _TurnOnModem:
 23995                           	opt stack 15
 23996                           
 23997                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 23998                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 23999                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 24000                           
 24001                           ; BSR set to: 3
 24002                           ;incstack = 0
 24003  0059B4  D019               	goto	l1009
 24004  0059B6                     
 24005                           ;mdm_gsm_gprs.c: 385: Counter++;
 24006  0059B6  0102               	movlb	2	; () banked
 24007  0059B8  4BDA               	infsnz	TurnOnModem@Counter& (0+255),f,b
 24008  0059BA  2BDB               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 24009                           
 24010                           ; BSR set to: 2
 24011                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 24012  0059BC  0EB8               	movlw	184
 24013  0059BE  5DDA               	subwf	TurnOnModem@Counter& (0+255),w,b
 24014  0059C0  0E0B               	movlw	11
 24015  0059C2  59DB               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 24016  0059C4  A0D8               	btfss	status,0,c
 24017  0059C6  0012               	return	
 24018                           
 24019                           ; BSR set to: 2
 24020                           ;mdm_gsm_gprs.c: 388: {
 24021                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 24022  0059C8  0E01               	movlw	1
 24023  0059CA  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 24024                           
 24025                           ; BSR set to: 2
 24026                           ;mdm_gsm_gprs.c: 391: }
 24027                           ;mdm_gsm_gprs.c: 392: break;
 24028  0059CC  0012               	return	
 24029  0059CE                     
 24030                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 24031                           
 24032                           ; BSR set to: 2
 24033  0059CE  0EE2               	movlw	low _MdmOnOffPulseRequest
 24034  0059D0  0100               	movlb	0	; () banked
 24035  0059D2  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24036  0059D4  0E00               	movlw	high _MdmOnOffPulseRequest
 24037  0059D6  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24038  0059D8  ECB3  F031         	call	_GenerateEvt	;wreg free
 24039                           
 24040                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 24041  0059DC  0E01               	movlw	1
 24042  0059DE  0100               	movlb	0	; () banked
 24043  0059E0  6FD2               	movwf	_MdmStatus& (0+255),b
 24044                           
 24045                           ; BSR set to: 0
 24046                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 24047  0059E2  0E02               	movlw	2
 24048  0059E4  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 24049                           
 24050                           ; BSR set to: 0
 24051                           ;mdm_gsm_gprs.c: 408: }
 24052                           
 24053                           ; BSR set to: 0
 24054                           ;mdm_gsm_gprs.c: 407: break;
 24055                           
 24056                           ;mdm_gsm_gprs.c: 406: default:
 24057                           
 24058                           ; BSR set to: 0
 24059                           ;mdm_gsm_gprs.c: 404: break;
 24060                           
 24061                           ;mdm_gsm_gprs.c: 403: case Stop:
 24062                           
 24063                           ;mdm_gsm_gprs.c: 401: break;
 24064  0059E6  0012               	return	
 24065  0059E8                     l1009:
 24066                           
 24067                           ; BSR set to: 0
 24068  0059E8  5029               	movf	TurnOnModem@TurnOnMdmState,w,c
 24069                           
 24070                           ; Switch size 1, requested type "space"
 24071                           ; Number of cases is 3, Range of values is 0 to 2
 24072                           ; switch strategies available:
 24073                           ; Name         Instructions Cycles
 24074                           ; simple_byte           10     6 (average)
 24075                           ;	Chosen strategy is simple_byte
 24076  0059EA  0A00               	xorlw	0	; case 0
 24077  0059EC  B4D8               	btfsc	status,2,c
 24078  0059EE  D7E3               	goto	l1010
 24079  0059F0  0A01               	xorlw	1	; case 1
 24080  0059F2  B4D8               	btfsc	status,2,c
 24081  0059F4  D7EC               	goto	l1013
 24082  0059F6  0A03               	xorlw	3	; case 2
 24083  0059F8  0012               	return	
 24084  0059FA                     __end_of_TurnOnModem:
 24085                           	opt stack 0
 24086                           tosu	equ	0xFFF
 24087                           tosh	equ	0xFFE
 24088                           tosl	equ	0xFFD
 24089                           pclath	equ	0xFFA
 24090                           tblptru	equ	0xFF8
 24091                           tblptrh	equ	0xFF7
 24092                           tblptrl	equ	0xFF6
 24093                           tablat	equ	0xFF5
 24094                           prodh	equ	0xFF4
 24095                           prodl	equ	0xFF3
 24096                           intcon	equ	0xFF2
 24097                           intcon2	equ	0xFF1
 24098                           intcon3	equ	0xFF0
 24099                           indf0	equ	0xFEF
 24100                           postinc0	equ	0xFEE
 24101                           plusw0	equ	0xFEB
 24102                           fsr0h	equ	0xFEA
 24103                           fsr0l	equ	0xFE9
 24104                           wreg	equ	0xFE8
 24105                           indf1	equ	0xFE7
 24106                           postinc1	equ	0xFE6
 24107                           postdec1	equ	0xFE5
 24108                           fsr1h	equ	0xFE2
 24109                           fsr1l	equ	0xFE1
 24110                           indf2	equ	0xFDF
 24111                           postinc2	equ	0xFDE
 24112                           postdec2	equ	0xFDD
 24113                           plusw2	equ	0xFDB
 24114                           fsr2h	equ	0xFDA
 24115                           fsr2l	equ	0xFD9
 24116                           status	equ	0xFD8
 24117                           
 24118 ;; *************** function _SendSmsSm *****************
 24119 ;; Defined at:
 24120 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24121 ;; Parameters:    Size  Location     Type
 24122 ;;		None
 24123 ;; Auto vars:     Size  Location     Type
 24124 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 24125 ;; Return value:  Size  Location     Type
 24126 ;;                  1    wreg      void 
 24127 ;; Registers used:
 24128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24129 ;; Tracked objects:
 24130 ;;		On entry : 0/0
 24131 ;;		On exit  : 0/0
 24132 ;;		Unchanged: 0/0
 24133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24135 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24136 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24137 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24138 ;;Total ram usage:       52 bytes
 24139 ;; Hardware stack levels used:    1
 24140 ;; Hardware stack levels required when called:   14
 24141 ;; This function calls:
 24142 ;;		_OsTmr_GetTimerStatus
 24143 ;;		_OsTmr_StartTimer
 24144 ;;		_ReceiveEvt
 24145 ;;		_StringCopy
 24146 ;;		_Uart_WriteStringLen
 24147 ;; This function is called by:
 24148 ;;		_Mdm_MainTask
 24149 ;; This function uses a non-reentrant model
 24150 ;;
 24151                           
 24152                           	psect	text116
 24153  0019F2                     __ptext116:
 24154                           	opt stack 0
 24155  0019F2                     _SendSmsSm:
 24156                           	opt stack 13
 24157                           
 24158                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 24159                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 24160                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 24161                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 24162                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 24163                           
 24164                           ;incstack = 0
 24165  0019F2  0E03               	movlw	3
 24166  0019F4  0100               	movlb	0	; () banked
 24167  0019F6  19D2               	xorwf	_MdmStatus& (0+255),w,b
 24168  0019F8  A4D8               	btfss	status,2,c
 24169  0019FA  0012               	return	
 24170  0019FC  D0C1               	goto	l1091
 24171  0019FE                     
 24172                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 24173                           
 24174                           ; BSR set to: 0
 24175  0019FE  0EE1               	movlw	low _SendSmsEvent
 24176  001A00  0100               	movlb	0	; () banked
 24177  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24178  001A04  0E00               	movlw	high _SendSmsEvent
 24179  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24180  001A08  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 24181  001A0C  0900               	iorlw	0
 24182  001A0E  B4D8               	btfsc	status,2,c
 24183  001A10  0012               	return	
 24184                           
 24185                           ;mdm_gsm_gprs.c: 671: {
 24186                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 24187  001A12  0E01               	movlw	1
 24188  001A14  0101               	movlb	1	; () banked
 24189  001A16  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 24190                           
 24191                           ; BSR set to: 1
 24192                           ;mdm_gsm_gprs.c: 674: }
 24193                           ;mdm_gsm_gprs.c: 675: break;
 24194  001A18  0012               	return	
 24195  001A1A                     
 24196                           ; BSR set to: 1
 24197                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 24198                           
 24199                           ; BSR set to: 1
 24200  001A1A  0ECD               	movlw	low STR_5
 24201  001A1C  0100               	movlb	0	; () banked
 24202  001A1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24203  001A20  0EFF               	movlw	high STR_5
 24204  001A22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24205  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 24206  001A26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24207  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 24208  001A2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24209  001A2C  0E00               	movlw	0
 24210  001A2E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 24211  001A30  0E09               	movlw	9
 24212  001A32  6F81               	movwf	StringCopy@Len& (0+255),b
 24213  001A34  ECCB  F028         	call	_StringCopy	;wreg free
 24214                           
 24215                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 24216  001A38  0EA9               	movlw	low _PhoneNumber
 24217  001A3A  0100               	movlb	0	; () banked
 24218  001A3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24219  001A3E  0E04               	movlw	high _PhoneNumber
 24220  001A40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24221  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 24222  001A44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24223  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 24224  001A48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24225  001A4A  C0D3  F081         	movff	_PhoneNumbLen,StringCopy@Len
 24226  001A4E  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 24227  001A50  ECCB  F028         	call	_StringCopy	;wreg free
 24228                           
 24229                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 24230  001A54  0100               	movlb	0	; () banked
 24231  001A56  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 24232  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 24233  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 24234  001A5C  0E09               	movlw	9
 24235  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 24236  001A60  0E00               	movlw	0
 24237  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 24238  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 24239  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 24240  001A68  6ED9               	movwf	fsr2l,c
 24241  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 24242  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 24243  001A6E  6EDA               	movwf	fsr2h,c
 24244  001A70  0E22               	movlw	34
 24245  001A72  6EDF               	movwf	indf2,c
 24246                           
 24247                           ; BSR set to: 0
 24248                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 24249  001A74  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 24250  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 24251  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 24252  001A7A  0E0A               	movlw	10
 24253  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 24254  001A7E  0E00               	movlw	0
 24255  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 24256  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 24257  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 24258  001A86  6ED9               	movwf	fsr2l,c
 24259  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 24260  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 24261  001A8C  6EDA               	movwf	fsr2h,c
 24262  001A8E  0E0D               	movlw	13
 24263  001A90  6EDF               	movwf	indf2,c
 24264                           
 24265                           ; BSR set to: 0
 24266                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 24267  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 24268  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 24269  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 24270  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 24271  001A9A  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 24272  001A9C  0F0B               	addlw	11
 24273  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 24274  001AA0  0E01               	movlw	1
 24275  001AA2  ECC7  F02D         	call	_Uart_WriteStringLen
 24276                           
 24277                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 24278  001AA6  0EE9               	movlw	low SendSmsSm@SwTimer
 24279  001AA8  0100               	movlb	0	; () banked
 24280  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24281  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 24282  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24283  001AB0  0EC4               	movlw	196
 24284  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24285  001AB4  0E09               	movlw	9
 24286  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24287  001AB8  0E00               	movlw	0
 24288  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 24289  001ABC  0E00               	movlw	0
 24290  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 24291  001AC0  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 24292                           
 24293                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 24294  001AC4  0E05               	movlw	5
 24295  001AC6  0101               	movlb	1	; () banked
 24296  001AC8  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 24297                           
 24298                           ; BSR set to: 1
 24299                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 24300  001ACA  0E02               	movlw	2
 24301  001ACC  6FF2               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 24302                           
 24303                           ;mdm_gsm_gprs.c: 691: break;
 24304  001ACE  0012               	return	
 24305  001AD0                     
 24306                           ; BSR set to: 1
 24307                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 24308                           
 24309                           ; BSR set to: 1
 24310  001AD0  0E0A               	movlw	10
 24311  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 24312                           
 24313                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 24314  001AD4  0E0D               	movlw	13
 24315  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 24316                           
 24317                           ; BSR set to: 1
 24318                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 24319  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 24320  001ADA  0100               	movlb	0	; () banked
 24321  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 24322  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 24323  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 24324  001AE2  0E02               	movlw	2
 24325  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 24326  001AE6  0E01               	movlw	1
 24327  001AE8  ECC7  F02D         	call	_Uart_WriteStringLen
 24328                           
 24329                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 24330  001AEC  0E03               	movlw	3
 24331  001AEE  0101               	movlb	1	; () banked
 24332  001AF0  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 24333                           
 24334                           ;mdm_gsm_gprs.c: 701: break;
 24335  001AF2  0012               	return	
 24336  001AF4                     
 24337                           ; BSR set to: 1
 24338                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 24339                           
 24340                           ; BSR set to: 1
 24341  001AF4  0E3C               	movlw	low _NewStringReceived
 24342  001AF6  0100               	movlb	0	; () banked
 24343  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24344  001AFA  0E00               	movlw	high _NewStringReceived
 24345  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24346  001AFE  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 24347  001B02  0900               	iorlw	0
 24348  001B04  B4D8               	btfsc	status,2,c
 24349  001B06  0012               	return	
 24350                           
 24351                           ;mdm_gsm_gprs.c: 706: {
 24352                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 24353  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 24354  001B0C  0A3E               	xorlw	62
 24355  001B0E  A4D8               	btfss	status,2,c
 24356  001B10  0012               	return	
 24357                           
 24358                           ;mdm_gsm_gprs.c: 709: {
 24359                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 24360  001B12  0E04               	movlw	4
 24361  001B14  0101               	movlb	1	; () banked
 24362  001B16  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 24363                           
 24364                           ; BSR set to: 1
 24365                           ;mdm_gsm_gprs.c: 712: }
 24366                           ;mdm_gsm_gprs.c: 713: }
 24367                           ;mdm_gsm_gprs.c: 714: break;
 24368                           
 24369                           ; BSR set to: 1
 24370  001B18  0012               	return	
 24371  001B1A                     
 24372                           ; BSR set to: 1
 24373                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 24374                           
 24375                           ; BSR set to: 1
 24376  001B1A  0E72               	movlw	low _MessageText
 24377  001B1C  0100               	movlb	0	; () banked
 24378  001B1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24379  001B20  0E05               	movlw	high _MessageText
 24380  001B22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24381  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 24382  001B26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24383  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 24384  001B2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24385  001B2C  C0D4  F081         	movff	_SmsLen,StringCopy@Len
 24386  001B30  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 24387  001B32  ECCB  F028         	call	_StringCopy	;wreg free
 24388                           
 24389                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 24390  001B36  0100               	movlb	0	; () banked
 24391  001B38  51D4               	movf	_SmsLen& (0+255),w,b
 24392  001B3A  0D01               	mullw	1
 24393  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 24394  001B3E  24F3               	addwf	prodl,w,c
 24395  001B40  6ED9               	movwf	fsr2l,c
 24396  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 24397  001B44  20F4               	addwfc	prodh,w,c
 24398  001B46  6EDA               	movwf	fsr2h,c
 24399  001B48  0E1A               	movlw	26
 24400  001B4A  6EDF               	movwf	indf2,c
 24401                           
 24402                           ; BSR set to: 0
 24403                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 24404  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 24405  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 24406  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 24407  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 24408  001B54  29D4               	incf	_SmsLen& (0+255),w,b
 24409  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 24410  001B58  0E01               	movlw	1
 24411  001B5A  ECC7  F02D         	call	_Uart_WriteStringLen
 24412                           
 24413                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 24414  001B5E  0E00               	movlw	0
 24415  001B60  0101               	movlb	1	; () banked
 24416  001B62  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 24417                           
 24418                           ;mdm_gsm_gprs.c: 725: break;
 24419  001B64  0012               	return	
 24420  001B66                     
 24421                           ; BSR set to: 1
 24422                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 24423                           
 24424                           ; BSR set to: 1
 24425  001B66  0EE9               	movlw	low SendSmsSm@SwTimer
 24426  001B68  0100               	movlb	0	; () banked
 24427  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 24428  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 24429  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 24430  001B70  EC39  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 24431  001B74  06E8               	decf	wreg,f,c
 24432  001B76  A4D8               	btfss	status,2,c
 24433  001B78  0012               	return	
 24434                           
 24435                           ;mdm_gsm_gprs.c: 730: {
 24436                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 24437  001B7A  C1F2  F1F3         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 24438                           
 24439                           ;mdm_gsm_gprs.c: 738: }
 24440                           
 24441                           ;mdm_gsm_gprs.c: 737: break;
 24442                           
 24443                           ;mdm_gsm_gprs.c: 736: default:
 24444                           
 24445                           ;mdm_gsm_gprs.c: 733: }
 24446                           ;mdm_gsm_gprs.c: 734: break;
 24447  001B7E  0012               	return	
 24448  001B80                     l1091:
 24449  001B80  0101               	movlb	1	; () banked
 24450  001B82  51F3               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 24451                           
 24452                           ; Switch size 1, requested type "space"
 24453                           ; Number of cases is 6, Range of values is 0 to 5
 24454                           ; switch strategies available:
 24455                           ; Name         Instructions Cycles
 24456                           ; simple_byte           19    10 (average)
 24457                           ;	Chosen strategy is simple_byte
 24458  001B84  0A00               	xorlw	0	; case 0
 24459  001B86  B4D8               	btfsc	status,2,c
 24460  001B88  D73A               	goto	l1092
 24461  001B8A  0A01               	xorlw	1	; case 1
 24462  001B8C  B4D8               	btfsc	status,2,c
 24463  001B8E  D745               	goto	l1095
 24464  001B90  0A03               	xorlw	3	; case 2
 24465  001B92  B4D8               	btfsc	status,2,c
 24466  001B94  D79D               	goto	l1096
 24467  001B96  0A01               	xorlw	1	; case 3
 24468  001B98  B4D8               	btfsc	status,2,c
 24469  001B9A  D7AC               	goto	l1097
 24470  001B9C  0A07               	xorlw	7	; case 4
 24471  001B9E  B4D8               	btfsc	status,2,c
 24472  001BA0  D7BC               	goto	l1100
 24473  001BA2  0A01               	xorlw	1	; case 5
 24474  001BA4  A4D8               	btfss	status,2,c
 24475                           
 24476                           ; BSR set to: 1
 24477  001BA6  0012               	return	
 24478  001BA8  D7DE               	goto	l1101
 24479  001BAA                     __end_of_SendSmsSm:
 24480                           	opt stack 0
 24481                           tosu	equ	0xFFF
 24482                           tosh	equ	0xFFE
 24483                           tosl	equ	0xFFD
 24484                           pclath	equ	0xFFA
 24485                           tblptru	equ	0xFF8
 24486                           tblptrh	equ	0xFF7
 24487                           tblptrl	equ	0xFF6
 24488                           tablat	equ	0xFF5
 24489                           prodh	equ	0xFF4
 24490                           prodl	equ	0xFF3
 24491                           intcon	equ	0xFF2
 24492                           intcon2	equ	0xFF1
 24493                           intcon3	equ	0xFF0
 24494                           indf0	equ	0xFEF
 24495                           postinc0	equ	0xFEE
 24496                           plusw0	equ	0xFEB
 24497                           fsr0h	equ	0xFEA
 24498                           fsr0l	equ	0xFE9
 24499                           wreg	equ	0xFE8
 24500                           indf1	equ	0xFE7
 24501                           postinc1	equ	0xFE6
 24502                           postdec1	equ	0xFE5
 24503                           fsr1h	equ	0xFE2
 24504                           fsr1l	equ	0xFE1
 24505                           indf2	equ	0xFDF
 24506                           postinc2	equ	0xFDE
 24507                           postdec2	equ	0xFDD
 24508                           plusw2	equ	0xFDB
 24509                           fsr2h	equ	0xFDA
 24510                           fsr2l	equ	0xFD9
 24511                           status	equ	0xFD8
 24512                           
 24513 ;; *************** function _Uart_WriteStringLen *****************
 24514 ;; Defined at:
 24515 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24516 ;; Parameters:    Size  Location     Type
 24517 ;;  Module          1    wreg     unsigned char 
 24518 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 24519 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 24520 ;;  Len             1   34[BANK0 ] unsigned char 
 24521 ;; Auto vars:     Size  Location     Type
 24522 ;;  Module          1   36[BANK0 ] unsigned char 
 24523 ;;  Index           1   35[BANK0 ] unsigned char 
 24524 ;; Return value:  Size  Location     Type
 24525 ;;                  1    wreg      void 
 24526 ;; Registers used:
 24527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24528 ;; Tracked objects:
 24529 ;;		On entry : 0/0
 24530 ;;		On exit  : 0/0
 24531 ;;		Unchanged: 0/0
 24532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24533 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24534 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24536 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24537 ;;Total ram usage:        5 bytes
 24538 ;; Hardware stack levels used:    1
 24539 ;; Hardware stack levels required when called:   12
 24540 ;; This function calls:
 24541 ;;		_UartTxBufferStatus
 24542 ;;		_UartWriteByte
 24543 ;; This function is called by:
 24544 ;;		_SendSmsSm
 24545 ;;		_GsmGprsTerminal
 24546 ;; This function uses a non-reentrant model
 24547 ;;
 24548                           
 24549                           	psect	text117
 24550  005B8E                     __ptext117:
 24551                           	opt stack 0
 24552  005B8E                     _Uart_WriteStringLen:
 24553                           	opt stack 14
 24554                           
 24555                           ;incstack = 0
 24556                           ;Uart_WriteStringLen@Module stored from wreg
 24557  005B8E  0100               	movlb	0	; () banked
 24558  005B90  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 24559                           
 24560                           ;uart_drv.c: 544: UINT8 Index;
 24561                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 24562  005B92  0E00               	movlw	0
 24563  005B94  0100               	movlb	0	; () banked
 24564  005B96  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 24565  005B98  D015               	goto	l715
 24566  005B9A                     
 24567                           ; BSR set to: 0
 24568                           ;uart_drv.c: 547: {
 24569                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 24570                           
 24571                           ; BSR set to: 0
 24572  005B9A  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 24573  005B9E  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 24574  005BA2  50DF               	movf	indf2,w,c
 24575  005BA4  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 24576  005BA6  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 24577  005BA8  EC2A  F031         	call	_UartWriteByte
 24578                           
 24579                           ;uart_drv.c: 551: StringToWrite++;
 24580  005BAC  0100               	movlb	0	; () banked
 24581  005BAE  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 24582  005BB0  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 24583  005BB2                     
 24584                           ; BSR set to: 0
 24585                           
 24586                           ; BSR set to: 0
 24587  005BB2  0100               	movlb	0	; () banked
 24588  005BB4  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 24589  005BB6  ECFB  F02B         	call	_UartTxBufferStatus
 24590  005BBA  06E8               	decf	wreg,f,c
 24591  005BBC  B4D8               	btfsc	status,2,c
 24592  005BBE  D7F9               	goto	l718
 24593  005BC0  0100               	movlb	0	; () banked
 24594  005BC2  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 24595  005BC4                     l715:
 24596                           
 24597                           ; BSR set to: 0
 24598                           
 24599                           ; BSR set to: 0
 24600  005BC4  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 24601  005BC6  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 24602  005BC8  B0D8               	btfsc	status,0,c
 24603  005BCA  0012               	return	
 24604  005BCC  D7E6               	goto	l716
 24605  005BCE                     __end_of_Uart_WriteStringLen:
 24606                           	opt stack 0
 24607                           tosu	equ	0xFFF
 24608                           tosh	equ	0xFFE
 24609                           tosl	equ	0xFFD
 24610                           pclath	equ	0xFFA
 24611                           tblptru	equ	0xFF8
 24612                           tblptrh	equ	0xFF7
 24613                           tblptrl	equ	0xFF6
 24614                           tablat	equ	0xFF5
 24615                           prodh	equ	0xFF4
 24616                           prodl	equ	0xFF3
 24617                           intcon	equ	0xFF2
 24618                           intcon2	equ	0xFF1
 24619                           intcon3	equ	0xFF0
 24620                           indf0	equ	0xFEF
 24621                           postinc0	equ	0xFEE
 24622                           plusw0	equ	0xFEB
 24623                           fsr0h	equ	0xFEA
 24624                           fsr0l	equ	0xFE9
 24625                           wreg	equ	0xFE8
 24626                           indf1	equ	0xFE7
 24627                           postinc1	equ	0xFE6
 24628                           postdec1	equ	0xFE5
 24629                           fsr1h	equ	0xFE2
 24630                           fsr1l	equ	0xFE1
 24631                           indf2	equ	0xFDF
 24632                           postinc2	equ	0xFDE
 24633                           postdec2	equ	0xFDD
 24634                           plusw2	equ	0xFDB
 24635                           fsr2h	equ	0xFDA
 24636                           fsr2l	equ	0xFD9
 24637                           status	equ	0xFD8
 24638                           
 24639 ;; *************** function _ModemEvtParser *****************
 24640 ;; Defined at:
 24641 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24642 ;; Parameters:    Size  Location     Type
 24643 ;;		None
 24644 ;; Auto vars:     Size  Location     Type
 24645 ;;  CallReadyStr   10   40[BANK0 ] unsigned char [10]
 24646 ;;  SmsString       5   55[BANK0 ] unsigned char [5]
 24647 ;;  ClipString      5   50[BANK0 ] unsigned char [5]
 24648 ;;  RingString      4   60[BANK0 ] unsigned char [4]
 24649 ;;  CompareIdx      1   65[BANK0 ] unsigned char 
 24650 ;;  Match           1   64[BANK0 ] unsigned char 
 24651 ;; Return value:  Size  Location     Type
 24652 ;;                  1    wreg      void 
 24653 ;; Registers used:
 24654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24655 ;; Tracked objects:
 24656 ;;		On entry : 0/0
 24657 ;;		On exit  : 0/0
 24658 ;;		Unchanged: 0/0
 24659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24661 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24663 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24664 ;;Total ram usage:       26 bytes
 24665 ;; Hardware stack levels used:    1
 24666 ;; Hardware stack levels required when called:   12
 24667 ;; This function calls:
 24668 ;;		_GenerateEvt
 24669 ;;		_ReceiveEvt
 24670 ;;		_StringCompare
 24671 ;;		_StringCopy
 24672 ;;		_Uart_ClearRxBuffer
 24673 ;; This function is called by:
 24674 ;;		_Mdm_MainTask
 24675 ;; This function uses a non-reentrant model
 24676 ;;
 24677                           
 24678                           	psect	text118
 24679  001D32                     __ptext118:
 24680                           	opt stack 0
 24681  001D32                     _ModemEvtParser:
 24682                           	opt stack 15
 24683                           
 24684                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 24685                           
 24686                           ; BSR set to: 0
 24687                           ;incstack = 0
 24688  001D32  C3CA  F09C         	movff	ModemEvtParser@F9106,ModemEvtParser@RingString
 24689  001D36  C3CB  F09D         	movff	ModemEvtParser@F9106+1,ModemEvtParser@RingString+1
 24690  001D3A  C3CC  F09E         	movff	ModemEvtParser@F9106+2,ModemEvtParser@RingString+2
 24691  001D3E  C3CD  F09F         	movff	ModemEvtParser@F9106+3,ModemEvtParser@RingString+3
 24692                           
 24693                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 24694  001D42  EE23  F0C5         	lfsr	2,ModemEvtParser@F9108
 24695  001D46  EE10  F092         	lfsr	1,ModemEvtParser@ClipString
 24696  001D4A  0E04               	movlw	4
 24697  001D4C                     u13681:
 24698  001D4C  CFDB FFE3          	movff	plusw2,plusw1
 24699  001D50  06E8               	decf	wreg,f,c
 24700  001D52  E2FC               	bc	u13681
 24701                           
 24702                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 24703  001D54  EE23  F0C0         	lfsr	2,ModemEvtParser@F9110
 24704  001D58  EE10  F097         	lfsr	1,ModemEvtParser@SmsString
 24705  001D5C  0E04               	movlw	4
 24706  001D5E                     u13691:
 24707  001D5E  CFDB FFE3          	movff	plusw2,plusw1
 24708  001D62  06E8               	decf	wreg,f,c
 24709  001D64  E2FC               	bc	u13691
 24710                           
 24711                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 24712  001D66  EE24  F0F2         	lfsr	2,ModemEvtParser@F9112
 24713  001D6A  EE10  F088         	lfsr	1,ModemEvtParser@CallReadyString
 24714  001D6E  0E09               	movlw	9
 24715  001D70                     u13701:
 24716  001D70  CFDB FFE3          	movff	plusw2,plusw1
 24717  001D74  06E8               	decf	wreg,f,c
 24718  001D76  E2FC               	bc	u13701
 24719                           
 24720                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 24721  001D78  0E00               	movlw	0
 24722  001D7A  0100               	movlb	0	; () banked
 24723  001D7C  6FA1               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 24724                           
 24725                           ; BSR set to: 0
 24726                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 24727  001D7E  0E00               	movlw	0
 24728  001D80  6FA0               	movwf	ModemEvtParser@Match& (0+255),b
 24729                           
 24730                           ; BSR set to: 0
 24731                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 24732  001D82  0E3B               	movlw	low _NewMdmEvtParserRequest
 24733  001D84  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24734  001D86  0E00               	movlw	high _NewMdmEvtParserRequest
 24735  001D88  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24736  001D8A  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 24737  001D8E  0900               	iorlw	0
 24738  001D90  B4D8               	btfsc	status,2,c
 24739  001D92  0012               	return	
 24740                           
 24741                           ;mdm_gsm_gprs.c: 510: {
 24742                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 24743  001D94  0E00               	movlw	0
 24744  001D96  0100               	movlb	0	; () banked
 24745  001D98  6FA1               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 24746  001D9A                     l14468:
 24747                           
 24748                           ; BSR set to: 0
 24749  001D9A  0E03               	movlw	3
 24750  001D9C  65A1               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 24751  001D9E  D074               	goto	l1052
 24752  001DA0  D083               	goto	u13770
 24753  001DA2                     
 24754                           ; BSR set to: 0
 24755                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 24756                           
 24757                           ; BSR set to: 0
 24758  001DA2  0E9C               	movlw	low ModemEvtParser@RingString
 24759  001DA4  6F7D               	movwf	StringCompare@String1& (0+255),b
 24760  001DA6  0E00               	movlw	high ModemEvtParser@RingString
 24761  001DA8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 24762  001DAA  0E58               	movlw	low _RxBuffer
 24763  001DAC  6F7F               	movwf	StringCompare@String2& (0+255),b
 24764  001DAE  0E0C               	movlw	high _RxBuffer
 24765  001DB0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24766  001DB2  0E00               	movlw	0
 24767  001DB4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24768  001DB6  0E04               	movlw	4
 24769  001DB8  6F81               	movwf	StringCompare@Len& (0+255),b
 24770  001DBA  EC33  F02B         	call	_StringCompare	;wreg free
 24771  001DBE  0900               	iorlw	0
 24772  001DC0  B4D8               	btfsc	status,2,c
 24773  001DC2  D06F               	goto	l1055
 24774                           
 24775                           ;mdm_gsm_gprs.c: 518: {
 24776                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 24777  001DC4  0EE0               	movlw	low _RingEvent
 24778  001DC6  0100               	movlb	0	; () banked
 24779  001DC8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24780  001DCA  0E00               	movlw	high _RingEvent
 24781  001DCC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24782  001DCE  ECB3  F031         	call	_GenerateEvt	;wreg free
 24783  001DD2  D040               	goto	l14490
 24784  001DD4                     
 24785                           ; BSR set to: 0
 24786                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 24787                           
 24788                           ; BSR set to: 0
 24789  001DD4  0E92               	movlw	low ModemEvtParser@ClipString
 24790  001DD6  6F7D               	movwf	StringCompare@String1& (0+255),b
 24791  001DD8  0E00               	movlw	high ModemEvtParser@ClipString
 24792  001DDA  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 24793  001DDC  0E58               	movlw	low _RxBuffer
 24794  001DDE  6F7F               	movwf	StringCompare@String2& (0+255),b
 24795  001DE0  0E0C               	movlw	high _RxBuffer
 24796  001DE2  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24797  001DE4  0E00               	movlw	0
 24798  001DE6  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24799  001DE8  0E05               	movlw	5
 24800  001DEA  6F81               	movwf	StringCompare@Len& (0+255),b
 24801  001DEC  EC33  F02B         	call	_StringCompare	;wreg free
 24802  001DF0  0900               	iorlw	0
 24803  001DF2  B4D8               	btfsc	status,2,c
 24804  001DF4  D056               	goto	l1055
 24805                           
 24806                           ;mdm_gsm_gprs.c: 529: {
 24807                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(14)));
 24808  001DF6  0E60               	movlw	low (_RxBuffer+8)
 24809  001DF8  0100               	movlb	0	; () banked
 24810  001DFA  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24811  001DFC  0E0C               	movlw	high (_RxBuffer+8)
 24812  001DFE  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24813  001E00  0ECC               	movlw	low _callerNumber
 24814  001E02  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24815  001E04  0E04               	movlw	high _callerNumber
 24816  001E06  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24817  001E08  0E00               	movlw	0
 24818  001E0A  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 24819  001E0C  0E0E               	movlw	14
 24820  001E0E  6F81               	movwf	StringCopy@Len& (0+255),b
 24821  001E10  ECCB  F028         	call	_StringCopy	;wreg free
 24822                           
 24823                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 24824  001E14  0EDF               	movlw	low _ClipEvent
 24825  001E16  0100               	movlb	0	; () banked
 24826  001E18  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24827  001E1A  0E00               	movlw	high _ClipEvent
 24828  001E1C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24829  001E1E  ECB3  F031         	call	_GenerateEvt	;wreg free
 24830  001E22  D018               	goto	l14490
 24831  001E24                     
 24832                           ; BSR set to: 0
 24833                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 24834                           
 24835                           ; BSR set to: 0
 24836  001E24  0E97               	movlw	low ModemEvtParser@SmsString
 24837  001E26  6F7D               	movwf	StringCompare@String1& (0+255),b
 24838  001E28  0E00               	movlw	high ModemEvtParser@SmsString
 24839  001E2A  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 24840  001E2C  0E58               	movlw	low _RxBuffer
 24841  001E2E  6F7F               	movwf	StringCompare@String2& (0+255),b
 24842  001E30  0E0C               	movlw	high _RxBuffer
 24843  001E32  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24844  001E34  0E00               	movlw	0
 24845  001E36  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24846  001E38  0E05               	movlw	5
 24847  001E3A  6F81               	movwf	StringCompare@Len& (0+255),b
 24848  001E3C  EC33  F02B         	call	_StringCompare	;wreg free
 24849  001E40  0900               	iorlw	0
 24850  001E42  B4D8               	btfsc	status,2,c
 24851  001E44  D02E               	goto	l1055
 24852                           
 24853                           ;mdm_gsm_gprs.c: 541: {
 24854                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 24855  001E46  0EDE               	movlw	low _SmsEvent
 24856  001E48  0100               	movlb	0	; () banked
 24857  001E4A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24858  001E4C  0E00               	movlw	high _SmsEvent
 24859  001E4E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24860  001E50  ECB3  F031         	call	_GenerateEvt	;wreg free
 24861  001E54                     l14490:
 24862                           
 24863                           ;mdm_gsm_gprs.c: 545: Match = 1;
 24864  001E54  0E01               	movlw	1
 24865  001E56  0100               	movlb	0	; () banked
 24866  001E58  D015               	goto	L36
 24867  001E5A                     
 24868                           ; BSR set to: 0
 24869                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 24870                           
 24871                           ; BSR set to: 0
 24872  001E5A  0E88               	movlw	low ModemEvtParser@CallReadyString
 24873  001E5C  6F7D               	movwf	StringCompare@String1& (0+255),b
 24874  001E5E  0E00               	movlw	high ModemEvtParser@CallReadyString
 24875  001E60  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 24876  001E62  0E58               	movlw	low _RxBuffer
 24877  001E64  6F7F               	movwf	StringCompare@String2& (0+255),b
 24878  001E66  0E0C               	movlw	high _RxBuffer
 24879  001E68  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24880  001E6A  0E00               	movlw	0
 24881  001E6C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24882  001E6E  0E0A               	movlw	10
 24883  001E70  6F81               	movwf	StringCompare@Len& (0+255),b
 24884  001E72  EC33  F02B         	call	_StringCompare	;wreg free
 24885  001E76  0900               	iorlw	0
 24886  001E78  B4D8               	btfsc	status,2,c
 24887  001E7A  D013               	goto	l1055
 24888                           
 24889                           ;mdm_gsm_gprs.c: 552: {
 24890                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 24891  001E7C  0E02               	movlw	2
 24892  001E7E  0100               	movlb	0	; () banked
 24893  001E80  6FD2               	movwf	_MdmStatus& (0+255),b
 24894                           
 24895                           ;mdm_gsm_gprs.c: 556: Match = 1;
 24896  001E82  0E01               	movlw	1
 24897  001E84                     L36:
 24898  001E84  6FA0               	movwf	ModemEvtParser@Match& (0+255),b
 24899                           
 24900                           ; BSR set to: 0
 24901                           ;mdm_gsm_gprs.c: 562: }
 24902                           
 24903                           ; BSR set to: 0
 24904                           ;mdm_gsm_gprs.c: 561: break;
 24905                           
 24906                           ;mdm_gsm_gprs.c: 560: default:
 24907                           
 24908                           ; BSR set to: 0
 24909                           ;mdm_gsm_gprs.c: 557: }
 24910                           ;mdm_gsm_gprs.c: 558: break;
 24911  001E86  D00D               	goto	l1055
 24912  001E88                     l1052:
 24913                           
 24914                           ; BSR set to: 0
 24915                           
 24916                           ; BSR set to: 0
 24917  001E88  51A1               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 24918                           
 24919                           ; Switch size 1, requested type "space"
 24920                           ; Number of cases is 4, Range of values is 0 to 3
 24921                           ; switch strategies available:
 24922                           ; Name         Instructions Cycles
 24923                           ; simple_byte           13     7 (average)
 24924                           ;	Chosen strategy is simple_byte
 24925  001E8A  0A00               	xorlw	0	; case 0
 24926  001E8C  B4D8               	btfsc	status,2,c
 24927  001E8E  D789               	goto	l1053
 24928  001E90  0A01               	xorlw	1	; case 1
 24929  001E92  B4D8               	btfsc	status,2,c
 24930  001E94  D7C7               	goto	l1058
 24931  001E96  0A03               	xorlw	3	; case 2
 24932  001E98  B4D8               	btfsc	status,2,c
 24933  001E9A  D7DF               	goto	l1060
 24934  001E9C  0A01               	xorlw	1	; case 3
 24935  001E9E  B4D8               	btfsc	status,2,c
 24936  001EA0  D799               	goto	l1056
 24937  001EA2                     l1055:
 24938                           
 24939                           ; BSR set to: 0
 24940  001EA2  0100               	movlb	0	; () banked
 24941  001EA4  2BA1               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 24942  001EA6  D779               	goto	l14468
 24943  001EA8                     u13770:
 24944                           
 24945                           ; BSR set to: 0
 24946                           ;mdm_gsm_gprs.c: 563: }
 24947                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 24948                           
 24949                           ; BSR set to: 0
 24950  001EA8  05A0               	decf	ModemEvtParser@Match& (0+255),w,b
 24951  001EAA  A4D8               	btfss	status,2,c
 24952  001EAC  0012               	return	
 24953                           
 24954                           ; BSR set to: 0
 24955                           ;mdm_gsm_gprs.c: 567: {
 24956                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 24957  001EAE  ECF2  F02E         	call	_Uart_ClearRxBuffer	;wreg free
 24958  001EB2  0012               	return	
 24959  001EB4                     __end_of_ModemEvtParser:
 24960                           	opt stack 0
 24961                           tosu	equ	0xFFF
 24962                           tosh	equ	0xFFE
 24963                           tosl	equ	0xFFD
 24964                           pclath	equ	0xFFA
 24965                           tblptru	equ	0xFF8
 24966                           tblptrh	equ	0xFF7
 24967                           tblptrl	equ	0xFF6
 24968                           tablat	equ	0xFF5
 24969                           prodh	equ	0xFF4
 24970                           prodl	equ	0xFF3
 24971                           intcon	equ	0xFF2
 24972                           intcon2	equ	0xFF1
 24973                           intcon3	equ	0xFF0
 24974                           indf0	equ	0xFEF
 24975                           postinc0	equ	0xFEE
 24976                           plusw0	equ	0xFEB
 24977                           fsr0h	equ	0xFEA
 24978                           fsr0l	equ	0xFE9
 24979                           wreg	equ	0xFE8
 24980                           indf1	equ	0xFE7
 24981                           postinc1	equ	0xFE6
 24982                           postdec1	equ	0xFE5
 24983                           plusw1	equ	0xFE3
 24984                           fsr1h	equ	0xFE2
 24985                           fsr1l	equ	0xFE1
 24986                           indf2	equ	0xFDF
 24987                           postinc2	equ	0xFDE
 24988                           postdec2	equ	0xFDD
 24989                           plusw2	equ	0xFDB
 24990                           fsr2h	equ	0xFDA
 24991                           fsr2l	equ	0xFD9
 24992                           status	equ	0xFD8
 24993                           
 24994 ;; *************** function _Uart_ClearRxBuffer *****************
 24995 ;; Defined at:
 24996 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24997 ;; Parameters:    Size  Location     Type
 24998 ;;		None
 24999 ;; Auto vars:     Size  Location     Type
 25000 ;;  Index           2   29[BANK0 ] unsigned short 
 25001 ;; Return value:  Size  Location     Type
 25002 ;;                  1    wreg      void 
 25003 ;; Registers used:
 25004 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25005 ;; Tracked objects:
 25006 ;;		On entry : 0/0
 25007 ;;		On exit  : 0/0
 25008 ;;		Unchanged: 0/0
 25009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25011 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25013 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25014 ;;Total ram usage:        2 bytes
 25015 ;; Hardware stack levels used:    1
 25016 ;; Hardware stack levels required when called:   11
 25017 ;; This function calls:
 25018 ;;		Nothing
 25019 ;; This function is called by:
 25020 ;;		_ModemEvtParser
 25021 ;; This function uses a non-reentrant model
 25022 ;;
 25023                           
 25024                           	psect	text119
 25025  005DE4                     __ptext119:
 25026                           	opt stack 0
 25027  005DE4                     _Uart_ClearRxBuffer:
 25028                           	opt stack 15
 25029                           
 25030                           ;uart_drv.c: 567: UINT16 Index = 0;
 25031                           
 25032                           ;incstack = 0
 25033  005DE4  0E00               	movlw	0
 25034  005DE6  0100               	movlb	0	; () banked
 25035  005DE8  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 25036  005DEA  0E00               	movlw	0
 25037  005DEC  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 25038                           
 25039                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 25040  005DEE  0E00               	movlw	0
 25041  005DF0  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 25042  005DF2  0E00               	movlw	0
 25043  005DF4  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 25044  005DF6                     l13706:
 25045                           
 25046                           ; BSR set to: 0
 25047  005DF6  0E90               	movlw	144
 25048  005DF8  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 25049  005DFA  0E01               	movlw	1
 25050  005DFC  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 25051  005DFE  B0D8               	btfsc	status,0,c
 25052  005E00  0012               	return	
 25053                           
 25054                           ; BSR set to: 0
 25055                           ;uart_drv.c: 571: {
 25056                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 25057                           
 25058                           ; BSR set to: 0
 25059                           
 25060                           ; BSR set to: 0
 25061  005E02  0E58               	movlw	low _RxBuffer
 25062  005E04  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 25063  005E06  6ED9               	movwf	fsr2l,c
 25064  005E08  0E0C               	movlw	high _RxBuffer
 25065  005E0A  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 25066  005E0C  6EDA               	movwf	fsr2h,c
 25067  005E0E  0E00               	movlw	0
 25068  005E10  6EDF               	movwf	indf2,c
 25069                           
 25070                           ; BSR set to: 0
 25071  005E12  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 25072  005E14  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 25073  005E16  D7EF               	goto	l13706
 25074  005E18                     __end_of_Uart_ClearRxBuffer:
 25075                           	opt stack 0
 25076                           tosu	equ	0xFFF
 25077                           tosh	equ	0xFFE
 25078                           tosl	equ	0xFFD
 25079                           pclath	equ	0xFFA
 25080                           tblptru	equ	0xFF8
 25081                           tblptrh	equ	0xFF7
 25082                           tblptrl	equ	0xFF6
 25083                           tablat	equ	0xFF5
 25084                           prodh	equ	0xFF4
 25085                           prodl	equ	0xFF3
 25086                           intcon	equ	0xFF2
 25087                           intcon2	equ	0xFF1
 25088                           intcon3	equ	0xFF0
 25089                           indf0	equ	0xFEF
 25090                           postinc0	equ	0xFEE
 25091                           plusw0	equ	0xFEB
 25092                           fsr0h	equ	0xFEA
 25093                           fsr0l	equ	0xFE9
 25094                           wreg	equ	0xFE8
 25095                           indf1	equ	0xFE7
 25096                           postinc1	equ	0xFE6
 25097                           postdec1	equ	0xFE5
 25098                           plusw1	equ	0xFE3
 25099                           fsr1h	equ	0xFE2
 25100                           fsr1l	equ	0xFE1
 25101                           indf2	equ	0xFDF
 25102                           postinc2	equ	0xFDE
 25103                           postdec2	equ	0xFDD
 25104                           plusw2	equ	0xFDB
 25105                           fsr2h	equ	0xFDA
 25106                           fsr2l	equ	0xFD9
 25107                           status	equ	0xFD8
 25108                           
 25109 ;; *************** function _StringCompare *****************
 25110 ;; Defined at:
 25111 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 25112 ;; Parameters:    Size  Location     Type
 25113 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 25114 ;;		 -> smsText(20), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), ModemEvtParser@ClipString(5), 
 25115 ;;		 -> ModemEvtParser@RingString(4), 
 25116 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 25117 ;;		 -> MyApp_Task@cmdAddNumber(4), RxBuffer(400), 
 25118 ;;  Len             2   33[BANK0 ] unsigned short 
 25119 ;; Auto vars:     Size  Location     Type
 25120 ;;  Index           2   38[BANK0 ] unsigned short 
 25121 ;;  Result          1   37[BANK0 ] unsigned char 
 25122 ;; Return value:  Size  Location     Type
 25123 ;;                  1    wreg      unsigned char 
 25124 ;; Registers used:
 25125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25126 ;; Tracked objects:
 25127 ;;		On entry : 0/0
 25128 ;;		On exit  : 0/0
 25129 ;;		Unchanged: 0/0
 25130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25131 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25132 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25133 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25134 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25135 ;;Total ram usage:       11 bytes
 25136 ;; Hardware stack levels used:    1
 25137 ;; Hardware stack levels required when called:   11
 25138 ;; This function calls:
 25139 ;;		Nothing
 25140 ;; This function is called by:
 25141 ;;		_ModemEvtParser
 25142 ;;		_MyApp_Task
 25143 ;; This function uses a non-reentrant model
 25144 ;;
 25145                           
 25146                           	psect	text120
 25147  005666                     __ptext120:
 25148                           	opt stack 0
 25149  005666                     _StringCompare:
 25150                           	opt stack 16
 25151                           
 25152                           ;sf.c: 77: UINT16 Index = 0;
 25153                           
 25154                           ; BSR set to: 0
 25155                           ;incstack = 0
 25156  005666  0E00               	movlw	0
 25157  005668  0100               	movlb	0	; () banked
 25158  00566A  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 25159  00566C  0E00               	movlw	0
 25160  00566E  6F86               	movwf	StringCompare@Index& (0+255),b
 25161                           
 25162                           ;sf.c: 78: UINT8 Result = 1;
 25163  005670  0E01               	movlw	1
 25164  005672  6F85               	movwf	StringCompare@Result& (0+255),b
 25165                           
 25166                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 25167  005674  0E00               	movlw	0
 25168  005676  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 25169  005678  0E00               	movlw	0
 25170  00567A  6F86               	movwf	StringCompare@Index& (0+255),b
 25171  00567C  D015               	goto	l2237
 25172  00567E                     
 25173                           ; BSR set to: 0
 25174                           ;sf.c: 82: {
 25175                           ;sf.c: 83: if (String1[Index] != String2[Index])
 25176                           
 25177                           ; BSR set to: 0
 25178  00567E  5186               	movf	StringCompare@Index& (0+255),w,b
 25179  005680  257F               	addwf	StringCompare@String2& (0+255),w,b
 25180  005682  6ED9               	movwf	fsr2l,c
 25181  005684  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 25182  005686  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 25183  005688  6EDA               	movwf	fsr2h,c
 25184  00568A  5186               	movf	StringCompare@Index& (0+255),w,b
 25185  00568C  257D               	addwf	StringCompare@String1& (0+255),w,b
 25186  00568E  6EE1               	movwf	fsr1l,c
 25187  005690  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 25188  005692  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 25189  005694  6EE2               	movwf	fsr1h,c
 25190  005696  50DE               	movf	postinc2,w,c
 25191  005698  18E6               	xorwf	postinc1,w,c
 25192  00569A  B4D8               	btfsc	status,2,c
 25193  00569C  D003               	goto	l2239
 25194                           
 25195                           ; BSR set to: 0
 25196                           ;sf.c: 84: {
 25197                           ;sf.c: 85: Result = 0;
 25198  00569E  0E00               	movlw	0
 25199  0056A0  6F85               	movwf	StringCompare@Result& (0+255),b
 25200                           
 25201                           ;sf.c: 86: break;
 25202  0056A2  D008               	goto	u12700
 25203  0056A4                     l2239:
 25204                           
 25205                           ; BSR set to: 0
 25206                           
 25207                           ; BSR set to: 0
 25208  0056A4  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 25209  0056A6  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 25210  0056A8                     l2237:
 25211                           
 25212                           ; BSR set to: 0
 25213                           
 25214                           ; BSR set to: 0
 25215  0056A8  5181               	movf	StringCompare@Len& (0+255),w,b
 25216  0056AA  5D86               	subwf	StringCompare@Index& (0+255),w,b
 25217  0056AC  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 25218  0056AE  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 25219  0056B0  A0D8               	btfss	status,0,c
 25220  0056B2  D7E5               	goto	l2238
 25221  0056B4                     u12700:
 25222                           
 25223                           ; BSR set to: 0
 25224                           ;sf.c: 87: }
 25225                           ;sf.c: 88: }
 25226                           ;sf.c: 91: return Result;
 25227                           
 25228                           ; BSR set to: 0
 25229  0056B4  5185               	movf	StringCompare@Result& (0+255),w,b
 25230  0056B6  0012               	return	
 25231  0056B8                     __end_of_StringCompare:
 25232                           	opt stack 0
 25233                           tosu	equ	0xFFF
 25234                           tosh	equ	0xFFE
 25235                           tosl	equ	0xFFD
 25236                           pclath	equ	0xFFA
 25237                           tblptru	equ	0xFF8
 25238                           tblptrh	equ	0xFF7
 25239                           tblptrl	equ	0xFF6
 25240                           tablat	equ	0xFF5
 25241                           prodh	equ	0xFF4
 25242                           prodl	equ	0xFF3
 25243                           intcon	equ	0xFF2
 25244                           intcon2	equ	0xFF1
 25245                           intcon3	equ	0xFF0
 25246                           indf0	equ	0xFEF
 25247                           postinc0	equ	0xFEE
 25248                           plusw0	equ	0xFEB
 25249                           fsr0h	equ	0xFEA
 25250                           fsr0l	equ	0xFE9
 25251                           wreg	equ	0xFE8
 25252                           indf1	equ	0xFE7
 25253                           postinc1	equ	0xFE6
 25254                           postdec1	equ	0xFE5
 25255                           plusw1	equ	0xFE3
 25256                           fsr1h	equ	0xFE2
 25257                           fsr1l	equ	0xFE1
 25258                           indf2	equ	0xFDF
 25259                           postinc2	equ	0xFDE
 25260                           postdec2	equ	0xFDD
 25261                           plusw2	equ	0xFDB
 25262                           fsr2h	equ	0xFDA
 25263                           fsr2l	equ	0xFD9
 25264                           status	equ	0xFD8
 25265                           
 25266 ;; *************** function _GetSmsSm *****************
 25267 ;; Defined at:
 25268 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25269 ;; Parameters:    Size  Location     Type
 25270 ;;		None
 25271 ;; Auto vars:     Size  Location     Type
 25272 ;;		None
 25273 ;; Return value:  Size  Location     Type
 25274 ;;                  1    wreg      void 
 25275 ;; Registers used:
 25276 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25277 ;; Tracked objects:
 25278 ;;		On entry : 0/0
 25279 ;;		On exit  : 0/0
 25280 ;;		Unchanged: 0/0
 25281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25286 ;;Total ram usage:        0 bytes
 25287 ;; Hardware stack levels used:    1
 25288 ;; Hardware stack levels required when called:   13
 25289 ;; This function calls:
 25290 ;;		_ClearBuffer
 25291 ;;		_GenerateEvt
 25292 ;;		_ReceiveEvt
 25293 ;;		_StringCopy
 25294 ;;		_Uart_WriteConstString
 25295 ;; This function is called by:
 25296 ;;		_Mdm_MainTask
 25297 ;; This function uses a non-reentrant model
 25298 ;;
 25299                           
 25300                           	psect	text121
 25301  002BC6                     __ptext121:
 25302                           	opt stack 0
 25303  002BC6                     _GetSmsSm:
 25304                           	opt stack 14
 25305                           
 25306                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 25307                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 25308                           
 25309                           ; BSR set to: 0
 25310                           ;incstack = 0
 25311  002BC6  0E03               	movlw	3
 25312  002BC8  0100               	movlb	0	; () banked
 25313  002BCA  19D2               	xorwf	_MdmStatus& (0+255),w,b
 25314  002BCC  A4D8               	btfss	status,2,c
 25315  002BCE  0012               	return	
 25316  002BD0  D084               	goto	l1070
 25317  002BD2                     
 25318                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 25319                           
 25320                           ; BSR set to: 0
 25321  002BD2  0EDD               	movlw	low _GetSmsText
 25322  002BD4  0100               	movlb	0	; () banked
 25323  002BD6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25324  002BD8  0E00               	movlw	high _GetSmsText
 25325  002BDA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25326  002BDC  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 25327  002BE0  0900               	iorlw	0
 25328  002BE2  B4D8               	btfsc	status,2,c
 25329  002BE4  0012               	return	
 25330                           
 25331                           ;mdm_gsm_gprs.c: 596: {
 25332                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 25333  002BE6  0E01               	movlw	1
 25334  002BE8  0101               	movlb	1	; () banked
 25335  002BEA  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 25336                           
 25337                           ; BSR set to: 1
 25338                           ;mdm_gsm_gprs.c: 599: }
 25339                           ;mdm_gsm_gprs.c: 600: break;
 25340  002BEC  0012               	return	
 25341  002BEE                     
 25342                           ; BSR set to: 1
 25343                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 25344                           
 25345                           ; BSR set to: 1
 25346  002BEE  0EC1               	movlw	low STR_4
 25347  002BF0  0100               	movlb	0	; () banked
 25348  002BF2  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25349  002BF4  0EFF               	movlw	high STR_4
 25350  002BF6  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25351  002BF8  0E01               	movlw	1
 25352  002BFA  EC85  F02D         	call	_Uart_WriteConstString
 25353                           
 25354                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 25355  002BFE  0E02               	movlw	2
 25356  002C00  0101               	movlb	1	; () banked
 25357  002C02  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 25358                           
 25359                           ;mdm_gsm_gprs.c: 607: break;
 25360  002C04  0012               	return	
 25361  002C06                     
 25362                           ; BSR set to: 1
 25363                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 25364                           
 25365                           ; BSR set to: 1
 25366  002C06  0E3C               	movlw	low _NewStringReceived
 25367  002C08  0100               	movlb	0	; () banked
 25368  002C0A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25369  002C0C  0E00               	movlw	high _NewStringReceived
 25370  002C0E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25371  002C10  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 25372  002C14  0900               	iorlw	0
 25373  002C16  B4D8               	btfsc	status,2,c
 25374  002C18  0012               	return	
 25375                           
 25376                           ;mdm_gsm_gprs.c: 612: {
 25377                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 25378  002C1A  CC58  FFE8         	movff	_RxBuffer,wreg
 25379  002C1E  0A2B               	xorlw	43
 25380  002C20  A4D8               	btfss	status,2,c
 25381  002C22  0012               	return	
 25382  002C24  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25383  002C28  0A43               	xorlw	67
 25384  002C2A  A4D8               	btfss	status,2,c
 25385  002C2C  0012               	return	
 25386  002C2E  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 25387  002C32  0A4D               	xorlw	77
 25388  002C34  A4D8               	btfss	status,2,c
 25389  002C36  0012               	return	
 25390                           
 25391                           ;mdm_gsm_gprs.c: 614: {
 25392                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 25393  002C38  0E00               	movlw	low _Mdm_SmsRx
 25394  002C3A  0100               	movlb	0	; () banked
 25395  002C3C  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25396  002C3E  0E07               	movlw	high _Mdm_SmsRx
 25397  002C40  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25398  002C42  0E00               	movlw	0
 25399  002C44  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25400  002C46  0E50               	movlw	80
 25401  002C48  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25402  002C4A  ECD7  F02E         	call	_ClearBuffer	;wreg free
 25403                           
 25404                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 25405  002C4E  0E58               	movlw	low _RxBuffer
 25406  002C50  0100               	movlb	0	; () banked
 25407  002C52  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25408  002C54  0E0C               	movlw	high _RxBuffer
 25409  002C56  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25410  002C58  0E00               	movlw	low _Mdm_SmsRx
 25411  002C5A  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25412  002C5C  0E07               	movlw	high _Mdm_SmsRx
 25413  002C5E  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25414  002C60  C0C2  F081         	movff	_RxLen,StringCopy@Len
 25415  002C64  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 25416  002C68  ECCB  F028         	call	_StringCopy	;wreg free
 25417                           
 25418                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 25419  002C6C  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 25420                           
 25421                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 25422  002C70  0E03               	movlw	3
 25423  002C72  0101               	movlb	1	; () banked
 25424  002C74  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 25425                           
 25426                           ; BSR set to: 1
 25427                           ;mdm_gsm_gprs.c: 622: }
 25428                           ;mdm_gsm_gprs.c: 623: }
 25429                           ;mdm_gsm_gprs.c: 624: break;
 25430                           
 25431                           ; BSR set to: 1
 25432  002C76  0012               	return	
 25433  002C78                     
 25434                           ; BSR set to: 1
 25435                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 25436                           
 25437                           ; BSR set to: 1
 25438  002C78  0E3C               	movlw	low _NewStringReceived
 25439  002C7A  0100               	movlb	0	; () banked
 25440  002C7C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25441  002C7E  0E00               	movlw	high _NewStringReceived
 25442  002C80  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25443  002C82  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 25444  002C86  0900               	iorlw	0
 25445  002C88  B4D8               	btfsc	status,2,c
 25446  002C8A  0012               	return	
 25447                           
 25448                           ;mdm_gsm_gprs.c: 629: {
 25449                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 25450  002C8C  0E50               	movlw	low (_Mdm_SmsRx+80)
 25451  002C8E  0100               	movlb	0	; () banked
 25452  002C90  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25453  002C92  0E07               	movlw	high (_Mdm_SmsRx+80)
 25454  002C94  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25455  002C96  0E00               	movlw	0
 25456  002C98  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25457  002C9A  0E14               	movlw	20
 25458  002C9C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25459  002C9E  ECD7  F02E         	call	_ClearBuffer	;wreg free
 25460                           
 25461                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 25462  002CA2  0E58               	movlw	low _RxBuffer
 25463  002CA4  0100               	movlb	0	; () banked
 25464  002CA6  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25465  002CA8  0E0C               	movlw	high _RxBuffer
 25466  002CAA  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25467  002CAC  0E50               	movlw	low (_Mdm_SmsRx+80)
 25468  002CAE  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25469  002CB0  0E07               	movlw	high (_Mdm_SmsRx+80)
 25470  002CB2  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25471  002CB4  C0C2  F081         	movff	_RxLen,StringCopy@Len
 25472  002CB8  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 25473  002CBC  ECCB  F028         	call	_StringCopy	;wreg free
 25474                           
 25475                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 25476  002CC0  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 25477                           
 25478                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 25479  002CC4  0E00               	movlw	0
 25480  002CC6  0101               	movlb	1	; () banked
 25481  002CC8  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 25482                           
 25483                           ; BSR set to: 1
 25484                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 25485  002CCA  0EDC               	movlw	low _SmsTxtReady
 25486  002CCC  0100               	movlb	0	; () banked
 25487  002CCE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25488  002CD0  0E00               	movlw	high _SmsTxtReady
 25489  002CD2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25490  002CD4  ECB3  F031         	call	_GenerateEvt	;wreg free
 25491                           
 25492                           ;mdm_gsm_gprs.c: 644: }
 25493                           
 25494                           ;mdm_gsm_gprs.c: 643: break;
 25495                           
 25496                           ;mdm_gsm_gprs.c: 642: default:
 25497                           
 25498                           ;mdm_gsm_gprs.c: 639: }
 25499                           ;mdm_gsm_gprs.c: 640: break;
 25500  002CD8  0012               	return	
 25501  002CDA                     l1070:
 25502  002CDA  0101               	movlb	1	; () banked
 25503  002CDC  51F4               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 25504                           
 25505                           ; Switch size 1, requested type "space"
 25506                           ; Number of cases is 4, Range of values is 0 to 3
 25507                           ; switch strategies available:
 25508                           ; Name         Instructions Cycles
 25509                           ; simple_byte           13     7 (average)
 25510                           ;	Chosen strategy is simple_byte
 25511  002CDE  0A00               	xorlw	0	; case 0
 25512  002CE0  B4D8               	btfsc	status,2,c
 25513  002CE2  D777               	goto	l1071
 25514  002CE4  0A01               	xorlw	1	; case 1
 25515  002CE6  B4D8               	btfsc	status,2,c
 25516  002CE8  D782               	goto	l1074
 25517  002CEA  0A03               	xorlw	3	; case 2
 25518  002CEC  B4D8               	btfsc	status,2,c
 25519  002CEE  D78B               	goto	l1075
 25520  002CF0  0A01               	xorlw	1	; case 3
 25521  002CF2  A4D8               	btfss	status,2,c
 25522                           
 25523                           ; BSR set to: 1
 25524  002CF4  0012               	return	
 25525  002CF6  D7C0               	goto	l1078
 25526  002CF8                     __end_of_GetSmsSm:
 25527                           	opt stack 0
 25528                           tosu	equ	0xFFF
 25529                           tosh	equ	0xFFE
 25530                           tosl	equ	0xFFD
 25531                           pclath	equ	0xFFA
 25532                           tblptru	equ	0xFF8
 25533                           tblptrh	equ	0xFF7
 25534                           tblptrl	equ	0xFF6
 25535                           tablat	equ	0xFF5
 25536                           prodh	equ	0xFF4
 25537                           prodl	equ	0xFF3
 25538                           intcon	equ	0xFF2
 25539                           intcon2	equ	0xFF1
 25540                           intcon3	equ	0xFF0
 25541                           indf0	equ	0xFEF
 25542                           postinc0	equ	0xFEE
 25543                           plusw0	equ	0xFEB
 25544                           fsr0h	equ	0xFEA
 25545                           fsr0l	equ	0xFE9
 25546                           wreg	equ	0xFE8
 25547                           indf1	equ	0xFE7
 25548                           postinc1	equ	0xFE6
 25549                           postdec1	equ	0xFE5
 25550                           plusw1	equ	0xFE3
 25551                           fsr1h	equ	0xFE2
 25552                           fsr1l	equ	0xFE1
 25553                           indf2	equ	0xFDF
 25554                           postinc2	equ	0xFDE
 25555                           postdec2	equ	0xFDD
 25556                           plusw2	equ	0xFDB
 25557                           fsr2h	equ	0xFDA
 25558                           fsr2l	equ	0xFD9
 25559                           status	equ	0xFD8
 25560                           
 25561 ;; *************** function _ConfigureModem *****************
 25562 ;; Defined at:
 25563 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25564 ;; Parameters:    Size  Location     Type
 25565 ;;		None
 25566 ;; Auto vars:     Size  Location     Type
 25567 ;;		None
 25568 ;; Return value:  Size  Location     Type
 25569 ;;                  1    wreg      void 
 25570 ;; Registers used:
 25571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25572 ;; Tracked objects:
 25573 ;;		On entry : 0/0
 25574 ;;		On exit  : 0/0
 25575 ;;		Unchanged: 0/0
 25576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25581 ;;Total ram usage:        0 bytes
 25582 ;; Hardware stack levels used:    1
 25583 ;; Hardware stack levels required when called:   14
 25584 ;; This function calls:
 25585 ;;		_GenerateEvt
 25586 ;;		_UartSetConfigLow
 25587 ;;		_Uart_InitUartModule
 25588 ;;		_Uart_WriteConstString
 25589 ;; This function is called by:
 25590 ;;		_Mdm_MainTask
 25591 ;; This function uses a non-reentrant model
 25592 ;;
 25593                           
 25594                           	psect	text122
 25595  003ADE                     __ptext122:
 25596                           	opt stack 0
 25597  003ADE                     _ConfigureModem:
 25598                           	opt stack 13
 25599                           
 25600                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 25601                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 25602                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 25603                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 25604                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 25605                           
 25606                           ;incstack = 0
 25607  003ADE  D052               	goto	l1027
 25608  003AE0                     
 25609                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 25610  003AE0  0E02               	movlw	2
 25611  003AE2  0100               	movlb	0	; () banked
 25612  003AE4  19D2               	xorwf	_MdmStatus& (0+255),w,b
 25613  003AE6  A4D8               	btfss	status,2,c
 25614  003AE8  0012               	return	
 25615                           
 25616                           ; BSR set to: 0
 25617                           ;mdm_gsm_gprs.c: 431: {
 25618                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 25619  003AEA  0E01               	movlw	1
 25620  003AEC  6E28               	movwf	ConfigureModem@MdmConfigState,c
 25621                           
 25622                           ; BSR set to: 0
 25623                           ;mdm_gsm_gprs.c: 434: }
 25624                           ;mdm_gsm_gprs.c: 435: break;
 25625  003AEE  0012               	return	
 25626  003AF0                     
 25627                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 25628                           
 25629                           ; BSR set to: 0
 25630  003AF0  0E74               	movlw	low STR_2
 25631  003AF2  0100               	movlb	0	; () banked
 25632  003AF4  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25633  003AF6  0EFF               	movlw	high STR_2
 25634  003AF8  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25635  003AFA  0E01               	movlw	1
 25636  003AFC  EC85  F02D         	call	_Uart_WriteConstString
 25637                           
 25638                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 25639  003B00  ECE0  F029         	call	_UartSetConfigLow	;wreg free
 25640                           
 25641                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 25642  003B04  0E26               	movlw	low _UartConfig
 25643  003B06  0100               	movlb	0	; () banked
 25644  003B08  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 25645  003B0A  0E03               	movlw	high _UartConfig
 25646  003B0C  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 25647  003B0E  0E01               	movlw	1
 25648  003B10  EC5E  F005         	call	_Uart_InitUartModule
 25649                           
 25650                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 25651  003B14  0E03               	movlw	3
 25652  003B16  0102               	movlb	2	; () banked
 25653  003B18  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 25654  003B1A  0EE8               	movlw	232
 25655  003B1C  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 25656                           
 25657                           ; BSR set to: 2
 25658                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 25659  003B1E  0E02               	movlw	2
 25660  003B20  6E27               	movwf	ConfigureModem@NextState,c
 25661                           
 25662                           ; BSR set to: 2
 25663                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 25664  003B22  0E04               	movlw	4
 25665  003B24  6E28               	movwf	ConfigureModem@MdmConfigState,c
 25666                           
 25667                           ;mdm_gsm_gprs.c: 449: break;
 25668  003B26  0012               	return	
 25669  003B28                     
 25670                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 25671                           
 25672                           ; BSR set to: 2
 25673  003B28  0EDE               	movlw	low STR_3
 25674  003B2A  0100               	movlb	0	; () banked
 25675  003B2C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25676  003B2E  0EFF               	movlw	high STR_3
 25677  003B30  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25678  003B32  0E01               	movlw	1
 25679  003B34  EC85  F02D         	call	_Uart_WriteConstString
 25680                           
 25681                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 25682  003B38  0E03               	movlw	3
 25683  003B3A  0102               	movlb	2	; () banked
 25684  003B3C  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 25685  003B3E  0EE8               	movlw	232
 25686  003B40  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 25687                           
 25688                           ; BSR set to: 2
 25689                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 25690  003B42  0E05               	movlw	5
 25691  003B44  6E27               	movwf	ConfigureModem@NextState,c
 25692                           
 25693                           ; BSR set to: 2
 25694                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 25695  003B46  0E04               	movlw	4
 25696  003B48  6E28               	movwf	ConfigureModem@MdmConfigState,c
 25697                           
 25698                           ;mdm_gsm_gprs.c: 459: break;
 25699  003B4A  0012               	return	
 25700  003B4C                     
 25701                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 25702                           
 25703                           ; BSR set to: 2
 25704  003B4C  0102               	movlb	2	; () banked
 25705  003B4E  4BD6               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 25706  003B50  2BD7               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 25707                           
 25708                           ; BSR set to: 2
 25709                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 25710  003B52  51D8               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 25711  003B54  5DD6               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 25712  003B56  51D9               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 25713  003B58  59D7               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 25714  003B5A  A0D8               	btfss	status,0,c
 25715  003B5C  0012               	return	
 25716                           
 25717                           ; BSR set to: 2
 25718                           ;mdm_gsm_gprs.c: 466: {
 25719                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 25720  003B5E  0E00               	movlw	0
 25721  003B60  6FD7               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 25722  003B62  0E00               	movlw	0
 25723  003B64  6FD6               	movwf	ConfigureModem@DelayCounter& (0+255),b
 25724                           
 25725                           ; BSR set to: 2
 25726                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 25727  003B66  C027  F028         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 25728                           
 25729                           ; BSR set to: 2
 25730                           ;mdm_gsm_gprs.c: 471: }
 25731                           ;mdm_gsm_gprs.c: 472: break;
 25732  003B6A  0012               	return	
 25733  003B6C                     
 25734                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 25735                           
 25736                           ; BSR set to: 2
 25737  003B6C  0E03               	movlw	3
 25738  003B6E  0100               	movlb	0	; () banked
 25739  003B70  6FD2               	movwf	_MdmStatus& (0+255),b
 25740                           
 25741                           ; BSR set to: 0
 25742                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 25743  003B72  0E39               	movlw	low _MdmStsReady
 25744  003B74  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25745  003B76  0E00               	movlw	high _MdmStsReady
 25746  003B78  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25747  003B7A  ECB3  F031         	call	_GenerateEvt	;wreg free
 25748                           
 25749                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 25750  003B7E  0E06               	movlw	6
 25751  003B80  6E28               	movwf	ConfigureModem@MdmConfigState,c
 25752                           
 25753                           ;mdm_gsm_gprs.c: 488: }
 25754                           
 25755                           ;mdm_gsm_gprs.c: 487: break;
 25756                           
 25757                           ;mdm_gsm_gprs.c: 486: default:
 25758                           
 25759                           ;mdm_gsm_gprs.c: 484: break;
 25760                           
 25761                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 25762                           
 25763                           ;mdm_gsm_gprs.c: 481: break;
 25764  003B82  0012               	return	
 25765  003B84                     l1027:
 25766  003B84  5028               	movf	ConfigureModem@MdmConfigState,w,c
 25767                           
 25768                           ; Switch size 1, requested type "space"
 25769                           ; Number of cases is 6, Range of values is 0 to 6
 25770                           ; switch strategies available:
 25771                           ; Name         Instructions Cycles
 25772                           ; simple_byte           19    10 (average)
 25773                           ;	Chosen strategy is simple_byte
 25774  003B86  0A00               	xorlw	0	; case 0
 25775  003B88  B4D8               	btfsc	status,2,c
 25776  003B8A  D7AA               	goto	l1028
 25777  003B8C  0A01               	xorlw	1	; case 1
 25778  003B8E  B4D8               	btfsc	status,2,c
 25779  003B90  D7AF               	goto	l1031
 25780  003B92  0A03               	xorlw	3	; case 2
 25781  003B94  B4D8               	btfsc	status,2,c
 25782  003B96  D7C8               	goto	l1032
 25783  003B98  0A06               	xorlw	6	; case 4
 25784  003B9A  B4D8               	btfsc	status,2,c
 25785  003B9C  D7D7               	goto	l1033
 25786  003B9E  0A01               	xorlw	1	; case 5
 25787  003BA0  B4D8               	btfsc	status,2,c
 25788  003BA2  D7E4               	goto	l1035
 25789  003BA4  0A03               	xorlw	3	; case 6
 25790  003BA6  0012               	return	
 25791  003BA8                     __end_of_ConfigureModem:
 25792                           	opt stack 0
 25793                           tosu	equ	0xFFF
 25794                           tosh	equ	0xFFE
 25795                           tosl	equ	0xFFD
 25796                           pclath	equ	0xFFA
 25797                           tblptru	equ	0xFF8
 25798                           tblptrh	equ	0xFF7
 25799                           tblptrl	equ	0xFF6
 25800                           tablat	equ	0xFF5
 25801                           prodh	equ	0xFF4
 25802                           prodl	equ	0xFF3
 25803                           intcon	equ	0xFF2
 25804                           intcon2	equ	0xFF1
 25805                           intcon3	equ	0xFF0
 25806                           indf0	equ	0xFEF
 25807                           postinc0	equ	0xFEE
 25808                           plusw0	equ	0xFEB
 25809                           fsr0h	equ	0xFEA
 25810                           fsr0l	equ	0xFE9
 25811                           wreg	equ	0xFE8
 25812                           indf1	equ	0xFE7
 25813                           postinc1	equ	0xFE6
 25814                           postdec1	equ	0xFE5
 25815                           plusw1	equ	0xFE3
 25816                           fsr1h	equ	0xFE2
 25817                           fsr1l	equ	0xFE1
 25818                           indf2	equ	0xFDF
 25819                           postinc2	equ	0xFDE
 25820                           postdec2	equ	0xFDD
 25821                           plusw2	equ	0xFDB
 25822                           fsr2h	equ	0xFDA
 25823                           fsr2l	equ	0xFD9
 25824                           status	equ	0xFD8
 25825                           
 25826 ;; *************** function _Uart_InitUartModule *****************
 25827 ;; Defined at:
 25828 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25829 ;; Parameters:    Size  Location     Type
 25830 ;;  Module          1    wreg     unsigned char 
 25831 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 25832 ;;		 -> UartConfig(21), 
 25833 ;; Auto vars:     Size  Location     Type
 25834 ;;  Module          1   65[BANK0 ] unsigned char 
 25835 ;; Return value:  Size  Location     Type
 25836 ;;                  1    wreg      void 
 25837 ;; Registers used:
 25838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25839 ;; Tracked objects:
 25840 ;;		On entry : 0/0
 25841 ;;		On exit  : 0/0
 25842 ;;		Unchanged: 0/0
 25843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25844 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25845 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25846 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25847 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25848 ;;Total ram usage:        5 bytes
 25849 ;; Hardware stack levels used:    1
 25850 ;; Hardware stack levels required when called:   13
 25851 ;; This function calls:
 25852 ;;		_SetUartBaudRate
 25853 ;; This function is called by:
 25854 ;;		_ConfigureModem
 25855 ;;		_Mdm_MainTask
 25856 ;; This function uses a non-reentrant model
 25857 ;;
 25858                           
 25859                           	psect	text123
 25860  000ABC                     __ptext123:
 25861                           	opt stack 0
 25862  000ABC                     _Uart_InitUartModule:
 25863                           	opt stack 14
 25864                           
 25865                           ;incstack = 0
 25866                           ;Uart_InitUartModule@Module stored from wreg
 25867  000ABC  0100               	movlb	0	; () banked
 25868  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 25869                           
 25870                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 25871  000AC0  0100               	movlb	0	; () banked
 25872  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 25873  000AC4  A4D8               	btfss	status,2,c
 25874  000AC6  D0BE               	goto	l668
 25875                           
 25876                           ; BSR set to: 0
 25877                           ;uart_drv.c: 291: {
 25878                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 25879  000AC8  9C94               	bcf	3988,6,c	;volatile
 25880                           
 25881                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 25882  000ACA  8E94               	bsf	3988,7,c	;volatile
 25883                           
 25884                           ; BSR set to: 0
 25885                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 25886  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 25887  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 25888  000AD4  0E01               	movlw	1
 25889  000AD6  EC47  F015         	call	_SetUartBaudRate
 25890                           
 25891                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 25892  000ADA  0E00               	movlw	0
 25893  000ADC  6EAD               	movwf	4013,c	;volatile
 25894                           
 25895                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 25896  000ADE  0100               	movlb	0	; () banked
 25897  000AE0  EE20 F004          	lfsr	2,4
 25898  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25899  000AE6  26D9               	addwf	fsr2l,f,c
 25900  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25901  000AEA  22DA               	addwfc	fsr2h,f,c
 25902  000AEC  50DF               	movf	indf2,w,c
 25903  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25904  000AF0  0E06               	movlw	6
 25905  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25906  000AF4                     u12585:
 25907  000AF4  90D8               	bcf	status,0,c
 25908  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25909  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25910  000AFA  D7FC               	goto	u12585
 25911  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25912  000AFE  12AD               	iorwf	4013,f,c	;volatile
 25913                           
 25914                           ; BSR set to: 0
 25915                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 25916  000B00  EE20 F006          	lfsr	2,6
 25917  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25918  000B06  26D9               	addwf	fsr2l,f,c
 25919  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25920  000B0A  22DA               	addwfc	fsr2h,f,c
 25921  000B0C  50DF               	movf	indf2,w,c
 25922  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25923  000B10  0E05               	movlw	5
 25924  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25925  000B14                     u12595:
 25926  000B14  90D8               	bcf	status,0,c
 25927  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25928  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25929  000B1A  D7FC               	goto	u12595
 25930  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25931  000B1E  12AD               	iorwf	4013,f,c	;volatile
 25932                           
 25933                           ; BSR set to: 0
 25934                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 25935  000B20  EE20 F001          	lfsr	2,1
 25936  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25937  000B26  26D9               	addwf	fsr2l,f,c
 25938  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25939  000B2A  22DA               	addwfc	fsr2h,f,c
 25940  000B2C  50DF               	movf	indf2,w,c
 25941  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25942  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 25943  000B32  0BF0               	andlw	240
 25944  000B34  12AD               	iorwf	4013,f,c	;volatile
 25945                           
 25946                           ; BSR set to: 0
 25947                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 25948  000B36  EE20 F008          	lfsr	2,8
 25949  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25950  000B3C  26D9               	addwf	fsr2l,f,c
 25951  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25952  000B40  22DA               	addwfc	fsr2h,f,c
 25953  000B42  50DF               	movf	indf2,w,c
 25954  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25955  000B46  90D8               	bcf	status,0,c
 25956  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25957  000B4A  90D8               	bcf	status,0,c
 25958  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25959  000B4E  90D8               	bcf	status,0,c
 25960  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25961  000B52  12AD               	iorwf	4013,f,c	;volatile
 25962                           
 25963                           ; BSR set to: 0
 25964                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 25965  000B54  EE20 F003          	lfsr	2,3
 25966  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25967  000B5A  26D9               	addwf	fsr2l,f,c
 25968  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25969  000B5E  22DA               	addwfc	fsr2h,f,c
 25970  000B60  50DF               	movf	indf2,w,c
 25971  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25972  000B64  90D8               	bcf	status,0,c
 25973  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25974  000B68  90D8               	bcf	status,0,c
 25975  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25976  000B6C  12AD               	iorwf	4013,f,c	;volatile
 25977                           
 25978                           ; BSR set to: 0
 25979                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 25980  000B6E  0E00               	movlw	0
 25981  000B70  6EAC               	movwf	4012,c	;volatile
 25982                           
 25983                           ; BSR set to: 0
 25984                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 25985  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 25986  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 25987  000B7A  50DF               	movf	indf2,w,c
 25988  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25989  000B7E  0E00               	movlw	0
 25990  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 25991  000B82  0E80               	movlw	128
 25992  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25993  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25994  000B88  12AC               	iorwf	4012,f,c	;volatile
 25995                           
 25996                           ; BSR set to: 0
 25997                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 25998  000B8A  EE20 F005          	lfsr	2,5
 25999  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26000  000B90  26D9               	addwf	fsr2l,f,c
 26001  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26002  000B94  22DA               	addwfc	fsr2h,f,c
 26003  000B96  50DF               	movf	indf2,w,c
 26004  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26005  000B9A  0E06               	movlw	6
 26006  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 26007  000B9E                     u12605:
 26008  000B9E  90D8               	bcf	status,0,c
 26009  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26010  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 26011  000BA4  D7FC               	goto	u12605
 26012  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 26013  000BA8  12AC               	iorwf	4012,f,c	;volatile
 26014                           
 26015                           ; BSR set to: 0
 26016                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 26017  000BAA  EE20 F007          	lfsr	2,7
 26018  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26019  000BB0  26D9               	addwf	fsr2l,f,c
 26020  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26021  000BB4  22DA               	addwfc	fsr2h,f,c
 26022  000BB6  50DF               	movf	indf2,w,c
 26023  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26024  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 26025  000BBC  0BF0               	andlw	240
 26026  000BBE  12AC               	iorwf	4012,f,c	;volatile
 26027                           
 26028                           ; BSR set to: 0
 26029                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 26030  000BC0  0E00               	movlw	0
 26031  000BC2  6E7E               	movwf	3966,c	;volatile
 26032                           
 26033                           ; BSR set to: 0
 26034                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 26035  000BC4  EE20 F002          	lfsr	2,2
 26036  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26037  000BCA  26D9               	addwf	fsr2l,f,c
 26038  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26039  000BCE  22DA               	addwfc	fsr2h,f,c
 26040  000BD0  50DF               	movf	indf2,w,c
 26041  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26042  000BD4  90D8               	bcf	status,0,c
 26043  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26044  000BD8  90D8               	bcf	status,0,c
 26045  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26046  000BDC  90D8               	bcf	status,0,c
 26047  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 26048  000BE0  127E               	iorwf	3966,f,c	;volatile
 26049                           
 26050                           ; BSR set to: 0
 26051                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 26052  000BE2  EE20 F00A          	lfsr	2,10
 26053  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26054  000BE8  26D9               	addwf	fsr2l,f,c
 26055  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26056  000BEC  22DA               	addwfc	fsr2h,f,c
 26057  000BEE  50DF               	movf	indf2,w,c
 26058  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26059  000BF2  90D8               	bcf	status,0,c
 26060  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 26061  000BF6  127E               	iorwf	3966,f,c	;volatile
 26062                           
 26063                           ; BSR set to: 0
 26064                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 26065  000BF8  EE20 F009          	lfsr	2,9
 26066  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26067  000BFE  26D9               	addwf	fsr2l,f,c
 26068  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26069  000C02  22DA               	addwfc	fsr2h,f,c
 26070  000C04  50DF               	movf	indf2,w,c
 26071  000C06  127E               	iorwf	3966,f,c	;volatile
 26072                           
 26073                           ; BSR set to: 0
 26074                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 26075  000C08  EE20 F00B          	lfsr	2,11
 26076  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26077  000C0E  26D9               	addwf	fsr2l,f,c
 26078  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26079  000C12  22DA               	addwfc	fsr2h,f,c
 26080  000C14  50DF               	movf	indf2,w,c
 26081  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26082  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 26083  000C1A  509D               	movf	3997,w,c	;volatile
 26084  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 26085  000C1E  0BEF               	andlw	-17
 26086  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 26087  000C22  6E9D               	movwf	3997,c	;volatile
 26088                           
 26089                           ; BSR set to: 0
 26090                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 26091  000C24  EE20 F00C          	lfsr	2,12
 26092  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26093  000C2A  26D9               	addwf	fsr2l,f,c
 26094  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26095  000C2E  22DA               	addwfc	fsr2h,f,c
 26096  000C30  50DF               	movf	indf2,w,c
 26097  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26098  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 26099  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 26100  000C38  509D               	movf	3997,w,c	;volatile
 26101  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 26102  000C3C  0BDF               	andlw	-33
 26103  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 26104  000C40  6E9D               	movwf	3997,c	;volatile
 26105                           
 26106                           ;uart_drv.c: 326: }
 26107  000C42  0012               	return	
 26108  000C44                     l668:
 26109                           
 26110                           ; BSR set to: 0
 26111                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 26112                           
 26113                           ; BSR set to: 0
 26114  000C44  0E02               	movlw	2
 26115  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 26116  000C48  A4D8               	btfss	status,2,c
 26117  000C4A  0012               	return	
 26118                           
 26119                           ; BSR set to: 0
 26120                           ;uart_drv.c: 328: {
 26121                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 26122  000C4C  9094               	bcf	3988,0,c	;volatile
 26123                           
 26124                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 26125  000C4E  8294               	bsf	3988,1,c	;volatile
 26126                           
 26127                           ; BSR set to: 0
 26128                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 26129  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 26130  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 26131  000C58  0E02               	movlw	2
 26132  000C5A  EC47  F015         	call	_SetUartBaudRate
 26133                           
 26134                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 26135  000C5E  0E00               	movlw	0
 26136  000C60  6EA8               	movwf	4008,c	;volatile
 26137                           
 26138                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 26139  000C62  0100               	movlb	0	; () banked
 26140  000C64  EE20 F004          	lfsr	2,4
 26141  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26142  000C6A  26D9               	addwf	fsr2l,f,c
 26143  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26144  000C6E  22DA               	addwfc	fsr2h,f,c
 26145  000C70  50DF               	movf	indf2,w,c
 26146  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26147  000C74  0E06               	movlw	6
 26148  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 26149  000C78                     u12625:
 26150  000C78  90D8               	bcf	status,0,c
 26151  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26152  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 26153  000C7E  D7FC               	goto	u12625
 26154  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 26155  000C82  12A8               	iorwf	4008,f,c	;volatile
 26156                           
 26157                           ; BSR set to: 0
 26158                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 26159  000C84  EE20 F006          	lfsr	2,6
 26160  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26161  000C8A  26D9               	addwf	fsr2l,f,c
 26162  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26163  000C8E  22DA               	addwfc	fsr2h,f,c
 26164  000C90  50DF               	movf	indf2,w,c
 26165  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26166  000C94  0E05               	movlw	5
 26167  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 26168  000C98                     u12635:
 26169  000C98  90D8               	bcf	status,0,c
 26170  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26171  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 26172  000C9E  D7FC               	goto	u12635
 26173  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 26174  000CA2  12A8               	iorwf	4008,f,c	;volatile
 26175                           
 26176                           ; BSR set to: 0
 26177                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 26178  000CA4  EE20 F001          	lfsr	2,1
 26179  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26180  000CAA  26D9               	addwf	fsr2l,f,c
 26181  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26182  000CAE  22DA               	addwfc	fsr2h,f,c
 26183  000CB0  50DF               	movf	indf2,w,c
 26184  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26185  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 26186  000CB6  0BF0               	andlw	240
 26187  000CB8  12A8               	iorwf	4008,f,c	;volatile
 26188                           
 26189                           ; BSR set to: 0
 26190                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 26191  000CBA  EE20 F008          	lfsr	2,8
 26192  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26193  000CC0  26D9               	addwf	fsr2l,f,c
 26194  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26195  000CC4  22DA               	addwfc	fsr2h,f,c
 26196  000CC6  50DF               	movf	indf2,w,c
 26197  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26198  000CCA  90D8               	bcf	status,0,c
 26199  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26200  000CCE  90D8               	bcf	status,0,c
 26201  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26202  000CD2  90D8               	bcf	status,0,c
 26203  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 26204  000CD6  12A8               	iorwf	4008,f,c	;volatile
 26205                           
 26206                           ; BSR set to: 0
 26207                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 26208  000CD8  EE20 F003          	lfsr	2,3
 26209  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26210  000CDE  26D9               	addwf	fsr2l,f,c
 26211  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26212  000CE2  22DA               	addwfc	fsr2h,f,c
 26213  000CE4  50DF               	movf	indf2,w,c
 26214  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26215  000CE8  90D8               	bcf	status,0,c
 26216  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26217  000CEC  90D8               	bcf	status,0,c
 26218  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 26219  000CF0  12A8               	iorwf	4008,f,c	;volatile
 26220                           
 26221                           ; BSR set to: 0
 26222                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 26223  000CF2  0E00               	movlw	0
 26224  000CF4  6E9C               	movwf	3996,c	;volatile
 26225                           
 26226                           ; BSR set to: 0
 26227                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 26228  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 26229  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 26230  000CFE  50DF               	movf	indf2,w,c
 26231  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26232  000D02  0E00               	movlw	0
 26233  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 26234  000D06  0E80               	movlw	128
 26235  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26236  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 26237  000D0C  129C               	iorwf	3996,f,c	;volatile
 26238                           
 26239                           ; BSR set to: 0
 26240                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 26241  000D0E  EE20 F005          	lfsr	2,5
 26242  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26243  000D14  26D9               	addwf	fsr2l,f,c
 26244  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26245  000D18  22DA               	addwfc	fsr2h,f,c
 26246  000D1A  50DF               	movf	indf2,w,c
 26247  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26248  000D1E  0E06               	movlw	6
 26249  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 26250  000D22                     u12645:
 26251  000D22  90D8               	bcf	status,0,c
 26252  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26253  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 26254  000D28  D7FC               	goto	u12645
 26255  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 26256  000D2C  129C               	iorwf	3996,f,c	;volatile
 26257                           
 26258                           ; BSR set to: 0
 26259                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 26260  000D2E  EE20 F007          	lfsr	2,7
 26261  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26262  000D34  26D9               	addwf	fsr2l,f,c
 26263  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26264  000D38  22DA               	addwfc	fsr2h,f,c
 26265  000D3A  50DF               	movf	indf2,w,c
 26266  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26267  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 26268  000D40  0BF0               	andlw	240
 26269  000D42  129C               	iorwf	3996,f,c	;volatile
 26270                           
 26271                           ; BSR set to: 0
 26272                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 26273  000D44  0E00               	movlw	0
 26274  000D46  6E7C               	movwf	3964,c	;volatile
 26275                           
 26276                           ; BSR set to: 0
 26277                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 26278  000D48  EE20 F002          	lfsr	2,2
 26279  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26280  000D4E  26D9               	addwf	fsr2l,f,c
 26281  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26282  000D52  22DA               	addwfc	fsr2h,f,c
 26283  000D54  50DF               	movf	indf2,w,c
 26284  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26285  000D58  90D8               	bcf	status,0,c
 26286  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26287  000D5C  90D8               	bcf	status,0,c
 26288  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 26289  000D60  90D8               	bcf	status,0,c
 26290  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 26291  000D64  127C               	iorwf	3964,f,c	;volatile
 26292                           
 26293                           ; BSR set to: 0
 26294                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 26295  000D66  EE20 F00A          	lfsr	2,10
 26296  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26297  000D6C  26D9               	addwf	fsr2l,f,c
 26298  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26299  000D70  22DA               	addwfc	fsr2h,f,c
 26300  000D72  50DF               	movf	indf2,w,c
 26301  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26302  000D76  90D8               	bcf	status,0,c
 26303  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 26304  000D7A  127C               	iorwf	3964,f,c	;volatile
 26305                           
 26306                           ; BSR set to: 0
 26307                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 26308  000D7C  EE20 F009          	lfsr	2,9
 26309  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26310  000D82  26D9               	addwf	fsr2l,f,c
 26311  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26312  000D86  22DA               	addwfc	fsr2h,f,c
 26313  000D88  50DF               	movf	indf2,w,c
 26314  000D8A  127C               	iorwf	3964,f,c	;volatile
 26315                           
 26316                           ; BSR set to: 0
 26317                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 26318  000D8C  EE20 F00B          	lfsr	2,11
 26319  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26320  000D92  26D9               	addwf	fsr2l,f,c
 26321  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26322  000D96  22DA               	addwfc	fsr2h,f,c
 26323  000D98  50DF               	movf	indf2,w,c
 26324  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26325  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 26326  000D9E  50A3               	movf	4003,w,c	;volatile
 26327  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 26328  000DA2  0BEF               	andlw	-17
 26329  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 26330  000DA6  6EA3               	movwf	4003,c	;volatile
 26331                           
 26332                           ; BSR set to: 0
 26333                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 26334  000DA8  EE20 F00C          	lfsr	2,12
 26335  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 26336  000DAE  26D9               	addwf	fsr2l,f,c
 26337  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 26338  000DB2  22DA               	addwfc	fsr2h,f,c
 26339  000DB4  50DF               	movf	indf2,w,c
 26340  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 26341  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 26342  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 26343  000DBC  50A3               	movf	4003,w,c	;volatile
 26344  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 26345  000DC0  0BDF               	andlw	-33
 26346  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 26347  000DC4  6EA3               	movwf	4003,c	;volatile
 26348                           
 26349                           ; BSR set to: 0
 26350  000DC6  0012               	return	
 26351  000DC8                     __end_of_Uart_InitUartModule:
 26352                           	opt stack 0
 26353                           tosu	equ	0xFFF
 26354                           tosh	equ	0xFFE
 26355                           tosl	equ	0xFFD
 26356                           pclath	equ	0xFFA
 26357                           tblptru	equ	0xFF8
 26358                           tblptrh	equ	0xFF7
 26359                           tblptrl	equ	0xFF6
 26360                           tablat	equ	0xFF5
 26361                           prodh	equ	0xFF4
 26362                           prodl	equ	0xFF3
 26363                           intcon	equ	0xFF2
 26364                           intcon2	equ	0xFF1
 26365                           intcon3	equ	0xFF0
 26366                           indf0	equ	0xFEF
 26367                           postinc0	equ	0xFEE
 26368                           plusw0	equ	0xFEB
 26369                           fsr0h	equ	0xFEA
 26370                           fsr0l	equ	0xFE9
 26371                           wreg	equ	0xFE8
 26372                           indf1	equ	0xFE7
 26373                           postinc1	equ	0xFE6
 26374                           postdec1	equ	0xFE5
 26375                           plusw1	equ	0xFE3
 26376                           fsr1h	equ	0xFE2
 26377                           fsr1l	equ	0xFE1
 26378                           indf2	equ	0xFDF
 26379                           postinc2	equ	0xFDE
 26380                           postdec2	equ	0xFDD
 26381                           plusw2	equ	0xFDB
 26382                           fsr2h	equ	0xFDA
 26383                           fsr2l	equ	0xFD9
 26384                           status	equ	0xFD8
 26385                           
 26386 ;; *************** function _SetUartBaudRate *****************
 26387 ;; Defined at:
 26388 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26389 ;; Parameters:    Size  Location     Type
 26390 ;;  Module          1    wreg     unsigned char 
 26391 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 26392 ;;		 -> UartConfig(21), 
 26393 ;; Auto vars:     Size  Location     Type
 26394 ;;  Module          1   57[BANK0 ] unsigned char 
 26395 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 26396 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 26397 ;; Return value:  Size  Location     Type
 26398 ;;                  1    wreg      void 
 26399 ;; Registers used:
 26400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26401 ;; Tracked objects:
 26402 ;;		On entry : 0/0
 26403 ;;		On exit  : 0/0
 26404 ;;		Unchanged: 0/0
 26405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26406 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26407 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26408 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26409 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26410 ;;Total ram usage:        7 bytes
 26411 ;; Hardware stack levels used:    1
 26412 ;; Hardware stack levels required when called:   12
 26413 ;; This function calls:
 26414 ;;		___lldiv
 26415 ;;		___lmul
 26416 ;; This function is called by:
 26417 ;;		_Uart_InitUartModule
 26418 ;; This function uses a non-reentrant model
 26419 ;;
 26420                           
 26421                           	psect	text124
 26422  002A8E                     __ptext124:
 26423                           	opt stack 0
 26424  002A8E                     _SetUartBaudRate:
 26425                           	opt stack 14
 26426                           
 26427                           ; BSR set to: 0
 26428                           ;incstack = 0
 26429                           ;SetUartBaudRate@Module stored from wreg
 26430  002A8E  0100               	movlb	0	; () banked
 26431  002A90  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 26432                           
 26433                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 26434  002A92  0E00               	movlw	0
 26435  002A94  0100               	movlb	0	; () banked
 26436  002A96  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 26437  002A98  0E00               	movlw	0
 26438  002A9A  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 26439                           
 26440                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 26441  002A9C  0E00               	movlw	0
 26442  002A9E  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 26443                           
 26444                           ; BSR set to: 0
 26445                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 26446  002AA0  EE20 F002          	lfsr	2,2
 26447  002AA4  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 26448  002AA6  26D9               	addwf	fsr2l,f,c
 26449  002AA8  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 26450  002AAA  22DA               	addwfc	fsr2h,f,c
 26451  002AAC  50DF               	movf	indf2,w,c
 26452  002AAE  A4D8               	btfss	status,2,c
 26453  002AB0  D00B               	goto	l625
 26454                           
 26455                           ; BSR set to: 0
 26456  002AB2  EE20 F002          	lfsr	2,2
 26457  002AB6  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 26458  002AB8  26D9               	addwf	fsr2l,f,c
 26459  002ABA  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 26460  002ABC  22DA               	addwfc	fsr2h,f,c
 26461  002ABE  50DF               	movf	indf2,w,c
 26462  002AC0  A4D8               	btfss	status,2,c
 26463  002AC2  D002               	goto	l625
 26464                           
 26465                           ; BSR set to: 0
 26466                           ;uart_drv.c: 128: {
 26467                           ;uart_drv.c: 129: DivisionFactor = 64;
 26468  002AC4  0E40               	movlw	64
 26469  002AC6  D039               	goto	L38
 26470  002AC8                     l625:
 26471                           
 26472                           ; BSR set to: 0
 26473                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 26474                           
 26475                           ; BSR set to: 0
 26476  002AC8  EE20 F002          	lfsr	2,2
 26477  002ACC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 26478  002ACE  26D9               	addwf	fsr2l,f,c
 26479  002AD0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 26480  002AD2  22DA               	addwfc	fsr2h,f,c
 26481  002AD4  04DE               	decf	postinc2,w,c
 26482  002AD6  A4D8               	btfss	status,2,c
 26483  002AD8  D009               	goto	l627
 26484                           
 26485                           ; BSR set to: 0
 26486  002ADA  EE20 F002          	lfsr	2,2
 26487  002ADE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 26488  002AE0  26D9               	addwf	fsr2l,f,c
 26489  002AE2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 26490  002AE4  22DA               	addwfc	fsr2h,f,c
 26491  002AE6  50DF               	movf	indf2,w,c
 26492  002AE8  B4D8               	btfsc	status,2,c
 26493  002AEA  D012               	goto	u11740
 26494  002AEC                     l627:
 26495                           
 26496                           ; BSR set to: 0
 26497                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 26498                           
 26499                           ; BSR set to: 0
 26500  002AEC  EE20 F002          	lfsr	2,2
 26501  002AF0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 26502  002AF2  26D9               	addwf	fsr2l,f,c
 26503  002AF4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 26504  002AF6  22DA               	addwfc	fsr2h,f,c
 26505  002AF8  50DF               	movf	indf2,w,c
 26506  002AFA  A4D8               	btfss	status,2,c
 26507  002AFC  D00B               	goto	l629
 26508                           
 26509                           ; BSR set to: 0
 26510  002AFE  EE20 F002          	lfsr	2,2
 26511  002B02  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 26512  002B04  26D9               	addwf	fsr2l,f,c
 26513  002B06  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 26514  002B08  22DA               	addwfc	fsr2h,f,c
 26515  002B0A  04DE               	decf	postinc2,w,c
 26516  002B0C  A4D8               	btfss	status,2,c
 26517  002B0E  D002               	goto	l629
 26518  002B10                     u11740:
 26519                           
 26520                           ; BSR set to: 0
 26521                           ;uart_drv.c: 136: {
 26522                           ;uart_drv.c: 137: DivisionFactor = 16;
 26523  002B10  0E10               	movlw	16
 26524  002B12  D013               	goto	L38
 26525  002B14                     l629:
 26526                           
 26527                           ; BSR set to: 0
 26528                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 26529                           
 26530                           ; BSR set to: 0
 26531  002B14  EE20 F002          	lfsr	2,2
 26532  002B18  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 26533  002B1A  26D9               	addwf	fsr2l,f,c
 26534  002B1C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 26535  002B1E  22DA               	addwfc	fsr2h,f,c
 26536  002B20  04DE               	decf	postinc2,w,c
 26537  002B22  A4D8               	btfss	status,2,c
 26538  002B24  D00B               	goto	l631
 26539                           
 26540                           ; BSR set to: 0
 26541  002B26  EE20 F002          	lfsr	2,2
 26542  002B2A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 26543  002B2C  26D9               	addwf	fsr2l,f,c
 26544  002B2E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 26545  002B30  22DA               	addwfc	fsr2h,f,c
 26546  002B32  04DE               	decf	postinc2,w,c
 26547  002B34  A4D8               	btfss	status,2,c
 26548  002B36  D002               	goto	l631
 26549                           
 26550                           ; BSR set to: 0
 26551                           ;uart_drv.c: 140: {
 26552                           ;uart_drv.c: 141: DivisionFactor = 4;
 26553  002B38  0E04               	movlw	4
 26554  002B3A                     L38:
 26555  002B3A  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 26556  002B3C                     l631:
 26557                           
 26558                           ; BSR set to: 0
 26559                           ;uart_drv.c: 146: }
 26560                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 26561                           
 26562                           ; BSR set to: 0
 26563                           
 26564                           ; BSR set to: 0
 26565                           
 26566                           ; BSR set to: 0
 26567                           
 26568                           ; BSR set to: 0
 26569                           
 26570                           ;uart_drv.c: 143: else
 26571                           ;uart_drv.c: 144: {
 26572                           
 26573                           ; BSR set to: 0
 26574  002B3C  EE20 F00D          	lfsr	2,13
 26575  002B40  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 26576  002B42  26D9               	addwf	fsr2l,f,c
 26577  002B44  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 26578  002B46  22DA               	addwfc	fsr2h,f,c
 26579  002B48  CFDE F089          	movff	postinc2,___lldiv@dividend
 26580  002B4C  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 26581  002B50  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 26582  002B54  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 26583  002B58  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 26584  002B5A  6F7D               	movwf	___lmul@multiplier& (0+255),b
 26585  002B5C  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 26586  002B5E  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 26587  002B60  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 26588  002B62  EE20 F011          	lfsr	2,17
 26589  002B66  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 26590  002B68  26D9               	addwf	fsr2l,f,c
 26591  002B6A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 26592  002B6C  22DA               	addwfc	fsr2h,f,c
 26593  002B6E  CFDE F081          	movff	postinc2,___lmul@multiplicand
 26594  002B72  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 26595  002B76  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 26596  002B7A  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 26597  002B7E  ECB4  F029         	call	___lmul	;wreg free
 26598  002B82  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 26599  002B86  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 26600  002B8A  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 26601  002B8E  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 26602  002B92  EC96  F026         	call	___lldiv	;wreg free
 26603  002B96  0EFF               	movlw	255
 26604  002B98  0100               	movlb	0	; () banked
 26605  002B9A  2589               	addwf	?___lldiv& (0+255),w,b
 26606  002B9C  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 26607  002B9E  0EFF               	movlw	255
 26608  002BA0  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 26609  002BA2  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 26610                           
 26611                           ; BSR set to: 0
 26612                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 26613  002BA4  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 26614  002BA6  A4D8               	btfss	status,2,c
 26615  002BA8  D005               	goto	l633
 26616                           
 26617                           ; BSR set to: 0
 26618                           ;uart_drv.c: 152: {
 26619                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 26620  002BAA  0E00               	movlw	0
 26621  002BAC  6E7F               	movwf	3967,c	;volatile
 26622                           
 26623                           ; BSR set to: 0
 26624                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 26625  002BAE  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 26626                           
 26627                           ;uart_drv.c: 156: }
 26628  002BB2  0012               	return	
 26629  002BB4                     l633:
 26630                           
 26631                           ; BSR set to: 0
 26632                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 26633                           
 26634                           ; BSR set to: 0
 26635  002BB4  0E02               	movlw	2
 26636  002BB6  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 26637  002BB8  A4D8               	btfss	status,2,c
 26638  002BBA  0012               	return	
 26639                           
 26640                           ; BSR set to: 0
 26641                           ;uart_drv.c: 158: {
 26642                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 26643  002BBC  0E00               	movlw	0
 26644  002BBE  6E7D               	movwf	3965,c	;volatile
 26645                           
 26646                           ; BSR set to: 0
 26647                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 26648  002BC0  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 26649                           
 26650                           ; BSR set to: 0
 26651  002BC4  0012               	return	
 26652  002BC6                     __end_of_SetUartBaudRate:
 26653                           	opt stack 0
 26654                           tosu	equ	0xFFF
 26655                           tosh	equ	0xFFE
 26656                           tosl	equ	0xFFD
 26657                           pclath	equ	0xFFA
 26658                           tblptru	equ	0xFF8
 26659                           tblptrh	equ	0xFF7
 26660                           tblptrl	equ	0xFF6
 26661                           tablat	equ	0xFF5
 26662                           prodh	equ	0xFF4
 26663                           prodl	equ	0xFF3
 26664                           intcon	equ	0xFF2
 26665                           intcon2	equ	0xFF1
 26666                           intcon3	equ	0xFF0
 26667                           indf0	equ	0xFEF
 26668                           postinc0	equ	0xFEE
 26669                           plusw0	equ	0xFEB
 26670                           fsr0h	equ	0xFEA
 26671                           fsr0l	equ	0xFE9
 26672                           wreg	equ	0xFE8
 26673                           indf1	equ	0xFE7
 26674                           postinc1	equ	0xFE6
 26675                           postdec1	equ	0xFE5
 26676                           plusw1	equ	0xFE3
 26677                           fsr1h	equ	0xFE2
 26678                           fsr1l	equ	0xFE1
 26679                           indf2	equ	0xFDF
 26680                           postinc2	equ	0xFDE
 26681                           postdec2	equ	0xFDD
 26682                           plusw2	equ	0xFDB
 26683                           fsr2h	equ	0xFDA
 26684                           fsr2l	equ	0xFD9
 26685                           status	equ	0xFD8
 26686                           
 26687 ;; *************** function ___lmul *****************
 26688 ;; Defined at:
 26689 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 26690 ;; Parameters:    Size  Location     Type
 26691 ;;  multiplier      4   29[BANK0 ] unsigned long 
 26692 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 26693 ;; Auto vars:     Size  Location     Type
 26694 ;;  product         4   37[BANK0 ] unsigned long 
 26695 ;; Return value:  Size  Location     Type
 26696 ;;                  4   29[BANK0 ] unsigned long 
 26697 ;; Registers used:
 26698 ;;		wreg, status,2, status,0
 26699 ;; Tracked objects:
 26700 ;;		On entry : 0/0
 26701 ;;		On exit  : 0/0
 26702 ;;		Unchanged: 0/0
 26703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26704 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26705 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26707 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26708 ;;Total ram usage:       12 bytes
 26709 ;; Hardware stack levels used:    1
 26710 ;; Hardware stack levels required when called:   11
 26711 ;; This function calls:
 26712 ;;		Nothing
 26713 ;; This function is called by:
 26714 ;;		_Tmr_TmrBPrSet
 26715 ;;		_SetUartBaudRate
 26716 ;;		_strtol
 26717 ;; This function uses a non-reentrant model
 26718 ;;
 26719                           
 26720                           	psect	text125
 26721  005368                     __ptext125:
 26722                           	opt stack 0
 26723  005368                     ___lmul:
 26724                           	opt stack 15
 26725                           
 26726                           ; BSR set to: 0
 26727                           ;incstack = 0
 26728  005368  0E00               	movlw	0
 26729  00536A  0100               	movlb	0	; () banked
 26730  00536C  6F85               	movwf	___lmul@product& (0+255),b
 26731  00536E  0E00               	movlw	0
 26732  005370  6F86               	movwf	(___lmul@product+1)& (0+255),b
 26733  005372  0E00               	movlw	0
 26734  005374  6F87               	movwf	(___lmul@product+2)& (0+255),b
 26735  005376  0E00               	movlw	0
 26736  005378  6F88               	movwf	(___lmul@product+3)& (0+255),b
 26737  00537A                     
 26738                           ; BSR set to: 0
 26739                           
 26740                           ; BSR set to: 0
 26741  00537A  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 26742  00537C  D008               	goto	l2756
 26743                           
 26744                           ; BSR set to: 0
 26745  00537E  5181               	movf	___lmul@multiplicand& (0+255),w,b
 26746  005380  2785               	addwf	___lmul@product& (0+255),f,b
 26747  005382  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 26748  005384  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 26749  005386  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 26750  005388  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 26751  00538A  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 26752  00538C  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 26753  00538E                     l2756:
 26754                           
 26755                           ; BSR set to: 0
 26756                           
 26757                           ; BSR set to: 0
 26758  00538E  90D8               	bcf	status,0,c
 26759  005390  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 26760  005392  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 26761  005394  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 26762  005396  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 26763                           
 26764                           ; BSR set to: 0
 26765  005398  90D8               	bcf	status,0,c
 26766  00539A  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 26767  00539C  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 26768  00539E  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 26769  0053A0  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 26770  0053A2  517D               	movf	___lmul@multiplier& (0+255),w,b
 26771  0053A4  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 26772  0053A6  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 26773  0053A8  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 26774  0053AA  A4D8               	btfss	status,2,c
 26775  0053AC  D7E6               	goto	l2755
 26776                           
 26777                           ; BSR set to: 0
 26778  0053AE  C085  F07D         	movff	___lmul@product,?___lmul
 26779  0053B2  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 26780  0053B6  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 26781  0053BA  C088  F080         	movff	___lmul@product+3,?___lmul+3
 26782                           
 26783                           ; BSR set to: 0
 26784  0053BE  0012               	return		;funcret
 26785  0053C0                     __end_of___lmul:
 26786                           	opt stack 0
 26787                           tosu	equ	0xFFF
 26788                           tosh	equ	0xFFE
 26789                           tosl	equ	0xFFD
 26790                           pclath	equ	0xFFA
 26791                           tblptru	equ	0xFF8
 26792                           tblptrh	equ	0xFF7
 26793                           tblptrl	equ	0xFF6
 26794                           tablat	equ	0xFF5
 26795                           prodh	equ	0xFF4
 26796                           prodl	equ	0xFF3
 26797                           intcon	equ	0xFF2
 26798                           intcon2	equ	0xFF1
 26799                           intcon3	equ	0xFF0
 26800                           indf0	equ	0xFEF
 26801                           postinc0	equ	0xFEE
 26802                           plusw0	equ	0xFEB
 26803                           fsr0h	equ	0xFEA
 26804                           fsr0l	equ	0xFE9
 26805                           wreg	equ	0xFE8
 26806                           indf1	equ	0xFE7
 26807                           postinc1	equ	0xFE6
 26808                           postdec1	equ	0xFE5
 26809                           plusw1	equ	0xFE3
 26810                           fsr1h	equ	0xFE2
 26811                           fsr1l	equ	0xFE1
 26812                           indf2	equ	0xFDF
 26813                           postinc2	equ	0xFDE
 26814                           postdec2	equ	0xFDD
 26815                           plusw2	equ	0xFDB
 26816                           fsr2h	equ	0xFDA
 26817                           fsr2l	equ	0xFD9
 26818                           status	equ	0xFD8
 26819                           
 26820 ;; *************** function _UartSetConfigLow *****************
 26821 ;; Defined at:
 26822 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26823 ;; Parameters:    Size  Location     Type
 26824 ;;		None
 26825 ;; Auto vars:     Size  Location     Type
 26826 ;;		None
 26827 ;; Return value:  Size  Location     Type
 26828 ;;                  1    wreg      void 
 26829 ;; Registers used:
 26830 ;;		wreg, status,2
 26831 ;; Tracked objects:
 26832 ;;		On entry : 0/0
 26833 ;;		On exit  : 0/0
 26834 ;;		Unchanged: 0/0
 26835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26840 ;;Total ram usage:        0 bytes
 26841 ;; Hardware stack levels used:    1
 26842 ;; Hardware stack levels required when called:   11
 26843 ;; This function calls:
 26844 ;;		Nothing
 26845 ;; This function is called by:
 26846 ;;		_ConfigureModem
 26847 ;; This function uses a non-reentrant model
 26848 ;;
 26849                           
 26850                           	psect	text126
 26851  0053C0                     __ptext126:
 26852                           	opt stack 0
 26853  0053C0                     _UartSetConfigLow:
 26854                           	opt stack 15
 26855                           
 26856                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 26857                           
 26858                           ; BSR set to: 0
 26859                           ;incstack = 0
 26860  0053C0  0E01               	movlw	1
 26861  0053C2  0103               	movlb	3	; () banked
 26862  0053C4  6F26               	movwf	_UartConfig& (0+255),b
 26863                           
 26864                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 26865  0053C6  0E00               	movlw	0
 26866  0053C8  6F27               	movwf	(_UartConfig+1)& (0+255),b
 26867                           
 26868                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 26869  0053CA  0E00               	movlw	0
 26870  0053CC  6F28               	movwf	(_UartConfig+2)& (0+255),b
 26871                           
 26872                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 26873  0053CE  0E00               	movlw	0
 26874  0053D0  6F29               	movwf	(_UartConfig+3)& (0+255),b
 26875                           
 26876                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 26877  0053D2  0E00               	movlw	0
 26878  0053D4  6F2A               	movwf	(_UartConfig+4)& (0+255),b
 26879                           
 26880                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 26881  0053D6  0E00               	movlw	0
 26882  0053D8  6F2B               	movwf	(_UartConfig+5)& (0+255),b
 26883                           
 26884                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 26885  0053DA  0E01               	movlw	1
 26886  0053DC  6F2C               	movwf	(_UartConfig+6)& (0+255),b
 26887                           
 26888                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 26889  0053DE  0E01               	movlw	1
 26890  0053E0  6F2D               	movwf	(_UartConfig+7)& (0+255),b
 26891                           
 26892                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 26893  0053E2  0E00               	movlw	0
 26894  0053E4  6F2E               	movwf	(_UartConfig+8)& (0+255),b
 26895                           
 26896                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 26897  0053E6  0E00               	movlw	0
 26898  0053E8  6F2F               	movwf	(_UartConfig+9)& (0+255),b
 26899                           
 26900                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 26901  0053EA  0E00               	movlw	0
 26902  0053EC  6F30               	movwf	(_UartConfig+10)& (0+255),b
 26903                           
 26904                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 26905  0053EE  0E00               	movlw	0
 26906  0053F0  6F31               	movwf	(_UartConfig+11)& (0+255),b
 26907                           
 26908                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 26909  0053F2  0E01               	movlw	1
 26910  0053F4  6F32               	movwf	(_UartConfig+12)& (0+255),b
 26911                           
 26912                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 26913  0053F6  0E00               	movlw	0
 26914  0053F8  6F33               	movwf	(_UartConfig+13)& (0+255),b
 26915  0053FA  0E6C               	movlw	108
 26916  0053FC  6F34               	movwf	(_UartConfig+14)& (0+255),b
 26917  0053FE  0EDC               	movlw	220
 26918  005400  6F35               	movwf	(_UartConfig+15)& (0+255),b
 26919  005402  0E02               	movlw	2
 26920  005404  6F36               	movwf	(_UartConfig+16)& (0+255),b
 26921                           
 26922                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 26923  005406  0E80               	movlw	128
 26924  005408  6F37               	movwf	(_UartConfig+17)& (0+255),b
 26925  00540A  0E25               	movlw	37
 26926  00540C  6F38               	movwf	(_UartConfig+18)& (0+255),b
 26927  00540E  0E00               	movlw	0
 26928  005410  6F39               	movwf	(_UartConfig+19)& (0+255),b
 26929  005412  0E00               	movlw	0
 26930  005414  6F3A               	movwf	(_UartConfig+20)& (0+255),b
 26931                           
 26932                           ; BSR set to: 3
 26933  005416  0012               	return		;funcret
 26934  005418                     __end_of_UartSetConfigLow:
 26935                           	opt stack 0
 26936                           tosu	equ	0xFFF
 26937                           tosh	equ	0xFFE
 26938                           tosl	equ	0xFFD
 26939                           pclath	equ	0xFFA
 26940                           tblptru	equ	0xFF8
 26941                           tblptrh	equ	0xFF7
 26942                           tblptrl	equ	0xFF6
 26943                           tablat	equ	0xFF5
 26944                           prodh	equ	0xFF4
 26945                           prodl	equ	0xFF3
 26946                           intcon	equ	0xFF2
 26947                           intcon2	equ	0xFF1
 26948                           intcon3	equ	0xFF0
 26949                           indf0	equ	0xFEF
 26950                           postinc0	equ	0xFEE
 26951                           plusw0	equ	0xFEB
 26952                           fsr0h	equ	0xFEA
 26953                           fsr0l	equ	0xFE9
 26954                           wreg	equ	0xFE8
 26955                           indf1	equ	0xFE7
 26956                           postinc1	equ	0xFE6
 26957                           postdec1	equ	0xFE5
 26958                           plusw1	equ	0xFE3
 26959                           fsr1h	equ	0xFE2
 26960                           fsr1l	equ	0xFE1
 26961                           indf2	equ	0xFDF
 26962                           postinc2	equ	0xFDE
 26963                           postdec2	equ	0xFDD
 26964                           plusw2	equ	0xFDB
 26965                           fsr2h	equ	0xFDA
 26966                           fsr2l	equ	0xFD9
 26967                           status	equ	0xFD8
 26968                           
 26969 ;; *************** function _CheckModem *****************
 26970 ;; Defined at:
 26971 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26972 ;; Parameters:    Size  Location     Type
 26973 ;;		None
 26974 ;; Auto vars:     Size  Location     Type
 26975 ;;		None
 26976 ;; Return value:  Size  Location     Type
 26977 ;;                  1    wreg      void 
 26978 ;; Registers used:
 26979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26980 ;; Tracked objects:
 26981 ;;		On entry : 0/0
 26982 ;;		On exit  : 0/0
 26983 ;;		Unchanged: 0/0
 26984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26989 ;;Total ram usage:        0 bytes
 26990 ;; Hardware stack levels used:    1
 26991 ;; Hardware stack levels required when called:   14
 26992 ;; This function calls:
 26993 ;;		_GenerateEvt
 26994 ;;		_OsTmr_GetTimerStatus
 26995 ;;		_OsTmr_StartTimer
 26996 ;;		_ReceiveEvt
 26997 ;;		_Uart_WriteConstString
 26998 ;; This function is called by:
 26999 ;;		_Mdm_MainTask
 27000 ;; This function uses a non-reentrant model
 27001 ;;
 27002                           
 27003                           	psect	text127
 27004  00242C                     __ptext127:
 27005                           	opt stack 0
 27006  00242C                     _CheckModem:
 27007                           	opt stack 13
 27008                           
 27009                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 27010                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 27011                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 27012                           
 27013                           ; BSR set to: 3
 27014                           ;incstack = 0
 27015  00242C  D096               	goto	l982
 27016  00242E                     
 27017                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 27018  00242E  0EF4               	movlw	low CheckModem@Timeout
 27019  002430  0100               	movlb	0	; () banked
 27020  002432  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27021  002434  0E03               	movlw	high CheckModem@Timeout
 27022  002436  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27023  002438  0ED0               	movlw	208
 27024  00243A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27025  00243C  0E07               	movlw	7
 27026  00243E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27027  002440  0E00               	movlw	0
 27028  002442  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27029  002444  0E00               	movlw	0
 27030  002446  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27031  002448  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 27032                           
 27033                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 27034  00244C  0E01               	movlw	1
 27035  00244E  6E2A               	movwf	CheckModem@CheckMdmSts,c
 27036                           
 27037                           ;mdm_gsm_gprs.c: 295: break;
 27038  002450  0012               	return	
 27039  002452                     
 27040                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 27041  002452  0EF4               	movlw	low CheckModem@Timeout
 27042  002454  0100               	movlb	0	; () banked
 27043  002456  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27044  002458  0E03               	movlw	high CheckModem@Timeout
 27045  00245A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27046  00245C  EC39  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27047  002460  06E8               	decf	wreg,f,c
 27048  002462  A4D8               	btfss	status,2,c
 27049  002464  0012               	return	
 27050                           
 27051                           ;mdm_gsm_gprs.c: 300: {
 27052                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 27053  002466  0E02               	movlw	2
 27054  002468  6E2A               	movwf	CheckModem@CheckMdmSts,c
 27055                           
 27056                           ;mdm_gsm_gprs.c: 303: }
 27057                           ;mdm_gsm_gprs.c: 304: break;
 27058  00246A  0012               	return	
 27059  00246C                     
 27060                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 27061  00246C  0EE5               	movlw	low STR_1
 27062  00246E  0100               	movlb	0	; () banked
 27063  002470  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27064  002472  0EFF               	movlw	high STR_1
 27065  002474  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27066  002476  0E01               	movlw	1
 27067  002478  EC85  F02D         	call	_Uart_WriteConstString
 27068                           
 27069                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 27070  00247C  0EF4               	movlw	low CheckModem@Timeout
 27071  00247E  0100               	movlb	0	; () banked
 27072  002480  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27073  002482  0E03               	movlw	high CheckModem@Timeout
 27074  002484  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27075  002486  0ED0               	movlw	208
 27076  002488  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27077  00248A  0E07               	movlw	7
 27078  00248C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27079  00248E  0E00               	movlw	0
 27080  002490  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27081  002492  0E00               	movlw	0
 27082  002494  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27083  002496  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 27084                           
 27085                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 27086  00249A  0E03               	movlw	3
 27087  00249C  6E2A               	movwf	CheckModem@CheckMdmSts,c
 27088                           
 27089                           ;mdm_gsm_gprs.c: 313: break;
 27090  00249E  0012               	return	
 27091  0024A0                     
 27092                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 27093  0024A0  0E3C               	movlw	low _NewStringReceived
 27094  0024A2  0100               	movlb	0	; () banked
 27095  0024A4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27096  0024A6  0E00               	movlw	high _NewStringReceived
 27097  0024A8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27098  0024AA  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 27099  0024AE  0900               	iorlw	0
 27100  0024B0  B4D8               	btfsc	status,2,c
 27101  0024B2  D02F               	goto	l989
 27102                           
 27103                           ;mdm_gsm_gprs.c: 318: {
 27104                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 27105  0024B4  CC58  FFE8         	movff	_RxBuffer,wreg
 27106  0024B8  0A4F               	xorlw	79
 27107  0024BA  A4D8               	btfss	status,2,c
 27108  0024BC  D005               	goto	u13600
 27109  0024BE  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27110  0024C2  0A4B               	xorlw	75
 27111  0024C4  B4D8               	btfsc	status,2,c
 27112  0024C6  D00A               	goto	u13620
 27113  0024C8                     u13600:
 27114  0024C8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27115  0024CC  0A4F               	xorlw	79
 27116  0024CE  A4D8               	btfss	status,2,c
 27117  0024D0  0012               	return	
 27118  0024D2  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 27119  0024D6  0A4B               	xorlw	75
 27120  0024D8  A4D8               	btfss	status,2,c
 27121  0024DA  0012               	return	
 27122  0024DC                     u13620:
 27123                           
 27124                           ;mdm_gsm_gprs.c: 321: {
 27125                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 27126  0024DC  0E02               	movlw	2
 27127  0024DE  0100               	movlb	0	; () banked
 27128  0024E0  6FD2               	movwf	_MdmStatus& (0+255),b
 27129                           
 27130                           ; BSR set to: 0
 27131                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 27132  0024E2  0EE2               	movlw	low _MdmOnOffPulseRequest
 27133  0024E4  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27134  0024E6  0E00               	movlw	high _MdmOnOffPulseRequest
 27135  0024E8  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27136  0024EA  ECB3  F031         	call	_GenerateEvt	;wreg free
 27137                           
 27138                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 27139  0024EE  0EF4               	movlw	low CheckModem@Timeout
 27140  0024F0  0100               	movlb	0	; () banked
 27141  0024F2  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27142  0024F4  0E03               	movlw	high CheckModem@Timeout
 27143  0024F6  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27144  0024F8  0EE8               	movlw	232
 27145  0024FA  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27146  0024FC  0E03               	movlw	3
 27147  0024FE  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27148  002500  0E00               	movlw	0
 27149  002502  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27150  002504  0E00               	movlw	0
 27151  002506  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27152  002508  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 27153                           
 27154                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 27155  00250C  0E04               	movlw	4
 27156  00250E  6E2A               	movwf	CheckModem@CheckMdmSts,c
 27157                           
 27158                           ;mdm_gsm_gprs.c: 329: }
 27159                           ;mdm_gsm_gprs.c: 330: }
 27160  002510  0012               	return	
 27161  002512                     l989:
 27162                           
 27163                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 27164  002512  0EF4               	movlw	low CheckModem@Timeout
 27165  002514  0100               	movlb	0	; () banked
 27166  002516  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27167  002518  0E03               	movlw	high CheckModem@Timeout
 27168  00251A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27169  00251C  EC39  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27170  002520  06E8               	decf	wreg,f,c
 27171  002522  A4D8               	btfss	status,2,c
 27172  002524  0012               	return	
 27173                           
 27174                           ;mdm_gsm_gprs.c: 332: {
 27175                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 27176  002526  0E00               	movlw	0
 27177  002528  0100               	movlb	0	; () banked
 27178  00252A  6FD2               	movwf	_MdmStatus& (0+255),b
 27179                           
 27180                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 27181  00252C  0E01               	movlw	1
 27182  00252E  6E2B               	movwf	_ComChecCompleted,c
 27183                           
 27184                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 27185  002530  0E05               	movlw	5
 27186  002532  6E2A               	movwf	CheckModem@CheckMdmSts,c
 27187                           
 27188                           ; BSR set to: 0
 27189                           ;mdm_gsm_gprs.c: 343: }
 27190                           ;mdm_gsm_gprs.c: 344: break;
 27191                           
 27192                           ; BSR set to: 0
 27193                           
 27194                           ;mdm_gsm_gprs.c: 340: else
 27195                           ;mdm_gsm_gprs.c: 341: {
 27196                           
 27197                           ; BSR set to: 0
 27198                           
 27199                           ;mdm_gsm_gprs.c: 339: }
 27200  002534  0012               	return	
 27201  002536                     
 27202                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 27203                           
 27204                           ; BSR set to: 0
 27205  002536  0EF4               	movlw	low CheckModem@Timeout
 27206  002538  0100               	movlb	0	; () banked
 27207  00253A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27208  00253C  0E03               	movlw	high CheckModem@Timeout
 27209  00253E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27210  002540  EC39  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27211  002544  06E8               	decf	wreg,f,c
 27212  002546  A4D8               	btfss	status,2,c
 27213  002548  0012               	return	
 27214                           
 27215                           ;mdm_gsm_gprs.c: 349: {
 27216                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 27217  00254A  0E00               	movlw	0
 27218  00254C  0100               	movlb	0	; () banked
 27219  00254E  6FD2               	movwf	_MdmStatus& (0+255),b
 27220                           
 27221                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 27222  002550  0E01               	movlw	1
 27223  002552  6E2B               	movwf	_ComChecCompleted,c
 27224                           
 27225                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 27226  002554  0E05               	movlw	5
 27227  002556  6E2A               	movwf	CheckModem@CheckMdmSts,c
 27228                           
 27229                           ; BSR set to: 0
 27230                           ;mdm_gsm_gprs.c: 365: }
 27231                           
 27232                           ; BSR set to: 0
 27233                           ;mdm_gsm_gprs.c: 364: break;
 27234                           
 27235                           ;mdm_gsm_gprs.c: 363: default:
 27236                           
 27237                           ; BSR set to: 0
 27238                           ;mdm_gsm_gprs.c: 361: break;
 27239                           
 27240                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 27241                           
 27242                           ; BSR set to: 0
 27243                           ;mdm_gsm_gprs.c: 356: }
 27244                           ;mdm_gsm_gprs.c: 357: break;
 27245  002558  0012               	return	
 27246  00255A                     l982:
 27247                           
 27248                           ; BSR set to: 0
 27249  00255A  502A               	movf	CheckModem@CheckMdmSts,w,c
 27250                           
 27251                           ; Switch size 1, requested type "space"
 27252                           ; Number of cases is 6, Range of values is 0 to 5
 27253                           ; switch strategies available:
 27254                           ; Name         Instructions Cycles
 27255                           ; simple_byte           19    10 (average)
 27256                           ;	Chosen strategy is simple_byte
 27257  00255C  0A00               	xorlw	0	; case 0
 27258  00255E  B4D8               	btfsc	status,2,c
 27259  002560  D766               	goto	l983
 27260  002562  0A01               	xorlw	1	; case 1
 27261  002564  B4D8               	btfsc	status,2,c
 27262  002566  D775               	goto	l985
 27263  002568  0A03               	xorlw	3	; case 2
 27264  00256A  B4D8               	btfsc	status,2,c
 27265  00256C  D77F               	goto	l987
 27266  00256E  0A01               	xorlw	1	; case 3
 27267  002570  B4D8               	btfsc	status,2,c
 27268  002572  D796               	goto	l988
 27269  002574  0A07               	xorlw	7	; case 4
 27270  002576  B4D8               	btfsc	status,2,c
 27271  002578  D7DE               	goto	l998
 27272  00257A  0A01               	xorlw	1	; case 5
 27273  00257C  0012               	return	
 27274  00257E                     __end_of_CheckModem:
 27275                           	opt stack 0
 27276                           tosu	equ	0xFFF
 27277                           tosh	equ	0xFFE
 27278                           tosl	equ	0xFFD
 27279                           pclath	equ	0xFFA
 27280                           tblptru	equ	0xFF8
 27281                           tblptrh	equ	0xFF7
 27282                           tblptrl	equ	0xFF6
 27283                           tablat	equ	0xFF5
 27284                           prodh	equ	0xFF4
 27285                           prodl	equ	0xFF3
 27286                           intcon	equ	0xFF2
 27287                           intcon2	equ	0xFF1
 27288                           intcon3	equ	0xFF0
 27289                           indf0	equ	0xFEF
 27290                           postinc0	equ	0xFEE
 27291                           plusw0	equ	0xFEB
 27292                           fsr0h	equ	0xFEA
 27293                           fsr0l	equ	0xFE9
 27294                           wreg	equ	0xFE8
 27295                           indf1	equ	0xFE7
 27296                           postinc1	equ	0xFE6
 27297                           postdec1	equ	0xFE5
 27298                           plusw1	equ	0xFE3
 27299                           fsr1h	equ	0xFE2
 27300                           fsr1l	equ	0xFE1
 27301                           indf2	equ	0xFDF
 27302                           postinc2	equ	0xFDE
 27303                           postdec2	equ	0xFDD
 27304                           plusw2	equ	0xFDB
 27305                           fsr2h	equ	0xFDA
 27306                           fsr2l	equ	0xFD9
 27307                           status	equ	0xFD8
 27308                           
 27309 ;; *************** function _MdmCntSm *****************
 27310 ;; Defined at:
 27311 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 27312 ;; Parameters:    Size  Location     Type
 27313 ;;		None
 27314 ;; Auto vars:     Size  Location     Type
 27315 ;;		None
 27316 ;; Return value:  Size  Location     Type
 27317 ;;                  1    wreg      void 
 27318 ;; Registers used:
 27319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27320 ;; Tracked objects:
 27321 ;;		On entry : 0/0
 27322 ;;		On exit  : 0/0
 27323 ;;		Unchanged: 0/0
 27324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27329 ;;Total ram usage:        0 bytes
 27330 ;; Hardware stack levels used:    1
 27331 ;; Hardware stack levels required when called:   12
 27332 ;; This function calls:
 27333 ;;		_InitModemInterface
 27334 ;;		_ReceiveEvt
 27335 ;; This function is called by:
 27336 ;;		_Mdm_DrvMainFn
 27337 ;; This function uses a non-reentrant model
 27338 ;;
 27339                           
 27340                           	psect	text128
 27341  0043C6                     __ptext128:
 27342                           	opt stack 0
 27343  0043C6                     _MdmCntSm:
 27344                           	opt stack 15
 27345                           
 27346                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 27347                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 27348                           ;mdm_drv.c: 204: switch (MdmCntState)
 27349                           
 27350                           ;incstack = 0
 27351  0043C6  D045               	goto	l315
 27352  0043C8                     
 27353                           ;mdm_drv.c: 208: InitModemInterface();
 27354  0043C8  EC71  F032         	call	_InitModemInterface	;wreg free
 27355                           
 27356                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 27357  0043CC  0E01               	movlw	1
 27358  0043CE  6E2E               	movwf	MdmCntSm@MdmCntState,c
 27359                           
 27360                           ;mdm_drv.c: 211: break;
 27361  0043D0  0012               	return	
 27362  0043D2                     
 27363                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 27364  0043D2  0EE2               	movlw	low _MdmOnOffPulseRequest
 27365  0043D4  0100               	movlb	0	; () banked
 27366  0043D6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27367  0043D8  0E00               	movlw	high _MdmOnOffPulseRequest
 27368  0043DA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27369  0043DC  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 27370  0043E0  0900               	iorlw	0
 27371  0043E2  B4D8               	btfsc	status,2,c
 27372  0043E4  D009               	goto	l319
 27373                           
 27374                           ;mdm_drv.c: 216: {
 27375                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 27376  0043E6  0E02               	movlw	2
 27377  0043E8  6E2E               	movwf	MdmCntSm@MdmCntState,c
 27378                           
 27379                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 27380  0043EA  8284               	bsf	3972,1,c	;volatile
 27381                           
 27382                           ;mdm_drv.c: 222: Counter = 0;
 27383  0043EC  0E00               	movlw	0
 27384  0043EE  0102               	movlb	2	; () banked
 27385  0043F0  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 27386  0043F2  0E00               	movlw	0
 27387  0043F4  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 27388                           
 27389                           ;mdm_drv.c: 223: }
 27390  0043F6  0012               	return	
 27391  0043F8                     l319:
 27392                           
 27393                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 27394                           
 27395                           ; BSR set to: 2
 27396  0043F8  0E3D               	movlw	low _MdmResetRequest
 27397  0043FA  0100               	movlb	0	; () banked
 27398  0043FC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27399  0043FE  0E00               	movlw	high _MdmResetRequest
 27400  004400  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27401  004402  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 27402  004406  0900               	iorlw	0
 27403  004408  B4D8               	btfsc	status,2,c
 27404  00440A  0012               	return	
 27405                           
 27406                           ;mdm_drv.c: 225: {
 27407                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 27408  00440C  0E03               	movlw	3
 27409  00440E  6E2E               	movwf	MdmCntSm@MdmCntState,c
 27410                           
 27411                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 27412  004410  8084               	bsf	3972,0,c	;volatile
 27413                           
 27414                           ;mdm_drv.c: 231: Counter = 0;
 27415  004412  0E00               	movlw	0
 27416  004414  0102               	movlb	2	; () banked
 27417  004416  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 27418  004418  0E00               	movlw	0
 27419  00441A  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 27420                           
 27421                           ; BSR set to: 2
 27422                           ;mdm_drv.c: 236: }
 27423                           ;mdm_drv.c: 237: break;
 27424                           
 27425                           ; BSR set to: 2
 27426                           
 27427                           ;mdm_drv.c: 233: else
 27428                           ;mdm_drv.c: 234: {
 27429                           
 27430                           ; BSR set to: 2
 27431                           
 27432                           ;mdm_drv.c: 232: }
 27433  00441C  0012               	return	
 27434  00441E                     
 27435                           ;mdm_drv.c: 241: Counter++;
 27436                           
 27437                           ; BSR set to: 2
 27438  00441E  0102               	movlb	2	; () banked
 27439  004420  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 27440  004422  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 27441                           
 27442                           ; BSR set to: 2
 27443                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 27444  004424  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 27445  004426  E104               	bnz	u13520
 27446  004428  0E96               	movlw	150
 27447  00442A  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 27448  00442C  A0D8               	btfss	status,0,c
 27449  00442E  0012               	return	
 27450  004430                     u13520:
 27451                           
 27452                           ; BSR set to: 2
 27453                           ;mdm_drv.c: 244: {
 27454                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 27455  004430  9284               	bcf	3972,1,c	;volatile
 27456                           
 27457                           ; BSR set to: 2
 27458                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 27459  004432  0E01               	movlw	1
 27460  004434  6E2E               	movwf	MdmCntSm@MdmCntState,c
 27461                           
 27462                           ; BSR set to: 2
 27463                           ;mdm_drv.c: 249: }
 27464                           ;mdm_drv.c: 250: break;
 27465  004436  0012               	return	
 27466  004438                     
 27467                           ;mdm_drv.c: 254: Counter++;
 27468                           
 27469                           ; BSR set to: 2
 27470  004438  0102               	movlb	2	; () banked
 27471  00443A  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 27472  00443C  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 27473                           
 27474                           ; BSR set to: 2
 27475                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 27476  00443E  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 27477  004440  E104               	bnz	u13530
 27478  004442  0E0A               	movlw	10
 27479  004444  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 27480  004446  A0D8               	btfss	status,0,c
 27481  004448  0012               	return	
 27482  00444A                     u13530:
 27483                           
 27484                           ; BSR set to: 2
 27485                           ;mdm_drv.c: 257: {
 27486                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 27487  00444A  9084               	bcf	3972,0,c	;volatile
 27488                           
 27489                           ; BSR set to: 2
 27490                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 27491  00444C  0E01               	movlw	1
 27492  00444E  6E2E               	movwf	MdmCntSm@MdmCntState,c
 27493                           
 27494                           ; BSR set to: 2
 27495                           ;mdm_drv.c: 267: }
 27496                           
 27497                           ; BSR set to: 2
 27498                           ;mdm_drv.c: 266: break;
 27499                           
 27500                           ;mdm_drv.c: 265: default:
 27501                           
 27502                           ; BSR set to: 2
 27503                           ;mdm_drv.c: 262: }
 27504                           ;mdm_drv.c: 263: break;
 27505  004450  0012               	return	
 27506  004452                     l315:
 27507                           
 27508                           ; BSR set to: 2
 27509  004452  502E               	movf	MdmCntSm@MdmCntState,w,c
 27510                           
 27511                           ; Switch size 1, requested type "space"
 27512                           ; Number of cases is 4, Range of values is 0 to 3
 27513                           ; switch strategies available:
 27514                           ; Name         Instructions Cycles
 27515                           ; simple_byte           13     7 (average)
 27516                           ;	Chosen strategy is simple_byte
 27517  004454  0A00               	xorlw	0	; case 0
 27518  004456  B4D8               	btfsc	status,2,c
 27519  004458  D7B7               	goto	l316
 27520  00445A  0A01               	xorlw	1	; case 1
 27521  00445C  B4D8               	btfsc	status,2,c
 27522  00445E  D7B9               	goto	l318
 27523  004460  0A03               	xorlw	3	; case 2
 27524  004462  B4D8               	btfsc	status,2,c
 27525  004464  D7DC               	goto	l323
 27526  004466  0A01               	xorlw	1	; case 3
 27527  004468  A4D8               	btfss	status,2,c
 27528  00446A  0012               	return	
 27529  00446C  D7E5               	goto	l325
 27530  00446E                     __end_of_MdmCntSm:
 27531                           	opt stack 0
 27532                           tosu	equ	0xFFF
 27533                           tosh	equ	0xFFE
 27534                           tosl	equ	0xFFD
 27535                           pclath	equ	0xFFA
 27536                           tblptru	equ	0xFF8
 27537                           tblptrh	equ	0xFF7
 27538                           tblptrl	equ	0xFF6
 27539                           tablat	equ	0xFF5
 27540                           prodh	equ	0xFF4
 27541                           prodl	equ	0xFF3
 27542                           intcon	equ	0xFF2
 27543                           intcon2	equ	0xFF1
 27544                           intcon3	equ	0xFF0
 27545                           indf0	equ	0xFEF
 27546                           postinc0	equ	0xFEE
 27547                           plusw0	equ	0xFEB
 27548                           fsr0h	equ	0xFEA
 27549                           fsr0l	equ	0xFE9
 27550                           wreg	equ	0xFE8
 27551                           indf1	equ	0xFE7
 27552                           postinc1	equ	0xFE6
 27553                           postdec1	equ	0xFE5
 27554                           plusw1	equ	0xFE3
 27555                           fsr1h	equ	0xFE2
 27556                           fsr1l	equ	0xFE1
 27557                           indf2	equ	0xFDF
 27558                           postinc2	equ	0xFDE
 27559                           postdec2	equ	0xFDD
 27560                           plusw2	equ	0xFDB
 27561                           fsr2h	equ	0xFDA
 27562                           fsr2l	equ	0xFD9
 27563                           status	equ	0xFD8
 27564                           
 27565 ;; *************** function _InitModemInterface *****************
 27566 ;; Defined at:
 27567 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 27568 ;; Parameters:    Size  Location     Type
 27569 ;;		None
 27570 ;; Auto vars:     Size  Location     Type
 27571 ;;		None
 27572 ;; Return value:  Size  Location     Type
 27573 ;;                  1    wreg      void 
 27574 ;; Registers used:
 27575 ;;		None
 27576 ;; Tracked objects:
 27577 ;;		On entry : 0/0
 27578 ;;		On exit  : 0/0
 27579 ;;		Unchanged: 0/0
 27580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27585 ;;Total ram usage:        0 bytes
 27586 ;; Hardware stack levels used:    1
 27587 ;; Hardware stack levels required when called:   11
 27588 ;; This function calls:
 27589 ;;		Nothing
 27590 ;; This function is called by:
 27591 ;;		_MdmCntSm
 27592 ;; This function uses a non-reentrant model
 27593 ;;
 27594                           
 27595                           	psect	text129
 27596  0064E2                     __ptext129:
 27597                           	opt stack 0
 27598  0064E2                     _InitModemInterface:
 27599                           	opt stack 15
 27600                           
 27601                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 27602                           
 27603                           ;incstack = 0
 27604  0064E2  9096               	bcf	3990,0,c	;volatile
 27605                           
 27606                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 27607  0064E4  9296               	bcf	3990,1,c	;volatile
 27608                           
 27609                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 27610  0064E6  8496               	bsf	3990,2,c	;volatile
 27611  0064E8  0012               	return		;funcret
 27612  0064EA                     __end_of_InitModemInterface:
 27613                           	opt stack 0
 27614                           tosu	equ	0xFFF
 27615                           tosh	equ	0xFFE
 27616                           tosl	equ	0xFFD
 27617                           pclath	equ	0xFFA
 27618                           tblptru	equ	0xFF8
 27619                           tblptrh	equ	0xFF7
 27620                           tblptrl	equ	0xFF6
 27621                           tablat	equ	0xFF5
 27622                           prodh	equ	0xFF4
 27623                           prodl	equ	0xFF3
 27624                           intcon	equ	0xFF2
 27625                           intcon2	equ	0xFF1
 27626                           intcon3	equ	0xFF0
 27627                           indf0	equ	0xFEF
 27628                           postinc0	equ	0xFEE
 27629                           plusw0	equ	0xFEB
 27630                           fsr0h	equ	0xFEA
 27631                           fsr0l	equ	0xFE9
 27632                           wreg	equ	0xFE8
 27633                           indf1	equ	0xFE7
 27634                           postinc1	equ	0xFE6
 27635                           postdec1	equ	0xFE5
 27636                           plusw1	equ	0xFE3
 27637                           fsr1h	equ	0xFE2
 27638                           fsr1l	equ	0xFE1
 27639                           indf2	equ	0xFDF
 27640                           postinc2	equ	0xFDE
 27641                           postdec2	equ	0xFDD
 27642                           plusw2	equ	0xFDB
 27643                           fsr2h	equ	0xFDA
 27644                           fsr2l	equ	0xFD9
 27645                           status	equ	0xFD8
 27646                           
 27647 ;; *************** function _InitGprsNetwork *****************
 27648 ;; Defined at:
 27649 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 27650 ;; Parameters:    Size  Location     Type
 27651 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 27652 ;;		 -> NULL(0), 
 27653 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 27654 ;; Auto vars:     Size  Location     Type
 27655 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 27656 ;;  Index           1   50[BANK1 ] unsigned char 
 27657 ;; Return value:  Size  Location     Type
 27658 ;;                  1    wreg      enum E8921
 27659 ;; Registers used:
 27660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27661 ;; Tracked objects:
 27662 ;;		On entry : 0/0
 27663 ;;		On exit  : 0/0
 27664 ;;		Unchanged: 0/0
 27665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27666 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27667 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27668 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27669 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27670 ;;Total ram usage:       56 bytes
 27671 ;; Hardware stack levels used:    1
 27672 ;; Hardware stack levels required when called:   14
 27673 ;; This function calls:
 27674 ;;		_ClearBuffer
 27675 ;;		_OsTmr_GetTimerStatus
 27676 ;;		_OsTmr_StartTimer
 27677 ;;		_ReceiveEvt
 27678 ;;		_StringCopy
 27679 ;;		_Uart_WriteConstString
 27680 ;;		_Uart_WriteString
 27681 ;; This function is called by:
 27682 ;;		_MdmHttp_MainTask
 27683 ;; This function uses a non-reentrant model
 27684 ;;
 27685                           
 27686                           	psect	text130
 27687  000DC8                     __ptext130:
 27688                           	opt stack 0
 27689  000DC8                     _InitGprsNetwork:
 27690                           	opt stack 13
 27691                           
 27692                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 27693                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 27694                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 27695                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 27696                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 27697                           
 27698                           ;incstack = 0
 27699  000DC8  0E00               	movlw	0
 27700  000DCA  0101               	movlb	1	; () banked
 27701  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 27702                           
 27703                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 27704  000DCE  D154               	goto	l1216
 27705  000DD0                     
 27706                           ; BSR set to: 1
 27707                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 27708                           
 27709                           ; BSR set to: 1
 27710  000DD0  0EDB               	movlw	low _InitNetwork
 27711  000DD2  0100               	movlb	0	; () banked
 27712  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27713  000DD6  0E00               	movlw	high _InitNetwork
 27714  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27715  000DDA  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 27716  000DDE  0900               	iorlw	0
 27717  000DE0  B4D8               	btfsc	status,2,c
 27718  000DE2  D166               	goto	l1219
 27719                           
 27720                           ;mdm_gsm_gprs_http.c: 137: {
 27721                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 27722  000DE4  0E01               	movlw	1
 27723  000DE6  D141               	goto	L78
 27724  000DE8                     
 27725                           ; BSR set to: 1
 27726                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 27727                           
 27728                           ; BSR set to: 1
 27729  000DE8  0E88               	movlw	low STR_8
 27730  000DEA  0100               	movlb	0	; () banked
 27731  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27732  000DEE  0EFE               	movlw	high STR_8
 27733  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27734  000DF2  0E01               	movlw	1
 27735  000DF4  EC85  F02D         	call	_Uart_WriteConstString
 27736                           
 27737                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 27738  000DF8  0E07               	movlw	7
 27739  000DFA  0101               	movlb	1	; () banked
 27740  000DFC  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 27741                           
 27742                           ; BSR set to: 1
 27743                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 27744  000DFE  0E02               	movlw	2
 27745  000E00  0100               	movlb	0	; () banked
 27746  000E02  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 27747                           
 27748                           ; BSR set to: 0
 27749                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 27750  000E04  0EF5               	movlw	low _ConnTimeout
 27751  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27752  000E08  0E02               	movlw	high _ConnTimeout
 27753  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27754  000E0C  0E20               	movlw	32
 27755  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27756  000E10  0E4E               	movlw	78
 27757  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27758  000E14  0E00               	movlw	0
 27759  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27760  000E18  0E00               	movlw	0
 27761  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27762  000E1C  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 27763  000E20  D0C7               	goto	l14690
 27764  000E22                     
 27765                           ; BSR set to: 1
 27766                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 27767                           
 27768                           ; BSR set to: 1
 27769  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 27770  000E24  0100               	movlb	0	; () banked
 27771  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27772  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 27773  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27774  000E2C  0E00               	movlw	0
 27775  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27776  000E30  0E32               	movlw	50
 27777  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27778  000E34  ECD7  F02E         	call	_ClearBuffer	;wreg free
 27779                           
 27780                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 27781  000E38  0EBC               	movlw	low STR_9
 27782  000E3A  0100               	movlb	0	; () banked
 27783  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27784  000E3E  0EFE               	movlw	high STR_9
 27785  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27786  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 27787  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 27788  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 27789  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27790  000E4A  0E00               	movlw	0
 27791  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27792  000E4E  0E14               	movlw	20
 27793  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 27794  000E52  ECCB  F028         	call	_StringCopy	;wreg free
 27795                           
 27796                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 27797  000E56  0E00               	movlw	0
 27798  000E58  0101               	movlb	1	; () banked
 27799  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 27800  000E5C  D01C               	goto	l1222
 27801  000E5E                     
 27802                           ; BSR set to: 1
 27803                           ;mdm_gsm_gprs_http.c: 161: {
 27804                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 27805                           
 27806                           ; BSR set to: 1
 27807  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 27808  000E60  0D01               	mullw	1
 27809  000E62  50F3               	movf	prodl,w,c
 27810  000E64  0100               	movlb	0	; () banked
 27811  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 27812  000E68  6ED9               	movwf	fsr2l,c
 27813  000E6A  50F4               	movf	prodh,w,c
 27814  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 27815  000E6E  6EDA               	movwf	fsr2h,c
 27816  000E70  0101               	movlb	1	; () banked
 27817  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 27818  000E74  0100               	movlb	0	; () banked
 27819  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 27820  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 27821  000E7A  0E14               	movlw	20
 27822  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 27823  000E7E  0E00               	movlw	0
 27824  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 27825  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 27826  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 27827  000E86  6EE1               	movwf	fsr1l,c
 27828  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 27829  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 27830  000E8C  6EE2               	movwf	fsr1h,c
 27831  000E8E  CFDF FFE7          	movff	indf2,indf1
 27832                           
 27833                           ; BSR set to: 0
 27834  000E92  0101               	movlb	1	; () banked
 27835  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 27836  000E96                     l1222:
 27837                           
 27838                           ; BSR set to: 1
 27839                           
 27840                           ; BSR set to: 1
 27841  000E96  0100               	movlb	0	; () banked
 27842  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 27843  000E9A  0101               	movlb	1	; () banked
 27844  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 27845  000E9E  A0D8               	btfss	status,0,c
 27846  000EA0  D7DE               	goto	l1223
 27847                           
 27848                           ; BSR set to: 1
 27849                           ;mdm_gsm_gprs_http.c: 163: }
 27850                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 27851                           
 27852                           ; BSR set to: 1
 27853  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 27854  000EA4  0100               	movlb	0	; () banked
 27855  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 27856  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 27857  000EAA  0E14               	movlw	20
 27858  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 27859  000EAE  0E00               	movlw	0
 27860  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 27861  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 27862  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 27863  000EB6  6ED9               	movwf	fsr2l,c
 27864  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 27865  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 27866  000EBC  6EDA               	movwf	fsr2h,c
 27867  000EBE  0E22               	movlw	34
 27868  000EC0  6EDF               	movwf	indf2,c
 27869                           
 27870                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 27871  000EC2  0101               	movlb	1	; () banked
 27872  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 27873  000EC6  0100               	movlb	0	; () banked
 27874  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 27875  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 27876  000ECC  0E15               	movlw	21
 27877  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 27878  000ED0  0E00               	movlw	0
 27879  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 27880  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 27881  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 27882  000ED8  6ED9               	movwf	fsr2l,c
 27883  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 27884  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 27885  000EDE  6EDA               	movwf	fsr2h,c
 27886  000EE0  0E0D               	movlw	13
 27887  000EE2  6EDF               	movwf	indf2,c
 27888                           
 27889                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 27890  000EE4  0101               	movlb	1	; () banked
 27891  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 27892  000EE8  0100               	movlb	0	; () banked
 27893  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 27894  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 27895  000EEE  0E16               	movlw	22
 27896  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 27897  000EF2  0E00               	movlw	0
 27898  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 27899  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 27900  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 27901  000EFA  6ED9               	movwf	fsr2l,c
 27902  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 27903  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 27904  000F00  6EDA               	movwf	fsr2h,c
 27905  000F02  0E00               	movlw	0
 27906  000F04  6EDF               	movwf	indf2,c
 27907                           
 27908                           ; BSR set to: 0
 27909                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 27910  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 27911  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 27912  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 27913  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 27914  000F0E  0E01               	movlw	1
 27915  000F10  EC45  F02E         	call	_Uart_WriteString
 27916                           
 27917                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 27918  000F14  0E07               	movlw	7
 27919  000F16  0101               	movlb	1	; () banked
 27920  000F18  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 27921                           
 27922                           ; BSR set to: 1
 27923                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 27924  000F1A  0E03               	movlw	3
 27925  000F1C  0100               	movlb	0	; () banked
 27926  000F1E  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 27927                           
 27928                           ; BSR set to: 0
 27929                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 27930  000F20  0EF5               	movlw	low _ConnTimeout
 27931  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27932  000F24  0E02               	movlw	high _ConnTimeout
 27933  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27934  000F28  0E20               	movlw	32
 27935  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27936  000F2C  0E4E               	movlw	78
 27937  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27938  000F30  0E00               	movlw	0
 27939  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27940  000F34  0E00               	movlw	0
 27941  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27942  000F38  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 27943  000F3C  D039               	goto	l14690
 27944  000F3E                     
 27945                           ; BSR set to: 1
 27946                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 27947                           
 27948                           ; BSR set to: 1
 27949  000F3E  0E4A               	movlw	low STR_10
 27950  000F40  0100               	movlb	0	; () banked
 27951  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27952  000F44  0EFF               	movlw	high STR_10
 27953  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27954  000F48  0E01               	movlw	1
 27955  000F4A  EC85  F02D         	call	_Uart_WriteConstString
 27956                           
 27957                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 27958  000F4E  0E07               	movlw	7
 27959  000F50  0101               	movlb	1	; () banked
 27960  000F52  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 27961                           
 27962                           ; BSR set to: 1
 27963                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 27964  000F54  0E05               	movlw	5
 27965  000F56  0100               	movlb	0	; () banked
 27966  000F58  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 27967                           
 27968                           ; BSR set to: 0
 27969                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 27970  000F5A  0EF5               	movlw	low _ConnTimeout
 27971  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27972  000F5E  0E02               	movlw	high _ConnTimeout
 27973  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27974  000F62  0E20               	movlw	32
 27975  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27976  000F66  0E4E               	movlw	78
 27977  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27978  000F6A  0E00               	movlw	0
 27979  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27980  000F6E  0E00               	movlw	0
 27981  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27982  000F72  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 27983  000F76  D01C               	goto	l14690
 27984  000F78                     
 27985                           ; BSR set to: 1
 27986                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 27987                           
 27988                           ; BSR set to: 1
 27989  000F78  0E58               	movlw	low STR_11
 27990  000F7A  0100               	movlb	0	; () banked
 27991  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27992  000F7E  0EFF               	movlw	high STR_11
 27993  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27994  000F82  0E01               	movlw	1
 27995  000F84  EC85  F02D         	call	_Uart_WriteConstString
 27996                           
 27997                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 27998  000F88  0E08               	movlw	8
 27999  000F8A  0101               	movlb	1	; () banked
 28000  000F8C  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 28001                           
 28002                           ; BSR set to: 1
 28003                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 28004  000F8E  0E05               	movlw	5
 28005  000F90  0100               	movlb	0	; () banked
 28006  000F92  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 28007                           
 28008                           ; BSR set to: 0
 28009                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 28010  000F94  0EF5               	movlw	low _ConnTimeout
 28011  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28012  000F98  0E02               	movlw	high _ConnTimeout
 28013  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28014  000F9C  0E20               	movlw	32
 28015  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28016  000FA0  0E4E               	movlw	78
 28017  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28018  000FA4  0E00               	movlw	0
 28019  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28020  000FA8  0E00               	movlw	0
 28021  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28022  000FAC  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 28023  000FB0                     l14690:
 28024                           
 28025                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 28026  000FB0  0E01               	movlw	1
 28027  000FB2  0101               	movlb	1	; () banked
 28028  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 28029                           
 28030                           ;mdm_gsm_gprs_http.c: 201: break;
 28031  000FB6  D07C               	goto	l1219
 28032  000FB8                     
 28033                           ; BSR set to: 1
 28034                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 28035                           
 28036                           ; BSR set to: 1
 28037  000FB8  0E02               	movlw	2
 28038  000FBA  D05A               	goto	L77
 28039  000FBC                     
 28040                           ; BSR set to: 1
 28041                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 28042                           
 28043                           ; BSR set to: 1
 28044  000FBC  0E3C               	movlw	low _NewStringReceived
 28045  000FBE  0100               	movlb	0	; () banked
 28046  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28047  000FC2  0E00               	movlw	high _NewStringReceived
 28048  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28049  000FC6  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 28050  000FCA  0900               	iorlw	0
 28051  000FCC  B4D8               	btfsc	status,2,c
 28052  000FCE  D018               	goto	l1229
 28053                           
 28054                           ;mdm_gsm_gprs_http.c: 212: {
 28055                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 28056  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 28057  000FD4  0A4F               	xorlw	79
 28058  000FD6  A4D8               	btfss	status,2,c
 28059  000FD8  D06B               	goto	l1219
 28060  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28061  000FDE  0A4B               	xorlw	75
 28062  000FE0  A4D8               	btfss	status,2,c
 28063  000FE2  D066               	goto	l1219
 28064                           
 28065                           ;mdm_gsm_gprs_http.c: 215: {
 28066                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 28067  000FE4  C0D1  F1ED         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 28068                           
 28069                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 28070  000FE8  0E58               	movlw	low _RxBuffer
 28071  000FEA  0100               	movlb	0	; () banked
 28072  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28073  000FEE  0E0C               	movlw	high _RxBuffer
 28074  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28075  000FF2  0E01               	movlw	1
 28076  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28077  000FF6  0E90               	movlw	144
 28078  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28079  000FFA  ECD7  F02E         	call	_ClearBuffer	;wreg free
 28080                           
 28081                           ;mdm_gsm_gprs_http.c: 220: }
 28082                           ;mdm_gsm_gprs_http.c: 221: }
 28083  000FFE  D058               	goto	l1219
 28084  001000                     l1229:
 28085                           
 28086                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 28087  001000  0EF5               	movlw	low _ConnTimeout
 28088  001002  0100               	movlb	0	; () banked
 28089  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28090  001006  0E02               	movlw	high _ConnTimeout
 28091  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28092  00100A  EC39  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 28093  00100E  D029               	goto	L42
 28094  001010                     
 28095                           ; BSR set to: 1
 28096                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 28097                           
 28098                           ; BSR set to: 1
 28099  001010  0E3C               	movlw	low _NewStringReceived
 28100  001012  0100               	movlb	0	; () banked
 28101  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28102  001016  0E00               	movlw	high _NewStringReceived
 28103  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28104  00101A  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 28105  00101E  0900               	iorlw	0
 28106  001020  B4D8               	btfsc	status,2,c
 28107  001022  D018               	goto	l1234
 28108                           
 28109                           ;mdm_gsm_gprs_http.c: 232: {
 28110                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 28111  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 28112  001028  0A2B               	xorlw	43
 28113  00102A  A4D8               	btfss	status,2,c
 28114  00102C  D041               	goto	l1219
 28115  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28116  001032  0A53               	xorlw	83
 28117  001034  A4D8               	btfss	status,2,c
 28118  001036  D03C               	goto	l1219
 28119                           
 28120                           ;mdm_gsm_gprs_http.c: 235: {
 28121                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 28122  001038  C0D1  F1ED         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 28123                           
 28124                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 28125  00103C  0E58               	movlw	low _RxBuffer
 28126  00103E  0100               	movlb	0	; () banked
 28127  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28128  001042  0E0C               	movlw	high _RxBuffer
 28129  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28130  001046  0E01               	movlw	1
 28131  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28132  00104A  0E90               	movlw	144
 28133  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28134  00104E  ECD7  F02E         	call	_ClearBuffer	;wreg free
 28135                           
 28136                           ;mdm_gsm_gprs_http.c: 240: }
 28137                           ;mdm_gsm_gprs_http.c: 241: }
 28138  001052  D02E               	goto	l1219
 28139  001054                     l1234:
 28140                           
 28141                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 28142  001054  0EF5               	movlw	low _ConnTimeout
 28143  001056  0100               	movlb	0	; () banked
 28144  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28145  00105A  0E02               	movlw	high _ConnTimeout
 28146  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28147  00105E  EC39  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 28148  001062                     L42:
 28149  001062  06E8               	decf	wreg,f,c
 28150  001064  A4D8               	btfss	status,2,c
 28151  001066  D024               	goto	l1219
 28152                           
 28153                           ;mdm_gsm_gprs_http.c: 243: {
 28154                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 28155  001068  0E06               	movlw	6
 28156  00106A                     L78:
 28157  00106A  0101               	movlb	1	; () banked
 28158  00106C  D003               	goto	L41
 28159  00106E                     
 28160                           ; BSR set to: 1
 28161                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 28162                           
 28163                           ; BSR set to: 1
 28164  00106E  0E03               	movlw	3
 28165  001070                     L77:
 28166  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 28167                           
 28168                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 28169  001072  0E00               	movlw	0
 28170  001074                     L41:
 28171  001074  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 28172                           
 28173                           ; BSR set to: 1
 28174                           ;mdm_gsm_gprs_http.c: 257: }
 28175                           
 28176                           ; BSR set to: 1
 28177                           ;mdm_gsm_gprs_http.c: 256: break;
 28178                           
 28179                           ;mdm_gsm_gprs_http.c: 255: default:
 28180                           
 28181                           ;mdm_gsm_gprs_http.c: 253: break;
 28182  001076  D01C               	goto	l1219
 28183  001078                     l1216:
 28184                           
 28185                           ; BSR set to: 1
 28186                           
 28187                           ; BSR set to: 1
 28188  001078  51ED               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 28189                           
 28190                           ; Switch size 1, requested type "space"
 28191                           ; Number of cases is 9, Range of values is 0 to 8
 28192                           ; switch strategies available:
 28193                           ; Name         Instructions Cycles
 28194                           ; simple_byte           28    15 (average)
 28195                           ;	Chosen strategy is simple_byte
 28196  00107A  0A00               	xorlw	0	; case 0
 28197  00107C  B4D8               	btfsc	status,2,c
 28198  00107E  D6A8               	goto	l1217
 28199  001080  0A01               	xorlw	1	; case 1
 28200  001082  B4D8               	btfsc	status,2,c
 28201  001084  D6B1               	goto	l1220
 28202  001086  0A03               	xorlw	3	; case 2
 28203  001088  B4D8               	btfsc	status,2,c
 28204  00108A  D6CB               	goto	l1221
 28205  00108C  0A01               	xorlw	1	; case 3
 28206  00108E  B4D8               	btfsc	status,2,c
 28207  001090  D756               	goto	l1225
 28208  001092  0A07               	xorlw	7	; case 4
 28209  001094  B4D8               	btfsc	status,2,c
 28210  001096  D770               	goto	l1226
 28211  001098  0A01               	xorlw	1	; case 5
 28212  00109A  B4D8               	btfsc	status,2,c
 28213  00109C  D78D               	goto	l1227
 28214  00109E  0A03               	xorlw	3	; case 6
 28215  0010A0  B4D8               	btfsc	status,2,c
 28216  0010A2  D7E5               	goto	l1238
 28217  0010A4  0A01               	xorlw	1	; case 7
 28218  0010A6  B4D8               	btfsc	status,2,c
 28219  0010A8  D789               	goto	l1228
 28220  0010AA  0A0F               	xorlw	15	; case 8
 28221  0010AC  B4D8               	btfsc	status,2,c
 28222  0010AE  D7B0               	goto	l1233
 28223  0010B0                     l1219:
 28224                           
 28225                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 28226                           
 28227                           ; BSR set to: 1
 28228  0010B0  0101               	movlb	1	; () banked
 28229  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 28230  0010B4  0012               	return	
 28231  0010B6                     __end_of_InitGprsNetwork:
 28232                           	opt stack 0
 28233                           tosu	equ	0xFFF
 28234                           tosh	equ	0xFFE
 28235                           tosl	equ	0xFFD
 28236                           pclath	equ	0xFFA
 28237                           tblptru	equ	0xFF8
 28238                           tblptrh	equ	0xFF7
 28239                           tblptrl	equ	0xFF6
 28240                           tablat	equ	0xFF5
 28241                           prodh	equ	0xFF4
 28242                           prodl	equ	0xFF3
 28243                           intcon	equ	0xFF2
 28244                           intcon2	equ	0xFF1
 28245                           intcon3	equ	0xFF0
 28246                           indf0	equ	0xFEF
 28247                           postinc0	equ	0xFEE
 28248                           plusw0	equ	0xFEB
 28249                           fsr0h	equ	0xFEA
 28250                           fsr0l	equ	0xFE9
 28251                           wreg	equ	0xFE8
 28252                           indf1	equ	0xFE7
 28253                           postinc1	equ	0xFE6
 28254                           postdec1	equ	0xFE5
 28255                           plusw1	equ	0xFE3
 28256                           fsr1h	equ	0xFE2
 28257                           fsr1l	equ	0xFE1
 28258                           indf2	equ	0xFDF
 28259                           postinc2	equ	0xFDE
 28260                           postdec2	equ	0xFDD
 28261                           plusw2	equ	0xFDB
 28262                           fsr2h	equ	0xFDA
 28263                           fsr2l	equ	0xFD9
 28264                           status	equ	0xFD8
 28265                           
 28266 ;; *************** function _HttpGetMethod *****************
 28267 ;; Defined at:
 28268 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 28269 ;; Parameters:    Size  Location     Type
 28270 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 28271 ;;		 -> HttpGetDataLocal(5), 
 28272 ;; Auto vars:     Size  Location     Type
 28273 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 28274 ;;  Index           1  200[BANK1 ] unsigned char 
 28275 ;; Return value:  Size  Location     Type
 28276 ;;                  1    wreg      enum E8921
 28277 ;; Registers used:
 28278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28279 ;; Tracked objects:
 28280 ;;		On entry : 0/0
 28281 ;;		On exit  : 0/0
 28282 ;;		Unchanged: 0/0
 28283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28284 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28285 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28286 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28287 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28288 ;;Total ram usage:      207 bytes
 28289 ;; Hardware stack levels used:    1
 28290 ;; Hardware stack levels required when called:   14
 28291 ;; This function calls:
 28292 ;;		_ClearBuffer
 28293 ;;		_OsTmr_GetTimerStatus
 28294 ;;		_OsTmr_StartTimer
 28295 ;;		_ReceiveEvt
 28296 ;;		_StringCopy
 28297 ;;		_Uart_WriteConstString
 28298 ;;		_Uart_WriteString
 28299 ;; This function is called by:
 28300 ;;		_MdmHttp_MainTask
 28301 ;; This function uses a non-reentrant model
 28302 ;;
 28303                           
 28304                           	psect	text131
 28305  0005EC                     __ptext131:
 28306                           	opt stack 0
 28307  0005EC                     _HttpGetMethod:
 28308                           	opt stack 13
 28309                           
 28310                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 28311                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 28312                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 28313                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 28314                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 28315                           
 28316                           ; BSR set to: 1
 28317                           ;incstack = 0
 28318  0005EC  0E00               	movlw	0
 28319  0005EE  0101               	movlb	1	; () banked
 28320  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 28321                           
 28322                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 28323  0005F2  D230               	goto	l1249
 28324  0005F4                     
 28325                           ; BSR set to: 1
 28326                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 28327                           
 28328                           ; BSR set to: 1
 28329  0005F4  0EDA               	movlw	low _GetMethod
 28330  0005F6  0100               	movlb	0	; () banked
 28331  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28332  0005FA  0E00               	movlw	high _GetMethod
 28333  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28334  0005FE  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 28335  000602  0900               	iorlw	0
 28336  000604  B4D8               	btfsc	status,2,c
 28337  000606  D257               	goto	l1252
 28338                           
 28339                           ;mdm_gsm_gprs_http.c: 284: {
 28340                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 28341  000608  0E01               	movlw	1
 28342  00060A  D18C               	goto	L44
 28343  00060C                     
 28344                           ; BSR set to: 1
 28345                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 28346                           
 28347                           ; BSR set to: 1
 28348  00060C  0E9C               	movlw	low STR_12
 28349  00060E  0100               	movlb	0	; () banked
 28350  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28351  000612  0EFF               	movlw	high STR_12
 28352  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28353  000616  0E01               	movlw	1
 28354  000618  EC85  F02D         	call	_Uart_WriteConstString
 28355                           
 28356                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 28357  00061C  0E0A               	movlw	10
 28358  00061E  0101               	movlb	1	; () banked
 28359  000620  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28360                           
 28361                           ; BSR set to: 1
 28362                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 28363  000622  0E02               	movlw	2
 28364  000624  0100               	movlb	0	; () banked
 28365  000626  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28366                           
 28367                           ; BSR set to: 0
 28368                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 28369  000628  0EF5               	movlw	low _ConnTimeout
 28370  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28371  00062C  0E02               	movlw	high _ConnTimeout
 28372  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28373  000630  0E20               	movlw	32
 28374  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28375  000634  0E4E               	movlw	78
 28376  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28377  000638  0E00               	movlw	0
 28378  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28379  00063C  0E00               	movlw	0
 28380  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28381  000640  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 28382  000644  D1AF               	goto	l14856
 28383  000646                     
 28384                           ; BSR set to: 1
 28385                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 28386                           
 28387                           ; BSR set to: 1
 28388  000646  0E66               	movlw	low STR_13
 28389  000648  0100               	movlb	0	; () banked
 28390  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28391  00064C  0EFF               	movlw	high STR_13
 28392  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28393  000650  0E01               	movlw	1
 28394  000652  EC85  F02D         	call	_Uart_WriteConstString
 28395                           
 28396                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 28397  000656  0E0A               	movlw	10
 28398  000658  0101               	movlb	1	; () banked
 28399  00065A  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28400                           
 28401                           ; BSR set to: 1
 28402                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 28403  00065C  0E03               	movlw	3
 28404  00065E  0100               	movlb	0	; () banked
 28405  000660  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28406                           
 28407                           ; BSR set to: 0
 28408                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 28409  000662  0EF5               	movlw	low _ConnTimeout
 28410  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28411  000666  0E02               	movlw	high _ConnTimeout
 28412  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28413  00066A  0E20               	movlw	32
 28414  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28415  00066E  0E4E               	movlw	78
 28416  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28417  000672  0E00               	movlw	0
 28418  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28419  000676  0E00               	movlw	0
 28420  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28421  00067A  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 28422  00067E  D192               	goto	l14856
 28423  000680                     
 28424                           ; BSR set to: 1
 28425                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 28426                           
 28427                           ; BSR set to: 1
 28428  000680  0EA7               	movlw	low STR_14
 28429  000682  0100               	movlb	0	; () banked
 28430  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28431  000686  0EFE               	movlw	high STR_14
 28432  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28433  00068A  0E01               	movlw	1
 28434  00068C  EC85  F02D         	call	_Uart_WriteConstString
 28435                           
 28436                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 28437  000690  0E0A               	movlw	10
 28438  000692  0101               	movlb	1	; () banked
 28439  000694  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28440                           
 28441                           ; BSR set to: 1
 28442                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 28443  000696  0E04               	movlw	4
 28444  000698  0100               	movlb	0	; () banked
 28445  00069A  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28446                           
 28447                           ; BSR set to: 0
 28448                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 28449  00069C  0EF5               	movlw	low _ConnTimeout
 28450  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28451  0006A0  0E02               	movlw	high _ConnTimeout
 28452  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28453  0006A4  0E20               	movlw	32
 28454  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28455  0006A8  0E4E               	movlw	78
 28456  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28457  0006AC  0E00               	movlw	0
 28458  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28459  0006B0  0E00               	movlw	0
 28460  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28461  0006B4  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 28462  0006B8  D175               	goto	l14856
 28463  0006BA                     
 28464                           ; BSR set to: 1
 28465                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 28466                           
 28467                           ; BSR set to: 1
 28468  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 28469  0006BC  0100               	movlb	0	; () banked
 28470  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28471  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 28472  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28473  0006C4  0E00               	movlw	0
 28474  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28475  0006C8  0EC8               	movlw	200
 28476  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28477  0006CC  ECD7  F02E         	call	_ClearBuffer	;wreg free
 28478                           
 28479                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 28480  0006D0  0EE5               	movlw	low STR_15
 28481  0006D2  0100               	movlb	0	; () banked
 28482  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 28483  0006D6  0EFE               	movlw	high STR_15
 28484  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28485  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 28486  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 28487  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 28488  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 28489  0006E2  0E00               	movlw	0
 28490  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 28491  0006E6  0E13               	movlw	19
 28492  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 28493  0006EA  ECCB  F028         	call	_StringCopy	;wreg free
 28494                           
 28495                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 28496  0006EE  0E00               	movlw	0
 28497  0006F0  0101               	movlb	1	; () banked
 28498  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 28499  0006F4  D024               	goto	l1257
 28500  0006F6                     
 28501                           ; BSR set to: 1
 28502                           ;mdm_gsm_gprs_http.c: 332: {
 28503                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 28504                           
 28505                           ; BSR set to: 1
 28506  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 28507  0006F8  0D01               	mullw	1
 28508  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 28509  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 28510  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 28511  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 28512  00070A  50F3               	movf	prodl,w,c
 28513  00070C  0100               	movlb	0	; () banked
 28514  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 28515  000710  6ED9               	movwf	fsr2l,c
 28516  000712  50F4               	movf	prodh,w,c
 28517  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 28518  000716  6EDA               	movwf	fsr2h,c
 28519  000718  0101               	movlb	1	; () banked
 28520  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 28521  00071C  0100               	movlb	0	; () banked
 28522  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 28523  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 28524  000722  0E13               	movlw	19
 28525  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 28526  000726  0E00               	movlw	0
 28527  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 28528  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 28529  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 28530  00072E  6EE1               	movwf	fsr1l,c
 28531  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 28532  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 28533  000734  6EE2               	movwf	fsr1h,c
 28534  000736  CFDF FFE7          	movff	indf2,indf1
 28535                           
 28536                           ; BSR set to: 0
 28537  00073A  0101               	movlb	1	; () banked
 28538  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 28539  00073E                     l1257:
 28540                           
 28541                           ; BSR set to: 1
 28542                           
 28543                           ; BSR set to: 1
 28544  00073E  0100               	movlb	0	; () banked
 28545  000740  EE20 F002          	lfsr	2,2
 28546  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 28547  000746  26D9               	addwf	fsr2l,f,c
 28548  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 28549  00074A  22DA               	addwfc	fsr2h,f,c
 28550  00074C  50DE               	movf	postinc2,w,c
 28551  00074E  0101               	movlb	1	; () banked
 28552  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 28553  000752  A0D8               	btfss	status,0,c
 28554  000754  D7D0               	goto	l1258
 28555                           
 28556                           ; BSR set to: 1
 28557                           ;mdm_gsm_gprs_http.c: 334: }
 28558                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 28559                           
 28560                           ; BSR set to: 1
 28561  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 28562  000758  0100               	movlb	0	; () banked
 28563  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 28564  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 28565  00075E  0E13               	movlw	19
 28566  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 28567  000762  0E00               	movlw	0
 28568  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 28569  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 28570  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 28571  00076A  6ED9               	movwf	fsr2l,c
 28572  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 28573  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 28574  000770  6EDA               	movwf	fsr2h,c
 28575  000772  0E22               	movlw	34
 28576  000774  6EDF               	movwf	indf2,c
 28577                           
 28578                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 28579  000776  0101               	movlb	1	; () banked
 28580  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 28581  00077A  0100               	movlb	0	; () banked
 28582  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 28583  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 28584  000780  0E14               	movlw	20
 28585  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 28586  000784  0E00               	movlw	0
 28587  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 28588  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 28589  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 28590  00078C  6ED9               	movwf	fsr2l,c
 28591  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 28592  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 28593  000792  6EDA               	movwf	fsr2h,c
 28594  000794  0E0D               	movlw	13
 28595  000796  6EDF               	movwf	indf2,c
 28596                           
 28597                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 28598  000798  0101               	movlb	1	; () banked
 28599  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 28600  00079C  0100               	movlb	0	; () banked
 28601  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 28602  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 28603  0007A2  0E15               	movlw	21
 28604  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 28605  0007A6  0E00               	movlw	0
 28606  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 28607  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 28608  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 28609  0007AE  6ED9               	movwf	fsr2l,c
 28610  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 28611  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 28612  0007B4  6EDA               	movwf	fsr2h,c
 28613  0007B6  0E00               	movlw	0
 28614  0007B8  6EDF               	movwf	indf2,c
 28615                           
 28616                           ; BSR set to: 0
 28617                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 28618  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 28619  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 28620  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 28621  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 28622  0007C2  0E01               	movlw	1
 28623  0007C4  EC45  F02E         	call	_Uart_WriteString
 28624                           
 28625                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 28626  0007C8  0E0A               	movlw	10
 28627  0007CA  0101               	movlb	1	; () banked
 28628  0007CC  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28629                           
 28630                           ; BSR set to: 1
 28631                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 28632  0007CE  0E05               	movlw	5
 28633  0007D0  0100               	movlb	0	; () banked
 28634  0007D2  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28635                           
 28636                           ; BSR set to: 0
 28637                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 28638  0007D4  0EF5               	movlw	low _ConnTimeout
 28639  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28640  0007D8  0E02               	movlw	high _ConnTimeout
 28641  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28642  0007DC  0E20               	movlw	32
 28643  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28644  0007E0  0E4E               	movlw	78
 28645  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28646  0007E4  0E00               	movlw	0
 28647  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28648  0007E8  0E00               	movlw	0
 28649  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28650  0007EC  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 28651  0007F0  D0D9               	goto	l14856
 28652  0007F2                     
 28653                           ; BSR set to: 1
 28654                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 28655                           
 28656                           ; BSR set to: 1
 28657  0007F2  0E1D               	movlw	low STR_16
 28658  0007F4  0100               	movlb	0	; () banked
 28659  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28660  0007F8  0EFF               	movlw	high STR_16
 28661  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28662  0007FC  0E01               	movlw	1
 28663  0007FE  EC85  F02D         	call	_Uart_WriteConstString
 28664                           
 28665                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 28666  000802  0E0A               	movlw	10
 28667  000804  0101               	movlb	1	; () banked
 28668  000806  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28669                           
 28670                           ; BSR set to: 1
 28671                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 28672  000808  0E06               	movlw	6
 28673  00080A  0100               	movlb	0	; () banked
 28674  00080C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28675                           
 28676                           ; BSR set to: 0
 28677                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 28678  00080E  0EF5               	movlw	low _ConnTimeout
 28679  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28680  000812  0E02               	movlw	high _ConnTimeout
 28681  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28682  000816  0E20               	movlw	32
 28683  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28684  00081A  0E4E               	movlw	78
 28685  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28686  00081E  0E00               	movlw	0
 28687  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28688  000822  0E00               	movlw	0
 28689  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28690  000826  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 28691                           
 28692                           ;mdm_gsm_gprs_http.c: 358: break;
 28693  00082A  D145               	goto	l1252
 28694  00082C                     
 28695                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 28696  00082C  0E07               	movlw	7
 28697  00082E  0101               	movlb	1	; () banked
 28698  000830  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28699                           
 28700                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 28701  000832  0E09               	movlw	9
 28702  000834  0100               	movlb	0	; () banked
 28703  000836  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28704                           
 28705                           ; BSR set to: 0
 28706                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 28707  000838  0EF5               	movlw	low _ConnTimeout
 28708  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28709  00083C  0E02               	movlw	high _ConnTimeout
 28710  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28711  000840  0E20               	movlw	32
 28712  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28713  000844  0E4E               	movlw	78
 28714  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28715  000848  0E00               	movlw	0
 28716  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28717  00084C  0E00               	movlw	0
 28718  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28719  000850  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 28720                           
 28721                           ;mdm_gsm_gprs_http.c: 371: break;
 28722  000854  D130               	goto	l1252
 28723  000856                     
 28724                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 28725  000856  0E82               	movlw	low STR_17
 28726  000858  0100               	movlb	0	; () banked
 28727  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28728  00085C  0EFF               	movlw	high STR_17
 28729  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28730  000860  0E01               	movlw	1
 28731  000862  EC85  F02D         	call	_Uart_WriteConstString
 28732                           
 28733                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 28734  000866  0E0D               	movlw	13
 28735  000868  0101               	movlb	1	; () banked
 28736  00086A  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28737                           
 28738                           ; BSR set to: 1
 28739                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 28740  00086C  0E09               	movlw	9
 28741  00086E  0100               	movlb	0	; () banked
 28742  000870  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28743                           
 28744                           ; BSR set to: 0
 28745                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 28746  000872  0EF5               	movlw	low _ConnTimeout
 28747  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28748  000876  0E02               	movlw	high _ConnTimeout
 28749  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28750  00087A  0E20               	movlw	32
 28751  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28752  00087E  0E4E               	movlw	78
 28753  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28754  000882  0E00               	movlw	0
 28755  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28756  000886  0E00               	movlw	0
 28757  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28758  00088A  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 28759  00088E  D08A               	goto	l14856
 28760  000890                     
 28761                           ; BSR set to: 1
 28762                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 28763                           
 28764                           ; BSR set to: 1
 28765  000890  0E8F               	movlw	low STR_18
 28766  000892  0100               	movlb	0	; () banked
 28767  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28768  000896  0EFF               	movlw	high STR_18
 28769  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28770  00089A  0E01               	movlw	1
 28771  00089C  EC85  F02D         	call	_Uart_WriteConstString
 28772                           
 28773                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 28774  0008A0  0E0A               	movlw	10
 28775  0008A2  0101               	movlb	1	; () banked
 28776  0008A4  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28777                           
 28778                           ; BSR set to: 1
 28779                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 28780  0008A6  0E0E               	movlw	14
 28781  0008A8  0100               	movlb	0	; () banked
 28782  0008AA  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28783                           
 28784                           ; BSR set to: 0
 28785                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 28786  0008AC  0EF5               	movlw	low _ConnTimeout
 28787  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28788  0008B0  0E02               	movlw	high _ConnTimeout
 28789  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28790  0008B4  0E20               	movlw	32
 28791  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28792  0008B8  0E4E               	movlw	78
 28793  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28794  0008BC  0E00               	movlw	0
 28795  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28796  0008C0  0E00               	movlw	0
 28797  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28798  0008C4  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 28799  0008C8  D06D               	goto	l14856
 28800  0008CA                     
 28801                           ; BSR set to: 1
 28802                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 28803                           
 28804                           ; BSR set to: 1
 28805  0008CA  0E3C               	movlw	low _NewStringReceived
 28806  0008CC  0100               	movlb	0	; () banked
 28807  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28808  0008D0  0E00               	movlw	high _NewStringReceived
 28809  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28810  0008D4  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 28811  0008D8  0900               	iorlw	0
 28812  0008DA  B4D8               	btfsc	status,2,c
 28813  0008DC  D018               	goto	l1265
 28814                           
 28815                           ;mdm_gsm_gprs_http.c: 400: {
 28816                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 28817  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 28818  0008E2  0A4F               	xorlw	79
 28819  0008E4  A4D8               	btfss	status,2,c
 28820  0008E6  D0E7               	goto	l1252
 28821  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28822  0008EC  0A4B               	xorlw	75
 28823  0008EE  A4D8               	btfss	status,2,c
 28824  0008F0  D0E2               	goto	l1252
 28825                           
 28826                           ;mdm_gsm_gprs_http.c: 403: {
 28827                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 28828  0008F2  C0D0  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 28829                           
 28830                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 28831  0008F6  0E58               	movlw	low _RxBuffer
 28832  0008F8  0100               	movlb	0	; () banked
 28833  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28834  0008FC  0E0C               	movlw	high _RxBuffer
 28835  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28836  000900  0E01               	movlw	1
 28837  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28838  000904  0E90               	movlw	144
 28839  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28840  000908  ECD7  F02E         	call	_ClearBuffer	;wreg free
 28841                           
 28842                           ;mdm_gsm_gprs_http.c: 408: }
 28843                           ;mdm_gsm_gprs_http.c: 409: }
 28844  00090C  D0D4               	goto	l1252
 28845  00090E                     l1265:
 28846                           
 28847                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 28848  00090E  0EF5               	movlw	low _ConnTimeout
 28849  000910  0100               	movlb	0	; () banked
 28850  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28851  000914  0E02               	movlw	high _ConnTimeout
 28852  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28853  000918  EC39  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 28854  00091C                     L45:
 28855  00091C  06E8               	decf	wreg,f,c
 28856  00091E  A4D8               	btfss	status,2,c
 28857  000920  D0CA               	goto	l1252
 28858                           
 28859                           ;mdm_gsm_gprs_http.c: 411: {
 28860                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 28861  000922  0E0F               	movlw	15
 28862  000924                     L44:
 28863  000924  0101               	movlb	1	; () banked
 28864  000926  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28865                           
 28866                           ; BSR set to: 1
 28867                           ;mdm_gsm_gprs_http.c: 414: }
 28868                           ;mdm_gsm_gprs_http.c: 415: break;
 28869                           
 28870                           ; BSR set to: 1
 28871  000928  D0C6               	goto	l1252
 28872  00092A                     
 28873                           ; BSR set to: 1
 28874                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 28875                           
 28876                           ; BSR set to: 1
 28877  00092A  0E3C               	movlw	low _NewStringReceived
 28878  00092C  0100               	movlb	0	; () banked
 28879  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28880  000930  0E00               	movlw	high _NewStringReceived
 28881  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28882  000934  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 28883  000938  0900               	iorlw	0
 28884  00093A  B4D8               	btfsc	status,2,c
 28885  00093C  D018               	goto	l1270
 28886                           
 28887                           ;mdm_gsm_gprs_http.c: 420: {
 28888                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 28889  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 28890  000942  0A2B               	xorlw	43
 28891  000944  A4D8               	btfss	status,2,c
 28892  000946  D0B7               	goto	l1252
 28893  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28894  00094C  0A48               	xorlw	72
 28895  00094E  A4D8               	btfss	status,2,c
 28896  000950  D0B2               	goto	l1252
 28897                           
 28898                           ;mdm_gsm_gprs_http.c: 423: {
 28899                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 28900  000952  C0D0  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 28901                           
 28902                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 28903  000956  0E58               	movlw	low _RxBuffer
 28904  000958  0100               	movlb	0	; () banked
 28905  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28906  00095C  0E0C               	movlw	high _RxBuffer
 28907  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28908  000960  0E01               	movlw	1
 28909  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28910  000964  0E90               	movlw	144
 28911  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28912  000968  ECD7  F02E         	call	_ClearBuffer	;wreg free
 28913                           
 28914                           ;mdm_gsm_gprs_http.c: 428: }
 28915                           ;mdm_gsm_gprs_http.c: 429: }
 28916  00096C  D0A4               	goto	l1252
 28917  00096E                     l1270:
 28918                           
 28919                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 28920  00096E  0EF5               	movlw	low _ConnTimeout
 28921  000970  0100               	movlb	0	; () banked
 28922  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28923  000974  0E02               	movlw	high _ConnTimeout
 28924  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28925  000978  EC39  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 28926  00097C  D7CF               	goto	L45
 28927  00097E                     
 28928                           ; BSR set to: 1
 28929                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 28930                           
 28931                           ; BSR set to: 1
 28932  00097E  0E0C               	movlw	12
 28933  000980  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28934                           
 28935                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 28936  000982  0E05               	movlw	5
 28937  000984  0100               	movlb	0	; () banked
 28938  000986  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28939                           
 28940                           ; BSR set to: 0
 28941                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 28942  000988  0EDE               	movlw	low _ConnWait
 28943  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28944  00098C  0E03               	movlw	high _ConnWait
 28945  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28946  000990  0EE8               	movlw	232
 28947  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28948  000994  0E03               	movlw	3
 28949  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28950  000998  0E00               	movlw	0
 28951  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28952  00099C  0E00               	movlw	0
 28953  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28954  0009A0  EC2B  F029         	call	_OsTmr_StartTimer	;wreg free
 28955  0009A4                     l14856:
 28956                           
 28957                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 28958  0009A4  0E01               	movlw	1
 28959  0009A6  0101               	movlb	1	; () banked
 28960  0009A8  D053               	goto	L47
 28961  0009AA                     
 28962                           ; BSR set to: 1
 28963                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 28964                           
 28965                           ; BSR set to: 1
 28966  0009AA  0EDE               	movlw	low _ConnWait
 28967  0009AC  0100               	movlb	0	; () banked
 28968  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28969  0009B0  0E03               	movlw	high _ConnWait
 28970  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28971  0009B4  EC39  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 28972  0009B8  06E8               	decf	wreg,f,c
 28973  0009BA  A4D8               	btfss	status,2,c
 28974  0009BC  D07C               	goto	l1252
 28975                           
 28976                           ;mdm_gsm_gprs_http.c: 450: {
 28977                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 28978  0009BE  C0D0  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 28979                           
 28980                           ;mdm_gsm_gprs_http.c: 453: }
 28981                           ;mdm_gsm_gprs_http.c: 454: break;
 28982  0009C2  D079               	goto	l1252
 28983  0009C4                     
 28984                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 28985  0009C4  0E3C               	movlw	low _NewStringReceived
 28986  0009C6  0100               	movlb	0	; () banked
 28987  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28988  0009CA  0E00               	movlw	high _NewStringReceived
 28989  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28990  0009CE  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 28991  0009D2  0900               	iorlw	0
 28992  0009D4  B4D8               	btfsc	status,2,c
 28993  0009D6  D02D               	goto	l1278
 28994                           
 28995                           ;mdm_gsm_gprs_http.c: 459: {
 28996                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 28997  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 28998  0009DC  0A2B               	xorlw	43
 28999  0009DE  A4D8               	btfss	status,2,c
 29000  0009E0  D06A               	goto	l1252
 29001  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29002  0009E6  0A48               	xorlw	72
 29003  0009E8  A4D8               	btfss	status,2,c
 29004  0009EA  D065               	goto	l1252
 29005                           
 29006                           ;mdm_gsm_gprs_http.c: 462: {
 29007                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 29008  0009EC  C0D0  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 29009                           
 29010                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 29011  0009F0  0E58               	movlw	low _RxBuffer
 29012  0009F2  0100               	movlb	0	; () banked
 29013  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 29014  0009F6  0E0C               	movlw	high _RxBuffer
 29015  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 29016  0009FA  EE20 F003          	lfsr	2,3
 29017  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 29018  000A00  26D9               	addwf	fsr2l,f,c
 29019  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 29020  000A04  22DA               	addwfc	fsr2h,f,c
 29021  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 29022  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 29023  000A0E  0E01               	movlw	1
 29024  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 29025  000A12  0E90               	movlw	144
 29026  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 29027  000A16  ECCB  F028         	call	_StringCopy	;wreg free
 29028                           
 29029                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 29030  000A1A  0E58               	movlw	low _RxBuffer
 29031  000A1C  0100               	movlb	0	; () banked
 29032  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29033  000A20  0E0C               	movlw	high _RxBuffer
 29034  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29035  000A24  0E01               	movlw	1
 29036  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29037  000A28  0E90               	movlw	144
 29038  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29039  000A2C  ECD7  F02E         	call	_ClearBuffer	;wreg free
 29040                           
 29041                           ;mdm_gsm_gprs_http.c: 469: }
 29042                           ;mdm_gsm_gprs_http.c: 470: }
 29043  000A30  D042               	goto	l1252
 29044  000A32                     l1278:
 29045                           
 29046                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29047  000A32  0EF5               	movlw	low _ConnTimeout
 29048  000A34  0100               	movlb	0	; () banked
 29049  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29050  000A38  0E02               	movlw	high _ConnTimeout
 29051  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29052  000A3C  EC39  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 29053  000A40  D76D               	goto	L45
 29054  000A42                     
 29055                           ; BSR set to: 1
 29056                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 29057                           
 29058                           ; BSR set to: 1
 29059  000A42  0E00               	movlw	0
 29060  000A44  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29061                           
 29062                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 29063  000A46  0E02               	movlw	2
 29064  000A48  D003               	goto	L47
 29065  000A4A                     
 29066                           ; BSR set to: 1
 29067                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 29068                           
 29069                           ; BSR set to: 1
 29070  000A4A  0E00               	movlw	0
 29071  000A4C  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29072                           
 29073                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 29074  000A4E  0E03               	movlw	3
 29075  000A50                     L47:
 29076  000A50  6FEB               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 29077                           
 29078                           ; BSR set to: 1
 29079                           ;mdm_gsm_gprs_http.c: 494: }
 29080                           
 29081                           ; BSR set to: 1
 29082                           ;mdm_gsm_gprs_http.c: 493: break;
 29083                           
 29084                           ;mdm_gsm_gprs_http.c: 492: default:
 29085                           
 29086                           ;mdm_gsm_gprs_http.c: 490: break;
 29087  000A52  D031               	goto	l1252
 29088  000A54                     l1249:
 29089                           
 29090                           ; BSR set to: 1
 29091                           
 29092                           ; BSR set to: 1
 29093  000A54  51EC               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 29094                           
 29095                           ; Switch size 1, requested type "space"
 29096                           ; Number of cases is 16, Range of values is 0 to 15
 29097                           ; switch strategies available:
 29098                           ; Name         Instructions Cycles
 29099                           ; simple_byte           49    25 (average)
 29100                           ;	Chosen strategy is simple_byte
 29101  000A56  0A00               	xorlw	0	; case 0
 29102  000A58  B4D8               	btfsc	status,2,c
 29103  000A5A  D5CC               	goto	l1250
 29104  000A5C  0A01               	xorlw	1	; case 1
 29105  000A5E  B4D8               	btfsc	status,2,c
 29106  000A60  D5D5               	goto	l1253
 29107  000A62  0A03               	xorlw	3	; case 2
 29108  000A64  B4D8               	btfsc	status,2,c
 29109  000A66  D5EF               	goto	l1254
 29110  000A68  0A01               	xorlw	1	; case 3
 29111  000A6A  B4D8               	btfsc	status,2,c
 29112  000A6C  D609               	goto	l1255
 29113  000A6E  0A07               	xorlw	7	; case 4
 29114  000A70  B4D8               	btfsc	status,2,c
 29115  000A72  D623               	goto	l1256
 29116  000A74  0A01               	xorlw	1	; case 5
 29117  000A76  B4D8               	btfsc	status,2,c
 29118  000A78  D6BC               	goto	l1260
 29119  000A7A  0A03               	xorlw	3	; case 6
 29120  000A7C  B4D8               	btfsc	status,2,c
 29121  000A7E  D6D6               	goto	l1261
 29122  000A80  0A01               	xorlw	1	; case 7
 29123  000A82  B4D8               	btfsc	status,2,c
 29124  000A84  D752               	goto	l1269
 29125  000A86  0A0F               	xorlw	15	; case 8
 29126  000A88  B4D8               	btfsc	status,2,c
 29127  000A8A  D6E5               	goto	l1262
 29128  000A8C  0A01               	xorlw	1	; case 9
 29129  000A8E  B4D8               	btfsc	status,2,c
 29130  000A90  D6FF               	goto	l1263
 29131  000A92  0A03               	xorlw	3	; case 10
 29132  000A94  B4D8               	btfsc	status,2,c
 29133  000A96  D719               	goto	l1264
 29134  000A98  0A01               	xorlw	1	; case 11
 29135  000A9A  B4D8               	btfsc	status,2,c
 29136  000A9C  D770               	goto	l1274
 29137  000A9E  0A07               	xorlw	7	; case 12
 29138  000AA0  B4D8               	btfsc	status,2,c
 29139  000AA2  D783               	goto	l1275
 29140  000AA4  0A01               	xorlw	1	; case 13
 29141  000AA6  B4D8               	btfsc	status,2,c
 29142  000AA8  D78D               	goto	l1277
 29143  000AAA  0A03               	xorlw	3	; case 14
 29144  000AAC  B4D8               	btfsc	status,2,c
 29145  000AAE  D7C9               	goto	l1282
 29146  000AB0  0A01               	xorlw	1	; case 15
 29147  000AB2  B4D8               	btfsc	status,2,c
 29148  000AB4  D7CA               	goto	l1283
 29149  000AB6                     l1252:
 29150                           
 29151                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 29152                           
 29153                           ; BSR set to: 1
 29154  000AB6  0101               	movlb	1	; () banked
 29155  000AB8  51EB               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 29156  000ABA  0012               	return	
 29157  000ABC                     __end_of_HttpGetMethod:
 29158                           	opt stack 0
 29159                           tosu	equ	0xFFF
 29160                           tosh	equ	0xFFE
 29161                           tosl	equ	0xFFD
 29162                           pclath	equ	0xFFA
 29163                           tblptru	equ	0xFF8
 29164                           tblptrh	equ	0xFF7
 29165                           tblptrl	equ	0xFF6
 29166                           tablat	equ	0xFF5
 29167                           prodh	equ	0xFF4
 29168                           prodl	equ	0xFF3
 29169                           intcon	equ	0xFF2
 29170                           intcon2	equ	0xFF1
 29171                           intcon3	equ	0xFF0
 29172                           indf0	equ	0xFEF
 29173                           postinc0	equ	0xFEE
 29174                           plusw0	equ	0xFEB
 29175                           fsr0h	equ	0xFEA
 29176                           fsr0l	equ	0xFE9
 29177                           wreg	equ	0xFE8
 29178                           indf1	equ	0xFE7
 29179                           postinc1	equ	0xFE6
 29180                           postdec1	equ	0xFE5
 29181                           plusw1	equ	0xFE3
 29182                           fsr1h	equ	0xFE2
 29183                           fsr1l	equ	0xFE1
 29184                           indf2	equ	0xFDF
 29185                           postinc2	equ	0xFDE
 29186                           postdec2	equ	0xFDD
 29187                           plusw2	equ	0xFDB
 29188                           fsr2h	equ	0xFDA
 29189                           fsr2l	equ	0xFD9
 29190                           status	equ	0xFD8
 29191                           
 29192 ;; *************** function _Uart_WriteString *****************
 29193 ;; Defined at:
 29194 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 29195 ;; Parameters:    Size  Location     Type
 29196 ;;  Module          1    wreg     unsigned char 
 29197 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 29198 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 29199 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 29200 ;; Auto vars:     Size  Location     Type
 29201 ;;  Module          1   34[BANK0 ] unsigned char 
 29202 ;; Return value:  Size  Location     Type
 29203 ;;                  1    wreg      void 
 29204 ;; Registers used:
 29205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29206 ;; Tracked objects:
 29207 ;;		On entry : 0/0
 29208 ;;		On exit  : 0/0
 29209 ;;		Unchanged: 0/0
 29210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29211 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29212 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29214 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29215 ;;Total ram usage:        3 bytes
 29216 ;; Hardware stack levels used:    1
 29217 ;; Hardware stack levels required when called:   12
 29218 ;; This function calls:
 29219 ;;		_UartTxBufferStatus
 29220 ;;		_UartWriteByte
 29221 ;; This function is called by:
 29222 ;;		_Mdm_SetSmsFormat
 29223 ;;		_InitGprsNetwork
 29224 ;;		_HttpGetMethod
 29225 ;;		_Mdm_PinUnlock
 29226 ;;		_Mdm_MakePhoneCall
 29227 ;; This function uses a non-reentrant model
 29228 ;;
 29229                           
 29230                           	psect	text132
 29231  005C8A                     __ptext132:
 29232                           	opt stack 0
 29233  005C8A                     _Uart_WriteString:
 29234                           	opt stack 12
 29235                           
 29236                           ; BSR set to: 1
 29237                           ;incstack = 0
 29238                           ;Uart_WriteString@Module stored from wreg
 29239  005C8A  0100               	movlb	0	; () banked
 29240  005C8C  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 29241                           
 29242                           ;uart_drv.c: 521: while (*StringToWrite)
 29243  005C8E  D014               	goto	u11270
 29244  005C90                     
 29245                           ;uart_drv.c: 522: {
 29246                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 29247  005C90  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 29248  005C94  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 29249  005C98  50DF               	movf	indf2,w,c
 29250  005C9A  0100               	movlb	0	; () banked
 29251  005C9C  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 29252  005C9E  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 29253  005CA0  EC2A  F031         	call	_UartWriteByte
 29254                           
 29255                           ;uart_drv.c: 526: StringToWrite++;
 29256  005CA4  0100               	movlb	0	; () banked
 29257  005CA6  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 29258  005CA8  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 29259  005CAA                     
 29260                           ; BSR set to: 0
 29261                           
 29262                           ; BSR set to: 0
 29263  005CAA  0100               	movlb	0	; () banked
 29264  005CAC  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 29265  005CAE  ECFB  F02B         	call	_UartTxBufferStatus
 29266  005CB2  06E8               	decf	wreg,f,c
 29267  005CB4  B4D8               	btfsc	status,2,c
 29268  005CB6  D7F9               	goto	l709
 29269  005CB8                     u11270:
 29270  005CB8  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 29271  005CBC  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 29272  005CC0  50DF               	movf	indf2,w,c
 29273  005CC2  B4D8               	btfsc	status,2,c
 29274  005CC4  0012               	return	
 29275  005CC6  D7E4               	goto	l707
 29276  005CC8                     __end_of_Uart_WriteString:
 29277                           	opt stack 0
 29278                           tosu	equ	0xFFF
 29279                           tosh	equ	0xFFE
 29280                           tosl	equ	0xFFD
 29281                           pclath	equ	0xFFA
 29282                           tblptru	equ	0xFF8
 29283                           tblptrh	equ	0xFF7
 29284                           tblptrl	equ	0xFF6
 29285                           tablat	equ	0xFF5
 29286                           prodh	equ	0xFF4
 29287                           prodl	equ	0xFF3
 29288                           intcon	equ	0xFF2
 29289                           intcon2	equ	0xFF1
 29290                           intcon3	equ	0xFF0
 29291                           indf0	equ	0xFEF
 29292                           postinc0	equ	0xFEE
 29293                           plusw0	equ	0xFEB
 29294                           fsr0h	equ	0xFEA
 29295                           fsr0l	equ	0xFE9
 29296                           wreg	equ	0xFE8
 29297                           indf1	equ	0xFE7
 29298                           postinc1	equ	0xFE6
 29299                           postdec1	equ	0xFE5
 29300                           plusw1	equ	0xFE3
 29301                           fsr1h	equ	0xFE2
 29302                           fsr1l	equ	0xFE1
 29303                           indf2	equ	0xFDF
 29304                           postinc2	equ	0xFDE
 29305                           postdec2	equ	0xFDD
 29306                           plusw2	equ	0xFDB
 29307                           fsr2h	equ	0xFDA
 29308                           fsr2l	equ	0xFD9
 29309                           status	equ	0xFD8
 29310                           
 29311 ;; *************** function _Uart_WriteConstString *****************
 29312 ;; Defined at:
 29313 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 29314 ;; Parameters:    Size  Location     Type
 29315 ;;  Module          1    wreg     unsigned char 
 29316 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 29317 ;;		 -> STR_31(12), STR_30(19), STR_29(14), STR_20(14), 
 29318 ;;		 -> STR_19(14), STR_18(13), STR_17(13), STR_16(17), 
 29319 ;;		 -> STR_14(21), STR_13(14), STR_12(13), STR_11(14), 
 29320 ;;		 -> STR_10(14), STR_8(31), STR_7(5), STR_6(5), 
 29321 ;;		 -> STR_4(12), STR_3(7), STR_2(14), STR_1(5), 
 29322 ;; Auto vars:     Size  Location     Type
 29323 ;;  Module          1   34[BANK0 ] unsigned char 
 29324 ;; Return value:  Size  Location     Type
 29325 ;;                  1    wreg      void 
 29326 ;; Registers used:
 29327 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29328 ;; Tracked objects:
 29329 ;;		On entry : 0/0
 29330 ;;		On exit  : 0/0
 29331 ;;		Unchanged: 0/0
 29332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29333 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29336 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29337 ;;Total ram usage:        3 bytes
 29338 ;; Hardware stack levels used:    1
 29339 ;; Hardware stack levels required when called:   12
 29340 ;; This function calls:
 29341 ;;		_UartTxBufferStatus
 29342 ;;		_UartWriteByte
 29343 ;; This function is called by:
 29344 ;;		_CheckModem
 29345 ;;		_ConfigureModem
 29346 ;;		_GetSmsSm
 29347 ;;		_Mdm_HangPhoneCall
 29348 ;;		_InitGprsNetwork
 29349 ;;		_HttpGetMethod
 29350 ;;		_MyApp_Task
 29351 ;;		_initGprsModem
 29352 ;;		_Mdm_GetPhoneCall
 29353 ;;		_MdmHttp_SetSsl
 29354 ;; This function uses a non-reentrant model
 29355 ;;
 29356                           
 29357                           	psect	text133
 29358  005B0A                     __ptext133:
 29359                           	opt stack 0
 29360  005B0A                     _Uart_WriteConstString:
 29361                           	opt stack 12
 29362                           
 29363                           ;incstack = 0
 29364                           ;Uart_WriteConstString@Module stored from wreg
 29365  005B0A  0100               	movlb	0	; () banked
 29366  005B0C  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 29367                           
 29368                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 29369  005B0E  D015               	goto	u11250
 29370  005B10                     
 29371                           ;uart_drv.c: 500: {
 29372                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 29373  005B10  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 29374  005B14  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 29375  005B18                     	if	0	;tblptru may be non-zero
 29376  005B18                     	endif
 29377  005B18                     	if	0	;tblptru may be non-zero
 29378  005B18                     	endif
 29379  005B18  0008               	tblrd		*
 29380  005B1A  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 29381  005B1E  0100               	movlb	0	; () banked
 29382  005B20  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 29383  005B22  EC2A  F031         	call	_UartWriteByte
 29384                           
 29385                           ;uart_drv.c: 504: ConstStringToWrite++;
 29386  005B26  0100               	movlb	0	; () banked
 29387  005B28  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 29388  005B2A  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 29389  005B2C                     
 29390                           ; BSR set to: 0
 29391                           
 29392                           ; BSR set to: 0
 29393  005B2C  0100               	movlb	0	; () banked
 29394  005B2E  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 29395  005B30  ECFB  F02B         	call	_UartTxBufferStatus
 29396  005B34  06E8               	decf	wreg,f,c
 29397  005B36  B4D8               	btfsc	status,2,c
 29398  005B38  D7F9               	goto	l700
 29399  005B3A                     u11250:
 29400  005B3A  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 29401  005B3E  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 29402  005B42                     	if	0	;tblptru may be non-zero
 29403  005B42                     	endif
 29404  005B42                     	if	0	;tblptru may be non-zero
 29405  005B42                     	endif
 29406  005B42  0008               	tblrd		*
 29407  005B44  50F5               	movf	tablat,w,c
 29408  005B46  0900               	iorlw	0
 29409  005B48  B4D8               	btfsc	status,2,c
 29410  005B4A  0012               	return	
 29411  005B4C  D7E1               	goto	l698
 29412  005B4E                     __end_of_Uart_WriteConstString:
 29413                           	opt stack 0
 29414                           tosu	equ	0xFFF
 29415                           tosh	equ	0xFFE
 29416                           tosl	equ	0xFFD
 29417                           pclath	equ	0xFFA
 29418                           tblptru	equ	0xFF8
 29419                           tblptrh	equ	0xFF7
 29420                           tblptrl	equ	0xFF6
 29421                           tablat	equ	0xFF5
 29422                           prodh	equ	0xFF4
 29423                           prodl	equ	0xFF3
 29424                           intcon	equ	0xFF2
 29425                           intcon2	equ	0xFF1
 29426                           intcon3	equ	0xFF0
 29427                           indf0	equ	0xFEF
 29428                           postinc0	equ	0xFEE
 29429                           plusw0	equ	0xFEB
 29430                           fsr0h	equ	0xFEA
 29431                           fsr0l	equ	0xFE9
 29432                           wreg	equ	0xFE8
 29433                           indf1	equ	0xFE7
 29434                           postinc1	equ	0xFE6
 29435                           postdec1	equ	0xFE5
 29436                           plusw1	equ	0xFE3
 29437                           fsr1h	equ	0xFE2
 29438                           fsr1l	equ	0xFE1
 29439                           indf2	equ	0xFDF
 29440                           postinc2	equ	0xFDE
 29441                           postdec2	equ	0xFDD
 29442                           plusw2	equ	0xFDB
 29443                           fsr2h	equ	0xFDA
 29444                           fsr2l	equ	0xFD9
 29445                           status	equ	0xFD8
 29446                           
 29447 ;; *************** function _UartWriteByte *****************
 29448 ;; Defined at:
 29449 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 29450 ;; Parameters:    Size  Location     Type
 29451 ;;  Module          1    wreg     unsigned char 
 29452 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 29453 ;; Auto vars:     Size  Location     Type
 29454 ;;  Module          1   30[BANK0 ] unsigned char 
 29455 ;; Return value:  Size  Location     Type
 29456 ;;                  1    wreg      void 
 29457 ;; Registers used:
 29458 ;;		wreg, status,2, status,0
 29459 ;; Tracked objects:
 29460 ;;		On entry : 0/0
 29461 ;;		On exit  : 0/0
 29462 ;;		Unchanged: 0/0
 29463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29464 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29465 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29467 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29468 ;;Total ram usage:        2 bytes
 29469 ;; Hardware stack levels used:    1
 29470 ;; Hardware stack levels required when called:   11
 29471 ;; This function calls:
 29472 ;;		Nothing
 29473 ;; This function is called by:
 29474 ;;		_Uart_WriteConstString
 29475 ;;		_Uart_WriteString
 29476 ;;		_Uart_WriteStringLen
 29477 ;; This function uses a non-reentrant model
 29478 ;;
 29479                           
 29480                           	psect	text134
 29481  006254                     __ptext134:
 29482                           	opt stack 0
 29483  006254                     _UartWriteByte:
 29484                           	opt stack 12
 29485                           
 29486                           ;incstack = 0
 29487                           ;UartWriteByte@Module stored from wreg
 29488  006254  0100               	movlb	0	; () banked
 29489  006256  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 29490                           
 29491                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 29492  006258  0100               	movlb	0	; () banked
 29493  00625A  057E               	decf	UartWriteByte@Module& (0+255),w,b
 29494  00625C  A4D8               	btfss	status,2,c
 29495  00625E  D003               	goto	l639
 29496                           
 29497                           ; BSR set to: 0
 29498                           ;uart_drv.c: 176: {
 29499                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 29500  006260  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 29501                           
 29502                           ;uart_drv.c: 179: }
 29503  006264  0012               	return	
 29504  006266                     l639:
 29505                           
 29506                           ; BSR set to: 0
 29507                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 29508                           
 29509                           ; BSR set to: 0
 29510  006266  0E02               	movlw	2
 29511  006268  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 29512  00626A  A4D8               	btfss	status,2,c
 29513  00626C  0012               	return	
 29514                           
 29515                           ; BSR set to: 0
 29516                           ;uart_drv.c: 181: {
 29517                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 29518  00626E  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 29519                           
 29520                           ; BSR set to: 0
 29521  006272  0012               	return	
 29522  006274                     __end_of_UartWriteByte:
 29523                           	opt stack 0
 29524                           tosu	equ	0xFFF
 29525                           tosh	equ	0xFFE
 29526                           tosl	equ	0xFFD
 29527                           pclath	equ	0xFFA
 29528                           tblptru	equ	0xFF8
 29529                           tblptrh	equ	0xFF7
 29530                           tblptrl	equ	0xFF6
 29531                           tablat	equ	0xFF5
 29532                           prodh	equ	0xFF4
 29533                           prodl	equ	0xFF3
 29534                           intcon	equ	0xFF2
 29535                           intcon2	equ	0xFF1
 29536                           intcon3	equ	0xFF0
 29537                           indf0	equ	0xFEF
 29538                           postinc0	equ	0xFEE
 29539                           plusw0	equ	0xFEB
 29540                           fsr0h	equ	0xFEA
 29541                           fsr0l	equ	0xFE9
 29542                           wreg	equ	0xFE8
 29543                           indf1	equ	0xFE7
 29544                           postinc1	equ	0xFE6
 29545                           postdec1	equ	0xFE5
 29546                           plusw1	equ	0xFE3
 29547                           fsr1h	equ	0xFE2
 29548                           fsr1l	equ	0xFE1
 29549                           indf2	equ	0xFDF
 29550                           postinc2	equ	0xFDE
 29551                           postdec2	equ	0xFDD
 29552                           plusw2	equ	0xFDB
 29553                           fsr2h	equ	0xFDA
 29554                           fsr2l	equ	0xFD9
 29555                           status	equ	0xFD8
 29556                           
 29557 ;; *************** function _UartTxBufferStatus *****************
 29558 ;; Defined at:
 29559 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 29560 ;; Parameters:    Size  Location     Type
 29561 ;;  Module          1    wreg     unsigned char 
 29562 ;; Auto vars:     Size  Location     Type
 29563 ;;  Module          1   30[BANK0 ] unsigned char 
 29564 ;;  TxBufferStat    1   31[BANK0 ] enum E9033
 29565 ;; Return value:  Size  Location     Type
 29566 ;;                  1    wreg      enum E9033
 29567 ;; Registers used:
 29568 ;;		wreg, status,2, status,0
 29569 ;; Tracked objects:
 29570 ;;		On entry : 0/0
 29571 ;;		On exit  : 0/0
 29572 ;;		Unchanged: 0/0
 29573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29575 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29576 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29577 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29578 ;;Total ram usage:        3 bytes
 29579 ;; Hardware stack levels used:    1
 29580 ;; Hardware stack levels required when called:   11
 29581 ;; This function calls:
 29582 ;;		Nothing
 29583 ;; This function is called by:
 29584 ;;		_Uart_WriteConstString
 29585 ;;		_Uart_WriteString
 29586 ;;		_Uart_WriteStringLen
 29587 ;; This function uses a non-reentrant model
 29588 ;;
 29589                           
 29590                           	psect	text135
 29591  0057F6                     __ptext135:
 29592                           	opt stack 0
 29593  0057F6                     _UartTxBufferStatus:
 29594                           	opt stack 12
 29595                           
 29596                           ; BSR set to: 0
 29597                           ;incstack = 0
 29598                           ;UartTxBufferStatus@Module stored from wreg
 29599  0057F6  0100               	movlb	0	; () banked
 29600  0057F8  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 29601                           
 29602                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 29603  0057FA  0E00               	movlw	0
 29604  0057FC  0100               	movlb	0	; () banked
 29605  0057FE  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 29606                           
 29607                           ; BSR set to: 0
 29608                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 29609  005800  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 29610  005802  A4D8               	btfss	status,2,c
 29611  005804  D00B               	goto	l651
 29612                           
 29613                           ; BSR set to: 0
 29614                           ;uart_drv.c: 228: {
 29615                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 29616  005806  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 29617  00580A  90D8               	bcf	status,0,c
 29618  00580C  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 29619  00580E  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 29620  005810  D002               	goto	l652
 29621  005812                     u10680:
 29622                           
 29623                           ; BSR set to: 0
 29624                           ;uart_drv.c: 231: {
 29625                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 29626  005812  0E01               	movlw	1
 29627  005814  D014               	goto	L50
 29628  005816                     l652:
 29629                           
 29630                           ; BSR set to: 0
 29631                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 29632                           
 29633                           ; BSR set to: 0
 29634  005816  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 29635  00581A  D00C               	goto	L79
 29636  00581C                     l651:
 29637                           
 29638                           ; BSR set to: 0
 29639                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 29640                           
 29641                           ; BSR set to: 0
 29642  00581C  0E02               	movlw	2
 29643  00581E  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 29644  005820  A4D8               	btfss	status,2,c
 29645  005822  D00E               	goto	l660
 29646                           
 29647                           ; BSR set to: 0
 29648                           ;uart_drv.c: 244: {
 29649                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 29650  005824  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 29651  005828  90D8               	bcf	status,0,c
 29652  00582A  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 29653  00582C  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 29654  00582E  D7F1               	goto	u10680
 29655                           
 29656                           ; BSR set to: 0
 29657                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 29658                           
 29659                           ; BSR set to: 0
 29660                           
 29661                           ;uart_drv.c: 249: }
 29662                           
 29663                           ; BSR set to: 0
 29664                           ;uart_drv.c: 247: {
 29665                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 29666  005830  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 29667  005834                     L79:
 29668  005834  90D8               	bcf	status,0,c
 29669  005836  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 29670  005838  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 29671  00583A  D002               	goto	l660
 29672                           
 29673                           ; BSR set to: 0
 29674                           ;uart_drv.c: 251: {
 29675                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 29676  00583C  0E02               	movlw	2
 29677  00583E                     L50:
 29678  00583E  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 29679  005840                     l660:
 29680                           
 29681                           ; BSR set to: 0
 29682                           ;uart_drv.c: 257: }
 29683                           ;uart_drv.c: 258: }
 29684                           ;uart_drv.c: 260: return TxBufferStatus;
 29685                           
 29686                           ; BSR set to: 0
 29687                           
 29688                           ; BSR set to: 0
 29689                           
 29690                           ; BSR set to: 0
 29691                           
 29692                           ; BSR set to: 0
 29693                           
 29694                           ;uart_drv.c: 254: else
 29695                           ;uart_drv.c: 255: {
 29696                           
 29697                           ; BSR set to: 0
 29698  005840  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 29699  005842  0012               	return	
 29700  005844                     __end_of_UartTxBufferStatus:
 29701                           	opt stack 0
 29702                           tosu	equ	0xFFF
 29703                           tosh	equ	0xFFE
 29704                           tosl	equ	0xFFD
 29705                           pclath	equ	0xFFA
 29706                           tblptru	equ	0xFF8
 29707                           tblptrh	equ	0xFF7
 29708                           tblptrl	equ	0xFF6
 29709                           tablat	equ	0xFF5
 29710                           prodh	equ	0xFF4
 29711                           prodl	equ	0xFF3
 29712                           intcon	equ	0xFF2
 29713                           intcon2	equ	0xFF1
 29714                           intcon3	equ	0xFF0
 29715                           indf0	equ	0xFEF
 29716                           postinc0	equ	0xFEE
 29717                           plusw0	equ	0xFEB
 29718                           fsr0h	equ	0xFEA
 29719                           fsr0l	equ	0xFE9
 29720                           wreg	equ	0xFE8
 29721                           indf1	equ	0xFE7
 29722                           postinc1	equ	0xFE6
 29723                           postdec1	equ	0xFE5
 29724                           plusw1	equ	0xFE3
 29725                           fsr1h	equ	0xFE2
 29726                           fsr1l	equ	0xFE1
 29727                           indf2	equ	0xFDF
 29728                           postinc2	equ	0xFDE
 29729                           postdec2	equ	0xFDD
 29730                           plusw2	equ	0xFDB
 29731                           fsr2h	equ	0xFDA
 29732                           fsr2l	equ	0xFD9
 29733                           status	equ	0xFD8
 29734                           
 29735 ;; *************** function _StringCopy *****************
 29736 ;; Defined at:
 29737 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 29738 ;; Parameters:    Size  Location     Type
 29739 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 29740 ;;		 -> memoryPreamble(5), STR_15(20), STR_9(21), MessageText(50), 
 29741 ;;		 -> PhoneNumber(20), STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), 
 29742 ;;		 -> callerNumber(14), RxBuffer(400), 
 29743 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 29744 ;;		 -> smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), 
 29745 ;;		 -> MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), Mdm_SmsRx(102), 
 29746 ;;		 -> callerNumber(14), 
 29747 ;;  Len             2   33[BANK0 ] unsigned short 
 29748 ;; Auto vars:     Size  Location     Type
 29749 ;;  Index           2   37[BANK0 ] unsigned short 
 29750 ;; Return value:  Size  Location     Type
 29751 ;;                  1    wreg      void 
 29752 ;; Registers used:
 29753 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29754 ;; Tracked objects:
 29755 ;;		On entry : 0/0
 29756 ;;		On exit  : 0/0
 29757 ;;		Unchanged: 0/0
 29758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29759 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29760 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29761 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29762 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29763 ;;Total ram usage:       10 bytes
 29764 ;; Hardware stack levels used:    1
 29765 ;; Hardware stack levels required when called:   11
 29766 ;; This function calls:
 29767 ;;		Nothing
 29768 ;; This function is called by:
 29769 ;;		_ModemEvtParser
 29770 ;;		_GetSmsSm
 29771 ;;		_SendSmsSm
 29772 ;;		_Mdm_GetSmsData
 29773 ;;		_InitGprsNetwork
 29774 ;;		_HttpGetMethod
 29775 ;;		_Eeprom_Write
 29776 ;;		_Mdm_SendSmsData
 29777 ;; This function uses a non-reentrant model
 29778 ;;
 29779                           
 29780                           	psect	text136
 29781  005196                     __ptext136:
 29782                           	opt stack 0
 29783  005196                     _StringCopy:
 29784                           	opt stack 14
 29785                           
 29786                           ;sf.c: 106: UINT16 Index = 0;
 29787                           
 29788                           ; BSR set to: 0
 29789                           ;incstack = 0
 29790  005196  0E00               	movlw	0
 29791  005198  0100               	movlb	0	; () banked
 29792  00519A  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 29793  00519C  0E00               	movlw	0
 29794  00519E  6F85               	movwf	StringCopy@Index& (0+255),b
 29795                           
 29796                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 29797  0051A0  0E00               	movlw	0
 29798  0051A2  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 29799  0051A4  0E00               	movlw	0
 29800  0051A6  6F85               	movwf	StringCopy@Index& (0+255),b
 29801  0051A8  D020               	goto	l2244
 29802  0051AA                     
 29803                           ; BSR set to: 0
 29804                           ;sf.c: 110: {
 29805                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 29806                           
 29807                           ; BSR set to: 0
 29808  0051AA  5185               	movf	StringCopy@Index& (0+255),w,b
 29809  0051AC  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 29810  0051AE  6F83               	movwf	??_StringCopy& (0+255),b
 29811  0051B0  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 29812  0051B2  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 29813  0051B4  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 29814  0051B6  C083  FFF6         	movff	??_StringCopy,tblptrl
 29815  0051BA  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 29816  0051BE  6AF8               	clrf	tblptru,c
 29817  0051C0  5185               	movf	StringCopy@Index& (0+255),w,b
 29818  0051C2  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 29819  0051C4  6ED9               	movwf	fsr2l,c
 29820  0051C6  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 29821  0051C8  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 29822  0051CA  6EDA               	movwf	fsr2h,c
 29823  0051CC  0E0E               	movlw	(high __ramtop+-1)
 29824  0051CE  64F7               	cpfsgt	tblptrh,c
 29825  0051D0  D003               	bra	u11797
 29826  0051D2  0008               	tblrd		*
 29827  0051D4  50F5               	movf	tablat,w,c
 29828  0051D6  D005               	bra	u11790
 29829  0051D8                     u11797:
 29830  0051D8  CFF6 FFE9          	movff	tblptrl,fsr0l
 29831  0051DC  CFF7 FFEA          	movff	tblptrh,fsr0h
 29832  0051E0  50EF               	movf	indf0,w,c
 29833  0051E2                     u11790:
 29834  0051E2  6EDF               	movwf	indf2,c
 29835  0051E4  0100               	movlb	0	; () banked
 29836  0051E6  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 29837  0051E8  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 29838  0051EA                     l2244:
 29839                           
 29840                           ; BSR set to: 0
 29841                           
 29842                           ; BSR set to: 0
 29843  0051EA  5181               	movf	StringCopy@Len& (0+255),w,b
 29844  0051EC  5D85               	subwf	StringCopy@Index& (0+255),w,b
 29845  0051EE  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 29846  0051F0  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 29847  0051F2  B0D8               	btfsc	status,0,c
 29848  0051F4  0012               	return	
 29849  0051F6  D7D9               	goto	l2245
 29850  0051F8                     __end_of_StringCopy:
 29851                           	opt stack 0
 29852                           tosu	equ	0xFFF
 29853                           tosh	equ	0xFFE
 29854                           tosl	equ	0xFFD
 29855                           pclath	equ	0xFFA
 29856                           tblptru	equ	0xFF8
 29857                           tblptrh	equ	0xFF7
 29858                           tblptrl	equ	0xFF6
 29859                           tablat	equ	0xFF5
 29860                           prodh	equ	0xFF4
 29861                           prodl	equ	0xFF3
 29862                           intcon	equ	0xFF2
 29863                           intcon2	equ	0xFF1
 29864                           intcon3	equ	0xFF0
 29865                           indf0	equ	0xFEF
 29866                           postinc0	equ	0xFEE
 29867                           plusw0	equ	0xFEB
 29868                           fsr0h	equ	0xFEA
 29869                           fsr0l	equ	0xFE9
 29870                           wreg	equ	0xFE8
 29871                           indf1	equ	0xFE7
 29872                           postinc1	equ	0xFE6
 29873                           postdec1	equ	0xFE5
 29874                           plusw1	equ	0xFE3
 29875                           fsr1h	equ	0xFE2
 29876                           fsr1l	equ	0xFE1
 29877                           indf2	equ	0xFDF
 29878                           postinc2	equ	0xFDE
 29879                           postdec2	equ	0xFDD
 29880                           plusw2	equ	0xFDB
 29881                           fsr2h	equ	0xFDA
 29882                           fsr2l	equ	0xFD9
 29883                           status	equ	0xFD8
 29884                           
 29885 ;; *************** function _OsTmr_StartTimer *****************
 29886 ;; Defined at:
 29887 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 29888 ;; Parameters:    Size  Location     Type
 29889 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 29890 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 29891 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 29892 ;;  Timeout         4   35[BANK0 ] unsigned long 
 29893 ;; Auto vars:     Size  Location     Type
 29894 ;;		None
 29895 ;; Return value:  Size  Location     Type
 29896 ;;                  1    wreg      void 
 29897 ;; Registers used:
 29898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29899 ;; Tracked objects:
 29900 ;;		On entry : 0/0
 29901 ;;		On exit  : 0/0
 29902 ;;		Unchanged: 0/0
 29903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29904 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29907 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29908 ;;Total ram usage:        6 bytes
 29909 ;; Hardware stack levels used:    1
 29910 ;; Hardware stack levels required when called:   12
 29911 ;; This function calls:
 29912 ;;		_GetOsTickCounter
 29913 ;; This function is called by:
 29914 ;;		_OsTmr_Wait
 29915 ;;		_CheckModem
 29916 ;;		_SendSmsSm
 29917 ;;		_InitGprsNetwork
 29918 ;;		_HttpGetMethod
 29919 ;;		_I2cSlv_QueryI2cData
 29920 ;;		_Term_MainSm
 29921 ;; This function uses a non-reentrant model
 29922 ;;
 29923                           
 29924                           	psect	text137
 29925  005256                     __ptext137:
 29926                           	opt stack 0
 29927  005256                     _OsTmr_StartTimer:
 29928                           	opt stack 12
 29929                           
 29930                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 29931                           
 29932                           ; BSR set to: 0
 29933                           ;incstack = 0
 29934  005256  0100               	movlb	0	; () banked
 29935  005258  EE20 F001          	lfsr	2,1
 29936  00525C  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 29937  00525E  26D9               	addwf	fsr2l,f,c
 29938  005260  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 29939  005262  22DA               	addwfc	fsr2h,f,c
 29940  005264  0E00               	movlw	0
 29941  005266  6EDF               	movwf	indf2,c
 29942                           
 29943                           ; BSR set to: 0
 29944                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 29945  005268  EC13  F032         	call	_GetOsTickCounter	;wreg free
 29946  00526C  0100               	movlb	0	; () banked
 29947  00526E  EE20 F002          	lfsr	2,2
 29948  005272  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 29949  005274  26D9               	addwf	fsr2l,f,c
 29950  005276  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 29951  005278  22DA               	addwfc	fsr2h,f,c
 29952  00527A  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 29953  00527E  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 29954  005282  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 29955  005286  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 29956                           
 29957                           ; BSR set to: 0
 29958                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 29959  00528A  EE20 F006          	lfsr	2,6
 29960  00528E  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 29961  005290  26D9               	addwf	fsr2l,f,c
 29962  005292  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 29963  005294  22DA               	addwfc	fsr2h,f,c
 29964  005296  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 29965  00529A  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 29966  00529E  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 29967  0052A2  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 29968                           
 29969                           ; BSR set to: 0
 29970                           ;os_timers.c: 127: Timer->Enabled = 1u;
 29971  0052A6  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 29972  0052AA  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 29973  0052AE  0E01               	movlw	1
 29974  0052B0  6EDF               	movwf	indf2,c
 29975                           
 29976                           ; BSR set to: 0
 29977  0052B2  0012               	return		;funcret
 29978  0052B4                     __end_of_OsTmr_StartTimer:
 29979                           	opt stack 0
 29980                           tosu	equ	0xFFF
 29981                           tosh	equ	0xFFE
 29982                           tosl	equ	0xFFD
 29983                           pclath	equ	0xFFA
 29984                           tblptru	equ	0xFF8
 29985                           tblptrh	equ	0xFF7
 29986                           tblptrl	equ	0xFF6
 29987                           tablat	equ	0xFF5
 29988                           prodh	equ	0xFF4
 29989                           prodl	equ	0xFF3
 29990                           intcon	equ	0xFF2
 29991                           intcon2	equ	0xFF1
 29992                           intcon3	equ	0xFF0
 29993                           indf0	equ	0xFEF
 29994                           postinc0	equ	0xFEE
 29995                           plusw0	equ	0xFEB
 29996                           fsr0h	equ	0xFEA
 29997                           fsr0l	equ	0xFE9
 29998                           wreg	equ	0xFE8
 29999                           indf1	equ	0xFE7
 30000                           postinc1	equ	0xFE6
 30001                           postdec1	equ	0xFE5
 30002                           plusw1	equ	0xFE3
 30003                           fsr1h	equ	0xFE2
 30004                           fsr1l	equ	0xFE1
 30005                           indf2	equ	0xFDF
 30006                           postinc2	equ	0xFDE
 30007                           postdec2	equ	0xFDD
 30008                           plusw2	equ	0xFDB
 30009                           fsr2h	equ	0xFDA
 30010                           fsr2l	equ	0xFD9
 30011                           status	equ	0xFD8
 30012                           
 30013 ;; *************** function _OsTmr_GetTimerStatus *****************
 30014 ;; Defined at:
 30015 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 30016 ;; Parameters:    Size  Location     Type
 30017 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 30018 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 30019 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 30020 ;; Auto vars:     Size  Location     Type
 30021 ;;		None
 30022 ;; Return value:  Size  Location     Type
 30023 ;;                  1    wreg      enum E7740
 30024 ;; Registers used:
 30025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30026 ;; Tracked objects:
 30027 ;;		On entry : 0/0
 30028 ;;		On exit  : 0/0
 30029 ;;		Unchanged: 0/0
 30030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30031 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30033 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30034 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30035 ;;Total ram usage:        6 bytes
 30036 ;; Hardware stack levels used:    1
 30037 ;; Hardware stack levels required when called:   13
 30038 ;; This function calls:
 30039 ;;		_GetElapsedTime
 30040 ;; This function is called by:
 30041 ;;		_OsTmr_Wait
 30042 ;;		_CheckModem
 30043 ;;		_SendSmsSm
 30044 ;;		_InitGprsNetwork
 30045 ;;		_HttpGetMethod
 30046 ;;		_I2cSlv_QueryI2cData
 30047 ;;		_Term_MainSm
 30048 ;; This function uses a non-reentrant model
 30049 ;;
 30050                           
 30051                           	psect	text138
 30052  004A72                     __ptext138:
 30053                           	opt stack 0
 30054  004A72                     _OsTmr_GetTimerStatus:
 30055                           	opt stack 11
 30056                           
 30057                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 30058                           
 30059                           ; BSR set to: 0
 30060                           ;incstack = 0
 30061  004A72  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 30062  004A76  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 30063  004A7A  04DE               	decf	postinc2,w,c
 30064  004A7C  A4D8               	btfss	status,2,c
 30065  004A7E  D030               	goto	l864
 30066                           
 30067                           ;os_timers.c: 197: {
 30068                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 30069  004A80  0100               	movlb	0	; () banked
 30070  004A82  EE20 F006          	lfsr	2,6
 30071  004A86  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 30072  004A88  26D9               	addwf	fsr2l,f,c
 30073  004A8A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 30074  004A8C  22DA               	addwfc	fsr2h,f,c
 30075  004A8E  EE10 F002          	lfsr	1,2
 30076  004A92  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 30077  004A94  26E1               	addwf	fsr1l,f,c
 30078  004A96  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 30079  004A98  22E2               	addwfc	fsr1h,f,c
 30080  004A9A  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 30081  004A9E  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 30082  004AA2  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 30083  004AA6  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 30084  004AAA  EC9D  F01E         	call	_GetElapsedTime	;wreg free
 30085  004AAE  50DE               	movf	postinc2,w,c
 30086  004AB0  0100               	movlb	0	; () banked
 30087  004AB2  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 30088  004AB4  50DE               	movf	postinc2,w,c
 30089  004AB6  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 30090  004AB8  50DE               	movf	postinc2,w,c
 30091  004ABA  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 30092  004ABC  50DE               	movf	postinc2,w,c
 30093  004ABE  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 30094  004AC0  A0D8               	btfss	status,0,c
 30095  004AC2  D017               	goto	l867
 30096                           
 30097                           ; BSR set to: 0
 30098                           ;os_timers.c: 200: {
 30099                           ;os_timers.c: 202: Timer->Enabled = 0u;
 30100  004AC4  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 30101  004AC8  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 30102  004ACC  0E00               	movlw	0
 30103  004ACE  6EDF               	movwf	indf2,c
 30104                           
 30105                           ; BSR set to: 0
 30106                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 30107  004AD0  EE20 F001          	lfsr	2,1
 30108  004AD4  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 30109  004AD6  26D9               	addwf	fsr2l,f,c
 30110  004AD8  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 30111  004ADA  22DA               	addwfc	fsr2h,f,c
 30112  004ADC  0E01               	movlw	1
 30113  004ADE  D008               	goto	L80
 30114  004AE0                     l864:
 30115                           
 30116                           ;os_timers.c: 211: else
 30117                           ;os_timers.c: 212: {
 30118                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 30119                           
 30120                           ; BSR set to: 0
 30121  004AE0  0100               	movlb	0	; () banked
 30122  004AE2  EE20 F001          	lfsr	2,1
 30123  004AE6  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 30124  004AE8  26D9               	addwf	fsr2l,f,c
 30125  004AEA  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 30126  004AEC  22DA               	addwfc	fsr2h,f,c
 30127  004AEE  0E02               	movlw	2
 30128  004AF0                     L80:
 30129  004AF0  6EDF               	movwf	indf2,c
 30130  004AF2                     l867:
 30131                           
 30132                           ; BSR set to: 0
 30133                           ;os_timers.c: 215: }
 30134                           ;os_timers.c: 218: return Timer->Status;
 30135  004AF2  EE20 F001          	lfsr	2,1
 30136  004AF6  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 30137  004AF8  26D9               	addwf	fsr2l,f,c
 30138  004AFA  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 30139  004AFC  22DA               	addwfc	fsr2h,f,c
 30140  004AFE  50DF               	movf	indf2,w,c
 30141  004B00  0012               	return	
 30142  004B02                     __end_of_OsTmr_GetTimerStatus:
 30143                           	opt stack 0
 30144                           tosu	equ	0xFFF
 30145                           tosh	equ	0xFFE
 30146                           tosl	equ	0xFFD
 30147                           pclath	equ	0xFFA
 30148                           tblptru	equ	0xFF8
 30149                           tblptrh	equ	0xFF7
 30150                           tblptrl	equ	0xFF6
 30151                           tablat	equ	0xFF5
 30152                           prodh	equ	0xFF4
 30153                           prodl	equ	0xFF3
 30154                           intcon	equ	0xFF2
 30155                           intcon2	equ	0xFF1
 30156                           intcon3	equ	0xFF0
 30157                           indf0	equ	0xFEF
 30158                           postinc0	equ	0xFEE
 30159                           plusw0	equ	0xFEB
 30160                           fsr0h	equ	0xFEA
 30161                           fsr0l	equ	0xFE9
 30162                           wreg	equ	0xFE8
 30163                           indf1	equ	0xFE7
 30164                           postinc1	equ	0xFE6
 30165                           postdec1	equ	0xFE5
 30166                           plusw1	equ	0xFE3
 30167                           fsr1h	equ	0xFE2
 30168                           fsr1l	equ	0xFE1
 30169                           indf2	equ	0xFDF
 30170                           postinc2	equ	0xFDE
 30171                           postdec2	equ	0xFDD
 30172                           plusw2	equ	0xFDB
 30173                           fsr2h	equ	0xFDA
 30174                           fsr2l	equ	0xFD9
 30175                           status	equ	0xFD8
 30176                           
 30177 ;; *************** function _GetElapsedTime *****************
 30178 ;; Defined at:
 30179 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 30180 ;; Parameters:    Size  Location     Type
 30181 ;;  StartTime       4   33[BANK0 ] unsigned long 
 30182 ;; Auto vars:     Size  Location     Type
 30183 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 30184 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 30185 ;; Return value:  Size  Location     Type
 30186 ;;                  4   33[BANK0 ] unsigned long 
 30187 ;; Registers used:
 30188 ;;		wreg, status,2, status,0, cstack
 30189 ;; Tracked objects:
 30190 ;;		On entry : 0/0
 30191 ;;		On exit  : 0/0
 30192 ;;		Unchanged: 0/0
 30193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30194 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30195 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30196 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30197 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30198 ;;Total ram usage:       20 bytes
 30199 ;; Hardware stack levels used:    1
 30200 ;; Hardware stack levels required when called:   12
 30201 ;; This function calls:
 30202 ;;		_GetOsTickCounter
 30203 ;; This function is called by:
 30204 ;;		_OsTmr_GetTimerStatus
 30205 ;;		_OsTmr_GetRemainingTime
 30206 ;; This function uses a non-reentrant model
 30207 ;;
 30208                           
 30209                           	psect	text139
 30210  003D3A                     __ptext139:
 30211                           	opt stack 0
 30212  003D3A                     _GetElapsedTime:
 30213                           	opt stack 11
 30214                           
 30215                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 30216                           ;os_timers.c: 87: UINT32 TimeValue;
 30217                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 30218                           
 30219                           ; BSR set to: 0
 30220                           ;incstack = 0
 30221  003D3A  EC13  F032         	call	_GetOsTickCounter	;wreg free
 30222  003D3E  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 30223  003D42  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 30224  003D46  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 30225  003D4A  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 30226                           
 30227                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 30228  003D4E  0100               	movlb	0	; () banked
 30229  003D50  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 30230  003D52  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 30231  003D54  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 30232  003D56  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 30233  003D58  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 30234  003D5A  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 30235  003D5C  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 30236  003D5E  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 30237  003D60  A0D8               	btfss	status,0,c
 30238  003D62  D01D               	goto	l844
 30239                           
 30240                           ; BSR set to: 0
 30241                           ;os_timers.c: 94: {
 30242                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 30243  003D64  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 30244  003D68  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 30245  003D6C  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 30246  003D70  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 30247  003D74  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 30248  003D76  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 30249  003D78  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 30250  003D7A  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 30251  003D7C  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 30252  003D7E  0E00               	movlw	0
 30253  003D80  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 30254  003D82  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 30255  003D84  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 30256  003D86  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 30257  003D88  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 30258  003D8A  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 30259  003D8C  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 30260  003D8E  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 30261  003D90  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 30262  003D92  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 30263  003D94  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 30264  003D96  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 30265  003D98  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 30266  003D9A  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 30267  003D9C  D028               	goto	L51
 30268  003D9E                     l844:
 30269                           
 30270                           ; BSR set to: 0
 30271                           ;os_timers.c: 97: else
 30272                           ;os_timers.c: 98: {
 30273                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 30274                           
 30275                           ; BSR set to: 0
 30276  003D9E  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 30277  003DA2  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 30278  003DA6  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 30279  003DAA  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 30280  003DAE  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 30281  003DB0  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 30282  003DB2  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 30283  003DB4  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 30284  003DB6  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 30285  003DB8  0E00               	movlw	0
 30286  003DBA  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 30287  003DBC  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 30288  003DBE  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 30289  003DC0  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 30290  003DC2  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 30291  003DC4  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 30292  003DC6  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 30293  003DC8  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 30294  003DCA  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 30295  003DCC  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 30296  003DCE  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 30297  003DD0  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 30298  003DD2  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 30299  003DD4  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 30300  003DD6  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 30301  003DD8  0EFF               	movlw	255
 30302  003DDA  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 30303  003DDC  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 30304  003DDE  0EFF               	movlw	255
 30305  003DE0  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 30306  003DE2  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 30307  003DE4  0EFF               	movlw	255
 30308  003DE6  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 30309  003DE8  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 30310  003DEA  0EFF               	movlw	255
 30311  003DEC  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 30312  003DEE                     L51:
 30313  003DEE  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 30314                           
 30315                           ; BSR set to: 0
 30316                           ;os_timers.c: 100: }
 30317                           ;os_timers.c: 102: return TimeValue;
 30318                           
 30319                           ; BSR set to: 0
 30320  003DF0  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 30321  003DF4  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 30322  003DF8  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 30323  003DFC  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 30324  003E00  0012               	return	
 30325  003E02                     __end_of_GetElapsedTime:
 30326                           	opt stack 0
 30327                           tosu	equ	0xFFF
 30328                           tosh	equ	0xFFE
 30329                           tosl	equ	0xFFD
 30330                           pclath	equ	0xFFA
 30331                           tblptru	equ	0xFF8
 30332                           tblptrh	equ	0xFF7
 30333                           tblptrl	equ	0xFF6
 30334                           tablat	equ	0xFF5
 30335                           prodh	equ	0xFF4
 30336                           prodl	equ	0xFF3
 30337                           intcon	equ	0xFF2
 30338                           intcon2	equ	0xFF1
 30339                           intcon3	equ	0xFF0
 30340                           indf0	equ	0xFEF
 30341                           postinc0	equ	0xFEE
 30342                           plusw0	equ	0xFEB
 30343                           fsr0h	equ	0xFEA
 30344                           fsr0l	equ	0xFE9
 30345                           wreg	equ	0xFE8
 30346                           indf1	equ	0xFE7
 30347                           postinc1	equ	0xFE6
 30348                           postdec1	equ	0xFE5
 30349                           plusw1	equ	0xFE3
 30350                           fsr1h	equ	0xFE2
 30351                           fsr1l	equ	0xFE1
 30352                           indf2	equ	0xFDF
 30353                           postinc2	equ	0xFDE
 30354                           postdec2	equ	0xFDD
 30355                           plusw2	equ	0xFDB
 30356                           fsr2h	equ	0xFDA
 30357                           fsr2l	equ	0xFD9
 30358                           status	equ	0xFD8
 30359                           
 30360 ;; *************** function _GetOsTickCounter *****************
 30361 ;; Defined at:
 30362 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 30363 ;; Parameters:    Size  Location     Type
 30364 ;;		None
 30365 ;; Auto vars:     Size  Location     Type
 30366 ;;		None
 30367 ;; Return value:  Size  Location     Type
 30368 ;;                  4   29[BANK0 ] unsigned long 
 30369 ;; Registers used:
 30370 ;;		None
 30371 ;; Tracked objects:
 30372 ;;		On entry : 0/0
 30373 ;;		On exit  : 0/0
 30374 ;;		Unchanged: 0/0
 30375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30376 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30379 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30380 ;;Total ram usage:        4 bytes
 30381 ;; Hardware stack levels used:    1
 30382 ;; Hardware stack levels required when called:   11
 30383 ;; This function calls:
 30384 ;;		Nothing
 30385 ;; This function is called by:
 30386 ;;		_GetElapsedTime
 30387 ;;		_OsTmr_StartTimer
 30388 ;;		_OsTmr_GetElapsedTime
 30389 ;; This function uses a non-reentrant model
 30390 ;;
 30391                           
 30392                           	psect	text140
 30393  006426                     __ptext140:
 30394                           	opt stack 0
 30395  006426                     _GetOsTickCounter:
 30396                           	opt stack 12
 30397                           
 30398                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 30399                           
 30400                           ; BSR set to: 0
 30401                           ;incstack = 0
 30402  006426  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 30403  00642A  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 30404  00642E  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 30405  006432  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 30406  006436  0012               	return		;funcret
 30407  006438                     __end_of_GetOsTickCounter:
 30408                           	opt stack 0
 30409                           tosu	equ	0xFFF
 30410                           tosh	equ	0xFFE
 30411                           tosl	equ	0xFFD
 30412                           pclath	equ	0xFFA
 30413                           tblptru	equ	0xFF8
 30414                           tblptrh	equ	0xFF7
 30415                           tblptrl	equ	0xFF6
 30416                           tablat	equ	0xFF5
 30417                           prodh	equ	0xFF4
 30418                           prodl	equ	0xFF3
 30419                           intcon	equ	0xFF2
 30420                           intcon2	equ	0xFF1
 30421                           intcon3	equ	0xFF0
 30422                           indf0	equ	0xFEF
 30423                           postinc0	equ	0xFEE
 30424                           plusw0	equ	0xFEB
 30425                           fsr0h	equ	0xFEA
 30426                           fsr0l	equ	0xFE9
 30427                           wreg	equ	0xFE8
 30428                           indf1	equ	0xFE7
 30429                           postinc1	equ	0xFE6
 30430                           postdec1	equ	0xFE5
 30431                           plusw1	equ	0xFE3
 30432                           fsr1h	equ	0xFE2
 30433                           fsr1l	equ	0xFE1
 30434                           indf2	equ	0xFDF
 30435                           postinc2	equ	0xFDE
 30436                           postdec2	equ	0xFDD
 30437                           plusw2	equ	0xFDB
 30438                           fsr2h	equ	0xFDA
 30439                           fsr2l	equ	0xFD9
 30440                           status	equ	0xFD8
 30441                           
 30442 ;; *************** function _ClearBuffer *****************
 30443 ;; Defined at:
 30444 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 30445 ;; Parameters:    Size  Location     Type
 30446 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 30447 ;;		 -> GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_SmsRx(102)
      +, 
 30448 ;;		 -> callerNumber(14), RxBuffer(400), 
 30449 ;;  Len             2   31[BANK0 ] unsigned short 
 30450 ;; Auto vars:     Size  Location     Type
 30451 ;;  Index           2   33[BANK0 ] unsigned short 
 30452 ;; Return value:  Size  Location     Type
 30453 ;;                  1    wreg      void 
 30454 ;; Registers used:
 30455 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30456 ;; Tracked objects:
 30457 ;;		On entry : 0/0
 30458 ;;		On exit  : 0/0
 30459 ;;		Unchanged: 0/0
 30460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30461 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30462 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30464 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30465 ;;Total ram usage:        6 bytes
 30466 ;; Hardware stack levels used:    1
 30467 ;; Hardware stack levels required when called:   11
 30468 ;; This function calls:
 30469 ;;		Nothing
 30470 ;; This function is called by:
 30471 ;;		_GetSmsSm
 30472 ;;		_GetCallerNumber
 30473 ;;		_InitGprsNetwork
 30474 ;;		_HttpGetMethod
 30475 ;;		_GsmGprsTerminal
 30476 ;; This function uses a non-reentrant model
 30477 ;;
 30478                           
 30479                           	psect	text141
 30480  005DAE                     __ptext141:
 30481                           	opt stack 0
 30482  005DAE                     _ClearBuffer:
 30483                           	opt stack 15
 30484                           
 30485                           ;sf.c: 126: UINT16 Index = 0;
 30486                           
 30487                           ;incstack = 0
 30488  005DAE  0E00               	movlw	0
 30489  005DB0  0100               	movlb	0	; () banked
 30490  005DB2  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 30491  005DB4  0E00               	movlw	0
 30492  005DB6  6F81               	movwf	ClearBuffer@Index& (0+255),b
 30493                           
 30494                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 30495  005DB8  0E00               	movlw	0
 30496  005DBA  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 30497  005DBC  0E00               	movlw	0
 30498  005DBE  6F81               	movwf	ClearBuffer@Index& (0+255),b
 30499  005DC0  D00A               	goto	l2250
 30500  005DC2                     
 30501                           ; BSR set to: 0
 30502                           ;sf.c: 130: {
 30503                           ;sf.c: 131: *(Buffer + Index) = 0;
 30504                           
 30505                           ; BSR set to: 0
 30506  005DC2  5181               	movf	ClearBuffer@Index& (0+255),w,b
 30507  005DC4  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 30508  005DC6  6ED9               	movwf	fsr2l,c
 30509  005DC8  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 30510  005DCA  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 30511  005DCC  6EDA               	movwf	fsr2h,c
 30512  005DCE  0E00               	movlw	0
 30513  005DD0  6EDF               	movwf	indf2,c
 30514                           
 30515                           ; BSR set to: 0
 30516  005DD2  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 30517  005DD4  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 30518  005DD6                     l2250:
 30519                           
 30520                           ; BSR set to: 0
 30521                           
 30522                           ; BSR set to: 0
 30523  005DD6  5181               	movf	ClearBuffer@Index& (0+255),w,b
 30524  005DD8  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 30525  005DDA  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 30526  005DDC  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 30527  005DDE  A0D8               	btfss	status,0,c
 30528  005DE0  0012               	return	
 30529  005DE2  D7EF               	goto	l2251
 30530  005DE4                     __end_of_ClearBuffer:
 30531                           	opt stack 0
 30532                           tosu	equ	0xFFF
 30533                           tosh	equ	0xFFE
 30534                           tosl	equ	0xFFD
 30535                           pclath	equ	0xFFA
 30536                           tblptru	equ	0xFF8
 30537                           tblptrh	equ	0xFF7
 30538                           tblptrl	equ	0xFF6
 30539                           tablat	equ	0xFF5
 30540                           prodh	equ	0xFF4
 30541                           prodl	equ	0xFF3
 30542                           intcon	equ	0xFF2
 30543                           intcon2	equ	0xFF1
 30544                           intcon3	equ	0xFF0
 30545                           indf0	equ	0xFEF
 30546                           postinc0	equ	0xFEE
 30547                           plusw0	equ	0xFEB
 30548                           fsr0h	equ	0xFEA
 30549                           fsr0l	equ	0xFE9
 30550                           wreg	equ	0xFE8
 30551                           indf1	equ	0xFE7
 30552                           postinc1	equ	0xFE6
 30553                           postdec1	equ	0xFE5
 30554                           plusw1	equ	0xFE3
 30555                           fsr1h	equ	0xFE2
 30556                           fsr1l	equ	0xFE1
 30557                           indf2	equ	0xFDF
 30558                           postinc2	equ	0xFDE
 30559                           postdec2	equ	0xFDD
 30560                           plusw2	equ	0xFDB
 30561                           fsr2h	equ	0xFDA
 30562                           fsr2l	equ	0xFD9
 30563                           status	equ	0xFD8
 30564                           
 30565 ;; *************** function _LedStateMachine *****************
 30566 ;; Defined at:
 30567 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 30568 ;; Parameters:    Size  Location     Type
 30569 ;;  Led             1    wreg     unsigned char 
 30570 ;;  LedSts          2   47[BANK0 ] PTR enum E8950
 30571 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 30572 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 30573 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 30574 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 30575 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 30576 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 30577 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 30578 ;; Auto vars:     Size  Location     Type
 30579 ;;  Led             1   57[BANK0 ] unsigned char 
 30580 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 30581 ;; Return value:  Size  Location     Type
 30582 ;;                  1    wreg      unsigned char 
 30583 ;; Registers used:
 30584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30585 ;; Tracked objects:
 30586 ;;		On entry : 0/0
 30587 ;;		On exit  : 0/0
 30588 ;;		Unchanged: 0/0
 30589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30590 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30591 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30592 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30593 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30594 ;;Total ram usage:       11 bytes
 30595 ;; Hardware stack levels used:    1
 30596 ;; Hardware stack levels required when called:   13
 30597 ;; This function calls:
 30598 ;;		_LedBlinkStateMachine
 30599 ;;		_LedPulseStateMachine
 30600 ;;		_Led_SetLedStatus
 30601 ;; This function is called by:
 30602 ;;		_Led_MainTask
 30603 ;; This function uses a non-reentrant model
 30604 ;;
 30605                           
 30606                           	psect	text142
 30607  00446E                     __ptext142:
 30608                           	opt stack 0
 30609  00446E                     _LedStateMachine:
 30610                           	opt stack 14
 30611                           
 30612                           ; BSR set to: 0
 30613                           ;incstack = 0
 30614                           ;LedStateMachine@Led stored from wreg
 30615  00446E  0100               	movlb	0	; () banked
 30616  004470  6F99               	movwf	LedStateMachine@Led& (0+255),b
 30617                           
 30618                           ;led.c: 238: UINT8 LedOutSts = 0u;
 30619  004472  0E00               	movlw	0
 30620  004474  0100               	movlb	0	; () banked
 30621  004476  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 30622                           
 30623                           ;led.c: 241: switch (*LedSts)
 30624  004478  D037               	goto	l2109
 30625  00447A                     
 30626                           ; BSR set to: 0
 30627                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 30628                           
 30629                           ; BSR set to: 0
 30630  00447A  0E00               	movlw	0
 30631  00447C  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 30632                           
 30633                           ; BSR set to: 0
 30634                           ;led.c: 246: *LedOut = ((UINT8)(0));
 30635  00447E  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 30636  004482  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 30637  004486  0E00               	movlw	0
 30638  004488  D007               	goto	L52
 30639  00448A                     
 30640                           ; BSR set to: 0
 30641                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 30642                           
 30643                           ; BSR set to: 0
 30644  00448A  0E01               	movlw	1
 30645  00448C  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 30646                           
 30647                           ; BSR set to: 0
 30648                           ;led.c: 252: *LedOut = ((UINT8)(1));
 30649  00448E  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 30650  004492  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 30651  004496  0E01               	movlw	1
 30652  004498                     L52:
 30653  004498  6EDF               	movwf	indf2,c
 30654                           
 30655                           ;led.c: 253: break;
 30656  00449A  D03A               	goto	l2111
 30657  00449C                     
 30658                           ; BSR set to: 0
 30659                           ;led.c: 257: if (*LedOut == 1)
 30660                           
 30661                           ; BSR set to: 0
 30662  00449C  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 30663  0044A0  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 30664  0044A4  04DE               	decf	postinc2,w,c
 30665  0044A6  A4D8               	btfss	status,2,c
 30666  0044A8  D006               	goto	l2114
 30667                           
 30668                           ; BSR set to: 0
 30669                           ;led.c: 258: {
 30670                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 30671  0044AA  0E00               	movlw	0
 30672  0044AC  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 30673  0044AE  5199               	movf	LedStateMachine@Led& (0+255),w,b
 30674  0044B0  EC86  F02F         	call	_Led_SetLedStatus
 30675                           
 30676                           ;led.c: 261: }
 30677  0044B4  D02D               	goto	l2111
 30678  0044B6                     l2114:
 30679                           
 30680                           ;led.c: 262: else
 30681                           ;led.c: 263: {
 30682                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 30683  0044B6  0E01               	movlw	1
 30684  0044B8  0100               	movlb	0	; () banked
 30685  0044BA  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 30686  0044BC  5199               	movf	LedStateMachine@Led& (0+255),w,b
 30687  0044BE  EC86  F02F         	call	_Led_SetLedStatus
 30688                           
 30689                           ;led.c: 266: }
 30690                           ;led.c: 267: break;
 30691  0044C2  D026               	goto	l2111
 30692  0044C4                     
 30693                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 30694  0044C4  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 30695  0044C8  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 30696  0044CC  ECBF  F012         	call	_LedBlinkStateMachine	;wreg free
 30697  0044D0  D008               	goto	L53
 30698  0044D2                     
 30699                           ; BSR set to: 0
 30700                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 30701                           
 30702                           ; BSR set to: 0
 30703  0044D2  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 30704  0044D6  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 30705  0044DA  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 30706  0044DE  EC2F  F019         	call	_LedPulseStateMachine	;wreg free
 30707  0044E2                     L53:
 30708  0044E2  0100               	movlb	0	; () banked
 30709  0044E4  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 30710                           
 30711                           ; BSR set to: 0
 30712                           ;led.c: 281: }
 30713                           
 30714                           ; BSR set to: 0
 30715                           ;led.c: 280: break;
 30716                           
 30717                           ;led.c: 279: default:
 30718                           
 30719                           ;led.c: 277: break;
 30720  0044E6  D014               	goto	l2111
 30721  0044E8                     l2109:
 30722                           
 30723                           ; BSR set to: 0
 30724                           
 30725                           ; BSR set to: 0
 30726  0044E8  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 30727  0044EC  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 30728  0044F0  50DF               	movf	indf2,w,c
 30729                           
 30730                           ; Switch size 1, requested type "space"
 30731                           ; Number of cases is 5, Range of values is 0 to 4
 30732                           ; switch strategies available:
 30733                           ; Name         Instructions Cycles
 30734                           ; simple_byte           16     9 (average)
 30735                           ;	Chosen strategy is simple_byte
 30736  0044F2  0A00               	xorlw	0	; case 0
 30737  0044F4  B4D8               	btfsc	status,2,c
 30738  0044F6  D7C1               	goto	l2110
 30739  0044F8  0A01               	xorlw	1	; case 1
 30740  0044FA  B4D8               	btfsc	status,2,c
 30741  0044FC  D7C6               	goto	l2112
 30742  0044FE  0A03               	xorlw	3	; case 2
 30743  004500  B4D8               	btfsc	status,2,c
 30744  004502  D7CC               	goto	l2113
 30745  004504  0A01               	xorlw	1	; case 3
 30746  004506  B4D8               	btfsc	status,2,c
 30747  004508  D7DD               	goto	l2116
 30748  00450A  0A07               	xorlw	7	; case 4
 30749  00450C  B4D8               	btfsc	status,2,c
 30750  00450E  D7E1               	goto	l2117
 30751  004510                     l2111:
 30752                           
 30753                           ;led.c: 283: return LedOutSts;
 30754                           
 30755                           ; BSR set to: 0
 30756  004510  0100               	movlb	0	; () banked
 30757  004512  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 30758  004514  0012               	return	
 30759  004516                     __end_of_LedStateMachine:
 30760                           	opt stack 0
 30761                           tosu	equ	0xFFF
 30762                           tosh	equ	0xFFE
 30763                           tosl	equ	0xFFD
 30764                           pclath	equ	0xFFA
 30765                           tblptru	equ	0xFF8
 30766                           tblptrh	equ	0xFF7
 30767                           tblptrl	equ	0xFF6
 30768                           tablat	equ	0xFF5
 30769                           prodh	equ	0xFF4
 30770                           prodl	equ	0xFF3
 30771                           intcon	equ	0xFF2
 30772                           intcon2	equ	0xFF1
 30773                           intcon3	equ	0xFF0
 30774                           indf0	equ	0xFEF
 30775                           postinc0	equ	0xFEE
 30776                           plusw0	equ	0xFEB
 30777                           fsr0h	equ	0xFEA
 30778                           fsr0l	equ	0xFE9
 30779                           wreg	equ	0xFE8
 30780                           indf1	equ	0xFE7
 30781                           postinc1	equ	0xFE6
 30782                           postdec1	equ	0xFE5
 30783                           plusw1	equ	0xFE3
 30784                           fsr1h	equ	0xFE2
 30785                           fsr1l	equ	0xFE1
 30786                           indf2	equ	0xFDF
 30787                           postinc2	equ	0xFDE
 30788                           postdec2	equ	0xFDD
 30789                           plusw2	equ	0xFDB
 30790                           fsr2h	equ	0xFDA
 30791                           fsr2l	equ	0xFD9
 30792                           status	equ	0xFD8
 30793                           
 30794 ;; *************** function _LedPulseStateMachine *****************
 30795 ;; Defined at:
 30796 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 30797 ;; Parameters:    Size  Location     Type
 30798 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 30799 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 30800 ;;  Led             1   44[BANK0 ] unsigned char 
 30801 ;; Auto vars:     Size  Location     Type
 30802 ;;		None
 30803 ;; Return value:  Size  Location     Type
 30804 ;;                  1    wreg      unsigned char 
 30805 ;; Registers used:
 30806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30807 ;; Tracked objects:
 30808 ;;		On entry : 0/0
 30809 ;;		On exit  : 0/0
 30810 ;;		Unchanged: 0/0
 30811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30812 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30814 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30815 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30816 ;;Total ram usage:        5 bytes
 30817 ;; Hardware stack levels used:    1
 30818 ;; Hardware stack levels required when called:   12
 30819 ;; This function calls:
 30820 ;;		_Led_SetLedStatus
 30821 ;;		___lwdiv
 30822 ;; This function is called by:
 30823 ;;		_LedStateMachine
 30824 ;; This function uses a non-reentrant model
 30825 ;;
 30826                           
 30827                           	psect	text143
 30828  00325E                     __ptext143:
 30829                           	opt stack 0
 30830  00325E                     _LedPulseStateMachine:
 30831                           	opt stack 14
 30832                           
 30833                           ;led.c: 185: switch (LedPulse->LedPulseState)
 30834                           
 30835                           ; BSR set to: 0
 30836                           ;incstack = 0
 30837  00325E  D05C               	goto	l2099
 30838  003260                     
 30839                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 30840  003260  0100               	movlb	0	; () banked
 30841  003262  EE20 F001          	lfsr	2,1
 30842  003266  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30843  003268  26D9               	addwf	fsr2l,f,c
 30844  00326A  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30845  00326C  22DA               	addwfc	fsr2h,f,c
 30846  00326E  0E01               	movlw	1
 30847  003270  6EDF               	movwf	indf2,c
 30848                           
 30849                           ; BSR set to: 0
 30850                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 30851  003272  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 30852  003276  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 30853  00327A  0E01               	movlw	1
 30854  00327C  D036               	goto	L54
 30855  00327E                     
 30856                           ;led.c: 196: LedPulse->LedPulseCounter++;
 30857                           
 30858                           ; BSR set to: 0
 30859  00327E  0100               	movlb	0	; () banked
 30860  003280  EE20 F002          	lfsr	2,2
 30861  003284  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30862  003286  26D9               	addwf	fsr2l,f,c
 30863  003288  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30864  00328A  22DA               	addwfc	fsr2h,f,c
 30865  00328C  2ADE               	incf	postinc2,f,c
 30866  00328E  0E00               	movlw	0
 30867  003290  22DD               	addwfc	postdec2,f,c
 30868                           
 30869                           ; BSR set to: 0
 30870                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 30871  003292  EE20 F004          	lfsr	2,4
 30872  003296  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30873  003298  26D9               	addwf	fsr2l,f,c
 30874  00329A  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30875  00329C  22DA               	addwfc	fsr2h,f,c
 30876  00329E  CFDE F083          	movff	postinc2,___lwdiv@dividend
 30877  0032A2  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 30878  0032A6  0E00               	movlw	0
 30879  0032A8  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 30880  0032AA  0E32               	movlw	50
 30881  0032AC  6F85               	movwf	___lwdiv@divisor& (0+255),b
 30882  0032AE  ECE0  F02A         	call	___lwdiv	;wreg free
 30883  0032B2  0100               	movlb	0	; () banked
 30884  0032B4  EE20 F002          	lfsr	2,2
 30885  0032B8  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30886  0032BA  26D9               	addwf	fsr2l,f,c
 30887  0032BC  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30888  0032BE  22DA               	addwfc	fsr2h,f,c
 30889  0032C0  5183               	movf	?___lwdiv& (0+255),w,b
 30890  0032C2  5CDE               	subwf	postinc2,w,c
 30891  0032C4  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 30892  0032C6  58DE               	subwfb	postinc2,w,c
 30893  0032C8  A0D8               	btfss	status,0,c
 30894  0032CA  D034               	goto	l2101
 30895                           
 30896                           ; BSR set to: 0
 30897                           ;led.c: 199: {
 30898                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 30899  0032CC  EE20 F002          	lfsr	2,2
 30900  0032D0  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30901  0032D2  26D9               	addwf	fsr2l,f,c
 30902  0032D4  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30903  0032D6  22DA               	addwfc	fsr2h,f,c
 30904  0032D8  0E00               	movlw	0
 30905  0032DA  6EDE               	movwf	postinc2,c
 30906  0032DC  0E00               	movlw	0
 30907  0032DE  6EDD               	movwf	postdec2,c
 30908                           
 30909                           ; BSR set to: 0
 30910                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 30911  0032E0  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 30912  0032E4  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 30913  0032E8  0E02               	movlw	2
 30914  0032EA                     L54:
 30915  0032EA  6EDF               	movwf	indf2,c
 30916                           
 30917                           ; BSR set to: 0
 30918                           ;led.c: 204: }
 30919                           ;led.c: 205: break;
 30920  0032EC  D023               	goto	l2101
 30921  0032EE                     
 30922                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 30923                           
 30924                           ; BSR set to: 0
 30925  0032EE  0100               	movlb	0	; () banked
 30926  0032F0  EE20 F001          	lfsr	2,1
 30927  0032F4  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30928  0032F6  26D9               	addwf	fsr2l,f,c
 30929  0032F8  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30930  0032FA  22DA               	addwfc	fsr2h,f,c
 30931  0032FC  0E00               	movlw	0
 30932  0032FE  6EDF               	movwf	indf2,c
 30933                           
 30934                           ; BSR set to: 0
 30935                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 30936  003300  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 30937  003304  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 30938  003308  0E00               	movlw	0
 30939  00330A  6EDF               	movwf	indf2,c
 30940                           
 30941                           ; BSR set to: 0
 30942                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 30943  00330C  0E00               	movlw	0
 30944  00330E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 30945  003310  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 30946  003312  EC86  F02F         	call	_Led_SetLedStatus
 30947                           
 30948                           ;led.c: 218: }
 30949                           
 30950                           ;led.c: 217: break;
 30951                           
 30952                           ;led.c: 216: default:
 30953                           
 30954                           ;led.c: 214: break;
 30955  003316  D00E               	goto	l2101
 30956  003318                     l2099:
 30957  003318  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 30958  00331C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 30959  003320  50DF               	movf	indf2,w,c
 30960                           
 30961                           ; Switch size 1, requested type "space"
 30962                           ; Number of cases is 3, Range of values is 0 to 2
 30963                           ; switch strategies available:
 30964                           ; Name         Instructions Cycles
 30965                           ; simple_byte           10     6 (average)
 30966                           ;	Chosen strategy is simple_byte
 30967  003322  0A00               	xorlw	0	; case 0
 30968  003324  B4D8               	btfsc	status,2,c
 30969  003326  D79C               	goto	l2100
 30970  003328  0A01               	xorlw	1	; case 1
 30971  00332A  B4D8               	btfsc	status,2,c
 30972  00332C  D7A8               	goto	l2102
 30973  00332E  0A03               	xorlw	3	; case 2
 30974  003330  B4D8               	btfsc	status,2,c
 30975  003332  D7DD               	goto	l2104
 30976  003334                     l2101:
 30977                           
 30978                           ;led.c: 221: return (LedPulse->LedOutState);
 30979  003334  0100               	movlb	0	; () banked
 30980  003336  EE20 F001          	lfsr	2,1
 30981  00333A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30982  00333C  26D9               	addwf	fsr2l,f,c
 30983  00333E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30984  003340  22DA               	addwfc	fsr2h,f,c
 30985  003342  50DF               	movf	indf2,w,c
 30986  003344  0012               	return	
 30987  003346                     __end_of_LedPulseStateMachine:
 30988                           	opt stack 0
 30989                           tosu	equ	0xFFF
 30990                           tosh	equ	0xFFE
 30991                           tosl	equ	0xFFD
 30992                           pclath	equ	0xFFA
 30993                           tblptru	equ	0xFF8
 30994                           tblptrh	equ	0xFF7
 30995                           tblptrl	equ	0xFF6
 30996                           tablat	equ	0xFF5
 30997                           prodh	equ	0xFF4
 30998                           prodl	equ	0xFF3
 30999                           intcon	equ	0xFF2
 31000                           intcon2	equ	0xFF1
 31001                           intcon3	equ	0xFF0
 31002                           indf0	equ	0xFEF
 31003                           postinc0	equ	0xFEE
 31004                           plusw0	equ	0xFEB
 31005                           fsr0h	equ	0xFEA
 31006                           fsr0l	equ	0xFE9
 31007                           wreg	equ	0xFE8
 31008                           indf1	equ	0xFE7
 31009                           postinc1	equ	0xFE6
 31010                           postdec1	equ	0xFE5
 31011                           plusw1	equ	0xFE3
 31012                           fsr1h	equ	0xFE2
 31013                           fsr1l	equ	0xFE1
 31014                           indf2	equ	0xFDF
 31015                           postinc2	equ	0xFDE
 31016                           postdec2	equ	0xFDD
 31017                           plusw2	equ	0xFDB
 31018                           fsr2h	equ	0xFDA
 31019                           fsr2l	equ	0xFD9
 31020                           status	equ	0xFD8
 31021                           
 31022 ;; *************** function _Led_SetLedStatus *****************
 31023 ;; Defined at:
 31024 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 31025 ;; Parameters:    Size  Location     Type
 31026 ;;  Led             1    wreg     unsigned char 
 31027 ;;  LedSts          1   29[BANK0 ] enum E8950
 31028 ;; Auto vars:     Size  Location     Type
 31029 ;;  Led             1   30[BANK0 ] unsigned char 
 31030 ;; Return value:  Size  Location     Type
 31031 ;;                  1    wreg      void 
 31032 ;; Registers used:
 31033 ;;		wreg, status,2, status,0
 31034 ;; Tracked objects:
 31035 ;;		On entry : 0/0
 31036 ;;		On exit  : 0/0
 31037 ;;		Unchanged: 0/0
 31038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31039 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31042 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31043 ;;Total ram usage:        2 bytes
 31044 ;; Hardware stack levels used:    1
 31045 ;; Hardware stack levels required when called:   11
 31046 ;; This function calls:
 31047 ;;		Nothing
 31048 ;; This function is called by:
 31049 ;;		_LedPulseStateMachine
 31050 ;;		_LedStateMachine
 31051 ;;		_MyApp_Task
 31052 ;;		_waitSetupCall
 31053 ;;		_blinkForSeconds
 31054 ;; This function uses a non-reentrant model
 31055 ;;
 31056                           
 31057                           	psect	text144
 31058  005F0C                     __ptext144:
 31059                           	opt stack 0
 31060  005F0C                     _Led_SetLedStatus:
 31061                           	opt stack 15
 31062                           
 31063                           ; BSR set to: 0
 31064                           ;incstack = 0
 31065                           ;Led_SetLedStatus@Led stored from wreg
 31066  005F0C  0100               	movlb	0	; () banked
 31067  005F0E  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 31068                           
 31069                           ;led.c: 341: switch (Led)
 31070  005F10  D009               	goto	l2130
 31071  005F12                     l2131:
 31072                           
 31073                           ; BSR set to: 0
 31074                           ;led.c: 344: Led1Sts = LedSts;
 31075  005F12  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 31076                           
 31077                           ;led.c: 345: break;
 31078  005F16  0012               	return	
 31079  005F18                     l2133:
 31080                           
 31081                           ; BSR set to: 0
 31082                           ;led.c: 348: Led2Sts = LedSts;
 31083  005F18  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 31084                           
 31085                           ;led.c: 349: break;
 31086  005F1C  0012               	return	
 31087  005F1E                     l2134:
 31088                           
 31089                           ; BSR set to: 0
 31090                           ;led.c: 352: Led3Sts = LedSts;
 31091  005F1E  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 31092                           
 31093                           ; BSR set to: 0
 31094                           ;led.c: 357: }
 31095                           
 31096                           ; BSR set to: 0
 31097                           ;led.c: 356: break;
 31098                           
 31099                           ;led.c: 355: default:
 31100                           
 31101                           ;led.c: 353: break;
 31102  005F22  0012               	return	
 31103  005F24                     l2130:
 31104                           
 31105                           ; BSR set to: 0
 31106  005F24  0100               	movlb	0	; () banked
 31107  005F26  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 31108                           
 31109                           ; Switch size 1, requested type "space"
 31110                           ; Number of cases is 3, Range of values is 1 to 3
 31111                           ; switch strategies available:
 31112                           ; Name         Instructions Cycles
 31113                           ; simple_byte           10     6 (average)
 31114                           ;	Chosen strategy is simple_byte
 31115  005F28  0A01               	xorlw	1	; case 1
 31116  005F2A  B4D8               	btfsc	status,2,c
 31117  005F2C  D7F2               	goto	l2131
 31118  005F2E  0A03               	xorlw	3	; case 2
 31119  005F30  B4D8               	btfsc	status,2,c
 31120  005F32  D7F2               	goto	l2133
 31121  005F34  0A01               	xorlw	1	; case 3
 31122  005F36  A4D8               	btfss	status,2,c
 31123  005F38  0012               	return	
 31124  005F3A  D7F1               	goto	l2134
 31125  005F3C                     __end_of_Led_SetLedStatus:
 31126                           	opt stack 0
 31127                           tosu	equ	0xFFF
 31128                           tosh	equ	0xFFE
 31129                           tosl	equ	0xFFD
 31130                           pclath	equ	0xFFA
 31131                           tblptru	equ	0xFF8
 31132                           tblptrh	equ	0xFF7
 31133                           tblptrl	equ	0xFF6
 31134                           tablat	equ	0xFF5
 31135                           prodh	equ	0xFF4
 31136                           prodl	equ	0xFF3
 31137                           intcon	equ	0xFF2
 31138                           intcon2	equ	0xFF1
 31139                           intcon3	equ	0xFF0
 31140                           indf0	equ	0xFEF
 31141                           postinc0	equ	0xFEE
 31142                           plusw0	equ	0xFEB
 31143                           fsr0h	equ	0xFEA
 31144                           fsr0l	equ	0xFE9
 31145                           wreg	equ	0xFE8
 31146                           indf1	equ	0xFE7
 31147                           postinc1	equ	0xFE6
 31148                           postdec1	equ	0xFE5
 31149                           plusw1	equ	0xFE3
 31150                           fsr1h	equ	0xFE2
 31151                           fsr1l	equ	0xFE1
 31152                           indf2	equ	0xFDF
 31153                           postinc2	equ	0xFDE
 31154                           postdec2	equ	0xFDD
 31155                           plusw2	equ	0xFDB
 31156                           fsr2h	equ	0xFDA
 31157                           fsr2l	equ	0xFD9
 31158                           status	equ	0xFD8
 31159                           
 31160 ;; *************** function _LedBlinkStateMachine *****************
 31161 ;; Defined at:
 31162 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 31163 ;; Parameters:    Size  Location     Type
 31164 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 31165 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 31166 ;; Auto vars:     Size  Location     Type
 31167 ;;		None
 31168 ;; Return value:  Size  Location     Type
 31169 ;;                  1    wreg      unsigned char 
 31170 ;; Registers used:
 31171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 31172 ;; Tracked objects:
 31173 ;;		On entry : 0/0
 31174 ;;		On exit  : 0/0
 31175 ;;		Unchanged: 0/0
 31176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31177 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31179 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31180 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31181 ;;Total ram usage:        4 bytes
 31182 ;; Hardware stack levels used:    1
 31183 ;; Hardware stack levels required when called:   12
 31184 ;; This function calls:
 31185 ;;		___lwdiv
 31186 ;; This function is called by:
 31187 ;;		_LedStateMachine
 31188 ;; This function uses a non-reentrant model
 31189 ;;
 31190                           
 31191                           	psect	text145
 31192  00257E                     __ptext145:
 31193                           	opt stack 0
 31194  00257E                     _LedBlinkStateMachine:
 31195                           	opt stack 14
 31196                           
 31197                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 31198                           
 31199                           ; BSR set to: 0
 31200                           ;incstack = 0
 31201  00257E  D08F               	goto	l2086
 31202  002580                     
 31203                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 31204  002580  0100               	movlb	0	; () banked
 31205  002582  EE20 F008          	lfsr	2,8
 31206  002586  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 31207  002588  26D9               	addwf	fsr2l,f,c
 31208  00258A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 31209  00258C  22DA               	addwfc	fsr2h,f,c
 31210  00258E  EE10 F001          	lfsr	1,1
 31211  002592  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 31212  002594  26E1               	addwf	fsr1l,f,c
 31213  002596  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 31214  002598  22E2               	addwfc	fsr1h,f,c
 31215  00259A  CFDF FFE7          	movff	indf2,indf1
 31216                           
 31217                           ; BSR set to: 0
 31218                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 31219  00259E  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 31220  0025A2  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 31221  0025A6  D040               	goto	L55
 31222  0025A8                     
 31223                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 31224                           
 31225                           ; BSR set to: 0
 31226  0025A8  0100               	movlb	0	; () banked
 31227  0025AA  EE20 F002          	lfsr	2,2
 31228  0025AE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 31229  0025B0  26D9               	addwf	fsr2l,f,c
 31230  0025B2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 31231  0025B4  22DA               	addwfc	fsr2h,f,c
 31232  0025B6  2ADE               	incf	postinc2,f,c
 31233  0025B8  0E00               	movlw	0
 31234  0025BA  22DD               	addwfc	postdec2,f,c
 31235                           
 31236                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 31237  0025BC  EE20 F001          	lfsr	2,1
 31238  0025C0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 31239  0025C2  26D9               	addwf	fsr2l,f,c
 31240  0025C4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 31241  0025C6  22DA               	addwfc	fsr2h,f,c
 31242  0025C8  50DF               	movf	indf2,w,c
 31243  0025CA  A4D8               	btfss	status,2,c
 31244  0025CC  D02F               	goto	l2090
 31245                           
 31246                           ; BSR set to: 0
 31247                           ;led.c: 142: {
 31248                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 31249  0025CE  EE20 F006          	lfsr	2,6
 31250  0025D2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 31251  0025D4  26D9               	addwf	fsr2l,f,c
 31252  0025D6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 31253  0025D8  22DA               	addwfc	fsr2h,f,c
 31254  0025DA  CFDE F083          	movff	postinc2,___lwdiv@dividend
 31255  0025DE  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 31256  0025E2  0E00               	movlw	0
 31257  0025E4  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 31258  0025E6  0E32               	movlw	50
 31259  0025E8  6F85               	movwf	___lwdiv@divisor& (0+255),b
 31260  0025EA  ECE0  F02A         	call	___lwdiv	;wreg free
 31261  0025EE  0100               	movlb	0	; () banked
 31262  0025F0  EE20 F002          	lfsr	2,2
 31263  0025F4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 31264  0025F6  26D9               	addwf	fsr2l,f,c
 31265  0025F8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 31266  0025FA  22DA               	addwfc	fsr2h,f,c
 31267  0025FC  5183               	movf	?___lwdiv& (0+255),w,b
 31268  0025FE  5CDE               	subwf	postinc2,w,c
 31269  002600  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 31270  002602  58DE               	subwfb	postinc2,w,c
 31271  002604  A0D8               	btfss	status,0,c
 31272  002606  D056               	goto	l2088
 31273                           
 31274                           ; BSR set to: 0
 31275                           ;led.c: 145: {
 31276                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 31277  002608  EE20 F002          	lfsr	2,2
 31278  00260C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 31279  00260E  26D9               	addwf	fsr2l,f,c
 31280  002610  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 31281  002612  22DA               	addwfc	fsr2h,f,c
 31282  002614  0E00               	movlw	0
 31283  002616  6EDE               	movwf	postinc2,c
 31284  002618  0E00               	movlw	0
 31285  00261A  6EDD               	movwf	postdec2,c
 31286                           
 31287                           ;led.c: 149: LedBlink->LedOutState = OnState;
 31288  00261C  EE20 F001          	lfsr	2,1
 31289  002620  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 31290  002622  26D9               	addwf	fsr2l,f,c
 31291  002624  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 31292  002626  22DA               	addwfc	fsr2h,f,c
 31293  002628                     L55:
 31294  002628  0E01               	movlw	1
 31295  00262A  D037               	goto	L56
 31296  00262C                     l2090:
 31297                           
 31298                           ; BSR set to: 0
 31299                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 31300                           
 31301                           ; BSR set to: 0
 31302  00262C  EE20 F001          	lfsr	2,1
 31303  002630  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 31304  002632  26D9               	addwf	fsr2l,f,c
 31305  002634  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 31306  002636  22DA               	addwfc	fsr2h,f,c
 31307  002638  04DE               	decf	postinc2,w,c
 31308  00263A  A4D8               	btfss	status,2,c
 31309  00263C  D03B               	goto	l2088
 31310                           
 31311                           ; BSR set to: 0
 31312                           ;led.c: 153: {
 31313                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 31314  00263E  EE20 F004          	lfsr	2,4
 31315  002642  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 31316  002644  26D9               	addwf	fsr2l,f,c
 31317  002646  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 31318  002648  22DA               	addwfc	fsr2h,f,c
 31319  00264A  CFDE F083          	movff	postinc2,___lwdiv@dividend
 31320  00264E  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 31321  002652  0E00               	movlw	0
 31322  002654  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 31323  002656  0E32               	movlw	50
 31324  002658  6F85               	movwf	___lwdiv@divisor& (0+255),b
 31325  00265A  ECE0  F02A         	call	___lwdiv	;wreg free
 31326  00265E  0100               	movlb	0	; () banked
 31327  002660  EE20 F002          	lfsr	2,2
 31328  002664  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 31329  002666  26D9               	addwf	fsr2l,f,c
 31330  002668  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 31331  00266A  22DA               	addwfc	fsr2h,f,c
 31332  00266C  5183               	movf	?___lwdiv& (0+255),w,b
 31333  00266E  5CDE               	subwf	postinc2,w,c
 31334  002670  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 31335  002672  58DE               	subwfb	postinc2,w,c
 31336  002674  A0D8               	btfss	status,0,c
 31337  002676  D01E               	goto	l2088
 31338                           
 31339                           ; BSR set to: 0
 31340                           ;led.c: 156: {
 31341                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 31342  002678  EE20 F002          	lfsr	2,2
 31343  00267C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 31344  00267E  26D9               	addwf	fsr2l,f,c
 31345  002680  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 31346  002682  22DA               	addwfc	fsr2h,f,c
 31347  002684  0E00               	movlw	0
 31348  002686  6EDE               	movwf	postinc2,c
 31349  002688  0E00               	movlw	0
 31350  00268A  6EDD               	movwf	postdec2,c
 31351                           
 31352                           ;led.c: 160: LedBlink->LedOutState = OffState;
 31353  00268C  EE20 F001          	lfsr	2,1
 31354  002690  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 31355  002692  26D9               	addwf	fsr2l,f,c
 31356  002694  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 31357  002696  22DA               	addwfc	fsr2h,f,c
 31358  002698  0E00               	movlw	0
 31359  00269A                     L56:
 31360  00269A  6EDF               	movwf	indf2,c
 31361                           
 31362                           ; BSR set to: 0
 31363                           ;led.c: 167: }
 31364                           
 31365                           ; BSR set to: 0
 31366                           ;led.c: 166: break;
 31367                           
 31368                           ;led.c: 165: default:
 31369                           
 31370                           ; BSR set to: 0
 31371                           ;led.c: 161: }
 31372                           ;led.c: 162: }
 31373                           ;led.c: 163: break;
 31374                           
 31375                           ; BSR set to: 0
 31376                           
 31377                           ; BSR set to: 0
 31378  00269C  D00B               	goto	l2088
 31379  00269E                     l2086:
 31380                           
 31381                           ; BSR set to: 0
 31382  00269E  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 31383  0026A2  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 31384  0026A6  50DF               	movf	indf2,w,c
 31385                           
 31386                           ; Switch size 1, requested type "space"
 31387                           ; Number of cases is 2, Range of values is 0 to 1
 31388                           ; switch strategies available:
 31389                           ; Name         Instructions Cycles
 31390                           ; simple_byte            7     4 (average)
 31391                           ;	Chosen strategy is simple_byte
 31392  0026A8  0A00               	xorlw	0	; case 0
 31393  0026AA  B4D8               	btfsc	status,2,c
 31394  0026AC  D769               	goto	l2087
 31395  0026AE  0A01               	xorlw	1	; case 1
 31396  0026B0  B4D8               	btfsc	status,2,c
 31397  0026B2  D77A               	goto	l2089
 31398  0026B4                     l2088:
 31399                           
 31400                           ;led.c: 170: return (LedBlink->LedOutState);
 31401  0026B4  0100               	movlb	0	; () banked
 31402  0026B6  EE20 F001          	lfsr	2,1
 31403  0026BA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 31404  0026BC  26D9               	addwf	fsr2l,f,c
 31405  0026BE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 31406  0026C0  22DA               	addwfc	fsr2h,f,c
 31407  0026C2  50DF               	movf	indf2,w,c
 31408  0026C4  0012               	return	
 31409  0026C6                     __end_of_LedBlinkStateMachine:
 31410                           	opt stack 0
 31411                           tosu	equ	0xFFF
 31412                           tosh	equ	0xFFE
 31413                           tosl	equ	0xFFD
 31414                           pclath	equ	0xFFA
 31415                           tblptru	equ	0xFF8
 31416                           tblptrh	equ	0xFF7
 31417                           tblptrl	equ	0xFF6
 31418                           tablat	equ	0xFF5
 31419                           prodh	equ	0xFF4
 31420                           prodl	equ	0xFF3
 31421                           intcon	equ	0xFF2
 31422                           intcon2	equ	0xFF1
 31423                           intcon3	equ	0xFF0
 31424                           indf0	equ	0xFEF
 31425                           postinc0	equ	0xFEE
 31426                           plusw0	equ	0xFEB
 31427                           fsr0h	equ	0xFEA
 31428                           fsr0l	equ	0xFE9
 31429                           wreg	equ	0xFE8
 31430                           indf1	equ	0xFE7
 31431                           postinc1	equ	0xFE6
 31432                           postdec1	equ	0xFE5
 31433                           plusw1	equ	0xFE3
 31434                           fsr1h	equ	0xFE2
 31435                           fsr1l	equ	0xFE1
 31436                           indf2	equ	0xFDF
 31437                           postinc2	equ	0xFDE
 31438                           postdec2	equ	0xFDD
 31439                           plusw2	equ	0xFDB
 31440                           fsr2h	equ	0xFDA
 31441                           fsr2l	equ	0xFD9
 31442                           status	equ	0xFD8
 31443                           
 31444 ;; *************** function ___lwdiv *****************
 31445 ;; Defined at:
 31446 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 31447 ;; Parameters:    Size  Location     Type
 31448 ;;  dividend        2   35[BANK0 ] unsigned int 
 31449 ;;  divisor         2   37[BANK0 ] unsigned int 
 31450 ;; Auto vars:     Size  Location     Type
 31451 ;;  quotient        2   40[BANK0 ] unsigned int 
 31452 ;;  counter         1   39[BANK0 ] unsigned char 
 31453 ;; Return value:  Size  Location     Type
 31454 ;;                  2   35[BANK0 ] unsigned int 
 31455 ;; Registers used:
 31456 ;;		wreg, status,2, status,0
 31457 ;; Tracked objects:
 31458 ;;		On entry : 0/0
 31459 ;;		On exit  : 0/0
 31460 ;;		Unchanged: 0/0
 31461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31462 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31463 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31465 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31466 ;;Total ram usage:        7 bytes
 31467 ;; Hardware stack levels used:    1
 31468 ;; Hardware stack levels required when called:   11
 31469 ;; This function calls:
 31470 ;;		Nothing
 31471 ;; This function is called by:
 31472 ;;		_LedBlinkStateMachine
 31473 ;;		_LedPulseStateMachine
 31474 ;;		_secondsAppTimer
 31475 ;;		_utoa
 31476 ;; This function uses a non-reentrant model
 31477 ;;
 31478                           
 31479                           	psect	text146
 31480  0055C0                     __ptext146:
 31481                           	opt stack 0
 31482  0055C0                     ___lwdiv:
 31483                           	opt stack 14
 31484                           
 31485                           ; BSR set to: 0
 31486                           ;incstack = 0
 31487  0055C0  0E00               	movlw	0
 31488  0055C2  0100               	movlb	0	; () banked
 31489  0055C4  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 31490  0055C6  0E00               	movlw	0
 31491  0055C8  6F88               	movwf	___lwdiv@quotient& (0+255),b
 31492                           
 31493                           ; BSR set to: 0
 31494  0055CA  5185               	movf	___lwdiv@divisor& (0+255),w,b
 31495  0055CC  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 31496  0055CE  B4D8               	btfsc	status,2,c
 31497  0055D0  D01C               	goto	l3186
 31498                           
 31499                           ; BSR set to: 0
 31500  0055D2  0E01               	movlw	1
 31501  0055D4  6F87               	movwf	___lwdiv@counter& (0+255),b
 31502  0055D6  D004               	goto	l3181
 31503  0055D8                     
 31504                           ; BSR set to: 0
 31505                           
 31506                           ; BSR set to: 0
 31507  0055D8  90D8               	bcf	status,0,c
 31508  0055DA  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 31509  0055DC  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 31510  0055DE  2B87               	incf	___lwdiv@counter& (0+255),f,b
 31511  0055E0                     l3181:
 31512                           
 31513                           ; BSR set to: 0
 31514                           
 31515                           ; BSR set to: 0
 31516  0055E0  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 31517  0055E2  D7FA               	goto	l3182
 31518  0055E4                     u11180:
 31519                           
 31520                           ; BSR set to: 0
 31521                           
 31522                           ; BSR set to: 0
 31523                           
 31524                           ; BSR set to: 0
 31525  0055E4  90D8               	bcf	status,0,c
 31526  0055E6  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 31527  0055E8  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 31528                           
 31529                           ; BSR set to: 0
 31530  0055EA  5185               	movf	___lwdiv@divisor& (0+255),w,b
 31531  0055EC  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 31532  0055EE  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 31533  0055F0  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 31534  0055F2  A0D8               	btfss	status,0,c
 31535  0055F4  D005               	goto	l3185
 31536                           
 31537                           ; BSR set to: 0
 31538  0055F6  5185               	movf	___lwdiv@divisor& (0+255),w,b
 31539  0055F8  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 31540  0055FA  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 31541  0055FC  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 31542                           
 31543                           ; BSR set to: 0
 31544  0055FE  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 31545  005600                     l3185:
 31546                           
 31547                           ; BSR set to: 0
 31548                           
 31549                           ; BSR set to: 0
 31550  005600  90D8               	bcf	status,0,c
 31551  005602  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 31552  005604  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 31553                           
 31554                           ; BSR set to: 0
 31555  005606  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 31556  005608  D7ED               	goto	u11180
 31557  00560A                     l3186:
 31558                           
 31559                           ; BSR set to: 0
 31560                           
 31561                           ; BSR set to: 0
 31562  00560A  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 31563  00560E  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 31564                           
 31565                           ; BSR set to: 0
 31566  005612  0012               	return		;funcret
 31567  005614                     __end_of___lwdiv:
 31568                           	opt stack 0
 31569                           tosu	equ	0xFFF
 31570                           tosh	equ	0xFFE
 31571                           tosl	equ	0xFFD
 31572                           pclath	equ	0xFFA
 31573                           tblptru	equ	0xFF8
 31574                           tblptrh	equ	0xFF7
 31575                           tblptrl	equ	0xFF6
 31576                           tablat	equ	0xFF5
 31577                           prodh	equ	0xFF4
 31578                           prodl	equ	0xFF3
 31579                           intcon	equ	0xFF2
 31580                           intcon2	equ	0xFF1
 31581                           intcon3	equ	0xFF0
 31582                           indf0	equ	0xFEF
 31583                           postinc0	equ	0xFEE
 31584                           plusw0	equ	0xFEB
 31585                           fsr0h	equ	0xFEA
 31586                           fsr0l	equ	0xFE9
 31587                           wreg	equ	0xFE8
 31588                           indf1	equ	0xFE7
 31589                           postinc1	equ	0xFE6
 31590                           postdec1	equ	0xFE5
 31591                           plusw1	equ	0xFE3
 31592                           fsr1h	equ	0xFE2
 31593                           fsr1l	equ	0xFE1
 31594                           indf2	equ	0xFDF
 31595                           postinc2	equ	0xFDE
 31596                           postdec2	equ	0xFDD
 31597                           plusw2	equ	0xFDB
 31598                           fsr2h	equ	0xFDA
 31599                           fsr2l	equ	0xFD9
 31600                           status	equ	0xFD8
 31601                           
 31602 ;; *************** function _OsAlrm_SetOsAlarm *****************
 31603 ;; Defined at:
 31604 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 31605 ;; Parameters:    Size  Location     Type
 31606 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 31607 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 31608 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 31609 ;;		 -> I2cDummyTx(1), 
 31610 ;; Auto vars:     Size  Location     Type
 31611 ;;		None
 31612 ;; Return value:  Size  Location     Type
 31613 ;;                  1    wreg      void 
 31614 ;; Registers used:
 31615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31616 ;; Tracked objects:
 31617 ;;		On entry : 0/0
 31618 ;;		On exit  : 0/0
 31619 ;;		Unchanged: 0/0
 31620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31621 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31624 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31625 ;;Total ram usage:        8 bytes
 31626 ;; Hardware stack levels used:    1
 31627 ;; Hardware stack levels required when called:   12
 31628 ;; This function calls:
 31629 ;;		___wmul
 31630 ;; This function is called by:
 31631 ;;		_I2cSlv_MainTask
 31632 ;; This function uses a non-reentrant model
 31633 ;;
 31634                           
 31635                           	psect	text147
 31636  003E02                     __ptext147:
 31637                           	opt stack 0
 31638  003E02                     _OsAlrm_SetOsAlarm:
 31639                           	opt stack 15
 31640                           
 31641                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 31642                           
 31643                           ; BSR set to: 0
 31644                           ;incstack = 0
 31645  003E02  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 31646  003E06  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 31647  003E0A  0E00               	movlw	0
 31648  003E0C  0100               	movlb	0	; () banked
 31649  003E0E  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 31650  003E10  0E0B               	movlw	11
 31651  003E12  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 31652  003E14  EC35  F030         	call	___wmul	;wreg free
 31653  003E18  0E00               	movlw	low _OsAlarms
 31654  003E1A  0100               	movlb	0	; () banked
 31655  003E1C  257D               	addwf	?___wmul& (0+255),w,b
 31656  003E1E  6ED9               	movwf	fsr2l,c
 31657  003E20  0E06               	movlw	high _OsAlarms
 31658  003E22  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 31659  003E24  6EDA               	movwf	fsr2h,c
 31660  003E26  0E01               	movlw	1
 31661  003E28  6EDF               	movwf	indf2,c
 31662                           
 31663                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 31664  003E2A  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 31665  003E2E  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 31666  003E32  0E00               	movlw	0
 31667  003E34  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 31668  003E36  0E0B               	movlw	11
 31669  003E38  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 31670  003E3A  EC35  F030         	call	___wmul	;wreg free
 31671  003E3E  0E01               	movlw	1
 31672  003E40  0100               	movlb	0	; () banked
 31673  003E42  277D               	addwf	?___wmul& (0+255),f,b
 31674  003E44  0E00               	movlw	0
 31675  003E46  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 31676  003E48  0E00               	movlw	low _OsAlarms
 31677  003E4A  257D               	addwf	?___wmul& (0+255),w,b
 31678  003E4C  6ED9               	movwf	fsr2l,c
 31679  003E4E  0E06               	movlw	high _OsAlarms
 31680  003E50  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 31681  003E52  6EDA               	movwf	fsr2h,c
 31682  003E54  6ADE               	clrf	postinc2,c
 31683  003E56  6ADE               	clrf	postinc2,c
 31684  003E58  6ADE               	clrf	postinc2,c
 31685  003E5A  6ADD               	clrf	postdec2,c
 31686                           
 31687                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 31688  003E5C  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 31689  003E60  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 31690  003E64  0E00               	movlw	0
 31691  003E66  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 31692  003E68  0E0B               	movlw	11
 31693  003E6A  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 31694  003E6C  EC35  F030         	call	___wmul	;wreg free
 31695  003E70  0E05               	movlw	5
 31696  003E72  0100               	movlb	0	; () banked
 31697  003E74  277D               	addwf	?___wmul& (0+255),f,b
 31698  003E76  0E00               	movlw	0
 31699  003E78  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 31700  003E7A  0E00               	movlw	low _OsAlarms
 31701  003E7C  257D               	addwf	?___wmul& (0+255),w,b
 31702  003E7E  6ED9               	movwf	fsr2l,c
 31703  003E80  0E06               	movlw	high _OsAlarms
 31704  003E82  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 31705  003E84  6EDA               	movwf	fsr2h,c
 31706  003E86  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 31707  003E8A  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 31708  003E8E  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 31709  003E92  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 31710                           
 31711                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 31712  003E96  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 31713  003E9A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 31714  003E9E  0E00               	movlw	0
 31715  003EA0  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 31716  003EA2  0E0B               	movlw	11
 31717  003EA4  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 31718  003EA6  EC35  F030         	call	___wmul	;wreg free
 31719  003EAA  0E09               	movlw	9
 31720  003EAC  0100               	movlb	0	; () banked
 31721  003EAE  277D               	addwf	?___wmul& (0+255),f,b
 31722  003EB0  0E00               	movlw	0
 31723  003EB2  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 31724  003EB4  0E00               	movlw	low _OsAlarms
 31725  003EB6  257D               	addwf	?___wmul& (0+255),w,b
 31726  003EB8  6ED9               	movwf	fsr2l,c
 31727  003EBA  0E06               	movlw	high _OsAlarms
 31728  003EBC  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 31729  003EBE  6EDA               	movwf	fsr2h,c
 31730  003EC0  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 31731  003EC4  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 31732                           
 31733                           ; BSR set to: 0
 31734  003EC8  0012               	return		;funcret
 31735  003ECA                     __end_of_OsAlrm_SetOsAlarm:
 31736                           	opt stack 0
 31737                           tosu	equ	0xFFF
 31738                           tosh	equ	0xFFE
 31739                           tosl	equ	0xFFD
 31740                           pclath	equ	0xFFA
 31741                           tblptru	equ	0xFF8
 31742                           tblptrh	equ	0xFF7
 31743                           tblptrl	equ	0xFF6
 31744                           tablat	equ	0xFF5
 31745                           prodh	equ	0xFF4
 31746                           prodl	equ	0xFF3
 31747                           intcon	equ	0xFF2
 31748                           intcon2	equ	0xFF1
 31749                           intcon3	equ	0xFF0
 31750                           indf0	equ	0xFEF
 31751                           postinc0	equ	0xFEE
 31752                           plusw0	equ	0xFEB
 31753                           fsr0h	equ	0xFEA
 31754                           fsr0l	equ	0xFE9
 31755                           wreg	equ	0xFE8
 31756                           indf1	equ	0xFE7
 31757                           postinc1	equ	0xFE6
 31758                           postdec1	equ	0xFE5
 31759                           plusw1	equ	0xFE3
 31760                           fsr1h	equ	0xFE2
 31761                           fsr1l	equ	0xFE1
 31762                           indf2	equ	0xFDF
 31763                           postinc2	equ	0xFDE
 31764                           postdec2	equ	0xFDD
 31765                           plusw2	equ	0xFDB
 31766                           fsr2h	equ	0xFDA
 31767                           fsr2l	equ	0xFD9
 31768                           status	equ	0xFD8
 31769                           
 31770 ;; *************** function ___wmul *****************
 31771 ;; Defined at:
 31772 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 31773 ;; Parameters:    Size  Location     Type
 31774 ;;  multiplier      2   29[BANK0 ] unsigned int 
 31775 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 31776 ;; Auto vars:     Size  Location     Type
 31777 ;;  product         2   33[BANK0 ] unsigned int 
 31778 ;; Return value:  Size  Location     Type
 31779 ;;                  2   29[BANK0 ] unsigned int 
 31780 ;; Registers used:
 31781 ;;		wreg, status,2, status,0, prodl, prodh
 31782 ;; Tracked objects:
 31783 ;;		On entry : 0/0
 31784 ;;		On exit  : 0/0
 31785 ;;		Unchanged: 0/0
 31786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31787 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31788 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31790 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31791 ;;Total ram usage:        6 bytes
 31792 ;; Hardware stack levels used:    1
 31793 ;; Hardware stack levels required when called:   11
 31794 ;; This function calls:
 31795 ;;		Nothing
 31796 ;; This function is called by:
 31797 ;;		_OsAlrm_SetOsAlarm
 31798 ;;		_secondsAppTimer
 31799 ;;		_atoi
 31800 ;; This function uses a non-reentrant model
 31801 ;;
 31802                           
 31803                           	psect	text148
 31804  00606A                     __ptext148:
 31805                           	opt stack 0
 31806  00606A                     ___wmul:
 31807                           	opt stack 13
 31808                           
 31809                           ; BSR set to: 0
 31810                           ;incstack = 0
 31811  00606A  0100               	movlb	0	; () banked
 31812  00606C  517D               	movf	___wmul@multiplier& (0+255),w,b
 31813  00606E  037F               	mulwf	___wmul@multiplicand& (0+255),b
 31814  006070  CFF3 F081          	movff	prodl,___wmul@product
 31815  006074  CFF4 F082          	movff	prodh,___wmul@product+1
 31816  006078  517D               	movf	___wmul@multiplier& (0+255),w,b
 31817  00607A  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 31818  00607C  50F3               	movf	prodl,w,c
 31819  00607E  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 31820  006080  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 31821  006082  037F               	mulwf	___wmul@multiplicand& (0+255),b
 31822  006084  50F3               	movf	prodl,w,c
 31823  006086  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 31824                           
 31825                           ; BSR set to: 0
 31826  006088  C081  F07D         	movff	___wmul@product,?___wmul
 31827  00608C  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 31828  006090  0012               	return	
 31829  006092                     __end_of___wmul:
 31830                           	opt stack 0
 31831                           tosu	equ	0xFFF
 31832                           tosh	equ	0xFFE
 31833                           tosl	equ	0xFFD
 31834                           pclath	equ	0xFFA
 31835                           tblptru	equ	0xFF8
 31836                           tblptrh	equ	0xFF7
 31837                           tblptrl	equ	0xFF6
 31838                           tablat	equ	0xFF5
 31839                           prodh	equ	0xFF4
 31840                           prodl	equ	0xFF3
 31841                           intcon	equ	0xFF2
 31842                           intcon2	equ	0xFF1
 31843                           intcon3	equ	0xFF0
 31844                           indf0	equ	0xFEF
 31845                           postinc0	equ	0xFEE
 31846                           plusw0	equ	0xFEB
 31847                           fsr0h	equ	0xFEA
 31848                           fsr0l	equ	0xFE9
 31849                           wreg	equ	0xFE8
 31850                           indf1	equ	0xFE7
 31851                           postinc1	equ	0xFE6
 31852                           postdec1	equ	0xFE5
 31853                           plusw1	equ	0xFE3
 31854                           fsr1h	equ	0xFE2
 31855                           fsr1l	equ	0xFE1
 31856                           indf2	equ	0xFDF
 31857                           postinc2	equ	0xFDE
 31858                           postdec2	equ	0xFDD
 31859                           plusw2	equ	0xFDB
 31860                           fsr2h	equ	0xFDA
 31861                           fsr2l	equ	0xFD9
 31862                           status	equ	0xFD8
 31863                           
 31864 ;; *************** function _I2c_InitI2cModule *****************
 31865 ;; Defined at:
 31866 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31867 ;; Parameters:    Size  Location     Type
 31868 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 31869 ;;		 -> I2cConfig(10), 
 31870 ;; Auto vars:     Size  Location     Type
 31871 ;;		None
 31872 ;; Return value:  Size  Location     Type
 31873 ;;                  1    wreg      void 
 31874 ;; Registers used:
 31875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31876 ;; Tracked objects:
 31877 ;;		On entry : 0/0
 31878 ;;		On exit  : 0/0
 31879 ;;		Unchanged: 0/0
 31880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31881 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31883 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31884 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31885 ;;Total ram usage:        4 bytes
 31886 ;; Hardware stack levels used:    1
 31887 ;; Hardware stack levels required when called:   13
 31888 ;; This function calls:
 31889 ;;		_SetBaudRate
 31890 ;; This function is called by:
 31891 ;;		_I2cSlv_MainTask
 31892 ;; This function uses a non-reentrant model
 31893 ;;
 31894                           
 31895                           	psect	text149
 31896  004F18                     __ptext149:
 31897                           	opt stack 0
 31898  004F18                     _I2c_InitI2cModule:
 31899                           	opt stack 14
 31900                           
 31901                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 31902                           
 31903                           ; BSR set to: 0
 31904                           ;incstack = 0
 31905  004F18  8295               	bsf	3989,1,c	;volatile
 31906                           
 31907                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 31908  004F1A  8095               	bsf	3989,0,c	;volatile
 31909                           
 31910                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 31911  004F1C  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 31912  004F20  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 31913  004F24  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 31914  004F28  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 31915  004F2C  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 31916  004F30  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 31917  004F34  0100               	movlb	0	; () banked
 31918  004F36  EE20 F004          	lfsr	2,4
 31919  004F3A  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 31920  004F3C  26D9               	addwf	fsr2l,f,c
 31921  004F3E  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 31922  004F40  22DA               	addwfc	fsr2h,f,c
 31923  004F42  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 31924  004F46  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 31925  004F4A  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 31926  004F4E  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 31927  004F52  EC22  F02C         	call	_SetBaudRate	;wreg free
 31928                           
 31929                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 31930  004F56  0100               	movlb	0	; () banked
 31931  004F58  EE20 F008          	lfsr	2,8
 31932  004F5C  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 31933  004F5E  26D9               	addwf	fsr2l,f,c
 31934  004F60  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 31935  004F62  22DA               	addwfc	fsr2h,f,c
 31936  004F64  50DF               	movf	indf2,w,c
 31937  004F66  1272               	iorwf	3954,f,c	;volatile
 31938                           
 31939                           ; BSR set to: 0
 31940                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 31941  004F68  EE20 F009          	lfsr	2,9
 31942  004F6C  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 31943  004F6E  26D9               	addwf	fsr2l,f,c
 31944  004F70  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 31945  004F72  22DA               	addwfc	fsr2h,f,c
 31946  004F74  50DF               	movf	indf2,w,c
 31947  004F76  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 31948  004F78  0E05               	movlw	5
 31949  004F7A  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 31950  004F7C                     u13485:
 31951  004F7C  90D8               	bcf	status,0,c
 31952  004F7E  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 31953  004F80  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 31954  004F82  D7FC               	goto	u13485
 31955  004F84  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 31956  004F86  1272               	iorwf	3954,f,c	;volatile
 31957                           
 31958                           ; BSR set to: 0
 31959  004F88  0012               	return		;funcret
 31960  004F8A                     __end_of_I2c_InitI2cModule:
 31961                           	opt stack 0
 31962                           tosu	equ	0xFFF
 31963                           tosh	equ	0xFFE
 31964                           tosl	equ	0xFFD
 31965                           pclath	equ	0xFFA
 31966                           tblptru	equ	0xFF8
 31967                           tblptrh	equ	0xFF7
 31968                           tblptrl	equ	0xFF6
 31969                           tablat	equ	0xFF5
 31970                           prodh	equ	0xFF4
 31971                           prodl	equ	0xFF3
 31972                           intcon	equ	0xFF2
 31973                           intcon2	equ	0xFF1
 31974                           intcon3	equ	0xFF0
 31975                           indf0	equ	0xFEF
 31976                           postinc0	equ	0xFEE
 31977                           plusw0	equ	0xFEB
 31978                           fsr0h	equ	0xFEA
 31979                           fsr0l	equ	0xFE9
 31980                           wreg	equ	0xFE8
 31981                           indf1	equ	0xFE7
 31982                           postinc1	equ	0xFE6
 31983                           postdec1	equ	0xFE5
 31984                           plusw1	equ	0xFE3
 31985                           fsr1h	equ	0xFE2
 31986                           fsr1l	equ	0xFE1
 31987                           indf2	equ	0xFDF
 31988                           postinc2	equ	0xFDE
 31989                           postdec2	equ	0xFDD
 31990                           plusw2	equ	0xFDB
 31991                           fsr2h	equ	0xFDA
 31992                           fsr2l	equ	0xFD9
 31993                           status	equ	0xFD8
 31994                           
 31995 ;; *************** function _SetBaudRate *****************
 31996 ;; Defined at:
 31997 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31998 ;; Parameters:    Size  Location     Type
 31999 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 32000 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 32001 ;; Auto vars:     Size  Location     Type
 32002 ;;		None
 32003 ;; Return value:  Size  Location     Type
 32004 ;;                  1    wreg      void 
 32005 ;; Registers used:
 32006 ;;		wreg, status,2, status,0, cstack
 32007 ;; Tracked objects:
 32008 ;;		On entry : 0/0
 32009 ;;		On exit  : 0/0
 32010 ;;		Unchanged: 0/0
 32011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32012 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32014 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32015 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32016 ;;Total ram usage:       12 bytes
 32017 ;; Hardware stack levels used:    1
 32018 ;; Hardware stack levels required when called:   12
 32019 ;; This function calls:
 32020 ;;		___lldiv
 32021 ;; This function is called by:
 32022 ;;		_I2c_InitI2cModule
 32023 ;; This function uses a non-reentrant model
 32024 ;;
 32025                           
 32026                           	psect	text150
 32027  005844                     __ptext150:
 32028                           	opt stack 0
 32029  005844                     _SetBaudRate:
 32030                           	opt stack 14
 32031                           
 32032                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 32033                           
 32034                           ; BSR set to: 0
 32035                           ;incstack = 0
 32036  005844  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 32037  005848  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 32038  00584C  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 32039  005850  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 32040  005854  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 32041  005858  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 32042  00585C  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 32043  005860  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 32044  005864  0E02               	movlw	2
 32045  005866                     u12445:
 32046  005866  90D8               	bcf	status,0,c
 32047  005868  0100               	movlb	0	; () banked
 32048  00586A  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 32049  00586C  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 32050  00586E  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 32051  005870  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 32052  005872  2EE8               	decfsz	wreg,f,c
 32053  005874  D7F8               	goto	u12445
 32054  005876  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 32055  00587A  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 32056  00587E  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 32057  005882  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 32058  005886  EC96  F026         	call	___lldiv	;wreg free
 32059  00588A  0100               	movlb	0	; () banked
 32060  00588C  0589               	decf	?___lldiv& (0+255),w,b
 32061  00588E  6E74               	movwf	3956,c	;volatile
 32062                           
 32063                           ; BSR set to: 0
 32064  005890  0012               	return		;funcret
 32065  005892                     __end_of_SetBaudRate:
 32066                           	opt stack 0
 32067                           tosu	equ	0xFFF
 32068                           tosh	equ	0xFFE
 32069                           tosl	equ	0xFFD
 32070                           pclath	equ	0xFFA
 32071                           tblptru	equ	0xFF8
 32072                           tblptrh	equ	0xFF7
 32073                           tblptrl	equ	0xFF6
 32074                           tablat	equ	0xFF5
 32075                           prodh	equ	0xFF4
 32076                           prodl	equ	0xFF3
 32077                           intcon	equ	0xFF2
 32078                           intcon2	equ	0xFF1
 32079                           intcon3	equ	0xFF0
 32080                           indf0	equ	0xFEF
 32081                           postinc0	equ	0xFEE
 32082                           plusw0	equ	0xFEB
 32083                           fsr0h	equ	0xFEA
 32084                           fsr0l	equ	0xFE9
 32085                           wreg	equ	0xFE8
 32086                           indf1	equ	0xFE7
 32087                           postinc1	equ	0xFE6
 32088                           postdec1	equ	0xFE5
 32089                           plusw1	equ	0xFE3
 32090                           fsr1h	equ	0xFE2
 32091                           fsr1l	equ	0xFE1
 32092                           indf2	equ	0xFDF
 32093                           postinc2	equ	0xFDE
 32094                           postdec2	equ	0xFDD
 32095                           plusw2	equ	0xFDB
 32096                           fsr2h	equ	0xFDA
 32097                           fsr2l	equ	0xFD9
 32098                           status	equ	0xFD8
 32099                           
 32100 ;; *************** function ___lldiv *****************
 32101 ;; Defined at:
 32102 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 32103 ;; Parameters:    Size  Location     Type
 32104 ;;  dividend        4   41[BANK0 ] unsigned long 
 32105 ;;  divisor         4   45[BANK0 ] unsigned long 
 32106 ;; Auto vars:     Size  Location     Type
 32107 ;;  quotient        4   49[BANK0 ] unsigned long 
 32108 ;;  counter         1   53[BANK0 ] unsigned char 
 32109 ;; Return value:  Size  Location     Type
 32110 ;;                  4   41[BANK0 ] unsigned long 
 32111 ;; Registers used:
 32112 ;;		wreg, status,2, status,0
 32113 ;; Tracked objects:
 32114 ;;		On entry : 0/0
 32115 ;;		On exit  : 0/0
 32116 ;;		Unchanged: 0/0
 32117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32118 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32119 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32121 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32122 ;;Total ram usage:       13 bytes
 32123 ;; Hardware stack levels used:    1
 32124 ;; Hardware stack levels required when called:   11
 32125 ;; This function calls:
 32126 ;;		Nothing
 32127 ;; This function is called by:
 32128 ;;		_SetBaudRate
 32129 ;;		_Tmr_TmrBPrSet
 32130 ;;		_SetUartBaudRate
 32131 ;; This function uses a non-reentrant model
 32132 ;;
 32133                           
 32134                           	psect	text151
 32135  004D2C                     __ptext151:
 32136                           	opt stack 0
 32137  004D2C                     ___lldiv:
 32138                           	opt stack 15
 32139                           
 32140                           ; BSR set to: 0
 32141                           ;incstack = 0
 32142  004D2C  0E00               	movlw	0
 32143  004D2E  0100               	movlb	0	; () banked
 32144  004D30  6F91               	movwf	___lldiv@quotient& (0+255),b
 32145  004D32  0E00               	movlw	0
 32146  004D34  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 32147  004D36  0E00               	movlw	0
 32148  004D38  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 32149  004D3A  0E00               	movlw	0
 32150  004D3C  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 32151                           
 32152                           ; BSR set to: 0
 32153  004D3E  518D               	movf	___lldiv@divisor& (0+255),w,b
 32154  004D40  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 32155  004D42  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 32156  004D44  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 32157  004D46  B4D8               	btfsc	status,2,c
 32158  004D48  D02A               	goto	l3133
 32159                           
 32160                           ; BSR set to: 0
 32161  004D4A  0E01               	movlw	1
 32162  004D4C  6F95               	movwf	___lldiv@counter& (0+255),b
 32163  004D4E  D006               	goto	l3128
 32164  004D50                     
 32165                           ; BSR set to: 0
 32166                           
 32167                           ; BSR set to: 0
 32168  004D50  90D8               	bcf	status,0,c
 32169  004D52  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 32170  004D54  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 32171  004D56  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 32172  004D58  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 32173  004D5A  2B95               	incf	___lldiv@counter& (0+255),f,b
 32174  004D5C                     l3128:
 32175                           
 32176                           ; BSR set to: 0
 32177                           
 32178                           ; BSR set to: 0
 32179  004D5C  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 32180  004D5E  D7F8               	goto	l3129
 32181  004D60                     u11510:
 32182                           
 32183                           ; BSR set to: 0
 32184                           
 32185                           ; BSR set to: 0
 32186                           
 32187                           ; BSR set to: 0
 32188  004D60  90D8               	bcf	status,0,c
 32189  004D62  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 32190  004D64  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 32191  004D66  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 32192  004D68  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 32193                           
 32194                           ; BSR set to: 0
 32195  004D6A  518D               	movf	___lldiv@divisor& (0+255),w,b
 32196  004D6C  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 32197  004D6E  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 32198  004D70  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 32199  004D72  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 32200  004D74  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 32201  004D76  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 32202  004D78  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 32203  004D7A  A0D8               	btfss	status,0,c
 32204  004D7C  D009               	goto	l3132
 32205                           
 32206                           ; BSR set to: 0
 32207  004D7E  518D               	movf	___lldiv@divisor& (0+255),w,b
 32208  004D80  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 32209  004D82  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 32210  004D84  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 32211  004D86  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 32212  004D88  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 32213  004D8A  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 32214  004D8C  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 32215                           
 32216                           ; BSR set to: 0
 32217  004D8E  8191               	bsf	___lldiv@quotient& (0+255),0,b
 32218  004D90                     l3132:
 32219                           
 32220                           ; BSR set to: 0
 32221                           
 32222                           ; BSR set to: 0
 32223  004D90  90D8               	bcf	status,0,c
 32224  004D92  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 32225  004D94  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 32226  004D96  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 32227  004D98  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 32228                           
 32229                           ; BSR set to: 0
 32230  004D9A  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 32231  004D9C  D7E1               	goto	u11510
 32232  004D9E                     l3133:
 32233                           
 32234                           ; BSR set to: 0
 32235                           
 32236                           ; BSR set to: 0
 32237  004D9E  C091  F089         	movff	___lldiv@quotient,?___lldiv
 32238  004DA2  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 32239  004DA6  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 32240  004DAA  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 32241                           
 32242                           ; BSR set to: 0
 32243  004DAE  0012               	return		;funcret
 32244  004DB0                     __end_of___lldiv:
 32245                           	opt stack 0
 32246                           tosu	equ	0xFFF
 32247                           tosh	equ	0xFFE
 32248                           tosl	equ	0xFFD
 32249                           pclath	equ	0xFFA
 32250                           tblptru	equ	0xFF8
 32251                           tblptrh	equ	0xFF7
 32252                           tblptrl	equ	0xFF6
 32253                           tablat	equ	0xFF5
 32254                           prodh	equ	0xFF4
 32255                           prodl	equ	0xFF3
 32256                           intcon	equ	0xFF2
 32257                           intcon2	equ	0xFF1
 32258                           intcon3	equ	0xFF0
 32259                           indf0	equ	0xFEF
 32260                           postinc0	equ	0xFEE
 32261                           plusw0	equ	0xFEB
 32262                           fsr0h	equ	0xFEA
 32263                           fsr0l	equ	0xFE9
 32264                           wreg	equ	0xFE8
 32265                           indf1	equ	0xFE7
 32266                           postinc1	equ	0xFE6
 32267                           postdec1	equ	0xFE5
 32268                           plusw1	equ	0xFE3
 32269                           fsr1h	equ	0xFE2
 32270                           fsr1l	equ	0xFE1
 32271                           indf2	equ	0xFDF
 32272                           postinc2	equ	0xFDE
 32273                           postdec2	equ	0xFDD
 32274                           plusw2	equ	0xFDB
 32275                           fsr2h	equ	0xFDA
 32276                           fsr2l	equ	0xFD9
 32277                           status	equ	0xFD8
 32278                           
 32279 ;; *************** function _I2cSetConfig *****************
 32280 ;; Defined at:
 32281 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 32282 ;; Parameters:    Size  Location     Type
 32283 ;;		None
 32284 ;; Auto vars:     Size  Location     Type
 32285 ;;		None
 32286 ;; Return value:  Size  Location     Type
 32287 ;;                  1    wreg      void 
 32288 ;; Registers used:
 32289 ;;		wreg, status,2
 32290 ;; Tracked objects:
 32291 ;;		On entry : 0/0
 32292 ;;		On exit  : 0/0
 32293 ;;		Unchanged: 0/0
 32294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32299 ;;Total ram usage:        0 bytes
 32300 ;; Hardware stack levels used:    1
 32301 ;; Hardware stack levels required when called:   11
 32302 ;; This function calls:
 32303 ;;		Nothing
 32304 ;; This function is called by:
 32305 ;;		_I2cSlv_MainTask
 32306 ;; This function uses a non-reentrant model
 32307 ;;
 32308                           
 32309                           	psect	text152
 32310  005F98                     __ptext152:
 32311                           	opt stack 0
 32312  005F98                     _I2cSetConfig:
 32313                           	opt stack 16
 32314                           
 32315                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 32316                           
 32317                           ; BSR set to: 0
 32318                           ;incstack = 0
 32319  005F98  0E80               	movlw	128
 32320  005F9A  0103               	movlb	3	; () banked
 32321  005F9C  6F51               	movwf	_I2cConfig& (0+255),b
 32322  005F9E  0E1A               	movlw	26
 32323  005FA0  6F52               	movwf	(_I2cConfig+1)& (0+255),b
 32324  005FA2  0E06               	movlw	6
 32325  005FA4  6F53               	movwf	(_I2cConfig+2)& (0+255),b
 32326  005FA6  0E00               	movlw	0
 32327  005FA8  6F54               	movwf	(_I2cConfig+3)& (0+255),b
 32328                           
 32329                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 32330  005FAA  0E00               	movlw	0
 32331  005FAC  6F55               	movwf	(_I2cConfig+4)& (0+255),b
 32332  005FAE  0E6C               	movlw	108
 32333  005FB0  6F56               	movwf	(_I2cConfig+5)& (0+255),b
 32334  005FB2  0EDC               	movlw	220
 32335  005FB4  6F57               	movwf	(_I2cConfig+6)& (0+255),b
 32336  005FB6  0E02               	movlw	2
 32337  005FB8  6F58               	movwf	(_I2cConfig+7)& (0+255),b
 32338                           
 32339                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 32340  005FBA  0E08               	movlw	8
 32341  005FBC  6F59               	movwf	(_I2cConfig+8)& (0+255),b
 32342                           
 32343                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 32344  005FBE  0E01               	movlw	1
 32345  005FC0  6F5A               	movwf	(_I2cConfig+9)& (0+255),b
 32346                           
 32347                           ; BSR set to: 3
 32348  005FC2  0012               	return		;funcret
 32349  005FC4                     __end_of_I2cSetConfig:
 32350                           	opt stack 0
 32351                           tosu	equ	0xFFF
 32352                           tosh	equ	0xFFE
 32353                           tosl	equ	0xFFD
 32354                           pclath	equ	0xFFA
 32355                           tblptru	equ	0xFF8
 32356                           tblptrh	equ	0xFF7
 32357                           tblptrl	equ	0xFF6
 32358                           tablat	equ	0xFF5
 32359                           prodh	equ	0xFF4
 32360                           prodl	equ	0xFF3
 32361                           intcon	equ	0xFF2
 32362                           intcon2	equ	0xFF1
 32363                           intcon3	equ	0xFF0
 32364                           indf0	equ	0xFEF
 32365                           postinc0	equ	0xFEE
 32366                           plusw0	equ	0xFEB
 32367                           fsr0h	equ	0xFEA
 32368                           fsr0l	equ	0xFE9
 32369                           wreg	equ	0xFE8
 32370                           indf1	equ	0xFE7
 32371                           postinc1	equ	0xFE6
 32372                           postdec1	equ	0xFE5
 32373                           plusw1	equ	0xFE3
 32374                           fsr1h	equ	0xFE2
 32375                           fsr1l	equ	0xFE1
 32376                           indf2	equ	0xFDF
 32377                           postinc2	equ	0xFDE
 32378                           postdec2	equ	0xFDD
 32379                           plusw2	equ	0xFDB
 32380                           fsr2h	equ	0xFDA
 32381                           fsr2l	equ	0xFD9
 32382                           status	equ	0xFD8
 32383                           
 32384 ;; *************** function _I2cSendMsgSm *****************
 32385 ;; Defined at:
 32386 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 32387 ;; Parameters:    Size  Location     Type
 32388 ;;		None
 32389 ;; Auto vars:     Size  Location     Type
 32390 ;;		None
 32391 ;; Return value:  Size  Location     Type
 32392 ;;                  1    wreg      void 
 32393 ;; Registers used:
 32394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32395 ;; Tracked objects:
 32396 ;;		On entry : 0/0
 32397 ;;		On exit  : 0/0
 32398 ;;		Unchanged: 0/0
 32399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32404 ;;Total ram usage:        0 bytes
 32405 ;; Hardware stack levels used:    1
 32406 ;; Hardware stack levels required when called:   13
 32407 ;; This function calls:
 32408 ;;		_I2c_ReadData
 32409 ;;		_I2c_WriteData
 32410 ;;		_ReceiveEvt
 32411 ;; This function is called by:
 32412 ;;		_I2cSlv_MainTask
 32413 ;; This function uses a non-reentrant model
 32414 ;;
 32415                           
 32416                           	psect	text153
 32417  003ECA                     __ptext153:
 32418                           	opt stack 0
 32419  003ECA                     _I2cSendMsgSm:
 32420                           	opt stack 14
 32421                           
 32422                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 32423                           ;i2c_slv.c: 122: switch(I2cComState)
 32424                           
 32425                           ; BSR set to: 3
 32426                           ;incstack = 0
 32427  003ECA  D04F               	goto	l1379
 32428  003ECC                     
 32429                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 32430  003ECC  0ED9               	movlw	low _I2cWriteDataEvt
 32431  003ECE  0100               	movlb	0	; () banked
 32432  003ED0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 32433  003ED2  0E00               	movlw	high _I2cWriteDataEvt
 32434  003ED4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 32435  003ED6  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 32436  003EDA  0900               	iorlw	0
 32437  003EDC  B4D8               	btfsc	status,2,c
 32438  003EDE  D007               	goto	l1381
 32439                           
 32440                           ;i2c_slv.c: 127: {
 32441                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 32442  003EE0  0E01               	movlw	1
 32443  003EE2  0101               	movlb	1	; () banked
 32444  003EE4  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 32445                           
 32446                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 32447  003EE6  0E01               	movlw	1
 32448  003EE8  0100               	movlb	0	; () banked
 32449  003EEA  6FCF               	movwf	_I2cComSts& (0+255),b
 32450                           
 32451                           ;i2c_slv.c: 132: }
 32452  003EEC  0012               	return	
 32453  003EEE                     l1381:
 32454                           
 32455                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 32456                           
 32457                           ; BSR set to: 0
 32458  003EEE  0ED8               	movlw	low _I2cReadDataEvt
 32459  003EF0  0100               	movlb	0	; () banked
 32460  003EF2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 32461  003EF4  0E00               	movlw	high _I2cReadDataEvt
 32462  003EF6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 32463  003EF8  ECB5  F02F         	call	_ReceiveEvt	;wreg free
 32464  003EFC  0900               	iorlw	0
 32465  003EFE  B4D8               	btfsc	status,2,c
 32466  003F00  D007               	goto	l1383
 32467                           
 32468                           ;i2c_slv.c: 134: {
 32469                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 32470  003F02  0E02               	movlw	2
 32471  003F04  0101               	movlb	1	; () banked
 32472  003F06  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 32473                           
 32474                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 32475  003F08  0E02               	movlw	2
 32476  003F0A  0100               	movlb	0	; () banked
 32477  003F0C  6FCF               	movwf	_I2cComSts& (0+255),b
 32478                           
 32479                           ;i2c_slv.c: 139: }
 32480  003F0E  0012               	return	
 32481  003F10                     l1383:
 32482                           
 32483                           ;i2c_slv.c: 140: else
 32484                           ;i2c_slv.c: 141: {
 32485                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 32486                           
 32487                           ; BSR set to: 0
 32488  003F10  0E00               	movlw	0
 32489  003F12  0100               	movlb	0	; () banked
 32490  003F14  6FCF               	movwf	_I2cComSts& (0+255),b
 32491                           
 32492                           ; BSR set to: 0
 32493                           ;i2c_slv.c: 144: }
 32494                           ;i2c_slv.c: 145: break;
 32495                           
 32496                           ; BSR set to: 0
 32497  003F16  0012               	return	
 32498  003F18                     
 32499                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 32500                           
 32501                           ; BSR set to: 0
 32502  003F18  0EA2               	movlw	low _I2cTxPacket
 32503  003F1A  0100               	movlb	0	; () banked
 32504  003F1C  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 32505  003F1E  0E03               	movlw	high _I2cTxPacket
 32506  003F20  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 32507  003F22  EC5A  F00F         	call	_I2c_WriteData	;wreg free
 32508  003F26  0900               	iorlw	0
 32509  003F28  B4D8               	btfsc	status,2,c
 32510  003F2A  0012               	return	
 32511                           
 32512                           ;i2c_slv.c: 150: {
 32513                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 32514  003F2C  0E03               	movlw	3
 32515  003F2E  0101               	movlb	1	; () banked
 32516  003F30  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 32517                           
 32518                           ; BSR set to: 1
 32519                           ;i2c_slv.c: 153: }
 32520                           ;i2c_slv.c: 154: break;
 32521  003F32  0012               	return	
 32522  003F34                     
 32523                           ; BSR set to: 1
 32524                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 32525                           
 32526                           ; BSR set to: 1
 32527  003F34  0E97               	movlw	low _I2cRxPacket
 32528  003F36  0100               	movlb	0	; () banked
 32529  003F38  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 32530  003F3A  0E03               	movlw	high _I2cRxPacket
 32531  003F3C  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 32532  003F3E  EC11  F010         	call	_I2c_ReadData	;wreg free
 32533  003F42  0900               	iorlw	0
 32534  003F44  B4D8               	btfsc	status,2,c
 32535  003F46  0012               	return	
 32536                           
 32537                           ;i2c_slv.c: 159: {
 32538                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 32539  003F48  0E04               	movlw	4
 32540  003F4A  0101               	movlb	1	; () banked
 32541  003F4C  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 32542                           
 32543                           ; BSR set to: 1
 32544                           ;i2c_slv.c: 162: }
 32545                           ;i2c_slv.c: 164: break;
 32546  003F4E  0012               	return	
 32547  003F50                     
 32548                           ; BSR set to: 1
 32549                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 32550                           
 32551                           ; BSR set to: 1
 32552  003F50  0E00               	movlw	0
 32553  003F52  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 32554                           
 32555                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 32556  003F54  0E00               	movlw	0
 32557  003F56  0100               	movlb	0	; () banked
 32558  003F58  6FCF               	movwf	_I2cComSts& (0+255),b
 32559                           
 32560                           ;i2c_slv.c: 171: break;
 32561  003F5A  0012               	return	
 32562  003F5C                     
 32563                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 32564                           
 32565                           ; BSR set to: 0
 32566  003F5C  0E00               	movlw	0
 32567  003F5E  0101               	movlb	1	; () banked
 32568  003F60  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 32569                           
 32570                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 32571  003F62  0E00               	movlw	0
 32572  003F64  0100               	movlb	0	; () banked
 32573  003F66  6FCF               	movwf	_I2cComSts& (0+255),b
 32574                           
 32575                           ; BSR set to: 0
 32576                           ;i2c_slv.c: 182: }
 32577                           
 32578                           ; BSR set to: 0
 32579                           ;i2c_slv.c: 181: break;
 32580                           
 32581                           ;i2c_slv.c: 180: default:
 32582                           
 32583                           ;i2c_slv.c: 178: break;
 32584  003F68  0012               	return	
 32585  003F6A                     l1379:
 32586                           
 32587                           ; BSR set to: 0
 32588  003F6A  0101               	movlb	1	; () banked
 32589  003F6C  51E9               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 32590                           
 32591                           ; Switch size 1, requested type "space"
 32592                           ; Number of cases is 5, Range of values is 0 to 4
 32593                           ; switch strategies available:
 32594                           ; Name         Instructions Cycles
 32595                           ; simple_byte           16     9 (average)
 32596                           ;	Chosen strategy is simple_byte
 32597  003F6E  0A00               	xorlw	0	; case 0
 32598  003F70  B4D8               	btfsc	status,2,c
 32599  003F72  D7AC               	goto	l1380
 32600  003F74  0A01               	xorlw	1	; case 1
 32601  003F76  B4D8               	btfsc	status,2,c
 32602  003F78  D7CF               	goto	l1386
 32603  003F7A  0A03               	xorlw	3	; case 2
 32604  003F7C  B4D8               	btfsc	status,2,c
 32605  003F7E  D7DA               	goto	l1388
 32606  003F80  0A01               	xorlw	1	; case 3
 32607  003F82  B4D8               	btfsc	status,2,c
 32608  003F84  D7E5               	goto	l1390
 32609  003F86  0A07               	xorlw	7	; case 4
 32610  003F88  A4D8               	btfss	status,2,c
 32611  003F8A  0012               	return	
 32612  003F8C  D7E7               	goto	l1391
 32613  003F8E                     __end_of_I2cSendMsgSm:
 32614                           	opt stack 0
 32615                           tosu	equ	0xFFF
 32616                           tosh	equ	0xFFE
 32617                           tosl	equ	0xFFD
 32618                           pclath	equ	0xFFA
 32619                           tblptru	equ	0xFF8
 32620                           tblptrh	equ	0xFF7
 32621                           tblptrl	equ	0xFF6
 32622                           tablat	equ	0xFF5
 32623                           prodh	equ	0xFF4
 32624                           prodl	equ	0xFF3
 32625                           intcon	equ	0xFF2
 32626                           intcon2	equ	0xFF1
 32627                           intcon3	equ	0xFF0
 32628                           indf0	equ	0xFEF
 32629                           postinc0	equ	0xFEE
 32630                           plusw0	equ	0xFEB
 32631                           fsr0h	equ	0xFEA
 32632                           fsr0l	equ	0xFE9
 32633                           wreg	equ	0xFE8
 32634                           indf1	equ	0xFE7
 32635                           postinc1	equ	0xFE6
 32636                           postdec1	equ	0xFE5
 32637                           plusw1	equ	0xFE3
 32638                           fsr1h	equ	0xFE2
 32639                           fsr1l	equ	0xFE1
 32640                           indf2	equ	0xFDF
 32641                           postinc2	equ	0xFDE
 32642                           postdec2	equ	0xFDD
 32643                           plusw2	equ	0xFDB
 32644                           fsr2h	equ	0xFDA
 32645                           fsr2l	equ	0xFD9
 32646                           status	equ	0xFD8
 32647                           
 32648 ;; *************** function _ReceiveEvt *****************
 32649 ;; Defined at:
 32650 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 32651 ;; Parameters:    Size  Location     Type
 32652 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 32653 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 32654 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 32655 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 32656 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 32657 ;;		 -> ActivateRiDetection(1), 
 32658 ;; Auto vars:     Size  Location     Type
 32659 ;;  EventStatus     1   32[BANK0 ] enum E7727
 32660 ;; Return value:  Size  Location     Type
 32661 ;;                  1    wreg      enum E7699
 32662 ;; Registers used:
 32663 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32664 ;; Tracked objects:
 32665 ;;		On entry : 0/0
 32666 ;;		On exit  : 0/0
 32667 ;;		Unchanged: 0/0
 32668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32669 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32671 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32672 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32673 ;;Total ram usage:        4 bytes
 32674 ;; Hardware stack levels used:    1
 32675 ;; Hardware stack levels required when called:   11
 32676 ;; This function calls:
 32677 ;;		Nothing
 32678 ;; This function is called by:
 32679 ;;		_MdmCntSm
 32680 ;;		_CheckModem
 32681 ;;		_ModemEvtParser
 32682 ;;		_GetSmsSm
 32683 ;;		_SendSmsSm
 32684 ;;		_Mdm_GetSmsData
 32685 ;;		_Mdm_IsSmsReceived
 32686 ;;		_Mdm_IsRinging
 32687 ;;		_GetCallerNumber
 32688 ;;		_InitGprsNetwork
 32689 ;;		_HttpGetMethod
 32690 ;;		_I2cSendMsgSm
 32691 ;;		_I2cSlv_I2cReadMsgSts
 32692 ;;		_RiSm
 32693 ;;		_GsmGprsTerminal
 32694 ;; This function uses a non-reentrant model
 32695 ;;
 32696                           
 32697                           	psect	text154
 32698  005F6A                     __ptext154:
 32699                           	opt stack 0
 32700  005F6A                     _ReceiveEvt:
 32701                           	opt stack 13
 32702                           
 32703                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 32704                           
 32705                           ;incstack = 0
 32706  005F6A  0E00               	movlw	0
 32707  005F6C  0100               	movlb	0	; () banked
 32708  005F6E  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 32709                           
 32710                           ; BSR set to: 0
 32711                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 32712  005F70  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 32713  005F74  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 32714  005F78  0E02               	movlw	2
 32715  005F7A  18DE               	xorwf	postinc2,w,c
 32716  005F7C  A4D8               	btfss	status,2,c
 32717  005F7E  D008               	goto	l832
 32718                           
 32719                           ; BSR set to: 0
 32720                           ;os_ser.c: 106: {
 32721                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 32722  005F80  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 32723  005F84  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 32724  005F88  0E01               	movlw	1
 32725  005F8A  6EDF               	movwf	indf2,c
 32726                           
 32727                           ; BSR set to: 0
 32728                           ;os_ser.c: 110: EventStatus = EventReceived;
 32729  005F8C  0E01               	movlw	1
 32730  005F8E  D001               	goto	L57
 32731  005F90                     l832:
 32732                           
 32733                           ; BSR set to: 0
 32734                           ;os_ser.c: 112: else
 32735                           ;os_ser.c: 113: {
 32736                           ;os_ser.c: 115: EventStatus = EventIdle;
 32737                           
 32738                           ; BSR set to: 0
 32739  005F90  0E00               	movlw	0
 32740  005F92                     L57:
 32741  005F92  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 32742                           
 32743                           ; BSR set to: 0
 32744                           ;os_ser.c: 116: }
 32745                           ;os_ser.c: 119: return(EventStatus);
 32746  005F94  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 32747  005F96  0012               	return	
 32748  005F98                     __end_of_ReceiveEvt:
 32749                           	opt stack 0
 32750                           tosu	equ	0xFFF
 32751                           tosh	equ	0xFFE
 32752                           tosl	equ	0xFFD
 32753                           pclath	equ	0xFFA
 32754                           tblptru	equ	0xFF8
 32755                           tblptrh	equ	0xFF7
 32756                           tblptrl	equ	0xFF6
 32757                           tablat	equ	0xFF5
 32758                           prodh	equ	0xFF4
 32759                           prodl	equ	0xFF3
 32760                           intcon	equ	0xFF2
 32761                           intcon2	equ	0xFF1
 32762                           intcon3	equ	0xFF0
 32763                           indf0	equ	0xFEF
 32764                           postinc0	equ	0xFEE
 32765                           plusw0	equ	0xFEB
 32766                           fsr0h	equ	0xFEA
 32767                           fsr0l	equ	0xFE9
 32768                           wreg	equ	0xFE8
 32769                           indf1	equ	0xFE7
 32770                           postinc1	equ	0xFE6
 32771                           postdec1	equ	0xFE5
 32772                           plusw1	equ	0xFE3
 32773                           fsr1h	equ	0xFE2
 32774                           fsr1l	equ	0xFE1
 32775                           indf2	equ	0xFDF
 32776                           postinc2	equ	0xFDE
 32777                           postdec2	equ	0xFDD
 32778                           plusw2	equ	0xFDB
 32779                           fsr2h	equ	0xFDA
 32780                           fsr2l	equ	0xFD9
 32781                           status	equ	0xFD8
 32782                           
 32783 ;; *************** function _I2c_WriteData *****************
 32784 ;; Defined at:
 32785 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32786 ;; Parameters:    Size  Location     Type
 32787 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 32788 ;;		 -> I2cTxPacket(5), 
 32789 ;; Auto vars:     Size  Location     Type
 32790 ;;		None
 32791 ;; Return value:  Size  Location     Type
 32792 ;;                  1    wreg      enum E7740
 32793 ;; Registers used:
 32794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32795 ;; Tracked objects:
 32796 ;;		On entry : 0/0
 32797 ;;		On exit  : 0/0
 32798 ;;		Unchanged: 0/0
 32799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32800 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32802 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32803 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32804 ;;Total ram usage:        4 bytes
 32805 ;; Hardware stack levels used:    1
 32806 ;; Hardware stack levels required when called:   12
 32807 ;; This function calls:
 32808 ;;		_CheckAckStatus
 32809 ;;		_CheckTxStatus
 32810 ;;		_StartCondition
 32811 ;;		_StopCondition
 32812 ;;		_WriteByte
 32813 ;; This function is called by:
 32814 ;;		_I2cSendMsgSm
 32815 ;; This function uses a non-reentrant model
 32816 ;;
 32817                           
 32818                           	psect	text155
 32819  001EB4                     __ptext155:
 32820                           	opt stack 0
 32821  001EB4                     _I2c_WriteData:
 32822                           	opt stack 14
 32823                           
 32824                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 32825                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 32826                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 32827                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 32828                           ;i2c_drv.c: 260: switch (I2cWriteState)
 32829                           
 32830                           ; BSR set to: 0
 32831                           ;incstack = 0
 32832  001EB4  D095               	goto	l160
 32833  001EB6                     
 32834                           ;i2c_drv.c: 264: StartCondition();
 32835  001EB6  EC7F  F032         	call	_StartCondition	;wreg free
 32836                           
 32837                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 32838  001EBA  0E00               	movlw	0
 32839  001EBC  6E35               	movwf	I2c_WriteData@WriteStatus,c
 32840                           
 32841                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 32842  001EBE  0E01               	movlw	1
 32843  001EC0  D084               	goto	L64
 32844  001EC2                     
 32845                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 32846  001EC2  0100               	movlb	0	; () banked
 32847  001EC4  EE20 F001          	lfsr	2,1
 32848  001EC8  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32849  001ECA  26D9               	addwf	fsr2l,f,c
 32850  001ECC  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32851  001ECE  22DA               	addwfc	fsr2h,f,c
 32852  001ED0  50DF               	movf	indf2,w,c
 32853  001ED2  6F80               	movwf	??_I2c_WriteData& (0+255),b
 32854  001ED4  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 32855  001ED8  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 32856  001EDC  50DF               	movf	indf2,w,c
 32857  001EDE  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 32858  001EE0  90D8               	bcf	status,0,c
 32859  001EE2  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 32860  001EE4  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 32861  001EE6  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 32862  001EEA  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 32863  001EEE  6EDF               	movwf	indf2,c
 32864                           
 32865                           ; BSR set to: 0
 32866                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 32867  001EF0  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 32868  001EF4  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 32869  001EF8  50DF               	movf	indf2,w,c
 32870  001EFA  EC5D  F032         	call	_WriteByte
 32871                           
 32872                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 32873  001EFE  0E02               	movlw	2
 32874  001F00  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 32875  001F02                     
 32876                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 32877  001F02  EC67  F032         	call	_CheckTxStatus	;wreg free
 32878  001F06  0900               	iorlw	0
 32879  001F08  A4D8               	btfss	status,2,c
 32880  001F0A  D089               	goto	l162
 32881                           
 32882                           ;i2c_drv.c: 282: {
 32883                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 32884  001F0C  0E03               	movlw	3
 32885  001F0E  D01A               	goto	L66
 32886  001F10                     
 32887                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 32888  001F10  0100               	movlb	0	; () banked
 32889  001F12  EE20 F002          	lfsr	2,2
 32890  001F16  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32891  001F18  26D9               	addwf	fsr2l,f,c
 32892  001F1A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32893  001F1C  22DA               	addwfc	fsr2h,f,c
 32894  001F1E  CFDE F080          	movff	postinc2,??_I2c_WriteData
 32895  001F22  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 32896  001F26  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 32897  001F2A  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 32898  001F2E  50DF               	movf	indf2,w,c
 32899  001F30  EC5D  F032         	call	_WriteByte
 32900                           
 32901                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 32902  001F34  0E04               	movlw	4
 32903  001F36  D049               	goto	L64
 32904  001F38                     
 32905                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 32906  001F38  EC67  F032         	call	_CheckTxStatus	;wreg free
 32907  001F3C  0900               	iorlw	0
 32908  001F3E  A4D8               	btfss	status,2,c
 32909  001F40  D06E               	goto	l162
 32910                           
 32911                           ;i2c_drv.c: 300: {
 32912                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 32913  001F42  0E05               	movlw	5
 32914  001F44                     L66:
 32915  001F44  6E37               	movwf	I2c_WriteData@I2cNextState,c
 32916                           
 32917                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 32918  001F46  0E08               	movlw	8
 32919  001F48  D040               	goto	L64
 32920  001F4A                     
 32921                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 32922  001F4A  0100               	movlb	0	; () banked
 32923  001F4C  EE20 F004          	lfsr	2,4
 32924  001F50  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32925  001F52  26D9               	addwf	fsr2l,f,c
 32926  001F54  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32927  001F56  22DA               	addwfc	fsr2h,f,c
 32928  001F58  50DF               	movf	indf2,w,c
 32929  001F5A  B4D8               	btfsc	status,2,c
 32930  001F5C  D010               	goto	l170
 32931                           
 32932                           ; BSR set to: 0
 32933                           ;i2c_drv.c: 310: {
 32934                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 32935  001F5E  EE20 F004          	lfsr	2,4
 32936  001F62  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32937  001F64  26D9               	addwf	fsr2l,f,c
 32938  001F66  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32939  001F68  22DA               	addwfc	fsr2h,f,c
 32940  001F6A  06DF               	decf	indf2,f,c
 32941                           
 32942                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 32943  001F6C  EE20 F002          	lfsr	2,2
 32944  001F70  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32945  001F72  26D9               	addwf	fsr2l,f,c
 32946  001F74  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32947  001F76  22DA               	addwfc	fsr2h,f,c
 32948  001F78  2ADE               	incf	postinc2,f,c
 32949  001F7A  0E00               	movlw	0
 32950  001F7C  22DD               	addwfc	postdec2,f,c
 32951  001F7E                     l170:
 32952                           
 32953                           ; BSR set to: 0
 32954                           ;i2c_drv.c: 315: }
 32955                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 32956  001F7E  EE20 F004          	lfsr	2,4
 32957  001F82  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32958  001F84  26D9               	addwf	fsr2l,f,c
 32959  001F86  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32960  001F88  22DA               	addwfc	fsr2h,f,c
 32961  001F8A  50DF               	movf	indf2,w,c
 32962  001F8C  A4D8               	btfss	status,2,c
 32963  001F8E  D002               	goto	l171
 32964                           
 32965                           ; BSR set to: 0
 32966                           ;i2c_drv.c: 319: {
 32967                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 32968  001F90  0E06               	movlw	6
 32969  001F92  D01B               	goto	L64
 32970  001F94                     l171:
 32971                           
 32972                           ; BSR set to: 0
 32973                           ;i2c_drv.c: 323: else
 32974                           ;i2c_drv.c: 324: {
 32975                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 32976                           
 32977                           ; BSR set to: 0
 32978  001F94  0E03               	movlw	3
 32979  001F96  D019               	goto	L64
 32980  001F98                     
 32981                           ;i2c_drv.c: 332: StopCondition();
 32982                           
 32983                           ; BSR set to: 0
 32984  001F98  EC7D  F032         	call	_StopCondition	;wreg free
 32985                           
 32986                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 32987  001F9C  0E07               	movlw	7
 32988  001F9E  D015               	goto	L64
 32989  001FA0                     
 32990                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 32991  001FA0  0E00               	movlw	0
 32992  001FA2  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 32993                           
 32994                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 32995  001FA4  0E00               	movlw	0
 32996  001FA6  6E37               	movwf	I2c_WriteData@I2cNextState,c
 32997                           
 32998                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 32999  001FA8  0E02               	movlw	2
 33000  001FAA  D018               	goto	L65
 33001  001FAC                     
 33002                           ;i2c_drv.c: 347: TentativeCounter++;
 33003  001FAC  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 33004                           
 33005                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 33006  001FAE  EC6C  F032         	call	_CheckAckStatus	;wreg free
 33007  001FB2  0900               	iorlw	0
 33008  001FB4  A4D8               	btfss	status,2,c
 33009  001FB6  D005               	goto	l176
 33010                           
 33011                           ;i2c_drv.c: 350: {
 33012                           ;i2c_drv.c: 352: TentativeCounter = 0;
 33013  001FB8  0E00               	movlw	0
 33014  001FBA  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 33015                           
 33016                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 33017  001FBC  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 33018                           
 33019                           ;i2c_drv.c: 355: }
 33020  001FC0  D02E               	goto	l162
 33021  001FC2                     l176:
 33022                           
 33023                           ;i2c_drv.c: 356: else
 33024                           ;i2c_drv.c: 357: {
 33025                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 33026  001FC2  0E02               	movlw	2
 33027  001FC4  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 33028  001FC6  D02B               	goto	l162
 33029                           
 33030                           ;i2c_drv.c: 360: {
 33031                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 33032  001FC8  0E09               	movlw	9
 33033  001FCA                     L64:
 33034  001FCA  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 33035                           
 33036                           ;i2c_drv.c: 363: }
 33037                           ;i2c_drv.c: 364: }
 33038                           ;i2c_drv.c: 365: break;
 33039  001FCC  D028               	goto	l162
 33040  001FCE                     
 33041                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 33042  001FCE  0E00               	movlw	0
 33043  001FD0  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 33044                           
 33045                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 33046  001FD2  0E00               	movlw	0
 33047  001FD4  6E37               	movwf	I2c_WriteData@I2cNextState,c
 33048                           
 33049                           ;i2c_drv.c: 372: TentativeCounter = 0;
 33050  001FD6  0E00               	movlw	0
 33051  001FD8  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 33052                           
 33053                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 33054  001FDA  0E01               	movlw	1
 33055  001FDC                     L65:
 33056  001FDC  6E35               	movwf	I2c_WriteData@WriteStatus,c
 33057                           
 33058                           ;i2c_drv.c: 379: }
 33059                           
 33060                           ;i2c_drv.c: 378: break;
 33061                           
 33062                           ;i2c_drv.c: 377: default:
 33063                           
 33064                           ;i2c_drv.c: 375: break;
 33065  001FDE  D01F               	goto	l162
 33066  001FE0                     l160:
 33067  001FE0  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 33068                           
 33069                           ; Switch size 1, requested type "space"
 33070                           ; Number of cases is 10, Range of values is 0 to 9
 33071                           ; switch strategies available:
 33072                           ; Name         Instructions Cycles
 33073                           ; simple_byte           31    16 (average)
 33074                           ;	Chosen strategy is simple_byte
 33075  001FE2  0A00               	xorlw	0	; case 0
 33076  001FE4  B4D8               	btfsc	status,2,c
 33077  001FE6  D767               	goto	l161
 33078  001FE8  0A01               	xorlw	1	; case 1
 33079  001FEA  B4D8               	btfsc	status,2,c
 33080  001FEC  D76A               	goto	l163
 33081  001FEE  0A03               	xorlw	3	; case 2
 33082  001FF0  B4D8               	btfsc	status,2,c
 33083  001FF2  D787               	goto	l164
 33084  001FF4  0A01               	xorlw	1	; case 3
 33085  001FF6  B4D8               	btfsc	status,2,c
 33086  001FF8  D78B               	goto	l166
 33087  001FFA  0A07               	xorlw	7	; case 4
 33088  001FFC  B4D8               	btfsc	status,2,c
 33089  001FFE  D79C               	goto	l167
 33090  002000  0A01               	xorlw	1	; case 5
 33091  002002  B4D8               	btfsc	status,2,c
 33092  002004  D7A2               	goto	l169
 33093  002006  0A03               	xorlw	3	; case 6
 33094  002008  B4D8               	btfsc	status,2,c
 33095  00200A  D7C6               	goto	l173
 33096  00200C  0A01               	xorlw	1	; case 7
 33097  00200E  B4D8               	btfsc	status,2,c
 33098  002010  D7C7               	goto	l174
 33099  002012  0A0F               	xorlw	15	; case 8
 33100  002014  B4D8               	btfsc	status,2,c
 33101  002016  D7CA               	goto	l175
 33102  002018  0A01               	xorlw	1	; case 9
 33103  00201A  B4D8               	btfsc	status,2,c
 33104  00201C  D7D8               	goto	l179
 33105  00201E                     l162:
 33106                           
 33107                           ;i2c_drv.c: 382: return WriteStatus;
 33108  00201E  5035               	movf	I2c_WriteData@WriteStatus,w,c
 33109  002020  0012               	return	
 33110  002022                     __end_of_I2c_WriteData:
 33111                           	opt stack 0
 33112                           tosu	equ	0xFFF
 33113                           tosh	equ	0xFFE
 33114                           tosl	equ	0xFFD
 33115                           pclath	equ	0xFFA
 33116                           tblptru	equ	0xFF8
 33117                           tblptrh	equ	0xFF7
 33118                           tblptrl	equ	0xFF6
 33119                           tablat	equ	0xFF5
 33120                           prodh	equ	0xFF4
 33121                           prodl	equ	0xFF3
 33122                           intcon	equ	0xFF2
 33123                           intcon2	equ	0xFF1
 33124                           intcon3	equ	0xFF0
 33125                           indf0	equ	0xFEF
 33126                           postinc0	equ	0xFEE
 33127                           plusw0	equ	0xFEB
 33128                           fsr0h	equ	0xFEA
 33129                           fsr0l	equ	0xFE9
 33130                           wreg	equ	0xFE8
 33131                           indf1	equ	0xFE7
 33132                           postinc1	equ	0xFE6
 33133                           postdec1	equ	0xFE5
 33134                           plusw1	equ	0xFE3
 33135                           fsr1h	equ	0xFE2
 33136                           fsr1l	equ	0xFE1
 33137                           indf2	equ	0xFDF
 33138                           postinc2	equ	0xFDE
 33139                           postdec2	equ	0xFDD
 33140                           plusw2	equ	0xFDB
 33141                           fsr2h	equ	0xFDA
 33142                           fsr2l	equ	0xFD9
 33143                           status	equ	0xFD8
 33144                           
 33145 ;; *************** function _I2c_ReadData *****************
 33146 ;; Defined at:
 33147 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33148 ;; Parameters:    Size  Location     Type
 33149 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 33150 ;;		 -> I2cRxPacket(6), 
 33151 ;; Auto vars:     Size  Location     Type
 33152 ;;		None
 33153 ;; Return value:  Size  Location     Type
 33154 ;;                  1    wreg      enum E7787
 33155 ;; Registers used:
 33156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33157 ;; Tracked objects:
 33158 ;;		On entry : 0/0
 33159 ;;		On exit  : 0/0
 33160 ;;		Unchanged: 0/0
 33161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33162 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33164 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33165 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33166 ;;Total ram usage:        4 bytes
 33167 ;; Hardware stack levels used:    1
 33168 ;; Hardware stack levels required when called:   12
 33169 ;; This function calls:
 33170 ;;		_CheckAckStatus
 33171 ;;		_CheckTxStatus
 33172 ;;		_EnableReceiver
 33173 ;;		_GenerateEvt
 33174 ;;		_ReadByte
 33175 ;;		_SetAckStatus
 33176 ;;		_StartCondition
 33177 ;;		_StopCondition
 33178 ;;		_WriteByte
 33179 ;; This function is called by:
 33180 ;;		_I2cSendMsgSm
 33181 ;; This function uses a non-reentrant model
 33182 ;;
 33183                           
 33184                           	psect	text156
 33185  002022                     __ptext156:
 33186                           	opt stack 0
 33187  002022                     _I2c_ReadData:
 33188                           	opt stack 14
 33189                           
 33190                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 33191                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 33192                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 33193                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 33194                           ;i2c_drv.c: 402: switch (I2cReadState)
 33195                           
 33196                           ;incstack = 0
 33197  002022  D090               	goto	l192
 33198  002024                     
 33199                           ;i2c_drv.c: 406: StartCondition();
 33200  002024  EC7F  F032         	call	_StartCondition	;wreg free
 33201                           
 33202                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 33203  002028  0E00               	movlw	0
 33204  00202A  6E31               	movwf	I2c_ReadData@ReadStatus,c
 33205                           
 33206                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 33207  00202C  0E01               	movlw	1
 33208  00202E  D083               	goto	L74
 33209  002030                     
 33210                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 33211  002030  0100               	movlb	0	; () banked
 33212  002032  EE20 F001          	lfsr	2,1
 33213  002036  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 33214  002038  26D9               	addwf	fsr2l,f,c
 33215  00203A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 33216  00203C  22DA               	addwfc	fsr2h,f,c
 33217  00203E  50DF               	movf	indf2,w,c
 33218  002040  6F82               	movwf	??_I2c_ReadData& (0+255),b
 33219  002042  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 33220  002046  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 33221  00204A  50DF               	movf	indf2,w,c
 33222  00204C  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 33223  00204E  90D8               	bcf	status,0,c
 33224  002050  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 33225  002052  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 33226  002054  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 33227  002058  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 33228  00205C  6EDF               	movwf	indf2,c
 33229                           
 33230                           ; BSR set to: 0
 33231                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 33232  00205E  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 33233  002062  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 33234  002066  50DF               	movf	indf2,w,c
 33235  002068  EC5D  F032         	call	_WriteByte
 33236                           
 33237                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 33238  00206C  0E02               	movlw	2
 33239  00206E  D063               	goto	L74
 33240  002070                     
 33241                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 33242  002070  EC67  F032         	call	_CheckTxStatus	;wreg free
 33243  002074  0900               	iorlw	0
 33244  002076  A4D8               	btfss	status,2,c
 33245  002078  D081               	goto	l194
 33246                           
 33247                           ;i2c_drv.c: 425: {
 33248                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 33249  00207A  0E03               	movlw	3
 33250  00207C  D05C               	goto	L74
 33251  00207E                     
 33252                           ;i2c_drv.c: 433: TentativeCounter++;
 33253  00207E  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 33254                           
 33255                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 33256  002080  EC6C  F032         	call	_CheckAckStatus	;wreg free
 33257  002084  0900               	iorlw	0
 33258  002086  A4D8               	btfss	status,2,c
 33259  002088  D004               	goto	l199
 33260                           
 33261                           ;i2c_drv.c: 436: {
 33262                           ;i2c_drv.c: 438: TentativeCounter = 0;
 33263  00208A  0E00               	movlw	0
 33264  00208C  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 33265  00208E                     
 33266                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 33267  00208E  0E04               	movlw	4
 33268  002090  D052               	goto	L74
 33269  002092                     l199:
 33270                           
 33271                           ;i2c_drv.c: 442: else
 33272                           ;i2c_drv.c: 443: {
 33273                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 33274  002092  0E02               	movlw	2
 33275  002094  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 33276  002096  D072               	goto	l194
 33277                           
 33278                           ;i2c_drv.c: 446: {
 33279                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 33280  002098  0E08               	movlw	8
 33281  00209A  D04D               	goto	L74
 33282  00209C                     
 33283                           ;i2c_drv.c: 455: EnableReceiver();
 33284  00209C  EC81  F032         	call	_EnableReceiver	;wreg free
 33285                           
 33286                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 33287  0020A0  0E05               	movlw	5
 33288  0020A2  D049               	goto	L74
 33289  0020A4                     
 33290                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 33291  0020A4  EC67  F032         	call	_CheckTxStatus	;wreg free
 33292  0020A8  0900               	iorlw	0
 33293  0020AA  A4D8               	btfss	status,2,c
 33294  0020AC  D067               	goto	l194
 33295                           
 33296                           ;i2c_drv.c: 463: {
 33297                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 33298  0020AE  0100               	movlb	0	; () banked
 33299  0020B0  EE20 F002          	lfsr	2,2
 33300  0020B4  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 33301  0020B6  26D9               	addwf	fsr2l,f,c
 33302  0020B8  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 33303  0020BA  22DA               	addwfc	fsr2h,f,c
 33304  0020BC  CFDE F082          	movff	postinc2,??_I2c_ReadData
 33305  0020C0  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 33306  0020C4  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 33307  0020C8  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 33308  0020CC  EC62  F032         	call	_ReadByte	;wreg free
 33309  0020D0  6EDF               	movwf	indf2,c
 33310                           
 33311                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 33312  0020D2  0100               	movlb	0	; () banked
 33313  0020D4  EE20 F002          	lfsr	2,2
 33314  0020D8  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 33315  0020DA  26D9               	addwf	fsr2l,f,c
 33316  0020DC  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 33317  0020DE  22DA               	addwfc	fsr2h,f,c
 33318  0020E0  2ADE               	incf	postinc2,f,c
 33319  0020E2  0E00               	movlw	0
 33320  0020E4  22DD               	addwfc	postdec2,f,c
 33321                           
 33322                           ; BSR set to: 0
 33323                           ;i2c_drv.c: 469: DataCounter++;
 33324  0020E6  2A33               	incf	I2c_ReadData@DataCounter,f,c
 33325                           
 33326                           ; BSR set to: 0
 33327                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 33328  0020E8  0E06               	movlw	6
 33329  0020EA  D025               	goto	L74
 33330  0020EC                     
 33331                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 33332                           
 33333                           ; BSR set to: 0
 33334  0020EC  0100               	movlb	0	; () banked
 33335  0020EE  EE20 F004          	lfsr	2,4
 33336  0020F2  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 33337  0020F4  26D9               	addwf	fsr2l,f,c
 33338  0020F6  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 33339  0020F8  22DA               	addwfc	fsr2h,f,c
 33340  0020FA  50DE               	movf	postinc2,w,c
 33341  0020FC  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 33342  0020FE  A0D8               	btfss	status,0,c
 33343  002100  D008               	goto	l206
 33344                           
 33345                           ; BSR set to: 0
 33346                           ;i2c_drv.c: 478: {
 33347                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 33348  002102  0E01               	movlw	1
 33349  002104  ECF7  F031         	call	_SetAckStatus
 33350                           
 33351                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 33352  002108  0E07               	movlw	7
 33353  00210A  6E34               	movwf	I2c_ReadData@I2cReadState,c
 33354                           
 33355                           ;i2c_drv.c: 484: DataCounter = 0;
 33356  00210C  0E00               	movlw	0
 33357  00210E  6E33               	movwf	I2c_ReadData@DataCounter,c
 33358                           
 33359                           ;i2c_drv.c: 485: }
 33360  002110  D035               	goto	l194
 33361  002112                     l206:
 33362                           
 33363                           ;i2c_drv.c: 486: else
 33364                           ;i2c_drv.c: 487: {
 33365                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 33366  002112  0E00               	movlw	0
 33367  002114  ECF7  F031         	call	_SetAckStatus
 33368  002118  D7BA               	goto	L75
 33369  00211A                     
 33370                           ;i2c_drv.c: 497: StopCondition();
 33371  00211A  EC7D  F032         	call	_StopCondition	;wreg free
 33372                           
 33373                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 33374  00211E  0E02               	movlw	2
 33375  002120  6E31               	movwf	I2c_ReadData@ReadStatus,c
 33376                           
 33377                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 33378  002122  0E05               	movlw	5
 33379  002124  0100               	movlb	0	; () banked
 33380  002126  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 33381  002128  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 33382  00212A  0E00               	movlw	0
 33383  00212C  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 33384  00212E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 33385  002130  ECB3  F031         	call	_GenerateEvt	;wreg free
 33386                           
 33387                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 33388  002134  0E00               	movlw	0
 33389  002136                     L74:
 33390  002136  6E34               	movwf	I2c_ReadData@I2cReadState,c
 33391                           
 33392                           ;i2c_drv.c: 504: break;
 33393  002138  D021               	goto	l194
 33394  00213A                     
 33395                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 33396  00213A  0E00               	movlw	0
 33397  00213C  6E34               	movwf	I2c_ReadData@I2cReadState,c
 33398                           
 33399                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 33400  00213E  0E01               	movlw	1
 33401  002140  6E31               	movwf	I2c_ReadData@ReadStatus,c
 33402                           
 33403                           ;i2c_drv.c: 515: }
 33404                           
 33405                           ;i2c_drv.c: 514: break;
 33406                           
 33407                           ;i2c_drv.c: 513: default:
 33408                           
 33409                           ;i2c_drv.c: 511: break;
 33410  002142  D01C               	goto	l194
 33411  002144                     l192:
 33412  002144  5034               	movf	I2c_ReadData@I2cReadState,w,c
 33413                           
 33414                           ; Switch size 1, requested type "space"
 33415                           ; Number of cases is 9, Range of values is 0 to 8
 33416                           ; switch strategies available:
 33417                           ; Name         Instructions Cycles
 33418                           ; simple_byte           28    15 (average)
 33419                           ;	Chosen strategy is simple_byte
 33420  002146  0A00               	xorlw	0	; case 0
 33421  002148  B4D8               	btfsc	status,2,c
 33422  00214A  D76C               	goto	l193
 33423  00214C  0A01               	xorlw	1	; case 1
 33424  00214E  B4D8               	btfsc	status,2,c
 33425  002150  D76F               	goto	l195
 33426  002152  0A03               	xorlw	3	; case 2
 33427  002154  B4D8               	btfsc	status,2,c
 33428  002156  D78C               	goto	l196
 33429  002158  0A01               	xorlw	1	; case 3
 33430  00215A  B4D8               	btfsc	status,2,c
 33431  00215C  D790               	goto	l198
 33432  00215E  0A07               	xorlw	7	; case 4
 33433  002160  B4D8               	btfsc	status,2,c
 33434  002162  D79C               	goto	l202
 33435  002164  0A01               	xorlw	1	; case 5
 33436  002166  B4D8               	btfsc	status,2,c
 33437  002168  D79D               	goto	l203
 33438  00216A  0A03               	xorlw	3	; case 6
 33439  00216C  B4D8               	btfsc	status,2,c
 33440  00216E  D7BE               	goto	l205
 33441  002170  0A01               	xorlw	1	; case 7
 33442  002172  B4D8               	btfsc	status,2,c
 33443  002174  D7D2               	goto	l208
 33444  002176  0A0F               	xorlw	15	; case 8
 33445  002178  B4D8               	btfsc	status,2,c
 33446  00217A  D7DF               	goto	l209
 33447  00217C                     l194:
 33448                           
 33449                           ;i2c_drv.c: 518: return ReadStatus;
 33450  00217C  5031               	movf	I2c_ReadData@ReadStatus,w,c
 33451  00217E  0012               	return	
 33452  002180                     __end_of_I2c_ReadData:
 33453                           	opt stack 0
 33454                           tosu	equ	0xFFF
 33455                           tosh	equ	0xFFE
 33456                           tosl	equ	0xFFD
 33457                           pclath	equ	0xFFA
 33458                           tblptru	equ	0xFF8
 33459                           tblptrh	equ	0xFF7
 33460                           tblptrl	equ	0xFF6
 33461                           tablat	equ	0xFF5
 33462                           prodh	equ	0xFF4
 33463                           prodl	equ	0xFF3
 33464                           intcon	equ	0xFF2
 33465                           intcon2	equ	0xFF1
 33466                           intcon3	equ	0xFF0
 33467                           indf0	equ	0xFEF
 33468                           postinc0	equ	0xFEE
 33469                           plusw0	equ	0xFEB
 33470                           fsr0h	equ	0xFEA
 33471                           fsr0l	equ	0xFE9
 33472                           wreg	equ	0xFE8
 33473                           indf1	equ	0xFE7
 33474                           postinc1	equ	0xFE6
 33475                           postdec1	equ	0xFE5
 33476                           plusw1	equ	0xFE3
 33477                           fsr1h	equ	0xFE2
 33478                           fsr1l	equ	0xFE1
 33479                           indf2	equ	0xFDF
 33480                           postinc2	equ	0xFDE
 33481                           postdec2	equ	0xFDD
 33482                           plusw2	equ	0xFDB
 33483                           fsr2h	equ	0xFDA
 33484                           fsr2l	equ	0xFD9
 33485                           status	equ	0xFD8
 33486                           
 33487 ;; *************** function _WriteByte *****************
 33488 ;; Defined at:
 33489 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33490 ;; Parameters:    Size  Location     Type
 33491 ;;  Byte            1    wreg     unsigned char 
 33492 ;; Auto vars:     Size  Location     Type
 33493 ;;  Byte            1   29[BANK0 ] unsigned char 
 33494 ;; Return value:  Size  Location     Type
 33495 ;;                  1    wreg      void 
 33496 ;; Registers used:
 33497 ;;		wreg
 33498 ;; Tracked objects:
 33499 ;;		On entry : 0/0
 33500 ;;		On exit  : 0/0
 33501 ;;		Unchanged: 0/0
 33502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33504 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33506 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33507 ;;Total ram usage:        1 bytes
 33508 ;; Hardware stack levels used:    1
 33509 ;; Hardware stack levels required when called:   11
 33510 ;; This function calls:
 33511 ;;		Nothing
 33512 ;; This function is called by:
 33513 ;;		_I2c_WriteData
 33514 ;;		_I2c_ReadData
 33515 ;; This function uses a non-reentrant model
 33516 ;;
 33517                           
 33518                           	psect	text157
 33519  0064BA                     __ptext157:
 33520                           	opt stack 0
 33521  0064BA                     _WriteByte:
 33522                           	opt stack 14
 33523                           
 33524                           ;incstack = 0
 33525                           ;WriteByte@Byte stored from wreg
 33526  0064BA  0100               	movlb	0	; () banked
 33527  0064BC  6F7D               	movwf	WriteByte@Byte& (0+255),b
 33528                           
 33529                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 33530  0064BE  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 33531  0064C2  0012               	return		;funcret
 33532  0064C4                     __end_of_WriteByte:
 33533                           	opt stack 0
 33534                           tosu	equ	0xFFF
 33535                           tosh	equ	0xFFE
 33536                           tosl	equ	0xFFD
 33537                           pclath	equ	0xFFA
 33538                           tblptru	equ	0xFF8
 33539                           tblptrh	equ	0xFF7
 33540                           tblptrl	equ	0xFF6
 33541                           tablat	equ	0xFF5
 33542                           prodh	equ	0xFF4
 33543                           prodl	equ	0xFF3
 33544                           intcon	equ	0xFF2
 33545                           intcon2	equ	0xFF1
 33546                           intcon3	equ	0xFF0
 33547                           indf0	equ	0xFEF
 33548                           postinc0	equ	0xFEE
 33549                           plusw0	equ	0xFEB
 33550                           fsr0h	equ	0xFEA
 33551                           fsr0l	equ	0xFE9
 33552                           wreg	equ	0xFE8
 33553                           indf1	equ	0xFE7
 33554                           postinc1	equ	0xFE6
 33555                           postdec1	equ	0xFE5
 33556                           plusw1	equ	0xFE3
 33557                           fsr1h	equ	0xFE2
 33558                           fsr1l	equ	0xFE1
 33559                           indf2	equ	0xFDF
 33560                           postinc2	equ	0xFDE
 33561                           postdec2	equ	0xFDD
 33562                           plusw2	equ	0xFDB
 33563                           fsr2h	equ	0xFDA
 33564                           fsr2l	equ	0xFD9
 33565                           status	equ	0xFD8
 33566                           
 33567 ;; *************** function _StopCondition *****************
 33568 ;; Defined at:
 33569 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33570 ;; Parameters:    Size  Location     Type
 33571 ;;		None
 33572 ;; Auto vars:     Size  Location     Type
 33573 ;;		None
 33574 ;; Return value:  Size  Location     Type
 33575 ;;                  1    wreg      void 
 33576 ;; Registers used:
 33577 ;;		status,2, status,0
 33578 ;; Tracked objects:
 33579 ;;		On entry : 0/0
 33580 ;;		On exit  : 0/0
 33581 ;;		Unchanged: 0/0
 33582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33587 ;;Total ram usage:        0 bytes
 33588 ;; Hardware stack levels used:    1
 33589 ;; Hardware stack levels required when called:   11
 33590 ;; This function calls:
 33591 ;;		Nothing
 33592 ;; This function is called by:
 33593 ;;		_I2c_WriteData
 33594 ;;		_I2c_ReadData
 33595 ;; This function uses a non-reentrant model
 33596 ;;
 33597                           
 33598                           	psect	text158
 33599  0064FA                     __ptext158:
 33600                           	opt stack 0
 33601  0064FA                     _StopCondition:
 33602                           	opt stack 14
 33603                           
 33604                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 33605                           
 33606                           ;incstack = 0
 33607  0064FA  8471               	bsf	3953,2,c	;volatile
 33608  0064FC  0012               	return		;funcret
 33609  0064FE                     __end_of_StopCondition:
 33610                           	opt stack 0
 33611                           tosu	equ	0xFFF
 33612                           tosh	equ	0xFFE
 33613                           tosl	equ	0xFFD
 33614                           pclath	equ	0xFFA
 33615                           tblptru	equ	0xFF8
 33616                           tblptrh	equ	0xFF7
 33617                           tblptrl	equ	0xFF6
 33618                           tablat	equ	0xFF5
 33619                           prodh	equ	0xFF4
 33620                           prodl	equ	0xFF3
 33621                           intcon	equ	0xFF2
 33622                           intcon2	equ	0xFF1
 33623                           intcon3	equ	0xFF0
 33624                           indf0	equ	0xFEF
 33625                           postinc0	equ	0xFEE
 33626                           plusw0	equ	0xFEB
 33627                           fsr0h	equ	0xFEA
 33628                           fsr0l	equ	0xFE9
 33629                           wreg	equ	0xFE8
 33630                           indf1	equ	0xFE7
 33631                           postinc1	equ	0xFE6
 33632                           postdec1	equ	0xFE5
 33633                           plusw1	equ	0xFE3
 33634                           fsr1h	equ	0xFE2
 33635                           fsr1l	equ	0xFE1
 33636                           indf2	equ	0xFDF
 33637                           postinc2	equ	0xFDE
 33638                           postdec2	equ	0xFDD
 33639                           plusw2	equ	0xFDB
 33640                           fsr2h	equ	0xFDA
 33641                           fsr2l	equ	0xFD9
 33642                           status	equ	0xFD8
 33643                           
 33644 ;; *************** function _StartCondition *****************
 33645 ;; Defined at:
 33646 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33647 ;; Parameters:    Size  Location     Type
 33648 ;;		None
 33649 ;; Auto vars:     Size  Location     Type
 33650 ;;		None
 33651 ;; Return value:  Size  Location     Type
 33652 ;;                  1    wreg      void 
 33653 ;; Registers used:
 33654 ;;		status,2, status,0
 33655 ;; Tracked objects:
 33656 ;;		On entry : 0/0
 33657 ;;		On exit  : 0/0
 33658 ;;		Unchanged: 0/0
 33659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33664 ;;Total ram usage:        0 bytes
 33665 ;; Hardware stack levels used:    1
 33666 ;; Hardware stack levels required when called:   11
 33667 ;; This function calls:
 33668 ;;		Nothing
 33669 ;; This function is called by:
 33670 ;;		_I2c_WriteData
 33671 ;;		_I2c_ReadData
 33672 ;; This function uses a non-reentrant model
 33673 ;;
 33674                           
 33675                           	psect	text159
 33676  0064FE                     __ptext159:
 33677                           	opt stack 0
 33678  0064FE                     _StartCondition:
 33679                           	opt stack 14
 33680                           
 33681                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 33682                           
 33683                           ;incstack = 0
 33684  0064FE  8071               	bsf	3953,0,c	;volatile
 33685  006500  0012               	return		;funcret
 33686  006502                     __end_of_StartCondition:
 33687                           	opt stack 0
 33688                           tosu	equ	0xFFF
 33689                           tosh	equ	0xFFE
 33690                           tosl	equ	0xFFD
 33691                           pclath	equ	0xFFA
 33692                           tblptru	equ	0xFF8
 33693                           tblptrh	equ	0xFF7
 33694                           tblptrl	equ	0xFF6
 33695                           tablat	equ	0xFF5
 33696                           prodh	equ	0xFF4
 33697                           prodl	equ	0xFF3
 33698                           intcon	equ	0xFF2
 33699                           intcon2	equ	0xFF1
 33700                           intcon3	equ	0xFF0
 33701                           indf0	equ	0xFEF
 33702                           postinc0	equ	0xFEE
 33703                           plusw0	equ	0xFEB
 33704                           fsr0h	equ	0xFEA
 33705                           fsr0l	equ	0xFE9
 33706                           wreg	equ	0xFE8
 33707                           indf1	equ	0xFE7
 33708                           postinc1	equ	0xFE6
 33709                           postdec1	equ	0xFE5
 33710                           plusw1	equ	0xFE3
 33711                           fsr1h	equ	0xFE2
 33712                           fsr1l	equ	0xFE1
 33713                           indf2	equ	0xFDF
 33714                           postinc2	equ	0xFDE
 33715                           postdec2	equ	0xFDD
 33716                           plusw2	equ	0xFDB
 33717                           fsr2h	equ	0xFDA
 33718                           fsr2l	equ	0xFD9
 33719                           status	equ	0xFD8
 33720                           
 33721 ;; *************** function _SetAckStatus *****************
 33722 ;; Defined at:
 33723 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33724 ;; Parameters:    Size  Location     Type
 33725 ;;  AckSts          1    wreg     unsigned char 
 33726 ;; Auto vars:     Size  Location     Type
 33727 ;;  AckSts          1   29[BANK0 ] unsigned char 
 33728 ;; Return value:  Size  Location     Type
 33729 ;;                  1    wreg      void 
 33730 ;; Registers used:
 33731 ;;		wreg
 33732 ;; Tracked objects:
 33733 ;;		On entry : 0/0
 33734 ;;		On exit  : 0/0
 33735 ;;		Unchanged: 0/0
 33736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33740 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33741 ;;Total ram usage:        1 bytes
 33742 ;; Hardware stack levels used:    1
 33743 ;; Hardware stack levels required when called:   11
 33744 ;; This function calls:
 33745 ;;		Nothing
 33746 ;; This function is called by:
 33747 ;;		_I2c_ReadData
 33748 ;; This function uses a non-reentrant model
 33749 ;;
 33750                           
 33751                           	psect	text160
 33752  0063EE                     __ptext160:
 33753                           	opt stack 0
 33754  0063EE                     _SetAckStatus:
 33755                           	opt stack 14
 33756                           
 33757                           ;incstack = 0
 33758                           ;SetAckStatus@AckSts stored from wreg
 33759  0063EE  0100               	movlb	0	; () banked
 33760  0063F0  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 33761                           
 33762                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 33763  0063F2  0100               	movlb	0	; () banked
 33764  0063F4  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 33765  0063F6  D002               	bra	u11685
 33766  0063F8  9A71               	bcf	3953,5,c	;volatile
 33767  0063FA  D001               	bra	u11686
 33768  0063FC                     u11685:
 33769  0063FC  8A71               	bsf	3953,5,c	;volatile
 33770  0063FE                     u11686:
 33771                           
 33772                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 33773  0063FE  8871               	bsf	3953,4,c	;volatile
 33774  006400  0012               	return		;funcret
 33775  006402                     __end_of_SetAckStatus:
 33776                           	opt stack 0
 33777                           tosu	equ	0xFFF
 33778                           tosh	equ	0xFFE
 33779                           tosl	equ	0xFFD
 33780                           pclath	equ	0xFFA
 33781                           tblptru	equ	0xFF8
 33782                           tblptrh	equ	0xFF7
 33783                           tblptrl	equ	0xFF6
 33784                           tablat	equ	0xFF5
 33785                           prodh	equ	0xFF4
 33786                           prodl	equ	0xFF3
 33787                           intcon	equ	0xFF2
 33788                           intcon2	equ	0xFF1
 33789                           intcon3	equ	0xFF0
 33790                           indf0	equ	0xFEF
 33791                           postinc0	equ	0xFEE
 33792                           plusw0	equ	0xFEB
 33793                           fsr0h	equ	0xFEA
 33794                           fsr0l	equ	0xFE9
 33795                           wreg	equ	0xFE8
 33796                           indf1	equ	0xFE7
 33797                           postinc1	equ	0xFE6
 33798                           postdec1	equ	0xFE5
 33799                           plusw1	equ	0xFE3
 33800                           fsr1h	equ	0xFE2
 33801                           fsr1l	equ	0xFE1
 33802                           indf2	equ	0xFDF
 33803                           postinc2	equ	0xFDE
 33804                           postdec2	equ	0xFDD
 33805                           plusw2	equ	0xFDB
 33806                           fsr2h	equ	0xFDA
 33807                           fsr2l	equ	0xFD9
 33808                           status	equ	0xFD8
 33809                           
 33810 ;; *************** function _ReadByte *****************
 33811 ;; Defined at:
 33812 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33813 ;; Parameters:    Size  Location     Type
 33814 ;;		None
 33815 ;; Auto vars:     Size  Location     Type
 33816 ;;  Byte            1   29[BANK0 ] unsigned char 
 33817 ;; Return value:  Size  Location     Type
 33818 ;;                  1    wreg      unsigned char 
 33819 ;; Registers used:
 33820 ;;		wreg, status,2
 33821 ;; Tracked objects:
 33822 ;;		On entry : 0/0
 33823 ;;		On exit  : 0/0
 33824 ;;		Unchanged: 0/0
 33825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33827 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33829 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33830 ;;Total ram usage:        1 bytes
 33831 ;; Hardware stack levels used:    1
 33832 ;; Hardware stack levels required when called:   11
 33833 ;; This function calls:
 33834 ;;		Nothing
 33835 ;; This function is called by:
 33836 ;;		_I2c_ReadData
 33837 ;; This function uses a non-reentrant model
 33838 ;;
 33839                           
 33840                           	psect	text161
 33841  0064C4                     __ptext161:
 33842                           	opt stack 0
 33843  0064C4                     _ReadByte:
 33844                           	opt stack 14
 33845                           
 33846                           ;i2c_drv.c: 207: UINT8 Byte;
 33847                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 33848                           
 33849                           ;incstack = 0
 33850  0064C4  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 33851                           
 33852                           ;i2c_drv.c: 213: return Byte;
 33853  0064C8  0100               	movlb	0	; () banked
 33854  0064CA  517D               	movf	ReadByte@Byte& (0+255),w,b
 33855  0064CC  0012               	return	
 33856  0064CE                     __end_of_ReadByte:
 33857                           	opt stack 0
 33858                           tosu	equ	0xFFF
 33859                           tosh	equ	0xFFE
 33860                           tosl	equ	0xFFD
 33861                           pclath	equ	0xFFA
 33862                           tblptru	equ	0xFF8
 33863                           tblptrh	equ	0xFF7
 33864                           tblptrl	equ	0xFF6
 33865                           tablat	equ	0xFF5
 33866                           prodh	equ	0xFF4
 33867                           prodl	equ	0xFF3
 33868                           intcon	equ	0xFF2
 33869                           intcon2	equ	0xFF1
 33870                           intcon3	equ	0xFF0
 33871                           indf0	equ	0xFEF
 33872                           postinc0	equ	0xFEE
 33873                           plusw0	equ	0xFEB
 33874                           fsr0h	equ	0xFEA
 33875                           fsr0l	equ	0xFE9
 33876                           wreg	equ	0xFE8
 33877                           indf1	equ	0xFE7
 33878                           postinc1	equ	0xFE6
 33879                           postdec1	equ	0xFE5
 33880                           plusw1	equ	0xFE3
 33881                           fsr1h	equ	0xFE2
 33882                           fsr1l	equ	0xFE1
 33883                           indf2	equ	0xFDF
 33884                           postinc2	equ	0xFDE
 33885                           postdec2	equ	0xFDD
 33886                           plusw2	equ	0xFDB
 33887                           fsr2h	equ	0xFDA
 33888                           fsr2l	equ	0xFD9
 33889                           status	equ	0xFD8
 33890                           
 33891 ;; *************** function _GenerateEvt *****************
 33892 ;; Defined at:
 33893 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 33894 ;; Parameters:    Size  Location     Type
 33895 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 33896 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 33897 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 33898 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 33899 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 33900 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 33901 ;; Auto vars:     Size  Location     Type
 33902 ;;  EventStatus     1   31[BANK0 ] enum E7727
 33903 ;; Return value:  Size  Location     Type
 33904 ;;                  1    wreg      enum E7699
 33905 ;; Registers used:
 33906 ;;		wreg, fsr2l, fsr2h, status,2
 33907 ;; Tracked objects:
 33908 ;;		On entry : 0/0
 33909 ;;		On exit  : 0/0
 33910 ;;		Unchanged: 0/0
 33911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33912 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33913 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33915 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33916 ;;Total ram usage:        3 bytes
 33917 ;; Hardware stack levels used:    1
 33918 ;; Hardware stack levels required when called:   11
 33919 ;; This function calls:
 33920 ;;		Nothing
 33921 ;; This function is called by:
 33922 ;;		_I2c_ReadData
 33923 ;;		_CheckModem
 33924 ;;		_TurnOnModem
 33925 ;;		_ConfigureModem
 33926 ;;		_ModemEvtParser
 33927 ;;		_GetSmsSm
 33928 ;;		_Mdm_RequestSmsData
 33929 ;;		_I2cSlv_SendI2cMsg
 33930 ;;		_I2cSlv_ReceiveI2cMsg
 33931 ;;		_RiSm
 33932 ;;		_Mdm_SendSmsData
 33933 ;;		_MdmHttp_InitGprsNetwork
 33934 ;;		_MdmHttp_GetMethod
 33935 ;;		_Alarm
 33936 ;; This function uses a non-reentrant model
 33937 ;;
 33938                           
 33939                           	psect	text162
 33940  006366                     __ptext162:
 33941                           	opt stack 0
 33942  006366                     _GenerateEvt:
 33943                           	opt stack 13
 33944                           
 33945                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 33946                           
 33947                           ; BSR set to: 0
 33948                           ;incstack = 0
 33949  006366  0E00               	movlw	0
 33950  006368  0100               	movlb	0	; () banked
 33951  00636A  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 33952                           
 33953                           ; BSR set to: 0
 33954                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 33955  00636C  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 33956  006370  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 33957  006374  0E02               	movlw	2
 33958  006376  6EDF               	movwf	indf2,c
 33959                           
 33960                           ; BSR set to: 0
 33961                           ;os_ser.c: 83: EventStatus = EventSent;
 33962  006378  0E02               	movlw	2
 33963  00637A  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 33964  00637C  0012               	return	
 33965  00637E                     __end_of_GenerateEvt:
 33966                           	opt stack 0
 33967                           tosu	equ	0xFFF
 33968                           tosh	equ	0xFFE
 33969                           tosl	equ	0xFFD
 33970                           pclath	equ	0xFFA
 33971                           tblptru	equ	0xFF8
 33972                           tblptrh	equ	0xFF7
 33973                           tblptrl	equ	0xFF6
 33974                           tablat	equ	0xFF5
 33975                           prodh	equ	0xFF4
 33976                           prodl	equ	0xFF3
 33977                           intcon	equ	0xFF2
 33978                           intcon2	equ	0xFF1
 33979                           intcon3	equ	0xFF0
 33980                           indf0	equ	0xFEF
 33981                           postinc0	equ	0xFEE
 33982                           plusw0	equ	0xFEB
 33983                           fsr0h	equ	0xFEA
 33984                           fsr0l	equ	0xFE9
 33985                           wreg	equ	0xFE8
 33986                           indf1	equ	0xFE7
 33987                           postinc1	equ	0xFE6
 33988                           postdec1	equ	0xFE5
 33989                           plusw1	equ	0xFE3
 33990                           fsr1h	equ	0xFE2
 33991                           fsr1l	equ	0xFE1
 33992                           indf2	equ	0xFDF
 33993                           postinc2	equ	0xFDE
 33994                           postdec2	equ	0xFDD
 33995                           plusw2	equ	0xFDB
 33996                           fsr2h	equ	0xFDA
 33997                           fsr2l	equ	0xFD9
 33998                           status	equ	0xFD8
 33999                           
 34000 ;; *************** function _EnableReceiver *****************
 34001 ;; Defined at:
 34002 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34003 ;; Parameters:    Size  Location     Type
 34004 ;;		None
 34005 ;; Auto vars:     Size  Location     Type
 34006 ;;		None
 34007 ;; Return value:  Size  Location     Type
 34008 ;;                  1    wreg      void 
 34009 ;; Registers used:
 34010 ;;		status,2, status,0
 34011 ;; Tracked objects:
 34012 ;;		On entry : 0/0
 34013 ;;		On exit  : 0/0
 34014 ;;		Unchanged: 0/0
 34015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34020 ;;Total ram usage:        0 bytes
 34021 ;; Hardware stack levels used:    1
 34022 ;; Hardware stack levels required when called:   11
 34023 ;; This function calls:
 34024 ;;		Nothing
 34025 ;; This function is called by:
 34026 ;;		_I2c_ReadData
 34027 ;; This function uses a non-reentrant model
 34028 ;;
 34029                           
 34030                           	psect	text163
 34031  006502                     __ptext163:
 34032                           	opt stack 0
 34033  006502                     _EnableReceiver:
 34034                           	opt stack 14
 34035                           
 34036                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 34037                           
 34038                           ; BSR set to: 0
 34039                           ;incstack = 0
 34040  006502  8671               	bsf	3953,3,c	;volatile
 34041  006504  0012               	return		;funcret
 34042  006506                     __end_of_EnableReceiver:
 34043                           	opt stack 0
 34044                           tosu	equ	0xFFF
 34045                           tosh	equ	0xFFE
 34046                           tosl	equ	0xFFD
 34047                           pclath	equ	0xFFA
 34048                           tblptru	equ	0xFF8
 34049                           tblptrh	equ	0xFF7
 34050                           tblptrl	equ	0xFF6
 34051                           tablat	equ	0xFF5
 34052                           prodh	equ	0xFF4
 34053                           prodl	equ	0xFF3
 34054                           intcon	equ	0xFF2
 34055                           intcon2	equ	0xFF1
 34056                           intcon3	equ	0xFF0
 34057                           indf0	equ	0xFEF
 34058                           postinc0	equ	0xFEE
 34059                           plusw0	equ	0xFEB
 34060                           fsr0h	equ	0xFEA
 34061                           fsr0l	equ	0xFE9
 34062                           wreg	equ	0xFE8
 34063                           indf1	equ	0xFE7
 34064                           postinc1	equ	0xFE6
 34065                           postdec1	equ	0xFE5
 34066                           plusw1	equ	0xFE3
 34067                           fsr1h	equ	0xFE2
 34068                           fsr1l	equ	0xFE1
 34069                           indf2	equ	0xFDF
 34070                           postinc2	equ	0xFDE
 34071                           postdec2	equ	0xFDD
 34072                           plusw2	equ	0xFDB
 34073                           fsr2h	equ	0xFDA
 34074                           fsr2l	equ	0xFD9
 34075                           status	equ	0xFD8
 34076                           
 34077 ;; *************** function _CheckTxStatus *****************
 34078 ;; Defined at:
 34079 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34080 ;; Parameters:    Size  Location     Type
 34081 ;;		None
 34082 ;; Auto vars:     Size  Location     Type
 34083 ;;		None
 34084 ;; Return value:  Size  Location     Type
 34085 ;;                  1    wreg      unsigned char 
 34086 ;; Registers used:
 34087 ;;		wreg, status,2, status,0
 34088 ;; Tracked objects:
 34089 ;;		On entry : 0/0
 34090 ;;		On exit  : 0/0
 34091 ;;		Unchanged: 0/0
 34092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34097 ;;Total ram usage:        0 bytes
 34098 ;; Hardware stack levels used:    1
 34099 ;; Hardware stack levels required when called:   11
 34100 ;; This function calls:
 34101 ;;		Nothing
 34102 ;; This function is called by:
 34103 ;;		_I2c_WriteData
 34104 ;;		_I2c_ReadData
 34105 ;; This function uses a non-reentrant model
 34106 ;;
 34107                           
 34108                           	psect	text164
 34109  0064CE                     __ptext164:
 34110                           	opt stack 0
 34111  0064CE                     _CheckTxStatus:
 34112                           	opt stack 14
 34113                           
 34114                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 34115                           
 34116                           ;incstack = 0
 34117  0064CE  4073               	rrncf	3955,w,c	;volatile
 34118  0064D0  42E8               	rrncf	wreg,f,c
 34119  0064D2  0B3F               	andlw	63
 34120  0064D4  0B01               	andlw	1
 34121  0064D6  0012               	return	
 34122  0064D8                     __end_of_CheckTxStatus:
 34123                           	opt stack 0
 34124                           tosu	equ	0xFFF
 34125                           tosh	equ	0xFFE
 34126                           tosl	equ	0xFFD
 34127                           pclath	equ	0xFFA
 34128                           tblptru	equ	0xFF8
 34129                           tblptrh	equ	0xFF7
 34130                           tblptrl	equ	0xFF6
 34131                           tablat	equ	0xFF5
 34132                           prodh	equ	0xFF4
 34133                           prodl	equ	0xFF3
 34134                           intcon	equ	0xFF2
 34135                           intcon2	equ	0xFF1
 34136                           intcon3	equ	0xFF0
 34137                           indf0	equ	0xFEF
 34138                           postinc0	equ	0xFEE
 34139                           plusw0	equ	0xFEB
 34140                           fsr0h	equ	0xFEA
 34141                           fsr0l	equ	0xFE9
 34142                           wreg	equ	0xFE8
 34143                           indf1	equ	0xFE7
 34144                           postinc1	equ	0xFE6
 34145                           postdec1	equ	0xFE5
 34146                           plusw1	equ	0xFE3
 34147                           fsr1h	equ	0xFE2
 34148                           fsr1l	equ	0xFE1
 34149                           indf2	equ	0xFDF
 34150                           postinc2	equ	0xFDE
 34151                           postdec2	equ	0xFDD
 34152                           plusw2	equ	0xFDB
 34153                           fsr2h	equ	0xFDA
 34154                           fsr2l	equ	0xFD9
 34155                           status	equ	0xFD8
 34156                           
 34157 ;; *************** function _CheckAckStatus *****************
 34158 ;; Defined at:
 34159 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34160 ;; Parameters:    Size  Location     Type
 34161 ;;		None
 34162 ;; Auto vars:     Size  Location     Type
 34163 ;;		None
 34164 ;; Return value:  Size  Location     Type
 34165 ;;                  1    wreg      unsigned char 
 34166 ;; Registers used:
 34167 ;;		wreg, status,2, status,0
 34168 ;; Tracked objects:
 34169 ;;		On entry : 0/0
 34170 ;;		On exit  : 0/0
 34171 ;;		Unchanged: 0/0
 34172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34177 ;;Total ram usage:        0 bytes
 34178 ;; Hardware stack levels used:    1
 34179 ;; Hardware stack levels required when called:   11
 34180 ;; This function calls:
 34181 ;;		Nothing
 34182 ;; This function is called by:
 34183 ;;		_I2c_WriteData
 34184 ;;		_I2c_ReadData
 34185 ;; This function uses a non-reentrant model
 34186 ;;
 34187                           
 34188                           	psect	text165
 34189  0064D8                     __ptext165:
 34190                           	opt stack 0
 34191  0064D8                     _CheckAckStatus:
 34192                           	opt stack 14
 34193                           
 34194                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 34195                           
 34196                           ;incstack = 0
 34197  0064D8  4471               	rlncf	3953,w,c	;volatile
 34198  0064DA  46E8               	rlncf	wreg,f,c
 34199  0064DC  0B03               	andlw	3
 34200  0064DE  0B01               	andlw	1
 34201  0064E0  0012               	return	
 34202  0064E2                     __end_of_CheckAckStatus:
 34203                           	opt stack 0
 34204                           tosu	equ	0xFFF
 34205                           tosh	equ	0xFFE
 34206                           tosl	equ	0xFFD
 34207                           pclath	equ	0xFFA
 34208                           tblptru	equ	0xFF8
 34209                           tblptrh	equ	0xFF7
 34210                           tblptrl	equ	0xFF6
 34211                           tablat	equ	0xFF5
 34212                           prodh	equ	0xFF4
 34213                           prodl	equ	0xFF3
 34214                           intcon	equ	0xFF2
 34215                           intcon2	equ	0xFF1
 34216                           intcon3	equ	0xFF0
 34217                           indf0	equ	0xFEF
 34218                           postinc0	equ	0xFEE
 34219                           plusw0	equ	0xFEB
 34220                           fsr0h	equ	0xFEA
 34221                           fsr0l	equ	0xFE9
 34222                           wreg	equ	0xFE8
 34223                           indf1	equ	0xFE7
 34224                           postinc1	equ	0xFE6
 34225                           postdec1	equ	0xFE5
 34226                           plusw1	equ	0xFE3
 34227                           fsr1h	equ	0xFE2
 34228                           fsr1l	equ	0xFE1
 34229                           indf2	equ	0xFDF
 34230                           postinc2	equ	0xFDE
 34231                           postdec2	equ	0xFDD
 34232                           plusw2	equ	0xFDB
 34233                           fsr2h	equ	0xFDA
 34234                           fsr2l	equ	0xFD9
 34235                           status	equ	0xFD8
 34236                           
 34237 ;; *************** function _LowPriorityIsr *****************
 34238 ;; Defined at:
 34239 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 34240 ;; Parameters:    Size  Location     Type
 34241 ;;		None
 34242 ;; Auto vars:     Size  Location     Type
 34243 ;;		None
 34244 ;; Return value:  Size  Location     Type
 34245 ;;                  1    wreg      void 
 34246 ;; Registers used:
 34247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 34248 ;; Tracked objects:
 34249 ;;		On entry : 0/0
 34250 ;;		On exit  : 0/0
 34251 ;;		Unchanged: 0/0
 34252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34255 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34256 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34257 ;;Total ram usage:       21 bytes
 34258 ;; Hardware stack levels used:    1
 34259 ;; Hardware stack levels required when called:   10
 34260 ;; This function calls:
 34261 ;;		_Tmr_Tmr2Isr
 34262 ;; This function is called by:
 34263 ;;		Interrupt level 1
 34264 ;; This function uses a non-reentrant model
 34265 ;;
 34266                           
 34267                           	psect	intcodelo
 34268  000018                     __pintcodelo:
 34269                           	opt stack 0
 34270  000018                     _LowPriorityIsr:
 34271                           	opt stack 8
 34272                           
 34273                           ;incstack = 0
 34274  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 34275  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 34276  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 34277  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 34278  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 34279  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 34280  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 34281  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 34282  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 34283  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 34284  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 34285  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 34286  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 34287  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 34288  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 34289  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 34290  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 34291  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 34292  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 34293  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 34294  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 34295  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 34296                           
 34297                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 34298  00006E  B29E               	btfsc	3998,1,c	;volatile
 34299                           
 34300                           ;irq.c: 259: {
 34301                           ;irq.c: 261: Tmr_Tmr2Isr();
 34302  000070  EC92  F030         	call	_Tmr_Tmr2Isr	;wreg free
 34303  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 34304  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 34305  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 34306  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 34307  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 34308  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 34309  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 34310  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 34311  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 34312  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 34313  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 34314  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 34315  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 34316  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 34317  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 34318  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 34319  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 34320  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 34321  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 34322  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 34323  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 34324  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 34325  0000CA  0010               	retfie	
 34326  0000CC                     __end_of_LowPriorityIsr:
 34327                           	opt stack 0
 34328                           tosu	equ	0xFFF
 34329                           tosh	equ	0xFFE
 34330                           tosl	equ	0xFFD
 34331                           pclatu	equ	0xFFB
 34332                           pclath	equ	0xFFA
 34333                           tblptru	equ	0xFF8
 34334                           tblptrh	equ	0xFF7
 34335                           tblptrl	equ	0xFF6
 34336                           tablat	equ	0xFF5
 34337                           prodh	equ	0xFF4
 34338                           prodl	equ	0xFF3
 34339                           intcon	equ	0xFF2
 34340                           intcon2	equ	0xFF1
 34341                           intcon3	equ	0xFF0
 34342                           indf0	equ	0xFEF
 34343                           postinc0	equ	0xFEE
 34344                           plusw0	equ	0xFEB
 34345                           fsr0h	equ	0xFEA
 34346                           fsr0l	equ	0xFE9
 34347                           wreg	equ	0xFE8
 34348                           indf1	equ	0xFE7
 34349                           postinc1	equ	0xFE6
 34350                           postdec1	equ	0xFE5
 34351                           plusw1	equ	0xFE3
 34352                           fsr1h	equ	0xFE2
 34353                           fsr1l	equ	0xFE1
 34354                           bsr	equ	0xFE0
 34355                           indf2	equ	0xFDF
 34356                           postinc2	equ	0xFDE
 34357                           postdec2	equ	0xFDD
 34358                           plusw2	equ	0xFDB
 34359                           fsr2h	equ	0xFDA
 34360                           fsr2l	equ	0xFD9
 34361                           status	equ	0xFD8
 34362                           
 34363 ;; *************** function _Tmr_Tmr2Isr *****************
 34364 ;; Defined at:
 34365 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 34366 ;; Parameters:    Size  Location     Type
 34367 ;;		None
 34368 ;; Auto vars:     Size  Location     Type
 34369 ;;		None
 34370 ;; Return value:  Size  Location     Type
 34371 ;;                  1    wreg      void 
 34372 ;; Registers used:
 34373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 34374 ;; Tracked objects:
 34375 ;;		On entry : 0/0
 34376 ;;		On exit  : 0/0
 34377 ;;		Unchanged: 0/0
 34378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34383 ;;Total ram usage:        0 bytes
 34384 ;; Hardware stack levels used:    1
 34385 ;; Hardware stack levels required when called:    9
 34386 ;; This function calls:
 34387 ;;		Absolute function
 34388 ;;		_Sch_SchmIntService
 34389 ;; This function is called by:
 34390 ;;		_LowPriorityIsr
 34391 ;; This function uses a non-reentrant model
 34392 ;;
 34393                           
 34394                           	psect	text167
 34395  006124                     __ptext167:
 34396                           	opt stack 0
 34397  006124                     _Tmr_Tmr2Isr:
 34398                           	opt stack 8
 34399                           
 34400                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 34401                           
 34402                           ;incstack = 0
 34403  006124  929E               	bcf	3998,1,c	;volatile
 34404                           
 34405                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 34406  006126  0102               	movlb	2	; () banked
 34407  006128  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 34408  00612A  11EB               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 34409  00612C  B4D8               	btfsc	status,2,c
 34410  00612E  0012               	return	
 34411                           
 34412                           ; BSR set to: 2
 34413                           ;tmr_drv.c: 315: {
 34414                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 34415  006130  D801               	call	i1u1505_28
 34416  006132  0012               	return	
 34417  006134                     i1u1505_28:
 34418  006134  0005               	push	
 34419  006136  6EFA               	movwf	pclath,c
 34420  006138  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 34421  00613A  6EFD               	movwf	tosl,c
 34422  00613C  51EB               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 34423  00613E  6EFE               	movwf	tosh,c
 34424  006140  50F8               	movf	tblptru,w,c
 34425  006142  6EFF               	movwf	tosu,c
 34426  006144  50FA               	movf	pclath,w,c
 34427  006146  0012               	return		;indir
 34428  006148                     __end_of_Tmr_Tmr2Isr:
 34429                           	opt stack 0
 34430                           tosu	equ	0xFFF
 34431                           tosh	equ	0xFFE
 34432                           tosl	equ	0xFFD
 34433                           pclatu	equ	0xFFB
 34434                           pclath	equ	0xFFA
 34435                           tblptru	equ	0xFF8
 34436                           tblptrh	equ	0xFF7
 34437                           tblptrl	equ	0xFF6
 34438                           tablat	equ	0xFF5
 34439                           prodh	equ	0xFF4
 34440                           prodl	equ	0xFF3
 34441                           intcon	equ	0xFF2
 34442                           intcon2	equ	0xFF1
 34443                           intcon3	equ	0xFF0
 34444                           indf0	equ	0xFEF
 34445                           postinc0	equ	0xFEE
 34446                           plusw0	equ	0xFEB
 34447                           fsr0h	equ	0xFEA
 34448                           fsr0l	equ	0xFE9
 34449                           wreg	equ	0xFE8
 34450                           indf1	equ	0xFE7
 34451                           postinc1	equ	0xFE6
 34452                           postdec1	equ	0xFE5
 34453                           plusw1	equ	0xFE3
 34454                           fsr1h	equ	0xFE2
 34455                           fsr1l	equ	0xFE1
 34456                           bsr	equ	0xFE0
 34457                           indf2	equ	0xFDF
 34458                           postinc2	equ	0xFDE
 34459                           postdec2	equ	0xFDD
 34460                           plusw2	equ	0xFDB
 34461                           fsr2h	equ	0xFDA
 34462                           fsr2l	equ	0xFD9
 34463                           status	equ	0xFD8
 34464                           
 34465 ;; *************** function _Sch_SchmIntService *****************
 34466 ;; Defined at:
 34467 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 34468 ;; Parameters:    Size  Location     Type
 34469 ;;		None
 34470 ;; Auto vars:     Size  Location     Type
 34471 ;;		None
 34472 ;; Return value:  Size  Location     Type
 34473 ;;                  1    wreg      void 
 34474 ;; Registers used:
 34475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 34476 ;; Tracked objects:
 34477 ;;		On entry : 0/0
 34478 ;;		On exit  : 0/0
 34479 ;;		Unchanged: 0/0
 34480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34485 ;;Total ram usage:        0 bytes
 34486 ;; Hardware stack levels used:    1
 34487 ;; Hardware stack levels required when called:    8
 34488 ;; This function calls:
 34489 ;;		_OsAlrm_ProcessOsAlarms
 34490 ;;		_UpdateOsCounters
 34491 ;;		_UpdateSchFlag
 34492 ;; This function is called by:
 34493 ;;		_SystemInit
 34494 ;;		_Tmr_Tmr2Isr
 34495 ;; This function uses a non-reentrant model
 34496 ;;
 34497                           
 34498                           	psect	text168
 34499  006488                     __ptext168:
 34500                           	opt stack 0
 34501  006488                     _Sch_SchmIntService:
 34502                           	opt stack 8
 34503                           
 34504                           ;os_sched.c: 217: UpdateSchFlag();
 34505                           
 34506                           ;incstack = 0
 34507  006488  EC58  F031         	call	_UpdateSchFlag	;wreg free
 34508                           
 34509                           ;os_sched.c: 219: UpdateOsCounters();
 34510  00648C  EC34  F032         	call	_UpdateOsCounters	;wreg free
 34511                           
 34512                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 34513  006490  EC6B  F011         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 34514  006494  0012               	return		;funcret
 34515  006496                     __end_of_Sch_SchmIntService:
 34516                           	opt stack 0
 34517                           tosu	equ	0xFFF
 34518                           tosh	equ	0xFFE
 34519                           tosl	equ	0xFFD
 34520                           pclatu	equ	0xFFB
 34521                           pclath	equ	0xFFA
 34522                           tblptru	equ	0xFF8
 34523                           tblptrh	equ	0xFF7
 34524                           tblptrl	equ	0xFF6
 34525                           tablat	equ	0xFF5
 34526                           prodh	equ	0xFF4
 34527                           prodl	equ	0xFF3
 34528                           intcon	equ	0xFF2
 34529                           intcon2	equ	0xFF1
 34530                           intcon3	equ	0xFF0
 34531                           indf0	equ	0xFEF
 34532                           postinc0	equ	0xFEE
 34533                           plusw0	equ	0xFEB
 34534                           fsr0h	equ	0xFEA
 34535                           fsr0l	equ	0xFE9
 34536                           wreg	equ	0xFE8
 34537                           indf1	equ	0xFE7
 34538                           postinc1	equ	0xFE6
 34539                           postdec1	equ	0xFE5
 34540                           plusw1	equ	0xFE3
 34541                           fsr1h	equ	0xFE2
 34542                           fsr1l	equ	0xFE1
 34543                           bsr	equ	0xFE0
 34544                           indf2	equ	0xFDF
 34545                           postinc2	equ	0xFDE
 34546                           postdec2	equ	0xFDD
 34547                           plusw2	equ	0xFDB
 34548                           fsr2h	equ	0xFDA
 34549                           fsr2l	equ	0xFD9
 34550                           status	equ	0xFD8
 34551                           
 34552 ;; *************** function _UpdateSchFlag *****************
 34553 ;; Defined at:
 34554 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 34555 ;; Parameters:    Size  Location     Type
 34556 ;;		None
 34557 ;; Auto vars:     Size  Location     Type
 34558 ;;		None
 34559 ;; Return value:  Size  Location     Type
 34560 ;;                  1    wreg      void 
 34561 ;; Registers used:
 34562 ;;		wreg, status,2, status,0
 34563 ;; Tracked objects:
 34564 ;;		On entry : 0/0
 34565 ;;		On exit  : 0/0
 34566 ;;		Unchanged: 0/0
 34567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34572 ;;Total ram usage:        0 bytes
 34573 ;; Hardware stack levels used:    1
 34574 ;; Hardware stack levels required when called:    4
 34575 ;; This function calls:
 34576 ;;		Nothing
 34577 ;; This function is called by:
 34578 ;;		_Sch_SchmIntService
 34579 ;; This function uses a non-reentrant model
 34580 ;;
 34581                           
 34582                           	psect	text169
 34583  0062B0                     __ptext169:
 34584                           	opt stack 0
 34585  0062B0                     _UpdateSchFlag:
 34586                           	opt stack 11
 34587                           
 34588                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 34589                           ;os_sched.c: 138: InterruptCounter++;
 34590                           
 34591                           ;incstack = 0
 34592  0062B0  0102               	movlb	2	; () banked
 34593  0062B2  4BDC               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 34594  0062B4  2BDD               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 34595                           
 34596                           ; BSR set to: 2
 34597                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 34598  0062B6  51DC               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 34599  0062B8  11DD               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 34600  0062BA  B4D8               	btfsc	status,2,c
 34601  0062BC  0012               	return	
 34602                           
 34603                           ; BSR set to: 2
 34604                           ;os_sched.c: 141: {
 34605                           ;os_sched.c: 143: InterruptCounter = 0;
 34606  0062BE  0E00               	movlw	0
 34607  0062C0  6FDD               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 34608  0062C2  0E00               	movlw	0
 34609  0062C4  6FDC               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 34610                           
 34611                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 34612  0062C6  0E00               	movlw	0
 34613  0062C8  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 34614  0062CA  0012               	return	
 34615  0062CC                     __end_of_UpdateSchFlag:
 34616                           	opt stack 0
 34617                           tosu	equ	0xFFF
 34618                           tosh	equ	0xFFE
 34619                           tosl	equ	0xFFD
 34620                           pclatu	equ	0xFFB
 34621                           pclath	equ	0xFFA
 34622                           tblptru	equ	0xFF8
 34623                           tblptrh	equ	0xFF7
 34624                           tblptrl	equ	0xFF6
 34625                           tablat	equ	0xFF5
 34626                           prodh	equ	0xFF4
 34627                           prodl	equ	0xFF3
 34628                           intcon	equ	0xFF2
 34629                           intcon2	equ	0xFF1
 34630                           intcon3	equ	0xFF0
 34631                           indf0	equ	0xFEF
 34632                           postinc0	equ	0xFEE
 34633                           plusw0	equ	0xFEB
 34634                           fsr0h	equ	0xFEA
 34635                           fsr0l	equ	0xFE9
 34636                           wreg	equ	0xFE8
 34637                           indf1	equ	0xFE7
 34638                           postinc1	equ	0xFE6
 34639                           postdec1	equ	0xFE5
 34640                           plusw1	equ	0xFE3
 34641                           fsr1h	equ	0xFE2
 34642                           fsr1l	equ	0xFE1
 34643                           bsr	equ	0xFE0
 34644                           indf2	equ	0xFDF
 34645                           postinc2	equ	0xFDE
 34646                           postdec2	equ	0xFDD
 34647                           plusw2	equ	0xFDB
 34648                           fsr2h	equ	0xFDA
 34649                           fsr2l	equ	0xFD9
 34650                           status	equ	0xFD8
 34651                           
 34652 ;; *************** function _UpdateOsCounters *****************
 34653 ;; Defined at:
 34654 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 34655 ;; Parameters:    Size  Location     Type
 34656 ;;		None
 34657 ;; Auto vars:     Size  Location     Type
 34658 ;;		None
 34659 ;; Return value:  Size  Location     Type
 34660 ;;                  1    wreg      void 
 34661 ;; Registers used:
 34662 ;;		wreg, status,2, status,0
 34663 ;; Tracked objects:
 34664 ;;		On entry : 0/0
 34665 ;;		On exit  : 0/0
 34666 ;;		Unchanged: 0/0
 34667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34672 ;;Total ram usage:        0 bytes
 34673 ;; Hardware stack levels used:    1
 34674 ;; Hardware stack levels required when called:    4
 34675 ;; This function calls:
 34676 ;;		Nothing
 34677 ;; This function is called by:
 34678 ;;		_Sch_SchmIntService
 34679 ;; This function uses a non-reentrant model
 34680 ;;
 34681                           
 34682                           	psect	text170
 34683  006468                     __ptext170:
 34684                           	opt stack 0
 34685  006468                     _UpdateOsCounters:
 34686                           	opt stack 11
 34687                           
 34688                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 34689                           
 34690                           ; BSR set to: 2
 34691                           ;incstack = 0
 34692  006468  0E01               	movlw	1
 34693  00646A  0103               	movlb	3	; () banked
 34694  00646C  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 34695  00646E  0E00               	movlw	0
 34696  006470  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 34697  006472  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 34698  006474  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 34699                           
 34700                           ; BSR set to: 3
 34701  006476  0012               	return		;funcret
 34702  006478                     __end_of_UpdateOsCounters:
 34703                           	opt stack 0
 34704                           tosu	equ	0xFFF
 34705                           tosh	equ	0xFFE
 34706                           tosl	equ	0xFFD
 34707                           pclatu	equ	0xFFB
 34708                           pclath	equ	0xFFA
 34709                           tblptru	equ	0xFF8
 34710                           tblptrh	equ	0xFF7
 34711                           tblptrl	equ	0xFF6
 34712                           tablat	equ	0xFF5
 34713                           prodh	equ	0xFF4
 34714                           prodl	equ	0xFF3
 34715                           intcon	equ	0xFF2
 34716                           intcon2	equ	0xFF1
 34717                           intcon3	equ	0xFF0
 34718                           indf0	equ	0xFEF
 34719                           postinc0	equ	0xFEE
 34720                           plusw0	equ	0xFEB
 34721                           fsr0h	equ	0xFEA
 34722                           fsr0l	equ	0xFE9
 34723                           wreg	equ	0xFE8
 34724                           indf1	equ	0xFE7
 34725                           postinc1	equ	0xFE6
 34726                           postdec1	equ	0xFE5
 34727                           plusw1	equ	0xFE3
 34728                           fsr1h	equ	0xFE2
 34729                           fsr1l	equ	0xFE1
 34730                           bsr	equ	0xFE0
 34731                           indf2	equ	0xFDF
 34732                           postinc2	equ	0xFDE
 34733                           postdec2	equ	0xFDD
 34734                           plusw2	equ	0xFDB
 34735                           fsr2h	equ	0xFDA
 34736                           fsr2l	equ	0xFD9
 34737                           status	equ	0xFD8
 34738                           
 34739 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 34740 ;; Defined at:
 34741 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 34742 ;; Parameters:    Size  Location     Type
 34743 ;;		None
 34744 ;; Auto vars:     Size  Location     Type
 34745 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 34746 ;; Return value:  Size  Location     Type
 34747 ;;                  1    wreg      void 
 34748 ;; Registers used:
 34749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 34750 ;; Tracked objects:
 34751 ;;		On entry : 0/0
 34752 ;;		On exit  : 0/0
 34753 ;;		Unchanged: 0/0
 34754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34757 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34758 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34759 ;;Total ram usage:       10 bytes
 34760 ;; Hardware stack levels used:    1
 34761 ;; Hardware stack levels required when called:    7
 34762 ;; This function calls:
 34763 ;;		_I2cDummyTx
 34764 ;;		_OsAlrm_ClearOsAlarm
 34765 ;;		i1___wmul
 34766 ;; This function is called by:
 34767 ;;		_Sch_SchmIntService
 34768 ;; This function uses a non-reentrant model
 34769 ;;
 34770                           
 34771                           	psect	text171
 34772  0022D6                     __ptext171:
 34773                           	opt stack 0
 34774  0022D6                     _OsAlrm_ProcessOsAlarms:
 34775                           	opt stack 8
 34776                           
 34777                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 34778                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 34779                           
 34780                           ; BSR set to: 3
 34781                           ;incstack = 0
 34782  0022D6  0E00               	movlw	0
 34783  0022D8  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 34784  0022DA  0E00               	movlw	0
 34785  0022DC  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 34786  0022DE  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 34787  0022E0  E105               	bnz	i1u1479_20
 34788  0022E2  0E14               	movlw	20
 34789  0022E4  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 34790  0022E6  B0D8               	btfsc	status,0,c
 34791  0022E8  0012               	return	
 34792  0022EA  D001               	goto	i1l742
 34793  0022EC                     i1u1479_20:
 34794  0022EC  0012               	return	
 34795  0022EE                     i1l742:
 34796                           
 34797                           ;os_alarms.c: 121: {
 34798                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 34799  0022EE  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34800  0022F2  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34801  0022F6  0E00               	movlw	0
 34802  0022F8  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34803  0022FA  0E0B               	movlw	11
 34804  0022FC  6E1B               	movwf	i1___wmul@multiplicand,c
 34805  0022FE  EC49  F030         	call	i1___wmul	;wreg free
 34806  002302  0E00               	movlw	low _OsAlarms
 34807  002304  2419               	addwf	?i1___wmul,w,c
 34808  002306  6ED9               	movwf	fsr2l,c
 34809  002308  0E06               	movlw	high _OsAlarms
 34810  00230A  201A               	addwfc	?i1___wmul+1,w,c
 34811  00230C  6EDA               	movwf	fsr2h,c
 34812  00230E  04DE               	decf	postinc2,w,c
 34813  002310  A4D8               	btfss	status,2,c
 34814  002312  D086               	goto	i1u1483_29
 34815                           
 34816                           ;os_alarms.c: 124: {
 34817                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 34818  002314  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34819  002318  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34820  00231C  0E00               	movlw	0
 34821  00231E  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34822  002320  0E0B               	movlw	11
 34823  002322  6E1B               	movwf	i1___wmul@multiplicand,c
 34824  002324  EC49  F030         	call	i1___wmul	;wreg free
 34825  002328  0E01               	movlw	1
 34826  00232A  2619               	addwf	?i1___wmul,f,c
 34827  00232C  0E00               	movlw	0
 34828  00232E  221A               	addwfc	?i1___wmul+1,f,c
 34829  002330  0E00               	movlw	low _OsAlarms
 34830  002332  2419               	addwf	?i1___wmul,w,c
 34831  002334  6ED9               	movwf	fsr2l,c
 34832  002336  0E06               	movlw	high _OsAlarms
 34833  002338  201A               	addwfc	?i1___wmul+1,w,c
 34834  00233A  6EDA               	movwf	fsr2h,c
 34835  00233C  2ADE               	incf	postinc2,f,c
 34836  00233E  0E00               	movlw	0
 34837  002340  22DE               	addwfc	postinc2,f,c
 34838  002342  22DE               	addwfc	postinc2,f,c
 34839  002344  22DE               	addwfc	postinc2,f,c
 34840                           
 34841                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 34842  002346  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34843  00234A  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34844  00234E  0E00               	movlw	0
 34845  002350  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34846  002352  0E0B               	movlw	11
 34847  002354  6E1B               	movwf	i1___wmul@multiplicand,c
 34848  002356  EC49  F030         	call	i1___wmul	;wreg free
 34849  00235A  0E05               	movlw	5
 34850  00235C  2619               	addwf	?i1___wmul,f,c
 34851  00235E  0E00               	movlw	0
 34852  002360  221A               	addwfc	?i1___wmul+1,f,c
 34853  002362  0E00               	movlw	low _OsAlarms
 34854  002364  2419               	addwf	?i1___wmul,w,c
 34855  002366  6ED9               	movwf	fsr2l,c
 34856  002368  0E06               	movlw	high _OsAlarms
 34857  00236A  201A               	addwfc	?i1___wmul+1,w,c
 34858  00236C  6EDA               	movwf	fsr2h,c
 34859  00236E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34860  002372  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34861  002376  0E00               	movlw	0
 34862  002378  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34863  00237A  0E0B               	movlw	11
 34864  00237C  6E1B               	movwf	i1___wmul@multiplicand,c
 34865  00237E  EC49  F030         	call	i1___wmul	;wreg free
 34866  002382  0E01               	movlw	1
 34867  002384  2619               	addwf	?i1___wmul,f,c
 34868  002386  0E00               	movlw	0
 34869  002388  221A               	addwfc	?i1___wmul+1,f,c
 34870  00238A  0E00               	movlw	low _OsAlarms
 34871  00238C  2419               	addwf	?i1___wmul,w,c
 34872  00238E  6EE1               	movwf	fsr1l,c
 34873  002390  0E06               	movlw	high _OsAlarms
 34874  002392  201A               	addwfc	?i1___wmul+1,w,c
 34875  002394  6EE2               	movwf	fsr1h,c
 34876  002396  50DE               	movf	postinc2,w,c
 34877  002398  5CE6               	subwf	postinc1,w,c
 34878  00239A  50DE               	movf	postinc2,w,c
 34879  00239C  58E6               	subwfb	postinc1,w,c
 34880  00239E  50DE               	movf	postinc2,w,c
 34881  0023A0  58E6               	subwfb	postinc1,w,c
 34882  0023A2  50DE               	movf	postinc2,w,c
 34883  0023A4  58E6               	subwfb	postinc1,w,c
 34884  0023A6  A0D8               	btfss	status,0,c
 34885  0023A8  D03B               	goto	i1u1483_29
 34886                           
 34887                           ;os_alarms.c: 129: {
 34888                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 34889  0023AA  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 34890  0023AC  EC0C  F02A         	call	_OsAlrm_ClearOsAlarm
 34891                           
 34892                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 34893  0023B0  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34894  0023B4  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34895  0023B8  0E00               	movlw	0
 34896  0023BA  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34897  0023BC  0E0B               	movlw	11
 34898  0023BE  6E1B               	movwf	i1___wmul@multiplicand,c
 34899  0023C0  EC49  F030         	call	i1___wmul	;wreg free
 34900  0023C4  0E09               	movlw	9
 34901  0023C6  2619               	addwf	?i1___wmul,f,c
 34902  0023C8  0E00               	movlw	0
 34903  0023CA  221A               	addwfc	?i1___wmul+1,f,c
 34904  0023CC  0E00               	movlw	low _OsAlarms
 34905  0023CE  2419               	addwf	?i1___wmul,w,c
 34906  0023D0  6ED9               	movwf	fsr2l,c
 34907  0023D2  0E06               	movlw	high _OsAlarms
 34908  0023D4  201A               	addwfc	?i1___wmul+1,w,c
 34909  0023D6  6EDA               	movwf	fsr2h,c
 34910  0023D8  50DE               	movf	postinc2,w,c
 34911  0023DA  10DE               	iorwf	postinc2,w,c
 34912  0023DC  B4D8               	btfsc	status,2,c
 34913  0023DE  D020               	goto	i1u1483_29
 34914                           
 34915                           ;os_alarms.c: 134: {
 34916                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 34917  0023E0  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34918  0023E4  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34919  0023E8  0E00               	movlw	0
 34920  0023EA  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34921  0023EC  0E0B               	movlw	11
 34922  0023EE  6E1B               	movwf	i1___wmul@multiplicand,c
 34923  0023F0  EC49  F030         	call	i1___wmul	;wreg free
 34924  0023F4  0E09               	movlw	9
 34925  0023F6  2619               	addwf	?i1___wmul,f,c
 34926  0023F8  0E00               	movlw	0
 34927  0023FA  221A               	addwfc	?i1___wmul+1,f,c
 34928  0023FC  0E00               	movlw	low _OsAlarms
 34929  0023FE  2419               	addwf	?i1___wmul,w,c
 34930  002400  6ED9               	movwf	fsr2l,c
 34931  002402  0E06               	movlw	high _OsAlarms
 34932  002404  201A               	addwfc	?i1___wmul+1,w,c
 34933  002406  6EDA               	movwf	fsr2h,c
 34934  002408  D801               	call	i1u1483_28
 34935  00240A  D00A               	goto	i1u1483_29
 34936  00240C                     i1u1483_28:
 34937  00240C  0005               	push	
 34938  00240E  6EFA               	movwf	pclath,c
 34939  002410  50DE               	movf	postinc2,w,c
 34940  002412  6EFD               	movwf	tosl,c
 34941  002414  50DE               	movf	postinc2,w,c
 34942  002416  6EFE               	movwf	tosh,c
 34943  002418  50F8               	movf	tblptru,w,c
 34944  00241A  6EFF               	movwf	tosu,c
 34945  00241C  50FA               	movf	pclath,w,c
 34946  00241E  0012               	return		;indir
 34947  002420                     i1u1483_29:
 34948  002420  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 34949  002422  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 34950  002424  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 34951  002426  E101               	bnz	i1l747
 34952  002428  D75C               	goto	L76
 34953  00242A                     i1l747:
 34954  00242A  0012               	return		;funcret
 34955  00242C                     __end_of_OsAlrm_ProcessOsAlarms:
 34956                           	opt stack 0
 34957                           tosu	equ	0xFFF
 34958                           tosh	equ	0xFFE
 34959                           tosl	equ	0xFFD
 34960                           pclatu	equ	0xFFB
 34961                           pclath	equ	0xFFA
 34962                           tblptru	equ	0xFF8
 34963                           tblptrh	equ	0xFF7
 34964                           tblptrl	equ	0xFF6
 34965                           tablat	equ	0xFF5
 34966                           prodh	equ	0xFF4
 34967                           prodl	equ	0xFF3
 34968                           intcon	equ	0xFF2
 34969                           intcon2	equ	0xFF1
 34970                           intcon3	equ	0xFF0
 34971                           indf0	equ	0xFEF
 34972                           postinc0	equ	0xFEE
 34973                           plusw0	equ	0xFEB
 34974                           fsr0h	equ	0xFEA
 34975                           fsr0l	equ	0xFE9
 34976                           wreg	equ	0xFE8
 34977                           indf1	equ	0xFE7
 34978                           postinc1	equ	0xFE6
 34979                           postdec1	equ	0xFE5
 34980                           plusw1	equ	0xFE3
 34981                           fsr1h	equ	0xFE2
 34982                           fsr1l	equ	0xFE1
 34983                           bsr	equ	0xFE0
 34984                           indf2	equ	0xFDF
 34985                           postinc2	equ	0xFDE
 34986                           postdec2	equ	0xFDD
 34987                           plusw2	equ	0xFDB
 34988                           fsr2h	equ	0xFDA
 34989                           fsr2l	equ	0xFD9
 34990                           status	equ	0xFD8
 34991                           
 34992 ;; *************** function i1___wmul *****************
 34993 ;; Defined at:
 34994 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 34995 ;; Parameters:    Size  Location     Type
 34996 ;;  multiplier      2   24[COMRAM] unsigned int 
 34997 ;;  multiplicand    2   26[COMRAM] unsigned int 
 34998 ;; Auto vars:     Size  Location     Type
 34999 ;;  __wmul          2   28[COMRAM] unsigned int 
 35000 ;; Return value:  Size  Location     Type
 35001 ;;                  2   24[COMRAM] unsigned int 
 35002 ;; Registers used:
 35003 ;;		wreg, status,2, status,0, prodl, prodh
 35004 ;; Tracked objects:
 35005 ;;		On entry : 0/0
 35006 ;;		On exit  : 0/0
 35007 ;;		Unchanged: 0/0
 35008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35012 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35013 ;;Total ram usage:        6 bytes
 35014 ;; Hardware stack levels used:    1
 35015 ;; Hardware stack levels required when called:    4
 35016 ;; This function calls:
 35017 ;;		Nothing
 35018 ;; This function is called by:
 35019 ;;		_OsAlrm_ProcessOsAlarms
 35020 ;; This function uses a non-reentrant model
 35021 ;;
 35022                           
 35023                           	psect	text172
 35024  006092                     __ptext172:
 35025                           	opt stack 0
 35026  006092                     i1___wmul:
 35027                           	opt stack 10
 35028                           
 35029                           ;incstack = 0
 35030  006092  5019               	movf	i1___wmul@multiplier,w,c
 35031  006094  021B               	mulwf	i1___wmul@multiplicand,c
 35032  006096  CFF3 F01D          	movff	prodl,i1___wmul@product
 35033  00609A  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 35034  00609E  5019               	movf	i1___wmul@multiplier,w,c
 35035  0060A0  021C               	mulwf	i1___wmul@multiplicand+1,c
 35036  0060A2  50F3               	movf	prodl,w,c
 35037  0060A4  261E               	addwf	i1___wmul@product+1,f,c
 35038  0060A6  501A               	movf	i1___wmul@multiplier+1,w,c
 35039  0060A8  021B               	mulwf	i1___wmul@multiplicand,c
 35040  0060AA  50F3               	movf	prodl,w,c
 35041  0060AC  261E               	addwf	i1___wmul@product+1,f,c
 35042  0060AE  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 35043  0060B2  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 35044  0060B6  0012               	return	
 35045  0060B8                     __end_ofi1___wmul:
 35046                           	opt stack 0
 35047                           tosu	equ	0xFFF
 35048                           tosh	equ	0xFFE
 35049                           tosl	equ	0xFFD
 35050                           pclatu	equ	0xFFB
 35051                           pclath	equ	0xFFA
 35052                           tblptru	equ	0xFF8
 35053                           tblptrh	equ	0xFF7
 35054                           tblptrl	equ	0xFF6
 35055                           tablat	equ	0xFF5
 35056                           prodh	equ	0xFF4
 35057                           prodl	equ	0xFF3
 35058                           intcon	equ	0xFF2
 35059                           intcon2	equ	0xFF1
 35060                           intcon3	equ	0xFF0
 35061                           indf0	equ	0xFEF
 35062                           postinc0	equ	0xFEE
 35063                           plusw0	equ	0xFEB
 35064                           fsr0h	equ	0xFEA
 35065                           fsr0l	equ	0xFE9
 35066                           wreg	equ	0xFE8
 35067                           indf1	equ	0xFE7
 35068                           postinc1	equ	0xFE6
 35069                           postdec1	equ	0xFE5
 35070                           plusw1	equ	0xFE3
 35071                           fsr1h	equ	0xFE2
 35072                           fsr1l	equ	0xFE1
 35073                           bsr	equ	0xFE0
 35074                           indf2	equ	0xFDF
 35075                           postinc2	equ	0xFDE
 35076                           postdec2	equ	0xFDD
 35077                           plusw2	equ	0xFDB
 35078                           fsr2h	equ	0xFDA
 35079                           fsr2l	equ	0xFD9
 35080                           status	equ	0xFD8
 35081                           
 35082 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 35083 ;; Defined at:
 35084 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 35085 ;; Parameters:    Size  Location     Type
 35086 ;;  OsAlarmId       1    wreg     unsigned char 
 35087 ;; Auto vars:     Size  Location     Type
 35088 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 35089 ;; Return value:  Size  Location     Type
 35090 ;;                  1    wreg      void 
 35091 ;; Registers used:
 35092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35093 ;; Tracked objects:
 35094 ;;		On entry : 0/0
 35095 ;;		On exit  : 0/0
 35096 ;;		Unchanged: 0/0
 35097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35101 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35102 ;;Total ram usage:        1 bytes
 35103 ;; Hardware stack levels used:    1
 35104 ;; Hardware stack levels required when called:    4
 35105 ;; This function calls:
 35106 ;;		Nothing
 35107 ;; This function is called by:
 35108 ;;		_OsAlrm_ProcessOsAlarms
 35109 ;; This function uses a non-reentrant model
 35110 ;;
 35111                           
 35112                           	psect	text173
 35113  005418                     __ptext173:
 35114                           	opt stack 0
 35115  005418                     _OsAlrm_ClearOsAlarm:
 35116                           	opt stack 10
 35117                           
 35118                           ;incstack = 0
 35119                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 35120  005418  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 35121                           
 35122                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 35123  00541A  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 35124  00541C  0D0B               	mullw	11
 35125  00541E  0E00               	movlw	low _OsAlarms
 35126  005420  24F3               	addwf	prodl,w,c
 35127  005422  6ED9               	movwf	fsr2l,c
 35128  005424  0E06               	movlw	high _OsAlarms
 35129  005426  20F4               	addwfc	prodh,w,c
 35130  005428  6EDA               	movwf	fsr2h,c
 35131  00542A  0E00               	movlw	0
 35132  00542C  6EDF               	movwf	indf2,c
 35133                           
 35134                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 35135  00542E  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 35136  005430  0D0B               	mullw	11
 35137  005432  0E01               	movlw	1
 35138  005434  26F3               	addwf	prodl,f,c
 35139  005436  0E00               	movlw	0
 35140  005438  22F4               	addwfc	prodh,f,c
 35141  00543A  0E00               	movlw	low _OsAlarms
 35142  00543C  24F3               	addwf	prodl,w,c
 35143  00543E  6ED9               	movwf	fsr2l,c
 35144  005440  0E06               	movlw	high _OsAlarms
 35145  005442  20F4               	addwfc	prodh,w,c
 35146  005444  6EDA               	movwf	fsr2h,c
 35147  005446  6ADE               	clrf	postinc2,c
 35148  005448  6ADE               	clrf	postinc2,c
 35149  00544A  6ADE               	clrf	postinc2,c
 35150  00544C  6ADD               	clrf	postdec2,c
 35151                           
 35152                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 35153  00544E  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 35154  005450  0D0B               	mullw	11
 35155  005452  0E05               	movlw	5
 35156  005454  26F3               	addwf	prodl,f,c
 35157  005456  0E00               	movlw	0
 35158  005458  22F4               	addwfc	prodh,f,c
 35159  00545A  0E00               	movlw	low _OsAlarms
 35160  00545C  24F3               	addwf	prodl,w,c
 35161  00545E  6ED9               	movwf	fsr2l,c
 35162  005460  0E06               	movlw	high _OsAlarms
 35163  005462  20F4               	addwfc	prodh,w,c
 35164  005464  6EDA               	movwf	fsr2h,c
 35165  005466  6ADE               	clrf	postinc2,c
 35166  005468  6ADE               	clrf	postinc2,c
 35167  00546A  6ADE               	clrf	postinc2,c
 35168  00546C  6ADD               	clrf	postdec2,c
 35169  00546E  0012               	return		;funcret
 35170  005470                     __end_of_OsAlrm_ClearOsAlarm:
 35171                           	opt stack 0
 35172                           tosu	equ	0xFFF
 35173                           tosh	equ	0xFFE
 35174                           tosl	equ	0xFFD
 35175                           pclatu	equ	0xFFB
 35176                           pclath	equ	0xFFA
 35177                           tblptru	equ	0xFF8
 35178                           tblptrh	equ	0xFF7
 35179                           tblptrl	equ	0xFF6
 35180                           tablat	equ	0xFF5
 35181                           prodh	equ	0xFF4
 35182                           prodl	equ	0xFF3
 35183                           intcon	equ	0xFF2
 35184                           intcon2	equ	0xFF1
 35185                           intcon3	equ	0xFF0
 35186                           indf0	equ	0xFEF
 35187                           postinc0	equ	0xFEE
 35188                           plusw0	equ	0xFEB
 35189                           fsr0h	equ	0xFEA
 35190                           fsr0l	equ	0xFE9
 35191                           wreg	equ	0xFE8
 35192                           indf1	equ	0xFE7
 35193                           postinc1	equ	0xFE6
 35194                           postdec1	equ	0xFE5
 35195                           plusw1	equ	0xFE3
 35196                           fsr1h	equ	0xFE2
 35197                           fsr1l	equ	0xFE1
 35198                           bsr	equ	0xFE0
 35199                           indf2	equ	0xFDF
 35200                           postinc2	equ	0xFDE
 35201                           postdec2	equ	0xFDD
 35202                           plusw2	equ	0xFDB
 35203                           fsr2h	equ	0xFDA
 35204                           fsr2l	equ	0xFD9
 35205                           status	equ	0xFD8
 35206                           
 35207 ;; *************** function _I2cDummyTx *****************
 35208 ;; Defined at:
 35209 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 35210 ;; Parameters:    Size  Location     Type
 35211 ;;		None
 35212 ;; Auto vars:     Size  Location     Type
 35213 ;;		None
 35214 ;; Return value:  Size  Location     Type
 35215 ;;                  1    wreg      void 
 35216 ;; Registers used:
 35217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35218 ;; Tracked objects:
 35219 ;;		On entry : 0/0
 35220 ;;		On exit  : 0/0
 35221 ;;		Unchanged: 0/0
 35222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35227 ;;Total ram usage:        0 bytes
 35228 ;; Hardware stack levels used:    1
 35229 ;; Hardware stack levels required when called:    6
 35230 ;; This function calls:
 35231 ;;		i1_I2cSlv_SendI2cMsg
 35232 ;; This function is called by:
 35233 ;;		_I2cSlv_MainTask
 35234 ;;		_OsAlrm_ProcessOsAlarms
 35235 ;; This function uses a non-reentrant model
 35236 ;;
 35237                           
 35238                           	psect	text174
 35239  0062CC                     __ptext174:
 35240                           	opt stack 0
 35241  0062CC                     _I2cDummyTx:
 35242                           	opt stack 8
 35243                           
 35244                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 35245                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 35246                           
 35247                           ;incstack = 0
 35248  0062CC  0EFD               	movlw	low I2cDummyTx@DummyBuffer
 35249  0062CE  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 35250  0062D0  0E01               	movlw	high I2cDummyTx@DummyBuffer
 35251  0062D2  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 35252  0062D4  0E00               	movlw	0
 35253  0062D6  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 35254  0062D8  0E01               	movlw	1
 35255  0062DA  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 35256  0062DC  EC9F  F02E         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 35257                           
 35258                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 35259  0062E0  0E01               	movlw	1
 35260  0062E2  0101               	movlb	1	; () banked
 35261  0062E4  6FEA               	movwf	_I2cBusStatus& (0+255),b
 35262                           
 35263                           ; BSR set to: 1
 35264  0062E6  0012               	return		;funcret
 35265  0062E8                     __end_of_I2cDummyTx:
 35266                           	opt stack 0
 35267                           tosu	equ	0xFFF
 35268                           tosh	equ	0xFFE
 35269                           tosl	equ	0xFFD
 35270                           pclatu	equ	0xFFB
 35271                           pclath	equ	0xFFA
 35272                           tblptru	equ	0xFF8
 35273                           tblptrh	equ	0xFF7
 35274                           tblptrl	equ	0xFF6
 35275                           tablat	equ	0xFF5
 35276                           prodh	equ	0xFF4
 35277                           prodl	equ	0xFF3
 35278                           intcon	equ	0xFF2
 35279                           intcon2	equ	0xFF1
 35280                           intcon3	equ	0xFF0
 35281                           indf0	equ	0xFEF
 35282                           postinc0	equ	0xFEE
 35283                           plusw0	equ	0xFEB
 35284                           fsr0h	equ	0xFEA
 35285                           fsr0l	equ	0xFE9
 35286                           wreg	equ	0xFE8
 35287                           indf1	equ	0xFE7
 35288                           postinc1	equ	0xFE6
 35289                           postdec1	equ	0xFE5
 35290                           plusw1	equ	0xFE3
 35291                           fsr1h	equ	0xFE2
 35292                           fsr1l	equ	0xFE1
 35293                           bsr	equ	0xFE0
 35294                           indf2	equ	0xFDF
 35295                           postinc2	equ	0xFDE
 35296                           postdec2	equ	0xFDD
 35297                           plusw2	equ	0xFDB
 35298                           fsr2h	equ	0xFDA
 35299                           fsr2l	equ	0xFD9
 35300                           status	equ	0xFD8
 35301                           
 35302 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 35303 ;; Defined at:
 35304 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 35305 ;; Parameters:    Size  Location     Type
 35306 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 35307 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 35308 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 35309 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 35310 ;;  DataLenght      1   30[COMRAM] unsigned char 
 35311 ;; Auto vars:     Size  Location     Type
 35312 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 35313 ;; Return value:  Size  Location     Type
 35314 ;;                  1    wreg      unsigned char 
 35315 ;; Registers used:
 35316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35317 ;; Tracked objects:
 35318 ;;		On entry : 0/0
 35319 ;;		On exit  : 0/0
 35320 ;;		Unchanged: 0/0
 35321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35322 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35325 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35326 ;;Total ram usage:        5 bytes
 35327 ;; Hardware stack levels used:    1
 35328 ;; Hardware stack levels required when called:    5
 35329 ;; This function calls:
 35330 ;;		i1_GenerateEvt
 35331 ;; This function is called by:
 35332 ;;		_I2cDummyTx
 35333 ;; This function uses a non-reentrant model
 35334 ;;
 35335                           
 35336                           	psect	text175
 35337  005D3E                     __ptext175:
 35338                           	opt stack 0
 35339  005D3E                     i1_I2cSlv_SendI2cMsg:
 35340                           	opt stack 8
 35341                           
 35342                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 35343                           
 35344                           ; BSR set to: 1
 35345                           ;incstack = 0
 35346  005D3E  0E00               	movlw	0
 35347  005D40  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 35348                           
 35349                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 35350  005D42  0100               	movlb	0	; () banked
 35351  005D44  05CF               	decf	_I2cComSts& (0+255),w,b
 35352  005D46  B4D8               	btfsc	status,2,c
 35353  005D48  D014               	goto	i1l1409
 35354                           
 35355                           ; BSR set to: 0
 35356                           ;i2c_slv.c: 257: {
 35357                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 35358  005D4A  C01E  F3A2         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 35359                           
 35360                           ; BSR set to: 0
 35361                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 35362  005D4E  0E00               	movlw	0
 35363  005D50  0103               	movlb	3	; () banked
 35364  005D52  6FA3               	movwf	(_I2cTxPacket+1)& (0+255),b
 35365                           
 35366                           ; BSR set to: 3
 35367                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 35368  005D54  C01F  F3A6         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 35369                           
 35370                           ; BSR set to: 3
 35371                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 35372  005D58  C01C  F3A4         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 35373  005D5C  C01D  F3A5         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 35374                           
 35375                           ; BSR set to: 3
 35376                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 35377  005D60  0ED9               	movlw	low _I2cWriteDataEvt
 35378  005D62  6E19               	movwf	i1GenerateEvt@Event,c
 35379  005D64  0E00               	movlw	high _I2cWriteDataEvt
 35380  005D66  6E1A               	movwf	i1GenerateEvt@Event+1,c
 35381  005D68  ECE1  F031         	call	i1_GenerateEvt	;wreg free
 35382                           
 35383                           ;i2c_slv.c: 267: TxSts = 1u;
 35384  005D6C  0E01               	movlw	1
 35385  005D6E  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 35386                           
 35387                           ;i2c_slv.c: 268: }
 35388  005D70  0012               	return	
 35389  005D72                     i1l1409:
 35390                           
 35391                           ;i2c_slv.c: 269: else
 35392                           ;i2c_slv.c: 270: {
 35393                           ;i2c_slv.c: 272: TxSts = 0u;
 35394  005D72  0E00               	movlw	0
 35395  005D74  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 35396  005D76  0012               	return	
 35397  005D78                     __end_ofi1_I2cSlv_SendI2cMsg:
 35398                           	opt stack 0
 35399                           tosu	equ	0xFFF
 35400                           tosh	equ	0xFFE
 35401                           tosl	equ	0xFFD
 35402                           pclatu	equ	0xFFB
 35403                           pclath	equ	0xFFA
 35404                           tblptru	equ	0xFF8
 35405                           tblptrh	equ	0xFF7
 35406                           tblptrl	equ	0xFF6
 35407                           tablat	equ	0xFF5
 35408                           prodh	equ	0xFF4
 35409                           prodl	equ	0xFF3
 35410                           intcon	equ	0xFF2
 35411                           intcon2	equ	0xFF1
 35412                           intcon3	equ	0xFF0
 35413                           indf0	equ	0xFEF
 35414                           postinc0	equ	0xFEE
 35415                           plusw0	equ	0xFEB
 35416                           fsr0h	equ	0xFEA
 35417                           fsr0l	equ	0xFE9
 35418                           wreg	equ	0xFE8
 35419                           indf1	equ	0xFE7
 35420                           postinc1	equ	0xFE6
 35421                           postdec1	equ	0xFE5
 35422                           plusw1	equ	0xFE3
 35423                           fsr1h	equ	0xFE2
 35424                           fsr1l	equ	0xFE1
 35425                           bsr	equ	0xFE0
 35426                           indf2	equ	0xFDF
 35427                           postinc2	equ	0xFDE
 35428                           postdec2	equ	0xFDD
 35429                           plusw2	equ	0xFDB
 35430                           fsr2h	equ	0xFDA
 35431                           fsr2l	equ	0xFD9
 35432                           status	equ	0xFD8
 35433                           
 35434 ;; *************** function i1_GenerateEvt *****************
 35435 ;; Defined at:
 35436 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 35437 ;; Parameters:    Size  Location     Type
 35438 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 35439 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 35440 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 35441 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 35442 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 35443 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 35444 ;; Auto vars:     Size  Location     Type
 35445 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 35446 ;; Return value:  Size  Location     Type
 35447 ;;                  1    wreg      enum E7699
 35448 ;; Registers used:
 35449 ;;		wreg, fsr2l, fsr2h, status,2
 35450 ;; Tracked objects:
 35451 ;;		On entry : 0/0
 35452 ;;		On exit  : 0/0
 35453 ;;		Unchanged: 0/0
 35454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35458 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35459 ;;Total ram usage:        3 bytes
 35460 ;; Hardware stack levels used:    1
 35461 ;; Hardware stack levels required when called:    4
 35462 ;; This function calls:
 35463 ;;		Nothing
 35464 ;; This function is called by:
 35465 ;;		i1_I2cSlv_SendI2cMsg
 35466 ;; This function uses a non-reentrant model
 35467 ;;
 35468                           
 35469                           	psect	text176
 35470  0063C2                     __ptext176:
 35471                           	opt stack 0
 35472  0063C2                     i1_GenerateEvt:
 35473                           	opt stack 8
 35474                           
 35475                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 35476                           
 35477                           ;incstack = 0
 35478  0063C2  0E00               	movlw	0
 35479  0063C4  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 35480                           
 35481                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 35482  0063C6  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 35483  0063CA  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 35484  0063CE  0E02               	movlw	2
 35485  0063D0  6EDF               	movwf	indf2,c
 35486                           
 35487                           ;os_ser.c: 83: EventStatus = EventSent;
 35488  0063D2  0E02               	movlw	2
 35489  0063D4  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 35490  0063D6  0012               	return	
 35491  0063D8                     __end_ofi1_GenerateEvt:
 35492                           	opt stack 0
 35493                           tosu	equ	0xFFF
 35494                           tosh	equ	0xFFE
 35495                           tosl	equ	0xFFD
 35496                           pclatu	equ	0xFFB
 35497                           pclath	equ	0xFFA
 35498                           tblptru	equ	0xFF8
 35499                           tblptrh	equ	0xFF7
 35500                           tblptrl	equ	0xFF6
 35501                           tablat	equ	0xFF5
 35502                           prodh	equ	0xFF4
 35503                           prodl	equ	0xFF3
 35504                           intcon	equ	0xFF2
 35505                           intcon2	equ	0xFF1
 35506                           intcon3	equ	0xFF0
 35507                           indf0	equ	0xFEF
 35508                           postinc0	equ	0xFEE
 35509                           plusw0	equ	0xFEB
 35510                           fsr0h	equ	0xFEA
 35511                           fsr0l	equ	0xFE9
 35512                           wreg	equ	0xFE8
 35513                           indf1	equ	0xFE7
 35514                           postinc1	equ	0xFE6
 35515                           postdec1	equ	0xFE5
 35516                           plusw1	equ	0xFE3
 35517                           fsr1h	equ	0xFE2
 35518                           fsr1l	equ	0xFE1
 35519                           bsr	equ	0xFE0
 35520                           indf2	equ	0xFDF
 35521                           postinc2	equ	0xFDE
 35522                           postdec2	equ	0xFDD
 35523                           plusw2	equ	0xFDB
 35524                           fsr2h	equ	0xFDA
 35525                           fsr2l	equ	0xFD9
 35526                           status	equ	0xFD8
 35527                           
 35528 ;; *************** function _HighPriorityIsr *****************
 35529 ;; Defined at:
 35530 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 35531 ;; Parameters:    Size  Location     Type
 35532 ;;		None
 35533 ;; Auto vars:     Size  Location     Type
 35534 ;;		None
 35535 ;; Return value:  Size  Location     Type
 35536 ;;                  1    wreg      void 
 35537 ;; Registers used:
 35538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 35539 ;; Tracked objects:
 35540 ;;		On entry : 0/0
 35541 ;;		On exit  : 0/0
 35542 ;;		Unchanged: 0/0
 35543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35546 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35547 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35548 ;;Total ram usage:       18 bytes
 35549 ;; Hardware stack levels used:    1
 35550 ;; Hardware stack levels required when called:    3
 35551 ;; This function calls:
 35552 ;;		_Mcu_Int0Isr
 35553 ;;		_Mcu_Int1Isr
 35554 ;;		_Rtcc_RtcIsr
 35555 ;;		_Uart_Uart1RxIsr
 35556 ;; This function is called by:
 35557 ;;		Interrupt level 2
 35558 ;; This function uses a non-reentrant model
 35559 ;;
 35560                           
 35561                           	psect	intcode
 35562  000008                     __pintcode:
 35563                           	opt stack 0
 35564  000008                     _HighPriorityIsr:
 35565                           	opt stack 8
 35566                           
 35567                           ;incstack = 0
 35568  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 35569  00000A  EF38  F021         	goto	int_func
 35570                           tosu	equ	0xFFF
 35571                           tosh	equ	0xFFE
 35572                           tosl	equ	0xFFD
 35573                           pclatu	equ	0xFFB
 35574                           pclath	equ	0xFFA
 35575                           tblptru	equ	0xFF8
 35576                           tblptrh	equ	0xFF7
 35577                           tblptrl	equ	0xFF6
 35578                           tablat	equ	0xFF5
 35579                           prodh	equ	0xFF4
 35580                           prodl	equ	0xFF3
 35581                           intcon	equ	0xFF2
 35582                           intcon2	equ	0xFF1
 35583                           intcon3	equ	0xFF0
 35584                           indf0	equ	0xFEF
 35585                           postinc0	equ	0xFEE
 35586                           plusw0	equ	0xFEB
 35587                           fsr0h	equ	0xFEA
 35588                           fsr0l	equ	0xFE9
 35589                           wreg	equ	0xFE8
 35590                           indf1	equ	0xFE7
 35591                           postinc1	equ	0xFE6
 35592                           postdec1	equ	0xFE5
 35593                           plusw1	equ	0xFE3
 35594                           fsr1h	equ	0xFE2
 35595                           fsr1l	equ	0xFE1
 35596                           bsr	equ	0xFE0
 35597                           indf2	equ	0xFDF
 35598                           postinc2	equ	0xFDE
 35599                           postdec2	equ	0xFDD
 35600                           plusw2	equ	0xFDB
 35601                           fsr2h	equ	0xFDA
 35602                           fsr2l	equ	0xFD9
 35603                           status	equ	0xFD8
 35604                           
 35605                           	psect	intcode_body
 35606  004270                     __pintcode_body:
 35607                           	opt stack 8
 35608  004270                     int_func:
 35609                           	opt stack 8
 35610  004270  CFFA F007          	movff	pclath,??_HighPriorityIsr
 35611  004274  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 35612  004278  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 35613  00427C  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 35614  004280  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 35615  004284  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 35616  004288  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 35617  00428C  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 35618  004290  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 35619  004294  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 35620  004298  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 35621  00429C  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 35622  0042A0  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 35623  0042A4  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 35624  0042A8  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 35625  0042AC  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 35626  0042B0  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 35627  0042B4  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 35628                           
 35629                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 35630  0042B8  B2F2               	btfsc	intcon,1,c	;volatile
 35631                           
 35632                           ;irq.c: 158: {
 35633                           ;irq.c: 160: Mcu_Int0Isr();
 35634  0042BA  EC87  F032         	call	_Mcu_Int0Isr	;wreg free
 35635                           
 35636                           ;irq.c: 161: }
 35637                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 35638  0042BE  B0F0               	btfsc	intcon3,0,c	;volatile
 35639                           
 35640                           ;irq.c: 167: {
 35641                           ;irq.c: 169: Mcu_Int1Isr();
 35642  0042C0  EC85  F032         	call	_Mcu_Int1Isr	;wreg free
 35643                           
 35644                           ;irq.c: 170: }
 35645                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 35646  0042C4  B0A4               	btfsc	4004,0,c	;volatile
 35647                           
 35648                           ;irq.c: 203: {
 35649                           ;irq.c: 205: Rtcc_RtcIsr();
 35650  0042C6  EC83  F032         	call	_Rtcc_RtcIsr	;wreg free
 35651                           
 35652                           ;irq.c: 206: }
 35653                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 35654  0042CA  BA9E               	btfsc	3998,5,c	;volatile
 35655                           
 35656                           ;irq.c: 212: {
 35657                           ;irq.c: 214: Uart_Uart1RxIsr();
 35658  0042CC  EC3C  F032         	call	_Uart_Uart1RxIsr	;wreg free
 35659  0042D0  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 35660  0042D4  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 35661  0042D8  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 35662  0042DC  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 35663  0042E0  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 35664  0042E4  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 35665  0042E8  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 35666  0042EC  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 35667  0042F0  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 35668  0042F4  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 35669  0042F8  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 35670  0042FC  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 35671  004300  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 35672  004304  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 35673  004308  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 35674  00430C  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 35675  004310  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 35676  004314  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 35677  004318  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 35678  00431A  0011               	retfie		f
 35679  00431C                     __end_of_HighPriorityIsr:
 35680                           	opt stack 0
 35681                           tosu	equ	0xFFF
 35682                           tosh	equ	0xFFE
 35683                           tosl	equ	0xFFD
 35684                           pclatu	equ	0xFFB
 35685                           pclath	equ	0xFFA
 35686                           tblptru	equ	0xFF8
 35687                           tblptrh	equ	0xFF7
 35688                           tblptrl	equ	0xFF6
 35689                           tablat	equ	0xFF5
 35690                           prodh	equ	0xFF4
 35691                           prodl	equ	0xFF3
 35692                           intcon	equ	0xFF2
 35693                           intcon2	equ	0xFF1
 35694                           intcon3	equ	0xFF0
 35695                           indf0	equ	0xFEF
 35696                           postinc0	equ	0xFEE
 35697                           plusw0	equ	0xFEB
 35698                           fsr0h	equ	0xFEA
 35699                           fsr0l	equ	0xFE9
 35700                           wreg	equ	0xFE8
 35701                           indf1	equ	0xFE7
 35702                           postinc1	equ	0xFE6
 35703                           postdec1	equ	0xFE5
 35704                           plusw1	equ	0xFE3
 35705                           fsr1h	equ	0xFE2
 35706                           fsr1l	equ	0xFE1
 35707                           bsr	equ	0xFE0
 35708                           indf2	equ	0xFDF
 35709                           postinc2	equ	0xFDE
 35710                           postdec2	equ	0xFDD
 35711                           plusw2	equ	0xFDB
 35712                           fsr2h	equ	0xFDA
 35713                           fsr2l	equ	0xFD9
 35714                           status	equ	0xFD8
 35715                           
 35716 ;; *************** function _Uart_Uart1RxIsr *****************
 35717 ;; Defined at:
 35718 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 35719 ;; Parameters:    Size  Location     Type
 35720 ;;		None
 35721 ;; Auto vars:     Size  Location     Type
 35722 ;;		None
 35723 ;; Return value:  Size  Location     Type
 35724 ;;                  1    wreg      void 
 35725 ;; Registers used:
 35726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 35727 ;; Tracked objects:
 35728 ;;		On entry : 0/0
 35729 ;;		On exit  : 0/0
 35730 ;;		Unchanged: 0/0
 35731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35736 ;;Total ram usage:        0 bytes
 35737 ;; Hardware stack levels used:    1
 35738 ;; Hardware stack levels required when called:    2
 35739 ;; This function calls:
 35740 ;;		_Uart_MdmGsmGprsReadService
 35741 ;; This function is called by:
 35742 ;;		_HighPriorityIsr
 35743 ;; This function uses a non-reentrant model
 35744 ;;
 35745                           
 35746                           	psect	text178
 35747  006478                     __ptext178:
 35748                           	opt stack 0
 35749  006478                     _Uart_Uart1RxIsr:
 35750                           	opt stack 8
 35751                           
 35752                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 35753                           ;uart_drv.c: 590: UartRxData = RCREG1;
 35754                           
 35755                           ;incstack = 0
 35756  006478  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 35757                           
 35758                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 35759  00647C  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 35760  006480  0E01               	movlw	1
 35761  006482  ECD4  F01D         	call	_Uart_MdmGsmGprsReadService
 35762  006486  0012               	return		;funcret
 35763  006488                     __end_of_Uart_Uart1RxIsr:
 35764                           	opt stack 0
 35765                           tosu	equ	0xFFF
 35766                           tosh	equ	0xFFE
 35767                           tosl	equ	0xFFD
 35768                           pclatu	equ	0xFFB
 35769                           pclath	equ	0xFFA
 35770                           tblptru	equ	0xFF8
 35771                           tblptrh	equ	0xFF7
 35772                           tblptrl	equ	0xFF6
 35773                           tablat	equ	0xFF5
 35774                           prodh	equ	0xFF4
 35775                           prodl	equ	0xFF3
 35776                           intcon	equ	0xFF2
 35777                           intcon2	equ	0xFF1
 35778                           intcon3	equ	0xFF0
 35779                           indf0	equ	0xFEF
 35780                           postinc0	equ	0xFEE
 35781                           plusw0	equ	0xFEB
 35782                           fsr0h	equ	0xFEA
 35783                           fsr0l	equ	0xFE9
 35784                           wreg	equ	0xFE8
 35785                           indf1	equ	0xFE7
 35786                           postinc1	equ	0xFE6
 35787                           postdec1	equ	0xFE5
 35788                           plusw1	equ	0xFE3
 35789                           fsr1h	equ	0xFE2
 35790                           fsr1l	equ	0xFE1
 35791                           bsr	equ	0xFE0
 35792                           indf2	equ	0xFDF
 35793                           postinc2	equ	0xFDE
 35794                           postdec2	equ	0xFDD
 35795                           plusw2	equ	0xFDB
 35796                           fsr2h	equ	0xFDA
 35797                           fsr2l	equ	0xFD9
 35798                           status	equ	0xFD8
 35799                           
 35800 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 35801 ;; Defined at:
 35802 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 35803 ;; Parameters:    Size  Location     Type
 35804 ;;  Module          1    wreg     unsigned char 
 35805 ;;  UartData        1    3[COMRAM] unsigned char 
 35806 ;; Auto vars:     Size  Location     Type
 35807 ;;  Module          1    0[COMRAM] unsigned char 
 35808 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 35809 ;; Return value:  Size  Location     Type
 35810 ;;                  1    wreg      void 
 35811 ;; Registers used:
 35812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 35813 ;; Tracked objects:
 35814 ;;		On entry : 0/0
 35815 ;;		On exit  : 0/0
 35816 ;;		Unchanged: 0/0
 35817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35818 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35821 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35822 ;;Total ram usage:        3 bytes
 35823 ;; Hardware stack levels used:    1
 35824 ;; Hardware stack levels required when called:    1
 35825 ;; This function calls:
 35826 ;;		i2_GenerateEvt
 35827 ;; This function is called by:
 35828 ;;		_Uart_Uart1RxIsr
 35829 ;; This function uses a non-reentrant model
 35830 ;;
 35831                           
 35832                           	psect	text179
 35833  003BA8                     __ptext179:
 35834                           	opt stack 0
 35835  003BA8                     _Uart_MdmGsmGprsReadService:
 35836                           	opt stack 8
 35837                           
 35838                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 35839                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 35840                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 35841                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 35842                           
 35843                           ;incstack = 0
 35844  003BA8  0E00               	movlw	0
 35845  003BAA  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 35846  003BAC  0E00               	movlw	0
 35847  003BAE  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 35848                           
 35849                           ;uart_drv.c: 383: switch (RxState)
 35850  003BB0  D058               	goto	i2l680
 35851  003BB2                     
 35852                           ;uart_drv.c: 387: if (UartData == '\r')
 35853  003BB2  0E0D               	movlw	13
 35854  003BB4  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 35855  003BB6  A4D8               	btfss	status,2,c
 35856  003BB8  D003               	goto	i2l682
 35857                           
 35858                           ;uart_drv.c: 388: {
 35859                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 35860  003BBA  0E01               	movlw	1
 35861  003BBC  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 35862                           
 35863                           ;uart_drv.c: 391: }
 35864  003BBE  0012               	return	
 35865  003BC0                     i2l682:
 35866                           
 35867                           ;uart_drv.c: 392: else
 35868                           ;uart_drv.c: 393: {
 35869                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 35870  003BC0  0E90               	movlw	144
 35871  003BC2  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 35872  003BC4  0E01               	movlw	1
 35873  003BC6  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 35874  003BC8  B0D8               	btfsc	status,0,c
 35875  003BCA  0012               	return	
 35876                           
 35877                           ;uart_drv.c: 395: {
 35878                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 35879  003BCC  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 35880  003BCE  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 35881  003BD0  6ED9               	movwf	fsr2l,c
 35882  003BD2  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 35883  003BD4  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 35884  003BD6  6EDA               	movwf	fsr2h,c
 35885  003BD8  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 35886                           
 35887                           ;uart_drv.c: 399: RxCounter++;
 35888  003BDC  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 35889  003BDE  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 35890                           
 35891                           ;uart_drv.c: 400: }
 35892                           ;uart_drv.c: 401: }
 35893                           ;uart_drv.c: 402: break;
 35894  003BE0  0012               	return	
 35895  003BE2                     
 35896                           ;uart_drv.c: 406: if (UartData == '\n')
 35897  003BE2  0E0A               	movlw	10
 35898  003BE4  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 35899  003BE6  A4D8               	btfss	status,2,c
 35900  003BE8  D035               	goto	i2l688
 35901                           
 35902                           ;uart_drv.c: 407: {
 35903                           ;uart_drv.c: 409: if (RxCounter > 0)
 35904  003BEA  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 35905  003BEC  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 35906  003BEE  B4D8               	btfsc	status,2,c
 35907  003BF0  D031               	goto	i2l688
 35908                           
 35909                           ;uart_drv.c: 410: {
 35910                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 35911  003BF2  0E00               	movlw	0
 35912  003BF4  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 35913  003BF6  0E00               	movlw	0
 35914  003BF8  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 35915  003BFA  D010               	goto	i2l689
 35916  003BFC                     
 35917                           ;uart_drv.c: 413: {
 35918                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 35919  003BFC  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 35920  003BFE  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 35921  003C00  6ED9               	movwf	fsr2l,c
 35922  003C02  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 35923  003C04  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 35924  003C06  6EDA               	movwf	fsr2h,c
 35925  003C08  0E58               	movlw	low _RxBuffer
 35926  003C0A  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 35927  003C0C  6EE1               	movwf	fsr1l,c
 35928  003C0E  0E0C               	movlw	high _RxBuffer
 35929  003C10  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 35930  003C12  6EE2               	movwf	fsr1h,c
 35931  003C14  CFDF FFE7          	movff	indf2,indf1
 35932  003C18  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 35933  003C1A  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 35934  003C1C                     i2l689:
 35935  003C1C  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 35936  003C1E  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 35937  003C20  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 35938  003C22  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 35939  003C24  A0D8               	btfss	status,0,c
 35940  003C26  D7EA               	goto	i2l690
 35941                           
 35942                           ;uart_drv.c: 415: }
 35943                           ;uart_drv.c: 417: RxLen = RxCounter;
 35944  003C28  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 35945  003C2C  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 35946                           
 35947                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 35948  003C30  0E3C               	movlw	low _NewStringReceived
 35949  003C32  6E01               	movwf	i2GenerateEvt@Event,c
 35950  003C34  0E00               	movlw	high _NewStringReceived
 35951  003C36  6E02               	movwf	i2GenerateEvt@Event+1,c
 35952  003C38  ECEC  F031         	call	i2_GenerateEvt	;wreg free
 35953                           
 35954                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 35955  003C3C  0E3B               	movlw	low _NewMdmEvtParserRequest
 35956  003C3E  6E01               	movwf	i2GenerateEvt@Event,c
 35957  003C40  0E00               	movlw	high _NewMdmEvtParserRequest
 35958  003C42  6E02               	movwf	i2GenerateEvt@Event+1,c
 35959  003C44  ECEC  F031         	call	i2_GenerateEvt	;wreg free
 35960                           
 35961                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 35962  003C48  0E3A               	movlw	low _NewStringMdmTerminal
 35963  003C4A  6E01               	movwf	i2GenerateEvt@Event,c
 35964  003C4C  0E00               	movlw	high _NewStringMdmTerminal
 35965  003C4E  6E02               	movwf	i2GenerateEvt@Event+1,c
 35966  003C50  ECEC  F031         	call	i2_GenerateEvt	;wreg free
 35967  003C54                     i2l688:
 35968                           
 35969                           ;uart_drv.c: 427: }
 35970                           ;uart_drv.c: 429: RxState = ReadData;
 35971                           
 35972                           ;uart_drv.c: 424: else
 35973                           ;uart_drv.c: 425: {
 35974                           
 35975                           ;uart_drv.c: 422: }
 35976                           ;uart_drv.c: 423: }
 35977  003C54  0E00               	movlw	0
 35978  003C56  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 35979                           
 35980                           ;uart_drv.c: 431: RxCounter = 0;
 35981  003C58  0E00               	movlw	0
 35982  003C5A  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 35983  003C5C  0E00               	movlw	0
 35984  003C5E  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 35985                           
 35986                           ;uart_drv.c: 436: }
 35987                           
 35988                           ;uart_drv.c: 435: break;
 35989                           
 35990                           ;uart_drv.c: 434: default:
 35991                           
 35992                           ;uart_drv.c: 432: break;
 35993  003C60  0012               	return	
 35994  003C62                     i2l680:
 35995  003C62  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 35996                           
 35997                           ; Switch size 1, requested type "space"
 35998                           ; Number of cases is 2, Range of values is 0 to 1
 35999                           ; switch strategies available:
 36000                           ; Name         Instructions Cycles
 36001                           ; simple_byte            7     4 (average)
 36002                           ;	Chosen strategy is simple_byte
 36003  003C64  0A00               	xorlw	0	; case 0
 36004  003C66  B4D8               	btfsc	status,2,c
 36005  003C68  D7A4               	goto	i2l681
 36006  003C6A  0A01               	xorlw	1	; case 1
 36007  003C6C  A4D8               	btfss	status,2,c
 36008  003C6E  0012               	return	
 36009  003C70  D7B8               	goto	i2l686
 36010  003C72                     __end_of_Uart_MdmGsmGprsReadService:
 36011                           	opt stack 0
 36012                           tosu	equ	0xFFF
 36013                           tosh	equ	0xFFE
 36014                           tosl	equ	0xFFD
 36015                           pclatu	equ	0xFFB
 36016                           pclath	equ	0xFFA
 36017                           tblptru	equ	0xFF8
 36018                           tblptrh	equ	0xFF7
 36019                           tblptrl	equ	0xFF6
 36020                           tablat	equ	0xFF5
 36021                           prodh	equ	0xFF4
 36022                           prodl	equ	0xFF3
 36023                           intcon	equ	0xFF2
 36024                           intcon2	equ	0xFF1
 36025                           intcon3	equ	0xFF0
 36026                           indf0	equ	0xFEF
 36027                           postinc0	equ	0xFEE
 36028                           plusw0	equ	0xFEB
 36029                           fsr0h	equ	0xFEA
 36030                           fsr0l	equ	0xFE9
 36031                           wreg	equ	0xFE8
 36032                           indf1	equ	0xFE7
 36033                           postinc1	equ	0xFE6
 36034                           postdec1	equ	0xFE5
 36035                           plusw1	equ	0xFE3
 36036                           fsr1h	equ	0xFE2
 36037                           fsr1l	equ	0xFE1
 36038                           bsr	equ	0xFE0
 36039                           indf2	equ	0xFDF
 36040                           postinc2	equ	0xFDE
 36041                           postdec2	equ	0xFDD
 36042                           plusw2	equ	0xFDB
 36043                           fsr2h	equ	0xFDA
 36044                           fsr2l	equ	0xFD9
 36045                           status	equ	0xFD8
 36046                           
 36047 ;; *************** function i2_GenerateEvt *****************
 36048 ;; Defined at:
 36049 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36050 ;; Parameters:    Size  Location     Type
 36051 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 36052 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 36053 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 36054 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 36055 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 36056 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 36057 ;; Auto vars:     Size  Location     Type
 36058 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 36059 ;; Return value:  Size  Location     Type
 36060 ;;                  1    wreg      enum E7699
 36061 ;; Registers used:
 36062 ;;		wreg, fsr2l, fsr2h, status,2
 36063 ;; Tracked objects:
 36064 ;;		On entry : 0/0
 36065 ;;		On exit  : 0/0
 36066 ;;		Unchanged: 0/0
 36067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36071 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36072 ;;Total ram usage:        3 bytes
 36073 ;; Hardware stack levels used:    1
 36074 ;; This function calls:
 36075 ;;		Nothing
 36076 ;; This function is called by:
 36077 ;;		_Uart_MdmGsmGprsReadService
 36078 ;; This function uses a non-reentrant model
 36079 ;;
 36080                           
 36081                           	psect	text180
 36082  0063D8                     __ptext180:
 36083                           	opt stack 0
 36084  0063D8                     i2_GenerateEvt:
 36085                           	opt stack 8
 36086                           
 36087                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 36088                           
 36089                           ;incstack = 0
 36090  0063D8  0E00               	movlw	0
 36091  0063DA  6E03               	movwf	i2GenerateEvt@EventStatus,c
 36092                           
 36093                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 36094  0063DC  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 36095  0063E0  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 36096  0063E4  0E02               	movlw	2
 36097  0063E6  6EDF               	movwf	indf2,c
 36098                           
 36099                           ;os_ser.c: 83: EventStatus = EventSent;
 36100  0063E8  0E02               	movlw	2
 36101  0063EA  6E03               	movwf	i2GenerateEvt@EventStatus,c
 36102  0063EC  0012               	return	
 36103  0063EE                     __end_ofi2_GenerateEvt:
 36104                           	opt stack 0
 36105                           tosu	equ	0xFFF
 36106                           tosh	equ	0xFFE
 36107                           tosl	equ	0xFFD
 36108                           pclatu	equ	0xFFB
 36109                           pclath	equ	0xFFA
 36110                           tblptru	equ	0xFF8
 36111                           tblptrh	equ	0xFF7
 36112                           tblptrl	equ	0xFF6
 36113                           tablat	equ	0xFF5
 36114                           prodh	equ	0xFF4
 36115                           prodl	equ	0xFF3
 36116                           intcon	equ	0xFF2
 36117                           intcon2	equ	0xFF1
 36118                           intcon3	equ	0xFF0
 36119                           indf0	equ	0xFEF
 36120                           postinc0	equ	0xFEE
 36121                           plusw0	equ	0xFEB
 36122                           fsr0h	equ	0xFEA
 36123                           fsr0l	equ	0xFE9
 36124                           wreg	equ	0xFE8
 36125                           indf1	equ	0xFE7
 36126                           postinc1	equ	0xFE6
 36127                           postdec1	equ	0xFE5
 36128                           plusw1	equ	0xFE3
 36129                           fsr1h	equ	0xFE2
 36130                           fsr1l	equ	0xFE1
 36131                           bsr	equ	0xFE0
 36132                           indf2	equ	0xFDF
 36133                           postinc2	equ	0xFDE
 36134                           postdec2	equ	0xFDD
 36135                           plusw2	equ	0xFDB
 36136                           fsr2h	equ	0xFDA
 36137                           fsr2l	equ	0xFD9
 36138                           status	equ	0xFD8
 36139                           
 36140 ;; *************** function _Rtcc_RtcIsr *****************
 36141 ;; Defined at:
 36142 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 36143 ;; Parameters:    Size  Location     Type
 36144 ;;		None
 36145 ;; Auto vars:     Size  Location     Type
 36146 ;;		None
 36147 ;; Return value:  Size  Location     Type
 36148 ;;                  1    wreg      void 
 36149 ;; Registers used:
 36150 ;;		wreg, status,2, status,0
 36151 ;; Tracked objects:
 36152 ;;		On entry : 0/0
 36153 ;;		On exit  : 0/0
 36154 ;;		Unchanged: 0/0
 36155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36160 ;;Total ram usage:        0 bytes
 36161 ;; Hardware stack levels used:    1
 36162 ;; This function calls:
 36163 ;;		Nothing
 36164 ;; This function is called by:
 36165 ;;		_HighPriorityIsr
 36166 ;; This function uses a non-reentrant model
 36167 ;;
 36168                           
 36169                           	psect	text181
 36170  006506                     __ptext181:
 36171                           	opt stack 0
 36172  006506                     _Rtcc_RtcIsr:
 36173                           	opt stack 10
 36174                           
 36175                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 36176                           
 36177                           ;incstack = 0
 36178  006506  90A4               	bcf	4004,0,c	;volatile
 36179  006508  0012               	return	
 36180  00650A                     __end_of_Rtcc_RtcIsr:
 36181                           	opt stack 0
 36182                           tosu	equ	0xFFF
 36183                           tosh	equ	0xFFE
 36184                           tosl	equ	0xFFD
 36185                           pclatu	equ	0xFFB
 36186                           pclath	equ	0xFFA
 36187                           tblptru	equ	0xFF8
 36188                           tblptrh	equ	0xFF7
 36189                           tblptrl	equ	0xFF6
 36190                           tablat	equ	0xFF5
 36191                           prodh	equ	0xFF4
 36192                           prodl	equ	0xFF3
 36193                           intcon	equ	0xFF2
 36194                           intcon2	equ	0xFF1
 36195                           intcon3	equ	0xFF0
 36196                           indf0	equ	0xFEF
 36197                           postinc0	equ	0xFEE
 36198                           plusw0	equ	0xFEB
 36199                           fsr0h	equ	0xFEA
 36200                           fsr0l	equ	0xFE9
 36201                           wreg	equ	0xFE8
 36202                           indf1	equ	0xFE7
 36203                           postinc1	equ	0xFE6
 36204                           postdec1	equ	0xFE5
 36205                           plusw1	equ	0xFE3
 36206                           fsr1h	equ	0xFE2
 36207                           fsr1l	equ	0xFE1
 36208                           bsr	equ	0xFE0
 36209                           indf2	equ	0xFDF
 36210                           postinc2	equ	0xFDE
 36211                           postdec2	equ	0xFDD
 36212                           plusw2	equ	0xFDB
 36213                           fsr2h	equ	0xFDA
 36214                           fsr2l	equ	0xFD9
 36215                           status	equ	0xFD8
 36216                           
 36217 ;; *************** function _Mcu_Int1Isr *****************
 36218 ;; Defined at:
 36219 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 36220 ;; Parameters:    Size  Location     Type
 36221 ;;		None
 36222 ;; Auto vars:     Size  Location     Type
 36223 ;;		None
 36224 ;; Return value:  Size  Location     Type
 36225 ;;                  1    wreg      void 
 36226 ;; Registers used:
 36227 ;;		wreg, status,2, status,0
 36228 ;; Tracked objects:
 36229 ;;		On entry : 0/0
 36230 ;;		On exit  : 0/0
 36231 ;;		Unchanged: 0/0
 36232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36237 ;;Total ram usage:        0 bytes
 36238 ;; Hardware stack levels used:    1
 36239 ;; This function calls:
 36240 ;;		Nothing
 36241 ;; This function is called by:
 36242 ;;		_HighPriorityIsr
 36243 ;; This function uses a non-reentrant model
 36244 ;;
 36245                           
 36246                           	psect	text182
 36247  00650A                     __ptext182:
 36248                           	opt stack 0
 36249  00650A                     _Mcu_Int1Isr:
 36250                           	opt stack 10
 36251                           
 36252                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 36253                           
 36254                           ;incstack = 0
 36255  00650A  90F0               	bcf	intcon3,0,c	;volatile
 36256  00650C  0012               	return	
 36257  00650E                     __end_of_Mcu_Int1Isr:
 36258                           	opt stack 0
 36259                           tosu	equ	0xFFF
 36260                           tosh	equ	0xFFE
 36261                           tosl	equ	0xFFD
 36262                           pclatu	equ	0xFFB
 36263                           pclath	equ	0xFFA
 36264                           tblptru	equ	0xFF8
 36265                           tblptrh	equ	0xFF7
 36266                           tblptrl	equ	0xFF6
 36267                           tablat	equ	0xFF5
 36268                           prodh	equ	0xFF4
 36269                           prodl	equ	0xFF3
 36270                           intcon	equ	0xFF2
 36271                           intcon2	equ	0xFF1
 36272                           intcon3	equ	0xFF0
 36273                           indf0	equ	0xFEF
 36274                           postinc0	equ	0xFEE
 36275                           plusw0	equ	0xFEB
 36276                           fsr0h	equ	0xFEA
 36277                           fsr0l	equ	0xFE9
 36278                           wreg	equ	0xFE8
 36279                           indf1	equ	0xFE7
 36280                           postinc1	equ	0xFE6
 36281                           postdec1	equ	0xFE5
 36282                           plusw1	equ	0xFE3
 36283                           fsr1h	equ	0xFE2
 36284                           fsr1l	equ	0xFE1
 36285                           bsr	equ	0xFE0
 36286                           indf2	equ	0xFDF
 36287                           postinc2	equ	0xFDE
 36288                           postdec2	equ	0xFDD
 36289                           plusw2	equ	0xFDB
 36290                           fsr2h	equ	0xFDA
 36291                           fsr2l	equ	0xFD9
 36292                           status	equ	0xFD8
 36293                           
 36294 ;; *************** function _Mcu_Int0Isr *****************
 36295 ;; Defined at:
 36296 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 36297 ;; Parameters:    Size  Location     Type
 36298 ;;		None
 36299 ;; Auto vars:     Size  Location     Type
 36300 ;;		None
 36301 ;; Return value:  Size  Location     Type
 36302 ;;                  1    wreg      void 
 36303 ;; Registers used:
 36304 ;;		wreg, status,2, status,0
 36305 ;; Tracked objects:
 36306 ;;		On entry : 0/0
 36307 ;;		On exit  : 0/0
 36308 ;;		Unchanged: 0/0
 36309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36314 ;;Total ram usage:        0 bytes
 36315 ;; Hardware stack levels used:    1
 36316 ;; This function calls:
 36317 ;;		Nothing
 36318 ;; This function is called by:
 36319 ;;		_HighPriorityIsr
 36320 ;; This function uses a non-reentrant model
 36321 ;;
 36322                           
 36323                           	psect	text183
 36324  00650E                     __ptext183:
 36325                           	opt stack 0
 36326  00650E                     _Mcu_Int0Isr:
 36327                           	opt stack 10
 36328                           
 36329                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 36330                           
 36331                           ;incstack = 0
 36332  00650E  92F2               	bcf	intcon,1,c	;volatile
 36333  006510  0012               	return	
 36334  006512                     __end_of_Mcu_Int0Isr:
 36335                           	opt stack 0
 36336                           tosu	equ	0xFFF
 36337                           tosh	equ	0xFFE
 36338                           tosl	equ	0xFFD
 36339                           pclatu	equ	0xFFB
 36340                           pclath	equ	0xFFA
 36341                           tblptru	equ	0xFF8
 36342                           tblptrh	equ	0xFF7
 36343                           tblptrl	equ	0xFF6
 36344                           tablat	equ	0xFF5
 36345                           prodh	equ	0xFF4
 36346                           prodl	equ	0xFF3
 36347                           intcon	equ	0xFF2
 36348                           intcon2	equ	0xFF1
 36349                           intcon3	equ	0xFF0
 36350                           indf0	equ	0xFEF
 36351                           postinc0	equ	0xFEE
 36352                           plusw0	equ	0xFEB
 36353                           fsr0h	equ	0xFEA
 36354                           fsr0l	equ	0xFE9
 36355                           wreg	equ	0xFE8
 36356                           indf1	equ	0xFE7
 36357                           postinc1	equ	0xFE6
 36358                           postdec1	equ	0xFE5
 36359                           plusw1	equ	0xFE3
 36360                           fsr1h	equ	0xFE2
 36361                           fsr1l	equ	0xFE1
 36362                           bsr	equ	0xFE0
 36363                           indf2	equ	0xFDF
 36364                           postinc2	equ	0xFDE
 36365                           postdec2	equ	0xFDD
 36366                           plusw2	equ	0xFDB
 36367                           fsr2h	equ	0xFDA
 36368                           fsr2l	equ	0xFD9
 36369                           status	equ	0xFD8
 36370                           tosu	equ	0xFFF
 36371                           tosh	equ	0xFFE
 36372                           tosl	equ	0xFFD
 36373                           pclatu	equ	0xFFB
 36374                           pclath	equ	0xFFA
 36375                           tblptru	equ	0xFF8
 36376                           tblptrh	equ	0xFF7
 36377                           tblptrl	equ	0xFF6
 36378                           tablat	equ	0xFF5
 36379                           prodh	equ	0xFF4
 36380                           prodl	equ	0xFF3
 36381                           intcon	equ	0xFF2
 36382                           intcon2	equ	0xFF1
 36383                           intcon3	equ	0xFF0
 36384                           indf0	equ	0xFEF
 36385                           postinc0	equ	0xFEE
 36386                           plusw0	equ	0xFEB
 36387                           fsr0h	equ	0xFEA
 36388                           fsr0l	equ	0xFE9
 36389                           wreg	equ	0xFE8
 36390                           indf1	equ	0xFE7
 36391                           postinc1	equ	0xFE6
 36392                           postdec1	equ	0xFE5
 36393                           plusw1	equ	0xFE3
 36394                           fsr1h	equ	0xFE2
 36395                           fsr1l	equ	0xFE1
 36396                           bsr	equ	0xFE0
 36397                           indf2	equ	0xFDF
 36398                           postinc2	equ	0xFDE
 36399                           postdec2	equ	0xFDD
 36400                           plusw2	equ	0xFDB
 36401                           fsr2h	equ	0xFDA
 36402                           fsr2l	equ	0xFD9
 36403                           status	equ	0xFD8
 36404                           
 36405                           	psect	text184
 36406  000000                     __ptext184:
 36407                           	opt stack 0
 36408                           tosu	equ	0xFFF
 36409                           tosh	equ	0xFFE
 36410                           tosl	equ	0xFFD
 36411                           pclatu	equ	0xFFB
 36412                           pclath	equ	0xFFA
 36413                           tblptru	equ	0xFF8
 36414                           tblptrh	equ	0xFF7
 36415                           tblptrl	equ	0xFF6
 36416                           tablat	equ	0xFF5
 36417                           prodh	equ	0xFF4
 36418                           prodl	equ	0xFF3
 36419                           intcon	equ	0xFF2
 36420                           intcon2	equ	0xFF1
 36421                           intcon3	equ	0xFF0
 36422                           indf0	equ	0xFEF
 36423                           postinc0	equ	0xFEE
 36424                           plusw0	equ	0xFEB
 36425                           fsr0h	equ	0xFEA
 36426                           fsr0l	equ	0xFE9
 36427                           wreg	equ	0xFE8
 36428                           indf1	equ	0xFE7
 36429                           postinc1	equ	0xFE6
 36430                           postdec1	equ	0xFE5
 36431                           plusw1	equ	0xFE3
 36432                           fsr1h	equ	0xFE2
 36433                           fsr1l	equ	0xFE1
 36434                           bsr	equ	0xFE0
 36435                           indf2	equ	0xFDF
 36436                           postinc2	equ	0xFDE
 36437                           postdec2	equ	0xFDD
 36438                           plusw2	equ	0xFDB
 36439                           fsr2h	equ	0xFDA
 36440                           fsr2l	equ	0xFD9
 36441                           status	equ	0xFD8
 36442                           
 36443                           	psect	rparam
 36444  0000                     tosu	equ	0xFFF
 36445                           tosh	equ	0xFFE
 36446                           tosl	equ	0xFFD
 36447                           pclatu	equ	0xFFB
 36448                           pclath	equ	0xFFA
 36449                           tblptru	equ	0xFF8
 36450                           tblptrh	equ	0xFF7
 36451                           tblptrl	equ	0xFF6
 36452                           tablat	equ	0xFF5
 36453                           prodh	equ	0xFF4
 36454                           prodl	equ	0xFF3
 36455                           intcon	equ	0xFF2
 36456                           intcon2	equ	0xFF1
 36457                           intcon3	equ	0xFF0
 36458                           indf0	equ	0xFEF
 36459                           postinc0	equ	0xFEE
 36460                           plusw0	equ	0xFEB
 36461                           fsr0h	equ	0xFEA
 36462                           fsr0l	equ	0xFE9
 36463                           wreg	equ	0xFE8
 36464                           indf1	equ	0xFE7
 36465                           postinc1	equ	0xFE6
 36466                           postdec1	equ	0xFE5
 36467                           plusw1	equ	0xFE3
 36468                           fsr1h	equ	0xFE2
 36469                           fsr1l	equ	0xFE1
 36470                           bsr	equ	0xFE0
 36471                           indf2	equ	0xFDF
 36472                           postinc2	equ	0xFDE
 36473                           postdec2	equ	0xFDD
 36474                           plusw2	equ	0xFDB
 36475                           fsr2h	equ	0xFDA
 36476                           fsr2l	equ	0xFD9
 36477                           status	equ	0xFD8
 36478                           
 36479                           	psect	temp
 36480  000042                     btemp:
 36481                           	opt stack 0
 36482  000042                     	ds	1
 36483  0000                     int$flags	set	btemp
 36484  0000                     wtemp6	set	btemp+1
 36485                           tosu	equ	0xFFF
 36486                           tosh	equ	0xFFE
 36487                           tosl	equ	0xFFD
 36488                           pclatu	equ	0xFFB
 36489                           pclath	equ	0xFFA
 36490                           tblptru	equ	0xFF8
 36491                           tblptrh	equ	0xFF7
 36492                           tblptrl	equ	0xFF6
 36493                           tablat	equ	0xFF5
 36494                           prodh	equ	0xFF4
 36495                           prodl	equ	0xFF3
 36496                           intcon	equ	0xFF2
 36497                           intcon2	equ	0xFF1
 36498                           intcon3	equ	0xFF0
 36499                           indf0	equ	0xFEF
 36500                           postinc0	equ	0xFEE
 36501                           plusw0	equ	0xFEB
 36502                           fsr0h	equ	0xFEA
 36503                           fsr0l	equ	0xFE9
 36504                           wreg	equ	0xFE8
 36505                           indf1	equ	0xFE7
 36506                           postinc1	equ	0xFE6
 36507                           postdec1	equ	0xFE5
 36508                           plusw1	equ	0xFE3
 36509                           fsr1h	equ	0xFE2
 36510                           fsr1l	equ	0xFE1
 36511                           bsr	equ	0xFE0
 36512                           indf2	equ	0xFDF
 36513                           postinc2	equ	0xFDE
 36514                           postdec2	equ	0xFDD
 36515                           plusw2	equ	0xFDB
 36516                           fsr2h	equ	0xFDA
 36517                           fsr2l	equ	0xFD9
 36518                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    571
    Data        181
    BSS         2365
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      1     256
    BANK4           192      4     192
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_32(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    saveMasterNumber@phoneNumber	PTR unsigned char  size(2) Largest target is 14
		 -> callerNumber(BANK4[14]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 5
		 -> memoryPreamble(BANK3[5]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), 
		 -> callerNumber(BANK4[14]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> memoryPreamble(BANK3[5]), STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK5[50]), 
		 -> PhoneNumber(BANK4[20]), STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), 
		 -> callerNumber(BANK4[14]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> MessageText(BANK5[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), 
		 -> callerNumber(BANK4[14]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> MyApp_Task@cmdAddNumber(BANK1[4]), RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), ModemEvtParser@ClipString(BANK0[5]), 
		 -> ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8950 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 5
		 -> memoryPreamble(BANK3[5]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 14
		 -> memoryPreamble(BANK3[5]), callerNumber(BANK4[14]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4612$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4612$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4612$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4612$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3065$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3055$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3055$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3031$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3031$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3031$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3031$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 5
		 -> memoryPreamble(BANK3[5]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2532_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2532_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 14
		 -> callerNumber(BANK4[14]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_31(CODE[12]), STR_30(CODE[19]), STR_29(CODE[14]), STR_20(CODE[14]), 
		 -> STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), 
		 -> STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), 
		 -> STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _waitSetupCall->_secondsAppTimer
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _updateMemorizedNumbersCount->_Eeprom_Write
    _saveMasterNumber->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _initGprsModem->_Mdm_SetSmsFormat
    _secondsAppTimer->___lwdiv
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _Mdm_MainTask->_ModemEvtParser
    _Mdm_MainTask->_Uart_InitUartModule
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_initFsm
    _initFsm->_initEeprom
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _Sch_MainScheduler->_InitializeTasks
    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  724027
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  719396
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  359791
                                              0 BANK3      1     1      0
                                              0 BANK4      4     4      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  359605
                                              0 BANK3      1     1      0
                                              0 BANK4      2     2      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59042
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59042
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41832
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                           9     9      0   98917
                                              4 BANK1      8     8      0
                    _GetCallerNumber
                _Led_SetLedBlinkTime
                   _Led_SetLedStatus
                     _Mdm_GetSmsData
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
              _Uart_WriteConstString
                            _initFsm
                   _saveMasterNumber
        _updateMemorizedNumbersCount
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (4) _waitSetupCall                                        1     1      0   17742
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _getSetupCall                                         1     1      0    5527
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (6) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (6) _Mdm_HangPhoneCall                                    0     0      0    2751
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _updateMemorizedNumbersCount                          0     0      0    8926
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (5) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _saveMasterNumber                                     3     1      2    9123
                                             46 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Write                                         7     4      3    8926
                                             39 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   39633
                                              3 BANK1      1     1      0
                         _initEeprom
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15578
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   11118
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24018
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Read                                          7     4      3   23938
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (7) _I2cSlv_QueryI2cData                                  7     0      7   23495
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3711
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_GetSmsData                                       3     1      2    7437
                                             39 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _GetCallerNumber                                      2     0      2    5123
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   70452
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   15573
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   11578
                                             40 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _StringCompare                                       11     5      6    1792
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   14560
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8747
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13998
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   41475
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   20774
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   20701
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteConstString                                3     1      2    2751
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (8) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _StringCopy                                          10     4      6    4563
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    2421
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7347
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7347
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2877
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1    1060
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _saveMasterNumber
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _updateMemorizedNumbersCount
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _initPreamble
         _waitSetupCall
           _Led_SetLedStatus
           _getSetupCall
             _Mdm_HangPhoneCall
               _Uart_WriteConstString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Mdm_IsRinging
               _ReceiveEvt
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _saveMasterNumber
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _updateMemorizedNumbersCount
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
             _initPreamble (ARG)
           _initPreamble
         _waitSetupCall
           _Led_SetLedStatus
           _getSetupCall
             _Mdm_HangPhoneCall
               _Uart_WriteConstString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Mdm_IsRinging
               _ReceiveEvt
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      1     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      4      C0      14      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     9A2       8        0.0%
DATA                 0      0     CC2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 20 18:02:34 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5418  
                              _USB_SD_Ptr FC23                            ??_getSetupCall 0083  
               __size_of_Mdm_SetSmsFormat 0050                      __size_of_TurnOnModem 0046  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 6274  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 2180                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 0031                                       l202 209C  
                                     l203 20A4                                       l205 20EC  
                                     l206 2112                                       l208 211A  
                                     l160 1FE0                                       l209 213A  
                                     l161 1EB6                                       l162 201E  
                                     l170 1F7E                                       l171 1F94  
                                     l163 1EC2                                       l315 4452  
                                     l323 441E                                       l164 1F02  
                                     l316 43C8                                       l420 4962  
                                     l500 4812                                       l173 1F98  
                                     l325 4438                                       l421 4982  
                                     l237 6280                                       l174 1FA0  
                                     l166 1F10                                       l318 43D2  
                                     l422 498E               __end_of_USBStdGetDscHandler 2E26  
                                     l510 47E4                                       l502 47A4  
                                     l175 1FAC                                       l167 1F38  
                                     l319 43F8                                       l423 499A  
                                     l511 47D4                                       l503 4794  
                                     l192 2144                                       l176 1FC2  
                                     l416 49AE                                       l424 49A6  
                                     l512 47F8                                       l504 47BA  
                                     l520 58CC                                       l193 2024  
                                     l169 1F4A                                       l417 4954  
                                     l441 17EC                                       l513 47D8  
                                     l505 4798                                       l521 5898  
                                     l194 217C                                       l418 49DC  
                                     l442 15F4                                       l514 47DE  
                                     l506 479E                                       l530 31EC  
                                     l195 2030                                       l179 1FCE  
                                     l419 495C                                       l523 58B2  
                                     l531 3252                                       l196 2070  
                                     l700 5B2C                                       l444 163C  
                                     l532 3218                                       l445 1684  
                                     l541 621E                                       l198 207E  
                                     l446 16CC                                       l199 2092  
                                     l631 2B3C                                       l447 1714  
                                     l448 175C                                       l528 3258  
                                     l633 2BB4                                       l625 2AC8  
                                     l449 17A4                                       l529 3244  
                                     l538 6222                                       l546 3CCA  
                                     l651 581C                                       l707 5C90  
                                     l627 2AEC                                       l715 5BC4  
                                     l539 621A                                       l547 3CE6  
                                     l660 5840                                       l652 5816  
                                     l716 5B9A                                       l709 5CAA  
                                     l629 2B14                                       l718 5BB2  
                                     l639 6266                                       l832 5F90  
                                     l844 3D9E                                       l668 0C44  
                                     _BDT 000400                                       l790 629C  
                                     l855 4E12                                       l775 2F48  
                                     l864 4AE0                                       l856 4DB8  
                                     l857 4E2C                                       l698 5B10  
                                     l858 4DE8                                       l867 4AF2  
                                     l982 255A                                       l983 242E  
                                     l985 2452                                       l987 246C  
                                     l988 24A0                                       l989 2512  
                                     l998 2536                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                   __end_of_HighPriorityIsr 431C  
                          ??_Mdm_MainTask 00A2                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 5E18                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1BAA  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CE  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 5B8E  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 242C  
           ??_Tmr_RegisterTmr2IsrCallback 007F                                      l1010 59B6  
         InitGprsNetwork@GprsNetInitState 01ED                                      l1100 1B1A  
                                    l1101 1B66                                      l1013 59CE  
                                    l1110 5720                               RiSm@Counter 02E0  
                                    l1031 3AF0                                      l1111 5734  
                                    l1032 3B28                                      l1033 3B4C  
                                    l1009 59E8                                      l1121 578C  
                                    l1027 3B84                                      l1035 3B6C  
                                    l2003 51FA                                      l1107 5746  
                                    l2100 3260                                      l1220 0DE8  
                                    l1028 3AE0                                      l1052 1E88  
                                    l1060 1E5A                                      l1108 570A  
                                    l2101 3334                                      l1221 0E22  
                                    l1053 1DA2                                      l2005 5200  
                                    l2102 327E                                      l2110 447A  
                                    l1222 0E96                                      l1070 2CDA  
                                    l2111 4510                                      l1223 0E5E  
                                    l1071 2BD2                                      l1055 1EA2  
                                    l2104 32EE                                      l2112 448A  
                                    l1216 1078                                      l1056 1DD4  
                                    l1136 611E                                      l2032 555C  
                                    l1152 60FA                                      l2113 449C  
                                    l1233 1010                                      l1225 0F3E  
                                    l1217 0DD0                                      l1129 50C4  
                                    l1401 54B2                                      l2130 5F24  
                                    l2114 44B6                                      l1250 05F4  
                                    l1234 1054                                      l1226 0F78  
                                    l1074 2BEE                                      l1058 1E24  
                                    l2034 5568                                      l1402 5472  
                                    l2122 3A00                                      l2131 5F12  
                                    l1219 10B0                                      l1227 0FB8  
                                    l1075 2C06                                      l1091 1B80  
                                    l2123 3948                                      l2211 4B6A  
                                    l2116 44C4                                      l1252 0AB6  
                                    l1260 07F2                                      l1228 0FBC  
                                    l1092 19FE                                      l1156 5DA2  
                                    l2140 5572                                      l3100 4360  
                                    l1404 54AC                                      l2133 5F18  
                                    l2109 44E8                                      l2117 44D2  
                                    l1261 082C                                      l1253 060C  
                                    l1229 1000                                      l3101 43A2  
                                    l2125 3956                                      l2134 5F1E  
                                    l1270 096E                                      l1262 0856  
                                    l1254 0646                                      l1238 106E  
                                    l1078 2C78                                      l2142 5584  
                                    l1414 5B88                                      l1263 0890  
                                    l1255 0680                                      l1095 1A1A  
                                    l2143 5596                                      l1264 08CA  
                                    l1256 06BA                                      l1096 1AD0  
                                    l1440 37C6                                      l2400 01AE  
                                    l2208 4B7E                                      l1249 0A54  
                                    l1265 090E                                      l1257 073E  
                                    l1097 1AF4                                      l1409 5C82  
                                    l2401 019C                                      l1601 21CA  
                                    l2209 4B04                                      l2090 262C  
                                    l2250 5DD6                                      l1282 0A42  
                                    l1274 097E                                      l1258 06F6  
                                    l1442 3824                                      l2251 5DC2  
                                    l1283 0A4A                                      l1275 09AA  
                                    l2139 55A8                                      l1419 620A  
                                    l1443 3838                                      l2411 0392  
                                    l3211 5EC8                                      l1603 21F2  
                                    l1291 5970                                      l1380 3ECC  
                                    l3132 4D90                                      l2244 51EA  
                                    l2412 0326                                      l3212 5EB6  
                                    l1700 364A                                      l1620 1C20  
                                    l1612 1BD6                                      l1381 3EEE  
                                    l3133 4D9E                                      l2245 51AA  
                                    l1277 09C4                                      l1269 092A  
                                    l2237 56A8                                      l1437 385E  
                                    l1445 3856                                      l2413 02B4  
                                    l3205 5912                                      l1605 2232  
                                    l1621 1C2C                                      l1613 1BCC  
                                    l2501 6152                                      l1390 3F50  
                                    l2086 269E                                      l1278 0A32  
                                    l2238 567E                                      l1438 37A8  
                                    l2414 0250                                      l2406 01D0  
                                    l1710 2FA8                                      l3206 58F0  
                                    l1630 1CC0                                      l1614 1BCA  
                                    l1391 3F5C                                      l1383 3F10  
                                    l2087 2580                                      l2239 56A4  
                                    l1439 3874                                      l2431 045E  
                                    l2423 0402                                      l1703 36C6  
                                    l1711 2F82                                      l1623 1C54  
                                    l3128 4D5C                                      l2088 26B4  
                                    l2432 0578                                      l2424 03D2  
                                    l2416 0304                                      l1704 368C  
                                    l1640 5A52                                      l1288 59A2  
                                    l3129 4D50                                      l2089 25A8  
                                    l2417 02C6                                      l1713 3020  
                                    l1641 5A62                                      l1633 1CE6  
                                    l1625 1C6A                                      l1617 1BF2  
                                    l1386 3F18                                      l2434 04B4  
                                    l1714 3006                                      l1730 2E0E  
                                    l1722 3394                                      l1810 3538  
                                    l1626 1C76                                      l1618 1C02  
                                    l1379 3F6A                                      l2099 3318  
                                    l2435 0478                                      l1731 2D0A  
                                    l1811 354C                                      l1635 1D0A  
                                    l1627 1CA0                                      l1619 1C0A  
                                    l1388 3F34                                      l3412 34CA  
                                    l3340 52DE                                      l1900 41E6  
                                    l1724 3408                                      l1812 3552  
                                    l1628 1CAC                USBConfigureEndpoint@handle 0083  
                                    l3181 55E0                                      l1645 406A  
                                    l3413 3482                                      l2429 041E  
                                    l3341 52D4                                      l2453 131E  
                                    l1733 2D1E                                      l1805 35B2  
                                    l1637 1D28                                      l3182 55D8  
                                    l3094 5AA8                                      l3414 349A  
                                    l3406 3442                                      l2438 0524  
                                    l2454 10B8                                      l1902 41FE  
                                    l1822 137E                                      l1734 2DA6  
                                    l1750 4152                                      l1814 3558  
                                    l1806 3522                                      l1670 46A8  
                                    l2631 4A6C                                      l1647 4094  
                                    l3191 5ADE                                      l3415 34AA  
                                    l3407 343C                                      l2439 0570  
                                    l2471 12F8                                      l2463 110E  
                                    l1903 420C                                      l1831 14EA  
                                    l1823 1384                                      l1743 4194  
                                    l1815 3576                                      l2632 4A1C  
                                    l3088 61EA                                      l3192 5AD6  
                                    l3352 5C1E                                      l2456 10DE  
                                    l1664 3A5A                                      l1904 422A  
                                    l1736 2DAE                                      l1744 411A  
                                    l1816 3592                                      l1808 352C  
                                    l1672 46C2                                      l3185 5600  
                                    l2641 4C8E                                      l2625 4A50  
                                    l2633 4A30                                      l2713 57E4  
                                    l1649 40F0                                      l1921 48B4  
                                    l3409 346A                                      l2393 05D2  
                                    l3337 52C4                                      l3353 5C18  
                                    l2473 1318                                      l2465 112E  
                                    l1905 4242                                      l1841 1570  
                                    l1833 14B2                                      l1825 13F6  
                                    l1737 2DFE                                      l1809 3532  
                                    l1681 30F0                                      l2481 6304  
                                    l3186 560A                                      l2642 4C2C  
                                    l2634 4A48                                      l2626 49EA  
                                    l3098 4324                                      l3346 5E5E  
                                    l3370 1874                                      l3418 3508  
                                    l2394 00E2                                      l2730 3884  
                                    l3338 52BE                                      l2458 10FA  
                                    l1834 14D0                                      l1682 3098  
                                    l2715 57F0                                      l3195 5AF6  
                                    l3347 5E54                                      l2731 389E  
                                    l2467 114E                                      l1843 15C6  
                                    l1827 143E                                      l1739 2E06  
                                    l1747 41AA                                      l1771 493C  
                                    l2644 4C72                                      l1924 4862  
                                    l3196 5B00                                      l3444 5F02  
                                    l3372 18C8                                      l2732 3900  
                                    l1676 475C                                      l1836 1532  
                                    l1828 1440                                      l1748 412C  
                                    l1772 4936                                      l2580 291E  
                                    l2661 594E                                      l2709 624E  
                                    l1925 488E                                      l3381 1902  
                                    l3461 5CFA                                      l2397 0152  
                                    l2741 3920                                      l2469 128E  
                                    l1837 153E                                      l1829 145C  
                                    l1749 4132                                      l1757 5A3A  
                                    l1765 5D32                                      l2581 285A  
                                    l2646 4CA2                                      l2910 3718  
                                    l1926 4868                                      l3454 61A6  
                                    l2398 01E2                                      l1790 3FC0  
                                    l1782 50DA                                      l1838 15BA  
                                    l1686 311A                                      l1758 5A38  
                                    l1766 5D30                                      l2478 630A  
                                    l2590 28EC                                      l2647 4C7E  
                                    l2655 5954                                      l2735 38A4  
                                    l1951 26EA                                      l1695 3616  
                                    l1791 3FC6                                      l2591 2906  
                                    l2583 28D8                                      l2648 4C84  
                                    l2680 45B4                                      l2656 592E  
                                    l3392 6362                                      l3384 1914  
                                    l3368 185C                                      l1960 2754  
                                    l1792 4042                                      l1784 5128  
                                    l2576 293E                                      l2584 287C  
                                    l2913 3768                                      l3449 6010  
                                    l3385 1980                                      l3465 634A  
                                    l2737 38EC                                      l1953 271E  
                                    l1697 3620                                      l1793 4008  
                                    l2577 2840                                      l2658 5968  
                                    l2930 4CE2                                      l2914 372A  
                                    l3378 18D8                                      l2738 38CE  
                                    l2498 6158                                      l2755 537A  
                                    l2659 593C                                      l2907 36D6  
                                    l3387 19A6                                      l3379 18E8  
                                    l1963 27CE                                      l1699 3684  
                                    l1795 4028                                      l2499 614A  
                                    l2756 538E                                      l2940 4EC8  
                                    l2916 379C                                      l2908 36D0  
                                    l3388 19E0                                      l1964 2796  
                                    l1956 2730                                      l2677 4578  
                                    l2933 4D0A                                      l1957 2734  
                                    l1949 26DC                                      l2934 4D14  
                                    l2926 4CBC                                      l2942 4EDE  
                                    l1990 60BA                                      l2679 45A4  
                                    l2935 4D22                                      l2927 4CCC  
                                    l2943 4ED6                                      l1967 27E8  
                                    l1959 278C                __size_of_Mdm_IsSmsReceived 0024  
                                    l1968 27EC                                      l1992 60C0  
                              _Led1OutSts 01FA                                      l2929 4CEA  
                                    l2946 4EF6                                      l2947 4F00  
                                    l2939 4EBC                                      l1899 424C  
                                    l2948 4F0E                                      l1997 5206  
                                    l1989 60CA                                      STR_1 FFE5  
                                    STR_2 FF74                                      STR_3 FFDE  
                                    STR_4 FFC1                                      STR_5 FFCD  
                                    STR_6 FFEF                                      STR_7 FFEA  
                                    STR_8 FE88                                      STR_9 FEBC  
                              _Led2OutSts 01F8                                _Led3OutSts 01F6  
                   ??_USBCtrlTrfTxService 007D                                      u8405 58BC  
                                    u8406 58BE                                      u8415 58C8  
                                    _UCFG 000F39                                      u8416 58CA  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    u8385 58A2                                      u8386 58A4  
                                    u8395 58AE                                      _UEIE 000F37  
                                    u8396 58B0                  __size_of_Uart_Uart1RxIsr 0010  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u9835 5FD2                                      u9836 5FD4  
                                    u9845 5FDE                                      u9846 5FE0  
                                    u9855 5FEA                                      u9856 5FEC  
                              _AlarmEvent 01F5                            ?_StopCondition 0001  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 031C  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 64E2  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0032               Led_SetLedBlinkTime@OnTimeMs 007D  
  USBStdFeatureReqHandler@current_ep_data 0094                                      _pDst 02D4  
     __end_of_updateMemorizedNumbersCount 6336               _updateMemorizedNumbersCount 631C  
                    _NewStringMdmTerminal 003A                                      _atoi 36CE  
                                    _main 64A4                           ??_Mdm_IsRinging 0081  
                                    _itoa 5A82                          ?_SetUartBaudRate 0096  
                 __end_of_GetCallerNumber 5DAE                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0314  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 431C                                      _xtoi 342C  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 64EA  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 494E  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 5BCE                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
                     __end_of_Eeprom_Read 556C   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 637E  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
              __end_of_USBCheckStdRequest 35F6                           _Rtcm_SystemDate 0300  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 6438  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 0086                            _GetElapsedTime 3D3A  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091                       StringCopy@SourceStr 007D  
             __end_of_OsAlrm_ClearOsAlarm 5470                  Eeprom_Write@SlaveAddress 008C  
                                   EECON2 000FA7                InitGprsNetwork@UartMessage 0100  
                ??_USBStdGetStatusHandler 007D                waitSetupCall@isCallArrived 0093  
                     __size_of_I2cDummyTx 001C                          ??_Mdm_GetSmsData 0089  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 5C8A                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDAA                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DD  
                                   l12140 5EB6                                     l11432 6280  
                                   l13026 58F0                                     l12178 3620  
                                   l13342 45B4                                     l12374 338C  
                                   l13192 3764                                     l15008 1CB8  
                                   l14342 3258                                     l13706 5DF6  
                                   l13580 4968                                     l14490 1E54  
                                   l13754 21C2                                     l14468 1D9A  
                                   l13782 222A                                     l15470 4E3C  
                                   l14690 0FB0                                     l15482 2E30  
                                   l15812 5220                                     l15814 5250  
                                   l14856 09A4                                     ?_atoi 0083  
                                   ?_main 0001                                     ?_itoa 0093  
                         __end_of___awdiv 4D2C                                     STR_10 FF4A  
                                   STR_11 FF58                                     STR_12 FF9C  
                                   STR_20 FF3C                                     STR_13 FF66  
                                   STR_21 FE5E                                     STR_30 FEF9  
                                   STR_14 FEA7                                     STR_31 FFA9  
                                   STR_15 FEE5                                     STR_23 FED1  
                                   STR_24 FFF4                                     STR_32 FFD7  
                                   STR_16 FF1D                                     STR_25 FFF4  
                                   STR_17 FF82                                     STR_26 FE85  
                                   STR_18 FF8F                                     STR_27 FF0C  
                                   STR_28 FFB5                           __end_of___awmod 4F18  
                                   STR_29 FF2E         __size_of_USBCtrlEPServiceComplete 0100  
                         __end_of___lldiv 4DB0                                     ?_utoa 008A  
                                   u11210 5AE2                                     u11130 1554  
                                   u11250 5B3A                                     u10610 3672  
                                   u11180 55E4                                     u12140 1864  
                         ___awdiv@divisor 007F                                     u11510 4D60  
                                   u11270 5CB8                                     u10630 36B4  
                                   u10617 3668                                     u12410 4EE2  
                                   u12170 189E                    __end_of_USBDeviceTasks 1D32  
                                   u10637 36AA                                     u12350 4CEE  
                                   u11550 600C                                     u12190 18AE  
                                   u10910 2DF2                                     ?_xtoi 0083  
                                   u10680 5812                                     u13400 49FA  
                                   u11640 5CDE                                     u13320 5306  
                                   u10840 33C0                                     u11570 5EF2  
                                   u11740 2B10                                     u12700 56B4  
                                   u11660 5CEA                                     u13260 04BE  
                                   u12445 5866                                     u12605 0B9E  
                                   u10917 2DE8                                     u13327 52FC  
                                   u13520 4430                                     u13600 24C8  
                                   u10880 2D70                                     u12625 0C78  
                                   u13530 444A                                     u11930 483E  
                                   u10890 2DA0                                     u12730 21E6  
                                   u15018 2EFC                                     u12635 0C98  
                                   u15019 2F2A                                     u13620 24DC  
                                   u13380 3938                                     u11685 63FC  
                                   u12645 0D22                                     u13701 1D70  
                                   u12565 63BC                                     u11686 63FE  
                                   u11790 51E2                                     u12566 63BE  
                                   u10887 2D66                                     u14600 27D6  
                                   u12760 228E                                     u12585 0AF4  
                                   u10897 2D96                 ?_USBCtrlEPServiceComplete 0001  
                                   u12595 0B14                                     u13555 63A6  
                                   u13556 63AA                                     u13485 4F7C  
                                   u11797 51D8                                     u13495 6410  
                                   u14480 1D2E                                     u13496 6412  
                                   u13681 1D4C                                     u14641 518C  
                                   u13770 1EA8                                     u14570 277C  
                                   u13691 1D5E                                     u14590 27BE  
                                   u14577 2772                                     u14597 27B4  
                                   u14881 4B5C                                     u14891 4B74  
                                   u14978 4E72                           __end_of___lwdiv 5614  
                                   u14979 4EA0                           __end_of___lwmod 5B0A  
               TurnOnModem@TurnOnMdmState 0029                        ??_UpdateOsCounters 0019  
                                   i1l742 22EE                                     i1l747 242A  
                                   i2l680 3C62                                     i2l681 3BB2  
                                   i2l690 3BFC                                     i2l682 3BC0  
                                   i2l686 3BE2                                     i2l688 3C54  
                                   i2l689 3C1C                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B4  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E9  
                                   _USTAT 000F64                   __end_of_LedStateMachine 4516  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C2  
         __end_of_USBCtrlEPAllowDataStage 46F6                             _StringCompare 5666  
                                   _sd000 FE5A                                     _sd001 FE13  
                                   _sd002 FDED            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3A12  
                             _ApnLenLocal 01F1                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_initFsm 596E  
                         __end_of_isalpha 5F0C                           __end_of_isdigit 61F2  
                                   atoi@a 0088                                     atoi@s 0083  
                  Eeprom_Write@DataLength 0089                               _ClearBuffer 5DAE  
                         __end_of_isspace 6018               I2cSlv_QueryI2cData@RxBuffer 00A5  
              I2c_WriteData@I2cWriteState 0038                 Rtcc_GetRtccValue@RegValue 0080  
                 __size_of_Rtcc_RtcConfig 00A0                           __end_of_isupper 61AE  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi1___wmul 60B8                 __end_of_Rtcc_GetRtccValue 49E2  
             I2cSlv_QueryI2cData@TxBuffer 00A2                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 4FF6                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 5470  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                                   wtemp6 0043                           __end_of_sprintf 3946  
                         __end_of_tolower 634E                       __end_of_Mcu_Int0Isr 6512  
                     __end_of_Mcu_Int1Isr 650E                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 6366  
                  __end_of_GetElapsedTime 3E02                     __end_of_UartSetConfig 5368  
                    __end_of_Eeprom_Write 5666                    __size_of_initGprsModem 0090  
             Rtcc_SetRtccValue@RtccPtrVal 0088                  Eeprom_Read@MemoryAddress 00AC  
                   __end_of_Term_MainTask 631C                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 2CF8                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 5FC4  
                          _InitSchedTimer 5F3C                           __initialization 2950  
                        __end_of_MdmCntSm 446E                      __end_of_I2c_ReadData 2180  
                 Rtcc_RtcConfig@RtcConfig 007E                      __end_of_I2cSendMsgSm 3F8E  
                 LedStateMachine@LedPulse 0095                                _MyApp_Task 280C  
                            __end_of_atoi 37A6                              __end_of_main 64B0  
                     StringCompare@Result 0085                              __end_of_itoa 5AC6  
                  ??_LedPulseStateMachine 008D                     _control_signal_bitmap 01E1  
                            __end_of_utoa 43C6                              __end_of_xtoi 3512  
                __end_of_Rtcm_SetRtccDate 5518                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 007D                          __end_of_ReadByte 64CE  
            __size_of_I2cSlv_QueryI2cData 00D2                      Term_MainSm@TermDelay 03D3  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FE48  
               __size_of_USBCtrlEPService 0094                                    ??_atoi 0085  
                                  ??_main 00B0              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 4824  
                           ?_initPreamble 007D                                _ReceiveEvt 5F6A  
        Uart_WriteStringLen@StringToWrite 0080                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                      _Mdm_RequestSmsData 6458                            ?_StringCompare 007D  
                        __end_of_Terminal 05EC                      initFsm@isInitialized 0103  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 4DB0                              _cdc_mem_type 01E2  
                      ??_Mcu_ConfigExtInt 007D                         CheckModem@Timeout 03F4  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00BC                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 3C72                _Uart_MdmGsmGprsReadService 3BA8  
              __end_of_UsbDevice_MainTask 60DC                           getsUSBUSART@len 0086  
                    __end_of_getSetupCall 6254                       ?_Mdm_RequestSmsData 0001  
                   __end_of_UartWriteByte 6274                          ??_LowPriorityIsr 0068  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
                             _Eeprom_Read 5518        Irq_InitIntController@IntPriorityEn 007F  
                   __size_of_CDCTxService 0146                                    i1l1409 5D72  
                             _GenerateEvt 6366                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
               Uart_Uart1RxIsr@UartRxData 002C                             CDCTxService@i 0084  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                    _RPINR1 000EE7  
                              _TaskNumber FC2F                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                        ?_GetCallerNumber 0083                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                               _ConnTimeout 02F5  
                    Mdm_IsSmsReceived@Ret 0081                  __end_of_Rtcc_AlarmConfig 5062  
                         ??_Mcu_SetWdgSts 007D                    __end_of_InitSchedTimer 5F6A  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0081  
                          _EnableReceiver 6502                                _UartConfig 0326  
                    __end_of_Mdm_MainTask 5758                         ??_Uart_Uart1RxIsr 0007  
                       _shortPacketStatus 00CD                             ??_Term_MainSm 00A7  
                                  _Relay1 01DC                                    _Relay2 01DB  
                                  _Relay3 01DA                                    _Relay4 01D9  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                __end_of_MdmHttp_MainTask 59B4                                    _SmsLen 00D4  
                         USBDeviceTasks@i 0098               USBStdFeatureReqHandler@pUEP 0092  
                USBTransferOnePacket@data 007E                USBCtrlTrfInHandler@lastDTS 007E  
                           ??_RtccIrqInit 007D                  ??_OsAlrm_ProcessOsAlarms 0060  
                         ??_USBDeviceInit 0085                       __end_of_SetBaudRate 5892  
                                  ___lmul 5368                      _I2cSlv_ReceiveI2cMsg 5B4E  
                      TurnOnModem@Counter 02DA                              ?_putUSBUSART 0083  
                                  ___wmul 606A                                 ??___awdiv 0081  
          GetElapsedTime@CurrentTimestamp 0091                            __CFG_STVREN$ON 000000  
                        _Mdm_SetSmsFormat 5758                                 ??___awmod 0081  
                      __size_of_SendSmsSm 01B8                         ?_Rtcm_GetRtccDate 0081  
                     _Led_SetLedBlinkTime 556C                                 ??___lldiv 0091  
                    __end_of_getsUSBUSART 48BA                      ??_Mdm_RequestSmsData 0080  
                               ??___lwdiv 0087                    Tmr_TmrBPrSet@IntFreqHz 0096  
                               ??___lwmod 0081                         _USBEnableEndpoint 5A3E  
         __size_of_USBStdGetStatusHandler 00B2                             ??_Rtcc_RtcIsr 0001  
                            ReadByte@Byte 007D                                    _memcpy 58DE  
                  __size_of_HttpGetMethod 04D0                                    _memset 5EAC  
                                  clear_0 29F0                                    clear_1 2A02  
                                  clear_2 2A0E                                    clear_3 2A1A  
                                  clear_4 2A26                                    clear_5 2A32  
                                  clear_6 2A3E                                    clear_7 2A4A  
                                  clear_8 2A56                                    clear_9 2A62  
                        ___awdiv@quotient 0083                        ??_Rtcm_GetRtccDate 0089  
                         ___awmod@divisor 007F                        _ExtInt0IsrCallback 02E4  
                       ?_OsTmr_StartTimer 0081                                _PostMethod 01EE  
                         ___awmod@counter 0081                       UartWriteByte@Module 007E  
                     GetSmsSm@GetSmsState 01F4                        ?_USBEnableEndpoint 0085  
                          ??_initPreamble 007F                                    _strcat 52B4  
                                  _strcpy 5E4A                                    _strlen 5C0E  
                                  _strtol 181C                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 5D04  
                HttpGetMethod@UartMessage 0100                                 ??_initFsm 00B0  
                           _initGprsModem 49E2                        ??_OsTmr_StartTimer 0087  
                                  itoa@cp 0099                                 ??_isalpha 0080  
                               ??_isdigit 007D                            ??_SetAckStatus 007D  
                     ModemEvtParser@F9110 03C0                       ModemEvtParser@F9112 04F2  
                     ModemEvtParser@F9106 03CA                       ModemEvtParser@F9108 03C5  
                            _CDCTxService 26C6                       MdmCntSm@MdmCntState 002E  
              Mdm_SetSmsFormat@TextFormat 0098                          ?_LedStateMachine 008F  
                            __mediumconst FC22                                 ??_isspace 007D  
                  __size_of_CheckTxStatus 000A                              _callerNumber 04CC  
                                  tblptrh 000FF7                                 ??_isupper 007D  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                    __end_of_Mcu_ClearWdg 64FA                       ??_USBEnableEndpoint 0086  
                             _MdmStsReady 0039                   __end_of_I2cSlv_MainTask 54C4  
                         _InitGprsNetwork 0DC8                             ??_Tmr_Tmr2Isr 0023  
                            ??_I2cDummyTx 0021                 OsTmr_GetTimerStatus@Timer 0095  
                             _Mcu_Int0Isr 650E                               _Mcu_Int1Isr 650A  
                    ?_Led_SetLedBlinkTime 007D                                 ??_sprintf 0083  
                               ??_tolower 007D                    __size_of_ScheduleTasks 0126  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 00A0                      _controlTransferState 00CC  
                   __end_ofi1_GenerateEvt 63D8                   Eeprom_Read@SlaveAddress 00AD  
                   __end_of_Rtcm_MainTask 4B90                __size_of_Rtcc_GetRtccValue 0094  
                      _ExtInt1IsrCallback 02E2                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 2A80  
               __size_of_saveMasterNumber 002A                        Eeprom_Read@ReadSts 00AE  
                  Tmr_TmrBPrSet@Prescaler 0098                              __pbssBIGRAMl 0AC8  
                  __end_of_EnableReceiver 6506                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 0182               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                             _ReadAddress 01FC                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 5844  
         I2cSlv_QueryI2cData@TimeoutTimer 033B                      Terminal@FormatOption 02ED  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 5196  
                          __pcstackBANK10 0A00                     I2cDummyTx@DummyBuffer 01FD  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
                     initFsm@currentState 01D3  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02DE                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 5A82  
                             _InitNetwork 00DB                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE5E  
                           __end_of_sd001 FE31                             __end_of_sd002 FE13  
                            __pidataBANK1 6512                              __pidataBANK2 6496  
                            __pidataBANK3 5BCE                              __pidataBANK4 637E  
                            __pidataBANK5 56B8                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 5B0A  
                     __size_of_CheckModem 0152                __end_of_Uart_ClearRxBuffer 5E18  
           __size_of_USBConfigureEndpoint 0098                  __size_of_InitializeTasks 0074  
                      __end_of_I2cDummyTx 62E8               __end_of_USBCtrlTrfInHandler 4050  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 007D  
                    StringCompare@String2 007F                        ??_UartSetConfigLow 007D  
                     __end_of_Term_MainSm 135A                 initGprsModem@currentState 01D5  
                   LedStateMachine@LedOut 0091                     LedStateMachine@LedSts 008F  
                      LedStateMachine@Led 0099                                 ?i1___wmul 0019  
                          ?_initGprsModem 0001                       __end_of_RtccIrqInit 63C2  
                   __size_of_Led_MainTask 00CC                           ??_StringCompare 0083  
           I2cSlv_QueryI2cData@I2cOpState 01E8                               ?_ReceiveEvt 007D  
                             _NewSmsEvent 0040                                _SystemInit 5E7C  
                              _cdc_notice 0459                     __end_of_Tmr_TmrBPrSet 325E  
                   __end_of_waitSetupCall 57F6                       __end_of_Rtcc_RtcIsr 650A  
                              _cdc_rx_len 00C6                         __end_of_MsgFormat FD21  
                              _cdc_tx_len 00C4                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                     _memorizedNumbersCount 01D6  
                               ?_GetSmsSm 0001               __end_ofi1_I2cSlv_SendI2cMsg 5D78  
                ??_USBCtrlTrfSetupHandler 0097                   _USBTicksSinceSuspendEnd 01E3  
                          ClearBuffer@Len 007F                           _secondsAppTimer 4516  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 5FC4  
                  _USBStdGetStatusHandler 410E                         __end_of_SendSmsSm 1BAA  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01F0  
                          _Rtcc_RtcConfig 45B8                     __size_of_Eeprom_Write 0052  
                              __pbssBANK0 00B0                                __pbssBANK1 01C9  
                              __pbssBANK2 02C8                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                           _HttpGetMethod 05EC                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 0572                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 63EE                  __end_of_Uart_WriteString 5CC8  
            getSetupCall@isCalledReceived 0083                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 6148  
                             _SetBaudRate 5844                 initGprsModem@modemCounter 03BE  
             __size_of_USBWakeFromSuspend 003A                SendSmsSm@SendSms_NextState 01F2  
                             _pBDTEntryIn 00B6          UartTxBufferStatus@TxBufferStatus 007F  
        __end_of_USBCtrlEPServiceComplete 3170                                 ?_TmrBInit 007D  
                           _CheckTxStatus 64CE                             ??_TurnOnModem 0080  
                 __size_of_Tmr_TmrBConfig 00C8               __size_of_USBCheckCDCRequest 00B0  
                Uart_WriteStringLen@Index 0083                         ?_GetOsTickCounter 007D  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 007D  
                     MyApp_Task@cmpString 0104                                 ?_Terminal 0001  
                    Eeprom_Write@WriteSts 008A                                   ?___lmul 007D  
                            _Led_MainTask 3946                            _Rtcc_UnlockRtc 6438  
                            _I2cBusStatus 01EA                                   ?___wmul 007D  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 2E26  
               Uart_InitUartModule@Module 00A1                     __end_of_I2c_WriteData 2022  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE48                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 48BA                     __end_of_UpdateSchFlag 62CC  
                            _EepromBuffer 04BD                                _ep_data_in 02D1  
                         _I2cWriteDataEvt 00D9                  i1GenerateEvt@EventStatus 001B  
                           ?_Rtcc_LockRtc 0001                                   ?_strcat 007D  
                              ??i1___wmul 001D                   __end_of_InitGprsNetwork 10B6  
                                 ?_strcpy 007D                                   ?_strlen 007D  
                                 ?_strtol 0089             __size_of_LedBlinkStateMachine 0148  
             __end_of_USBCtrlTrfRxService 3070                         __end_of_WriteByte 64C4  
                      _USBCheckStdRequest 3512                         _configDescriptor1 FDAA  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 04A9  
                            _Eeprom_Write 5614                     __size_of_getSetupCall 0020  
             __end_of_USBCtrlTrfTxService 36CE                         triggerRelay@F9009 03D1  
                     _USBStdSetCfgHandler 3346                   __size_of_ConfigureModem 00CA  
                  I2cSlv_QueryI2cData@Ret 01E7                 Eeprom_Write@MemoryAddress 008B  
                         __CFG_WDTPS$2048 000000                              _I2cSetConfig 5F98  
                                 _SPBRGH1 000F7F                                   _SPBRGH2 000F7D  
                  __end_of_Rtcc_RtcConfig 4658                                   _SSP2ADD 000F74  
                              ??_GetSmsSm 0087                                   _SSP2BUF 000F75  
                            _I2c_ReadData 2022                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm 3ECA  
                        ?_I2cSlv_MainTask 0001                        GsmGprsTerminal@SMS 01DF  
          __end_of_Pm_DsReleasePinControl 64F0                       ?_USBCheckStdRequest 0001  
                   Mdm_SetSmsFormat@Index 0083              __size_of_USBStdGetDscHandler 012E  
                              ??_MdmCntSm 0081                       __size_of_MyApp_Task 0144  
                                 _UIEbits 000F36                            ?_HttpGetMethod 009B  
                            ?_ClearBuffer 007D                      _MdmOnOffPulseRequest 00E2  
                                 _UIRbits 000F62                     CheckModem@CheckMdmSts 002A  
               __size_of_UpdateOsCounters 0010                                   _Led1Sts 01FB  
                     _I2cSlv_QueryI2cData 37A6                                   _Led2Sts 01F9  
                                 _Led3Sts 01F7                __end_of_Sch_SchmIntService 6496  
                   __size_of_Mdm_MainTask 0050             ModemEvtParser@CallReadyString 0088  
                           _cdc_trf_state 00C5                                ??_ReadByte 007D  
                     _Uart_InitUartModule 0ABC                     __end_of_Mdm_DrvMainFn 64F6  
                    __end_of_initPreamble 606A                    initEeprom@currentState 01D4  
                        _ComChecCompleted 002B                            ?_CheckTxStatus 0001  
             __size_of_Mcu_StartSystemPll 001E                                   _pCDCDst 02C8  
                   __end_of_Mdm_IsRinging 6100                     InitGprsNetwork@ApnLen 009D  
                                 _pCDCSrc 02CB                     __size_of_getsUSBUSART 0096  
                                 _RelayB1 01DE                                   _RelayB2 01DD  
                             ?_StringCopy 007D                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 007F  
                  ??_I2cSlv_ReceiveI2cMsg 0084           ??_USBIncrement1msInternalTimers 007D  
                          _I2cReadDataEvt 00D8                                 ?_isxdigit 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 4F8A  
                  __end_of_Rtcc_UnlockRtc 6448                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 0085                      __end_of_SetAckStatus 6402  
                              _initEeprom 4C1C                               _Term_MainSm 10B6  
 Uart_WriteConstString@ConstStringToWrite 0080                                   _Welcome FD21  
              __size_of_USBEnableEndpoint 0044                            ?_ScheduleTasks 0001  
                              ??_Terminal 00A2                         _Sch_MainScheduler 6292  
                  ?_Uart_WriteConstString 0080                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 63AC  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 4CA6  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 4EA6  
                                 ___lldiv 4D2C                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                                   ___lwdiv 55C0  
                       ??_USBStallHandler 007D                                   ___lwmod 5AC6  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
                      ?_Sch_MainScheduler 0001                              _getSetupCall 6234  
                    ?_I2cSlv_QueryI2cData 00A2                           ??_initGprsModem 0099  
                             _Rtcc_RtcIsr 6506                      __size_of_putUSBUSART 0022  
                                 __pcinit 2950                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CF  
                     __end_of_TurnOnModem 59FA                           __size_of_memset 0030  
                 initEeprom@isInitialized 0102                                 _I2cConfig 0351  
                          ??_Rtcc_LockRtc 007D                 __end_of_configDescriptor1 FDED  
                                 __ramtop 0F00                Mdm_GetSmsData@GetSmsStatus 0089  
                             Terminal@Len 03B0                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 64A4                                   __ptext1 5E7C  
                                 __ptext2 64B0                                   __ptext3 64EA  
                                 __ptext4 6274                                   __ptext5 62E8  
                                 __ptext6 5FC4                                   __ptext7 5F3C  
                                 __ptext8 3C72                                   __ptext9 3170  
                                 _inPipes 00B0                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 45B8  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                                 _initFsm 5926                              ??_USBSuspend 0091  
                               _T2CONbits 000FCA                                   _isalpha 5EDC  
                                 _isdigit 61D0                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00B0                               ?_SystemInit 0001  
                                 clear_10 2A6E                                   clear_11 2A7A  
                        ___awmod@dividend 007D                         ??_InitializeTasks 04FC  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 02EA  
     __end_of_Tmr_RegisterTmr2IsrCallback 64BA               _Tmr_RegisterTmr2IsrCallback 64B0  
                                 _isspace 5FEE                              _Mdm_MainTask 5708  
                                 _isupper 618C               __size_of_InitModemInterface 0008  
                    HttpGetMethod@GetData 009B                    ?_Irq_InitIntController 007D  
                                 _smsText 0495                    Term_MainSm@FwkBuildStr 013A  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 22D6  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC2F  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 6124  
                                 _sprintf 3878                                   _tolower 6336  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 6478  
                        _HttpGetDataLocal 03A7                  __end_of_Mdm_SetSmsFormat 57A8  
                  Term_MainSm@FwkMajorStr 0132                            __pintcode_body 4270  
                                 _toupper 634E           secondsAppTimer@destinationTicks 0091  
                       ClearBuffer@Buffer 007D                      end_of_initialization 2A80  
                            _getsUSBUSART 4824                              ?_Eeprom_Read 00A9  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00DC  
             ?_Uart_MdmGsmGprsReadService 0004                    MyApp_Task@cmdAddNumber 0107  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F4             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC29       Irq_InitIntController@PerInt_LowPInt 007E  
                                 memcpy@d 0084                                   memcpy@n 0081  
                                 memcpy@s 0086                          _saveMasterNumber 6018  
                     _pBDTEntryEP0OutNext 00BE                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC22  
                          _ModemEvtParser 1D32                                   int_func 4270  
                               i1u1505_28 6134                           _USB1msTickCount 0318  
         _dummy_encapsulated_cmd_response 0376                                 i1u1483_28 240C  
                               i1u1483_29 2420                                 i1u1479_20 22EC  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
                       ?_Rtcc_AlarmConfig 007D                     ??_USBStdSetCfgHandler 0091  
                         ___lldiv@divisor 008D                 __end_of_Sch_MainScheduler 62B0  
               __size_of_Led_SetLedStatus 0030                                ??_isxdigit 0080  
                              ?_CDCInitEP 0001                           ___lldiv@counter 0095  
                       _Rtcc_SetRtccValue 15EE                         _Rtcc_SetRtcStatus 6396  
                     _ActivateRiDetection 0041                           ?_Rtcc_UnlockRtc 0001  
                      ??_Rtcc_AlarmConfig 007F                        __end_of_USBSuspend 5E4A  
                           StringCopy@Len 0081                         ?_MdmHttp_MainTask 0001  
                I2cSlv_QueryI2cData@RxLen 00A7                   _USBCtrlEPAllowDataStage 4658  
                      _UsbDevice_MainTask 60B8                  I2cSlv_QueryI2cData@TxLen 00A4  
                            _Mcu_ClearWdg 64F6                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                   ??_I2cSlv_QueryI2cData 00A9                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 3070  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01EB  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 257E  
                         _RtccIsrCallback 02E6          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F3             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                _USBStatusStageEnabledFlag1 00C8  
              _USBStatusStageEnabledFlag2 00C7                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 616A                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0308  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                       _Mdm_HangPhoneCall 6414                            ??_Tmr_StartTmr 007D  
            __end_of_I2cSlv_I2cReadMsgSts 6214                  i1I2cSlv_SendI2cMsg@TxSts 0020  
                       StringCopy@DestStr 007F                          __CFG_CPUDIV$OSC1 000000  
                      ?_Mdm_HangPhoneCall 0001                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02E8                          _HttpGetMethodSts 01EF  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                      _BothEP0OutUOWNsSet 01E4                           ??_HttpGetMethod 009D  
                 __size_of_Mdm_GetSmsData 0068                              strtol@endptr 008B  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
               I2c_WriteData@I2cNextState 0037                 USBConfigureEndpoint@EPNum 0082  
              ?_USBCtrlEPAllowStatusStage 0001                    __end_of_ModemEvtParser 1EB4  
                        ??_InitSchedTimer 00A4       USER_USB_CALLBACK_EVENT_HANDLER@size 008D  
                               _USTATcopy 00D6                     __end_of_StopCondition 64FE  
                __size_of_HighPriorityIsr 4314                       ??_Mdm_HangPhoneCall 0083  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 036D  
                               _Led2Blink 0364                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 035B              __end_of_USBTransferOnePacket 410E  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 0391  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 181C                 __end_of_Rtcc_SetRtcStatus 63AC  
                               _Led2Pulse 038B                                 _Led3Pulse 0385  
                       _I2cSlv_SendI2cMsg 5C4C           SetBaudRate@DesiredI2cBusClockHz 0096  
                     Eeprom_Read@QuerySts 00AF                           ??_ScheduleTasks 04FC  
                          _Tmr_TmrBConfig 3C72                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 6414                         _OsAlrm_SetOsAlarm 3E02  
                    Terminal@TermRxBuffer 0540                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 5892  
                             ?_initEeprom 0001                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 59B4                                 _ClipEvent 00DF  
                            ??_MyApp_Task 00B0                      Terminal@TermTxBuffer 0100  
                               _GetMethod 00DA                    _USBCtrlTrfSetupHandler 4B90  
                      ?_OsAlrm_SetOsAlarm 0083                  __size_of_GetCallerNumber 0036  
                   __end_of_USBDeviceInit 22D6     __end_of_USBIncrement1msInternalTimers 618C  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 616A  
             __size_of_Mdm_RequestSmsData 0010                            __end_of___lmul 53C0  
                          _CheckAckStatus 64D8                            __end_of___wmul 6092  
                     ??_I2cSlv_SendI2cMsg 0084                 __end_of_Mdm_HangPhoneCall 6426  
                  __size_of_UartWriteByte 0020                            __end_of_memcpy 5926  
                      Terminal@PackageLen 02EF         Uart_MdmGsmGprsReadService@RxState 002D  
                          __end_of_memset 5EDC                        _UartTxBufferStatus 57F6  
                     ??_OsAlrm_SetOsAlarm 008B                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01E5  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 6488  
                               _MdmStatus 00D2                            __end_of_strcat 5310  
                          __end_of_strcpy 5E7C                            __end_of_strlen 5C4C  
                          __end_of_strtol 19F2                       start_initialization 2950  
                       __size_ofi1___wmul 0026                   ?_USBStdGetStatusHandler 0001  
                          _ConfigureModem 3ADE                              ??_OsTmr_Wait 00A1  
                  Uart_WriteString@Module 0082             USBCtrlTrfRxService@byteToRead 007E  
                 __size_of_StartCondition 0004                      Rtcm_SetRtccDate@Date 0089  
                         _MdmResetRequest 003D                       ?_UartTxBufferStatus 0001  
                      _Uart_ClearRxBuffer 5DE4                 __size_of_UartSetConfigLow 0058  
                        ??_EnableReceiver 007D                               _cdc_data_rx 0500  
                             _cdc_data_tx 07B6              __end_of_USBConfigureEndpoint 478E  
                   __size_of_initPreamble 0028           __end_of_USBStdFeatureReqHandler 15EE  
                               _MsgFormat FC31                        __end_of_MyApp_Task 2950  
                        _UpdateOsCounters 6468                           ?_ModemEvtParser 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3ADE                 __end_of_I2cSlv_SendI2cMsg 5C8A  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 494E                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 6458  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3D3A                                 _SendSmsSm 19F2  
            ?_updateMemorizedNumbersCount 0001                 __end_of_OsAlrm_SetOsAlarm 3ECA  
                  __end_of_Tmr_TmrBIrqSet 58DE                                 _TaskTable 05A4  
                               _RingEvent 00E0                 ??_USBCtrlEPAllowDataStage 007E  
                      ??_Uart_WriteString 0082                               _SystemState 00D5  
                       __size_of_ReadByte 000A                                 _RtcConfig 03B8  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 009D  
                             ??_CDCInitEP 0089                            USBDeviceInit@i 0085  
                           _UartSetConfig 5310                    Led_SetLedBlinkTime@Led 0081  
                      __end_of_ReceiveEvt 5F98                    _pBDTEntryEP0OutCurrent 00C0  
                           _Term_MainTask 6302                   USBTransferOnePacket@dir 007D  
                    ??_UartTxBufferStatus 007D                   USBTransferOnePacket@len 0080  
                   Tmr_TmrBConfig@TmrNumb 00A3                   __size_of_LowPriorityIsr 00B4  
                  __end_of_CheckAckStatus 64E2                                  ??___lmul 0085  
                           _isxdigit$6571 0081                                 Terminal@i 00A4  
                                ??___wmul 0081                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 007D                       _USBStdGetDscHandler 2CF8  
              I2cSlv_SendI2cMsg@SlaveAddr 0082                        __end_of_OsTmr_Wait 4E32  
                      HttpGetMethod@Index 01C8                               __pdataBANK1 01FE  
                             __pdataBANK2 02F3                               __pdataBANK3 03C0  
                             __pdataBANK4 04E5                               __pdataBANK5 05A4  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00CA  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                                ??_strtol 008F               __end_of_Led_SetLedBlinkTime 55C0  
                  __end_of_ConfigureModem 3BA8                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00D7            __end_of_USBStdGetStatusHandler 41C0  
                            _initPreamble 6042                             WriteByte@Byte 007D  
                      __end_of_TaskNumber FC31                               __pbssCOMRAM 0023  
                 GetElapsedTime@TimeValue 008D                     __end_of_StringCompare 56B8  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
                           __pcstackBANK3 03FF              __size_of_USBCtrlTrfInHandler 00C2  
                           __pcstackBANK4 04FC                           RiSm@MdmDrvState 002F  
                            _SetAckStatus 63EE                              _isalpha$6561 0081  
                  GenerateEvt@EventStatus 007F                                 _WriteByte 64BA  
                     __size_of_initEeprom 008A                      ?_USBStdGetDscHandler 0001  
                            _isdigit$6295 007E             UpdateSchFlag@InterruptCounter 02DC  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 5B8E  
     InitGprsNetwork@GprsNetInitNextState 00D1                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 6254                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 5D3E              __end_of_LedBlinkStateMachine 26C6  
                             sprintf@flag 0083                      __size_of_Eeprom_Read 0054  
                         _USBStallHandler 59FA                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 030E                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 62E8  
              __end_of_USBCheckCDCRequest 4270              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 5418                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 6234                              ??_StringCopy 0083  
                        _Led_SetLedStatus 5F0C             ??_updateMemorizedNumbersCount 008E  
                       ??_HighPriorityIsr 0007                            ?_Term_MainTask 0001  
                        ___lwdiv@dividend 0083                              ?_Term_MainSm 0001  
                    _I2cSlv_I2cReadMsgSts 61F2                          GenerateEvt@Event 007D  
                  __size_of_Tmr_TmrBPrSet 00EE                    __size_of_waitSetupCall 004E  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC22  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 4516  
                               __ptext101 5758                                 __ptext110 6100  
                               __ptext102 4C1C                                 __ptext111 5062  
                               __ptext103 5518                                 __ptext120 5666  
                               __ptext112 556C                                 __ptext104 37A6  
                               __ptext121 2BC6                                 __ptext113 5D78  
                               __ptext105 4DB0                                 __ptext130 0DC8  
                               __ptext122 3ADE                                 __ptext114 5310  
                               __ptext106 5C4C                             Terminal@Index 00A6  
                               __ptext131 05EC                                 __ptext123 0ABC  
                               __ptext115 59B4                                 __ptext107 5B4E  
                               __ptext140 6426                                 __ptext132 5C8A  
                               __ptext124 2A8E                                 __ptext116 19F2  
                               __ptext108 61F2                                 __ptext141 5DAE  
                               __ptext133 5B0A                                 __ptext125 5368  
                               __ptext117 5B8E                                 __ptext109 6458  
                               __ptext150 5844                                 __ptext142 446E  
                               __ptext134 6254                                 __ptext126 53C0  
                               __ptext118 1D32                                 __ptext151 4D2C  
                               __ptext143 325E                                 __ptext135 57F6  
                               __ptext127 242C                                 __ptext119 5DE4  
                               __ptext160 63EE                                 __ptext152 5F98  
                               __ptext144 5F0C                                 __ptext136 5196  
                               __ptext128 43C6                                 __ptext161 64C4  
                               __ptext153 3ECA                                 __ptext145 257E  
                               __ptext137 5256                                 __ptext129 64E2  
                               __ptext170 6468                                 __ptext162 6366  
                               __ptext154 5F6A                                 __ptext146 55C0  
                               __ptext138 4A72                                 __ptext171 22D6  
                               __ptext163 6502                                 __ptext155 1EB4  
                               __ptext147 3E02                                 __ptext139 3D3A  
                               __ptext180 63D8                                 __ptext172 6092  
                               __ptext164 64CE                                 __ptext156 2022  
                               __ptext148 606A                                 __ptext181 6506  
                               __ptext173 5418                                 __ptext165 64D8  
                               __ptext157 64BA                                 __ptext149 4F18  
                               __ptext182 650A                                 __ptext174 62CC  
                               __ptext158 64FA                                 __ptext183 650E  
                               __ptext175 5D3E                                 __ptext167 6124  
                               __ptext159 64FE                                 __ptext184 0000  
                               __ptext176 63C2                                 __ptext168 6488  
                               __ptext169 62B0                                 __ptext178 6478  
                               __ptext179 3BA8                                  ?___awmod 007D  
                      _Sch_SchmIntService 6488                           _InitializeTasks 4E32  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                __size_of_Mdm_HangPhoneCall 0012  
                __end_of_saveMasterNumber 6042                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 0346                   Eeprom_Write@WriteBuffer 0087  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 0397                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 4050  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
      Uart_MdmGsmGprsReadService@UartData 0004                               _I2cTxBuffer 044F  
                                ?_initFsm 0001                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                         ??_GetCallerNumber 0085  
                                ?_isalpha 0001                              ??_SystemInit 00AB  
                                ?_isdigit 0001                               _I2cTxPacket 03A2  
          InitializeTasks@ActiveTaskIndex 03FF                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                            _Mdm_GetSmsData 5062  
                    InitGprsNetwork@Index 0132                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 02EC                           Terminal@Payload 0766  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 5130  
                              ?_WriteByte 0001                     ??_USBStdGetDscHandler 007D  
                        _Rtcm_GetRtccDate 5130                ConfigureModem@DelayCounter 02D6  
                      __end_of_StringCopy 51F8                               _ep_data_out 02CE  
                                _ALRMVALH 000F8F                                  _ALRMVALL 000F8E  
                        ___lwdiv@quotient 0088                              ?_Tmr_Tmr2Isr 0001  
                            _SendSmsEvent 00E1                           Terminal@SwTimer 04DA  
                initEeprom@memoryOpResult 0101                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
                          _setupCallTicks 03BC              __size_of_USBCtrlTrfRxService 0124  
           USBConfigureEndpoint@direction 007D                                  ?_toupper 0001  
                                _I2cReady 01D8                         ?_Mdm_SetSmsFormat 0001  
                          ?_UartWriteByte 007D                    __size_of_I2c_WriteData 016E  
              ConfigureModem@DelayValueMs 02D8                          _OsTmr_StartTimer 5256  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 007D                __size_of_I2cSlv_SendI2cMsg 003E  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 63C2                __end_of_Mcu_StartSystemPll 6292  
                            _PhoneNumbLen 00D3                        ??_Mdm_SetSmsFormat 0083  
                            _Wdg_MainTask 6148                             _Rtcm_MainTask 4B02  
                          ___wmul@product 0081                  ModemEvtParser@ClipString 0092  
                        SendSmsSm@SwTimer 03E9                     Terminal@ReceivedBytes 00A5  
                    ??_Sch_SchmIntService 0023                    __size_of_UpdateSchFlag 001C  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 007E  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 008C                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
            ConfigureModem@MdmConfigState 0028           HttpGetMethod@GetMethodNextState 00D0  
                   ?_I2cSlv_I2cReadMsgSts 0001                         _I2c_InitI2cModule 4F18  
                       _IncomingCallEvent 003F                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_LedStateMachine 0097                        __end_of_SystemInit 5EAC  
                                _RCONbits 000FD0                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 4B02  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 00A1                      _USBConfigureEndpoint 46F6  
                    _UsbMasterPhoneNumber 0440          __size_of_USBStdFeatureReqHandler 0294  
                   SetUartBaudRate@Module 0099            __end_of_OsAlrm_ProcessOsAlarms 242C  
                   ??_OsAlrm_ClearOsAlarm 0019                         ___wmul@multiplier 007D  
                   ?_USBTransferOnePacket 007D                                  i1___wmul 6092  
                   __end_of_initGprsModem 4A72                       ??_I2c_InitI2cModule 00A4  
               __size_of_Rtcc_AlarmConfig 006C      __size_of_updateMemorizedNumbersCount 001A  
              __end_of_InitModemInterface 64EA                    __end_of_Mdm_GetSmsData 50CA  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 0089  
                  __size_of_Mdm_DrvMainFn 0006                              _RemoteWakeup 01E6  
                                _ApnLocal 0324                            _StartCondition 64FE  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0081  
             HttpGetMethod@GetMethodState 01EC                             _Tmr_TmrBPrSet 3170  
                           _waitSetupCall 57A8                         _NewStringReceived 003C  
                            _isspace$6564 007E                          _UartSetConfigLow 53C0  
                                _GetSmsSm 2BC6                   __end_of_USBStallHandler 5A3E  
                    Mdm_DrvMainFn@Options 0001                            _memoryPreamble 039D  
                   __size_of_Rtcc_LockRtc 0010                                  _ConnWait 03DE  
                                _MdmCntSm 43C6                         ___lmul@multiplier 007D  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 2964  
                               copy_data1 2984                                 copy_data2 29A4  
                               copy_data3 29DC              __end_of_LedPulseStateMachine 3346  
                  I2cSlv_SendI2cMsg@TxSts 0084               ??_USBCtrlEPAllowStatusStage 007D  
             __end_of_USBStdSetCfgHandler 342C                            ?i1_GenerateEvt 0019  
                Tmr_TmrBConfig@TmrBConfig 00A0                                  _OsAlarms 0600  
                          ?_Rtcm_MainTask 0001                     OsTmr_StartTimer@Timer 0081  
            LedBlinkStateMachine@LedBlink 008A                                  _ReadByte 64C4  
                           i2_GenerateEvt 63D8                           ??_UartSetConfig 007D  
                             ??_SendSmsSm 009B                        __end_of_device_dsc FE5A  
               __end_of_I2c_InitI2cModule 4F8A                                  _MsgReady FE31  
                         ??_Term_MainTask 00A7                   __end_of_InitializeTasks 4EA6  
              initGprsModem@isInitialized 0099                   ?_USBCtrlTrfSetupHandler 0001  
             __end_of_I2cSlv_QueryI2cData 3878                                _ANCON1bits 000F49  
                                _RxBuffer 0C58                   USBStdGetStatusHandler@p 007E  
                                __Hrparam 0000                                  _TmrBInit 478E  
                    __size_of_SetBaudRate 004E                              ??_initEeprom 00B0  
                            ?_TurnOnModem 0001                                  _TxBuffer 0320  
                          _LowPriorityIsr 0018                                 memcpy@tmp 0083  
                    Tmr_TmrBPrSet@Divisor 009C                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0081               __end_of_Uart_InitUartModule 0DC8  
                                _SmsEvent 00DE                           _SetUartBaudRate 2A8E  
            i1I2cSlv_SendI2cMsg@SlaveAddr 001E                                  _Terminal 00D0  
                                _SetupPkt 000430                 I2cSlv_SendI2cMsg@TxBuffer 0080  
                   SetBaudRate@McuClockHz 009A                     ?_USBConfigureEndpoint 007D  
            OsAlrm_ClearOsAlarm@OsAlarmId 0019                             _I2c_WriteData 1EB4  
                        __size_of___awdiv 0086                          __size_of___awmod 0072  
                         MyApp_Task@F9015 FC29                           MyApp_Task@F9017 03CE  
                __end_of_UpdateOsCounters 6478                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02EE                   saveMasterNumber@address 0090  
                     OsTmr_Wait@WaitTimer 009B                          __size_of___lwdiv 0054  
                    Tmr_TmrBPrSet@TmrNumb 009B                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                           _UpdateSchFlag 62B0                       __end_of_putUSBUSART 61D0  
                             _line_coding 037E                              _Rtcc_LockRtc 6448  
            I2cSlv_QueryI2cData@SlaveAddr 00A8                      _LedBlinkStateMachine 257E  
                  __end_of_StartCondition 6502                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01F3  
               Rtcm_GetRtccDate@LocalDate 008A                           ?_Mdm_GetSmsData 0087  
                I2c_WriteData@WriteStatus 0035                              _isupper$6567 007E  
                              strcat@from 007F                   I2c_ReadData@DataCounter 0033  
                          ?_Tmr_TmrBPrSet 0096                          __size_of_initFsm 0048  
                MyApp_Task@smsPhoneNumber 04E5                            ?_waitSetupCall 0001  
                        ??_ModemEvtParser 0088                          _GetOsTickCounter 6426  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0188                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03AC                  ModemEvtParser@RingString 009C  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                                  __ptext10 5892  
                                __ptext11 6214                                  __ptext20 60B8  
                                __ptext12 478E                                  __ptext21 596E  
                                __ptext13 6292                           ??_UartWriteByte 007E  
                                __ptext30 5E18                                  __ptext22 5708  
                                __ptext14 2E26                                  __ptext31 59FA  
                                __ptext23 5470                                  __ptext15 4E32  
                                __ptext40 3346                                  __ptext32 616A  
                                __ptext24 64F0                                  __ptext16 280C  
                                __ptext41 410E                                  __ptext33 2180  
                                __ptext25 6148                                  __ptext17 6302  
                                __ptext50 2F4C                                  __ptext42 2CF8  
                                __ptext34 48BA                                  __ptext26 6402  
                                __ptext18 4B02                                  __ptext51 3A12  
                                __ptext43 135A                                  __ptext35 58DE  
                                __ptext27 64F6                                  __ptext19 3946  
                                __ptext60 00D0                                  __ptext52 3F8E  
                                __ptext44 51F8                                  __ptext36 4B90  
                                __ptext28 1BAA                                  __ptext61 342C  
                                __ptext53 35F6                                  __ptext45 41C0  
                                __ptext37 3070                                  __ptext29 5D04  
                                __ptext70 61AE                                  __ptext62 6336  
                                __ptext54 26C6                                  __ptext46 4F8A  
                                __ptext38 4658                                  __ptext71 5A82  
                                __ptext63 5CC8                                  __ptext55 10B6  
                                __ptext47 5A3E                                  __ptext39 3512  
                                __ptext80 15EE                                  __ptext72 431C  
                                __ptext64 181C                                  __ptext56 5C0E  
                                __ptext48 46F6                                  __ptext81 4EA6  
                                __ptext73 5AC6                                  __ptext65 634E  
                                __ptext57 52B4                                  __ptext49 50CA  
                                __ptext90 57A8                                  __ptext82 4CA6  
                                __ptext74 4824                                  __ptext66 5FEE  
                                __ptext58 3878                                  __ptext91 6234  
                                __ptext83 6448                                  __ptext75 4050  
                                __ptext67 5EDC                                  __ptext59 5EAC  
                                __ptext92 60DC                                  __ptext84 5130  
                                __ptext76 36CE                                  __ptext68 618C  
                                __ptext93 6414                                  __ptext85 494E  
                                __ptext77 61D0                                  __ptext69 5E4A  
                                __ptext94 631C                                  __ptext86 6396  
                                __ptext78 54C4                                  __ptext95 6042  
                                __ptext87 45B8                                  __ptext79 6438  
                                __ptext96 6018                                  __ptext88 63AC  
                                __ptext97 5614                                  __ptext89 4FF6  
                                __ptext98 5926                                  __ptext99 49E2  
                        __size_of_isupper 0022                   initEeprom@addressToRead 0100  
                              _I2cDummyTx 62CC                    Tmr_TmrBIrqSet@Priority 007D  
                      __end_of_initEeprom 4CA6                     __end_of_HttpGetMethod 0ABC  
                __size_of_InitGprsNetwork 02EE                              _SSP2CON2bits 000F71  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 007F  
                       _Mmd_RingIndicator 0030                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0019                         _Mdm_IsSmsReceived 6100  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 4C1C  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                 Mdm_GetSmsData@MessageText 0087  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 64D8  
                      ?_Mdm_IsSmsReceived 0001                             _Mdm_DrvMainFn 64F0  
                      ??_USBCtrlEPService 0097                                  _isxdigit 5CC8  
                           _Mdm_IsRinging 60DC                       _USBCtrlTrfInHandler 3F8E  
                I2c_ReadData@I2cReadState 0034               saveMasterNumber@phoneNumber 008E  
              __end_of_Mdm_RequestSmsData 6468                     __end_of_ScheduleTasks 2F4C  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 50CA  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 0085                 _USBCtrlEPAllowStatusStage 3A12  
                     ??_Mdm_IsSmsReceived 0081                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 03FF                                strtol@sign 0093  
                         Term_MainSm@Data 0463                      __size_of_RtccIrqInit 0016  
               __size_of_Uart_WriteString 003E                    ??_USBTransferOnePacket 0081  
                          ?_UpdateSchFlag 0001                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 008A                      __size_of_Rtcc_RtcIsr 0004  
                     i1_I2cSlv_SendI2cMsg 5D3E                  __end_of_Mcu_ConfigExtInt 6302  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00C9  
                CDCTxService@byte_to_send 0085                             ?_Eeprom_Write 0087  
           I2c_WriteData@TentativeCounter 0036                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 6214                  __end_of_Led_SetLedStatus 5F3C  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                   Eeprom_Read@DataLength 00AB                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 54C4  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 6124  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    _OsTmr_GetTimerStatus 4A72                                 sprintf@ap 0084  
                               sprintf@cp 0087                                 sprintf@sp 007D  
                       TmrBInit@Prescaler 007D                      __size_of_Tmr_Tmr2Isr 0024  
                  __size_of_USBDeviceInit 0156   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5256  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 008F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0089           _USER_USB_CALLBACK_EVENT_HANDLER 51F8  
                 Rtcc_SetRtcStatus@Status 007D                          ___lwmod@dividend 007D  
                 __end_of_SetUartBaudRate 2BC6                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                         ?_LowPriorityIsr 0001                          ?_InitializeTasks 0001  
                                isupper@c 007F                            ?_Mdm_IsRinging 0001  
                 __end_ofMyApp_Task@F9015 FC2D                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084                    MyApp_Task@currentState 01D7  
          __size_of_Uart_WriteConstString 0044                   ModemEvtParser@SmsString 0097  
                          ??_Led_MainTask 009A             __end_of_Uart_WriteConstString 5B4E  
                           OsTmr_Wait@Ret 00A1                         OsTmr_Wait@DelayMs 009D  
                 __size_of_InitSchedTimer 002E                    ??_USBConfigureEndpoint 007E  
                   ?_USBCtrlTrfOutHandler 0001               __size_of_UartTxBufferStatus 004E  
                         _GetCallerNumber 5D78                  __end_of_Rtcm_GetRtccDate 5196  
                             _putUSBUSART 61AE                 Eeprom_Write@CommandLength 008D  
                     _USBCtrlTrfRxService 2F4C                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 5D04  
                           ?_getSetupCall 0001                   _USBStdFeatureReqHandler 135A  
                __end_of_OsTmr_StartTimer 52B4                      _LedPulseStateMachine 325E  
                      _USBCheckCDCRequest 41C0                       _USBCtrlTrfTxService 35F6  
                     RtccIrqInit@Priority 007D                                  utoa@base 008E  
                              _RTCCFGbits 000F3F               __size_of_Uart_ClearRxBuffer 0034  
                           _isMemoryEmpty 01FE                         ?_saveMasterNumber 008E  
                          ??_Eeprom_Write 008A                          _Rtcc_AlarmConfig 4FF6  
                         ??_Tmr_TmrBPrSet 009A                           ??_waitSetupCall 0093  
                                sprintf@c 0086                                  sprintf@f 007F  
                                tolower@c 007D                                  strcat@cp 0081  
                                strcat@to 007D                       ?_USBWakeFromSuspend 0001  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0091  
              InitGprsNetwork@GprsInitSts 01FF                           ___lwmod@divisor 007F  
             GsmGprsTerminal@FirstRecFlag 01E0                     ??_USBCtrlTrfInHandler 007E  
                                strcpy@cp 0081                                  strlen@cp 0081  
                                strcpy@to 007D                 UsbDevice_MainTask@Options 0001  
                      ??_saveMasterNumber 0090                     _USBAlternateInterface 02F1  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 596E  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 5FEE                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00CB                                _WDTCONbits 000FC0  
                  MyApp_Task@memoryResult 010B                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                             ??_Eeprom_Read 00AC  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 446E  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                             _StopCondition 64FA  
                   ??i1_I2cSlv_SendI2cMsg 0020                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 00CA                          Mdm_IsRinging@Ret 0081  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 5DE4  
                    __end_of_CDCTxService 280C                      ??_USBCheckCDCRequest 007D  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FC2D  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 0027                   _UsbMasterPhoneNumberLen 0322  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 6402  
